{
    "axis2-java_087b358": {
        "bug_id": "axis2-java_087b358",
        "commit": "https://github.com/apache/axis2-java/commit/087b35801615d613f017ce5345cf78acdf7428a6",
        "file": [
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/axis2-java/blob/087b35801615d613f017ce5345cf78acdf7428a6/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=087b35801615d613f017ce5345cf78acdf7428a6",
                "deletions": 27,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "patch": "@@ -39,11 +39,9 @@\n public class AddressingOutHandler extends AddressingHandler {\n \n \n-    OMNamespace addressingNamespaceObject;\n-    String addressingNamespace;\n-\n-\n     public void invoke(MessageContext msgContext) throws AxisFault {\n+        OMNamespace addressingNamespaceObject = null;\n+        String addressingNamespace = null;\n \n         Object addressingVersionFromCurrentMsgCtxt = msgContext.getProperty(WS_ADDRESSING_VERSION);\n         if (addressingVersionFromCurrentMsgCtxt != null) {\n@@ -87,28 +85,28 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n         // processing WSA To\n         EndpointReference epr = messageContextOptions.getTo();\n-        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, envelope)) {\n+        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, envelope, addressingNamespaceObject)) {\n \n             String address = epr.getAddress();\n             if (!\"\".equals(address) && address != null) {\n                 SOAPHeaderBlock toHeaderBlock = envelope.addHeaderBlock(WSA_TO, addressingNamespaceObject);\n                 toHeaderBlock.setText(address);\n             }\n \n-            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader );\n-            processReferenceInformation(epr.getAllReferenceProperties(), soapHeader);\n+            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader, addressingNamespaceObject);\n+            processReferenceInformation(epr.getAllReferenceProperties(), soapHeader, addressingNamespaceObject);\n \n-            addToHeader(epr, soapHeader);\n+            addToHeader(epr, soapHeader, addressingNamespaceObject, addressingNamespace);\n         }\n \n         // processing WSA Action\n         String action = messageContextOptions.getAction();\n-        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, envelope)) {\n-            processStringInfo(action, WSA_ACTION, envelope);\n+        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, envelope, addressingNamespaceObject)) {\n+            processStringInfo(action, WSA_ACTION, envelope, addressingNamespaceObject);\n         }\n \n         // processing WSA replyTo\n-        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, envelope)) {\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, envelope, addressingNamespaceObject)) {\n             epr = messageContextOptions.getReplyTo();\n             if (epr == null) {//optional\n                 // setting anonymous URI. Defaulting to Final.\n@@ -124,33 +122,33 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n                 epr.addReferenceParameter(new QName(Constants.AXIS2_NAMESPACE_URI,\n                         Constants.SERVICE_GROUP_ID, Constants.AXIS2_NAMESPACE_PREFIX), serviceGroupContextId);\n             }\n-            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope, addressingNamespaceObject, addressingNamespace);\n         }\n \n         epr = messageContextOptions.getFrom();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope, addressingNamespaceObject, addressingNamespace);\n         }\n \n         epr = messageContextOptions.getFaultTo();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope, addressingNamespaceObject, addressingNamespace);\n         }\n \n         String messageID = messageContextOptions.getMessageId();\n-        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, envelope)) {//optional\n-            processStringInfo(messageID, WSA_MESSAGE_ID, envelope);\n+        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, envelope, addressingNamespaceObject)) {//optional\n+            processStringInfo(messageID, WSA_MESSAGE_ID, envelope, addressingNamespaceObject);\n         }\n \n-        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, envelope)) {\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, envelope, addressingNamespaceObject)) {\n             RelatesTo relatesTo = messageContextOptions.getRelatesTo();\n             OMElement relatesToHeader = null;\n \n             if (relatesTo != null) {\n                 relatesToHeader =\n                         processStringInfo(relatesTo.getValue(),\n                                 WSA_RELATES_TO,\n-                                envelope);\n+                                envelope, addressingNamespaceObject);\n             }\n \n             if (relatesToHeader != null)\n@@ -173,7 +171,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n     private OMElement processStringInfo(String value,\n                                         String type,\n-                                        SOAPEnvelope soapEnvelope) {\n+                                        SOAPEnvelope soapEnvelope, OMNamespace addressingNamespaceObject) {\n         if (!\"\".equals(value) && value != null) {\n             SOAPHeaderBlock soapHeaderBlock =\n                     soapEnvelope.addHeaderBlock(type, addressingNamespaceObject);\n@@ -186,8 +184,8 @@ private OMElement processStringInfo(String value,\n \n     protected void addToSOAPHeader(EndpointReference epr,\n                                    String type,\n-                                   SOAPEnvelope envelope) {\n-        if (epr == null || isAddressingHeaderAlreadyAvailable(type, envelope)) {\n+                                   SOAPEnvelope envelope, OMNamespace addressingNamespaceObject, String addressingNamespace) {\n+        if (epr == null || isAddressingHeaderAlreadyAvailable(type, envelope, addressingNamespaceObject)) {\n             return;\n         }\n \n@@ -204,7 +202,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n             addressElement.setText(address);\n         }\n \n-        addToHeader(epr, soapHeaderBlock);\n+        addToHeader(epr, soapHeaderBlock, addressingNamespaceObject, addressingNamespace);\n \n \n         Map referenceParameters = epr.getAllReferenceParameters();\n@@ -214,7 +212,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n                             EPR_REFERENCE_PARAMETERS,\n                             addressingNamespaceObject);\n             soapHeaderBlock.addChild(reference);\n-            processReferenceInformation(referenceParameters, reference);\n+            processReferenceInformation(referenceParameters, reference, addressingNamespaceObject);\n \n         }\n \n@@ -226,14 +224,14 @@ protected void addToSOAPHeader(EndpointReference epr,\n                                 Submission.EPR_REFERENCE_PROPERTIES,\n                                 addressingNamespaceObject);\n                 envelope.getHeader().addChild(reference);\n-                processReferenceInformation(referenceParameters, reference);\n+                processReferenceInformation(referenceParameters, reference, addressingNamespaceObject);\n             }\n \n         }\n \n     }\n \n-    private void addToHeader(EndpointReference epr, OMElement parentElement) {\n+    private void addToHeader(EndpointReference epr, OMElement parentElement, OMNamespace addressingNamespaceObject, String addressingNamespace) {\n \n         if (addressingNamespace.equals(Submission.WSA_NAMESPACE)) {\n             QName portType = epr.getPortType();\n@@ -273,7 +271,7 @@ private void addToHeader(EndpointReference epr, OMElement parentElement) {\n      *\n      * @param referenceInformation\n      */\n-    private void processReferenceInformation(Map referenceInformation, OMElement parent) {\n+    private void processReferenceInformation(Map referenceInformation, OMElement parent, OMNamespace addressingNamespaceObject) {\n         if (referenceInformation != null && parent != null) {\n             Iterator iterator = referenceInformation.keySet().iterator();\n             while (iterator.hasNext()) {\n@@ -290,7 +288,7 @@ private void processReferenceInformation(Map referenceInformation, OMElement par\n         }\n     }\n \n-    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPEnvelope envelope) {\n+    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject) {\n         boolean isAvail = envelope.getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n         if(!isAvail && envelope.getHeader() != null){\n             // check in headers too",
                "raw_url": "https://github.com/apache/axis2-java/raw/087b35801615d613f017ce5345cf78acdf7428a6/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "sha": "211f2a4f42aa267a71ad77dfc7e55c249584f4e0",
                "status": "modified"
            }
        ],
        "message": "setting the instance variables to null at the end of invoke causes NPE in ThreadingTest. Basically it means that the instance variables are shared across threads (which is a bad thing!). So passing them around as parameters for now (need to check with Eran)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@359138 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/36d77f32a0deced070519f4d8ae5cf8cc24d15d2",
        "patched_files": [
            "AddressingOutHandler.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AddressingOutHandlerTest.java"
        ]
    },
    "axis2-java_2886594": {
        "bug_id": "axis2-java_2886594",
        "commit": "https://github.com/apache/axis2-java/commit/2886594a1bfde18ec5ba0c39408e9790e710d28d",
        "file": [
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/axis2-java/blob/2886594a1bfde18ec5ba0c39408e9790e710d28d/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=2886594a1bfde18ec5ba0c39408e9790e710d28d",
                "deletions": 6,
                "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "patch": "@@ -316,10 +316,13 @@ EndpointDescription updateEndpointDescription(Class sei, QName portQName,\n \n     private Class getEndpointSEI(QName portQName) {\n         Class endpointSEI = null;\n-        EndpointInterfaceDescription endpointInterfaceDesc =\n-                getEndpointDescription(portQName).getEndpointInterfaceDescription();\n-        if (endpointInterfaceDesc != null) {\n-            endpointSEI = endpointInterfaceDesc.getSEIClass();\n+        EndpointDescription endpointDesc = getEndpointDescription(portQName);\n+        if (endpointDesc != null) {\n+            EndpointInterfaceDescription endpointInterfaceDesc = \n+                endpointDesc.getEndpointInterfaceDescription();\n+            if (endpointInterfaceDesc != null ) {\n+                endpointSEI = endpointInterfaceDesc.getSEIClass();\n+            }\n         }\n         return endpointSEI;\n     }\n@@ -546,8 +549,28 @@ ClientConfigurationFactory getClientConfigurationFactory() {\n     * @see org.apache.axis2.jaxws.description.ServiceDescription#getServiceClient(javax.xml.namespace.QName)\n     */\n     public ServiceClient getServiceClient(QName portQName) {\n-        // TODO: RAS if no portQName found\n-        return getEndpointDescription(portQName).getServiceClient();\n+        ServiceClient returnServiceClient = null;\n+        if (!DescriptionUtils.isEmpty(portQName)) {\n+            EndpointDescription endpointDesc = getEndpointDescription(portQName);\n+            if (endpointDesc != null) {\n+                returnServiceClient = endpointDesc.getServiceClient();\n+            }\n+            else {\n+                // Couldn't find Endpoint Description for port QName\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Could not find portQName: \" + portQName \n+                            + \" under ServiceDescription: \" + toString());\n+                }\n+            }\n+        }\n+        else {\n+            // PortQName is empty\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"PortQName agrument is invalid; it can not be null or an empty string: \" + portQName);\n+            }\n+        }\n+        \n+        return returnServiceClient;\n     }\n \n     /* (non-Javadoc)",
                "raw_url": "https://github.com/apache/axis2-java/raw/2886594a1bfde18ec5ba0c39408e9790e710d28d/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "sha": "1cf652259d391f4a59014d2d4ea89ed4590890ca",
                "status": "modified"
            }
        ],
        "message": "Add a few NPE guards\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@527551 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/9393d572ed4ffb5c9ca7f6ee42c51955e4da95d5",
        "patched_files": [
            "ServiceDescriptionImpl.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "ServiceDescriptionImplTests.java"
        ]
    },
    "axis2-java_2c30aa9": {
        "bug_id": "axis2-java_2c30aa9",
        "commit": "https://github.com/apache/axis2-java/commit/2c30aa9e00ec0912a0eacbd9287b9ea41e21685b",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/axis2-java/blob/2c30aa9e00ec0912a0eacbd9287b9ea41e21685b/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java?ref=2c30aa9e00ec0912a0eacbd9287b9ea41e21685b",
                "deletions": 5,
                "filename": "modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java",
                "patch": "@@ -372,11 +372,15 @@ public AxisService getAxisService(Definition wsdlDefinition)\n                     addPolicyElements(PolicyInclude.OUTPUT_POLICY,\n                             outputPolicies, outputPolicyInclude);\n \n-                    // BindingOutput\n-                    outputPolicies = getPoliciesAsExtElements(wsdl4jBindingOutput\n-                            .getExtensibilityElements());\n-                    addPolicyElements(PolicyInclude.BINDING_OUTPUT_POLICY,\n-                            outputPolicies, outputPolicyInclude);\n+                    if (wsdl4jBindingOutput != null) {\n+                        // BindingOutput\n+                        outputPolicies = getPoliciesAsExtElements(wsdl4jBindingOutput\n+                                .getExtensibilityElements());\n+                        if (outputPolicies != null) {\n+                            addPolicyElements(PolicyInclude.BINDING_OUTPUT_POLICY, \n+                                    outputPolicies, outputPolicyInclude);\n+                        }\n+                    }\n \n                     // wsdl:Message\n                     outputPolicies = getPoliciesAsExtElements(wsdl4jOutputMessage",
                "raw_url": "https://github.com/apache/axis2-java/raw/2c30aa9e00ec0912a0eacbd9287b9ea41e21685b/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java",
                "sha": "2bd25b5a9ee36c1d6c7b6c0d1f7047c61b940ab8",
                "status": "modified"
            }
        ],
        "message": "prevent NPE's\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@377295 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/01e190e17f566f2d7752614171b4fbee04b08218",
        "patched_files": [
            "AxisServiceBuilder.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AxisServiceBuilderTest.java"
        ]
    },
    "axis2-java_2efb7ee": {
        "bug_id": "axis2-java_2efb7ee",
        "commit": "https://github.com/apache/axis2-java/commit/2efb7eebd82e3a053dda4ddcf08474ea3cf46316",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java?ref=2efb7eebd82e3a053dda4ddcf08474ea3cf46316",
                "deletions": 1,
                "filename": "modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java",
                "patch": "@@ -223,7 +223,14 @@ public SOAPMessage getAsSOAPMessage() throws WebServiceException {\n                 while (it.hasNext()) {\n                     Map.Entry entry = (Map.Entry) it.next();\n                     String key = (String) entry.getKey();\n-                    if (entry.getValue() instanceof String) {\n+                    if (entry.getValue() == null) {\n+                        // This is not necessarily a problem; log it and make sure not to NPE\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"  Not added to transport header. header =\" + key + \n+                                      \" because value is null;\");\n+                        }\n+                    }\n+                    else if (entry.getValue() instanceof String) {\n                         // Normally there is one value per key\n                         if (log.isDebugEnabled()) {\n                             log.debug(\"  add transport header. header =\" + key + ",
                "raw_url": "https://github.com/apache/axis2-java/raw/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java",
                "sha": "f25dbd2f10f9b2ec666af7b89b02e82563ebbfdc",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test-resources/log4j.properties",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test-resources/log4j.properties?ref=2efb7eebd82e3a053dda4ddcf08474ea3cf46316",
                "deletions": 1,
                "filename": "modules/jaxws/test-resources/log4j.properties",
                "patch": "@@ -28,7 +28,7 @@ log4j.rootCategory=ERROR, CONSOLE\n # The example below adds debug trace for StAXUtils or jaxws server to \r\n # the axis2.small.log.\r\n # You can add this without changing the root category.\r\n-log4j.category.org.apache.axis2.jaxws.message=DEBUG, SMALL\r\n+#log4j.category.org.apache.axis2.jaxws.message=DEBUG, SMALL\r\n \r\n # Enable the following to get JAXWS TestLogger trace.\r\n #log4j.category.JAXWS-Tests=DEBUG, SMALL\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test-resources/log4j.properties",
                "sha": "77247629490d248f6de58a5d8b13bd2f4a04126f",
                "status": "modified"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/axis2-java/blob/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java?ref=2efb7eebd82e3a053dda4ddcf08474ea3cf46316",
                "deletions": 0,
                "filename": "modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java",
                "patch": "@@ -0,0 +1,60 @@\n+package org.apache.axis2.jaxws.message.impl;\r\n+\r\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements. See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership. The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License. You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied. See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+\r\n+import org.apache.axis2.jaxws.message.Message;\r\n+import org.apache.axis2.jaxws.message.Protocol;\r\n+\r\n+import javax.xml.stream.XMLStreamException;\r\n+import javax.xml.ws.WebServiceException;\r\n+\r\n+import java.util.HashMap;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+/**\r\n+ * Test some low-level specifics of the MessageImpl class.  Note that this is testing specific \r\n+ * low level methods and IS NOT representative of the way MessageImpl should be used.  \r\n+ * The MessageFactory should be used to create MessageImpl instances. \r\n+ */\r\n+public class MessageImplTest extends TestCase {\r\n+\r\n+    /**\r\n+     * Verify that if the TransportHeaders Map contains keys with null values that it doesn't\r\n+     * cause any problems in the getAsSOAPMessage() method.  \r\n+     */\r\n+    public void testGetAsSOAPMessageTransportHeadersWithNullValues() {\r\n+        try {\r\n+            Message msg = new MessageImpl(Protocol.soap11);\r\n+            HashMap map = new HashMap();\r\n+            map.put(\"key1\", null);\r\n+            map.put(\"key2\", null);\r\n+            msg.setMimeHeaders(map);\r\n+            msg.getAsSOAPMessage();\r\n+        } catch (WebServiceException e) {\r\n+            e.printStackTrace();\r\n+            fail(\"Caught unexpected exception \" + e.toString());\r\n+        } catch (XMLStreamException e) {\r\n+            e.printStackTrace();\r\n+            fail(\"Caught unexpected exception \" + e.toString());\r\n+        }\r\n+    }\r\n+\r\n+}\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/2efb7eebd82e3a053dda4ddcf08474ea3cf46316/modules/jaxws/test/org/apache/axis2/jaxws/message/impl/MessageImplTest.java",
                "sha": "f3f170d0362085f83a55720837f3b05720c2c91c",
                "status": "added"
            }
        ],
        "message": "Don't NPE if the transport headers collection contains a null value.  Add test for same.\n\nAlso, turn off debug when running JAXWS tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@817877 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/ac00092cea08112a671bb853d3402c8dde4f84f0",
        "patched_files": [
            "MessageImpl.java",
            "log4j.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "MessageImplTest.java"
        ]
    },
    "axis2-java_34df299": {
        "bug_id": "axis2-java_34df299",
        "commit": "https://github.com/apache/axis2-java/commit/34df299591662d0b995f1d622e7be61cce2d2fc7",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java?ref=34df299591662d0b995f1d622e7be61cce2d2fc7",
                "deletions": 1,
                "filename": "modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java",
                "patch": "@@ -418,7 +418,10 @@ protected void processNamespaceData(OMElement node, boolean isSOAPElement) {\n             if (node.getNamespace() != null &&\r\n                     !node.getNamespace().getName().equals(SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI) &&\r\n                     !node.getNamespace().getName().equals(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI)) {\r\n-                throw new SOAPProcessingException(\"invalid SOAP namespace URI\", getSenderFaultCode());\r\n+                throw new SOAPProcessingException(\"invalid SOAP namespace URI. \" +\r\n+                        \"Only \" + SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI +\r\n+                        \" and \"+ SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI +\r\n+                        \" are supported.\", SOAP12Constants.FAULT_CODE_SENDER);\r\n             }\r\n         }\r\n \r",
                "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/src/org/apache/axis2/soap/impl/llom/builder/StAXSOAPModelBuilder.java",
                "sha": "c448e1e8163b02220e740ee57494feacaf7b5c4f",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml?ref=34df299591662d0b995f1d622e7be61cce2d2fc7",
                "deletions": 0,
                "filename": "modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml",
                "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\"?>\r\n+<soap:Envelope\r\n+xmlns:soap=\"http://www.w3.org/2001/12/soap-envelope\"\r\n+soap:encodingStyle=\"http://www.w3.org/2001/12/soap-encoding\">\r\n+\r\n+  <soap:Body xmlns:m=\"http://www.stock.org/stock\">\r\n+    <m:GetStockPrice>\r\n+      <m:StockName>IBM</m:StockName>\r\n+    </m:GetStockPrice>\r\n+  </soap:Body>\r\n+\r\n+</soap:Envelope>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test-resources/soap/wrongEnvelopeNamespace.xml",
                "sha": "850ef8ab0446b39d8556ebd442681530f393e685",
                "status": "added"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java?ref=34df299591662d0b995f1d622e7be61cce2d2fc7",
                "deletions": 8,
                "filename": "modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java",
                "patch": "@@ -16,8 +16,8 @@\n package org.apache.axis2.om.infoset;\n \n import org.apache.axis2.om.OMAbstractFactory;\n-import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.OMDocument;\n+import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.impl.OMOutputImpl;\n import org.apache.axis2.om.impl.llom.builder.StAXOMBuilder;\n import org.apache.axis2.om.impl.llom.factory.OMXMLBuilderFactory;\n@@ -34,13 +34,7 @@\n import javax.xml.stream.XMLInputFactory;\n import javax.xml.stream.XMLOutputFactory;\n import javax.xml.stream.XMLStreamWriter;\n-import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n+import java.io.*;\n \n public class XMLConformanceUnit extends XMLTestCase implements EntityResolver {\n \n@@ -59,6 +53,7 @@ public void testSingleFileConformance()\n \n         System.out.println(\"XML File:\" + filePath);\n         XMLInputFactory factory = XMLInputFactory.newInstance();\n+//        factory.setProperty(\"report-cdata-event\", Boolean.TRUE);\n         StAXOMBuilder staxOMBuilder = OMXMLBuilderFactory.\n                 createStAXOMBuilder(OMAbstractFactory.getOMFactory(),\n                         factory.createXMLStreamReader(",
                "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/om/infoset/XMLConformanceUnit.java",
                "sha": "d97e514b609e943759c235dd0c50488c2f079cc4",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/axis2-java/blob/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java?ref=34df299591662d0b995f1d622e7be61cce2d2fc7",
                "deletions": 0,
                "filename": "modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java",
                "patch": "@@ -0,0 +1,53 @@\n+package org.apache.axis2.soap;\r\n+\r\n+import junit.framework.TestCase;\r\n+import org.apache.axis2.om.impl.llom.builder.StAXBuilder;\r\n+import org.apache.axis2.soap.impl.llom.SOAPProcessingException;\r\n+import org.apache.axis2.soap.impl.llom.builder.StAXSOAPModelBuilder;\r\n+\r\n+import javax.xml.stream.XMLInputFactory;\r\n+import javax.xml.stream.XMLStreamReader;\r\n+import java.io.FileInputStream;\r\n+import java.io.FileNotFoundException;\r\n+\r\n+/*\r\n+ * Copyright 2001-2004 The Apache Software Foundation.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ *\r\n+ * @author : Eran Chinthaka (chinthaka@apache.org)\r\n+ */\r\n+\r\n+public class WrongEnvelopeNamespaceTester extends TestCase {\r\n+    public void testCode() {\r\n+        try {\r\n+            String filename = \"test-resources/soap/wrongEnvelopeNamespace.xml\";\r\n+            XMLStreamReader xmlr = XMLInputFactory.newInstance()\r\n+                    .createXMLStreamReader(new FileInputStream(filename));\r\n+            StAXBuilder builder = new StAXSOAPModelBuilder(xmlr, null); //exception here\r\n+            fail(\"Builder must fail here due to wrong SOAP namespace\");\r\n+        } catch (SOAPProcessingException e) {\r\n+            assertTrue(true);\r\n+        } catch (FileNotFoundException e) {\r\n+            fail(\"Only SOAPProcessingException can be thrown here\");\r\n+        }catch (Exception e) {\r\n+            e.printStackTrace();\r\n+            fail(\"Only SOAPProcessingException can be thrown here\");\r\n+        }\r\n+    }\r\n+\r\n+    public static void main(String[] args) {\r\n+        WrongEnvelopeNamespaceTester tester = new WrongEnvelopeNamespaceTester();\r\n+        tester.testCode();\r\n+    }\r\n+}\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/34df299591662d0b995f1d622e7be61cce2d2fc7/modules/xml/test/org/apache/axis2/soap/WrongEnvelopeNamespaceTester.java",
                "sha": "f668d9537cb715096a43f67e6254979c71bd337d",
                "status": "added"
            }
        ],
        "message": "- fixing a bug which causes a NPE when a wrong SOAP envelope is recd.\n- test case for that\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@264164 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/e6c43598188bdef01a2d05d2a406acfc8ed0dda3",
        "patched_files": [
            "StAXSOAPModelBuilder.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "StAXSOAPModelBuilderTest.java"
        ]
    },
    "axis2-java_363d53c": {
        "bug_id": "axis2-java_363d53c",
        "commit": "https://github.com/apache/axis2-java/commit/363d53c9977d25b11ae40ce5a135d58e7eb833af",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi-tests/src/test/java/OSGiTest.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/osgi-tests/src/test/java/OSGiTest.java?ref=363d53c9977d25b11ae40ce5a135d58e7eb833af",
                "deletions": 2,
                "filename": "modules/osgi-tests/src/test/java/OSGiTest.java",
                "patch": "@@ -107,8 +107,7 @@ public void test() throws Exception {\n             OMElement result = serviceClient.sendReceive(payload);\n             assertEquals(\"getVersionResponse\", result.getLocalName());\n             // Stop the Axis2 bundle explicitly here so that we can test that it cleanly shuts down\n-            // TODO: doesn't work yet; see AXIS2-5646\n-//            getAxis2Bundle(container).stop();\n+            getAxis2Bundle(container).stop();\n         } finally {\n             container.stop();\n         }",
                "raw_url": "https://github.com/apache/axis2-java/raw/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi-tests/src/test/java/OSGiTest.java",
                "sha": "b75ca32e97b2cfaa48903009dbef5c4f7c080390",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis2-java/blob/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java?ref=363d53c9977d25b11ae40ce5a135d58e7eb833af",
                "deletions": 0,
                "filename": "modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java",
                "patch": "@@ -54,4 +54,11 @@ public void init(ServletConfig servletConfig) throws ServletException {\n         }\n \n     }\n+\n+    @Override\n+    public void destroy() {\n+        // Do nothing. This prevents AxisServlet from terminating the configuration context.\n+        // The configuration context is terminated by OSGiConfigurationContextFactory, and\n+        // invoking the terminate method twice (potentially concurrently) causes problems.\n+    }\n }",
                "raw_url": "https://github.com/apache/axis2-java/raw/363d53c9977d25b11ae40ce5a135d58e7eb833af/modules/osgi/src/org/apache/axis2/osgi/OSGiAxisServlet.java",
                "sha": "f9493c99fcfc7685acd77fe65331ad512e4553e2",
                "status": "modified"
            }
        ],
        "message": "AXIS2-5646: Fixed some NPEs that occur when stopping the Axis2 OSGi bundle.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1593765 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/0e667021489884e28c39e4f6e85c89c419bccd5c",
        "patched_files": [
            "OSGiAxisServlet.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "OSGiTest.java"
        ]
    },
    "axis2-java_3f4de31": {
        "bug_id": "axis2-java_3f4de31",
        "commit": "https://github.com/apache/axis2-java/commit/3f4de3105947c9525ac77f37b7d9430ed1f031d8",
        "file": [
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resBaseStrutFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml",
                "sha": "6affbedd72d32ce16f03126462b7240ce9a1c9ca",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resExtendedStructFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml",
                "sha": "78069365b6efce9ca3a5306b4bc1daeeb9c2f2c9",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resMultipleFaults1.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml",
                "sha": "32332c4b1c9b47ad41f354d70e416e6a9b298a07",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resMultipleFaults2.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml",
                "sha": "f09c81feb09d57373046e25abd1a2814b71c24d9",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resSoapStructFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml",
                "sha": "1f8db5952b5b2ed7d2b9ddd880b0a4471a5244cb",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml",
                "sha": "981546c922c977b14080503854104cc4347bb363",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1FloatRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml",
                "sha": "a61d026227436910fb861c9f18ba186f25475656",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml",
                "sha": "743bab8718b4975a92620d3954d0fd4c098ba6de",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1IntegerRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml",
                "sha": "97ea17c73b674e7a46ceff2f0ad7f173f634f747",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml",
                "sha": "8d8dc2496a06ef8c81c839222e550f9ddcf1781a",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml",
                "sha": "d4f5263ea126d26b297b9d6b5dfe029c62bfeb0b",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml",
                "sha": "528605af78add6c3c58eae850e4ae482a296b567",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StructRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml",
                "sha": "044498b82666ec9bd78700c4251912725ef76bbd",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml",
                "sha": "2f2761fdc5d27dc5ecfed7a4db0d586ed8c523c7",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml",
                "sha": "2168cf98d8c180cd652c7337b09926283ca4a62f",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml",
                "sha": "5f442bc53c5edcae27a0ebbfa1f034b9b04ef6e2",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml",
                "sha": "5c8b7787c5e22a3234e1874ebba1d540808aadbb",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml",
                "sha": "f09c81feb09d57373046e25abd1a2814b71c24d9",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml",
                "sha": "b5bb77651eb16e410cc55a7afeb2d0767ce37211",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resEmptyFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml",
                "sha": "7adf3a262eab88d9a8c2c1b27a1e2992ce202056",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resIntArray.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml",
                "sha": "5fadd30dad0ed27639836fcf997712bef89c8aae",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml",
                "sha": "eb56f608d176b618b7dc184b35ee36b81b4ecdcd",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml",
                "sha": "6d972cca1bb3a290ce5023f2d9a3a8c80074c840",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml",
                "sha": "b4e8d045c18221e6c4ab0941c4eda7ecf8fa9974",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml",
                "sha": "88585bed552c5ebf5711c650213acb682ae7954b",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resStringFault.xml",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml",
                "sha": "88a1bf84e206ee5e7237a87f17b557c14de30bc5",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java",
                "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java",
                "sha": "a8639649ebba93ed121f1cf1ac9a3ebf02263bc9",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java",
                "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java",
                "sha": "a2635a3fe276a5476dbebc2b90e4557946e26fcc",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java",
                "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java",
                "sha": "84ada44f2dbd92eab44522b7dd0cefe86fe70888",
                "status": "renamed"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/maven.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/maven.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/maven.xml",
                "patch": "@@ -8,6 +8,13 @@\n     xmlns:deploy=\"deploy\"\r\n     xmlns:ant=\"jelly:ant\">\r\n     <j:set var=\"samples.dir\" value=\"target/samples\"/>\r\n+\r\n+    <postGoal name=\"itest:compile\">\r\n+        <mkdir dir=\"target/itest-classes/modules\"/>\r\n+        <copy file=\"../addressing/target/addressing.mar\"\r\n+              tofile=\"target/itest-classes/modules/addressing.mar\"/>\r\n+    </postGoal>\r\n+\r\n     <postGoal name=\"test:compile\">\r\n         <mkdir dir=\"target/test-resources/samples/modules\"/>\r\n         <mkdir dir=\"target/test-resources/repository-client/modules\"/>\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/maven.xml",
                "sha": "3c4a4a956362b656bdc5ab81c4ed41238967697f",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.properties",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/project.properties?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/project.properties",
                "patch": "@@ -0,0 +1,25 @@\n+# -------------------------------------------------------------------\n+# Copyright 2001-2004 The Apache Software Foundation.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -------------------------------------------------------------------\n+\n+maven.repo.remote=http://cvs.apache.org/repository/, http://www.ibiblio.org/maven,http://www.apache.org/dist/java-repository/,http://www.openejb.org/maven\n+maven.multiproject.type=jar\n+\n+maven.itest.resources=${basedir}/itest-resources\n+maven.itest.src=${basedir}/itest\n+maven.itest.includes=**/*.java\n+\n+maven.junit.fork=true\n+maven.junit.jvmargs=-ea",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.properties",
                "sha": "aff99ab3bd17a73f01e0f693e07be1e43aa85456",
                "status": "added"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.xml",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/project.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 0,
                "filename": "modules/integration/project.xml",
                "patch": "@@ -162,6 +162,20 @@\n                 <module>true</module>\r\n             </properties>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>maven-itest-plugin</groupId>\r\n+            <artifactId>maven-itest-plugin</artifactId>\r\n+            <version>1.0</version>\r\n+            <type>plugin</type>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>junit</groupId>\r\n+            <artifactId>junit</artifactId>\r\n+            <version>3.8.1</version>\r\n+                <properties>\r\n+                    <classloader>root</classloader>\r\n+            </properties>\r\n+        </dependency>\r\n \r\n     </dependencies>\r\n \r",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.xml",
                "sha": "b253f88721267b43446081eb93b3573d7f9c63f4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 1,
                "filename": "modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java",
                "patch": "@@ -29,7 +29,7 @@ public SOAPEnvelope sendMsg(Round1ClientUtil util, String epUrl, String soapActi\n             throw new AxisFault(e);\r\n         }\r\n \r\n-        Call call = new Call(\"target/test-resources/intregrationRepo\");\r\n+        Call call = new Call(\"target/itest-resources/intregrationRepo\");\r\n         call.setTo(new EndpointReference(url.toString()));\r\n         call.setSoapAction(soapAction);\r\n         call.setTransportInfo(Constants.TRANSPORT_HTTP, Constants.TRANSPORT_HTTP, false);\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java",
                "sha": "b708d8c8d30225e9c13da17b26a36151e2382999",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "deletions": 1,
                "filename": "modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java",
                "patch": "@@ -79,7 +79,7 @@ public void testEchoXMLSync() throws Exception {\n             method.addChild(value);\n //            reqEnv.getBody().addChild(method);\n \n-            Call call = new Call(\"target/test-resources/intregrationRepo\");\n+            Call call = new Call();\n             EndpointReference targetEPR =\n                     new EndpointReference(\"http://127.0.0.1:\"\n                     + (UtilServer.TESTING_PORT)",
                "raw_url": "https://github.com/apache/axis2-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java",
                "sha": "b5963673e4e72620281c3d8ceab30bb84eddc164",
                "status": "modified"
            }
        ],
        "message": "Moving whitemesa interop tests to a separate maven goal. Please run \"maven itest\" from modules/integration to run that test. i will hook it up better (\"maven all-tests\" from root) tomorrow.\n\nFYI, right now it fails with an NPE. Gayan, PLEASE fix it ASAP!\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@239510 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/512cdf13dcdcf9b4c400f359f91680814866186d",
        "patched_files": [
            "resIntArray.java",
            "Round1FloatRes.java",
            "resBaseStructFault.java",
            "Round1IntArrayRes.java",
            "Round1StringArrayRes.java",
            "resSoapStructFault.java",
            "resMultipleFaults3.java",
            "project.java",
            "resMultipleFaults4.java",
            "resExtendedStructFault.java",
            "Round1FloatArrayRes.java",
            "Round1StringUtilRes.java",
            "resMultipleFaults1.java",
            "Round1VoidUtilRes.java",
            "resEmptyFault.java",
            "Round1StructRes.java",
            "Round1Client.java",
            "Round1IntegerRes.java",
            "resMultiplefaults2.java",
            "resMultipleFaults2.java",
            "maven.java",
            "resBaseStrutFault.java",
            "Round1StructArrayRes.java",
            "resStringFault.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "WhitemesaR4ComplexTest.java",
            "CallUnregisteredServiceTest.java",
            "Round1InteropTest.java",
            "WhitemesaR4SimpleTest.java"
        ]
    },
    "axis2-java_5151e4e": {
        "bug_id": "axis2-java_5151e4e",
        "commit": "https://github.com/apache/axis2-java/commit/5151e4e1791c718614bd18ffe961ab3f13bef76e",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis2-java/blob/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java?ref=5151e4e1791c718614bd18ffe961ab3f13bef76e",
                "deletions": 2,
                "filename": "modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java",
                "patch": "@@ -57,8 +57,11 @@ public AxisOperation findOperation(AxisService service, MessageContext messageCo\n         AxisOperation axisOperation = null;\n         if (localName != null){\n            OMNamespace ns = messageContext.getEnvelope().getSOAPBodyFirstElementNS();\n-           QName qName = new QName(ns.getNamespaceURI(), localName);\n-           axisOperation = service.getOperationByMessageElementQName(qName);\n+           QName qName = null;\n+           if (ns != null) {\n+               qName = new QName(ns.getNamespaceURI(), localName);\n+               axisOperation = service.getOperationByMessageElementQName(qName);\n+           }\n \n            // this is required for services uses the RPC message receiver\n            if (axisOperation == null){",
                "raw_url": "https://github.com/apache/axis2-java/raw/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedDispatcher.java",
                "sha": "0c75700b47ced07f0b6e9d7412db1b8640308f28",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis2-java/blob/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java?ref=5151e4e1791c718614bd18ffe961ab3f13bef76e",
                "deletions": 2,
                "filename": "modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java",
                "patch": "@@ -52,9 +52,12 @@ public AxisOperation findOperation(AxisService service, MessageContext messageCo\n \n         if (axisOperation == null) {\n             OMNamespace ns = messageContext.getEnvelope().getSOAPBodyFirstElementNS();\n-            QName qName = new QName(ns.getNamespaceURI(), localPart);\n-            axisOperation = service.getOperationByMessageElementQName(qName);\n+            if (ns != null) {\n+                QName qName = new QName(ns.getNamespaceURI(), localPart);\n+                axisOperation = service.getOperationByMessageElementQName(qName);\n+            }\n             if (axisOperation == null) {\n+                QName qName = new QName(localPart);\n                 axisOperation = service.getOperation(qName);\n             }\n         }",
                "raw_url": "https://github.com/apache/axis2-java/raw/5151e4e1791c718614bd18ffe961ab3f13bef76e/modules/kernel/src/org/apache/axis2/dispatchers/SOAPMessageBodyBasedOperationDispatcher.java",
                "sha": "d764e52fb2fc84a880b95d0aa0d7d8a5935cb9b8",
                "status": "modified"
            }
        ],
        "message": "Quick fix to avoid NPE.\n\nIf the namespace is not available, then this is an unqualified element and may not have an OMNamespaceImpl.\nIn such cases, the operation lookup strategy should be used.  \n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@636127 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/e95ff3db8bffb2cc359b9e6e59b5b5a3908108f2",
        "patched_files": [
            "SOAPMessageBodyBasedOperationDispatcher.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "SOAPMessageBodyBasedOperationDispatcherTest.java"
        ]
    },
    "axis2-java_5deadb9": {
        "bug_id": "axis2-java_5deadb9",
        "commit": "https://github.com/apache/axis2-java/commit/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9",
        "file": [
            {
                "additions": 205,
                "blob_url": "https://github.com/apache/axis2-java/blob/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java",
                "changes": 205,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java?ref=5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9",
                "deletions": 0,
                "filename": "modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java",
                "patch": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2004,2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.axis2.engine;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+import org.apache.axiom.om.OMAbstractFactory;\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axiom.om.OMFactory;\n+import org.apache.axiom.om.OMNamespace;\n+import org.apache.axiom.soap.SOAP11Constants;\n+import org.apache.axiom.soap.SOAP12Constants;\n+import org.apache.axiom.soap.SOAPEnvelope;\n+import org.apache.axiom.soap.SOAPFactory;\n+\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.Constants;\n+import org.apache.axis2.addressing.EndpointReference;\n+import org.apache.axis2.client.OperationClient;\n+import org.apache.axis2.client.Options;\n+import org.apache.axis2.client.ServiceClient;\n+import org.apache.axis2.context.ConfigurationContext;\n+import org.apache.axis2.context.ConfigurationContextFactory;\n+import org.apache.axis2.context.MessageContext;\n+import org.apache.axis2.context.OperationContext;\n+import org.apache.axis2.context.ServiceContext;\n+import org.apache.axis2.description.AxisService;\n+import org.apache.axis2.description.ClientUtils;\n+import org.apache.axis2.description.TransportInDescription;\n+import org.apache.axis2.description.TransportOutDescription;\n+import org.apache.axis2.engine.util.TestConstants;\n+import org.apache.axis2.integration.UtilServer;\n+import org.apache.axis2.integration.UtilServerBasedTestCase;\n+import org.apache.axis2.util.Utils;\n+import org.apache.axis2.wsdl.WSDLConstants;\n+\n+import javax.xml.namespace.QName;\n+\n+\n+public class UsingTransportTest extends UtilServerBasedTestCase implements TestConstants\n+{\n+\n+    QName assumedServiceName = new QName(\"AnonymousService\");\n+\n+\n+    private AxisService service = null;\n+\n+\n+    public static Test suite()\n+    {\n+        return getTestSetup(new TestSuite(UsingTransportTest.class));\n+    }\n+\n+    protected void setUp() throws Exception \n+    {\n+        service = Utils.createSimpleService(TestConstants.serviceName, Echo.class.getName(), TestConstants.operationName); \n+        UtilServer.deployService(service);\n+    }\n+\n+    protected void tearDown() throws Exception \n+    {\n+        UtilServer.unDeployService(TestConstants.serviceName);\n+        UtilServer.unDeployClientService();\n+    }\n+\n+\n+    public void testValidTransport() throws AxisFault \n+    {\n+        String title = \"testValidTransport(): \";\n+\n+        OMElement payload = createEnvelope();\n+\n+        ConfigurationContext configCtx = ConfigurationContextFactory.createConfigurationContextFromFileSystem(null, null); \n+\n+        ServiceClient servClient = new ServiceClient(configCtx, null);\n+\n+        Options options = new Options();\n+        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI); \n+        options.setTo(targetEPR);\n+        options.setTransportInProtocol(Constants.TRANSPORT_HTTP);\n+        servClient.setOptions(options);\n+\n+        OperationClient opClinet = servClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n+        String ocType = opClinet.getClass().getName();\n+        System.out.println(\"\\n\"+title+\"Using OperationClient [\"+ocType+\"]\");\n+        opClinet.addMessageContext(prepareTheSOAPEnvelope(payload, options));\n+        System.out.println(title+\"Invoking OperationClient [\"+ocType+\"] execute()\");\n+        opClinet.execute(true);\n+\n+        SOAPEnvelope result = opClinet.getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE).getEnvelope();\n+\n+        assertEquals(\"SOAP Version received is not compatible\",\n+                     SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI,\n+                     result.getNamespace().getNamespaceURI());\n+    }\n+\n+\n+    public void testInvalidTransport() throws AxisFault \n+    {\n+        String title = \"testInvalidTransport(): \";\n+        OMElement payload = createEnvelope();\n+\n+        ConfigurationContext configCtx = ConfigurationContextFactory.createConfigurationContextFromFileSystem(null, null); \n+\n+        ServiceClient servClient = new ServiceClient(configCtx, null);\n+\n+        Options options = new Options();\n+        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI); \n+\n+        // set the endpoint with \"htp\" instead of \"http\" \n+        EndpointReference invalidTargetEPR = new EndpointReference(\"htp://127.0.0.1:5556/axis2/services/EchoXMLService/echoOMElement\");\n+        options.setTo(invalidTargetEPR);\n+\n+        servClient.setOptions(options);\n+\n+        OperationClient opClinet = servClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n+        String ocType = opClinet.getClass().getName();\n+        System.out.println(title+\"Using OperationClient [\"+ocType+\"]\");\n+\n+        MessageContext msgCtx = prepareTheSOAPEnvelope(payload, options);\n+\n+        opClinet.addMessageContext(msgCtx);\n+\n+        try\n+        {\n+            System.out.println(title+\"Invoking OperationClient [\"+ocType+\"] execute()\");\n+            opClinet.execute(true);\n+        }\n+        catch (Exception ex)\n+        {\n+            String exName = ex.getClass().getName();\n+\n+            System.out.println(title+\"Expecting an exception of type [org.apache.axis2.AxisFault].   Caught exception  [\"+exName+\"]    error [\"+ex.getMessage()+\"]\"); \n+            ex.printStackTrace();\n+\n+            assertTrue(\"Expecting an exception of type [org.apache.axis2.AxisFault]\",(ex instanceof org.apache.axis2.AxisFault));\n+        }\n+\n+    }\n+\n+\n+    private MessageContext prepareTheSOAPEnvelope(OMElement toSend, Options options) throws AxisFault \n+    {\n+        MessageContext msgctx = new MessageContext();\n+\n+        SOAPFactory sf = getSOAPFactory(options);\n+        SOAPEnvelope se = sf.getDefaultEnvelope();\n+\n+        if (toSend != null)\n+        {\n+            se.getBody().addChild(toSend);\n+        }\n+\n+        msgctx.setEnvelope(se);\n+        return msgctx;\n+    }\n+\n+\n+    private SOAPFactory getSOAPFactory(Options options)\n+    {\n+        String soapVersionURI = options.getSoapVersionURI();\n+\n+        if (SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI.equals(soapVersionURI))\n+        {\n+            return OMAbstractFactory.getSOAP12Factory();\n+        }\n+        else\n+        {\n+            // if its not SOAP 1.2 just assume SOAP 1.1\n+            return OMAbstractFactory.getSOAP11Factory();\n+        }\n+    }\n+\n+\n+    private OMElement createEnvelope()\n+    {\n+        OMFactory fac = OMAbstractFactory.getOMFactory();\n+        OMNamespace omNs = fac.createOMNamespace(\"http://localhost/my\", \"my\");\n+\n+        OMElement method = fac.createOMElement(\"echoOMElement\", omNs);\n+\n+        OMElement value = fac.createOMElement(\"myValue\", omNs);\n+        value.addChild(fac.createOMText(value, \"Isaac Asimov, The Foundation Trilogy\")); \n+\n+        method.addChild(value);\n+\n+        return method;\n+    }\n+\n+\n+}",
                "raw_url": "https://github.com/apache/axis2-java/raw/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/integration/test/org/apache/axis2/engine/UsingTransportTest.java",
                "sha": "20e314b0ee39566547ecab5e23ee48cdd6ce9290",
                "status": "added"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis2-java/blob/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/kernel/src/org/apache/axis2/description/ClientUtils.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/description/ClientUtils.java?ref=5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9",
                "deletions": 1,
                "filename": "modules/kernel/src/org/apache/axis2/description/ClientUtils.java",
                "patch": "@@ -82,7 +82,9 @@ public static synchronized TransportInDescription inferInTransport(AxisConfigura\n                 }\n             } else {\n                 //assume listener transport as sender transport\n-                listenerTransportProtocol = msgCtxt.getTransportOut().getName().getLocalPart();\n+                if (msgCtxt.getTransportOut() != null) {\n+                    listenerTransportProtocol = msgCtxt.getTransportOut().getName().getLocalPart();\n+                }\n             }\n         }\n         TransportInDescription transportIn = null;\n@@ -111,6 +113,7 @@ public static synchronized TransportInDescription inferInTransport(AxisConfigura\n                 }\n             }\n         }\n+\n         return transportIn;\n     }\n }",
                "raw_url": "https://github.com/apache/axis2-java/raw/5deadb9feb1e96b3d9fc38d23e529edb17e3f4b9/modules/kernel/src/org/apache/axis2/description/ClientUtils.java",
                "sha": "e25a59104a6f78a00bf6f5523c533fa980229477",
                "status": "modified"
            }
        ],
        "message": "AXIS2-1806\nContributor: Ann Robinson\nAdded test case and fixed an NPE when and invalid transport protocol was specified.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@481877 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/5b0aaf6567ab44572ac33eb92062d856a662029a",
        "patched_files": [
            "ClientUtils.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "UsingTransportTest.java"
        ]
    },
    "axis2-java_6b50f8d": {
        "bug_id": "axis2-java_6b50f8d",
        "commit": "https://github.com/apache/axis2-java/commit/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis2-java/blob/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335",
                "deletions": 3,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "patch": "@@ -28,16 +28,16 @@\n import org.apache.ws.commons.om.OMAbstractFactory;\n import org.apache.ws.commons.om.OMElement;\n import org.apache.ws.commons.om.OMNamespace;\n-import org.apache.ws.commons.om.OMNode;\n import org.apache.ws.commons.soap.SOAPEnvelope;\n+import org.apache.ws.commons.soap.SOAPFactory;\n import org.apache.ws.commons.soap.SOAPHeader;\n import org.apache.ws.commons.soap.SOAPHeaderBlock;\n import org.apache.wsdl.WSDLConstants;\n \n import javax.xml.namespace.QName;\n+import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.ArrayList;\n \n public class AddressingOutHandler extends AddressingHandler {\n \n@@ -88,6 +88,10 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         Options messageContextOptions = msgContext.getOptions();\n         SOAPEnvelope envelope = msgContext.getEnvelope();\n         SOAPHeader soapHeader = envelope.getHeader();\n+        if (soapHeader == null) {\n+            SOAPFactory soapFac = msgContext.isSOAP11() ? OMAbstractFactory.getSOAP11Factory() : OMAbstractFactory.getSOAP12Factory();\n+            soapHeader = soapFac.createSOAPHeader(envelope);\n+        }\n \n         // by this time, we definitely have some addressing information to be sent. This is because,\n         // we have tested at the start of this whether messageInformationHeaders are null or not.\n@@ -239,7 +243,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n         // add epr address\n         String address = epr.getAddress();\n         if (!\"\".equals(address) && address != null) {\n-            OMElement addressElement = OMAbstractFactory.getOMFactory().createOMElement(EPR_ADDRESS,addressingNamespaceObject, soapHeaderBlock);\n+            OMElement addressElement = OMAbstractFactory.getOMFactory().createOMElement(EPR_ADDRESS, addressingNamespaceObject, soapHeaderBlock);\n             addressElement.setText(address);\n         }\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "sha": "5dbaef82c559d34d09fb83d980bacb94ef4640c7",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis2-java/blob/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java?ref=6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335",
                "deletions": 4,
                "filename": "modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java",
                "patch": "@@ -16,15 +16,14 @@\n \n package org.apache.axis2.soap.impl.dom;\n \n+import org.apache.axis2.om.impl.dom.ElementImpl;\n+import org.apache.axis2.om.impl.dom.ParentNode;\n import org.apache.ws.commons.om.OMConstants;\n import org.apache.ws.commons.om.OMElement;\n import org.apache.ws.commons.om.OMException;\n import org.apache.ws.commons.om.OMNode;\n import org.apache.ws.commons.om.OMXMLParserWrapper;\n import org.apache.ws.commons.om.impl.OMNodeEx;\n-import org.apache.axis2.om.impl.dom.ElementImpl;\n-import org.apache.axis2.om.impl.dom.NamespaceImpl;\n-import org.apache.axis2.om.impl.dom.ParentNode;\n import org.apache.ws.commons.om.impl.llom.OMSerializerUtil;\n import org.apache.ws.commons.om.impl.llom.serialize.StreamWriterToContentHandlerConverter;\n import org.apache.ws.commons.soap.SOAP12Constants;\n@@ -161,7 +160,7 @@ protected void putExceptionToSOAPFault(Exception e)\n \t\t}\n \t\tOMElement faultDetailEnty = new ElementImpl((ParentNode) this,\n \t\t\t\tSOAPConstants.SOAP_FAULT_DETAIL_EXCEPTION_ENTRY,\n-\t\t\t\t(NamespaceImpl) this.namespace);\n+\t\t\t\tnull);\n \t\tfaultDetailEnty.setText(sw.getBuffer().toString());\n \t}\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/6b50f8da78e4a7ad6ef8c6c2a9ca1af2e2c89335/modules/doom/src/org/apache/axis2/soap/impl/dom/SOAPFaultImpl.java",
                "sha": "18641795c98f91a5e115342cfab18d3f8942ea38",
                "status": "modified"
            }
        ],
        "message": "- Fixing a possible NPE in AddressingOut\n- We were adding SOAP namespace for the exception element of Fault. Removing that too. I did this change to om separately. Now doing this for DOOM as well.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@376203 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/abf932f845853546000102e147662c202e9eb6c4",
        "patched_files": [
            "AddressingOutHandler.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AddressingOutHandlerTest.java"
        ]
    },
    "axis2-java_6c7577a": {
        "bug_id": "axis2-java_6c7577a",
        "commit": "https://github.com/apache/axis2-java/commit/6c7577a5fdadd906873193be38d54b3805257691",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/6c7577a5fdadd906873193be38d54b3805257691/modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java?ref=6c7577a5fdadd906873193be38d54b3805257691",
                "deletions": 1,
                "filename": "modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java",
                "patch": "@@ -122,7 +122,8 @@ public InputSource resolveEntity(String publicId, String systemId) throws SAXExc\n                     XmlSchema key = null;\n                     for (Iterator iter = schemaToInputSourceMap.keySet().iterator();iter.hasNext();) {\n                         key = (XmlSchema) iter.next();\n-                        if (key.getTargetNamespace().equals(publicId)) {\n+                        String nsp = key.getTargetNamespace();\n+                        if (nsp != null && nsp.equals(publicId)) {\n \n                             // when returning the input stream we have to always return a new\n                             // input stream.",
                "raw_url": "https://github.com/apache/axis2-java/raw/6c7577a5fdadd906873193be38d54b3805257691/modules/jaxbri/src/org/apache/axis2/jaxbri/CodeGenerationUtility.java",
                "sha": "2af55f38cbf89262123c7296bed1083438c436b7",
                "status": "modified"
            }
        ],
        "message": "fix for AXIS2-3634 - NullPointerException during codegen when using JaxB RI databinding\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@639120 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/0edb4322a4a35569d43c39d6373940d9d0a71578",
        "patched_files": [
            "CodeGenerationUtility.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "CodeGenerationUtilityTest.java"
        ]
    },
    "axis2-java_6da7e27": {
        "bug_id": "axis2-java_6da7e27",
        "commit": "https://github.com/apache/axis2-java/commit/6da7e27cd6a8a7169941cca646479378e9f007b7",
        "file": [
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "changes": 57,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 25,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "patch": "@@ -21,11 +21,13 @@\n import org.apache.axis2.addressing.AddressingConstants;\n import org.apache.axis2.addressing.EndpointReference;\n import org.apache.axis2.addressing.MessageInformationHeaders;\n+import org.apache.axis2.addressing.RelatesTo;\n import org.apache.axis2.addressing.ServiceName;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.om.OMAbstractFactory;\n import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.OMNamespace;\n+import org.apache.axis2.soap.SOAPEnvelope;\n import org.apache.axis2.soap.SOAPHeader;\n import org.apache.axis2.soap.SOAPHeaderBlock;\n import org.apache.wsdl.WSDLConstants;\n@@ -86,39 +88,39 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n         MessageInformationHeaders messageInformationHeaders =\n                 msgContext.getMessageInformationHeaders();\n-        SOAPHeader soapHeader = msgContext.getEnvelope().getHeader();\n+        SOAPEnvelope envelope = msgContext.getEnvelope();\n+        SOAPHeader soapHeader = envelope.getHeader();\n \n         // by this time, we definitely have some addressing information to be sent. This is because,\n         // we have tested at the start of this whether messageInformationHeaders are null or not.\n         // So rather than declaring addressing namespace in each and every addressing header, lets\n         // define that in the Header itself.\n-        soapHeader.declareNamespace(addressingNamespaceObject);\n+        envelope.declareNamespace(addressingNamespaceObject);\n \n         // processing WSA To\n         EndpointReference epr = messageInformationHeaders.getTo();\n-        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, soapHeader)) {\n+        if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, envelope)) {\n \n             String address = epr.getAddress();\n             if (!\"\".equals(address) && address != null) {\n-                SOAPHeaderBlock toHeaderBlock = soapHeader.addHeaderBlock(\n-                        WSA_TO, addressingNamespaceObject);\n+                SOAPHeaderBlock toHeaderBlock = envelope.addHeaderBlock(WSA_TO, addressingNamespaceObject);\n                 toHeaderBlock.setText(address);\n             }\n \n-            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader);\n+            processReferenceInformation(epr.getAllReferenceParameters(), soapHeader );\n             processReferenceInformation(epr.getAllReferenceProperties(), soapHeader);\n \n             addToHeader(epr, soapHeader);\n         }\n \n         // processing WSA Action\n         String action = messageInformationHeaders.getAction();\n-        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, soapHeader)) {\n-            processStringInfo(action, WSA_ACTION, soapHeader);\n+        if (action != null && !isAddressingHeaderAlreadyAvailable(WSA_ACTION, envelope)) {\n+            processStringInfo(action, WSA_ACTION, envelope);\n         }\n \n         // processing WSA replyTo\n-        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, soapHeader)) {\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, envelope)) {\n             epr = messageInformationHeaders.getReplyTo();\n             if (epr == null) {//optional\n                 // setting anonymous URI. Defaulting to Final.\n@@ -134,33 +136,33 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n                 epr.addReferenceParameter(new QName(Constants.AXIS2_NAMESPACE_URI,\n                         Constants.SERVICE_GROUP_ID, Constants.AXIS2_NAMESPACE_PREFIX), serviceGroupContextId);\n             }\n-            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, soapHeader);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope);\n         }\n \n         epr = messageInformationHeaders.getFrom();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, soapHeader);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope);\n         }\n \n         epr = messageInformationHeaders.getFaultTo();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, soapHeader);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope);\n         }\n \n         String messageID = messageInformationHeaders.getMessageId();\n-        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, soapHeader)) {//optional\n-            processStringInfo(messageID, WSA_MESSAGE_ID, soapHeader);\n+        if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, envelope)) {//optional\n+            processStringInfo(messageID, WSA_MESSAGE_ID, envelope);\n         }\n \n-        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, soapHeader)) {\n-            org.apache.axis2.addressing.RelatesTo relatesTo = messageInformationHeaders.getRelatesTo();\n+        if (!isAddressingHeaderAlreadyAvailable(WSA_RELATES_TO, envelope)) {\n+            RelatesTo relatesTo = messageInformationHeaders.getRelatesTo();\n             OMElement relatesToHeader = null;\n \n             if (relatesTo != null) {\n                 relatesToHeader =\n                         processStringInfo(relatesTo.getValue(),\n                                 WSA_RELATES_TO,\n-                                soapHeader);\n+                                envelope);\n             }\n \n             if (relatesToHeader != null)\n@@ -179,10 +181,10 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n     private OMElement processStringInfo(String value,\n                                         String type,\n-                                        SOAPHeader soapHeader) {\n+                                        SOAPEnvelope soapEnvelope) {\n         if (!\"\".equals(value) && value != null) {\n             SOAPHeaderBlock soapHeaderBlock =\n-                    soapHeader.addHeaderBlock(type, addressingNamespaceObject);\n+                    soapEnvelope.addHeaderBlock(type, addressingNamespaceObject);\n             soapHeaderBlock.addChild(\n                     OMAbstractFactory.getOMFactory().createText(value));\n             return soapHeaderBlock;\n@@ -192,13 +194,13 @@ private OMElement processStringInfo(String value,\n \n     protected void addToSOAPHeader(EndpointReference epr,\n                                    String type,\n-                                   SOAPHeader soapHeader) {\n-        if (epr == null || isAddressingHeaderAlreadyAvailable(type, soapHeader)) {\n+                                   SOAPEnvelope envelope) {\n+        if (epr == null || isAddressingHeaderAlreadyAvailable(type, envelope)) {\n             return;\n         }\n \n         SOAPHeaderBlock soapHeaderBlock =\n-                soapHeader.addHeaderBlock(type, addressingNamespaceObject);\n+                envelope.addHeaderBlock(type, addressingNamespaceObject);\n \n         String address = epr.getAddress();\n         if (!\"\".equals(address) && address != null) {\n@@ -231,7 +233,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n                         OMAbstractFactory.getOMFactory().createOMElement(\n                                 Submission.EPR_REFERENCE_PROPERTIES,\n                                 addressingNamespaceObject);\n-                soapHeader.addChild(reference);\n+                envelope.getHeader().addChild(reference);\n                 processReferenceInformation(referenceParameters, reference);\n             }\n \n@@ -296,8 +298,13 @@ private void processReferenceInformation(Map referenceInformation, OMElement par\n         }\n     }\n \n-    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPHeader soapHeader) {\n-        return soapHeader.getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n+    private boolean isAddressingHeaderAlreadyAvailable(String name, SOAPEnvelope envelope) {\n+        boolean isAvail = envelope.getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n+        if(!isAvail && envelope.getHeader() != null){\n+            // check in headers too\n+            isAvail = envelope.getHeader().getFirstChildWithName(new QName(addressingNamespaceObject.getName(), name, addressingNamespaceObject.getPrefix())) != null;\n+        }\n+        return isAvail;\n     }\n }\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "sha": "9f15927b4d4d54378ae4e234207f1a0b9ca4d668",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPEnvelope.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/javax/xml/soap/SOAPEnvelope.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 2,
                "filename": "modules/saaj/src/javax/xml/soap/SOAPEnvelope.java",
                "patch": "@@ -56,7 +56,7 @@\n  * </PRE>\n  * To create a <CODE>SOAPHeader</CODE> object to replace the one\n  * that was removed, a client uses the method <CODE>\n- * SOAPEnvelope.addHeader</CODE>, which creates a new header and\n+ * SOAPEnvelope.addHeaderBlock</CODE>, which creates a new header and\n  * adds it to the <CODE>SOAPEnvelope</CODE> object. Similarly, the\n  * method <CODE>addBody</CODE> creates a new <CODE>SOAPBody</CODE>\n  * object and adds it to the <CODE>SOAPEnvelope</CODE> object. The\n@@ -67,7 +67,7 @@\n  * SOAPPart sp = message.getSOAPPart();\n  * SOAPEnvelope se = sp.getEnvelope();\n  * se.getHeader().detachNode();\n- * SOAPHeader sh = se.addHeader();\n+ * SOAPHeader sh = se.addHeaderBlock();\n  * se.getBody().detachNode();\n  * SOAPBody sb = se.addBody();\n  * </PRE>",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPEnvelope.java",
                "sha": "b1e87d709e1cc3d47fa56496cb7fe6e48ecf902f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPHeader.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/javax/xml/soap/SOAPHeader.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 2,
                "filename": "modules/saaj/src/javax/xml/soap/SOAPHeader.java",
                "patch": "@@ -35,12 +35,12 @@\n  * se.getHeader().detachNode();\n  * </PRE>\n  * A <CODE>SOAPHeader</CODE> object is created with the <CODE>\n- * SOAPEnvelope</CODE> method <CODE>addHeader</CODE>. This method,\n+ * SOAPEnvelope</CODE> method <CODE>addHeaderBlock</CODE>. This method,\n  * which creates a new header and adds it to the envelope, may be\n  * called only after the existing header has been removed.\n  * <PRE>\n  * se.getHeader().detachNode();\n- * SOAPHeader sh = se.addHeader();\n+ * SOAPHeader sh = se.addHeaderBlock();\n  * </PRE>\n  * <p/>\n  * <P>A <CODE>SOAPHeader</CODE> object can have only <CODE>",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/javax/xml/soap/SOAPHeader.java",
                "sha": "c44f53c29d7ac3c913f76263fefc422b4051134b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 1,
                "filename": "modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java",
                "patch": "@@ -139,7 +139,7 @@ public SOAPBody   getBody() throws SOAPException {\n     }\n \n     /**\n-     * method addHeader\n+     * method addHeaderBlock\n      *\n      * @return\n      * @throws SOAPException",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/saaj/SOAPEnvelopeImpl.java",
                "sha": "cf0c18a1557a611a5224d4691d9aed0df8db1877",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 25,
                "filename": "modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java",
                "patch": "@@ -25,16 +25,7 @@\n import org.apache.axis2.om.impl.OMOutputImpl;\n import org.apache.axis2.om.impl.dom.DocumentImpl;\n import org.apache.axis2.om.impl.dom.NamespaceImpl;\n-import org.apache.axis2.soap.SOAP11Constants;\n-import org.apache.axis2.soap.SOAP12Constants;\n-import org.apache.axis2.soap.SOAPBody;\n-import org.apache.axis2.soap.SOAPConstants;\n-import org.apache.axis2.soap.SOAPEnvelope;\n-import org.apache.axis2.soap.SOAPFactory;\n-import org.apache.axis2.soap.SOAPHeader;\n-import org.apache.axis2.soap.SOAPHeaderBlock;\n-import org.apache.axis2.soap.SOAPProcessingException;\n-import org.apache.axis2.soap.impl.dom.SOAPElement;\n+import org.apache.axis2.soap.*;\n import org.apache.axis2.soap.impl.dom.factory.DOMSOAPFactory;\n import org.apache.axis2.soap.impl.dom.soap11.SOAP11Factory;\n \n@@ -101,28 +92,32 @@ public SOAPHeader getHeader() throws OMException {\n \t/**\n \t * Convenience method to add a SOAP header to this envelope\n \t * \n-\t * @param namespaceURI\n \t * @param name\n-\t */\n-\tpublic SOAPHeaderBlock addHeader(String namespaceURI, String name)\n+     * @param namespaceURI\n+     */\n+\tpublic SOAPHeaderBlock addHeaderBlock(String name, String namespaceURI)\n \t\t\tthrows OMException {\n \t\t// TODO : cache SOAP header and body instead of looking them up?\n \n-\t\tSOAPHeader headerContainer = getHeader();\n \t\tOMNamespace namespace = factory.createOMNamespace(namespaceURI, null);\n-\t\treturn factory.createSOAPHeaderBlock(name, namespace, headerContainer);\n+\t\treturn this.addHeaderBlock(name, namespace);\n \t}\n \n-\tpublic void addChild(OMNode child) {\n-\t\tif ((child instanceof OMElement)\n-\t\t\t\t&& !(child instanceof SOAPHeader || child instanceof SOAPBody)) {\n-\t\t\tthrow new SOAPProcessingException(\n-\t\t\t\t\t\"SOAP Envelope can not have children other than SOAP Header and Body\",\n-\t\t\t\t\tSOAP12Constants.FAULT_CODE_SENDER);\n-\t\t} else {\n-\t\t\tsuper.addChild(child);\n-\t\t}\n-\t}\n+    public SOAPHeaderBlock addHeaderBlock(String name, OMNamespace namespace) throws OMException {\n+        SOAPHeader headerContainer = getHeader();\n+        return factory.createSOAPHeaderBlock(name, namespace, headerContainer);\n+    }\n+\n+    public void addChild(OMNode child) {\n+        if ((child instanceof OMElement)\n+                && !(child instanceof SOAPHeader || child instanceof SOAPBody)) {\n+            throw new SOAPProcessingException(\n+                    \"SOAP Envelope can not have children other than SOAP Header and Body\",\n+                    SOAP12Constants.FAULT_CODE_SENDER);\n+        } else {\n+            super.addChild(child);\n+        }\n+    }\n \n \t/**\n \t * Returns the <CODE>SOAPBody</CODE> object associated with this <CODE>SOAPEnvelope</CODE>",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/saaj/src/org/apache/axis2/soap/impl/dom/SOAPEnvelopeImpl.java",
                "sha": "49e1098d9eca4de5aafeb5b00a57cf56762899a7",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 2,
                "filename": "modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java",
                "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.axis2.om.OMElement;\n import org.apache.axis2.om.OMException;\n+import org.apache.axis2.om.OMNamespace;\n \n /**\n  * Interface SOAPEnvelope\n@@ -41,10 +42,13 @@\n     /**\n      * Convenience method to add a SOAP header to this envelope\n      *\n-     * @param namespaceURI\n      * @param name\n+     * @param namespaceURI\n      */\n-    public abstract SOAPHeaderBlock addHeader(String namespaceURI, String name)\n+    public abstract SOAPHeaderBlock addHeaderBlock(String name, String namespaceURI)\n+            throws OMException;\n+\n+    public abstract SOAPHeaderBlock addHeaderBlock(String name, OMNamespace namespace)\n             throws OMException;\n \n     /**",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/SOAPEnvelope.java",
                "sha": "421874b06bd4a01dca0b2bccf82c73b7839822c3",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 6,
                "filename": "modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java",
                "patch": "@@ -85,18 +85,20 @@ public SOAPHeader getHeader() throws OMException {\n     /**\n      * Convenience method to add a SOAP header to this envelope\n      *\n-     * @param namespaceURI\n      * @param name\n+     * @param namespaceURI\n      */\n-    public SOAPHeaderBlock addHeader(String namespaceURI, String name)\n+    public SOAPHeaderBlock addHeaderBlock(String name, String namespaceURI)\n             throws OMException {\n         // TODO : cache SOAP header and body instead of looking them up?\n \n-        SOAPHeader headerContainer = getHeader();\n         OMNamespace namespace = factory.createOMNamespace(namespaceURI, null);\n-        return factory.createSOAPHeaderBlock(name,\n-                                                              namespace,\n-                                                              headerContainer);\n+        return this.addHeaderBlock(name, namespace);\n+    }\n+\n+    public SOAPHeaderBlock addHeaderBlock(String name, OMNamespace namespace) throws OMException {\n+        SOAPHeader headerContainer = getHeader();\n+        return factory.createSOAPHeaderBlock(name,namespace,headerContainer);\n     }\n \n     public void addChild(OMNode child) {",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/src/org/apache/axis2/soap/impl/llom/SOAPEnvelopeImpl.java",
                "sha": "fec0e27d4d31ae1cf14542256af66308b31f9ec9",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java?ref=6da7e27cd6a8a7169941cca646479378e9f007b7",
                "deletions": 2,
                "filename": "modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java",
                "patch": "@@ -25,10 +25,10 @@ public SOAPEnvelopeTest(String testName) {\n         super(testName);\n         soap11Envelope = soap11Factory.getDefaultEnvelope();\n         // Toss in a header to make sure the SOAPHeader gets set up\n-        soap11Envelope.addHeader(\"http://ns\", \"dummy\");\n+        soap11Envelope.addHeaderBlock(\"dummy\", \"http://ns\");\n         soap12Envelope = soap12Factory.getDefaultEnvelope();\n         // Toss in a header to make sure the SOAPHeader gets set up\n-        soap12Envelope.addHeader(\"http://ns\", \"dummy\");\n+        soap12Envelope.addHeaderBlock(\"dummy\", \"http://ns\");\n     }\n \n     //SOAP 1.1 Envelope Test (Programaticaly Created)-----------------------------------------------",
                "raw_url": "https://github.com/apache/axis2-java/raw/6da7e27cd6a8a7169941cca646479378e9f007b7/modules/xml/test/org/apache/axis2/soap/SOAPEnvelopeTest.java",
                "sha": "9cc8e0f62db45f1b71c985207db277bae893166d",
                "status": "modified"
            }
        ],
        "message": "Fixing a NPE problem in AddressingOutHandler and improving the code (Thanks Paul and Saminda for pointing out the bug and thanks Sanjiva for the tip to improve the code)\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@355879 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/5c8bd2adc3dfabaa598de54b71d2aa081909220d",
        "patched_files": [
            "SOAPEnvelopeImpl.java",
            "SOAPEnvelope.java",
            "SOAPHeader.java",
            "AddressingOutHandler.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "SOAPEnvelopeTest.java",
            "SOAPHeaderTest.java",
            "AddressingOutHandlerTest.java"
        ]
    },
    "axis2-java_751a126": {
        "bug_id": "axis2-java_751a126",
        "commit": "https://github.com/apache/axis2-java/commit/751a126fe364d9c65def1f90caf5f08798f9a268",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis2-java/blob/751a126fe364d9c65def1f90caf5f08798f9a268/modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/MessageContext.java?ref=751a126fe364d9c65def1f90caf5f08798f9a268",
                "deletions": 0,
                "filename": "modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "patch": "@@ -1149,6 +1149,10 @@ public boolean isEngaged(QName moduleName) {\n      * @return boolean\n      */\n     public boolean isHeaderPresent() {\n+        // If there's no envelope there can't be a header.\n+        if(this.envelope == null){\n+            return false;\n+        }\n         OMElement node = this.envelope.getFirstElement();\n         if (node == null) {\n             return false;",
                "raw_url": "https://github.com/apache/axis2-java/raw/751a126fe364d9c65def1f90caf5f08798f9a268/modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "sha": "d740a7850c2d8df58226382862967080e38a76f2",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE from isHeaderPresent if no envelope associated\nwith the MessageContext. (e.g. if the server 500's with no\nenvelope).\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@478120 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/1ec166a3cd485982b404b928413c3bd5b38eb2e2",
        "patched_files": [
            "MessageContext.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "MessageContextTest.java"
        ]
    },
    "axis2-java_76831e0": {
        "bug_id": "axis2-java_76831e0",
        "commit": "https://github.com/apache/axis2-java/commit/76831e0a5c6250b85eeb888c7bad336b8029eacf",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/axis2-java/blob/76831e0a5c6250b85eeb888c7bad336b8029eacf/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java?ref=76831e0a5c6250b85eeb888c7bad336b8029eacf",
                "deletions": 10,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java",
                "patch": "@@ -148,16 +148,19 @@ private void checkMessageIDHeader(MessageContext msgContext) throws AxisFault {\n         }\n \n         AxisOperation axisOperation = msgContext.getAxisOperation();\n-        String mep = axisOperation.getMessageExchangePattern();\n-        int mepConstant = Utils.getAxisSpecifMEPConstant(mep);\n-\n-        if (mepConstant == WSDLConstants.MEP_CONSTANT_IN_OUT ||\n-                mepConstant == WSDLConstants.MEP_CONSTANT_IN_OPTIONAL_OUT ||\n-                mepConstant == WSDLConstants.MEP_CONSTANT_ROBUST_IN_ONLY) {\n-            String messageId = msgContext.getOptions().getMessageId();\n-            if (messageId == null || \"\".equals(messageId)) {\n-                AddressingFaultsHelper\n-                        .triggerMessageAddressingRequiredFault(msgContext, WSA_MESSAGE_ID);\n+        \n+        if (axisOperation != null) {\n+            String mep = axisOperation.getMessageExchangePattern();\n+            int mepConstant = Utils.getAxisSpecifMEPConstant(mep);\n+            \n+            if (mepConstant == WSDLConstants.MEP_CONSTANT_IN_OUT ||\n+                    mepConstant == WSDLConstants.MEP_CONSTANT_IN_OPTIONAL_OUT ||\n+                    mepConstant == WSDLConstants.MEP_CONSTANT_ROBUST_IN_ONLY) {\n+                String messageId = msgContext.getOptions().getMessageId();\n+                if (messageId == null || \"\".equals(messageId)) {\n+                    AddressingFaultsHelper\n+                    .triggerMessageAddressingRequiredFault(msgContext, WSA_MESSAGE_ID);\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/axis2-java/raw/76831e0a5c6250b85eeb888c7bad336b8029eacf/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingValidationHandler.java",
                "sha": "8b624cd9442fc2ba0d8774b8cd828f404878c772",
                "status": "modified"
            }
        ],
        "message": "Change to AddressingValidationHandler to remove potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@686051 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/7c78199888b11e644600096dfd5d6071402aa3cf",
        "patched_files": [
            "AddressingValidationHandler.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AddressingValidationHandlerTest.java"
        ]
    },
    "axis2-java_7a18327": {
        "bug_id": "axis2-java_7a18327",
        "commit": "https://github.com/apache/axis2-java/commit/7a183273a0678ba9185c0916623fc8e3edf54e40",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/axis2-java/blob/7a183273a0678ba9185c0916623fc8e3edf54e40/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java?ref=7a183273a0678ba9185c0916623fc8e3edf54e40",
                "deletions": 8,
                "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java",
                "patch": "@@ -534,6 +534,10 @@ private void setFaultActions(AxisOperation newAxisOperation,\n                     log.debug(\"Default faultAction = \"+faultAction);\n                 }\n                 \n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Default faultAction = \"+faultAction);\n+                }\n+                \n                 newAxisOperation.addFaultAction(faultDesc.getExceptionClassName(),  faultAction);\n                 newAxisOperation.setFaultMessages(faultMessage);\n             }\n@@ -563,19 +567,18 @@ else if(faultAction.className() != null) {\n                     }\n                     FaultDescription faultDesc = resolveFaultByExceptionName(className);\n                     if (faultDesc != null)  {\n-                        \n                         String faultActionString = faultAction.value();\n                         if (log.isDebugEnabled()) {\n-                            log.debug(\"SANDERKA: faultAction value = \"+faultActionString);\n+                            log.debug(\"faultAction value = \"+faultActionString);\n                         }\n-                        \n-                        if (faultActionString.equals(\"\")) {\n+\n+                        if (faultActionString == null || faultActionString.equals(\"\")) {\n                             faultActionString = \n                                 WSDL11ActionHelper.getFaultActionFromStringInformation( targetNS, \n-                                                portTypeName, \n-                                                operationName, \n-                                                className.substring((className.lastIndexOf('.'))+1));\n-                            \n+                                        portTypeName, \n+                                        operationName, \n+                                        className.substring((className.lastIndexOf('.'))+1));\n+\n                             if (log.isDebugEnabled()) {\n                                 log.debug(\"New faultAction value = \"+faultActionString);\n                             }",
                "raw_url": "https://github.com/apache/axis2-java/raw/7a183273a0678ba9185c0916623fc8e3edf54e40/modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java",
                "sha": "aaeeaa6c71561f06ee1995f08be442184f490ecf",
                "status": "modified"
            }
        ],
        "message": "AXIS2-4839\nContributor: Brian De Pradine\nCommitter: Rich Scheuerle\n\nI changed Brian's commit slightly to remove the possibility of an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1005887 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/9af08cbb5853c2f22e7df38a8bc5c77d87a344af",
        "patched_files": [
            "OperationDescriptionImpl.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "OperationDescriptionImplTests.java"
        ]
    },
    "axis2-java_7b55451": {
        "bug_id": "axis2-java_7b55451",
        "commit": "https://github.com/apache/axis2-java/commit/7b554517db6455e5157c10625832303766859b4a",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis2-java/blob/7b554517db6455e5157c10625832303766859b4a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=7b554517db6455e5157c10625832303766859b4a",
                "deletions": 1,
                "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "patch": "@@ -807,7 +807,11 @@ private URL getWSDLURL(String wsdlLocation) {\n         // Look for the WSDL file as follows:\n         // 1) As a resource on the classpath\n \n-        URL url = composite.getClassLoader().getResource(wsdlLocation);\n+        ClassLoader loader = composite.getClassLoader();\n+        URL url = null;\n+        if (loader != null) {\n+            url = loader.getResource(wsdlLocation);\n+        }\n \n         // 2) As a fully specified URL\n         if (url == null) {",
                "raw_url": "https://github.com/apache/axis2-java/raw/7b554517db6455e5157c10625832303766859b4a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "sha": "28639e161c34d52996d1a4c5f9aafb56041955fb",
                "status": "modified"
            }
        ],
        "message": "Fix a build break in JDK1.6, add some defensive code for NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@613916 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/0136cd217ac5974812d73718c163ab2d86ca783d",
        "patched_files": [
            "ServiceDescriptionImpl.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "ServiceDescriptionImplTests.java"
        ]
    },
    "axis2-java_8303d19": {
        "bug_id": "axis2-java_8303d19",
        "commit": "https://github.com/apache/axis2-java/commit/8303d1971bd93f0493341cb12d9eb1a81b882b33",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/8303d1971bd93f0493341cb12d9eb1a81b882b33/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java?ref=8303d1971bd93f0493341cb12d9eb1a81b882b33",
                "deletions": 2,
                "filename": "modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java",
                "patch": "@@ -292,7 +292,7 @@ private static BeanInfo getBeanInfo(Class beanClass) throws IntrospectionExcepti\n                             propertyQnameValueList.add(value);\n                         }\n                     }\n-                } else  if (SimpleTypeMapper.isCollection(ptype)) { \n+                } else  if (SimpleTypeMapper.isCollection(ptype) && value != null) { \n                     if (typeTable != null) {\n                 \tOMFactory fac = OMAbstractFactory.getOMFactory();\t\t\t\t\t\n \t\t\tQName qNamefortheType = null;\t\t\t\t\t\n@@ -339,7 +339,7 @@ private static BeanInfo getBeanInfo(Class beanClass) throws IntrospectionExcepti\n                     }\n                           \n \t\t\t\t\t\t\t\t\t\n-                } else if (SimpleTypeMapper.isMap(ptype)) {\n+                } else if (SimpleTypeMapper.isMap(ptype) && value != null) {\n \t\t\t\t\tOMFactory fac = OMAbstractFactory.getOMFactory();\n \t\t\t\t\tQName qNamefortheType = (QName) typeTable\n \t\t\t\t\t\t\t.getComplexSchemaMap().get(getClassName(beanClass));",
                "raw_url": "https://github.com/apache/axis2-java/raw/8303d1971bd93f0493341cb12d9eb1a81b882b33/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java",
                "sha": "13fb32f4047db89aaeb9509455a5ab7975345d2a",
                "status": "modified"
            }
        ],
        "message": "Fixed NullPointerException when returning a null as a value of a Collection or Map. \n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1240018 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/7daee019dec3f9683cb1f1cf5e38ce98b78cc640",
        "patched_files": [
            "BeanUtil.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "BeanUtilTest.java"
        ]
    },
    "axis2-java_9077cd4": {
        "bug_id": "axis2-java_9077cd4",
        "commit": "https://github.com/apache/axis2-java/commit/9077cd4f15cb30a3f45944a259d2ee0885614abd",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd",
                "deletions": 2,
                "filename": "modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java",
                "patch": "@@ -63,10 +63,15 @@ public MessageContext() {\n     }\n     \n     public MessageContext(org.apache.axis2.context.MessageContext mc) throws MessageException {\n-        axisMsgCtx = mc;\n         properties = new HashMap<String, Object>();\n         \n-        message = MessageUtils.getMessageFromMessageContext(mc);\n+        if (mc != null) {\n+            axisMsgCtx = mc;\n+            message = MessageUtils.getMessageFromMessageContext(mc);\n+        }\n+        else { \n+            axisMsgCtx = new org.apache.axis2.context.MessageContext();\n+        }        \n     }\n     \n     public InvocationContext getInvocationContext() {",
                "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/MessageContext.java",
                "sha": "28f3d453b03ec223a97a91856d02d2d1691ed7a0",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd",
                "deletions": 13,
                "filename": "modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java",
                "patch": "@@ -80,7 +80,7 @@\n     private static boolean debug = log.isDebugEnabled();\n     \n     /*\n-     *  (non-Javadoc)\n+     * (non-Javadoc)\n      * @see org.apache.axis2.jaxws.core.controller.InvocationController#invoke(org.apache.axis2.jaxws.core.InvocationContext)\n      */\n     public MessageContext doInvoke(MessageContext request) {\n@@ -130,18 +130,16 @@ public MessageContext doInvoke(MessageContext request) {\n             // Collect the response MessageContext and envelope\n             axisResponseMsgCtx = opClient.getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n             response = new MessageContext(axisResponseMsgCtx);\n-         \n-            /*\n-             * If the Message object is still null, then it's possible that a\n-             * local AxisFault was thrown and we need to save it for later throwing\n-             * We do not want to create a message and go through the whole handler or\n-             * XMLFault processing because it's unnecessary.\n-             * \n-             * Same is true if we get a valid non-fault server response but some jaxws\n-             * client processing (a handler, perhaps) throws an exception.\n-             * \n-             * If the response message itself is a fault message, let it pass through.\n-             */\n+            \n+            // If the Message object is still null, then it's possible that a\n+            // local AxisFault was thrown and we need to save it for later throwing\n+            // We do not want to create a message and go through the whole handler or\n+            // XMLFault processing because it's unnecessary.\n+            // \n+            // Same is true if we get a valid non-fault server response but some jaxws\n+            // client processing (a handler, perhaps) throws an exception.\n+            // \n+            // If the response message itself is a fault message, let it pass through.\n             if ((faultexception != null) && ((response.getMessage() == null)\n                     || (!response.getMessage().isFault()))) {\n                 MessageFactory factory = (MessageFactory) FactoryRegistry.getFactory(MessageFactory.class);",
                "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/src/org/apache/axis2/jaxws/core/controller/AxisInvocationController.java",
                "sha": "a2bd5a90bddd95a46c996871027136a184e2ec53",
                "status": "modified"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd",
                "deletions": 0,
                "filename": "modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl",
                "patch": "@@ -0,0 +1,66 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<definitions targetNamespace=\"http://jaxws.axis2.apache.org\" \r\n+      xmlns:tns=\"http://jaxws.axis2.apache.org\"\r\n+      xmlns=\"http://schemas.xmlsoap.org/wsdl/\" \r\n+      xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\r\n+      xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\">\r\n+\r\n+   <types>\r\n+      <xsd:schema targetNamespace=\"http://jaxws.axis2.apache.org\"\r\n+         xmlns:tns=\"http://jaxws.axis2.apache.org\"\r\n+         xmlns=\"http://www.w3.org/2001/XMLSchema\"\r\n+         elementFormDefault=\"qualified\">\r\n+\r\n+         <complexType name=\"echoType\">\r\n+            <sequence>\r\n+               <element name=\"request\" type=\"xsd:string\"/>\r\n+            </sequence>\r\n+         </complexType>\r\n+\r\n+         <complexType name=\"echoResponseType\">\r\n+            <sequence>\r\n+               <element name=\"response\" type=\"xsd:string\"/>\r\n+            </sequence>\r\n+         </complexType>\r\n+\r\n+         <element name=\"echo\" type=\"tns:echoType\"/>\r\n+         <element name=\"echoResponse\" type=\"tns:echoResponseType\"/>\r\n+\r\n+      </xsd:schema>\r\n+   </types>\r\n+\r\n+   <message name=\"echo\">\r\n+      <part name=\"parameters\" element=\"tns:echo\"/>\r\n+   </message>\r\n+\r\n+   <message name=\"echoResponse\">\r\n+      <part name=\"parameters\" element=\"tns:echoResponse\"/>\r\n+   </message>\r\n+\r\n+   <portType name=\"Echo\">\r\n+      <operation name=\"echo\">\r\n+         <input message=\"tns:echo\" />\r\n+         <output message=\"tns:echoResponse\" />\r\n+      </operation>\r\n+   </portType>\r\n+\r\n+   <binding name=\"EchoBinding\" type=\"tns:Echo\">\r\n+      <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\r\n+      <operation name=\"echo\">\r\n+         <soap:operation soapAction=\"\"/>\r\n+         <input>\r\n+            <soap:body use=\"literal\"/>\r\n+         </input>\r\n+\r\n+         <output>\r\n+            <soap:body use=\"literal\"/>\r\n+         </output>\r\n+      </operation>\r\n+   </binding>\r\n+\r\n+   <service name=\"EchoService\">\r\n+      <port binding=\"tns:EchoBinding\" name=\"EchoPort\">\r\n+         <soap:address location=\"this is an invalid string\"/>\r\n+      </port>\r\n+   </service>\r\n+</definitions>\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test-resources/wsdl/BadEndpointAddress.wsdl",
                "sha": "2dc67b5c5b666dbab488e5427319f571db93c0b9",
                "status": "added"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd",
                "deletions": 0,
                "filename": "modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java",
                "patch": "@@ -0,0 +1,37 @@\n+package org.apache.axis2.jaxws.client;\r\n+\r\n+import java.net.URL;\r\n+\r\n+import javax.xml.namespace.QName;\r\n+import javax.xml.ws.Dispatch;\r\n+import javax.xml.ws.Service;\r\n+import javax.xml.ws.WebServiceException;\r\n+import javax.xml.ws.Service.Mode;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+public class ClientConfigTests extends TestCase {\r\n+\r\n+    public ClientConfigTests(String name) {\r\n+        super(name);\r\n+    }\r\n+    \r\n+    public void testBadWsdlUrl() throws Exception {\r\n+        URL url = new URL(\"file:./test-resources/wsdl/BadEndpointAddress.wsdl\");\r\n+        \r\n+        Service svc = Service.create(url, new QName(\"http://jaxws.axis2.apache.org\", \"EchoService\"));\r\n+        Dispatch dispatch = svc.createDispatch(new QName(\"http://jaxws.axis2.apache.org\", \"EchoPort\"), \r\n+                String.class, Mode.PAYLOAD);\r\n+        \r\n+        try {\r\n+            dispatch.invoke(\"\");\r\n+            \r\n+            // If an exception wasn't thrown, then it's an error.\r\n+            fail();\r\n+        } catch (WebServiceException e) {\r\n+            // We should only get a WebServiceException here.  Anything else\r\n+            // is a failure.\r\n+            System.out.println(\"[pass] - the proper fault type was thrown\");\r\n+        }\r\n+    }\r\n+}\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/client/ClientConfigTests.java",
                "sha": "f9a04e3a461bebe0f4c3cc32ead91dbc65dc265e",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java?ref=9077cd4f15cb30a3f45944a259d2ee0885614abd",
                "deletions": 0,
                "filename": "modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java",
                "patch": "@@ -23,6 +23,7 @@\n \n import org.apache.axis2.jaxws.anytype.tests.AnyTypeTests;\n import org.apache.axis2.jaxws.attachments.MTOMSerializationTests;\n+import org.apache.axis2.jaxws.client.ClientConfigTests;\n import org.apache.axis2.jaxws.client.DispatchSoapActionTests;\n import org.apache.axis2.jaxws.client.PropertyValueTests;\n import org.apache.axis2.jaxws.client.ProxySoapActionTests;\n@@ -100,6 +101,7 @@ public static Test suite() {\n         suite.addTestSuite(DispatchSoapActionTests.class);\n         suite.addTestSuite(ProxySoapActionTests.class);\n         suite.addTestSuite(PropertyValueTests.class);\n+        suite.addTestSuite(ClientConfigTests.class);\n         \n         suite.addTestSuite(BlockTests.class);\n         suite.addTestSuite(MessageTests.class);",
                "raw_url": "https://github.com/apache/axis2-java/raw/9077cd4f15cb30a3f45944a259d2ee0885614abd/modules/jaxws/test/org/apache/axis2/jaxws/framework/JAXWSTest.java",
                "sha": "b10236dc835b82b6e1adde93f51e7fe3940c79d5",
                "status": "modified"
            }
        ],
        "message": "Fixing an NPE in JAX-WS on a bad endpoint address.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@486744 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/ca17dce046800b69580aafeeb52c877ecb46a944",
        "patched_files": [
            "BadEndpointAddress.java",
            "MessageContext.java",
            "ClientConfigTests.java",
            "AxisInvocationController.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "JAXWSTest.java",
            "MessageContextTest.java"
        ]
    },
    "axis2-java_908410f": {
        "bug_id": "axis2-java_908410f",
        "commit": "https://github.com/apache/axis2-java/commit/908410fb6b15169f4bfb909296363af4531c82ff",
        "file": [
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/axis2-java/blob/908410fb6b15169f4bfb909296363af4531c82ff/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=908410fb6b15169f4bfb909296363af4531c82ff",
                "deletions": 6,
                "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "patch": "@@ -515,13 +515,24 @@ private void setupWsdlDefinition() {\n                         getDBCMap().get(composite.getWebServiceAnnot().endpointInterface());\n \n                 try {\n-                    if (seic.getWsdlDefinition() != null) {\n-                        //set the sdimpl from the SEI composite\n+                    if (seic == null) {\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"The SEI class \" + composite.getWebServiceAnnot().endpointInterface() + \" was not found.\");\n+                        }\n+                    }\n+                    if (seic != null && seic.getWsdlDefinition() != null) {\n+                        // set the wsdl def from the SEI composite\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"Get the wsdl definition from the SEI composite.\");\n+                        }\n                         this.wsdlURL = seic.getWsdlURL();\n                         this.wsdlWrapper =\n                                 new WSDL4JWrapper(seic.getWsdlURL(), seic.getWsdlDefinition());\n                     } else if (composite.getWsdlDefinition() != null) {\n-                        //set the sdimpl from the impl. class composite\n+                        //set the wsdl def from the impl. class composite\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"Get the wsdl definition from the impl class composite.\");\n+                        }\n                         this.wsdlURL = composite.getWsdlURL();\n                         this.wsdlWrapper = new WSDL4JWrapper(composite.getWsdlURL(),\n                                                              composite.getWsdlDefinition());\n@@ -531,20 +542,29 @@ private void setupWsdlDefinition() {\n                     \tif(seic != null\n                     \t\t\t&&\n                     \t\t\tseic.getWebServiceAnnot() != null) {\n-                    \t\twsdlLocation = seic.getWebServiceAnnot().wsdlLocation();\n+                    \t    if (log.isDebugEnabled()) {\n+                    \t        log.debug(\"Get the wsdl location from the SEI composite.\");\n+                    \t    }\n+                    \t    wsdlLocation = seic.getWebServiceAnnot().wsdlLocation();\n                     \t}\n                     \t\n                     \t// now check the impl\n                     \tif(wsdlLocation == null\n                     \t        ||\n                     \t        \"\".equals(wsdlLocation)) {\n-                    \t\twsdlLocation = composite.getWebServiceAnnot().wsdlLocation();\n+                    \t    if (log.isDebugEnabled()) {\n+                    \t        log.debug(\"Get the wsdl location from the impl class composite.\");\n+                            }\n+                    \t    wsdlLocation = composite.getWebServiceAnnot().wsdlLocation();\n                     \t}\n                     \t\n                     \tif(wsdlLocation != null\n                     \t        &&\n                     \t        !\"\".equals(wsdlLocation)) {\n-                    \t\tsetWSDLDefinitionOnDBC(wsdlLocation);\n+                    \t    if (log.isDebugEnabled()) {\n+                    \t        log.debug(\"wsdl location =\" + wsdlLocation);\n+                    \t    }\n+                    \t    setWSDLDefinitionOnDBC(wsdlLocation);\n                     \t}\n                     }\n                 } catch (WSDLException e) {",
                "raw_url": "https://github.com/apache/axis2-java/raw/908410fb6b15169f4bfb909296363af4531c82ff/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "sha": "7d0bff268d8f55948f13d082c2bcec34164df72f",
                "status": "modified"
            }
        ],
        "message": "AXIS2-3432\nContributor:Rich Scheuerle\nAvoid NPE and added trace to ServiceDescriptionImpl\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@610433 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/c5e53f7fd7efd503949c3caf65a0802c0712cef6",
        "patched_files": [
            "ServiceDescriptionImpl.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "ServiceDescriptionImplTests.java"
        ]
    },
    "axis2-java_a052b48": {
        "bug_id": "axis2-java_a052b48",
        "commit": "https://github.com/apache/axis2-java/commit/a052b4894604c812605e35d4020188f8210f0474",
        "file": [
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/axis2-java/blob/a052b4894604c812605e35d4020188f8210f0474/modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java",
                "changes": 87,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java?ref=a052b4894604c812605e35d4020188f8210f0474",
                "deletions": 40,
                "filename": "modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java",
                "patch": "@@ -24,117 +24,124 @@\n import org.apache.commons.logging.LogFactory;\r\n \r\n public class AddressingHelper {\r\n-    \r\n+\r\n     private static final Log log = LogFactory.getLog(AddressingHelper.class);\r\n-    \r\n+\r\n     /**\r\n      * Returns true if the ReplyTo address does not match one of the supported\r\n      * anonymous urls. If the ReplyTo is not set, anonymous is assumed, per the Final\r\n-     * spec. The AddressingInHandler should have set the ReplyTo to non-null in the \r\n+     * spec. The AddressingInHandler should have set the ReplyTo to non-null in the\r\n      * 2004/08 case to ensure the different semantics. (per AXIS2-885)\r\n-     * \r\n+     *\r\n      * @param messageContext\r\n      * @return\r\n      */\r\n-    public static boolean isReplyRedirected(MessageContext messageContext){\r\n+    public static boolean isReplyRedirected(MessageContext messageContext) {\r\n         EndpointReference replyTo = messageContext.getReplyTo();\r\n-        if(replyTo == null){\r\n-            if(log.isDebugEnabled()){\r\n+        if (replyTo == null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"isReplyRedirected: ReplyTo is null. Returning false\");\r\n             }\r\n             return false;\r\n-        }else{\r\n+        } else {\r\n             return !replyTo.hasAnonymousAddress();\r\n         }\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Returns true if the FaultTo address does not match one of the supported\r\n      * anonymous urls. If the FaultTo is not set, the ReplyTo is checked per the\r\n-     * spec. \r\n-     * @see isReplyRedirected\r\n+     * spec.\r\n+     *\r\n      * @param messageContext\r\n      * @return\r\n+     * @see isReplyRedirected\r\n      */\r\n-    public static boolean isFaultRedirected(MessageContext messageContext){\r\n+    public static boolean isFaultRedirected(MessageContext messageContext) {\r\n         EndpointReference faultTo = messageContext.getFaultTo();\r\n-        if(faultTo == null){\r\n-            if(log.isDebugEnabled()){\r\n+        if (faultTo == null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"isReplyRedirected: FaultTo is null. Returning isReplyRedirected\");\r\n             }\r\n             return isReplyRedirected(messageContext);\r\n-        }else{\r\n-            return !faultTo.hasAnonymousAddress(); \r\n+        } else {\r\n+            return !faultTo.hasAnonymousAddress();\r\n         }\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Extract the Parameter repreesnting the Anonymous flag from the AxisOperation\r\n      * and return the String value. Return the default of \"optional\" if not specified.\r\n+     *\r\n      * @param axisOperation\r\n      * @return\r\n      */\r\n-    public static String getAnonymousParameterValue(AxisOperation axisOperation){\r\n-        String value = Utils.getParameterValue(axisOperation.getParameter(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME));\r\n-        if(log.isDebugEnabled()){\r\n-            log.debug(\"getAnonymousParameterValue: value: '\"+value+\"'\");\r\n+    public static String getAnonymousParameterValue(AxisOperation axisOperation) {\r\n+        String value = \"\";\r\n+        if (axisOperation != null) {\r\n+            value = Utils.getParameterValue(axisOperation.getParameter(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME));\r\n+            if (log.isDebugEnabled()) {\r\n+                log.debug(\"getAnonymousParameterValue: value: '\" + value + \"'\");\r\n+            }\r\n         }\r\n-        if(value == null || \"\".equals(value.trim())){\r\n+\r\n+        if (value == null || \"\".equals(value.trim())) {\r\n             value = \"optional\";\r\n         }\r\n         return value.trim();\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Set the value of an existing unlocked Parameter representing Anonymous or add a new one if one\r\n      * does not exist. If a locked Parameter of the same name already exists the method will trace and\r\n      * return.\r\n+     *\r\n      * @param axisOperation\r\n      * @param value\r\n      */\r\n-    public static void setAnonymousParameterValue(AxisOperation axisOperation, String value){\r\n-        if(value == null){\r\n-            if(log.isDebugEnabled()){\r\n+    public static void setAnonymousParameterValue(AxisOperation axisOperation, String value) {\r\n+        if (value == null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"setAnonymousParameterValue: value passed in is null. return\");\r\n             }\r\n             return;\r\n         }\r\n-        \r\n+\r\n         Parameter param = axisOperation.getParameter(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME);\r\n         // If an existing parameter exists\r\n-        if(param !=null){\r\n-            if(log.isDebugEnabled()){\r\n+        if (param != null) {\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"setAnonymousParameterValue: Parameter already exists\");\r\n             }\r\n             // and is not locked\r\n-            if(!param.isLocked()){\r\n-                if(log.isDebugEnabled()){\r\n-                    log.debug(\"setAnonymousParameterValue: Parameter not locked. Setting value: \"+value);\r\n+            if (!param.isLocked()) {\r\n+                if (log.isDebugEnabled()) {\r\n+                    log.debug(\"setAnonymousParameterValue: Parameter not locked. Setting value: \" + value);\r\n                 }\r\n                 // set the value\r\n                 param.setValue(value);\r\n             }\r\n-        }else{\r\n+        } else {\r\n             // otherwise, if no Parameter exists\r\n-            if(log.isDebugEnabled()){\r\n+            if (log.isDebugEnabled()) {\r\n                 log.debug(\"setAnonymousParameterValue: Parameter does not exist\");\r\n             }\r\n             // Create new Parameter with correct name/value\r\n             param = new Parameter();\r\n             param.setName(AddressingConstants.WSAW_ANONYMOUS_PARAMETER_NAME);\r\n             param.setValue(value);\r\n-            try{\r\n-                if(log.isDebugEnabled()){\r\n-                    log.debug(\"setAnonymousParameterValue: Adding parameter with value: \"+value);\r\n+            try {\r\n+                if (log.isDebugEnabled()) {\r\n+                    log.debug(\"setAnonymousParameterValue: Adding parameter with value: \" + value);\r\n                 }\r\n                 // and add it to the AxisOperation object\r\n                 axisOperation.addParameter(param);\r\n-            }catch(AxisFault af){\r\n+            } catch (AxisFault af) {\r\n                 // This should not happen. AxisFault is only ever thrown when a locked Parameter\r\n                 // of the same name already exists and this should be dealt with by the outer\r\n                 // if statement.\r\n-                if(log.isDebugEnabled()){\r\n-                    log.debug(\"setAnonymousParameterValue: addParameter failed: \"+af.getMessage());\r\n+                if (log.isDebugEnabled()) {\r\n+                    log.debug(\"setAnonymousParameterValue: addParameter failed: \" + af.getMessage());\r\n                 }\r\n             }\r\n         }\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/a052b4894604c812605e35d4020188f8210f0474/modules/kernel/src/org/apache/axis2/addressing/AddressingHelper.java",
                "sha": "e7212c97f4a1634ab4d2668f4cfa3b0dceb0ff18",
                "status": "modified"
            }
        ],
        "message": "Fixing a possible NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@442311 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/c813da232b97ab742ef07e0f4acc1c25dcd70617",
        "patched_files": [
            "AddressingHelper.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AddressingHelperTest.java"
        ]
    },
    "axis2-java_a44fabc": {
        "bug_id": "axis2-java_a44fabc",
        "commit": "https://github.com/apache/axis2-java/commit/a44fabc66c95010a56b9b30d21e5437051dbe8b1",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/a44fabc66c95010a56b9b30d21e5437051dbe8b1/modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java?ref=a44fabc66c95010a56b9b30d21e5437051dbe8b1",
                "deletions": 1,
                "filename": "modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java",
                "patch": "@@ -71,7 +71,7 @@ public static String getWsGenVersion() throws ClassNotFoundException, IOExceptio\n                 if (log.isDebugEnabled()) {\r\n                     log.debug(\"Exception thrown from getWsGenVersion: \" + e2.getMessage(), e2);\r\n                 }\r\n-                throw (ClassNotFoundException) e2.getException();\r\n+                throw (ClassNotFoundException) e2;\r\n             }\r\n         }\r\n \r",
                "raw_url": "https://github.com/apache/axis2-java/raw/a44fabc66c95010a56b9b30d21e5437051dbe8b1/modules/metadata/src/org/apache/axis2/jaxws/util/WSToolingUtils.java",
                "sha": "f686ac2bd623dea4842b24b1bda2f3c7eed49b7e",
                "status": "modified"
            }
        ],
        "message": "Fix NPE if tooling classes can't be found.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@1000664 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/d2e93a5c8b99443c71a8e1544e1b0e85625549b6",
        "patched_files": [
            "WSToolingUtils.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "WSToolingUtilsTests.java"
        ]
    },
    "axis2-java_b128ba9": {
        "bug_id": "axis2-java_b128ba9",
        "commit": "https://github.com/apache/axis2-java/commit/b128ba9fb7be8930fd9a89f8a42790b9af7e5562",
        "file": [
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/axis2-java/blob/b128ba9fb7be8930fd9a89f8a42790b9af7e5562/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java",
                "changes": 210,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java?ref=b128ba9fb7be8930fd9a89f8a42790b9af7e5562",
                "deletions": 118,
                "filename": "modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java",
                "patch": "@@ -90,20 +90,20 @@ private static String getClassName(Class type) {\n         return name;\n     }\n \n-    private static List getPropertyQnameList(Object beanObject,\n-                                             Class beanClass,\n-                                             QName beanName,\n-                                             TypeTable typeTable,\n-                                             boolean qualified,\n-                                             boolean processingDocLitBare) {\n-        List propertyQnameValueList;\n-        Class supperClass = beanClass.getSuperclass();\n+    private static List<Object> getPropertyQnameList(Object beanObject,\n+                                                     Class<?> beanClass,\n+                                                     QName beanName,\n+                                                     TypeTable typeTable,\n+                                                     boolean qualified,\n+                                                     boolean processingDocLitBare) {\n+        List<Object> propertyQnameValueList;\n+        Class<?> supperClass = beanClass.getSuperclass();\n \n         if (!getQualifiedName(supperClass.getPackage()).startsWith(\"java.\")) {\n             propertyQnameValueList = getPropertyQnameList(beanObject,\n                     supperClass, beanName, typeTable, qualified, processingDocLitBare);\n         } else {\n-            propertyQnameValueList = new ArrayList();\n+            propertyQnameValueList = new ArrayList<Object>();\n         }\n \n         try {\n@@ -131,127 +131,101 @@ private static List getPropertyQnameList(Object beanObject,\n             }\n             BeanInfo beanInfo = Introspector.getBeanInfo(beanClass, beanClass.getSuperclass());\n             PropertyDescriptor[] properties = beanInfo.getPropertyDescriptors();\n-            PropertyDescriptor property;\n-            for (PropertyDescriptor property1 : properties) {\n-                property = property1;\n-                if (!property.getName().equals(\"class\")) {\n-                    if ((beanExcludeInfo == null) ||\n-                        !beanExcludeInfo.isExcludedProperty(property.getName())) {\n-                        Class ptype = property.getPropertyType();\n-                        if (SimpleTypeMapper.isSimpleType(ptype)) {\n-                            Method readMethod = property.getReadMethod();\n-                            Object value;\n-                            if (readMethod != null) {\n-                                readMethod.setAccessible(true);\n-                                value = readMethod.invoke(beanObject, null);\n+            for (PropertyDescriptor property : properties) {\n+                String propertyName = property.getName();\n+                if (propertyName.equals(\"class\") ||\n+                        beanExcludeInfo != null && beanExcludeInfo.isExcludedProperty(propertyName)) {\n+                    continue;\n+                }\n+                \n+                Class<?> ptype = property.getPropertyType();\n+                Method readMethod = property.getReadMethod();\n+                Object value;\n+                if (readMethod != null) {\n+                    readMethod.setAccessible(true);\n+                    value = readMethod.invoke(beanObject);\n+                } else {\n+                    throw new AxisFault(\"Property '\" + propertyName + \"' in bean class '\"\n+                            + beanClass.getName() + \"'is not readable.\");\n+                }\n+                \n+                if (SimpleTypeMapper.isSimpleType(ptype)) {\n+                    addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n+                                 beanName, processingDocLitBare);\n+                    propertyQnameValueList.add(\n+                            value == null ? null : SimpleTypeMapper.getStringValue(value));\n+                } else if (ptype.isArray()) {\n+                    if (SimpleTypeMapper.isSimpleType(ptype.getComponentType())) {\n+                        if (value != null) {\n+                            if (Byte.TYPE.equals(ptype.getComponentType())) {\n+                                addTypeQname(elemntNameSpace, propertyQnameValueList,\n+                                             property, beanName, processingDocLitBare);\n+                                propertyQnameValueList.add(Base64.encode((byte[])value));\n                             } else {\n-                                throw new AxisFault(\n-                                        \"can not find read method for : \" + property.getName());\n+                                int i1 = Array.getLength(value);\n+                                for (int j = 0; j < i1; j++) {\n+                                    Object o = Array.get(value, j);\n+                                    addTypeQname(elemntNameSpace, propertyQnameValueList,\n+                                                 property, beanName, processingDocLitBare);\n+                                    propertyQnameValueList.add(o == null ? null :\n+                                            SimpleTypeMapper.getStringValue(o));\n+                                }\n                             }\n-\n+                        } else {\n                             addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n                                          beanName, processingDocLitBare);\n-                            propertyQnameValueList.add(\n-                                    value == null ? null : SimpleTypeMapper.getStringValue(value));\n-                        } else if (ptype.isArray()) {\n-                            if (SimpleTypeMapper.isSimpleType(ptype.getComponentType())) {\n-                                Method readMethod = property.getReadMethod();\n-                                Object value;\n-                                if (readMethod != null) {\n-                                    readMethod.setAccessible(true);\n-                                    value = readMethod.invoke(beanObject, null);\n-                                } else {\n-                                    throw new AxisFault(\n-                                            \"can not find read method for : \" + property.getName());\n-                                }\n-                                if (value != null) {\n-                                    if (\"byte\".equals(ptype.getComponentType().getName())) {\n-                                        addTypeQname(elemntNameSpace, propertyQnameValueList,\n-                                                     property, beanName, processingDocLitBare);\n-                                        propertyQnameValueList.add(Base64.encode((byte[])value));\n-                                    } else {\n-                                        int i1 = Array.getLength(value);\n-                                        for (int j = 0; j < i1; j++) {\n-                                            Object o = Array.get(value, j);\n-                                            addTypeQname(elemntNameSpace, propertyQnameValueList,\n-                                                         property, beanName, processingDocLitBare);\n-                                            propertyQnameValueList.add(o == null ? null :\n-                                                    SimpleTypeMapper.getStringValue(o));\n-                                        }\n-                                    }\n-                                } else {\n-                                    addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n-                                                 beanName, processingDocLitBare);\n-                                    propertyQnameValueList.add(value);\n-                                }\n-                            } else {\n-                                Method readMethod = property.getReadMethod();\n-                                Object value[] = null;\n-                                if (readMethod != null) {\n-                                    readMethod.setAccessible(true);\n-                                    value = (Object[])property.getReadMethod().invoke(beanObject,\n-                                                                                      null);\n-                                }\n-\n-                                if (value != null) {\n-                                    for (Object o : value) {\n-                                        addTypeQname(elemntNameSpace, propertyQnameValueList,\n-                                                     property, beanName, processingDocLitBare);\n-                                        propertyQnameValueList.add(o);\n-                                    }\n-                                } else {\n-                                    addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n-                                                 beanName, processingDocLitBare);\n-                                    propertyQnameValueList.add(value);\n-                                }\n-                            }\n-                        } else if (SimpleTypeMapper.isCollection(ptype)) {\n-                            Method readMethod = property.getReadMethod();\n-                            readMethod.setAccessible(true);\n-                            Object value = readMethod.invoke(beanObject,\n-                                                             null);\n-                            Collection objList = (Collection)value;\n-                            if (objList != null && objList.size() > 0) {\n-                                //this was given error , when the array.size = 0\n-                                // and if the array contain simple type , then the ADBPullParser asked\n-                                // PullParser from That simpel type\n-                                for (Object o : objList) {\n-                                    if (SimpleTypeMapper.isSimpleType(o)) {\n-                                        addTypeQname(elemntNameSpace, propertyQnameValueList,\n-                                                     property, beanName, processingDocLitBare);\n-                                        propertyQnameValueList.add(o);\n-                                    } else {\n-                                        addTypeQname(elemntNameSpace, propertyQnameValueList,\n-                                                     property, beanName, processingDocLitBare);\n-                                        propertyQnameValueList.add(o);\n-                                    }\n-                                }\n-\n-                            } else {\n-                                addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n-                                             beanName, processingDocLitBare);\n-                                propertyQnameValueList.add(value);\n+                            propertyQnameValueList.add(value);\n+                        }\n+                    } else {\n+                        if (value != null) {\n+                            for (Object o : (Object[])value) {\n+                                addTypeQname(elemntNameSpace, propertyQnameValueList,\n+                                             property, beanName, processingDocLitBare);\n+                                propertyQnameValueList.add(o);\n                             }\n                         } else {\n                             addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n                                          beanName, processingDocLitBare);\n-                            Method readMethod = property.getReadMethod();\n-                            readMethod.setAccessible(true);\n-                            Object value = readMethod.invoke(beanObject,\n-                                                             null);\n-                            if (\"java.lang.Object\".equals(ptype.getName())) {\n-                                if ((value instanceof Integer) ||\n-                                    (value instanceof Short) ||\n-                                    (value instanceof Long) ||\n-                                    (value instanceof Float)) {\n-                                    propertyQnameValueList.add(value.toString());\n-                                    continue;\n-                                }\n+                            propertyQnameValueList.add(value);\n+                        }\n+                    }\n+                } else if (SimpleTypeMapper.isCollection(ptype)) {\n+                    Collection<?> objList = (Collection<?>)value;\n+                    if (objList != null && objList.size() > 0) {\n+                        //this was given error , when the array.size = 0\n+                        // and if the array contain simple type , then the ADBPullParser asked\n+                        // PullParser from That simpel type\n+                        for (Object o : objList) {\n+                            if (SimpleTypeMapper.isSimpleType(o)) {\n+                                addTypeQname(elemntNameSpace, propertyQnameValueList,\n+                                             property, beanName, processingDocLitBare);\n+                                propertyQnameValueList.add(o);\n+                            } else {\n+                                addTypeQname(elemntNameSpace, propertyQnameValueList,\n+                                             property, beanName, processingDocLitBare);\n+                                propertyQnameValueList.add(o);\n                             }\n+                        }\n \n-                            propertyQnameValueList.add(value);\n+                    } else {\n+                        addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n+                                     beanName, processingDocLitBare);\n+                        propertyQnameValueList.add(value);\n+                    }\n+                } else {\n+                    addTypeQname(elemntNameSpace, propertyQnameValueList, property,\n+                                 beanName, processingDocLitBare);\n+                    if (Object.class.equals(ptype)) {\n+                        if ((value instanceof Integer) ||\n+                            (value instanceof Short) ||\n+                            (value instanceof Long) ||\n+                            (value instanceof Float)) {\n+                            propertyQnameValueList.add(value.toString());\n+                            continue;\n                         }\n                     }\n+\n+                    propertyQnameValueList.add(value);\n                 }\n             }\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/b128ba9fb7be8930fd9a89f8a42790b9af7e5562/modules/adb/src/org/apache/axis2/databinding/utils/BeanUtil.java",
                "sha": "9e2e70c5221017ce16554d67b3a5ee2a861c291b",
                "status": "modified"
            }
        ],
        "message": "* AXIS2-4389: Modified BeanUtil#getPropertyQnameList to consistently throw an exception when a bean property is not readable (has no getter). For some property types this was done correctly, but for others a NullPointerException was thrown.\n* Simplified and cleaned up the code in BeanUtil#getPropertyQnameList.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@785801 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/d93ad84bf3275fd7262a190e4756627c66ff1ba9",
        "patched_files": [
            "BeanUtil.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "BeanUtilTest.java"
        ]
    },
    "axis2-java_c0ff3ba": {
        "bug_id": "axis2-java_c0ff3ba",
        "commit": "https://github.com/apache/axis2-java/commit/c0ff3ba857dc2bf9ef8f908aa16016bd85d13fa5",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/c0ff3ba857dc2bf9ef8f908aa16016bd85d13fa5/modules/kernel/src/org/apache/axis2/deployment/util/Utils.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/util/Utils.java?ref=c0ff3ba857dc2bf9ef8f908aa16016bd85d13fa5",
                "deletions": 1,
                "filename": "modules/kernel/src/org/apache/axis2/deployment/util/Utils.java",
                "patch": "@@ -124,7 +124,8 @@ public static void loadHandler(ClassLoader loader1, HandlerDescription desc)\n \n \t\ttry {\n \t\t\thandlerClass = Loader.loadClass(loader1, handlername);\n-\t\t\tif (handlerClass.getPackage().getName().equals(\n+            Package aPackage = handlerClass.getPackage();\n+            if (aPackage != null && aPackage.getName().equals(\n \t\t\t\t\t\"org.apache.axis2.engine\")) {\n \t\t\t\tString name = handlerClass.getName();\n \t\t\t\tlog.warn(\"Dispatcher \" + name + \" is now deprecated.\");",
                "raw_url": "https://github.com/apache/axis2-java/raw/c0ff3ba857dc2bf9ef8f908aa16016bd85d13fa5/modules/kernel/src/org/apache/axis2/deployment/util/Utils.java",
                "sha": "7d35b2925176d625b9c822e071472d7b2779316f",
                "status": "modified"
            }
        ],
        "message": "Fix for AXIS2-3565 - NullpointerException in org.apache.axis2.deployment.util.Utils.loadHandler method\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@635108 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/c3a8169d7eb3a46d1434309bb92b03c0f277698d",
        "patched_files": [
            "Utils.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "TestUtils.java"
        ]
    },
    "axis2-java_c572588": {
        "bug_id": "axis2-java_c572588",
        "commit": "https://github.com/apache/axis2-java/commit/c57258800611ac4a05163e5f224ceff14c00aa6a",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/project.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/project.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 1,
                "filename": "modules/integration/project.xml",
                "patch": "@@ -332,6 +332,11 @@\n \t  <artifactId>log4j</artifactId>\n \t  <version>${log4j.version}</version>\n \t</dependency>\n+        <dependency>\n+          <groupId>activemq</groupId>\n+          <artifactId>activemq</artifactId>\n+          <version>4.0.1</version>\n+        </dependency>\n         <dependency>\n             <groupId>springframework</groupId>\n             <artifactId>spring-core</artifactId>\n@@ -394,7 +399,6 @@\n                 <exclude>**/*InteropStubTest.class</exclude>\n                 <exclude>**org/apache/axis2/mail/*.class</exclude>\n \t\t<exclude>**org/apache/axis2/transport/DualChannelRequestResponseRawXMLTest.class</exclude>\n-                <exclude>**org/apache/axis2/jms/*.class</exclude>\n                 <exclude>**org/apache/axis2/soap12testing/soap12testsuite/*.class</exclude>\n                 <exclude>**/ScenarioST1Test.class</exclude>\n                 <exclude>**/samples/wsdl/perf2/*.class</exclude>",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/project.xml",
                "sha": "5fa75fa906ff17426317d5bbe4d512f6314e74b6",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 32,
                "filename": "modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java",
                "patch": "@@ -17,24 +17,25 @@\n package org.apache.axis2.integration;\r\n \r\n import org.apache.axis2.AxisFault;\r\n+import org.apache.axis2.Constants;\r\n+import org.apache.axis2.engine.ListenerManager;\r\n+import org.apache.axis2.transport.njms.JMSListener;\r\n import org.apache.axis2.context.ConfigurationContext;\r\n import org.apache.axis2.context.ConfigurationContextFactory;\r\n import org.apache.axis2.context.ServiceGroupContext;\r\n import org.apache.axis2.description.AxisService;\r\n import org.apache.axis2.description.AxisServiceGroup;\r\n-import org.apache.axis2.transport.jms.JNDIVendorAdapter;\r\n-import org.apache.axis2.transport.jms.SimpleJMSListener;\r\n+import org.apache.axis2.description.TransportInDescription;\r\n import org.apache.commons.logging.Log;\r\n import org.apache.commons.logging.LogFactory;\r\n+import org.apache.activemq.broker.BrokerService;\r\n \r\n import javax.xml.namespace.QName;\r\n import java.io.File;\r\n import java.util.HashMap;\r\n \r\n public class UtilsJMSServer {\r\n-    private static int count = 0;\r\n-\r\n-    private static SimpleJMSListener receiver;\r\n+    private static JMSListener receiver;\r\n \r\n     public static final int TESTING_PORT = 5555;\r\n \r\n@@ -60,52 +61,37 @@ public static synchronized void unDeployService(QName service)\n     }\r\n \r\n     public static synchronized void start() throws Exception {\r\n-        if (count == 0) {\r\n-\r\n-            HashMap connectorMap = new HashMap();\r\n-            HashMap cfMap = new HashMap();\r\n-            String destination = \"dynamicQueues/BAR\";\r\n-            String username = null;\r\n-            String password = null;\r\n-            boolean doThreads = true;\r\n-\r\n-            cfMap.put(JNDIVendorAdapter.CONTEXT_FACTORY,\r\n-                    \"org.activemq.jndi.ActiveMQInitialContextFactory\");\r\n-            cfMap.put(JNDIVendorAdapter.PROVIDER_URL, \"tcp://localhost:61616\");\r\n-\r\n-            // start JMS server\r\n+            // start JMS Listener\r\n             File file = new File(REPOSITORY_JMS);\r\n             System.out.println(file.getAbsoluteFile());\r\n             if (!file.exists()) {\r\n                 throw new Exception(\"Repository directory does not exist\");\r\n             }\r\n \r\n-            ConfigurationContext er = ConfigurationContextFactory.createConfigurationContextFromFileSystem(file\r\n+            ConfigurationContext configurationContext = ConfigurationContextFactory.createConfigurationContextFromFileSystem(file\r\n                     .getAbsolutePath(),REPOSITORY_JMS + \"/conf/axis2.xml\");\r\n             try {\r\n                 Thread.sleep(2000);\r\n             } catch (InterruptedException e1) {\r\n                 throw new AxisFault(\"Thread interuptted\", e1);\r\n             }\r\n-            receiver = new SimpleJMSListener(\r\n-                    REPOSITORY_JMS,\r\n-                    connectorMap, cfMap, destination, username, password,\r\n-                    doThreads);\r\n+            receiver = new JMSListener();\r\n+            ListenerManager listenerManager = configurationContext.getListenerManager();\r\n+            TransportInDescription trsIn = configurationContext.getAxisConfiguration().getTransportIn(new QName(Constants.TRANSPORT_JMS));\r\n+            trsIn.setReceiver(receiver);\r\n+            if (listenerManager == null) {\r\n+                listenerManager = new ListenerManager();\r\n+                listenerManager.init(configurationContext);\r\n+            }\r\n+            listenerManager.addListener(trsIn, true);\r\n+            receiver.init(configurationContext, trsIn);\r\n             receiver.start();\r\n-\r\n-        }\r\n-        count++;\r\n     }\r\n \r\n     public static synchronized void stop() {\r\n         try {\r\n-            if (count == 1) {\r\n                 receiver.stop();\r\n-                count = 0;\r\n                 System.out.print(\"Server stopped .....\");\r\n-            } else {\r\n-                count--;\r\n-            }\r\n         } catch (Exception e) {\r\n             log.error(e.getMessage(), e);\r\n         }\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/integration/UtilsJMSServer.java",
                "sha": "2d77cfdc5a00a3028c0720e0d76d7f0dd7836b5b",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 14,
                "filename": "modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java",
                "patch": "@@ -23,15 +23,15 @@\n import org.apache.axiom.om.OMFactory;\n import org.apache.axiom.om.OMNamespace;\n import org.apache.axiom.om.util.StAXUtils;\n-import org.apache.axiom.soap.SOAPFactory;\n import org.apache.axiom.soap.SOAPEnvelope;\n+import org.apache.axiom.soap.SOAPFactory;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n-import org.apache.axis2.wsdl.WSDLConstants;\n+import org.apache.axis2.transport.njms.JMSConstants;\n import org.apache.axis2.addressing.EndpointReference;\n+import org.apache.axis2.client.OperationClient;\n import org.apache.axis2.client.Options;\n import org.apache.axis2.client.ServiceClient;\n-import org.apache.axis2.client.OperationClient;\n import org.apache.axis2.client.async.AsyncResult;\n import org.apache.axis2.client.async.Callback;\n import org.apache.axis2.context.ConfigurationContext;\n@@ -40,27 +40,29 @@\n import org.apache.axis2.description.AxisOperation;\n import org.apache.axis2.description.AxisService;\n import org.apache.axis2.description.OutInAxisOperation;\n-import org.apache.axis2.description.TransportOutDescription;\n-import org.apache.axis2.description.TransportInDescription;\n-import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.description.Parameter;\n import org.apache.axis2.engine.Echo;\n import org.apache.axis2.integration.UtilServer;\n import org.apache.axis2.integration.UtilsJMSServer;\n import org.apache.axis2.util.Utils;\n+import org.apache.axis2.wsdl.WSDLConstants;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.apache.activemq.broker.BrokerService;\n \n import javax.xml.namespace.QName;\n-import javax.xml.stream.XMLOutputFactory;\n import javax.xml.stream.XMLStreamException;\n \n public class JMSEchoRawXMLTest extends TestCase {\n     private EndpointReference targetEPR =\n-            new EndpointReference(\"jms:/dynamicQueues/BAR?ConnectionFactoryJNDIName=ConnectionFactory&java.naming.factory.initial=org.activemq.jndi.ActiveMQInitialContextFactory&java.naming.provider.url=tcp://localhost:61616\");\n+            new EndpointReference(\"jms:/EchoXMLService?\"+JMSConstants.CONFAC_JNDI_NAME_PARAM+\"=ConnectionFactory&java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&java.naming.provider.url=tcp://localhost:61616\");\n     private QName serviceName = new QName(\"EchoXMLService\");\n     private QName operationName = new QName(\"echoOMElement\");\n \n-    private AxisService service;\n+\n+    String destination = \"EchoXMLService\";\n+    BrokerService broker = new BrokerService();\n+\n     private AxisService clientService;\n     private ConfigurationContext configContext;\n \n@@ -76,13 +78,21 @@ public JMSEchoRawXMLTest(String testName) {\n     }\n \n     protected void setUp() throws Exception {\n+        // Start ActiveMQ embedded broker\n+        broker.addConnector(\"tcp://localhost:61616\");\n+        broker.start();\n+\n         UtilsJMSServer.start();\n \n         //create and deploy the service\n-        service =\n-                Utils.createSimpleService(serviceName,\n-                        Echo.class.getName(),\n-                        operationName);\n+        AxisService service = Utils.createSimpleService(serviceName,\n+                Echo.class.getName(),\n+                operationName);\n+        service.getExposedTransports().add(Constants.TRANSPORT_JMS);\n+        Parameter param = new Parameter();\n+        param.setName(JMSConstants.DEST_PARAM);\n+        param.setValue(destination);\n+        service.getParameters().add(param);\n         UtilsJMSServer.deployService(service);\n         clientService = Utils.createSimpleServiceforClient(serviceName,\n                 Echo.class.getName(),\n@@ -92,6 +102,7 @@ protected void setUp() throws Exception {\n \n     protected void tearDown() throws Exception {\n         UtilsJMSServer.stop();\n+        broker.stop();\n     }\n \n     private OMElement createPayload() {\n@@ -190,7 +201,7 @@ public void testEchoXMLCompleteSync() throws Exception {\n                 System.out));\n \n     }\n-\n+    \n     public void testEchoXMLSyncMC() throws Exception {\n         ConfigurationContext configContext =\n                 ConfigurationContextFactory.createConfigurationContextFromFileSystem(Constants.TESTING_REPOSITORY, Constants.TESTING_REPOSITORY + \"/conf/axis2.xml\");",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/JMSEchoRawXMLTest.java",
                "sha": "e48c90daabf0028f9ba78badab006ce1b769ab24",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 6,
                "filename": "modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml",
                "patch": "@@ -60,13 +60,15 @@\n         <!--<parameter name=\"hostname\" locked=\"false\">tcp://myApp.com/ws</parameter>-->\r\n     </transportReceiver>\r\n \r\n-    <!--Uncomment this if you want JMS transport support-->\r\n-    <transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.jms.SimpleJMSListener\">\r\n-        <parameter name=\"transport.jms.Destination\" locked=\"false\">dynamicQueues/FOO</parameter>\r\n-        <parameter name=\"java.naming.factory.initial\" locked=\"false\">org.activemq.jndi.ActiveMQInitialContextFactory</parameter>\r\n-        <parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>\r\n+    <transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.njms.JMSListener\">\r\n+        <parameter name=\"default\" locked=\"false\">        \t        \t\r\n+        \t<parameter name=\"java.naming.factory.initial\" locked=\"false\">org.apache.activemq.jndi.ActiveMQInitialContextFactory</parameter>\r\n+        \t<parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>        \t\r\n+        \t<parameter name=\"transport.jms.ConnectionFactoryJNDIName\" locked=\"false\">QueueConnectionFactory</parameter>\r\n+        </parameter>\r\n     </transportReceiver>\r\n \r\n+\r\n     <!-- ================================================= -->\r\n     <!-- Transport Outs -->\r\n     <!-- ================================================= -->\r\n@@ -76,7 +78,7 @@\n     <transportSender name=\"local\"\r\n                      class=\"org.apache.axis2.transport.local.LocalTransportSender\"/>\r\n     <transportSender name=\"jms\"\r\n-                     class=\"org.apache.axis2.transport.jms.JMSSender\"/>\r\n+                     class=\"org.apache.axis2.transport.njms.JMSSender\"/>\r\n     <transportSender name=\"http\"\r\n                      class=\"org.apache.axis2.transport.http.CommonsHTTPTransportSender\">\r\n         <parameter name=\"PROTOCOL\" locked=\"false\">HTTP/1.1</parameter>\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-client-axis2.xml",
                "sha": "256fbc97e17ea01a43b0ca2c262976907af97be9",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 8,
                "filename": "modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml",
                "patch": "@@ -60,13 +60,13 @@\n         <!--<parameter name=\"hostname\" locked=\"false\">tcp://myApp.com/ws</parameter>-->\r\n     </transportReceiver>\r\n \r\n-    <!--Uncomment this if you want JMS transport support-->\r\n-    <!--<transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.jms.SimpleJMSListener\">-->\r\n-    <!--<parameter name=\"transport.jms.Destination\" locked=\"false\">dynamicQueues/FOO</parameter>-->\r\n-    <!--<parameter name=\"java.naming.factory.initial\" locked=\"false\">-->\r\n-    <!--org.activemq.jndi.ActiveMQInitialContextFactory</parameter>-->\r\n-    <!--<parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>-->\r\n-    <!--</transportReceiver>-->\r\n+    <transportReceiver name=\"jms\" class=\"org.apache.axis2.transport.njms.JMSListener\">\r\n+        <parameter name=\"default\" locked=\"false\">        \t        \t\r\n+        \t<parameter name=\"java.naming.factory.initial\" locked=\"false\">org.apache.activemq.jndi.ActiveMQInitialContextFactory</parameter>\r\n+        \t<parameter name=\"java.naming.provider.url\" locked=\"false\">tcp://localhost:61616</parameter>        \t\r\n+        \t<parameter name=\"transport.jms.ConnectionFactoryJNDIName\" locked=\"false\">QueueConnectionFactory</parameter>\r\n+        </parameter>\r\n+    </transportReceiver>\r\n \r\n     <!-- ================================================= -->\r\n     <!-- Transport Outs -->\r\n@@ -77,7 +77,7 @@\n     <transportSender name=\"local\"\r\n                      class=\"org.apache.axis2.transport.local.LocalTransportSender\"/>\r\n     <transportSender name=\"jms\"\r\n-                     class=\"org.apache.axis2.transport.jms.JMSSender\"/>\r\n+                     class=\"org.apache.axis2.transport.njms.JMSSender\"/>\r\n     <transportSender name=\"http\"\r\n                      class=\"org.apache.axis2.transport.http.CommonsHTTPTransportSender\">\r\n         <parameter name=\"PROTOCOL\" locked=\"false\">HTTP/1.1</parameter>\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/integration/test/org/apache/axis2/jms/jms-enabled-server-axis2.xml",
                "sha": "1f8a819141df00522ba5e207b27256026ff16282",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/java2wsdl/pom.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/java2wsdl/pom.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 4,
                "filename": "modules/java2wsdl/pom.xml",
                "patch": "@@ -64,10 +64,6 @@\n       <groupId>javax.mail</groupId>\n       <artifactId>mail</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.geronimo.specs</groupId>\n-      <artifactId>geronimo-jms_1.1_spec</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>jaxen</groupId>\n       <artifactId>jaxen</artifactId>",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/java2wsdl/pom.xml",
                "sha": "0b0a607c4d6e79cf9301827827dd83bc24045722",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/conf/axis2.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/conf/axis2.xml?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 0,
                "filename": "modules/kernel/conf/axis2.xml",
                "patch": "@@ -128,6 +128,8 @@\n         <parameter name=\"PROTOCOL\" locked=\"false\">HTTP/1.1</parameter>\r\n         <parameter name=\"Transfer-Encoding\" locked=\"false\">chunked</parameter>\r\n     </transportSender>\r\n+    <transportSender name=\"jms\"\r\n+                     class=\"org.apache.axis2.transport.njms.JMSSender\"/>\r\n \r\n     <!-- Uncomment this one with the appropriate papameters to enable the SMTP transport Receiver\r\n    <transportSender name=\"mailto\" class=\"org.apache.axis2.transport.mail.MailTransportSender\">\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/conf/axis2.xml",
                "sha": "12a23d6ced51d583f7222ffd0907266ae5e34029",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 0,
                "filename": "modules/kernel/src/org/apache/axis2/engine/AxisEngine.java",
                "patch": "@@ -630,6 +630,9 @@ public void send(MessageContext msgContext) throws AxisFault {\n \n             // write the Message to the Wire\n             TransportOutDescription transportOut = msgContext.getTransportOut();\n+            if(transportOut == null) {\n+                throw new AxisFault(\"Transport out has not been set\");\n+            }\n             TransportSender sender = transportOut.getSender();\n             // This boolean property only used in client side fireAndForget invocation\n             //It will set a property into message context and if some one has set the",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/engine/AxisEngine.java",
                "sha": "d0c7d9454b1a148b9a2fb5f91406df09157e1af1",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 5,
                "filename": "modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java",
                "patch": "@@ -270,11 +270,6 @@\n      */\n     public static final String HEADER_COOKIE = \"Cookie\";\n \n-    /**\n-     * Field HEADER_CONTENT_TYPE_JMS\n-     */\n-    public static final String HEADER_CONTENT_TYPE_JMS = \"ContentType\";\n-\n     /**\n      * Field HEADER_CONTENT_TYPE\n      */",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/http/HTTPConstants.java",
                "sha": "e670e27f6770cf89ae13b5e292473ba716fffdaa",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/axis2-java/blob/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java?ref=c57258800611ac4a05163e5f224ceff14c00aa6a",
                "deletions": 2,
                "filename": "modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java",
                "patch": "@@ -117,7 +117,6 @@ public void init(ConfigurationContext axisConf,\n \n         while (services.hasNext()) {\n             AxisService service = (AxisService) services.next();\n-            boolean process = service.isEnableAllTransports();\n             if (JMSUtils.isJMSService(service)) {\n                 processService(service);\n             }\n@@ -323,7 +322,11 @@ public void stop() {\n      * @throws AxisFault not used\n      */\n     public EndpointReference[] getEPRsForService(String serviceName, String ip) throws AxisFault {\n-          return new EndpointReference[]{new EndpointReference((String) serviceNameToEprMap.get(serviceName))};\n+        //Strip out the operation name\n+        if (serviceName.indexOf('/') != -1) {\n+            serviceName = serviceName.substring(0, serviceName.indexOf('/'));\n+        }\n+        return new EndpointReference[]{new EndpointReference((String) serviceNameToEprMap.get(serviceName))};\n     }\n \n     /**\n@@ -465,4 +468,8 @@ public boolean isParameterLocked(String parameterName) {\n         public void serviceGroupUpdate(AxisEvent event, AxisServiceGroup serviceGroup) {\n         }\n     }\n+\n+    public ConfigurationContext getConfigurationContext() {\n+        return this.axisConf;\n+    }\n }",
                "raw_url": "https://github.com/apache/axis2-java/raw/c57258800611ac4a05163e5f224ceff14c00aa6a/modules/kernel/src/org/apache/axis2/transport/njms/JMSListener.java",
                "sha": "4ea7eda0417ab60827dad3f1757dfaad3b6a8262",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/dddc3b325fd9712bc9f2860f9b38c9738970fc23/modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml?ref=dddc3b325fd9712bc9f2860f9b38c9738970fc23",
                "deletions": 17,
                "filename": "modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml",
                "patch": "@@ -1,17 +0,0 @@\n-<wsdl:definitions xmlns:axis2=\"http://test.java2wsdl.maven2.axis2.apache.org\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:ns1=\"http://test.java2wsdl.maven2.axis2.apache.org/xsd\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" targetNamespace=\"http://test.java2wsdl.maven2.axis2.apache.org\"><wsdl:types><xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:ax21=\"http://test.java2wsdl.maven2.axis2.apache.org/xsd\" attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://test.java2wsdl.maven2.axis2.apache.org/xsd\">\n-<xs:element name=\"add\">\n-<xs:complexType>\n-<xs:sequence>\n-<xs:element name=\"p1\" type=\"xs:int\" />\n-<xs:element name=\"p2\" type=\"xs:int\" />\n-</xs:sequence>\n-</xs:complexType>\n-</xs:element>\n-<xs:element name=\"addResponse\">\n-<xs:complexType>\n-<xs:sequence>\n-<xs:element name=\"return\" type=\"xs:int\" />\n-</xs:sequence>\n-</xs:complexType>\n-</xs:element>\n-</xs:schema></wsdl:types><wsdl:message name=\"addMessage\"><wsdl:part name=\"part1\" element=\"ns1:add\" /></wsdl:message><wsdl:message name=\"addResponseMessage\"><wsdl:part name=\"part1\" element=\"ns1:addResponse\" /></wsdl:message><wsdl:portType name=\"AdderPortType\"><wsdl:operation name=\"add\"><wsdl:input message=\"axis2:addMessage\" /><wsdl:output message=\"axis2:addResponseMessage\" /></wsdl:operation></wsdl:portType><wsdl:binding name=\"AdderSOAP11Binding\" type=\"axis2:AdderPortType\"><soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"document\" /><wsdl:operation name=\"add\"><soap:operation soapAction=\"urn:add\" style=\"document\" /><wsdl:input><soap:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:input><wsdl:output><soap:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:output></wsdl:operation></wsdl:binding><wsdl:binding name=\"AdderSOAP12Binding\" type=\"axis2:AdderPortType\"><soap12:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"document\" /><wsdl:operation name=\"add\"><soap12:operation soapAction=\"urn:add\" style=\"document\" /><wsdl:input><soap12:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:input><wsdl:output><soap12:body use=\"literal\" namespace=\"http://test.java2wsdl.maven2.axis2.apache.org\" /></wsdl:output></wsdl:operation></wsdl:binding><wsdl:service name=\"Adder\"><wsdl:port name=\"AdderSOAP11port\" binding=\"axis2:AdderSOAP11Binding\"><soap:address location=\"http://localhost:8080/axis2/services/Adder\" /></wsdl:port><wsdl:port name=\"AdderSOAP12port\" binding=\"axis2:AdderSOAP12Binding\"><soap12:address location=\"http://localhost:8080/axis2/services/Adder\" /></wsdl:port></wsdl:service></wsdl:definitions>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/axis2-java/raw/dddc3b325fd9712bc9f2860f9b38c9738970fc23/modules/tool/axis2-java2wsdl-maven-plugin/src/test/test1/target/generated-sources/java2wsdl/service.xml",
                "sha": "266ee5467a41e4bbd384418bae2b2a153813161d",
                "status": "removed"
            }
        ],
        "message": "- Remove generated target directory \n- Remove unnecessary dependency in java2wsdl pom\n- Get JMSEchoRawXMLTest test case working with njms package\n- Fix an NPE in AxisEngine\n- Remove unused constant in HTTPConstants.java\n- Fix getEPRsForService in njms/JMSListener\n- Most importantly, download activemq and run the unit test always.\n\nNext step: make sure nothing is broken, get rid of jms/* and then rename njms to jms.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@447298 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/dddc3b325fd9712bc9f2860f9b38c9738970fc23",
        "patched_files": [
            "HTTPConstants.java",
            "jms-enabled-server-axis2.java",
            "jms-enabled-client-axis2.java",
            "project.java",
            "UtilsJMSServer.java",
            "AxisEngine.java",
            "pom.java",
            "JMSListener.java",
            "service.java",
            "axis2.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "JMSEchoRawXMLTest.java"
        ]
    },
    "axis2-java_ce2f3c9": {
        "bug_id": "axis2-java_ce2f3c9",
        "commit": "https://github.com/apache/axis2-java/commit/ce2f3c98dad10104d03dfc73395c1281182a3945",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingFinalInHandler.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingFinalInHandler.java?ref=ce2f3c98dad10104d03dfc73395c1281182a3945",
                "deletions": 2,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingFinalInHandler.java",
                "patch": "@@ -37,11 +37,11 @@ public AddressingFinalInHandler() {\n     }\r\n \r\n \r\n-    protected void extractToEprReferenceParameters(EndpointReference toEPR, SOAPHeader header) {\r\n+    protected void extractToEprReferenceParameters(EndpointReference toEPR, SOAPHeader header, String namespace) {\r\n         Iterator headerBlocks = header.getChildElements();\r\n         while (headerBlocks.hasNext()) {\r\n             SOAPHeaderBlock soapHeaderBlock = (SOAPHeaderBlock) headerBlocks.next();\r\n-            OMAttribute isRefParamAttr = soapHeaderBlock.getAttribute(new QName(addressingNamespace, \"IsReferenceParameter\"));\r\n+            OMAttribute isRefParamAttr = soapHeaderBlock.getAttribute(new QName(namespace, \"IsReferenceParameter\"));\r\n             if (isRefParamAttr != null && \"true\".equals(isRefParamAttr.getAttributeValue())) {\r\n                 toEPR.addReferenceParameter(soapHeaderBlock.getQName(), soapHeaderBlock.getText());\r\n             }\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingFinalInHandler.java",
                "sha": "0d67e327bdbdfe1c95cc967d2ab80594586ee415",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/axis2-java/blob/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java?ref=ce2f3c98dad10104d03dfc73395c1281182a3945",
                "deletions": 13,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java",
                "patch": "@@ -44,6 +44,7 @@\n     private OMNamespace addressingNSObject;\n \n     public void invoke(MessageContext msgContext) throws AxisFault {\n+        String namespace = addressingNamespace;\n         SOAPHeader header = msgContext.getEnvelope().getHeader();\n \n         // if there is some one who has already found addressing, do not do anything here.\n@@ -60,13 +61,13 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         logger.debug(\"Starting \" + addressingVersion + \" IN handler ...\");\n \n         ArrayList addressingHeaders;\n-        addressingHeaders = header.getHeaderBlocksWithNSURI(addressingNamespace);\n+        addressingHeaders = header.getHeaderBlocksWithNSURI(namespace);\n         if (addressingHeaders != null && addressingHeaders.size() > 0) {\n-            msgContext.setProperty(WS_ADDRESSING_VERSION, addressingNamespace);\n+            msgContext.setProperty(WS_ADDRESSING_VERSION, namespace);\n             msgContext.setProperty(Constants.Configuration.DISABLE_ADDRESSING_FOR_OUT_MESSAGES, Boolean.FALSE);\n-            addressingNSObject = ((OMElement) addressingHeaders.get(0)).findNamespace(addressingNamespace, \"\");\n+            addressingNSObject = ((OMElement) addressingHeaders.get(0)).findNamespace(namespace, \"\");\n             logger.debug(addressingVersion + \" Headers present in the SOAP message. Starting to process ...\");\n-            extractAddressingInformation(header, msgContext, addressingHeaders, addressingNamespace);\n+            extractAddressingInformation(header, msgContext, addressingHeaders, namespace);\n         } else {\n             msgContext.setProperty(Constants.Configuration.DISABLE_ADDRESSING_FOR_OUT_MESSAGES, Boolean.TRUE);\n             logger.debug(\"No Headers present corresponding to \" + addressingVersion);\n@@ -76,7 +77,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n     }\n \n     protected Options extractAddressingInformation(SOAPHeader header, MessageContext messageContext,\n-                                                   ArrayList addressingHeaders, String addressingNamespace) throws AxisFault {\n+                                                   ArrayList addressingHeaders, String namespace) throws AxisFault {\n \n         Options messageContextOptions = messageContext.getOptions();\n         \n@@ -119,21 +120,21 @@ protected Options extractAddressingInformation(SOAPHeader header, MessageContext\n                 continue;\n             \n             if (WSA_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreTo) {\n-                extractToEPRInformation(soapHeaderBlock, messageContextOptions, header);\n+                extractToEPRInformation(soapHeaderBlock, messageContextOptions, header, namespace);\n             } else if (WSA_FROM.equals(soapHeaderBlock.getLocalName()) && !ignoreFrom) {\n-                extractFromEPRInformation(messageContextOptions, soapHeaderBlock, addressingNamespace);\n+                extractFromEPRInformation(messageContextOptions, soapHeaderBlock, namespace);\n             } else if (WSA_REPLY_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreReplyTo) {\n-                extractReplyToEPRInformation(messageContextOptions, soapHeaderBlock, addressingNamespace);\n+                extractReplyToEPRInformation(messageContextOptions, soapHeaderBlock, namespace);\n             } else if (WSA_FAULT_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreFaultTo) {\n-                extractFaultToEPRInformation(messageContextOptions, soapHeaderBlock, addressingNamespace);\n+                extractFaultToEPRInformation(messageContextOptions, soapHeaderBlock, namespace);\n             } else if (WSA_MESSAGE_ID.equals(soapHeaderBlock.getLocalName()) && !ignoreMessageID) {\n                 messageContextOptions.setMessageId(soapHeaderBlock.getText());\n                 soapHeaderBlock.setProcessed();\n             } else if (WSA_ACTION.equals(soapHeaderBlock.getLocalName()) && !ignoreAction) {\n                 messageContextOptions.setAction(soapHeaderBlock.getText());\n                 soapHeaderBlock.setProcessed();\n             } else if (WSA_RELATES_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreRelatesTo) {\n-                extractRelatesToInformation(soapHeaderBlock, addressingNamespace, messageContextOptions);\n+                extractRelatesToInformation(soapHeaderBlock, namespace, messageContextOptions);\n             }\n         }\n \n@@ -188,7 +189,7 @@ private void throwFault(MessageContext messageContext, String addressingHeaderNa\n         throw new AxisFault(\"A header representing a Message Addressing Property is not valid and the message cannot be processed\", WSA_DEFAULT_PREFIX + \":\" + faultCode);\n     }\n \n-    protected abstract void extractToEprReferenceParameters(EndpointReference toEPR, SOAPHeader header);\n+    protected abstract void extractToEprReferenceParameters(EndpointReference toEPR, SOAPHeader header, String namespace);\n \n \n     private void extractRelatesToInformation(SOAPHeaderBlock soapHeaderBlock, String addressingNamespace, Options messageContextOptions) {\n@@ -244,15 +245,15 @@ private void extractFromEPRInformation(Options messageContextOptions, SOAPHeader\n         soapHeaderBlock.setProcessed();\n     }\n \n-    private void extractToEPRInformation(SOAPHeaderBlock soapHeaderBlock, Options messageContextOptions, SOAPHeader header) {\n+    private void extractToEPRInformation(SOAPHeaderBlock soapHeaderBlock, Options messageContextOptions, SOAPHeader header, String namespace) {\n \n         EndpointReference epr;\n         //here the addressing epr overidde what ever already there in the message context\n         epr = new EndpointReference(soapHeaderBlock.getText());\n         messageContextOptions.setTo(epr);\n \n         // check for reference parameters\n-        extractToEprReferenceParameters(epr, header);\n+        extractToEprReferenceParameters(epr, header, namespace);\n         soapHeaderBlock.setProcessed();\n \n     }",
                "raw_url": "https://github.com/apache/axis2-java/raw/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java",
                "sha": "e26146743739692c8d8a4e0d809b77f97f92e59a",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/axis2-java/blob/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "changes": 62,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=ce2f3c98dad10104d03dfc73395c1281182a3945",
                "deletions": 37,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "patch": "@@ -53,6 +53,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         SOAPFactory factory = (SOAPFactory)msgContext.getEnvelope().getOMFactory();\n         \n         OMNamespace addressingNamespaceObject;\n+        String namespace = addressingNamespace;\n \n         // it should be able to disable addressing by some one.\n         Boolean\n@@ -75,25 +76,25 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n             // since we support only two addressing versions I can avoid multiple  ifs here.\n             // see that if message context property holds something other than Final.WSA_NAMESPACE\n             // we always defaults to Submission.WSA_NAMESPACE. Hope this is fine.\n-            addressingNamespace = Final.WSA_NAMESPACE.equals(addressingVersionFromCurrentMsgCtxt)\n+            namespace = Final.WSA_NAMESPACE.equals(addressingVersionFromCurrentMsgCtxt)\n                     ? Final.WSA_NAMESPACE : Submission.WSA_NAMESPACE;\n         } else if (msgContext.getOperationContext() != null)\n         { // check for a IN message context, else default to WSA Final\n             MessageContext inMessageContext = msgContext.getOperationContext()\n                     .getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n             if (inMessageContext != null) {\n-                addressingNamespace =\n+                namespace =\n                         (String) inMessageContext.getProperty(\n                                 WS_ADDRESSING_VERSION);\n             }\n         }\n \n-        if (addressingNamespace == null || \"\".equals(addressingNamespace)) {\n-            addressingNamespace = Final.WSA_NAMESPACE;\n+        if (namespace == null || \"\".equals(namespace)) {\n+            namespace = Final.WSA_NAMESPACE;\n         }\n         addressingNamespaceObject = factory.createOMNamespace(\n-                addressingNamespace, WSA_DEFAULT_PREFIX);\n-        anonymousURI = addressingNamespace.equals(Final.WSA_NAMESPACE) ? Final.WSA_ANONYMOUS_URL : Submission.WSA_ANONYMOUS_URL;\n+                namespace, WSA_DEFAULT_PREFIX);\n+        anonymousURI = namespace.equals(Final.WSA_NAMESPACE) ? Final.WSA_ANONYMOUS_URL : Submission.WSA_ANONYMOUS_URL;\n \n \n         Options messageContextOptions = msgContext.getOptions();\n@@ -113,16 +114,16 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         envelope.declareNamespace(addressingNamespaceObject);\n \n         // processing WSA To\n-        processToEPR(messageContextOptions, envelope, addressingNamespaceObject);\n+        processToEPR(messageContextOptions, envelope, addressingNamespaceObject, namespace);\n \n         // processing WSA replyTo\n-        processReplyTo(envelope, messageContextOptions, msgContext, addressingNamespaceObject);\n+        processReplyTo(envelope, messageContextOptions, msgContext, addressingNamespaceObject, namespace);\n \n         // processing WSA From\n-        processFromEPR(messageContextOptions, envelope, addressingNamespaceObject);\n+        processFromEPR(messageContextOptions, envelope, addressingNamespaceObject, namespace);\n \n         // processing WSA FaultTo\n-        processFaultToEPR(messageContextOptions, envelope, addressingNamespaceObject);\n+        processFaultToEPR(messageContextOptions, envelope, addressingNamespaceObject, namespace);\n \n         String messageID = messageContextOptions.getMessageId();\n         if (messageID != null && !isAddressingHeaderAlreadyAvailable(WSA_MESSAGE_ID, envelope,\n@@ -141,8 +142,6 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n \n         // We are done, cleanup the references\n         addressingNamespaceObject = null;\n-        addressingNamespace = null;\n-\n     }\n \n     private void processWSAAction(Options messageContextOptions, SOAPEnvelope envelope,\n@@ -211,23 +210,23 @@ private void processRelatesTo(SOAPEnvelope envelope, Options messageContextOptio\n         }\n     }\n \n-    private void processFaultToEPR(Options messageContextOptions, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject) {\n+    private void processFaultToEPR(Options messageContextOptions, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject, String namespace) {\n         EndpointReference epr;\n         epr = messageContextOptions.getFaultTo();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope, addressingNamespaceObject);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FAULT_TO, envelope, addressingNamespaceObject, namespace);\n         }\n     }\n \n-    private void processFromEPR(Options messageContextOptions, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject) {\n+    private void processFromEPR(Options messageContextOptions, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject, String namespace) {\n         EndpointReference epr;\n         epr = messageContextOptions.getFrom();\n         if (epr != null) {//optional\n-            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope, addressingNamespaceObject);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_FROM, envelope, addressingNamespaceObject, namespace);\n         }\n     }\n \n-    private void processReplyTo(SOAPEnvelope envelope, Options messageContextOptions, MessageContext msgContext, OMNamespace addressingNamespaceObject) {\n+    private void processReplyTo(SOAPEnvelope envelope, Options messageContextOptions, MessageContext msgContext, OMNamespace addressingNamespaceObject, String namespace) {\n         EndpointReference epr;\n         if (!isAddressingHeaderAlreadyAvailable(WSA_REPLY_TO, envelope, addressingNamespaceObject))\n         {\n@@ -251,35 +250,24 @@ private void processReplyTo(SOAPEnvelope envelope, Options messageContextOptions\n                     epr.setAddress(anonymousURI);\n                 }\n             }\n-            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope, addressingNamespaceObject);\n+            addToSOAPHeader(epr, AddressingConstants.WSA_REPLY_TO, envelope, addressingNamespaceObject, namespace);\n         }\n     }\n \n-    private void processToEPR(Options messageContextOptions, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject) {\n+    private void processToEPR(Options messageContextOptions, SOAPEnvelope envelope, OMNamespace addressingNamespaceObject, String namespace) {\n         EndpointReference epr = messageContextOptions.getTo();\n         if (epr != null && !isAddressingHeaderAlreadyAvailable(WSA_TO, envelope, addressingNamespaceObject))\n         {\n             Map referenceParameters = null;\n             String address = \"\";\n-//            System.out.println(\"envelope = \" + envelope);\n-//            if (envelope.getBody().hasFault()) {\n-//                MessageContext inMsgCtxt = msgCtxt.getOperationContext().getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n-//                if (inMsgCtxt != null && inMsgCtxt.getFaultTo() != null && inMsgCtxt.getFaultTo().getAddress() != null)\n-//                {\n-//                    EndpointReference faultTo = inMsgCtxt.getFaultTo();\n-//                    address = faultTo.getAddress();\n-//                    referenceParameters = faultTo.getAllReferenceParameters();\n-//                }\n-//            } else {\n             address = epr.getAddress();\n             referenceParameters = epr.getAllReferenceParameters();\n-//            }\n \n             if (!\"\".equals(address) && address != null) {\n                 SOAPHeaderBlock toHeaderBlock = envelope.getHeader().addHeaderBlock(WSA_TO, addressingNamespaceObject);\n                 toHeaderBlock.setText(address);\n             }\n-            processToEPRReferenceInformation(referenceParameters, envelope.getHeader(),addressingNamespaceObject);\n+            processToEPRReferenceInformation(referenceParameters, envelope.getHeader(),addressingNamespaceObject, namespace);\n         }\n     }\n \n@@ -299,7 +287,7 @@ private OMElement processStringInfo(String value,\n \n     protected void addToSOAPHeader(EndpointReference epr,\n                                    String type,\n-                                   SOAPEnvelope envelope, OMNamespace addressingNamespaceObject) {\n+                                   SOAPEnvelope envelope, OMNamespace addressingNamespaceObject, String namespace) {\n         if (epr == null || isAddressingHeaderAlreadyAvailable(type, envelope, addressingNamespaceObject))\n         {\n             return;\n@@ -322,7 +310,7 @@ protected void addToSOAPHeader(EndpointReference epr,\n                     envelope.getOMFactory().createOMElement(\n                             EPR_REFERENCE_PARAMETERS,\n                             addressingNamespaceObject, soapHeaderBlock);\n-            processReferenceInformation(referenceParameters, reference);\n+            processReferenceInformation(referenceParameters, reference, namespace);\n \n         }\n \n@@ -364,9 +352,9 @@ protected void addToSOAPHeader(EndpointReference epr,\n      *\n      * @param referenceInformation\n      */\n-    private void processReferenceInformation(Map referenceInformation, OMElement parent) {\n+    private void processReferenceInformation(Map referenceInformation, OMElement parent, String namespace) {\n \n-        boolean processingWSAFinal = Final.WSA_NAMESPACE.equals(addressingNamespace);\n+        boolean processingWSAFinal = Final.WSA_NAMESPACE.equals(namespace);\n         if (referenceInformation != null && parent != null) {\n             Iterator iterator = referenceInformation.keySet().iterator();\n             while (iterator.hasNext()) {\n@@ -382,9 +370,9 @@ private void processReferenceInformation(Map referenceInformation, OMElement par\n      *\n      * @param referenceInformation\n      */\n-    private void processToEPRReferenceInformation(Map referenceInformation, OMElement parent, OMNamespace addressingNamespaceObject) {\n+    private void processToEPRReferenceInformation(Map referenceInformation, OMElement parent, OMNamespace addressingNamespaceObject, String namespace) {\n \n-        boolean processingWSAFinal = Final.WSA_NAMESPACE.equals(addressingNamespace);\n+        boolean processingWSAFinal = Final.WSA_NAMESPACE.equals(namespace);\n         if (referenceInformation != null && parent != null) {\n             Iterator iterator = referenceInformation.keySet().iterator();\n             while (iterator.hasNext()) {",
                "raw_url": "https://github.com/apache/axis2-java/raw/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "sha": "adc79f6b849cd3ca1167e115ae1f3e59a5289c71",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingSubmissionInHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingSubmissionInHandler.java?ref=ce2f3c98dad10104d03dfc73395c1281182a3945",
                "deletions": 1,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingSubmissionInHandler.java",
                "patch": "@@ -36,7 +36,7 @@ public AddressingSubmissionInHandler() {\n     }\r\n \r\n \r\n-    protected void extractToEprReferenceParameters(EndpointReference toEPR, SOAPHeader header) {\r\n+    protected void extractToEprReferenceParameters(EndpointReference toEPR, SOAPHeader header, String namespace) {\r\n         // there is no exact way to identify ref parameters for Submission version. So let's have a handler\r\n         // at the end of the flow, which puts all the handlers (which are of course mustUnderstand=false)\r\n         // as reference parameters\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/ce2f3c98dad10104d03dfc73395c1281182a3945/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingSubmissionInHandler.java",
                "sha": "bcdbf15131fdd37a9b1c44d3e5683d62453b13dd",
                "status": "modified"
            }
        ],
        "message": "Fix for AXIS2-564 - Addressing throwing java.lang.NullPointerException when load is heavy\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@394756 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/5d1a5b8ab05e31ecc50f1c22552f6d44c0164a4c",
        "patched_files": [
            "AddressingOutHandler.java",
            "AddressingInHandler.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AddressingInHandlerTest.java",
            "AddressingOutHandlerTest.java"
        ]
    },
    "axis2-java_cf78546": {
        "bug_id": "axis2-java_cf78546",
        "commit": "https://github.com/apache/axis2-java/commit/cf78546215f4cfb29fa53446050240a9a5bd1e18",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/axis2-java/blob/cf78546215f4cfb29fa53446050240a9a5bd1e18/modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/MessageContext.java?ref=cf78546215f4cfb29fa53446050240a9a5bd1e18",
                "deletions": 4,
                "filename": "modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "patch": "@@ -1579,7 +1579,7 @@ public Policy getEffectivePolicy() {\n         // If AxisBindingMessage is not set, try to find the binding message from the AxisService\n         if (bindingMessage == null) {\n         \tbindingMessage = findBindingMessage();\n-        } \n+        }\n         \n         if (bindingMessage != null) {\n             return bindingMessage.getEffectivePolicy();\n@@ -1592,15 +1592,21 @@ public Policy getEffectivePolicy() {\n     }\n  \n     private AxisBindingMessage findBindingMessage() {\n-    \tif (axisService != null) {\n+    \tif (axisService != null && axisOperation != null ) {\n \t\t\tif (axisService.getEndpointName() != null) {\n \t\t\t\tAxisEndpoint axisEndpoint = axisService\n \t\t\t\t\t\t.getEndpoint(axisService.getEndpointName());\n \t\t\t\tif (axisEndpoint != null) {\n \t\t\t\t\tAxisBinding axisBinding = axisEndpoint.getBinding();\n-\t\t\t\t\tAxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisBinding\n+                    AxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisBinding\n \t\t\t\t\t\t\t.getChild(axisOperation.getName());\n-\t\t\t\t\tString direction = axisMessage.getDirection();\n+\n+                    //If Binding Operation is not found, just return null\n+                    if (axisBindingOperation == null) {\n+                       return null;\n+                    }\n+\n+                    String direction = axisMessage.getDirection();\n \t\t\t\t\tAxisBindingMessage axisBindingMessage = null;\n \t\t\t\t\tif (WSDLConstants.WSDL_MESSAGE_DIRECTION_IN\n \t\t\t\t\t\t\t.equals(direction)",
                "raw_url": "https://github.com/apache/axis2-java/raw/cf78546215f4cfb29fa53446050240a9a5bd1e18/modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "sha": "be9e6e675de13b60a92123b9ce42fe89f7ed5ef3",
                "status": "modified"
            }
        ],
        "message": "AXIS2-4114 check for possible NPE which caused a problem in rampart build\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@725307 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/25fae37067d61c389cadba203d8eed88ae5d23f8",
        "patched_files": [
            "MessageContext.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "MessageContextTests.java",
            "MessageContextTest.java"
        ]
    },
    "axis2-java_cfa571c": {
        "bug_id": "axis2-java_cfa571c",
        "commit": "https://github.com/apache/axis2-java/commit/cfa571cc9f6e9e66d18184294c66d36ab6fc425a",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/cfa571cc9f6e9e66d18184294c66d36ab6fc425a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java?ref=cfa571cc9f6e9e66d18184294c66d36ab6fc425a",
                "deletions": 1,
                "filename": "modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "patch": "@@ -781,7 +781,14 @@ private void validateProviderInterfaces() {\n         } else {\n             // We are in MESSAGE mode\n             // Conformance: JAXWS Spec.- Sec. 4.3 (javax.activation.DataSource)\n-            String bindingType = composite.getBindingTypeAnnot().value();\n+            \n+            // REVIEW: Should the provider interface validation be moved to post-construction validation, \n+            // since it seems that the logic to understand the default values for binding type \n+            // (see comment below) should be left to the creation of the Description objects.\n+            String bindingType = null;\n+            if (composite.getBindingTypeAnnot() != null ) {\n+                bindingType = composite.getBindingTypeAnnot().value();\n+            }\n \n             Iterator<String> iter = composite.getInterfacesList().iterator();\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/cfa571cc9f6e9e66d18184294c66d36ab6fc425a/modules/metadata/src/org/apache/axis2/jaxws/description/impl/ServiceDescriptionImpl.java",
                "sha": "f16661ebe1928190287dd09e17acba98f1daee17",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in provider validation logic when binding type annotation not specified.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@508546 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/fc2352f41c1ca391afcdb8eee84074aca4c6d10e",
        "patched_files": [
            "ServiceDescriptionImpl.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "ServiceDescriptionImplTests.java"
        ]
    },
    "axis2-java_d3bb06c": {
        "bug_id": "axis2-java_d3bb06c",
        "commit": "https://github.com/apache/axis2-java/commit/d3bb06ce799dd867a1bdd42c36f9d36861dd52d6",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis2-java/blob/d3bb06ce799dd867a1bdd42c36f9d36861dd52d6/modules/kernel/src/org/apache/axis2/client/ServiceClient.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/client/ServiceClient.java?ref=d3bb06ce799dd867a1bdd42c36f9d36861dd52d6",
                "deletions": 1,
                "filename": "modules/kernel/src/org/apache/axis2/client/ServiceClient.java",
                "patch": "@@ -857,7 +857,10 @@ public void cleanupTransport() throws AxisFault {\n                     lastOperationContext\n                             .getMessageContext(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);\n             if (outMessageContext != null) {\n-                outMessageContext.getTransportOut().getSender().cleanup(outMessageContext);\n+                if (outMessageContext.getTransportOut() != null &&\n+                        outMessageContext.getTransportOut().getSender() != null) {\n+                    outMessageContext.getTransportOut().getSender().cleanup(outMessageContext);\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/axis2-java/raw/d3bb06ce799dd867a1bdd42c36f9d36861dd52d6/modules/kernel/src/org/apache/axis2/client/ServiceClient.java",
                "sha": "9eb84cd37a9d8cc3cfc8903ed76ec99ba5f4fee1",
                "status": "modified"
            }
        ],
        "message": "Simple NPE avoidance check\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/core/trunk@983407 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/94f71c83a0d9618e93771862ad7ff8ec7b512908",
        "patched_files": [
            "ServiceClient.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "ServiceClientTest.java"
        ]
    },
    "axis2-java_d44b79b": {
        "bug_id": "axis2-java_d44b79b",
        "commit": "https://github.com/apache/axis2-java/commit/d44b79b11ef433556bef560893deb0f8b0ebeeae",
        "file": [
            {
                "additions": 84,
                "blob_url": "https://github.com/apache/axis2-java/blob/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java",
                "changes": 168,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java?ref=d44b79b11ef433556bef560893deb0f8b0ebeeae",
                "deletions": 84,
                "filename": "modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java",
                "patch": "@@ -16,28 +16,12 @@\n \n package org.apache.axis2.deployment;\n \n-import com.ibm.wsdl.util.xml.DOM2Writer;\n-import org.apache.axis2.AxisFault;\n-import org.apache.axis2.description.AxisMessage;\n-import org.apache.axis2.description.AxisOperation;\n-import org.apache.axis2.description.AxisOperationFactory;\n-import org.apache.axis2.description.AxisService;\n-import org.apache.axis2.description.PolicyInclude;\n-import org.apache.axis2.om.OMAbstractFactory;\n-import org.apache.axis2.om.impl.llom.factory.OMXMLBuilderFactory;\n-import org.apache.axis2.util.XMLUtils;\n-import org.apache.ws.commons.schema.XmlSchema;\n-import org.apache.ws.commons.schema.XmlSchemaCollection;\n-import org.apache.ws.policy.Policy;\n-import org.apache.ws.policy.PolicyConstants;\n-import org.apache.ws.policy.PolicyReference;\n-import org.apache.ws.policy.util.OMPolicyReader;\n-import org.apache.ws.policy.util.PolicyFactory;\n-import org.apache.wsdl.WSDLConstants;\n-import org.apache.wsdl.impl.WSDLProcessingException;\n-import org.w3c.dom.Document;\n-import org.w3c.dom.Element;\n-import org.xml.sax.SAXException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n \n import javax.wsdl.Binding;\n import javax.wsdl.BindingInput;\n@@ -53,7 +37,6 @@\n import javax.wsdl.PortType;\n import javax.wsdl.Service;\n import javax.wsdl.Types;\n-import javax.wsdl.WSDLException;\n import javax.wsdl.extensions.ExtensibilityElement;\n import javax.wsdl.extensions.UnknownExtensibilityElement;\n import javax.wsdl.extensions.schema.Schema;\n@@ -62,16 +45,27 @@\n import javax.xml.namespace.QName;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n-import javax.xml.stream.XMLInputFactory;\n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.StringWriter;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n+\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.description.AxisMessage;\n+import org.apache.axis2.description.AxisOperation;\n+import org.apache.axis2.description.AxisOperationFactory;\n+import org.apache.axis2.description.AxisService;\n+import org.apache.axis2.description.PolicyInclude;\n+import org.apache.axis2.util.XMLUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.ws.commons.schema.XmlSchema;\n+import org.apache.ws.commons.schema.XmlSchemaCollection;\n+import org.apache.ws.policy.Policy;\n+import org.apache.ws.policy.PolicyConstants;\n+import org.apache.ws.policy.PolicyReference;\n+import org.apache.ws.policy.util.DOMPolicyReader;\n+import org.apache.ws.policy.util.PolicyFactory;\n+import org.apache.wsdl.WSDLConstants;\n+import org.apache.wsdl.impl.WSDLProcessingException;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n \n /**\n  * AxisServiceBuilder builds an AxisService using a WSDL document which is input\n@@ -110,43 +104,45 @@\n \n     private static final String XMLNS_AXIS2WRAPPED = \"xmlns:axis2wrapped\";\n \n+    private Log logger = LogFactory.getLog(this.getClass().getName());\n+\n     private int nsCount = 1;\n \n     public AxisService getAxisService(InputStream wsdlInputStream)\n-            throws WSDLException {\n-        WSDLReader reader = WSDLFactory.newInstance().newWSDLReader();\n-        reader.setFeature(\"javax.wsdl.importDocuments\", true);\n-\n-        Document doc;\n+            throws DeploymentException {\n+        logger\n+                .debug(\"Entering AxisServiceBuilder:getAxisService(java.io.InputStream)\");\n \n         try {\n-            doc = XMLUtils.newDocument(wsdlInputStream);\n-\n-        } catch (ParserConfigurationException e) {\n-            throw new WSDLException(WSDLException.PARSER_ERROR,\n-                    \"Parser Configuration Error\", e);\n-\n-        } catch (SAXException e) {\n-            throw new WSDLException(WSDLException.PARSER_ERROR,\n-                    \"Parser SAX Error\", e);\n-\n-        } catch (IOException e) {\n-            throw new WSDLException(WSDLException.INVALID_WSDL, \"IO Error\", e);\n+            Document doc = XMLUtils.newDocument(wsdlInputStream);\n+            WSDLReader reader = WSDLFactory.newInstance().newWSDLReader();\n+            reader.setFeature(\"javax.wsdl.importDocuments\", true);\n+\n+            Definition wsdlDefinition = reader.readWSDL(null, doc);\n+            return getAxisService(wsdlDefinition);\n+\n+        } catch (Exception e) {\n+            logger\n+                    .error(\n+                            \"Exception occured when creating the Document from WSDL\",\n+                            e);\n+            throw new DeploymentException(e);\n         }\n-\n-        Definition wsdlDefinition = reader.readWSDL(null, doc);\n-        return getAxisService(wsdlDefinition);\n     }\n \n     public AxisService getAxisService(Definition wsdlDefinition)\n-            throws WSDLProcessingException {\n+            throws DeploymentException {\n+        logger\n+                .debug(\"Entering AxisServiceBuilder:getAxisService(javax.wsdl.Definition)\");\n \n         AxisService axisService = new AxisService();\n         axisService.setWSDLDefinition(wsdlDefinition);\n         Map services = wsdlDefinition.getServices();\n \n         if (services.isEmpty()) {\n-            throw new WSDLProcessingException(\"no Service element is found\");\n+            logger.error(\"No javax.wsdl.Service element found\");\n+            throw new DeploymentException(\n+                    \"No javax.wsdl.Service element is found\");\n         }\n \n         Iterator serviceIterator = services.values().iterator();\n@@ -376,14 +372,20 @@ public AxisService getAxisService(Definition wsdlDefinition)\n                 }\n \n             } catch (AxisFault axisFault) {\n-                throw new WSDLProcessingException(axisFault.getMessage());\n+                logger\n+                        .error(\n+                                \"Exception when creating AxisOperation for the AxisService\",\n+                                axisFault);\n+\n+                throw new DeploymentException(axisFault.getMessage());\n             }\n             axisService.addOperation(axisOperation);\n         }\n         return axisService;\n     }\n \n     private int getMessageExchangePattern(Operation wsdl4jOperation) {\n+        logger.debug(\"AxisServiceBuilder.getMessageExchangePattern\");\n \n         if (wsdl4jOperation.getOutput() == null) {\n             return WSDLConstants.MEP_CONSTANT_IN_ONLY;\n@@ -394,17 +396,21 @@ private int getMessageExchangePattern(Operation wsdl4jOperation) {\n     }\n \n     private XmlSchema getXMLSchema(Element element) {\n+        logger.debug(\"AxisServiceBuilder:getXMLSchema\");\n         return (new XmlSchemaCollection()).read(element);\n     }\n \n-    private Document getDOMDocument() {\n+    private Document getDOMDocument() throws DeploymentException {\n+        logger.debug(\"AxisServiceBuilder:getDOMDocument\");\n         try {\n             DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance();\n             fac.setNamespaceAware(true);\n             return fac.newDocumentBuilder().newDocument();\n \n         } catch (ParserConfigurationException ex) {\n-            throw new WSDLProcessingException(ex.getMessage());\n+            logger.error(\"Exception occured when creating a Decument element\",\n+                    ex);\n+            throw new DeploymentException(ex.getMessage());\n         }\n     }\n \n@@ -413,7 +419,8 @@ private String getTempPrefix() {\n     }\n \n     private XmlSchema generateWrapperSchema(Definition wsdl4jDefinition,\n-            Map resolvedRpcWrappedElementMap) {\n+            Map resolvedRpcWrappedElementMap) throws DeploymentException {\n+        logger.debug(\"AxisServiceBuilder.generateWrapperSchema\");\n \n         //TODO check me\n         Map declaredNameSpaces = wsdl4jDefinition.getNamespaces();\n@@ -436,10 +443,10 @@ private XmlSchema generateWrapperSchema(Definition wsdl4jDefinition,\n         Map namespacePrefixMap = new HashMap();\n         ///////////////////////\n         String targetNamespaceUri = wsdl4jDefinition.getTargetNamespace();\n-        ////////////////////////////////////////////////////////////////////////////////////////////////////\n+        ////////////////////////////////////////////////////////////////////////\n         // First thing is to populate the message map with the messages to\n         // process.\n-        ////////////////////////////////////////////////////////////////////////////////////////////////////\n+        ////////////////////////////////////////////////////////////////////////\n         Map porttypeMap = wsdl4jDefinition.getPortTypes();\n         PortType[] porttypesArray = (PortType[]) porttypeMap.values().toArray(\n                 new PortType[porttypeMap.size()]);\n@@ -469,11 +476,11 @@ private XmlSchema generateWrapperSchema(Definition wsdl4jDefinition,\n \n         }\n \n-        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n+        ////////////////////////////////////////////////////////////////////////\n         //check whether there are messages that are wrappable. If there are no\n         // messages that are wrappable we'll\n         //just return null and endup this process\n-        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n+        ////////////////////////////////////////////////////////////////////////\n         QName[] keys = (QName[]) messagesMap.keySet().toArray(\n                 new QName[messagesMap.size()]);\n         boolean noMessagesTobeProcessed = true;\n@@ -488,11 +495,11 @@ private XmlSchema generateWrapperSchema(Definition wsdl4jDefinition,\n             return null;\n         }\n \n-        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n+        ////////////////////////////////////////////////////////////////////////\n         // Now we have the message list to process - Process the whole list of\n         // messages at once\n         //since\n-        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n+        ////////////////////////////////////////////////////////////////////////\n         List resolvedMessageQNames = new ArrayList();\n         //find the xsd prefix\n         String xsdPrefix = findSchemaPrefix(declaredNameSpaces);\n@@ -535,6 +542,7 @@ private XmlSchema generateWrapperSchema(Definition wsdl4jDefinition,\n                         schemaTypeName = part.getElementName();\n                         isTyped = false;\n                     } else {\n+                        logger.error(\"Exception occured while creating wrapper element\");\n                         throw new RuntimeException(\" Unqualified Message part!\");\n                     }\n \n@@ -728,6 +736,7 @@ private boolean findWrapppable(Message message) {\n      * Find the XML schema prefix\n      */\n     private String findSchemaPrefix(Map declaredNameSpaces) {\n+        logger.debug(\"AxisServiceBuilder.findSchemaPerfix\");\n         String xsdPrefix = null;\n         if (declaredNameSpaces.containsValue(XMLSCHEMA_NAMESPACE_URI)) {\n             //loop and find the prefix\n@@ -786,12 +795,14 @@ private QName generateReferenceQname(QName outerName,\n         return referenceQName;\n     }\n \n-    private List getPoliciesAsExtElements(List extElementsList) {\n+    private List getPoliciesAsExtElements(List extElementsList)\n+            throws DeploymentException {\n+        \n         ArrayList policies = new ArrayList();\n \n         Iterator extElements = extElementsList.iterator();\n-        OMPolicyReader reader = (OMPolicyReader) PolicyFactory\n-                .getPolicyReader(PolicyFactory.OM_POLICY_READER);\n+        DOMPolicyReader reader = (DOMPolicyReader) PolicyFactory\n+                .getPolicyReader(PolicyFactory.DOM_POLICY_READER);\n         Object extElement;\n \n         while (extElements.hasNext()) {\n@@ -804,25 +815,20 @@ private List getPoliciesAsExtElements(List extElementsList) {\n                         .getNamespaceURI())\n                         && PolicyConstants.WS_POLICY.equals(element\n                                 .getLocalName())) {\n-                    policies.add(reader.readPolicy(getInputStream(element)));\n+                    policies.add(reader.readPolicy(element));\n \n                 } else if (PolicyConstants.WS_POLICY_NAMESPACE_URI\n                         .equals(element.getNamespaceURI())\n                         && PolicyConstants.WS_POLICY_REFERENCE.equals(element\n                                 .getLocalName())) {\n \n                     try {\n-                        policies.add(reader.readPolicyReference(\n-\n-                        OMXMLBuilderFactory.createStAXOMBuilder(\n-                                OMAbstractFactory.getOMFactory(),\n-                                XMLInputFactory.newInstance()\n-                                        .createXMLStreamReader(\n-                                                getInputStream(element)))\n-                                .getDocumentElement()));\n+                        policies.add(reader.readPolicyReference(element));\n \n                     } catch (Exception ex) {\n-                        throw new WSDLProcessingException(ex.getMessage());\n+                        logger\n+                                .debug(\"Exception occured when processing policy elements\");\n+                        throw new DeploymentException(ex.getMessage());\n                     }\n                 }\n             }\n@@ -850,12 +856,6 @@ private List getPoliciesAsExtAttributes(Map extAttributes) {\n         return policies;\n     }\n \n-    private InputStream getInputStream(Element e) {\n-        StringWriter sw = new StringWriter();\n-        DOM2Writer.serializeAsXML(e, sw);\n-        return new ByteArrayInputStream(sw.toString().getBytes());\n-    }\n-\n     private void addPolicyElements(int type, List policyElements,\n             PolicyInclude policyInclude) {\n         Iterator policyElementIterator = policyElements.iterator();",
                "raw_url": "https://github.com/apache/axis2-java/raw/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/deployment/AxisServiceBuilder.java",
                "sha": "6a11a83a31804036d7a927713fe8bd4050d64c92",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java?ref=d44b79b11ef433556bef560893deb0f8b0ebeeae",
                "deletions": 2,
                "filename": "modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java",
                "patch": "@@ -98,8 +98,7 @@ public AxisService populateService(OMElement service_element) throws DeploymentE\n             }\n \n             // setting the PolicyInclude\n-//            PolicyInclude policyInclude = service.getPolicyInclude();\n-\n+            \n             // processing <wsp:Policy> .. </..> elements\n             Iterator policyElements = service_element.getChildrenWithName(new QName(POLICY_NS_URI, TAG_POLICY));\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java",
                "sha": "414dd2e57579a29fe61cd42a1d349343484f74fb",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis2-java/blob/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java?ref=d44b79b11ef433556bef560893deb0f8b0ebeeae",
                "deletions": 4,
                "filename": "modules/core/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java",
                "patch": "@@ -272,12 +272,8 @@ public ArrayList processServiceGroup(String filename, DeploymentEngine engine,\n      * @throws DeploymentException\n      */\n     private AxisService processWSDLFile(InputStream in) throws DeploymentException {\n-        try {\n             AxisServiceBuilder axisServiceBuilder = new AxisServiceBuilder();\n             return axisServiceBuilder.getAxisService(in);\n-        } catch (WSDLException e) {\n-            throw new DeploymentException(e);\n-        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/axis2-java/raw/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/deployment/repository/util/ArchiveReader.java",
                "sha": "d117f585ec1b57b5dcc0b43669c4b8265904e17f",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/axis2-java/blob/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/util/PolicyUtil.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/core/src/org/apache/axis2/util/PolicyUtil.java?ref=d44b79b11ef433556bef560893deb0f8b0ebeeae",
                "deletions": 3,
                "filename": "modules/core/src/org/apache/axis2/util/PolicyUtil.java",
                "patch": "@@ -55,19 +55,26 @@ public static void populatePolicy(WSDLDescription description,\n     private static void populatePolicy(WSDLDescription description,\n                                        WSDLService wsdlService, AxisService axisService) {\n \n-        AxisServiceGroup axisServiceGroup = axisService.getParent();\n-        //TODO : Sanka please be carefull , your code given NPEs all over the places\n-        AxisConfiguration axisConfiguration = axisServiceGroup.getParent();\n+        AxisServiceGroup axisServiceGroup = null;\n+        AxisConfiguration axisConfiguration = null;\n+        \n+        axisServiceGroup = axisService.getParent();\n+        \n+        if (axisServiceGroup == null) {\n+            axisConfiguration = axisServiceGroup.getParent();\n+        }\n \n         PolicyInclude servicePolicyInclude = axisService.getPolicyInclude();\n \n         List policyList;\n \n         // Policies defined in Axis2.xml\n+        if (axisConfiguration != null) {\n         policyList = axisConfiguration.getPolicyInclude().getPolicyElements(\n                 PolicyInclude.AXIS_POLICY);\n         addPolicyAsExtElements(description, policyList, wsdlService,\n                 servicePolicyInclude);\n+        }\n \n         // Policies defined in wsdl:Service\n         policyList = servicePolicyInclude",
                "raw_url": "https://github.com/apache/axis2-java/raw/d44b79b11ef433556bef560893deb0f8b0ebeeae/modules/core/src/org/apache/axis2/util/PolicyUtil.java",
                "sha": "e3e93da4628f3dbd52c830328c31a06636d81373",
                "status": "modified"
            }
        ],
        "message": "Fixed: NullPointerException is thrown when populating a AxisService which doesnt belong to a ServiceGroup using PolicyUtil\nAdded: Logging in AxisServiceBuilder\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@366134 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/bd24db7d0abdb8cc36cdf8d9b698fb580c599ef8",
        "patched_files": [
            "AxisServiceBuilder.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AxisServiceBuilderTest.java"
        ]
    },
    "axis2-java_d49587a": {
        "bug_id": "axis2-java_d49587a",
        "commit": "https://github.com/apache/axis2-java/commit/d49587a9cefd2d10f89cfa98f14a4649e7014510",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/axis2-java/blob/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java?ref=d49587a9cefd2d10f89cfa98f14a4649e7014510",
                "deletions": 4,
                "filename": "modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java",
                "patch": "@@ -43,8 +43,9 @@\n \tpublic Parameter getProperty() {\n \t\tOMFactory fac = OMAbstractFactory.getOMFactory();\n \t\tOMNamespace ns = fac.createOMNamespace(\"\", null);\n-\t\tOMElement propertyElement = fac.createOMElement(\n-\t\t\t\tWSSHandlerConstants.INFLOW_SECURITY, ns);\n+        //TODO: Find the constants for \"Parameter\" and \"name\"\n+        OMElement paramElement = fac.createOMElement(\"Parameter\",ns);\n+        paramElement.addAttribute(fac.createOMAttribute(\"name\", null ,WSSHandlerConstants.INFLOW_SECURITY));\n \t\t\n \t\tOMElement actionElem = fac.createOMElement(\n \t\t\t\tWSSHandlerConstants.ACTION, ns);\n@@ -65,10 +66,11 @@ public Parameter getProperty() {\n             }\n \t\t}\n \t\t\n-\t\tpropertyElement.addChild(actionElem);\n+\t\tparamElement.addChild(actionElem);\n \t\t\n \t\tParameterImpl param = new ParameterImpl();\n-\t\tparam.setParameterElement(propertyElement);\n+\t\tparam.setParameterElement(paramElement);\n+        param.setName(WSSHandlerConstants.INFLOW_SECURITY);\n \t\t\n \t\treturn param;\n \t}",
                "raw_url": "https://github.com/apache/axis2-java/raw/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/InflowConfiguration.java",
                "sha": "af437667a83a3465709c9cfc21cf4276cbe7badb",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/axis2-java/blob/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java?ref=d49587a9cefd2d10f89cfa98f14a4649e7014510",
                "deletions": 4,
                "filename": "modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java",
                "patch": "@@ -68,8 +68,9 @@ public Parameter getProperty() {\n \t\t\n \t\tOMFactory fac = OMAbstractFactory.getOMFactory();\n \t\tOMNamespace ns = fac.createOMNamespace(\"\", null);\n-\t\tOMElement propertyElement = fac.createOMElement(\n-\t\t\t\tWSSHandlerConstants.OUTFLOW_SECURITY, ns);\n+        //TODO: Find the constants for \"Parameter\" and \"name\"\n+        OMElement paramElement = fac.createOMElement(\"Parameter\",ns);\n+\t\tparamElement.addAttribute(fac.createOMAttribute(\"name\", null ,WSSHandlerConstants.OUTFLOW_SECURITY));\n \n \t\t\n \t\tfor (int i = 0; i < this.actionList.length; i++) {\n@@ -96,11 +97,12 @@ public Parameter getProperty() {\n                 }\n \t\t\t}\n \t\t\t\n-\t\t\tpropertyElement.addChild(actionElem);\n+\t\t\tparamElement.addChild(actionElem);\n \t\t}\n \t\t\n \t\tParameterImpl param = new ParameterImpl();\n-\t\tparam.setParameterElement(propertyElement);\n+\t\tparam.setParameterElement(paramElement);\n+        param.setName(WSSHandlerConstants.OUTFLOW_SECURITY);\n \t\treturn param;\n \t}\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/security/src/org/apache/axis2/security/handler/config/OutflowConfiguration.java",
                "sha": "f38186dcee46f043782da39bc710d45cda98f701",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java?ref=d49587a9cefd2d10f89cfa98f14a4649e7014510",
                "deletions": 1,
                "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java",
                "patch": "@@ -117,8 +117,8 @@ protected void serializeElement(XMLStreamReader reader,\n             throws XMLStreamException {\n         String prefix = reader.getPrefix();\n         String nameSpaceName = reader.getNamespaceURI();\n-        String writer_prefix = writer.getPrefix(nameSpaceName);\n         if (nameSpaceName != null) {\n+            String writer_prefix = writer.getPrefix(nameSpaceName);\n             if (writer_prefix != null) {\n                 writer.writeStartElement(nameSpaceName, reader.getLocalName());\n             } else {",
                "raw_url": "https://github.com/apache/axis2-java/raw/d49587a9cefd2d10f89cfa98f14a4649e7014510/modules/xml/src/org/apache/axis2/om/impl/llom/serialize/StreamingOMSerializer.java",
                "sha": "12af776334eeb0c16a2c7d529991f9d295864ad0",
                "status": "modified"
            }
        ],
        "message": "- Preventing an NPE in StreamingOMSerializer.serializeElement(XMLStreamReader reader, XMLStreamWriter writer)\n- Generate the proper prameter element from InflowConfiguration and OutflowConfiguration\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@372460 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/ae0fae641ad4290747938b88c2f5f7a00e96a5d9",
        "patched_files": [
            "InflowConfiguration.java",
            "OutflowConfiguration.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "OutflowConfigurationTest.java",
            "InflowConfigurationTest.java"
        ]
    },
    "axis2-java_d5e1e0c": {
        "bug_id": "axis2-java_d5e1e0c",
        "commit": "https://github.com/apache/axis2-java/commit/d5e1e0c330fae42c1e6008957ea157517e129712",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 5,
                "filename": "modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java",
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n import org.apache.axis2.cluster.tribes.ChannelSender;\n import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n import org.apache.catalina.tribes.Channel;\n import org.apache.catalina.tribes.ChannelException;\n import org.apache.catalina.tribes.Member;\n@@ -36,15 +37,15 @@\n \n     private List listeners = null;\n     private ChannelSender sender = null;\n-    private AxisConfiguration axisConfiguration = null;\n+    private ConfigurationContext configurationContext = null;\n \n     public TribesConfigurationManager() {\n         listeners = new ArrayList();\n     }\n \n     public void addConfigurationManagerListener(ConfigurationManagerListener listener) {\n-        if (axisConfiguration != null) {\n-            listener.setAxisConfiguration(axisConfiguration);\n+        if (configurationContext != null) {\n+            listener.setConfigurationContext(configurationContext);\n         }\n \n         listeners.add(listener);\n@@ -138,8 +139,8 @@ public void notifyListeners(int command, ConfigurationEvent event) {\n         }\n     }\n \n-    public void setAxisConfiguration(AxisConfiguration axisConfiguration) {\n-        this.axisConfiguration = axisConfiguration;\n+    public void setConfigurationContext(ConfigurationContext configurationContext) {\n+        this.configurationContext = configurationContext;\n     }\n \n }",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/src/org/apache/axis2/cluster/tribes/configuration/TribesConfigurationManager.java",
                "sha": "0d489462963b5df3fb9adb2be2da3663b49bf689",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 4,
                "filename": "modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java",
                "patch": "@@ -20,8 +20,6 @@\n \n import org.apache.axis2.cluster.ClusterManager;\n import org.apache.axis2.cluster.ClusteringFault;\n-import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n-import org.apache.axis2.cluster.context.ContextManagerListener;\n import org.apache.axis2.cluster.listeners.DefaultContextManagerListener;\n import org.apache.axis2.clustering.configuration.TestConfigurationManagerListener;\n import org.apache.axis2.context.ConfigurationContext;\n@@ -70,8 +68,8 @@ protected void setUp() throws Exception {\n \t\tcontextManagerListener2 = new DefaultContextManagerListener ();\n \t\tclusterManager2.getContextManager(). addContextManagerListener (contextManagerListener2);\t\n \n-\t\tclusterManager1.getConfigurationManager().setAxisConfiguration(configurationContext1.getAxisConfiguration());\n-\t\tclusterManager2.getConfigurationManager().setAxisConfiguration(configurationContext2.getAxisConfiguration());\n+\t\tclusterManager1.getConfigurationManager().setConfigurationContext(configurationContext1.getAxisConfiguration());\n+\t\tclusterManager2.getConfigurationManager().setConfigurationContext(configurationContext2.getAxisConfiguration());\n \t\t\n \t\tconfigurationManagerListener1 = new TestConfigurationManagerListener ();\n \t\tclusterManager1.getConfigurationManager().addConfigurationManagerListener(configurationManagerListener1);",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/ClusterManagerTestCase.java",
                "sha": "fcace643beb0c6ebf990a3ad8d37a2f3863554f0",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java",
                "changes": 106,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 53,
                "filename": "modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java",
                "patch": "@@ -16,62 +16,62 @@\n \n package org.apache.axis2.clustering.configuration;\n \n-import java.util.ArrayList;\n import org.apache.axis2.cluster.configuration.ConfigurationEvent;\n import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n-import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n+\n+import java.util.ArrayList;\n \n public class TestConfigurationManagerListener implements ConfigurationManagerListener {\n \n-\tArrayList eventList = null;\n-\tprivate AxisConfiguration axisConfiguration = null;\n-\t\n-\tpublic TestConfigurationManagerListener () {\n-\t\teventList = new ArrayList ();\n-\t}\n-\t\n-\tpublic void handleException(Throwable throwable) {\n-\t\t// TODO Auto-generated method stub\n-\t}\n-\n-\tpublic void clearEventList () {\n-\t\teventList.clear();\n-\t}\n-\t\n-\tpublic ArrayList getEventList() {\n-\t\treturn eventList;\n-\t}\n-\n-\tpublic void commitCalled(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void configurationReloaded(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void policyApplied(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void prepareCalled(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void rollbackCalled(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void serviceGroupLoaded(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void serviceGroupUnloaded(ConfigurationEvent event) {\n-\t\teventList.add(event);\n-\t}\n-\n-\tpublic void setAxisConfiguration(AxisConfiguration axisConfiguration) {\n-\t\tthis.axisConfiguration = axisConfiguration;\n-\t}\n-\t\n+    ArrayList eventList = null;\n+    private ConfigurationContext configurationContext = null;\n+\n+    public TestConfigurationManagerListener() {\n+        eventList = new ArrayList();\n+    }\n+\n+    public void handleException(Throwable throwable) {\n+        // TODO Auto-generated method stub\n+    }\n+\n+    public void clearEventList() {\n+        eventList.clear();\n+    }\n+\n+    public ArrayList getEventList() {\n+        return eventList;\n+    }\n+\n+    public void commitCalled(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void configurationReloaded(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void policyApplied(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void prepareCalled(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void rollbackCalled(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void serviceGroupLoaded(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void serviceGroupUnloaded(ConfigurationEvent event) {\n+        eventList.add(event);\n+    }\n+\n+    public void setConfigurationContext(ConfigurationContext configurationContext) {\n+        this.configurationContext = configurationContext;\n+    }\n }",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/clustering/test/org/apache/axis2/clustering/configuration/TestConfigurationManagerListener.java",
                "sha": "8c4016f9e1d20d249e5c9fc821fe0fb7c3b11691",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 1,
                "filename": "modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java",
                "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.axis2.cluster.ClusteringFault;\n import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n import org.apache.neethi.Policy;\n \n public interface ConfigurationManager {\n@@ -55,5 +56,5 @@\n      */\n     void addConfigurationManagerListener(ConfigurationManagerListener listener);\n \n-    void setAxisConfiguration(AxisConfiguration axisConfiguration);\n+    void setConfigurationContext(ConfigurationContext configurationContext);\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManager.java",
                "sha": "e463130c6bd6b7f02ae1bdc01dbf52226dfd5c40",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 1,
                "filename": "modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java",
                "patch": "@@ -17,6 +17,7 @@\n package org.apache.axis2.cluster.configuration;\n \n import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.axis2.context.ConfigurationContext;\n \n public interface ConfigurationManagerListener {\n     void serviceGroupLoaded(ConfigurationEvent event);\n@@ -27,5 +28,5 @@\n     void rollbackCalled (ConfigurationEvent event);\n     void commitCalled (ConfigurationEvent event);\n     void handleException(Throwable throwable);\n-    void setAxisConfiguration (AxisConfiguration axisConfiguration);\n+    void setConfigurationContext (ConfigurationContext configurationContext);\n }",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/cluster/configuration/ConfigurationManagerListener.java",
                "sha": "aeaf487dd2cef3f00a270a9201d80bc92f0a9955",
                "status": "modified"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java",
                "changes": 70,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 33,
                "filename": "modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.axis2.Constants;\n import org.apache.axis2.cluster.ClusterManager;\n import org.apache.axis2.cluster.ClusteringConstants;\n+import org.apache.axis2.cluster.configuration.ConfigurationManager;\n import org.apache.axis2.cluster.context.ContextManager;\n import org.apache.axis2.description.AxisService;\n import org.apache.axis2.description.AxisServiceGroup;\n@@ -36,12 +37,7 @@\n \n import java.io.File;\n import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.Hashtable;\n-import java.util.Iterator;\n-import java.util.Map;\n+import java.util.*;\n \n /**\n  * This contains all the configuration information for Axis2.\n@@ -89,23 +85,29 @@ private void initConfigContextTimeout(AxisConfiguration axisConfiguration) {\n \n     public void initCluster() throws AxisFault {\n         ClusterManager clusterManager = axisConfiguration.getClusterManager();\n-        if (clusterManager!=null) {\n-        \tContextManager contextManager = clusterManager.getContextManager();\n-        \tif (contextManager!=null)\n-        \t\tcontextManager.setConfigurationContext(this);\n-        }\n-        \n-        if (shouldClusterBeInitiated(clusterManager))\n-        \tclusterManager.init(this);\n-    }\n-    \n-    private static boolean shouldClusterBeInitiated (ClusterManager clusterManager) {\n-    \tParameter param = clusterManager.getParameter(ClusteringConstants.AVOID_INITIATION_KEY);\n-    \tif (param!=null && JavaUtils.isTrueExplicitly(param.getValue()))\n-    \t\treturn false;\n-    \telse \n-    \t\treturn true;\n-    }\t\n+        if (clusterManager != null) {\n+            ContextManager contextManager = clusterManager.getContextManager();\n+            if (contextManager != null) {\n+                contextManager.setConfigurationContext(this);\n+            }\n+            ConfigurationManager configManager = clusterManager.getConfigurationManager();\n+            if (configManager != null) {\n+                configManager.setConfigurationContext(this);\n+            }\n+            if (shouldClusterBeInitiated(clusterManager)) {\n+                clusterManager.init(this);\n+            }\n+        }\n+    }\n+\n+    private static boolean shouldClusterBeInitiated(ClusterManager clusterManager) {\n+        Parameter param = clusterManager.getParameter(ClusteringConstants.AVOID_INITIATION_KEY);\n+        if (param != null && JavaUtils.isTrueExplicitly(param.getValue())) {\n+            return false;\n+        } else {\n+            return true;\n+        }\n+    }\n \n     protected void finalize() throws Throwable {\n         super.finalize();\n@@ -156,9 +158,10 @@ public void fillServiceContextAndServiceGroupContext(\n \n                     ClusterManager clusterManager = this.getAxisConfiguration().getClusterManager();\n                     if (clusterManager != null) {\n-                    \tContextManager contextManager = clusterManager.getContextManager();\n-                    \tif (contextManager!=null)\n-                    \t\tcontextManager.addContext(serviceGroupContext);\n+                        ContextManager contextManager = clusterManager.getContextManager();\n+                        if (contextManager != null) {\n+                            contextManager.addContext(serviceGroupContext);\n+                        }\n                     }\n                 }\n                 messageContext.setServiceGroupContext(serviceGroupContext);\n@@ -171,7 +174,7 @@ public void fillServiceContextAndServiceGroupContext(\n                             serviceGroupContextId, messageContext);\n                     if (serviceGroupContext == null) {\n                         throw new AxisFault(\"Unable to find corresponding context\" +\n-                                \" for the serviceGroupId: \" + serviceGroupContextId);\n+                                            \" for the serviceGroupId: \" + serviceGroupContextId);\n                     }\n                 } else {\n                     AxisServiceGroup axisServiceGroup = (AxisServiceGroup) axisService.getParent();\n@@ -185,9 +188,10 @@ public void fillServiceContextAndServiceGroupContext(\n \n                     ClusterManager clusterManager = this.getAxisConfiguration().getClusterManager();\n                     if (clusterManager != null) {\n-                    \tContextManager contextManager = clusterManager.getContextManager();\n-                    \tif (contextManager!=null)\n-                    \t\tcontextManager.addContext(serviceGroupContext);\n+                        ContextManager contextManager = clusterManager.getContextManager();\n+                        if (contextManager != null) {\n+                            contextManager.addContext(serviceGroupContext);\n+                        }\n                     }\n \n                     messageContext.setServiceGroupContextId(serviceGroupContextId);\n@@ -317,7 +321,7 @@ public OperationContext findOperationContext(String operationName, String servic\n                     {\n                         if ((valueServiceName != null) && (valueServiceName.equals(serviceName))) {\n                             if ((valueServiceGroupName != null) && (serviceGroupName != null)\n-                                    && (valueServiceGroupName.equals(serviceGroupName))) {\n+                                && (valueServiceGroupName.equals(serviceGroupName))) {\n                                 // match\n                                 return value;\n                             }\n@@ -444,7 +448,7 @@ private void cleanupServiceGroupContexts() {\n             ServiceGroupContext serviceGroupContext =\n                     (ServiceGroupContext) serviceGroupContextMap.get(sgCtxtId);\n             if ((currentTime - serviceGroupContext.getLastTouchedTime()) >\n-                    getServiceGroupContextTimoutInterval()) {\n+                getServiceGroupContextTimoutInterval()) {\n                 sgCtxtMapKeyIter.remove();\n                 cleanupServiceContexts(serviceGroupContext);\n             }\n@@ -475,7 +479,7 @@ private void cleanupServiceContexts(ServiceGroupContext serviceGroupContext) {\n \n     public void cleanupContexts() {\n         if ((applicationSessionServiceGroupContextTable != null) &&\n-                (applicationSessionServiceGroupContextTable.size() > 0)) {\n+            (applicationSessionServiceGroupContextTable.size() > 0)) {\n             Iterator applicationScopeSgs =\n                     applicationSessionServiceGroupContextTable.values().iterator();\n             while (applicationScopeSgs.hasNext()) {",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContext.java",
                "sha": "f5a05189cb801ee2265c8b1c20d74bedbb15fec7",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 9,
                "filename": "modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java",
                "patch": "@@ -18,14 +18,7 @@\n \n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n-import org.apache.axis2.cluster.ClusterManager;\n-import org.apache.axis2.cluster.ClusteringConstants;\n-import org.apache.axis2.deployment.AxisConfigBuilder;\n-import org.apache.axis2.deployment.DeploymentConstants;\n-import org.apache.axis2.deployment.DeploymentEngine;\n-import org.apache.axis2.deployment.DeploymentException;\n-import org.apache.axis2.deployment.FileSystemConfigurator;\n-import org.apache.axis2.deployment.URLBasedAxisConfigurator;\n+import org.apache.axis2.deployment.*;\n import org.apache.axis2.deployment.util.Utils;\n import org.apache.axis2.description.AxisModule;\n import org.apache.axis2.description.AxisServiceGroup;\n@@ -37,7 +30,6 @@\n import org.apache.axis2.i18n.Messages;\n import org.apache.axis2.modules.Module;\n import org.apache.axis2.transport.TransportSender;\n-import org.apache.axis2.util.JavaUtils;\n import org.apache.axis2.util.SessionUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/context/ConfigurationContextFactory.java",
                "sha": "16c61203b3434210e9a5a01187fb9634b48f45ed",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis2-java/blob/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java?ref=d5e1e0c330fae42c1e6008957ea157517e129712",
                "deletions": 11,
                "filename": "modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java",
                "patch": "@@ -19,17 +19,13 @@\n \n import org.apache.axiom.om.OMAttribute;\n import org.apache.axiom.om.OMElement;\n-import org.apache.axis2.AxisFault;\n import org.apache.axis2.cluster.ClusterManager;\n import org.apache.axis2.cluster.configuration.ConfigurationManager;\n import org.apache.axis2.cluster.configuration.ConfigurationManagerListener;\n import org.apache.axis2.cluster.context.ContextManager;\n import org.apache.axis2.cluster.context.ContextManagerListener;\n-import org.apache.axis2.description.AxisService;\n import org.apache.axis2.engine.AxisConfiguration;\n import org.apache.axis2.i18n.Messages;\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n \n import javax.xml.namespace.QName;\n import java.io.InputStream;\n@@ -41,8 +37,7 @@\n  */\n public class ClusterBuilder extends DescriptionBuilder {\n \n-\tprivate static final Log log = LogFactory.getLog(ClusterBuilder.class);\n-    private AxisService service;\n+//\tprivate static final Log log = LogFactory.getLog(ClusterBuilder.class);\n \n     public ClusterBuilder(AxisConfiguration axisConfig) {\n         this.axisConfig = axisConfig;\n@@ -105,13 +100,13 @@ public void buildCluster(OMElement clusterElement)\n \t\t\t\t\t\tclazz = Class.forName(className);\n \t\t\t\t\t\tConfigurationManagerListener listener = (ConfigurationManagerListener) clazz\n \t\t\t\t\t\t\t\t.newInstance();\n-\t\t\t\t\t\tlistener.setAxisConfiguration(axisConfig);\n+\t\t\t\t\t\tlistener.setConfigurationContext(configCtx);\n \t\t\t\t\t\tconfigurationManager.addConfigurationManagerListener(listener);\n \t\t\t\t\t}\n \t\t\t\t}\n \n-\t\t\t\t//updating the ConfigurationManager with the new Axisconfiguration\n-\t\t\t\tconfigurationManager.setAxisConfiguration(axisConfig);\n+\t\t\t\t//updating the ConfigurationManager with the new ConfigurationContext\n+\t\t\t\tconfigurationManager.setConfigurationContext(configCtx);\n \t\t\t}\n \n \t\t\t\n@@ -152,7 +147,6 @@ public void buildCluster(OMElement clusterElement)\n \t\t\t}\n             \n             axisConfig.setClusterManager(clusterManager);\n-            return;\n         } catch (ClassNotFoundException e) {\n             throw new DeploymentException(Messages.getMessage(\"clusterImplNotFound\"));\n         } catch (InstantiationException e) {\n@@ -162,5 +156,4 @@ public void buildCluster(OMElement clusterElement)\n             throw new DeploymentException(e);\n         }\n     }\n-\n }",
                "raw_url": "https://github.com/apache/axis2-java/raw/d5e1e0c330fae42c1e6008957ea157517e129712/modules/kernel/src/org/apache/axis2/deployment/ClusterBuilder.java",
                "sha": "2cfa593aedbdb37446ee36aa418ee066030d2f70",
                "status": "modified"
            }
        ],
        "message": "Removing the setAxisConfiguration method and adding setConfigurationContext method to ConfigurationManager\nHandling a possible NPE\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@520848 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/62b5ecc0dad1adc75a8c7d32a9df67a6a0b69620",
        "patched_files": [
            "ClusterManagerTestCase.java",
            "ClusterBuilder.java",
            "ConfigurationManager.java",
            "ConfigurationContext.java",
            "ConfigurationManagerListener.java",
            "TribesConfigurationManager.java",
            "ConfigurationContextFactory.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "TestConfigurationManagerListener.java",
            "ConfigurationManagerTest.java"
        ]
    },
    "axis2-java_d80825a": {
        "bug_id": "axis2-java_d80825a",
        "commit": "https://github.com/apache/axis2-java/commit/d80825a908624199d987575f8180c86401dca17b",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis2-java/blob/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java?ref=d80825a908624199d987575f8180c86401dca17b",
                "deletions": 3,
                "filename": "modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java",
                "patch": "@@ -223,9 +223,11 @@ private void dispatchAndVerify(MessageContext msgContext) throws AxisFault {\n             if ((axisOperation = msgContext.getAxisOperation()) != null) {\n                 AxisEndpoint axisEndpoint =\n                         (AxisEndpoint) msgContext.getProperty(WSDL2Constants.ENDPOINT_LOCAL_NAME);\n-                AxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisEndpoint\n-                        .getBinding().getChild(axisOperation.getName());\n-                msgContext.setProperty(Constants.AXIS_BINDING_OPERATION, axisBindingOperation);\n+                if (axisEndpoint != null) {\n+                    AxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisEndpoint\n+                            .getBinding().getChild(axisOperation.getName());\n+                    msgContext.setProperty(Constants.AXIS_BINDING_OPERATION, axisBindingOperation);\n+                }\n                 msgContext.setAxisOperation(axisOperation);\n             }\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/transport/http/util/RESTUtil.java",
                "sha": "2caf95c48d06b0e4d87dc05eb74696b308b9f3a3",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java?ref=d80825a908624199d987575f8180c86401dca17b",
                "deletions": 1,
                "filename": "modules/kernel/src/org/apache/axis2/util/SchemaUtil.java",
                "patch": "@@ -442,7 +442,8 @@ private static Map getParameterMap(HttpServletRequest request, String queryParam\n             }\n         }\n \n-        if (request.getContentType().indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_FORM_DATA) > -1) {\n+        String contentType = request.getContentType();\n+        if (contentType != null && contentType.indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_FORM_DATA) > -1) {\n             ServletRequestContext servletRequestContext = new ServletRequestContext(request);\n             try {\n                 List items = parseRequest(servletRequestContext);",
                "raw_url": "https://github.com/apache/axis2-java/raw/d80825a908624199d987575f8180c86401dca17b/modules/kernel/src/org/apache/axis2/util/SchemaUtil.java",
                "sha": "d88ed4fd5e8c8406dd4fcfffa305103b97b91b12",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE in RestUtil\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@503607 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/89dd911bb1d5ce71a173a62086157d452ef369f7",
        "patched_files": [
            "SchemaUtil.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "SchemaUtilTest.java"
        ]
    },
    "axis2-java_e2de057": {
        "bug_id": "axis2-java_e2de057",
        "commit": "https://github.com/apache/axis2-java/commit/e2de057b38ddaac738abed572c821b34a42d980a",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/axis2-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/OMNode.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/OMNode.java?ref=e2de057b38ddaac738abed572c821b34a42d980a",
                "deletions": 1,
                "filename": "modules/xml/src/org/apache/axis2/om/OMNode.java",
                "patch": "@@ -42,7 +42,15 @@\n      */\r\n     public static final short COMMENT_NODE = 8;\r\n \r\n-    public static final short BLOB_NODE = 8;\r\n+    /**\r\n+     * This node is a <code>DTD</code>.\r\n+     */\r\n+    public static final short DTD_NODE = 9;\r\n+\r\n+    /**\r\n+     * This node is a <code>ProcessingInstruction</code>.\r\n+     */\r\n+    public static final short PI_NODE = 10;\r\n \r\n     /**\r\n      * This method should return the immediate parent of the node.\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/OMNode.java",
                "sha": "30a01b639d09eff0b079a54121e8a7166317c095",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java?ref=e2de057b38ddaac738abed572c821b34a42d980a",
                "deletions": 0,
                "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java",
                "patch": "@@ -145,6 +145,14 @@ public int next() throws OMException {\n                 case XMLStreamConstants.SPACE:\r\n                     next();\r\n                     break;\r\n+                case XMLStreamConstants.COMMENT:\r\n+                    lastNode = createOMText();\r\n+                    lastNode.setType(OMNode.COMMENT_NODE);\r\n+                    break;\r\n+                case XMLStreamConstants.DTD:\r\n+                    lastNode = createOMText();\r\n+                    lastNode.setType(OMNode.DTD_NODE);\r\n+                    break;\r\n                 default :\r\n                     throw new OMException();\r\n             }\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java",
                "sha": "f1d399e1890e50f5883a7920af24e1568f3595aa",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis2-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java?ref=e2de057b38ddaac738abed572c821b34a42d980a",
                "deletions": 2,
                "filename": "modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java",
                "patch": "@@ -68,7 +68,10 @@ public String getElementName(Object object) {\n      */\n     public String getElementQName(Object object) {\n         OMElement attr = (OMElement) object;\n-        String prefix = attr.getNamespace().getPrefix();\n+        String prefix = null;\n+        if(attr.getNamespace()!=null) {\n+            prefix = attr.getNamespace().getPrefix();\n+        }\n         if (prefix == null || \"\".equals(prefix)) {\n             return attr.getQName().getLocalPart();\n         }\n@@ -178,7 +181,7 @@ public boolean isComment(Object object) {\n      */\n     public boolean isText(Object object) {\n         return (object instanceof OMNode) &&\n-                (((OMText) object).getType() == OMNode.TEXT_NODE);\n+                (((OMNode) object).getType() == OMNode.TEXT_NODE);\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/axis2-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java",
                "sha": "fd1415b52a3a5b252a94eab72d4a3909b47f92b9",
                "status": "modified"
            }
        ],
        "message": "- Prevent NPE in DocumentNavigator\n- Parse Comments and DTD\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@210000 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/05dbca40566e9a58d97b2e20e3ef0e497e2bb83f",
        "patched_files": [
            "StAXOMBuilder.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "StAXOMBuilderTest.java"
        ]
    },
    "axis2-java_edd1496": {
        "bug_id": "axis2-java_edd1496",
        "commit": "https://github.com/apache/axis2-java/commit/edd14969ac5439bbe34b773757cc62dac84e7b76",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/axis2-java/blob/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java?ref=edd14969ac5439bbe34b773757cc62dac84e7b76",
                "deletions": 1,
                "filename": "modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java",
                "patch": "@@ -95,7 +95,15 @@ public Attachment(Object sigValue, Class sigClass, AttachmentDescription aDesc,\n      */\r\n     public DataHandler getDataHandler() {\r\n         if (dh == null) {\r\n-            dh = createDataHandler(sigValue, sigClass, aDesc.getMimeTypes(), getContentID());\r\n+        \t//if null DH was specified explicitly, return it, don't create something else.\r\n+            if (sigValue == null) {\r\n+                // Create a contentID and null DataHandler\r\n+                getContentID(); // Force setting of content id\r\n+                dh = (DataHandler) null;\r\n+            } else {\r\n+                // Normal case: create a DataHandler from the sigValue object\r\n+                dh = createDataHandler(sigValue, sigClass, aDesc.getMimeTypes(), getContentID());\r\n+            }\r\n         }\r\n         return dh;\r\n     }\r\n@@ -123,6 +131,11 @@ private static DataHandler createDataHandler(Object value, Class cls, String[] m\n         DataHandler dh = null;\r\n         if (cls.isAssignableFrom(DataHandler.class)) {\r\n             dh = (DataHandler) value;\r\n+            if(dh == null)  \r\n+            {\r\n+                return dh; //return if DataHandler is null\r\n+            }\r\n+\r\n             try {\r\n                 Object content = dh.getContent();\r\n                 // If the content is a Source, convert to a String due to \r",
                "raw_url": "https://github.com/apache/axis2-java/raw/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/impl/alt/Attachment.java",
                "sha": "c20866d76e5f924200d8e3815df7e28cd1fbe1ea",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis2-java/blob/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java?ref=edd14969ac5439bbe34b773757cc62dac84e7b76",
                "deletions": 0,
                "filename": "modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java",
                "patch": "@@ -443,6 +443,10 @@ public Object getValue(Object context, BlockFactory blockFactory) throws WebServ\n      * @see org.apache.axis2.jaxws.message.Message#getDataHandler(java.lang.String)\n      */\n     public DataHandler getDataHandler(String cid) {\n+        // if null DH was specified explicitly, just return\n+        if(cid == null) {\n+            return (DataHandler) null;\n+        }\n         String bcid = getBlobCID(cid);\n         return attachments.getDataHandler(bcid);\n     }",
                "raw_url": "https://github.com/apache/axis2-java/raw/edd14969ac5439bbe34b773757cc62dac84e7b76/modules/jaxws/src/org/apache/axis2/jaxws/message/impl/MessageImpl.java",
                "sha": "341ee07d1ea8ea4872e9bcee57ee35a260e55dcf",
                "status": "modified"
            }
        ],
        "message": "AXIS2-3963\nContributor:Samuel Isokpunwu and Bruce Tiffany\nPrevent NPE if null data handlers are used.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@683622 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/c90f7478ea43831dd776cf5ce7f4f9bf98b3f62b",
        "patched_files": [
            "Attachment.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "AttachmentTest.java"
        ]
    },
    "axis2-java_f6f126a": {
        "bug_id": "axis2-java_f6f126a",
        "commit": "https://github.com/apache/axis2-java/commit/f6f126aab3c7caf42c4fd87ba68d492f171ec489",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 11,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java",
                "patch": "@@ -29,7 +29,6 @@\n import org.apache.axis2.client.Options;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.handlers.AbstractHandler;\n-import org.apache.axis2.util.JavaUtils;\n import org.apache.axis2.util.LoggingControl;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -47,7 +46,7 @@\n \n     public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n         // if another handler has already processed the addressing headers, do not do anything here.\n-        if (JavaUtils.isTrueExplicitly(msgContext.getProperty(IS_ADDR_INFO_ALREADY_PROCESSED))) {\n+        if (msgContext.isPropertyTrue(IS_ADDR_INFO_ALREADY_PROCESSED)) {\n             if (LoggingControl.debugLoggingAllowed && log.isDebugEnabled()) {\n                 log.debug(\n                         \"Another handler has processed the addressing headers. Nothing to do here.\");\n@@ -154,19 +153,19 @@ protected Options extractAddressingInformation(SOAPHeader header, MessageContext\n             SOAPHeaderBlock soapHeaderBlock = (SOAPHeaderBlock)addressingHeadersIt2.next();\n             if (!SOAP12Constants.SOAP_ROLE_NONE.equals(soapHeaderBlock.getRole())) {\n                 if (WSA_ACTION.equals(soapHeaderBlock.getLocalName()) && !ignoreAction) {\n-                    extractActionInformation(soapHeaderBlock, namespace, messageContext);\n+                    extractActionInformation(soapHeaderBlock, messageContext);\n                 } else if (WSA_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreTo) {\n                     extractToEPRInformation(soapHeaderBlock, messageContextOptions, header,\n                                             namespace);\n                 } else\n                 if (WSA_MESSAGE_ID.equals(soapHeaderBlock.getLocalName()) && !ignoreMessageID) {\n-                    extractMessageIDInformation(soapHeaderBlock, namespace, messageContext);\n+                    extractMessageIDInformation(soapHeaderBlock, messageContext);\n                 } else if (WSA_REPLY_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreReplyTo) {\n                     extractReplyToEPRInformation(soapHeaderBlock, namespace, messageContext);\n                 } else if (WSA_FAULT_TO.equals(soapHeaderBlock.getLocalName()) && !ignoreFaultTo) {\n                     extractFaultToEPRInformation(soapHeaderBlock, namespace, messageContext);\n                 } else if (WSA_RELATES_TO.equals(soapHeaderBlock.getLocalName())) {\n-                    extractRelatesToInformation(soapHeaderBlock, namespace, messageContextOptions);\n+                    extractRelatesToInformation(soapHeaderBlock, messageContextOptions);\n                 } else if (WSA_FROM.equals(soapHeaderBlock.getLocalName()) && !ignoreFrom) {\n                     extractFromEPRInformation(soapHeaderBlock, namespace, messageContext);\n                 }\n@@ -223,7 +222,6 @@ protected abstract void extractToEprReferenceParameters(EndpointReference toEPR,\n \n \n     private void extractRelatesToInformation(SOAPHeaderBlock soapHeaderBlock,\n-                                             String addressingNamespace,\n                                              Options messageContextOptions) {\n         String address = soapHeaderBlock.getText();\n \n@@ -334,7 +332,7 @@ private void extractToEPRInformation(SOAPHeaderBlock soapHeaderBlock,\n     //soapaction. We compare that action to the WS-Addressing action, and if they are\n     //different we throw a fault.\n     private void extractActionInformation(SOAPHeaderBlock soapHeaderBlock,\n-                                          String addressingNamespace, MessageContext messageContext)\n+                                          MessageContext messageContext)\n             throws AxisFault {\n         Options messageContextOptions = messageContext.getOptions();\n         String soapAction = messageContextOptions.getAction();\n@@ -373,7 +371,6 @@ private void extractActionInformation(SOAPHeaderBlock soapHeaderBlock,\n     }\n \n     private void extractMessageIDInformation(SOAPHeaderBlock soapHeaderBlock,\n-                                             String addressingNamespace,\n                                              MessageContext messageContext) throws AxisFault {\n         messageContext.getOptions().setMessageId(soapHeaderBlock.getText());\n \n@@ -388,9 +385,11 @@ private void extractMessageIDInformation(SOAPHeaderBlock soapHeaderBlock,\n     /**\n      * Given the soap header block, this should extract the information within EPR.\n      *\n-     * @param headerBlock\n-     * @param epr\n-     * @param addressingNamespace\n+     * @param headerBlock a SOAP header which is of type EndpointReference\n+     * @param epr the EndpointReference to fill in with the extracted data\n+     * @param addressingNamespace the WSA namespace URI\n+     * @param messageContext the active MessageContext\n+     * @throws AxisFault if there is a problem\n      */\n     private void extractEPRInformation(SOAPHeaderBlock headerBlock, EndpointReference epr,\n                                        String addressingNamespace, MessageContext messageContext)",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingInHandler.java",
                "sha": "6648ba9fda756d86eef677b57134ef7419e17b13",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 11,
                "filename": "modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "patch": "@@ -69,7 +69,7 @@ public void init(HandlerDescription arg0) {\n \n     public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n         // it should be able to disable addressing by some one.\n-        if (Utils.isExplicitlyTrue(msgContext, DISABLE_ADDRESSING_FOR_OUT_MESSAGES)) {\n+        if (msgContext.isPropertyTrue(DISABLE_ADDRESSING_FOR_OUT_MESSAGES)) {\n             if (log.isTraceEnabled()) {\n                 log.trace(msgContext.getLogIDString() +\n                         \" Addressing is disabled. Not adding WS-Addressing headers.\");\n@@ -87,21 +87,18 @@ public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n                 Submission.WSA_NAMESPACE.equals(addressingVersionFromCurrentMsgCtxt);\n \n         // Determine whether to include optional addressing headers in the output.\n-        boolean includeOptionalHeaders = this.includeOptionalHeaders;\n-        Object includeHeadersPropery = msgContext.getProperty(INCLUDE_OPTIONAL_HEADERS);\n-        if (includeHeadersPropery != null) {\n-            includeOptionalHeaders = JavaUtils.isTrueExplicitly(includeHeadersPropery);\n-        }\n+        boolean includeOptionalHeaders = this.includeOptionalHeaders ||\n+                                            msgContext.isPropertyTrue(INCLUDE_OPTIONAL_HEADERS);\n \n         // Determine if a MustUnderstand attribute will be added to all headers in the\n         // addressing namespace.\n         boolean addMustUnderstandAttribute =\n-                Utils.isExplicitlyTrue(msgContext, ADD_MUST_UNDERSTAND_TO_ADDRESSING_HEADERS);\n+                msgContext.isPropertyTrue(ADD_MUST_UNDERSTAND_TO_ADDRESSING_HEADERS);\n \n         // what if there are addressing headers already in the message. Do you replace that or not?\n         // Lets have a parameter to control that. The default behavior is you won't replace addressing\n         // headers if there are any (this was the case so far).\n-        boolean replaceHeaders = Utils.isExplicitlyTrue(msgContext, REPLACE_ADDRESSING_HEADERS);\n+        boolean replaceHeaders = msgContext.isPropertyTrue(REPLACE_ADDRESSING_HEADERS);\n \n         WSAHeaderWriter writer = new WSAHeaderWriter(msgContext, isSubmissionNamespace,\n                                                      addMustUnderstandAttribute, replaceHeaders,\n@@ -251,8 +248,8 @@ private void processWSAAction() throws AxisFault {\n                                 \" processWSAAction: No action to add to header\");\n                     }\n                     // Fault unless validation has been explictily turned off\n-                    if (!Utils.isExplicitlyTrue(messageContext,\n-                                                AddressingConstants.DISABLE_OUTBOUND_ADDRESSING_VALIDATION))\n+                    if (!messageContext.isPropertyTrue(\n+                            AddressingConstants.DISABLE_OUTBOUND_ADDRESSING_VALIDATION))\n                     {\n                         throw new AxisFault(AddressingMessages.getMessage(\"outboundNoAction\"));\n                     }\n@@ -457,7 +454,7 @@ private void addToSOAPHeader(EndpointReference epr, String headerName) throws Ax\n         /**\n          * This will add reference parameters and/or reference properties in to the message\n          *\n-         * @param referenceInformation\n+         * @param referenceInformation a Map from QName -> OMElement\n          * @param parent               is the element to which the referenceparameters should be\n          *                             attached\n          */",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java",
                "sha": "4cd4f9b2c1d1d0eb4304678136f4fda41250b819",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/context/MessageContext.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 1,
                "filename": "modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "patch": "@@ -18,7 +18,6 @@\n \n import org.apache.axiom.attachments.Attachments;\n import org.apache.axiom.om.OMOutputFormat;\n-import org.apache.axiom.om.OMException;\n import org.apache.axiom.om.impl.MTOMConstants;\n import org.apache.axiom.om.impl.builder.StAXBuilder;\n import org.apache.axiom.om.util.StAXUtils;\n@@ -49,6 +48,7 @@\n import org.apache.axis2.util.MetaDataEntry;\n import org.apache.axis2.util.ObjectStateUtils;\n import org.apache.axis2.util.SelfManagedDataHolder;\n+import org.apache.axis2.util.JavaUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.neethi.Policy;\n@@ -949,6 +949,29 @@ public Object getProperty(String name) {\n         return null;\n     }\n \n+    /**\n+     * Check if a given property is true.  Will return false if the property\n+     * does not exist or is not an explicit \"true\" value.\n+     *\n+     * @param name name of the property to check\n+     * @return true if the property exists and is Boolean.TRUE, \"true\", 1, etc.\n+     */\n+    public boolean isPropertyTrue(String name) {\n+        return isPropertyTrue(name, false);\n+    }\n+\n+    /**\n+     * Check if a given property is true.  Will return the passed default if the property\n+     * does not exist.\n+     *\n+     * @param name name of the property to check\n+     * @param defaultVal the default value if the property doesn't exist\n+     * @return true if the property exists and is Boolean.TRUE, \"true\", 1, etc.\n+     */\n+    public boolean isPropertyTrue(String name, boolean defaultVal) {\n+        return JavaUtils.isTrueExplicitly(getProperty(name), defaultVal);\n+    }\n+    \n     /**\n      * Retrieves all property values. The order of search is as follows: search in\n      * my own options and then look in my context hierarchy. Since its possible",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/context/MessageContext.java",
                "sha": "dc10f6e890d3646538612bd4445f410f58a1d411",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 2,
                "filename": "modules/kernel/src/org/apache/axis2/transport/TransportUtils.java",
                "patch": "@@ -114,8 +114,8 @@ public static SOAPEnvelope createSOAPMessage(MessageContext msgContext, InputStr\n                     if (msgContext.getSoapAction() == null) {\n                         type = HTTPConstants.MEDIA_TYPE_APPLICATION_XML;\n                     }\n-                } else if (msgContext.isDoingREST() && !JavaUtils.isTrueExplicitly(\n-                        msgContext.getProperty(Constants.Configuration.SOAP_RESPONSE_MEP))) {\n+                } else if (msgContext.isDoingREST() &&\n+                        !msgContext.isPropertyTrue(Constants.Configuration.SOAP_RESPONSE_MEP)) {\n                     type = HTTPConstants.MEDIA_TYPE_APPLICATION_XML;\n                 }\n             }",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java",
                "sha": "07fc404d4ef141b7ec1cdf0371926811fcf1664c",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 14,
                "filename": "modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java",
                "patch": "@@ -102,11 +102,13 @@ public void setHttpVersion(String version) throws AxisFault {\n     }\n \n     /**\n-     * Helper method to Proxy and NTLM authentication\n+     * Helper method for Proxy and NTLM authentication\n      *\n-     * @param client\n-     * @param proxySetting\n-     * @param config\n+     * @param client HttpClient in which to place proxy config\n+     * @param proxySetting TransportOutDescription\n+     * @param config HostConfiguraiton in which to place proxy config\n+     * @param msgCtx the active MessageContext\n+     * @throws AxisFault in case of problems\n      */\n     protected void configProxyAuthentication(HttpClient client,\n                                              TransportOutDescription proxySetting,\n@@ -204,8 +206,9 @@ protected void configProxyAuthentication(HttpClient client,\n     /**\n      * Collect the HTTP header information and set them in the message context\n      *\n-     * @param method\n-     * @param msgContext\n+     * @param method HttpMethodBase from which to get information\n+     * @param msgContext the MessageContext in which to place the information... OR NOT!\n+     * @throws AxisFault if problems occur\n      */\n     protected void obtainHTTPHeaderInformation(HttpMethodBase method,\n                                                MessageContext msgContext) throws AxisFault {\n@@ -236,13 +239,15 @@ protected void obtainHTTPHeaderInformation(HttpMethodBase method,\n                         .setProperty(Constants.Configuration.CHARACTER_SET_ENCODING, charSetEnc);\n             } else {\n \n-                //Transport details will be stored in a HashMap so that anybody interested can retriece them\n+                // Transport details will be stored in a HashMap so that anybody interested can\n+                // retrieve them\n                 HashMap transportInfoMap = new HashMap();\n                 transportInfoMap.put(Constants.Configuration.CONTENT_TYPE, contentType);\n                 transportInfoMap.put(Constants.Configuration.CHARACTER_SET_ENCODING, charSetEnc);\n \n                 //the HashMap is stored in the outgoing message.\n-                msgContext.setProperty(Constants.Configuration.TRANSPORT_INFO_MAP, transportInfoMap);\n+                msgContext.setProperty(Constants.Configuration.TRANSPORT_INFO_MAP,\n+                                       transportInfoMap);\n             }\n         }\n \n@@ -305,10 +310,16 @@ protected void processResponse(HttpMethodBase httpMethod,\n     }\n \n     public abstract void send(MessageContext msgContext, URL url, String soapActionString)\n-            throws AxisFault, IOException;\n+            throws IOException;\n \n     /**\n      * getting host configuration to support standard http/s, proxy and NTLM support\n+     *\n+     * @param client active HttpClient\n+     * @param msgCtx active MessageContext\n+     * @param targetURL the target URL\n+     * @return a HostConfiguration set up with proxy information\n+     * @throws AxisFault if problems occur\n      */\n     protected HostConfiguration getHostConfiguration(HttpClient client,\n                                                      MessageContext msgCtx,\n@@ -334,7 +345,8 @@ protected HostConfiguration getHostConfiguration(HttpClient client,\n         HostConfiguration config = new HostConfiguration();\n \n         // one might need to set his own socket factory. Let's allow that case as well.\n-        Protocol protocolHandler = (Protocol) msgCtx.getOptions().getProperty(HTTPConstants.CUSTOM_PROTOCOL_HANDLER);\n+        Protocol protocolHandler =\n+                (Protocol)msgCtx.getOptions().getProperty(HTTPConstants.CUSTOM_PROTOCOL_HANDLER);\n \n         // setting the real host configuration\n         // I assume the 90% case, or even 99% case will be no protocol handler case. \n@@ -442,9 +454,9 @@ protected void setAuthenticationInfo(HttpClient agent,\n     /**\n      * This is used to get the dynamically set time out values from the\n      * message context. If the values are not available or invalid then\n-     * teh default values or the values set by teh configuration will be used\n+     * the default values or the values set by the configuration will be used\n      *\n-     * @param msgContext\n+     * @param msgContext the active MessageContext\n      */\n     protected void getTimeoutValues(MessageContext msgContext) {\n         try {\n@@ -555,12 +567,12 @@ protected void executeMethod(HttpClient httpClient, MessageContext msgContext, U\n         addCustomHeaders(method, msgContext);\n \n         // add compression headers if needed\n-        if (Utils.isExplicitlyTrue(msgContext, HTTPConstants.MC_ACCEPT_GZIP)) {\n+        if (msgContext.isPropertyTrue(HTTPConstants.MC_ACCEPT_GZIP)) {\n             method.addRequestHeader(HTTPConstants.HEADER_ACCEPT_ENCODING,\n                     HTTPConstants.COMPRESSION_GZIP);\n         }\n \n-        if (Utils.isExplicitlyTrue(msgContext, HTTPConstants.MC_GZIP_REQUEST)) {\n+        if (msgContext.isPropertyTrue(HTTPConstants.MC_GZIP_REQUEST)) {\n             method.addRequestHeader(HTTPConstants.HEADER_CONTENT_ENCODING,\n                     HTTPConstants.COMPRESSION_GZIP);\n         }",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AbstractHTTPSender.java",
                "sha": "6461c8b824768d87335880422abf788a0b828909",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 2,
                "filename": "modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java",
                "patch": "@@ -74,8 +74,7 @@ public boolean isRepeatable() {\n     }\n \n     public void writeRequest(OutputStream outStream) throws IOException {\n-        Object gzip = messageContext.getOptions().getProperty(\n-                HTTPConstants.MC_GZIP_REQUEST);\n+        Object gzip = messageContext.getOptions().getProperty(HTTPConstants.MC_GZIP_REQUEST);\n         if (gzip != null && JavaUtils.isTrueExplicitly(gzip) && chunked) {\n             outStream = new GZIPOutputStream(outStream);\n         }",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/AxisRequestEntity.java",
                "sha": "b6593e4785612a3e7b943156424e816b23b23785",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 7,
                "filename": "modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java",
                "patch": "@@ -36,7 +36,6 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n-import javax.xml.namespace.QName;\n import javax.xml.stream.FactoryConfigurationError;\n import javax.xml.stream.XMLStreamException;\n import java.io.IOException;\n@@ -50,7 +49,6 @@\n public class CommonsHTTPTransportSender extends AbstractHandler implements\n         TransportSender {\n \n-\n     protected static final String PROXY_HOST_NAME = \"proxy_host\";\n \n     protected static final String PROXY_PORT = \"proxy_port\";\n@@ -240,8 +238,10 @@ private void sendUsingOutputStream(MessageContext msgContext,\n         OutTransportInfo transportInfo = (OutTransportInfo) msgContext\n                 .getProperty(Constants.OUT_TRANSPORT_INFO);\n \n+        if (transportInfo == null) throw new AxisFault(\"No transport info in MessageContext\");\n+\n         ServletBasedOutTransportInfo servletBasedOutTransportInfo = null;\n-        if (transportInfo != null && transportInfo instanceof ServletBasedOutTransportInfo) {\n+        if (transportInfo instanceof ServletBasedOutTransportInfo) {\n             servletBasedOutTransportInfo =\n                     (ServletBasedOutTransportInfo) transportInfo;\n             List customHheaders = (List) msgContext.getProperty(HTTPConstants.HTTP_HEADERS);\n@@ -259,15 +259,17 @@ private void sendUsingOutputStream(MessageContext msgContext,\n \n         format.setAutoCloseWriter(true);\n \n-        MessageFormatter messageFormatter = TransportUtils\n-                .getMessageFormatter(msgContext);\n+        MessageFormatter messageFormatter = TransportUtils.getMessageFormatter(msgContext);\n+        if (messageFormatter == null) throw new AxisFault(\"No MessageFormatter in MessageContext\");\n+\n         transportInfo.setContentType(\n                 messageFormatter.getContentType(msgContext, format, findSOAPAction(msgContext)));\n \n         Object gzip = msgContext.getOptions().getProperty(HTTPConstants.MC_GZIP_RESPONSE);\n         if (gzip != null && JavaUtils.isTrueExplicitly(gzip)) {\n-            servletBasedOutTransportInfo.addHeader(HTTPConstants.HEADER_CONTENT_ENCODING,\n-                                                   HTTPConstants.COMPRESSION_GZIP);\n+            if (servletBasedOutTransportInfo != null)\n+                servletBasedOutTransportInfo.addHeader(HTTPConstants.HEADER_CONTENT_ENCODING,\n+                                                       HTTPConstants.COMPRESSION_GZIP);\n             try {\n                 out = new GZIPOutputStream(out);\n                 out.write(messageFormatter.getBytes(msgContext, format));",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/CommonsHTTPTransportSender.java",
                "sha": "4b180f04b345cac06c980a2126013618172a5eac",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 12,
                "filename": "modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java",
                "patch": "@@ -17,23 +17,18 @@\n package org.apache.axis2.transport.http;\n \n \n-import org.apache.axiom.soap.SOAP11Constants;\n-import org.apache.axiom.soap.SOAP12Constants;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n-import org.apache.axis2.util.JavaUtils;\n import org.apache.axis2.context.MessageContext;\n import org.apache.axis2.i18n.Messages;\n import org.apache.axis2.transport.MessageFormatter;\n import org.apache.axis2.transport.TransportUtils;\n import org.apache.commons.httpclient.Header;\n import org.apache.commons.httpclient.HttpClient;\n+import org.apache.commons.httpclient.HttpMethod;\n import org.apache.commons.httpclient.HttpMethodBase;\n import org.apache.commons.httpclient.HttpStatus;\n import org.apache.commons.httpclient.HttpVersion;\n-import org.apache.commons.httpclient.URI;\n-import org.apache.commons.httpclient.URIException;\n-import org.apache.commons.httpclient.HttpMethod;\n import org.apache.commons.httpclient.methods.DeleteMethod;\n import org.apache.commons.httpclient.methods.GetMethod;\n import org.apache.commons.httpclient.methods.PostMethod;\n@@ -42,15 +37,14 @@\n import org.apache.commons.logging.LogFactory;\n \n import java.io.IOException;\n-import java.net.MalformedURLException;\n import java.net.URL;\n \n public class HTTPSender extends AbstractHTTPSender {\n \n     private static final Log log = LogFactory.getLog(HTTPSender.class);\n \n     public void send(MessageContext msgContext, URL url, String soapActionString)\n-            throws MalformedURLException, AxisFault, IOException {\n+            throws IOException {\n \n         // execute the HtttpMethodBase - a connection manager can be given for\n         // handle multiple\n@@ -113,8 +107,7 @@ private void sendViaGet(MessageContext msgContext, URL url, String soapActiionSt\n     }\n \n     private void cleanup(MessageContext msgContext, HttpMethod method) {\n-        Object autoClose = msgContext.getOptions().getProperty(HTTPConstants.AUTO_RELEASE_CONNECTION);\n-        if (autoClose != null && JavaUtils.isTrueExplicitly(autoClose)) {\n+        if (msgContext.isPropertyTrue(HTTPConstants.AUTO_RELEASE_CONNECTION)) {\n             method.releaseConnection();\n         }\n     }\n@@ -159,12 +152,14 @@ private void sendViaPost(MessageContext msgContext, URL url,\n \n         HttpClient httpClient = getHttpClient(msgContext);\n \n+/*  What's up with this, it never gets used anywhere?? --Glen\n         String charEncoding =\n                 (String) msgContext.getProperty(Constants.Configuration.CHARACTER_SET_ENCODING);\n \n         if (charEncoding == null) {\n             charEncoding = MessageContext.DEFAULT_CHAR_SET_ENCODING;\n         }\n+*/\n \n         PostMethod postMethod = new PostMethod();\n         MessageFormatter messageFormatter =\n@@ -212,14 +207,14 @@ private void sendViaPut(MessageContext msgContext, URL url,\n \n         HttpClient httpClient = getHttpClient(msgContext);\n \n+/*  Same deal - this value never gets used, why is it here? --Glen\n         String charEncoding =\n                 (String) msgContext.getProperty(Constants.Configuration.CHARACTER_SET_ENCODING);\n \n         if (charEncoding == null) {\n             charEncoding = MessageContext.DEFAULT_CHAR_SET_ENCODING;\n         }\n-\n-        // TODO - Do something with charEncoding???\n+*/\n \n         PutMethod putMethod = new PutMethod();\n         MessageFormatter messageFormatter =",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/transport/http/HTTPSender.java",
                "sha": "439177d1e5acd027986a283701819dde370cda8d",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis2-java/blob/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/util/Utils.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/kernel/src/org/apache/axis2/util/Utils.java?ref=f6f126aab3c7caf42c4fd87ba68d492f171ec489",
                "deletions": 0,
                "filename": "modules/kernel/src/org/apache/axis2/util/Utils.java",
                "patch": "@@ -342,6 +342,13 @@ public static boolean isLatest(String moduleVersion, String currentDefaultVersio\n         }\n     }\n \n+    /**\n+     * Check if a MessageContext property is true.\n+     * @param messageContext the MessageContext\n+     * @param propertyName the property name\n+     * @return true if the property is Boolean.TRUE, \"true\", 1, etc. or false otherwise\n+     * @deprecated please use MessageContext.isTrue(propertyName) instead\n+     */\n     public static boolean isExplicitlyTrue(MessageContext messageContext, String propertyName) {\n         Object flag = messageContext.getProperty(propertyName);\n         return JavaUtils.isTrueExplicitly(flag);",
                "raw_url": "https://github.com/apache/axis2-java/raw/f6f126aab3c7caf42c4fd87ba68d492f171ec489/modules/kernel/src/org/apache/axis2/util/Utils.java",
                "sha": "cc5b50b0c7f2223ab880c30dc623a788031086c7",
                "status": "modified"
            }
        ],
        "message": "* Add MessageContext.isPropertyTrue() method, to avoid people needing to use other classes, do their own null checks, etc.  Deprecate Utils.isExplicitlyTrue(). Refactor a bunch of stuff to use the new method.\n\n* Clean up / improve JavaDoc in various places\n\n* Remove unused namespace args from methods in AddressingInHandler\n\n* Fix some potential NPEs in CommonsHTTPTransportSender\n\n* Comment unused code in HTTPSender\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@537322 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/20a354adf9548de709905e084449e2be752b647a",
        "patched_files": [
            "Utils.java",
            "MessageContext.java",
            "AddressingOutHandler.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "MessageContextTest.java",
            "TestUtils.java",
            "AddressingOutHandlerTest.java"
        ]
    },
    "axis2-java_f91aea2": {
        "bug_id": "axis2-java_f91aea2",
        "commit": "https://github.com/apache/axis2-java/commit/f91aea26c54d90ea247dd70042e1dff6ddd426e8",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/axis2-java/blob/f91aea26c54d90ea247dd70042e1dff6ddd426e8/modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java?ref=f91aea26c54d90ea247dd70042e1dff6ddd426e8",
                "deletions": 6,
                "filename": "modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java",
                "patch": "@@ -57,12 +57,14 @@ public void init(ConfigurationContext configContext, AxisModule module) throws A\n         log.debug(\"script services init\");\n \n         AxisConfiguration axisConfig = configContext.getAxisConfiguration();\n-\n-        File scriptServicesDirectory = getScriptServicesDirectory(axisConfig);\n-        ScriptDeploymentEngine deploymentEngine = new ScriptDeploymentEngine(axisConfig);\n-        deploymentEngine.loadRepository(scriptServicesDirectory);\n-        deploymentEngine.loadServices();\n-\n+        if(axisConfig.getRepository() == null) {\n+            log.error(\"AxisConfiguration getRepository returns null, cannot deploy scripts\");\n+        } else {\n+            File scriptServicesDirectory = getScriptServicesDirectory(axisConfig);\n+            ScriptDeploymentEngine deploymentEngine = new ScriptDeploymentEngine(axisConfig);\n+            deploymentEngine.loadRepository(scriptServicesDirectory);\n+            deploymentEngine.loadServices();\n+        }\n         log.info(\"script module activated\");\n     }\n ",
                "raw_url": "https://github.com/apache/axis2-java/raw/f91aea26c54d90ea247dd70042e1dff6ddd426e8/modules/scripting/src/org/apache/axis2/scripting/ScriptModule.java",
                "sha": "f61feb070af470eb1065a4d7d60daadae82e739a",
                "status": "modified"
            }
        ],
        "message": "Handle embedded/unexploded war scenarios better, avoid NPE and log ERROR\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@563212 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/59b1b5a7b30432935534968422c7dacb5c9ea35d",
        "patched_files": [
            "ScriptModule.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "ScriptModuleTest.java"
        ]
    },
    "axis2-java_fbde875": {
        "bug_id": "axis2-java_fbde875",
        "commit": "https://github.com/apache/axis2-java/commit/fbde87551e4ee516e506f0b5d871cff95dda98d7",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis2-java/blob/fbde87551e4ee516e506f0b5d871cff95dda98d7/modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis2-java/contents/modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java?ref=fbde87551e4ee516e506f0b5d871cff95dda98d7",
                "deletions": 1,
                "filename": "modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java",
                "patch": "@@ -5,7 +5,7 @@ public static Class getFactory(Class clazz)  {\n         Class[] declaredClasse = clazz.getDeclaredClasses();\r\n         for (int i = 0; i < declaredClasse.length; i++) {\r\n             Class aClass = declaredClasse[i];\r\n-            if(aClass != null && aClass.getCanonicalName().endsWith(\"Factory\")){\r\n+            if(aClass != null && aClass.getName().endsWith(\"Factory\")){\r\n                 return aClass;\r\n             }\r\n         }\r",
                "raw_url": "https://github.com/apache/axis2-java/raw/fbde87551e4ee516e506f0b5d871cff95dda98d7/modules/adb-codegen/test/org/apache/axis2/schema/populate/Util.java",
                "sha": "5f82bb323830fbe624a0ab7e4f9c7d5f44707b0f",
                "status": "modified"
            }
        ],
        "message": "try getName as getCanonicalName causes an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis2/trunk/java@648745 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis2-java/commit/199da53faaef36c65a98070e20ec7de8d6608131",
        "patched_files": [
            "Util.java"
        ],
        "repo": "axis2-java",
        "unit_tests": [
            "TestUtil.java"
        ]
    }
}