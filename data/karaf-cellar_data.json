[
    {
        "repo": "karaf-cellar",
        "message": "Avoid NPE when using config-list command",
        "commit": "https://github.com/apache/karaf-cellar/commit/19110ca17c77857140cacafe329d9424c0317c49",
        "parent": "https://github.com/apache/karaf-cellar/commit/1f85338948ebfb351614aadcdecb39d612519f78",
        "bug_id": "karaf-cellar_1",
        "file": [
            {
                "sha": "83246db719801e2c64432c629fc3449b62079685",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSupport.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/19110ca17c77857140cacafe329d9424c0317c49/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSupport.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/19110ca17c77857140cacafe329d9424c0317c49/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSupport.java",
                "status": "modified",
                "changes": 10,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSupport.java?ref=19110ca17c77857140cacafe329d9424c0317c49",
                "patch": "@@ -29,10 +29,10 @@\n  */\n public class ConfigurationSupport extends CellarSupport {\n \n-    private static final String FELIX_FILEINSTALL_FILENAME = \"felix.fileinstall.filename\";\n-    private static final String KARAF_CELLAR_FILENAME = \"karaf.cellar.filename\";\n-    private static final String KARAF_CELLAR_CONTENT = \"karaf.cellar.content\";\n-    private static final String KARAF_CELLAR_REMOVED = \"karaf.cellar.removed\";\n+    public static final String FELIX_FILEINSTALL_FILENAME = \"felix.fileinstall.filename\";\n+    public static final String KARAF_CELLAR_FILENAME = \"karaf.cellar.filename\";\n+    public static final String KARAF_CELLAR_CONTENT = \"karaf.cellar.content\";\n+    public static final String KARAF_CELLAR_REMOVED = \"karaf.cellar.removed\";\n \n     protected File storage;\n \n@@ -42,7 +42,7 @@\n      * @param dictionary the source dictionary.\n      * @return the corresponding properties.\n      */\n-    public Properties dictionaryToProperties(Dictionary dictionary) {\n+    public static Properties dictionaryToProperties(Dictionary dictionary) {\n         Properties properties = new Properties();\n         if (dictionary != null) {\n             Enumeration keys = dictionary.keys();",
                "deletions": 5
            },
            {
                "sha": "567d5da6ec0ceeae449682226098d180f411979f",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/19110ca17c77857140cacafe329d9424c0317c49/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/19110ca17c77857140cacafe329d9424c0317c49/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "status": "modified",
                "changes": 7,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java?ref=19110ca17c77857140cacafe329d9424c0317c49",
                "patch": "@@ -127,7 +127,6 @@ protected Object doExecute() throws Exception {\n     private Map<String, ConfigurationState> gatherConfigurations() throws Exception {\n         Map<String, ConfigurationState> configurations = new HashMap<String, ConfigurationState>();\n         Map<String, List<ConfigurationState>> configurationsByFileName = new HashMap<String, List<ConfigurationState>>();\n-        ConfigurationSupport support = new ConfigurationSupport();\n \n         // retrieve cluster configurations\n         Map<String, Properties> clusterConfigurations = clusterManager.getMap(Constants.CONFIGURATION_MAP + Configurations.SEPARATOR + groupName);\n@@ -139,7 +138,7 @@ protected Object doExecute() throws Exception {\n             state.setCluster(true);\n             state.setLocal(false);\n             configurations.put(key, state);\n-            String filename = support.getKarafFilename(properties);\n+            String filename = properties.getProperty(ConfigurationSupport.KARAF_CELLAR_FILENAME);\n             if (filename != null) {\n                 configurationsByFileName.putIfAbsent(filename, new ArrayList<ConfigurationState>());\n                 configurationsByFileName.get(filename).add(state);\n@@ -150,13 +149,13 @@ protected Object doExecute() throws Exception {\n         for (Configuration configuration : configurationAdmin.listConfigurations(null)) {\n             String key = configuration.getPid();\n \n-            String filename = support.getKarafFilename(configuration.getProperties());\n+            String filename = (String) configuration.getProperties().get(ConfigurationSupport.KARAF_CELLAR_FILENAME);\n \n             ConfigurationState state = configurations.get(key);\n             if (state == null) {\n                 state = new ConfigurationState();\n                 state.setCluster(false);\n-                state.setProperties(support.dictionaryToProperties(configuration.getProperties()));\n+                state.setProperties(ConfigurationSupport.dictionaryToProperties(configuration.getProperties()));\n                 configurations.put(key, state);\n             }\n             state.setLocal(true);",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "Avoid potential NPE in wildcard matcher",
        "commit": "https://github.com/apache/karaf-cellar/commit/292152f526a4fc61d112bb06fe0941f3652ca4e7",
        "parent": "https://github.com/apache/karaf-cellar/commit/cabd538dd80bbc9edb32612d22c0a5ec8126f7e5",
        "bug_id": "karaf-cellar_2",
        "file": [
            {
                "sha": "8904ceadbb4212715d8a8c3550fa721a52fc5b42",
                "filename": "core/src/main/java/org/apache/karaf/cellar/core/CellarSupport.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/292152f526a4fc61d112bb06fe0941f3652ca4e7/core/src/main/java/org/apache/karaf/cellar/core/CellarSupport.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/292152f526a4fc61d112bb06fe0941f3652ca4e7/core/src/main/java/org/apache/karaf/cellar/core/CellarSupport.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/core/src/main/java/org/apache/karaf/cellar/core/CellarSupport.java?ref=292152f526a4fc61d112bb06fe0941f3652ca4e7",
                "patch": "@@ -213,6 +213,9 @@ public Boolean isAllowed(Group group, String category, String event, EventType t\n      * @return true if the item string matches the pattern, false else.\n      */\n     protected boolean wildCardMatch(String item, String pattern) {\n+        if (item == null || pattern == null) {\n+            return false;\n+        }\n         // update the pattern to have a valid regex pattern\n         pattern = pattern.replace(\"*\", \".*\");\n         // use the regex",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-4908] Prevent NPE in FeaturesSynchronizer",
        "commit": "https://github.com/apache/karaf-cellar/commit/037c697a20cc5dbd422c9f011c7de4307696f8be",
        "parent": "https://github.com/apache/karaf-cellar/commit/ef1691907e6b5f01acce889ed13ed6a9ceafe2fc",
        "bug_id": "karaf-cellar_3",
        "file": [
            {
                "sha": "88abe5f69807a6ad49aea35481676d8f5f364ff6",
                "filename": "features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/037c697a20cc5dbd422c9f011c7de4307696f8be/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/037c697a20cc5dbd422c9f011c7de4307696f8be/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java?ref=037c697a20cc5dbd422c9f011c7de4307696f8be",
                "patch": "@@ -322,7 +322,9 @@ public String getSyncPolicy(Group group) {\n             Dictionary<String, Object> properties = configuration.getProperties();\n             if (properties != null) {\n                 String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-                return properties.get(propertyKey).toString();\n+                if (properties.get(propertyKey) != null) {\n+                    return properties.get(propertyKey).toString();\n+                }\n             }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR FEATURE: error while retrieving the sync policy\", e);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-4911] Prevent NPE in ConfigurationSynchronizer",
        "commit": "https://github.com/apache/karaf-cellar/commit/ef1691907e6b5f01acce889ed13ed6a9ceafe2fc",
        "parent": "https://github.com/apache/karaf-cellar/commit/c94a79ef6b28d8175a018f080af80456633717c9",
        "bug_id": "karaf-cellar_4",
        "file": [
            {
                "sha": "7c7fe7c877460b52a2690ab0448fdf4ee2cd8894",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/ef1691907e6b5f01acce889ed13ed6a9ceafe2fc/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/ef1691907e6b5f01acce889ed13ed6a9ceafe2fc/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java?ref=ef1691907e6b5f01acce889ed13ed6a9ceafe2fc",
                "patch": "@@ -266,7 +266,9 @@ public String getSyncPolicy(Group group) {\n             Dictionary<String, Object> properties = configuration.getProperties();\n             if (properties != null) {\n                 String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-                return properties.get(propertyKey).toString();\n+                if (properties.get(propertyKey) != null) {\n+                    return properties.get(propertyKey).toString();\n+                }\n             }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR CONFIG: error while retrieving the sync policy\", e);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-4909] Prevent NPE in BundleSynchronizer",
        "commit": "https://github.com/apache/karaf-cellar/commit/c94a79ef6b28d8175a018f080af80456633717c9",
        "parent": "https://github.com/apache/karaf-cellar/commit/9ac87b1bced0ec152486034cf19873733bc99cc4",
        "bug_id": "karaf-cellar_5",
        "file": [
            {
                "sha": "ae294b0824e89832907f067643de2a4337f702cd",
                "filename": "assembly/src/main/resources/groups.cfg",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/c94a79ef6b28d8175a018f080af80456633717c9/assembly/src/main/resources/groups.cfg",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/c94a79ef6b28d8175a018f080af80456633717c9/assembly/src/main/resources/groups.cfg",
                "status": "modified",
                "changes": 34,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/assembly/src/main/resources/groups.cfg?ref=c94a79ef6b28d8175a018f080af80456633717c9",
                "patch": "@@ -6,22 +6,22 @@ groups = default\n #\n # Filtering of the bundles in the default cluster group\n #\n-default.bundle.whitelist.inbound = *\n-default.bundle.whitelist.outbound = *\n-default.bundle.blacklist.inbound = *.xml\n-default.bundle.blacklist.outbound = *.xml\n+default.bundle.whitelist.inbound=*\n+default.bundle.whitelist.outbound=*\n+default.bundle.blacklist.inbound=*.xml\n+default.bundle.blacklist.outbound=*.xml\n \n #\n # Filtering of the configurations in the default cluster group\n #\n-default.config.whitelist.inbound = *\n-default.config.whitelist.outbound = *\n-default.config.blacklist.inbound = org.apache.felix.fileinstall*, \\\n+default.config.whitelist.inbound=*\n+default.config.whitelist.outbound=*\n+default.config.blacklist.inbound=org.apache.felix.fileinstall*, \\\n                                    org.apache.karaf.management, \\\n                                    org.apache.karaf.shell, \\\n                                    org.ops4j.pax.web, \\\n                                    org.apache.aries.transaction\n-default.config.blacklist.outbound = org.apache.felix.fileinstall*, \\\n+default.config.blacklist.outbound=org.apache.felix.fileinstall*, \\\n                                     org.apache.karaf.management, \\\n                                     org.apache.karaf.shell, \\\n                                     org.ops4j.pax.web, \\\n@@ -30,10 +30,10 @@ default.config.blacklist.outbound = org.apache.felix.fileinstall*, \\\n #\n # Filtering of the features in the default cluster group\n #\n-default.feature.whitelist.inbound = *\n-default.feature.whitelist.outbound = *\n-default.feature.blacklist.inbound = none\n-default.feature.blacklist.outbound = none\n+default.feature.whitelist.inbound=*\n+default.feature.whitelist.outbound=*\n+default.feature.blacklist.inbound=none\n+default.feature.blacklist.outbound=none\n \n #\n # The following properties define the behavior to use when the node joins the cluster (the usage of the bootstrap\n@@ -49,8 +49,8 @@ default.feature.blacklist.outbound = none\n # nodeOnly: the node is the \"master\", the node pushes his state to the cluster group, nothing is pulled from the\n #           cluster group\n #\n-default.bundle.sync = cluster\n-default.config.sync = cluster\n-default.feature.sync = cluster\n-default.obr.urls.sync = cluster\n-default.balanced.servlet.sync = cluster\n+default.bundle.sync=cluster\n+default.config.sync=cluster\n+default.feature.sync=cluster\n+default.obr.urls.sync=cluster\n+default.balanced.servlet.sync=cluster",
                "deletions": 17
            },
            {
                "sha": "b7220763a32b6cecfe9a3157ec7855d61fb9f474",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/c94a79ef6b28d8175a018f080af80456633717c9/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/c94a79ef6b28d8175a018f080af80456633717c9/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java?ref=c94a79ef6b28d8175a018f080af80456633717c9",
                "patch": "@@ -335,7 +335,9 @@ public String getSyncPolicy(Group group) {\n             Dictionary<String, Object> properties = configuration.getProperties();\n             if (properties != null) {\n                 String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-                return properties.get(propertyKey).toString();\n+                if (properties.get(propertyKey) != null) {\n+                    return properties.get(propertyKey).toString();\n+                }\n             }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR BUNDLE: error while retrieving the sync policy\", e);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "Prevent NPE in cluster:bundle-block command",
        "commit": "https://github.com/apache/karaf-cellar/commit/c738c846ab529e40aba73d63ceefb54be47454f8",
        "parent": "https://github.com/apache/karaf-cellar/commit/b5a686c1b60f8f24746f0b802cd6fc589b81f2ae",
        "bug_id": "karaf-cellar_6",
        "file": [
            {
                "sha": "098d38a764b3ce4f1d7f7957fbef65c0f0d10ce4",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/BlockCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/c738c846ab529e40aba73d63ceefb54be47454f8/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/BlockCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/c738c846ab529e40aba73d63ceefb54be47454f8/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/BlockCommand.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/BlockCommand.java?ref=c738c846ab529e40aba73d63ceefb54be47454f8",
                "patch": "@@ -54,7 +54,7 @@ public Object doExecute() throws Exception {\n             patterns.add(bundles.get(selectedBundle).getLocation());\n         }\n \n-        if (patterns.isEmpty()) {\n+        if (patterns.isEmpty() && ids != null) {\n             for (String id : ids) {\n                 patterns.add(id);\n             }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-3442] Fix NPE with bundle URL is not correct",
        "commit": "https://github.com/apache/karaf-cellar/commit/0e83836c2863cf7675946ada6456b79291a34d0d",
        "parent": "https://github.com/apache/karaf-cellar/commit/ff09b9d9deb411fc278bfdf9f16d5dd0377058f0",
        "bug_id": "karaf-cellar_7",
        "file": [
            {
                "sha": "dc21c19d0884390c01cd1394a6a88dff3afa3fda",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/0e83836c2863cf7675946ada6456b79291a34d0d/bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/0e83836c2863cf7675946ada6456b79291a34d0d/bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java?ref=0e83836c2863cf7675946ada6456b79291a34d0d",
                "patch": "@@ -125,6 +125,9 @@ public void install(String groupName, String location, boolean start) throws Exc\n         // get the name and version in the location MANIFEST\n         JarInputStream jarInputStream = new JarInputStream(new URL(location).openStream());\n         Manifest manifest = jarInputStream.getManifest();\n+        if (manifest == null) {\n+            throw new IllegalArgumentException(\"Bundle location \" + location + \" doesn't seem correct\");\n+        }\n         String name = manifest.getMainAttributes().getValue(\"Bundle-SymbolicName\");\n         if (name == null) {\n             name = manifest.getMainAttributes().getValue(\"Bundle-SymbolicName\");",
                "deletions": 0
            },
            {
                "sha": "64c594deddcfdbc07ecd2f91402c9cdd6254eec6",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/InstallBundleCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/0e83836c2863cf7675946ada6456b79291a34d0d/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/InstallBundleCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/0e83836c2863cf7675946ada6456b79291a34d0d/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/InstallBundleCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/InstallBundleCommand.java?ref=0e83836c2863cf7675946ada6456b79291a34d0d",
                "patch": "@@ -75,6 +75,10 @@ protected Object doExecute() throws Exception {\n                 // get the name and version in the location MANIFEST\n                 JarInputStream jarInputStream = new JarInputStream(new URL(url).openStream());\n                 Manifest manifest = jarInputStream.getManifest();\n+                if (manifest == null) {\n+                    System.err.println(\"Bundle location \" + url + \" doesn't seem correct\");\n+                    continue;\n+                }\n                 String name = manifest.getMainAttributes().getValue(\"Bundle-Name\");\n                 String symbolicName = manifest.getMainAttributes().getValue(\"Bundle-SymbolicName\");\n                 if (name == null) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-2550] Fix NPE in the handler at first sync",
        "commit": "https://github.com/apache/karaf-cellar/commit/d92c546e1a812b2a8e766c63d7577a8555056537",
        "parent": "https://github.com/apache/karaf-cellar/commit/296d0cf0553e373fe6b043f9f595e559cee37a15",
        "bug_id": "karaf-cellar_8",
        "file": [
            {
                "sha": "63925047991b436738574235f3a6541a97caed03",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/ConfigurationEventHandler.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/d92c546e1a812b2a8e766c63d7577a8555056537/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationEventHandler.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/d92c546e1a812b2a8e766c63d7577a8555056537/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationEventHandler.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationEventHandler.java?ref=d92c546e1a812b2a8e766c63d7577a8555056537",
                "patch": "@@ -75,7 +75,7 @@ public void handle(ClusterConfigurationEvent event) {\n             try {\n                 // update the local configuration\n                 Configuration[] localConfigurations = configurationAdmin.listConfigurations(\"(service.pid=\" + pid + \")\");\n-                if (event.getType() == ConfigurationEvent.CM_DELETED) {\n+                if (event.getType() != null && event.getType() == ConfigurationEvent.CM_DELETED) {\n                     // delete the configuration\n                     if (localConfigurations != null && localConfigurations.length > 0) {\n                         localConfigurations[0].delete();",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-3715] Fixing NPE in CellarBundleMBean and adding symbolic name in getBundles() operation",
        "commit": "https://github.com/apache/karaf-cellar/commit/fcdf77db0f6705d1dde126f6e99455bfc40dd284",
        "parent": "https://github.com/apache/karaf-cellar/commit/90764c1562c6a47744d2fd93b57b2841385ceeae",
        "bug_id": "karaf-cellar_9",
        "file": [
            {
                "sha": "231aa732b96123ac5760a4c63190ecc98d95155a",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/fcdf77db0f6705d1dde126f6e99455bfc40dd284/bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/fcdf77db0f6705d1dde126f6e99455bfc40dd284/bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java",
                "status": "modified",
                "changes": 14,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/management/internal/CellarBundleMBeanImpl.java?ref=fcdf77db0f6705d1dde126f6e99455bfc40dd284",
                "patch": "@@ -368,9 +368,9 @@ public void block(String groupName, String bundlePattern, boolean whitelist, boo\n     @Override\n     public TabularData getBundles(String groupName) throws Exception {\n         CompositeType compositeType = new CompositeType(\"Bundle\", \"Karaf Cellar bundle\",\n-                new String[]{\"id\", \"name\", \"version\", \"status\", \"location\", \"located\", \"blocked\"},\n-                new String[]{\"ID of the bundle\", \"Name of the bundle\", \"Version of the bundle\", \"Current status of the bundle\", \"Location of the bundle\", \"Where the bundle is located (cluster or local node)\", \"The bundle blocked policy\"},\n-                new OpenType[]{SimpleType.INTEGER, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING});\n+                new String[]{\"id\", \"name\", \"symbolic_name\", \"version\", \"status\", \"location\", \"located\", \"blocked\"},\n+                new String[]{\"ID of the bundle\", \"Name of the bundle\", \"Symbolic name of the bundle\", \"Version of the bundle\", \"Current status of the bundle\", \"Location of the bundle\", \"Where the bundle is located (cluster or local node)\", \"The bundle blocked policy\"},\n+                new OpenType[]{SimpleType.LONG, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING, SimpleType.STRING});\n         TabularType tableType = new TabularType(\"Bundles\", \"Table of all Karaf Cellar bundles\", compositeType,\n                 new String[]{\"name\", \"version\"});\n         TabularData table = new TabularDataSupport(tableType);\n@@ -443,10 +443,12 @@ public TabularData getBundles(String groupName) throws Exception {\n                     blocked = \"out\";\n \n                 CompositeData data = new CompositeDataSupport(compositeType,\n-                        new String[]{\"id\", \"name\", \"version\", \"status\", \"location\", \"located\", \"blocked\"},\n-                        new Object[]{bundle.getId(), bundle.getName(), bundle.getVersion(), status, bundle.getLocation(), located, blocked});\n+                        new String[]{\"id\", \"name\", \"symbolic_name\", \"version\", \"status\", \"location\", \"located\", \"blocked\"},\n+                        new Object[]{bundle.getId(), bundle.getName(), bundle.getSymbolicName(), bundle.getVersion(), status, bundle.getLocation(), located, blocked});\n                 table.put(data);\n             }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }\n@@ -579,7 +581,7 @@ protected void addMatchingBundles(String nameId, List<String> bundles, Map<Strin\n             extendedState.setSymbolicName(state.getSymbolicName());\n             extendedState.setStatus(state.getStatus());\n             extendedState.setLocation(state.getLocation());\n-            extendedState.setData(state.getData());\n+            // extendedState.setData(state.getData());\n             extendedState.setCluster(true);\n             extendedState.setLocal(false);\n             bundles.put(key, extendedState);",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-943] Inject groupManager in the UninstallFeatureCommand to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1186193 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/44605e3856bc19c6c37607cd68c4ee28bf15659d",
        "parent": "https://github.com/apache/karaf-cellar/commit/bd6164f1934df24d2cd394795814a33769a21b9b",
        "bug_id": "karaf-cellar_10",
        "file": [
            {
                "sha": "0fe22f73b59cdf7a321f2b56fa9961abbe5cb52c",
                "filename": "features/src/main/resources/OSGI-INF/blueprint/shell-features.xml",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/44605e3856bc19c6c37607cd68c4ee28bf15659d/features/src/main/resources/OSGI-INF/blueprint/shell-features.xml",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/44605e3856bc19c6c37607cd68c4ee28bf15659d/features/src/main/resources/OSGI-INF/blueprint/shell-features.xml",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/features/src/main/resources/OSGI-INF/blueprint/shell-features.xml?ref=44605e3856bc19c6c37607cd68c4ee28bf15659d",
                "patch": "@@ -31,6 +31,7 @@\n         <command name=\"cluster/features-uninstall\">\n             <action class=\"org.apache.karaf.cellar.features.shell.UninstallFeatureCommand\">\n                 <property name=\"clusterManager\" ref=\"clusterManager\"/>\n+                <property name=\"groupManager\" ref=\"groupManager\"/>\n                 <property name=\"eventTransportFactory\" ref=\"eventTransportFactory\"/>\n                 <property name=\"featuresService\" ref=\"featuresService\"/>\n             </action>",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-943] Inject groupManager in the UninstallFeatureCommand to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1186193 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/2d1bc8dadd57c9d8a26a0fff63c7028fa054add3",
        "parent": "https://github.com/apache/karaf-cellar/commit/93747ec38468f2c4b20e3a1e666d674c1ff1aaf8",
        "bug_id": "karaf-cellar_11",
        "file": [
            {
                "sha": "0fe22f73b59cdf7a321f2b56fa9961abbe5cb52c",
                "filename": "features/src/main/resources/OSGI-INF/blueprint/shell-features.xml",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/2d1bc8dadd57c9d8a26a0fff63c7028fa054add3/features/src/main/resources/OSGI-INF/blueprint/shell-features.xml",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/2d1bc8dadd57c9d8a26a0fff63c7028fa054add3/features/src/main/resources/OSGI-INF/blueprint/shell-features.xml",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/features/src/main/resources/OSGI-INF/blueprint/shell-features.xml?ref=2d1bc8dadd57c9d8a26a0fff63c7028fa054add3",
                "patch": "@@ -31,6 +31,7 @@\n         <command name=\"cluster/features-uninstall\">\n             <action class=\"org.apache.karaf.cellar.features.shell.UninstallFeatureCommand\">\n                 <property name=\"clusterManager\" ref=\"clusterManager\"/>\n+                <property name=\"groupManager\" ref=\"groupManager\"/>\n                 <property name=\"eventTransportFactory\" ref=\"eventTransportFactory\"/>\n                 <property name=\"featuresService\" ref=\"featuresService\"/>\n             </action>",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-1419] Populate bundle location in cluster:bundle-* commands in order to avoid a NPE in the BundleEventHandler\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1331465 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/a2b3f8126a7ce90fdbca4d23680d3cc8f5817444",
        "parent": "https://github.com/apache/karaf-cellar/commit/b197304b6ce733a605e63be0a6a90ba5a4f462e9",
        "bug_id": "karaf-cellar_12",
        "file": [
            {
                "sha": "12c7e0fe206d49f5b6e12c182964e1d5420d87c6",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/a2b3f8126a7ce90fdbca4d23680d3cc8f5817444/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/a2b3f8126a7ce90fdbca4d23680d3cc8f5817444/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java?ref=a2b3f8126a7ce90fdbca4d23680d3cc8f5817444",
                "patch": "@@ -48,6 +48,7 @@ protected Object doExecute() throws Exception {\n         // update the distributed map\n         ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n         Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+        String location;\n         try {\n             Map<String, BundleState> bundles = clusterManager.getMap(Constants.BUNDLE_MAP + Configurations.SEPARATOR + groupName);\n             BundleState state = bundles.get(name + \"/\" + version);\n@@ -56,14 +57,15 @@ protected Object doExecute() throws Exception {\n                 return null;\n             }\n             state.setStatus(BundleEvent.STARTED);\n+            location = state.getLocation();\n             bundles.put(name + \"/\" + version, state);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }\n \n         // broadcast the event\n         EventProducer producer = eventTransportFactory.getEventProducer(groupName, true);\n-        RemoteBundleEvent event = new RemoteBundleEvent(name, version, null, BundleEvent.STARTED);\n+        RemoteBundleEvent event = new RemoteBundleEvent(name, version, location, BundleEvent.STARTED);\n         event.setForce(true);\n         event.setSourceGroup(group);\n         producer.produce(event);",
                "deletions": 1
            },
            {
                "sha": "b5fb989da82626121609e67826624f898ffbc35e",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/a2b3f8126a7ce90fdbca4d23680d3cc8f5817444/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/a2b3f8126a7ce90fdbca4d23680d3cc8f5817444/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java?ref=a2b3f8126a7ce90fdbca4d23680d3cc8f5817444",
                "patch": "@@ -48,6 +48,7 @@ protected Object doExecute() throws Exception {\n         // update the cluster map\n         ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n         Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+        String location;\n         try {\n             Map<String, BundleState> bundles = clusterManager.getMap(Constants.BUNDLE_MAP + Configurations.SEPARATOR + groupName);\n             BundleState state = bundles.get(name + \"/\" + version);\n@@ -56,14 +57,15 @@ protected Object doExecute() throws Exception {\n                 return null;\n             }\n             state.setStatus(BundleEvent.STOPPED);\n+            location = state.getLocation();\n             bundles.put(name + \"/\" + version, state);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }\n \n         // broadcast the event\n         EventProducer producer = eventTransportFactory.getEventProducer(groupName, true);\n-        RemoteBundleEvent event = new RemoteBundleEvent(name, version, null, BundleEvent.STOPPED);\n+        RemoteBundleEvent event = new RemoteBundleEvent(name, version, location, BundleEvent.STOPPED);\n         event.setForce(true);\n         event.setSourceGroup(group);\n         producer.produce(event);",
                "deletions": 1
            },
            {
                "sha": "f4df33fd104266872cb1700eeadebc3de7693140",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/a2b3f8126a7ce90fdbca4d23680d3cc8f5817444/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/a2b3f8126a7ce90fdbca4d23680d3cc8f5817444/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java?ref=a2b3f8126a7ce90fdbca4d23680d3cc8f5817444",
                "patch": "@@ -48,21 +48,23 @@ protected Object doExecute() throws Exception {\n         // update the cluster map\n         ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n         Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+        String location;\n         try {\n             Map<String, BundleState> bundles = clusterManager.getMap(Constants.BUNDLE_MAP + Configurations.SEPARATOR + groupName);\n             BundleState state = bundles.get(name + \"/\" + version);\n             if (state == null) {\n                 System.err.println(\"Bundle \" + name + \"/\" + version + \" not found in cluster group \" + groupName);\n                 return null;\n             }\n+            location = state.getLocation();\n             bundles.remove(name + \"/\" + version);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }\n \n         // broadcast the event\n         EventProducer producer = eventTransportFactory.getEventProducer(groupName, true);\n-        RemoteBundleEvent event = new RemoteBundleEvent(name, version, null, BundleEvent.UNINSTALLED);\n+        RemoteBundleEvent event = new RemoteBundleEvent(name, version, location, BundleEvent.UNINSTALLED);\n         event.setForce(true);\n         event.setSourceGroup(group);\n         producer.produce(event);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-1419] Populate bundle location in cluster:bundle-* commands in order to avoid a NPE in the BundleEventHandler\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1331465 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/9864f72006acfc8b5c863a058a5d0cfb01c582be",
        "parent": "https://github.com/apache/karaf-cellar/commit/3fe44081210e36f9a68770c8d86136cffcc8a7c1",
        "bug_id": "karaf-cellar_13",
        "file": [
            {
                "sha": "12c7e0fe206d49f5b6e12c182964e1d5420d87c6",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/9864f72006acfc8b5c863a058a5d0cfb01c582be/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/9864f72006acfc8b5c863a058a5d0cfb01c582be/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StartBundleCommand.java?ref=9864f72006acfc8b5c863a058a5d0cfb01c582be",
                "patch": "@@ -48,6 +48,7 @@ protected Object doExecute() throws Exception {\n         // update the distributed map\n         ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n         Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+        String location;\n         try {\n             Map<String, BundleState> bundles = clusterManager.getMap(Constants.BUNDLE_MAP + Configurations.SEPARATOR + groupName);\n             BundleState state = bundles.get(name + \"/\" + version);\n@@ -56,14 +57,15 @@ protected Object doExecute() throws Exception {\n                 return null;\n             }\n             state.setStatus(BundleEvent.STARTED);\n+            location = state.getLocation();\n             bundles.put(name + \"/\" + version, state);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }\n \n         // broadcast the event\n         EventProducer producer = eventTransportFactory.getEventProducer(groupName, true);\n-        RemoteBundleEvent event = new RemoteBundleEvent(name, version, null, BundleEvent.STARTED);\n+        RemoteBundleEvent event = new RemoteBundleEvent(name, version, location, BundleEvent.STARTED);\n         event.setForce(true);\n         event.setSourceGroup(group);\n         producer.produce(event);",
                "deletions": 1
            },
            {
                "sha": "b5fb989da82626121609e67826624f898ffbc35e",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/9864f72006acfc8b5c863a058a5d0cfb01c582be/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/9864f72006acfc8b5c863a058a5d0cfb01c582be/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/StopBundleCommand.java?ref=9864f72006acfc8b5c863a058a5d0cfb01c582be",
                "patch": "@@ -48,6 +48,7 @@ protected Object doExecute() throws Exception {\n         // update the cluster map\n         ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n         Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+        String location;\n         try {\n             Map<String, BundleState> bundles = clusterManager.getMap(Constants.BUNDLE_MAP + Configurations.SEPARATOR + groupName);\n             BundleState state = bundles.get(name + \"/\" + version);\n@@ -56,14 +57,15 @@ protected Object doExecute() throws Exception {\n                 return null;\n             }\n             state.setStatus(BundleEvent.STOPPED);\n+            location = state.getLocation();\n             bundles.put(name + \"/\" + version, state);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }\n \n         // broadcast the event\n         EventProducer producer = eventTransportFactory.getEventProducer(groupName, true);\n-        RemoteBundleEvent event = new RemoteBundleEvent(name, version, null, BundleEvent.STOPPED);\n+        RemoteBundleEvent event = new RemoteBundleEvent(name, version, location, BundleEvent.STOPPED);\n         event.setForce(true);\n         event.setSourceGroup(group);\n         producer.produce(event);",
                "deletions": 1
            },
            {
                "sha": "f4df33fd104266872cb1700eeadebc3de7693140",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/9864f72006acfc8b5c863a058a5d0cfb01c582be/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/9864f72006acfc8b5c863a058a5d0cfb01c582be/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/shell/UninstallBundleCommand.java?ref=9864f72006acfc8b5c863a058a5d0cfb01c582be",
                "patch": "@@ -48,21 +48,23 @@ protected Object doExecute() throws Exception {\n         // update the cluster map\n         ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n         Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+        String location;\n         try {\n             Map<String, BundleState> bundles = clusterManager.getMap(Constants.BUNDLE_MAP + Configurations.SEPARATOR + groupName);\n             BundleState state = bundles.get(name + \"/\" + version);\n             if (state == null) {\n                 System.err.println(\"Bundle \" + name + \"/\" + version + \" not found in cluster group \" + groupName);\n                 return null;\n             }\n+            location = state.getLocation();\n             bundles.remove(name + \"/\" + version);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }\n \n         // broadcast the event\n         EventProducer producer = eventTransportFactory.getEventProducer(groupName, true);\n-        RemoteBundleEvent event = new RemoteBundleEvent(name, version, null, BundleEvent.UNINSTALLED);\n+        RemoteBundleEvent event = new RemoteBundleEvent(name, version, location, BundleEvent.UNINSTALLED);\n         event.setForce(true);\n         event.setSourceGroup(group);\n         producer.produce(event);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-1034] Fixed destroy methods so that cellar can cleanly uninstall. Added some lifecycle and npe checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1209755 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/98570a0e9c061ceec28cb25fd27122f2c30155ae",
        "parent": "https://github.com/apache/karaf-cellar/commit/ed8e38243c77a6b77f36c63f3188ed6f40504311",
        "bug_id": "karaf-cellar_14",
        "file": [
            {
                "sha": "095cf8eab92a4aa22c188e5158d85e5ede91bd11",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/98570a0e9c061ceec28cb25fd27122f2c30155ae/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/98570a0e9c061ceec28cb25fd27122f2c30155ae/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java?ref=98570a0e9c061ceec28cb25fd27122f2c30155ae",
                "patch": "@@ -149,9 +149,11 @@ public Boolean isSyncEnabled(Group group) {\n         try {\n             Configuration configuration = configurationAdmin.getConfiguration(Configurations.GROUP);\n             Dictionary<String, String> properties = configuration.getProperties();\n-            String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-            String propertyValue = properties.get(propertyKey);\n-            result = Boolean.parseBoolean(propertyValue);\n+            if (properties != null) {\n+                String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n+                String propertyValue = properties.get(propertyKey);\n+                result = Boolean.parseBoolean(propertyValue);\n+            }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR BUNDLE: error while checking if sync is enabled\", e);\n         }",
                "deletions": 3
            },
            {
                "sha": "c354285da240a3524aee755c3b33a14f896f43ec",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/98570a0e9c061ceec28cb25fd27122f2c30155ae/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/98570a0e9c061ceec28cb25fd27122f2c30155ae/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java?ref=98570a0e9c061ceec28cb25fd27122f2c30155ae",
                "patch": "@@ -177,9 +177,11 @@ public Boolean isSyncEnabled(Group group) {\n         try {\n             Configuration configuration = configurationAdmin.getConfiguration(Configurations.GROUP);\n             Dictionary<String, String> properties = configuration.getProperties();\n-            String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-            String propertyValue = properties.get(propertyKey);\n-            result = Boolean.parseBoolean(propertyValue);\n+            if (properties != null) {\n+                String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n+                String propertyValue = properties.get(propertyKey);\n+                result = Boolean.parseBoolean(propertyValue);\n+            }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR CONFIG: error while checking if sync is enabled\", e);\n         }",
                "deletions": 3
            },
            {
                "sha": "94c90360e9253c1673ff8b80685c42acd35ef6dc",
                "filename": "features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/98570a0e9c061ceec28cb25fd27122f2c30155ae/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/98570a0e9c061ceec28cb25fd27122f2c30155ae/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java?ref=98570a0e9c061ceec28cb25fd27122f2c30155ae",
                "patch": "@@ -178,9 +178,11 @@ public Boolean isSyncEnabled(Group group) {\n         try {\n             Configuration configuration = configurationAdmin.getConfiguration(Configurations.GROUP);\n             Dictionary<String, String> properties = configuration.getProperties();\n-            String propertyKey = groupName + Configurations.SEPARATOR + Constants.FEATURES_CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-            String propertyValue = properties.get(propertyKey);\n-            result = Boolean.parseBoolean(propertyValue);\n+            if (properties != null) {\n+                String propertyKey = groupName + Configurations.SEPARATOR + Constants.FEATURES_CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n+                String propertyValue = properties.get(propertyKey);\n+                result = Boolean.parseBoolean(propertyValue);\n+            }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR FEATURES: error while checking if sync is enabled\", e);\n         }",
                "deletions": 3
            },
            {
                "sha": "52938f8d726b662e6f0bc59c962601e5ce8646a0",
                "filename": "hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/98570a0e9c061ceec28cb25fd27122f2c30155ae/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/98570a0e9c061ceec28cb25fd27122f2c30155ae/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java?ref=98570a0e9c061ceec28cb25fd27122f2c30155ae",
                "patch": "@@ -169,11 +169,15 @@ public void start() {\n     }\n \n     public void stop() {\n-        instance.shutdown();\n+        if (instance != null && instance.getLifecycleService().isRunning()) {\n+            instance.getLifecycleService().shutdown();\n+        }\n     }\n \n     public void restart() {\n-        instance.restart();\n+        if (instance != null && instance.getLifecycleService().isRunning()) {\n+            instance.getLifecycleService().restart();\n+        }\n     }\n \n     public ConfigurationAdmin getConfigurationAdmin() {",
                "deletions": 2
            },
            {
                "sha": "1c7c652663f6a12688ea8e20c2211df896708b59",
                "filename": "hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/98570a0e9c061ceec28cb25fd27122f2c30155ae/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/98570a0e9c061ceec28cb25fd27122f2c30155ae/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java?ref=98570a0e9c061ceec28cb25fd27122f2c30155ae",
                "patch": "@@ -76,6 +76,7 @@ public void init() {\n      * Destruction method.\n      */\n     public void destroy() {\n+        isConsuming = false;\n         if (queue != null) {\n             queue.removeItemListener(this);\n         }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-1034] Fixed destroy methods so that cellar can cleanly uninstall. Added some lifecycle and npe checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1209755 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/2222faa16ed73336c77fc8a301f64e01267bd4c5",
        "parent": "https://github.com/apache/karaf-cellar/commit/0d2037c4e80e69789d198955d70fd6e9d487bcfc",
        "bug_id": "karaf-cellar_15",
        "file": [
            {
                "sha": "095cf8eab92a4aa22c188e5158d85e5ede91bd11",
                "filename": "bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/2222faa16ed73336c77fc8a301f64e01267bd4c5/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/2222faa16ed73336c77fc8a301f64e01267bd4c5/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/bundle/src/main/java/org/apache/karaf/cellar/bundle/BundleSynchronizer.java?ref=2222faa16ed73336c77fc8a301f64e01267bd4c5",
                "patch": "@@ -149,9 +149,11 @@ public Boolean isSyncEnabled(Group group) {\n         try {\n             Configuration configuration = configurationAdmin.getConfiguration(Configurations.GROUP);\n             Dictionary<String, String> properties = configuration.getProperties();\n-            String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-            String propertyValue = properties.get(propertyKey);\n-            result = Boolean.parseBoolean(propertyValue);\n+            if (properties != null) {\n+                String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n+                String propertyValue = properties.get(propertyKey);\n+                result = Boolean.parseBoolean(propertyValue);\n+            }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR BUNDLE: error while checking if sync is enabled\", e);\n         }",
                "deletions": 3
            },
            {
                "sha": "c354285da240a3524aee755c3b33a14f896f43ec",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/2222faa16ed73336c77fc8a301f64e01267bd4c5/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/2222faa16ed73336c77fc8a301f64e01267bd4c5/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/ConfigurationSynchronizer.java?ref=2222faa16ed73336c77fc8a301f64e01267bd4c5",
                "patch": "@@ -177,9 +177,11 @@ public Boolean isSyncEnabled(Group group) {\n         try {\n             Configuration configuration = configurationAdmin.getConfiguration(Configurations.GROUP);\n             Dictionary<String, String> properties = configuration.getProperties();\n-            String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-            String propertyValue = properties.get(propertyKey);\n-            result = Boolean.parseBoolean(propertyValue);\n+            if (properties != null) {\n+                String propertyKey = groupName + Configurations.SEPARATOR + Constants.CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n+                String propertyValue = properties.get(propertyKey);\n+                result = Boolean.parseBoolean(propertyValue);\n+            }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR CONFIG: error while checking if sync is enabled\", e);\n         }",
                "deletions": 3
            },
            {
                "sha": "94c90360e9253c1673ff8b80685c42acd35ef6dc",
                "filename": "features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/2222faa16ed73336c77fc8a301f64e01267bd4c5/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/2222faa16ed73336c77fc8a301f64e01267bd4c5/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/features/src/main/java/org/apache/karaf/cellar/features/FeaturesSynchronizer.java?ref=2222faa16ed73336c77fc8a301f64e01267bd4c5",
                "patch": "@@ -178,9 +178,11 @@ public Boolean isSyncEnabled(Group group) {\n         try {\n             Configuration configuration = configurationAdmin.getConfiguration(Configurations.GROUP);\n             Dictionary<String, String> properties = configuration.getProperties();\n-            String propertyKey = groupName + Configurations.SEPARATOR + Constants.FEATURES_CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n-            String propertyValue = properties.get(propertyKey);\n-            result = Boolean.parseBoolean(propertyValue);\n+            if (properties != null) {\n+                String propertyKey = groupName + Configurations.SEPARATOR + Constants.FEATURES_CATEGORY + Configurations.SEPARATOR + Configurations.SYNC;\n+                String propertyValue = properties.get(propertyKey);\n+                result = Boolean.parseBoolean(propertyValue);\n+            }\n         } catch (IOException e) {\n             LOGGER.error(\"CELLAR FEATURES: error while checking if sync is enabled\", e);\n         }",
                "deletions": 3
            },
            {
                "sha": "52938f8d726b662e6f0bc59c962601e5ce8646a0",
                "filename": "hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/2222faa16ed73336c77fc8a301f64e01267bd4c5/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/2222faa16ed73336c77fc8a301f64e01267bd4c5/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/HazelcastClusterManager.java?ref=2222faa16ed73336c77fc8a301f64e01267bd4c5",
                "patch": "@@ -169,11 +169,15 @@ public void start() {\n     }\n \n     public void stop() {\n-        instance.shutdown();\n+        if (instance != null && instance.getLifecycleService().isRunning()) {\n+            instance.getLifecycleService().shutdown();\n+        }\n     }\n \n     public void restart() {\n-        instance.restart();\n+        if (instance != null && instance.getLifecycleService().isRunning()) {\n+            instance.getLifecycleService().restart();\n+        }\n     }\n \n     public ConfigurationAdmin getConfigurationAdmin() {",
                "deletions": 2
            },
            {
                "sha": "1c7c652663f6a12688ea8e20c2211df896708b59",
                "filename": "hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/2222faa16ed73336c77fc8a301f64e01267bd4c5/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/2222faa16ed73336c77fc8a301f64e01267bd4c5/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/hazelcast/src/main/java/org/apache/karaf/cellar/hazelcast/QueueConsumer.java?ref=2222faa16ed73336c77fc8a301f64e01267bd4c5",
                "patch": "@@ -76,6 +76,7 @@ public void init() {\n      * Destruction method.\n      */\n     public void destroy() {\n+        isConsuming = false;\n         if (queue != null) {\n             queue.removeItemListener(this);\n         }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-839] Fix a NPE raised when pinging an unknown node.\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1163647 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/f036bebd1ce631d63d99a8c7f012a8dc75a13d49",
        "parent": "https://github.com/apache/karaf-cellar/commit/ac084a49ceb008e8de958ef652cdc21694296101",
        "bug_id": "karaf-cellar_16",
        "file": [
            {
                "sha": "145ef3846dbff715a06db9242a789775ca1f97e5",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java?ref=f036bebd1ce631d63d99a8c7f012a8dc75a13d49",
                "patch": "@@ -41,12 +41,12 @@ protected Object doExecute() throws Exception {\n             Map<String, Properties> configurationTable = clusterManager.getMap(Constants.CONFIGURATION_MAP + Configurations.SEPARATOR + groupName);\n \n             if (configurationTable != null && !configurationTable.isEmpty()) {\n-                System.out.println(String.format(\"PIDs for group:\" + groupName));\n+                System.out.println(String.format(\"PIDs for group \" + groupName));\n                 System.out.println(String.format(OUTPUT_FORMAT, \"PID\"));\n                 for (String pid : configurationTable.keySet()) {\n                     System.out.println(String.format(OUTPUT_FORMAT, pid));\n                 }\n-            } else System.err.println(\"No PIDs found for group:\" + groupName);\n+            } else System.err.println(\"No PIDs found for group \" + groupName);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }",
                "deletions": 2
            },
            {
                "sha": "3ad4d758e13040d3169f7801a4b77b88979cb618",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java?ref=f036bebd1ce631d63d99a8c7f012a8dc75a13d49",
                "patch": "@@ -45,15 +45,15 @@ protected Object doExecute() throws Exception {\n             Map<String, Properties> configurationTable = clusterManager.getMap(Constants.CONFIGURATION_MAP + Configurations.SEPARATOR + groupName);\n \n             if (configurationTable != null && !configurationTable.isEmpty()) {\n-                System.out.println(String.format(\"Property list for PID:\" + pid + \" for group:\" + groupName));\n+                System.out.println(String.format(\"Property list for PID \" + pid + \" for group \" + groupName));\n                 System.out.println(String.format(OUTPUT_FORMAT, \"Key\", \"Value\"));\n                 Properties properties = configurationTable.get(pid);\n                 if (properties != null && !properties.isEmpty())\n                     for (Object key : properties.keySet()) {\n                         String value = properties.getProperty((String) key);\n                         System.out.println(String.format(OUTPUT_FORMAT, key, value));\n                     }\n-            } else System.err.print(\"No PIDs found for group:\" + groupName);\n+            } else System.err.print(\"No PIDs found for group \" + groupName);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }",
                "deletions": 2
            },
            {
                "sha": "68a214b5a39718a88efca6bbe2af0e5584df5b14",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java",
                "status": "modified",
                "changes": 12,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java?ref=f036bebd1ce631d63d99a8c7f012a8dc75a13d49",
                "patch": "@@ -43,12 +43,14 @@\n     @Override\n     protected Object doExecute() throws Exception {\n         Map<String, Properties> configurationTable = clusterManager.getMap(Constants.CONFIGURATION_MAP + Configurations.SEPARATOR + groupName);\n-        Properties properties = configurationTable.get(pid);\n-        if (properties == null) {\n-            properties = new Properties();\n+        if (configurationTable != null) {\n+            Properties properties = configurationTable.get(pid);\n+            if (properties == null) {\n+                properties = new Properties();\n+            }\n+            properties.put(key, value);\n+            configurationTable.put(pid, properties);\n         }\n-        properties.put(key, value);\n-        configurationTable.put(pid, properties);\n         return null;\n     }\n ",
                "deletions": 5
            },
            {
                "sha": "e6229bf5da51505d511468169cad7a795abd1da5",
                "filename": "shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java",
                "status": "modified",
                "changes": 25,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java?ref=f036bebd1ce631d63d99a8c7f012a8dc75a13d49",
                "patch": "@@ -39,16 +39,21 @@\n     @Override\n     protected Object doExecute() throws Exception {\n         Node node = clusterManager.findNodeById(nodeId);\n-        System.out.println(\"Pinging node :\" + node.getId());\n-        for (int i = 1; i <= iterations; i++) {\n-            Long start = System.currentTimeMillis();\n-            Ping ping = new Ping(clusterManager.generateId());\n-            ping.setDestination(new HashSet(Arrays.asList(node)));\n-            executionContext.execute(ping);\n-            Long stop = System.currentTimeMillis();\n-            Long delay = stop - start;\n-            System.out.println(String.format(\"PING %s %s %sms\", i, node.getId(), delay));\n-            Thread.sleep(interval);\n+        if (node == null) {\n+            System.out.println(\"Node \" + nodeId + \" is not found.\");\n+        }\n+        else {\n+            System.out.println(\"Pinging node :\" + node.getId());\n+            for (int i = 1; i <= iterations; i++) {\n+                Long start = System.currentTimeMillis();\n+                Ping ping = new Ping(clusterManager.generateId());\n+                ping.setDestination(new HashSet(Arrays.asList(node)));\n+                executionContext.execute(ping);\n+                Long stop = System.currentTimeMillis();\n+                Long delay = stop - start;\n+                System.out.println(String.format(\"PING %s %s %sms\", i, node.getId(), delay));\n+                Thread.sleep(interval);\n+            }\n         }\n         return null;\n     }",
                "deletions": 10
            },
            {
                "sha": "33441e5f63b00b7f67a6b7f1b98899ae92547797",
                "filename": "shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/f036bebd1ce631d63d99a8c7f012a8dc75a13d49/shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java?ref=f036bebd1ce631d63d99a8c7f012a8dc75a13d49",
                "patch": "@@ -43,6 +43,10 @@ protected Object doExecute() throws Exception {\n         try {\n             Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n             Group g = groupManager.findGroupByName(group);\n+            if (g == null) {\n+                System.out.println(\"Group \" + group + \" doesn't exist.\");\n+                return null;\n+            }\n             List<String> nodes = new LinkedList<String>();\n \n             if (g.getMembers() != null && !g.getMembers().isEmpty()) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "karaf-cellar",
        "message": "[KARAF-839] Fix a NPE raised when pinging an unknown node.\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/cellar/trunk@1163647 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/karaf-cellar/commit/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca",
        "parent": "https://github.com/apache/karaf-cellar/commit/656071cd43eb3d86523e5ac830598153fd296e39",
        "bug_id": "karaf-cellar_17",
        "file": [
            {
                "sha": "145ef3846dbff715a06db9242a789775ca1f97e5",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/shell/ListCommand.java?ref=97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca",
                "patch": "@@ -41,12 +41,12 @@ protected Object doExecute() throws Exception {\n             Map<String, Properties> configurationTable = clusterManager.getMap(Constants.CONFIGURATION_MAP + Configurations.SEPARATOR + groupName);\n \n             if (configurationTable != null && !configurationTable.isEmpty()) {\n-                System.out.println(String.format(\"PIDs for group:\" + groupName));\n+                System.out.println(String.format(\"PIDs for group \" + groupName));\n                 System.out.println(String.format(OUTPUT_FORMAT, \"PID\"));\n                 for (String pid : configurationTable.keySet()) {\n                     System.out.println(String.format(OUTPUT_FORMAT, pid));\n                 }\n-            } else System.err.println(\"No PIDs found for group:\" + groupName);\n+            } else System.err.println(\"No PIDs found for group \" + groupName);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }",
                "deletions": 2
            },
            {
                "sha": "3ad4d758e13040d3169f7801a4b77b88979cb618",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/shell/PropListCommand.java?ref=97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca",
                "patch": "@@ -45,15 +45,15 @@ protected Object doExecute() throws Exception {\n             Map<String, Properties> configurationTable = clusterManager.getMap(Constants.CONFIGURATION_MAP + Configurations.SEPARATOR + groupName);\n \n             if (configurationTable != null && !configurationTable.isEmpty()) {\n-                System.out.println(String.format(\"Property list for PID:\" + pid + \" for group:\" + groupName));\n+                System.out.println(String.format(\"Property list for PID \" + pid + \" for group \" + groupName));\n                 System.out.println(String.format(OUTPUT_FORMAT, \"Key\", \"Value\"));\n                 Properties properties = configurationTable.get(pid);\n                 if (properties != null && !properties.isEmpty())\n                     for (Object key : properties.keySet()) {\n                         String value = properties.getProperty((String) key);\n                         System.out.println(String.format(OUTPUT_FORMAT, key, value));\n                     }\n-            } else System.err.print(\"No PIDs found for group:\" + groupName);\n+            } else System.err.print(\"No PIDs found for group \" + groupName);\n         } finally {\n             Thread.currentThread().setContextClassLoader(originalClassLoader);\n         }",
                "deletions": 2
            },
            {
                "sha": "68a214b5a39718a88efca6bbe2af0e5584df5b14",
                "filename": "config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java",
                "status": "modified",
                "changes": 12,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/config/src/main/java/org/apache/karaf/cellar/config/shell/PropSetCommand.java?ref=97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca",
                "patch": "@@ -43,12 +43,14 @@\n     @Override\n     protected Object doExecute() throws Exception {\n         Map<String, Properties> configurationTable = clusterManager.getMap(Constants.CONFIGURATION_MAP + Configurations.SEPARATOR + groupName);\n-        Properties properties = configurationTable.get(pid);\n-        if (properties == null) {\n-            properties = new Properties();\n+        if (configurationTable != null) {\n+            Properties properties = configurationTable.get(pid);\n+            if (properties == null) {\n+                properties = new Properties();\n+            }\n+            properties.put(key, value);\n+            configurationTable.put(pid, properties);\n         }\n-        properties.put(key, value);\n-        configurationTable.put(pid, properties);\n         return null;\n     }\n ",
                "deletions": 5
            },
            {
                "sha": "e6229bf5da51505d511468169cad7a795abd1da5",
                "filename": "shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java",
                "status": "modified",
                "changes": 25,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/shell/src/main/java/org/apache/karaf/cellar/shell/PingCommand.java?ref=97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca",
                "patch": "@@ -39,16 +39,21 @@\n     @Override\n     protected Object doExecute() throws Exception {\n         Node node = clusterManager.findNodeById(nodeId);\n-        System.out.println(\"Pinging node :\" + node.getId());\n-        for (int i = 1; i <= iterations; i++) {\n-            Long start = System.currentTimeMillis();\n-            Ping ping = new Ping(clusterManager.generateId());\n-            ping.setDestination(new HashSet(Arrays.asList(node)));\n-            executionContext.execute(ping);\n-            Long stop = System.currentTimeMillis();\n-            Long delay = stop - start;\n-            System.out.println(String.format(\"PING %s %s %sms\", i, node.getId(), delay));\n-            Thread.sleep(interval);\n+        if (node == null) {\n+            System.out.println(\"Node \" + nodeId + \" is not found.\");\n+        }\n+        else {\n+            System.out.println(\"Pinging node :\" + node.getId());\n+            for (int i = 1; i <= iterations; i++) {\n+                Long start = System.currentTimeMillis();\n+                Ping ping = new Ping(clusterManager.generateId());\n+                ping.setDestination(new HashSet(Arrays.asList(node)));\n+                executionContext.execute(ping);\n+                Long stop = System.currentTimeMillis();\n+                Long delay = stop - start;\n+                System.out.println(String.format(\"PING %s %s %sms\", i, node.getId(), delay));\n+                Thread.sleep(interval);\n+            }\n         }\n         return null;\n     }",
                "deletions": 10
            },
            {
                "sha": "33441e5f63b00b7f67a6b7f1b98899ae92547797",
                "filename": "shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java",
                "blob_url": "https://github.com/apache/karaf-cellar/blob/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java",
                "raw_url": "https://github.com/apache/karaf-cellar/raw/97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca/shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/karaf-cellar/contents/shell/src/main/java/org/apache/karaf/cellar/shell/group/GroupDeleteCommand.java?ref=97b91df3cbbe68d3ecb85b96e6cb879ebf2ab6ca",
                "patch": "@@ -43,6 +43,10 @@ protected Object doExecute() throws Exception {\n         try {\n             Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n             Group g = groupManager.findGroupByName(group);\n+            if (g == null) {\n+                System.out.println(\"Group \" + group + \" doesn't exist.\");\n+                return null;\n+            }\n             List<String> nodes = new LinkedList<String>();\n \n             if (g.getMembers() != null && !g.getMembers().isEmpty()) {",
                "deletions": 0
            }
        ]
    }
]