[
    {
        "repo": "jackrabbit-oak",
        "commit": "https://github.com/apache/jackrabbit-oak/commit/1a1e8bad9305895763693b650e91dbce39908e42",
        "bug_id": "jackrabbit-oak_1a1e8ba",
        "message": "OAK-2880: NPE in SegmentWriter.writeMap\nTest case and fix: ignore null keys that are not present in the base map\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1681955 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit-oak/commit/f5513256cddf7af2e41e27a39c141396c3b82dbe",
        "patched_files": [
            "SegmentWriter.java",
            "Record.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/1a1e8bad9305895763693b650e91dbce39908e42/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/SegmentWriter.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/SegmentWriter.java?ref=1a1e8bad9305895763693b650e91dbce39908e42",
                "filename": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/SegmentWriter.java",
                "deletions": 2,
                "sha": "abab3d489f24db12d6983aecb72d3f8f2668bf78",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/1a1e8bad9305895763693b650e91dbce39908e42/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/SegmentWriter.java",
                "patch": "@@ -701,11 +701,13 @@ MapRecord writeMap(MapRecord base, Map<String, RecordId> changes) {\n                     keyId = e.getKey();\n                 }\n             }\n-            if (keyId == null) {\n+            if (keyId == null && entry.getValue() != null) {\n                 keyId = writeString(key);\n             }\n \n-            entries.add(new MapEntry(key, keyId, entry.getValue()));\n+            if (keyId != null) {\n+                entries.add(new MapEntry(key, keyId, entry.getValue()));\n+            }\n         }\n \n         return writeMapBucket(base, entries, 0);",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 16,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/1a1e8bad9305895763693b650e91dbce39908e42/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordTest.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordTest.java?ref=1a1e8bad9305895763693b650e91dbce39908e42",
                "filename": "oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordTest.java",
                "deletions": 7,
                "sha": "9633a0564f5304841bd5dbeaf7d1674bcd90b0b9",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/1a1e8bad9305895763693b650e91dbce39908e42/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordTest.java",
                "patch": "@@ -17,6 +17,7 @@\n package org.apache.jackrabbit.oak.plugins.segment;\n \n import static com.google.common.collect.Lists.newArrayList;\n+import static com.google.common.collect.Maps.newHashMap;\n import static java.util.Collections.singletonList;\n import static junit.framework.Assert.assertNotNull;\n import static junit.framework.Assert.fail;\n@@ -40,16 +41,14 @@\n import java.util.Map;\n import java.util.Random;\n \n+import com.google.common.base.Charsets;\n+import com.google.common.collect.ImmutableMap;\n import org.apache.jackrabbit.oak.api.Blob;\n import org.apache.jackrabbit.oak.plugins.segment.memory.MemoryStore;\n import org.apache.jackrabbit.oak.spi.state.NodeBuilder;\n import org.apache.jackrabbit.oak.spi.state.NodeState;\n import org.junit.Test;\n \n-import com.google.common.base.Charsets;\n-import com.google.common.collect.ImmutableMap;\n-import com.google.common.collect.Maps;\n-\n public class RecordTest {\n \n     private String hello = \"Hello, World!\";\n@@ -199,7 +198,7 @@ public void testMapRecord() {\n                 null, ImmutableMap.of(\"one\", blockId));\n         MapRecord two = writer.writeMap(\n                 null, ImmutableMap.of(\"one\", blockId, \"two\", blockId));\n-        Map<String, RecordId> map = Maps.newHashMap();\n+        Map<String, RecordId> map = newHashMap();\n         for (int i = 0; i < 1000; i++) {\n             map.put(\"key\" + i, blockId);\n         }\n@@ -241,7 +240,7 @@ public void testMapRecord() {\n         assertFalse(iterator.hasNext());\n         assertNull(many.getEntry(\"foo\"));\n \n-        Map<String, RecordId> changes = Maps.newHashMap();\n+        Map<String, RecordId> changes = newHashMap();\n         changes.put(\"key0\", null);\n         changes.put(\"key1000\", blockId);\n         MapRecord modified = writer.writeMap(many, changes);\n@@ -256,10 +255,20 @@ public void testMapRecord() {\n         assertNull(many.getEntry(\"foo\"));\n     }\n \n+    @Test\n+    public void testMapRemoveNonExisting() {\n+        RecordId blockId = writer.writeBlock(bytes, 0, bytes.length);\n+\n+        Map<String, RecordId> changes = newHashMap();\n+        changes.put(\"one\", null);\n+        MapRecord zero = writer.writeMap(null, changes);\n+        assertEquals(0, zero.size());\n+    }\n+\n     @Test\n     public void testWorstCaseMap() {\n         RecordId blockId = writer.writeBlock(bytes, 0, bytes.length);\n-        Map<String, RecordId> map = Maps.newHashMap();\n+        Map<String, RecordId> map = newHashMap();\n         char[] key = new char[2];\n         for (int i = 0; i <= MapRecord.BUCKETS_PER_LEVEL; i++) {\n             key[0] = (char) ('A' + i);",
                "changes": 23
            }
        ],
        "unit_tests": [
            "RecordTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/segment/RecordTest.java",
        "buggy_files": [
            "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/SegmentWriter.java",
            "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/Record.java"
        ],
        "fixed": true
    }
]