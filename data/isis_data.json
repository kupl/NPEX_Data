[
    {
        "parent": "https://github.com/apache/isis/commit/c5ca6c42f271457055344062032ef25a987d0d60",
        "bug_id": "isis_1",
        "file": [
            {
                "additions": 0,
                "sha": "cd760e05ba2f8e869fefa655acab265f5379eff2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/DependentArgUtils.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/facets/DependentArgUtils.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/DependentArgUtils.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -26,7 +26,6 @@\n \n import javax.annotation.Nullable;\n \n-import org.apache.isis.commons.collections.Can;\n import org.apache.isis.commons.internal.base._NullSafe;\n import org.apache.isis.commons.internal.collections._Arrays;\n import org.apache.isis.metamodel.facets.FacetFactory.ProcessMethodContext;",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/DependentArgUtils.java"
            },
            {
                "additions": 2,
                "sha": "6893538d47a202405d5560c69d11fb4302ccb733",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/actions/action/invocation/ActionInvocationFacetForDomainEventAbstract.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/facets/actions/action/invocation/ActionInvocationFacetForDomainEventAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/actions/action/invocation/ActionInvocationFacetForDomainEventAbstract.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -313,7 +313,7 @@ private void setCommandResultIfEntity(final Command command, final ManagedObject\n             // don't trample over any existing result, eg subsequent mixins.\n             return;\n         }\n-        if (resultAdapter == null) {\n+        if(ManagedObject.isNull(resultAdapter)) {\n             return;\n         }\n \n@@ -350,7 +350,7 @@ private ManagedObject filteredIfRequired(\n             final ManagedObject resultAdapter,\n             final InteractionInitiatedBy interactionInitiatedBy) {\n \n-        if (resultAdapter == null) {\n+        if(ManagedObject.isNull(resultAdapter)) { \n             return null;\n         }\n ",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/actions/action/invocation/ActionInvocationFacetForDomainEventAbstract.java"
            },
            {
                "additions": 0,
                "sha": "803112537453a718fd6dd2e801da1d9f35f3ae33",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/disable/method/ActionParameterDisabledFacetViaMethodFactory.java",
                "deletions": 46,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/disable/method/ActionParameterDisabledFacetViaMethodFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/disable/method/ActionParameterDisabledFacetViaMethodFactory.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -90,51 +90,5 @@ public void process(final ProcessMethodContext processMethodContext) {\n         });\n         \n     }\n-    \n-\n-    @Override\n-    public void processParams(final ProcessParameterContext processParameterContext) {\n-\n-        //FIXME remove\n-        \n-//        final Class<?> cls = processParameterContext.getCls();\n-//        final Method actionMethod = processParameterContext.getMethod();\n-//        final int paramNum = processParameterContext.getParamNum();\n-//        final IdentifiedHolder facetHolder = processParameterContext.getFacetHolder();\n-//\n-//        final String capitalizedName = StringExtensions.asCapitalizedName(actionMethod.getName());\n-//        final List<Class<?>> paramTypes = ListExtensions.mutableCopy(actionMethod.getParameterTypes());\n-//\n-//        final String hideName = MethodLiteralConstants.DISABLE_PREFIX + paramNum + capitalizedName;\n-//\n-//        final int numParamTypes = paramTypes.size();\n-//\n-//        val translationService = getMetaModelContext().getTranslationService();\n-//\n-//        for(int i=0; i< numParamTypes+1; i++) {\n-//            val disableMethod = MethodFinderUtils.findMethod_returningText(\n-//                    cls,\n-//                    hideName,\n-//                    NO_ARG);\n-//\n-//            if (disableMethod != null) {\n-//                processParameterContext.removeMethod(disableMethod);\n-//\n-//                // sadness: same as in TranslationFactory\n-//                final String translationContext = facetHolder.getIdentifier().toFullIdentityString();\n-//\n-//                final Facet facet = new ActionParameterDisabledFacetViaMethod(disableMethod,\n-//                        translationService, translationContext, facetHolder);\n-//                super.addFacet(facet);\n-//                return;\n-//            }\n-//\n-//            // remove last, and search again\n-//            if(!paramTypes.isEmpty()) {\n-//                paramTypes.remove(paramTypes.size()-1);\n-//            }\n-//        }\n-\n-    }\n \n }",
                "changes": 46,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/disable/method/ActionParameterDisabledFacetViaMethodFactory.java"
            },
            {
                "additions": 0,
                "sha": "4ff9a0f0dab9d6d4c606c0e4c1237aa5858cb20c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/hide/method/ActionParameterHiddenFacetViaMethodFactory.java",
                "deletions": 40,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/hide/method/ActionParameterHiddenFacetViaMethodFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/hide/method/ActionParameterHiddenFacetViaMethodFactory.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -86,46 +86,6 @@ public void process(final ProcessMethodContext processMethodContext) {\n         });\n         \n     }\n-    \n \n-    @Override\n-    public void processParams(final ProcessParameterContext processParameterContext) {\n-\n-      //FIXME remove\n-        \n-//        final Class<?> cls = processParameterContext.getCls();\n-//        final Method actionMethod = processParameterContext.getMethod();\n-//        final int paramNum = processParameterContext.getParamNum();\n-//        final IdentifiedHolder facetHolder = processParameterContext.getFacetHolder();\n-//\n-//        final String capitalizedName = StringExtensions.asCapitalizedName(actionMethod.getName());\n-//        final List<Class<?>> paramTypes = ListExtensions.mutableCopy(actionMethod.getParameterTypes());\n-//\n-//        final String hideName = MethodLiteralConstants.HIDE_PREFIX + paramNum + capitalizedName;\n-//\n-//        final int numParamTypes = paramTypes.size();\n-//\n-//        for(int i=0; i< numParamTypes+1; i++) {\n-//            val hideMethod = MethodFinderUtils.findMethod(\n-//                    cls,\n-//                    hideName,\n-//                    boolean.class,\n-//                    NO_ARG);\n-//\n-//            if (hideMethod != null) {\n-//                processParameterContext.removeMethod(hideMethod);\n-//\n-//                final Facet facet = new ActionParameterHiddenFacetViaMethod(hideMethod, facetHolder);\n-//                super.addFacet(facet);\n-//                return;\n-//            }\n-//\n-//            // remove last, and search again\n-//            if(!paramTypes.isEmpty()) {\n-//                paramTypes.remove(paramTypes.size()-1);\n-//            }\n-//        }\n-//\n-    }\n \n }",
                "changes": 40,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/param/hide/method/ActionParameterHiddenFacetViaMethodFactory.java"
            },
            {
                "additions": 1,
                "sha": "24ec0869422144bf7bcdfa2c7c24c4f23b0a16e1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/runtime-services/src/main/java/org/apache/isis/runtime/services/wrapper/AsyncWrapDefault.java",
                "deletions": 2,
                "filename": "core/runtime-services/src/main/java/org/apache/isis/runtime/services/wrapper/AsyncWrapDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime-services/src/main/java/org/apache/isis/runtime/services/wrapper/AsyncWrapDefault.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -207,8 +207,7 @@\n                                 \"[cannot resolve method name - not implemented]\",//wrappedMethod.getName(),\n                                 domainObject.getClass());\n                 \n-                \n-\n+                e.printStackTrace();\n                 \n                 exceptionHandler.accept(_Exceptions.unrecoverable(msg, e));\n ",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/core/runtime-services/src/main/java/org/apache/isis/runtime/services/wrapper/AsyncWrapDefault.java"
            },
            {
                "additions": 0,
                "sha": "7af9f327379e195461a27457107f1520528ea688",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionDemo.java",
                "deletions": 9,
                "filename": "examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionDemo.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionDemo.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -18,29 +18,20 @@\n  */\n package demoapp.dom.actions.depargs;\n \n-import java.util.Collection;\n import java.util.LinkedHashSet;\n import java.util.Set;\n-import java.util.stream.Collectors;\n \n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-import org.apache.isis.applib.annotation.Action;\n-import org.apache.isis.applib.annotation.ActionLayout;\n import org.apache.isis.applib.annotation.DomainObject;\n import org.apache.isis.applib.annotation.Editing;\n import org.apache.isis.applib.annotation.LabelPosition;\n import org.apache.isis.applib.annotation.Nature;\n-import org.apache.isis.applib.annotation.Optionality;\n-import org.apache.isis.applib.annotation.Parameter;\n-import org.apache.isis.applib.annotation.PromptStyle;\n import org.apache.isis.applib.annotation.PropertyLayout;\n-import org.apache.isis.applib.annotation.SemanticsOf;\n import org.apache.isis.applib.value.Markup;\n-import org.apache.isis.incubator.model.applib.annotation.Model;\n \n import demoapp.utils.DemoStub;\n import lombok.Getter;",
                "changes": 9,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionDemo.java"
            },
            {
                "additions": 1,
                "sha": "cb1426fcb8832052af2bf3b834d263d3602665ee",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionMenu.java",
                "deletions": 1,
                "filename": "examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionMenu.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionMenu.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -37,7 +37,7 @@\n \n     @Action\n     @ActionLayout(cssClassFa=\"fa-bolt\")\n-    public DependentArgsActionDemo pendingArgsActions(){\n+    public DependentArgsActionDemo dependentArgsActions(){\n         val demo = factoryService.instantiate(DependentArgsActionDemo.class);\n         demo.initDefaults();\n         return demo;",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/actions/depargs/DependentArgsActionMenu.java"
            },
            {
                "additions": 2,
                "sha": "80415803b6253c43433e7c57a37f221221ae0ebe",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/events/EventLogRepository.java",
                "deletions": 4,
                "filename": "examples/demo/src/main/java/demoapp/dom/events/EventLogRepository.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/examples/demo/src/main/java/demoapp/dom/events/EventLogRepository.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -23,11 +23,9 @@\n import javax.inject.Inject;\n import javax.inject.Named;\n \n-import org.apache.isis.applib.annotation.DomainService;\n-import org.apache.isis.applib.annotation.NatureOfService;\n-import org.apache.isis.applib.services.repository.RepositoryService;\n import org.springframework.stereotype.Repository;\n-import org.springframework.stereotype.Service;\n+\n+import org.apache.isis.applib.services.repository.RepositoryService;\n \n @Repository\n @Named(\"demoapp.eventLogRepository\")",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/events/EventLogRepository.java"
            },
            {
                "additions": 1,
                "sha": "b76fad10f593a72874e890c822a3211e3a3e02bc",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/events/EventSubscriber.java",
                "deletions": 1,
                "filename": "examples/demo/src/main/java/demoapp/dom/events/EventSubscriber.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/examples/demo/src/main/java/demoapp/dom/events/EventSubscriber.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -63,7 +63,7 @@ public void on(EventTestProgrammaticEvent ev) {\n             return;\n         }\n \n-        log.info(emphasize(\"DomainEvent: \"+ev.getClass().getName()));\n+        log.info(emphasize(\"DomainEvent: \" + ev.getClass().getName()));\n         \n         // store in event log, by calling the storeEvent(...) Action\n         wrapper.async(this)",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/examples/demo/src/main/java/demoapp/dom/events/EventSubscriber.java"
            },
            {
                "additions": 12,
                "sha": "a0bd6e06128ea05572f6c28db4258ef7c4d219f2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/incubator/core/model/src/main/java/org/apache/isis/incubator/model/metamodel/facets/SupportingMethodValidatorRefinerFactory.java",
                "deletions": 12,
                "filename": "incubator/core/model/src/main/java/org/apache/isis/incubator/model/metamodel/facets/SupportingMethodValidatorRefinerFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/incubator/core/model/src/main/java/org/apache/isis/incubator/model/metamodel/facets/SupportingMethodValidatorRefinerFactory.java?ref=ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253",
                "patch": "@@ -64,18 +64,18 @@ public void refineProgrammingModel(ProgrammingModel programmingModel) {\n             val type = spec.getCorrespondingClass();\n \n //XXX for debugging ...            \n-            if(spec.getSpecId().asString().contains(\"ProperMemberSupport\")) {\n-                \n-                val sb = new StringBuffer();\n-                \n-                sb.append(\"\\n### debug \" + spec.getSpecId().asString()).append(\"\\n\");\n-                \n-                spec.streamFacetHolders()\n-                .flatMap(FacetHolder::streamFacets)\n-                .forEach(facet->sb.append(\"facet: \" + facet).append(\"\\n\"));\n-                \n-                System.out.println(sb);\n-            }\n+//            if(spec.getSpecId().asString().contains(\"ProperMemberSupport\")) {\n+//                \n+//                val sb = new StringBuffer();\n+//                \n+//                sb.append(\"\\n### debug \" + spec.getSpecId().asString()).append(\"\\n\");\n+//                \n+//                spec.streamFacetHolders()\n+//                .flatMap(FacetHolder::streamFacets)\n+//                .forEach(facet->sb.append(\"facet: \" + facet).append(\"\\n\"));\n+//                \n+//                System.out.println(sb);\n+//            }\n \n             // methods known to the meta-model\n             val recognizedMethods = spec.streamFacetHolders()",
                "changes": 24,
                "blob_url": "https://github.com/apache/isis/blob/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253/incubator/core/model/src/main/java/org/apache/isis/incubator/model/metamodel/facets/SupportingMethodValidatorRefinerFactory.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2226: fixes NPE on action results",
        "commit": "https://github.com/apache/isis/commit/ce0e28035c2f4d2b4aaa349ce1494dfd5ab1a253"
    },
    {
        "parent": "https://github.com/apache/isis/commit/b9d6072ca38bb610d6d9bb36fd9ea716858bad43",
        "bug_id": "isis_2",
        "file": [
            {
                "additions": 6,
                "sha": "f8d295d2414ced93d65f6a2adff1d86e4c181148",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/01198e145c402a5a1aca25a16c5aa40d78975d9e/core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoder.java",
                "deletions": 6,
                "filename": "core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoder.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoder.java?ref=01198e145c402a5a1aca25a16c5aa40d78975d9e",
                "patch": "@@ -125,17 +125,17 @@ public ManagedObject asAdapter(\n     }\n \n     public Object appendValueAndFormat(\n-            ManagedObject objectAdapter, \n-            JsonRepresentation repr, \n-            String format, \n+            ManagedObject objectAdapter,\n+            ObjectSpecification objectSpecification,\n+            JsonRepresentation repr,\n+            String format,\n             boolean suppressExtensions) {\n \n-        val spec = objectAdapter.getSpecification();\n-        val jsonValueConverter = converterBySpecId.get(spec.getSpecId());\n+        val jsonValueConverter = converterBySpecId.get(objectSpecification.getSpecId());\n         if(jsonValueConverter != null) {\n             return jsonValueConverter.appendValueAndFormat(objectAdapter, format, repr, suppressExtensions);\n         } else {\n-            val encodableFacet = spec.getFacet(EncodableFacet.class);\n+            val encodableFacet = objectSpecification.getFacet(EncodableFacet.class);\n             if (encodableFacet == null) {\n                 throw new IllegalArgumentException(\"objectSpec expected to have EncodableFacet\");\n             }",
                "changes": 12,
                "blob_url": "https://github.com/apache/isis/blob/01198e145c402a5a1aca25a16c5aa40d78975d9e/core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoder.java"
            },
            {
                "additions": 10,
                "sha": "eefbb76e3fee4cee01110eac3704fcede8b02974",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/01198e145c402a5a1aca25a16c5aa40d78975d9e/core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/ObjectPropertyReprRenderer.java",
                "deletions": 10,
                "filename": "core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/ObjectPropertyReprRenderer.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/ObjectPropertyReprRenderer.java?ref=01198e145c402a5a1aca25a16c5aa40d78975d9e",
                "patch": "@@ -85,10 +85,10 @@ public JsonRepresentation render() {\n     // ///////////////////////////////////////////////////\n \n     private Object addValue(final LinkFollowSpecs linkFollower) {\n-        val valueAdapter = objectMember.get(objectAdapter, getInteractionInitiatedBy());\n+        val valueAdapterIfAny = objectMember.get(objectAdapter, getInteractionInitiatedBy());\n \n         // use the runtime type if we have a value, else the compile time type of the member otherwise\n-        val spec = valueAdapter != null? valueAdapter.getSpecification(): objectMember.getSpecification();\n+        val spec = valueAdapterIfAny != null? valueAdapterIfAny.getSpecification(): objectMember.getSpecification();\n \n         val valueFacet = spec.getFacet(ValueFacet.class);\n         if (valueFacet != null) {\n@@ -99,7 +99,7 @@ private Object addValue(final LinkFollowSpecs linkFollower) {\n                 final BigDecimalValueFacet bigDecimalValueFacet =\n                         getFacet(BigDecimalValueFacet.class,\n                                 objectMember,\n-                                valueAdapter != null? valueAdapter.getSpecification(): null);\n+                                valueAdapterIfAny != null? valueAdapterIfAny.getSpecification(): null);\n                 if(bigDecimalValueFacet != null) {\n                     final Integer precision = bigDecimalValueFacet.getPrecision();\n                     final Integer scale = bigDecimalValueFacet.getScale();\n@@ -110,31 +110,31 @@ private Object addValue(final LinkFollowSpecs linkFollower) {\n                 final BigIntegerValueFacet bigIntegerValueFacet =\n                         getFacet(BigIntegerValueFacet.class,\n                                 objectMember,\n-                                valueAdapter != null? valueAdapter.getSpecification(): null);\n+                                valueAdapterIfAny != null? valueAdapterIfAny.getSpecification(): null);\n                 if(bigIntegerValueFacet != null) {\n                     format = String.format(\"big-integer\");\n                 }\n             }\n-            return jsonValueEncoder.appendValueAndFormat(valueAdapter, representation, format, resourceContext.suppressMemberExtensions());\n+            return jsonValueEncoder.appendValueAndFormat(valueAdapterIfAny, spec, representation, format, resourceContext.suppressMemberExtensions());\n         }\n \n         boolean eagerlyRender =\n-                (renderEagerly() && resourceContext.canEagerlyRender(valueAdapter))\n+                (renderEagerly() && resourceContext.canEagerlyRender(valueAdapterIfAny))\n                 || (linkFollower != null && !linkFollower.isTerminated());\n \n-        if(valueAdapter == null) {\n+        if(valueAdapterIfAny == null) {\n             final NullNode value = NullNode.getInstance();\n             representation.mapPut(\"value\", value);\n             return value;\n         } else {\n             final TitleFacet titleFacet = spec.getFacet(TitleFacet.class);\n-            final String title = titleFacet.title(valueAdapter);\n+            final String title = titleFacet.title(valueAdapterIfAny);\n \n-            final LinkBuilder valueLinkBuilder = DomainObjectReprRenderer.newLinkToBuilder(resourceContext, Rel.VALUE, valueAdapter).withTitle(title);\n+            final LinkBuilder valueLinkBuilder = DomainObjectReprRenderer.newLinkToBuilder(resourceContext, Rel.VALUE, valueAdapterIfAny).withTitle(title);\n             if(eagerlyRender) {\n                 final DomainObjectReprRenderer renderer = \n                         new DomainObjectReprRenderer(resourceContext, linkFollower, JsonRepresentation.newMap());\n-                renderer.with(valueAdapter);\n+                renderer.with(valueAdapterIfAny);\n                 if(mode.isEventSerialization()) {\n                     renderer.asEventSerialization();\n                 }",
                "changes": 20,
                "blob_url": "https://github.com/apache/isis/blob/01198e145c402a5a1aca25a16c5aa40d78975d9e/core/viewers/restfulobjects/rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/ObjectPropertyReprRenderer.java"
            },
            {
                "additions": 25,
                "sha": "9e1ed7e118db652892f01b0c254695f718582b88",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/01198e145c402a5a1aca25a16c5aa40d78975d9e/core/viewers/restfulobjects/rendering/src/test/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoderTest_appendValueAndFormat.java",
                "deletions": 25,
                "filename": "core/viewers/restfulobjects/rendering/src/test/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoderTest_appendValueAndFormat.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewers/restfulobjects/rendering/src/test/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoderTest_appendValueAndFormat.java?ref=01198e145c402a5a1aca25a16c5aa40d78975d9e",
                "patch": "@@ -73,7 +73,7 @@ public void whenString() {\n         allowingObjectSpecToReturnSpecIdFor(String.class);\n         allowingObjectAdapterToReturn(\"aString\");\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getString(\"value\"), is(\"aString\"));\n \n@@ -86,7 +86,7 @@ public void whenBooleanWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Boolean.class);\n         allowingObjectAdapterToReturn(Boolean.TRUE);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isBoolean(\"value\"), is(true));\n         assertThat(representation.getBoolean(\"value\"), is(Boolean.TRUE));\n \n@@ -98,7 +98,7 @@ public void whenBooleanPrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(boolean.class);\n         allowingObjectAdapterToReturn(true);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isBoolean(\"value\"), is(true));\n         assertThat(representation.getBoolean(\"value\"), is(true));\n \n@@ -110,7 +110,7 @@ public void whenByteWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Byte.class);\n         allowingObjectAdapterToReturn(Byte.valueOf((byte)123));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getByte(\"value\"), is(Byte.valueOf((byte)123)));\n \n@@ -123,7 +123,7 @@ public void whenBytePrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(byte.class);\n         allowingObjectAdapterToReturn((byte)123);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getByte(\"value\"), is((byte)123));\n \n@@ -136,7 +136,7 @@ public void whenShortWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Short.class);\n         allowingObjectAdapterToReturn(Short.valueOf((short)12345));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getShort(\"value\"), is(Short.valueOf((short)12345)));\n \n@@ -149,7 +149,7 @@ public void whenShortPrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(short.class);\n         allowingObjectAdapterToReturn((short)12345);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getShort(\"value\"), is((short)12345));\n \n@@ -162,7 +162,7 @@ public void whenIntWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Integer.class);\n         allowingObjectAdapterToReturn(Integer.valueOf(12345678));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getInt(\"value\"), is(Integer.valueOf(12345678)));\n \n@@ -175,7 +175,7 @@ public void whenIntPrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(int.class);\n         allowingObjectAdapterToReturn(12345678);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getInt(\"value\"), is(12345678));\n \n@@ -188,7 +188,7 @@ public void whenLongWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Long.class);\n         allowingObjectAdapterToReturn(Long.valueOf(12345678901234L));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getLong(\"value\"), is(Long.valueOf(12345678901234L)));\n \n@@ -201,7 +201,7 @@ public void whenLongPrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(long.class);\n         allowingObjectAdapterToReturn(12345678901234L);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isIntegralNumber(\"value\"), is(true));\n         assertThat(representation.getLong(\"value\"), is(12345678901234L));\n \n@@ -214,7 +214,7 @@ public void whenFloatWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Float.class);\n         allowingObjectAdapterToReturn(Float.valueOf((float)123.45));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isDecimal(\"value\"), is(true));\n         assertThat(representation.getFloat(\"value\"), is(Float.valueOf((float)123.45)));\n \n@@ -227,7 +227,7 @@ public void whenFloatPrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(Float.class);\n         allowingObjectAdapterToReturn((float)123.45);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isDecimal(\"value\"), is(true));\n         assertThat(representation.getFloat(\"value\"), is((float)123.45));\n \n@@ -240,7 +240,7 @@ public void whenDoubleWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Double.class);\n         allowingObjectAdapterToReturn(Double.valueOf(12345.6789));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isDecimal(\"value\"), is(true));\n         assertThat(representation.getDouble(\"value\"), is(Double.valueOf(12345.6789)));\n \n@@ -253,7 +253,7 @@ public void whenDoublePrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(double.class);\n         allowingObjectAdapterToReturn(12345.6789);\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isDecimal(\"value\"), is(true));\n         assertThat(representation.getDouble(\"value\"), is(12345.6789));\n \n@@ -266,7 +266,7 @@ public void whenCharWrapper() {\n         allowingObjectSpecToReturnSpecIdFor(Character.class);\n         allowingObjectAdapterToReturn(Character.valueOf('a'));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getChar(\"value\"), is(Character.valueOf('a')));\n \n@@ -279,7 +279,7 @@ public void whenCharPrimitive() {\n         allowingObjectSpecToReturnSpecIdFor(char.class);\n         allowingObjectAdapterToReturn('a');\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getChar(\"value\"), is('a'));\n \n@@ -292,7 +292,7 @@ public void whenJavaUtilDate() {\n         allowingObjectSpecToReturnSpecIdFor(java.util.Date.class);\n         allowingObjectAdapterToReturn(asDateTime(\"2014-04-25T12:34:45Z\"));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getString(\"value\"), is(\"2014-04-25T12:34:45Z\"));\n \n@@ -305,7 +305,7 @@ public void whenJavaSqlDate() {\n         allowingObjectSpecToReturnSpecIdFor(java.sql.Date.class);\n         allowingObjectAdapterToReturn(asSqlDate(\"2014-04-25\"));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getString(\"value\"), is(\"2014-04-25\"));\n \n@@ -318,7 +318,7 @@ public void whenJodaDateTime() {\n         allowingObjectSpecToReturnSpecIdFor(org.joda.time.DateTime.class);\n         allowingObjectAdapterToReturn(new org.joda.time.DateTime(asDateTime(\"2014-04-25T12:34:45Z\")));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getString(\"value\"), is(\"2014-04-25T12:34:45Z\"));\n \n@@ -331,7 +331,7 @@ public void whenJodaLocalDateTime() {\n         allowingObjectSpecToReturnSpecIdFor(org.joda.time.LocalDateTime.class);\n         allowingObjectAdapterToReturn(new org.joda.time.LocalDateTime(asDateTime(\"2014-04-25T12:34:45Z\")));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getString(\"value\"), is(\"2014-04-25T12:34:45Z\"));\n \n@@ -344,7 +344,7 @@ public void whenJodaLocalDate() {\n         allowingObjectSpecToReturnSpecIdFor(org.joda.time.LocalDate.class);\n         allowingObjectAdapterToReturn(new org.joda.time.LocalDate(2014,4,25));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.getString(\"value\"), is(\"2014-04-25\"));\n \n@@ -358,7 +358,7 @@ public void whenJavaSqlTimestamp() {\n         final long time = asDateTime(\"2014-04-25T12:34:45Z\").getTime();\n         allowingObjectAdapterToReturn(new Timestamp(time));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, null, false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, null, false);\n         assertThat(representation.isLong(\"value\"), is(true));\n         assertThat(representation.getLong(\"value\"), is(time));\n \n@@ -371,7 +371,7 @@ public void whenBigInteger() {\n         allowingObjectSpecToReturnSpecIdFor(BigInteger.class);\n         allowingObjectAdapterToReturn(new BigInteger(\"12345678901234567890\"));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, \"big-integer(22)\", false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, \"big-integer(22)\", false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.isBigInteger(\"value\"), is(true));\n         assertThat(representation.getBigInteger(\"value\"), is(new BigInteger(\"12345678901234567890\")));\n@@ -385,7 +385,7 @@ public void whenBigDecimal() {\n         allowingObjectSpecToReturnSpecIdFor(BigDecimal.class);\n         allowingObjectAdapterToReturn(new BigDecimal(\"12345678901234567890.1234\"));\n \n-        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, representation, \"big-decimal(27,4)\", false);\n+        jsonValueEncoder.appendValueAndFormat(mockObjectAdapter, mockObjectSpec, representation, \"big-decimal(27,4)\", false);\n         assertThat(representation.isString(\"value\"), is(true));\n         assertThat(representation.isBigDecimal(\"value\"), is(true));\n         assertThat(representation.getBigDecimal(\"value\"), is(new BigDecimal(\"12345678901234567890.1234\")));",
                "changes": 50,
                "blob_url": "https://github.com/apache/isis/blob/01198e145c402a5a1aca25a16c5aa40d78975d9e/core/viewers/restfulobjects/rendering/src/test/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/JsonValueEncoderTest_appendValueAndFormat.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2203 - fixes NPE by passing the ObjectSpec down (rather than attempt to obtain from a possibly null ObjectAdapter)",
        "commit": "https://github.com/apache/isis/commit/01198e145c402a5a1aca25a16c5aa40d78975d9e"
    },
    {
        "parent": "https://github.com/apache/isis/commit/162066f17351b4db79e53986bbf6807ad84217d4",
        "bug_id": "isis_3",
        "file": [
            {
                "additions": 3,
                "sha": "d7446e5f6a926c89775aeb460ab6f83b1de79329",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/object/entity/EntityFacet.java",
                "deletions": 0,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/facets/object/entity/EntityFacet.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/object/entity/EntityFacet.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -22,6 +22,7 @@\n import java.lang.reflect.Method;\n \n import org.apache.isis.metamodel.facetapi.Facet;\n+import org.apache.isis.metamodel.spec.EntityState;\n import org.apache.isis.metamodel.spec.ObjectSpecification;\n \n /**\n@@ -35,6 +36,8 @@\n     Object fetchByIdentifier(ObjectSpecification spec, String identifier);\n     \n     void persist(ObjectSpecification spec, Object pojo);\n+    \n+    EntityState getEntityState(Object pojo);\n \n     /**\n      * Whether given method originates from byte code mangling.",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/facets/object/entity/EntityFacet.java"
            },
            {
                "additions": 50,
                "sha": "ae5d93dd12a4cc9316dcb222b2988c85f4917c2f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/objectmanager/ObjectCreator_builtinHandlers.java",
                "deletions": 44,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/objectmanager/ObjectCreator_builtinHandlers.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/objectmanager/ObjectCreator_builtinHandlers.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -24,7 +24,8 @@\n import org.apache.isis.applib.events.lifecycle.AbstractLifecycleEvent;\n import org.apache.isis.applib.services.command.Command;\n import org.apache.isis.applib.services.eventbus.EventBusService;\n-import org.apache.isis.commons.exceptions.IsisException;\n+import org.apache.isis.commons.internal.base._Casts;\n+import org.apache.isis.commons.internal.exceptions._Exceptions;\n import org.apache.isis.commons.internal.factory.InstanceUtil;\n import org.apache.isis.metamodel.MetaModelContext;\n import org.apache.isis.metamodel.facets.object.callbacks.CallbackFacet;\n@@ -63,9 +64,9 @@ public ManagedObject handle(ObjectCreator.Request objectCreateRequest) {\n             \n             val spec = objectCreateRequest.getObjectSpecification();\n             \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"creating instance of {}\", spec);\n-            }\n+            //if (log.isDebugEnabled()) {\n+                log.info(\"creating instance of {}\", spec);\n+            //}\n             \n             val pojo = instantiateAndInjectServices(spec);\n \n@@ -75,14 +76,40 @@ public ManagedObject handle(ObjectCreator.Request objectCreateRequest) {\n         \n         //  -- HELPER\n         \n-        private ManagedObject initializePropertiesAndDoCallback(final ManagedObject adapter) {\n+        private Object instantiateAndInjectServices(ObjectSpecification spec) {\n+\n+            val type = spec.getCorrespondingClass();\n+            if (type.isArray()) {\n+                return Array.newInstance(type.getComponentType(), 0);\n+            }\n+\n+            if (Modifier.isAbstract(type.getModifiers())) {\n+                throw _Exceptions.unrecoverable(\"Cannot create an instance of an abstract class: \" + type);\n+            }\n+\n+            try {\n+                \n+                val newInstance = type.newInstance();\n+                metaModelContext.getServiceInjector().injectServicesInto(newInstance);\n+                return newInstance;    \n+                \n+            } catch (IllegalAccessException | InstantiationException e) {\n+                throw _Exceptions.unrecoverable(\n+                        \"Failed to create instance of type \" + spec.getFullIdentifier(), e);\n+            }\n+\n+        }\n+        \n+        private ManagedObject initializePropertiesAndDoCallback(ManagedObject adapter) {\n \n             // initialize new object\n             adapter.getSpecification().streamAssociations(Contributed.EXCLUDED)\n             .forEach(field->field.toDefault(adapter));\n \n-            val pojo = adapter.getPojo();\n-            metaModelContext.getServiceInjector().injectServicesInto(pojo);\n+             val pojo = adapter.getPojo();\n+            \n+            //XXX pojo already got everything injected above\n+            //metaModelContext.getServiceInjector().injectServicesInto(pojo);\n \n             CallbackFacet.Util.callCallback(adapter, CreatedCallbackFacet.class);\n \n@@ -113,51 +140,30 @@ private ManagedObject initializePropertiesAndDoCallback(final ManagedObject adap\n             return adapter;\n         }\n         \n-        private Object instantiateAndInjectServices(final ObjectSpecification objectSpec) {\n-\n-            final Class<?> correspondingClass = objectSpec.getCorrespondingClass();\n-            if (correspondingClass.isArray()) {\n-                return Array.newInstance(correspondingClass.getComponentType(), 0);\n-            }\n-\n-            final Class<?> cls = correspondingClass;\n-            if (Modifier.isAbstract(cls.getModifiers())) {\n-                throw new IsisException(\"Cannot create an instance of an abstract class: \" + cls);\n-            }\n-\n-            final Object newInstance;\n-            try {\n-                newInstance = cls.newInstance();\n-            } catch (final IllegalAccessException | InstantiationException e) {\n-                throw new IsisException(\"Failed to create instance of type \" + objectSpec.getFullIdentifier(), e);\n-            }\n-\n-            metaModelContext.getServiceInjector().injectServicesInto(newInstance);\n-            return newInstance;\n-\n-        }\n-        \n-        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         private void postLifecycleEventIfRequired(\n                 ManagedObject adapter,\n                 Class<? extends LifecycleEventFacet> lifecycleEventFacetClass) {\n             \n             val lifecycleEventFacet = adapter.getSpecification().getFacet(lifecycleEventFacetClass);\n-            if(lifecycleEventFacet != null) {\n-                final Class<? extends AbstractLifecycleEvent<?>> eventType = lifecycleEventFacet.getEventType();\n-                val instance = (AbstractLifecycleEvent) InstanceUtil.createInstance(eventType);\n-                val pojo = adapter.getPojo();\n-                postEvent(instance, pojo);\n+            if(lifecycleEventFacet == null) {\n+                return;\n             }\n+            \n+            val eventType = lifecycleEventFacet.getEventType();\n+            val instance = InstanceUtil.createInstance(eventType);\n+            val pojo = adapter.getPojo();\n+            postEvent(_Casts.uncheckedCast(instance), pojo);\n+            \n         }\n \n-        private void postEvent(final AbstractLifecycleEvent<Object> event, final Object pojo) {\n-            val eventBusService = metaModelContext.getServiceRegistry()\n-                    .lookupServiceElseFail(EventBusService.class);\n-            if(eventBusService!=null) {\n-                event.initSource(pojo);\n-                eventBusService.post(event);\n-            }\n+        private <T> void postEvent(AbstractLifecycleEvent<T> event, T pojo) {\n+            \n+            metaModelContext.getServiceRegistry()\n+                .lookupService(EventBusService.class)\n+                .ifPresent(eventBusService->{\n+                    event.initSource(pojo);\n+                    eventBusService.post(event);\n+                });\n         }\n         \n ",
                "changes": 94,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/objectmanager/ObjectCreator_builtinHandlers.java"
            },
            {
                "additions": 1,
                "sha": "6f2c852d8171226eef096da4436e3d7af867753a",
                "status": "renamed",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/spec/EntityState.java",
                "previous_filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/spec/ManagedObjectState.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/spec/EntityState.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/spec/EntityState.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -21,7 +21,7 @@\n /**\n  * @since 2.0\n  */\n-public enum ManagedObjectState {\n+public enum EntityState {\n \n     not_Persistable,\n     persistable_Attached,",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/spec/EntityState.java"
            },
            {
                "additions": 19,
                "sha": "28b8434c51cb60be3dbb29beab71d0ee8c38438a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/spec/ManagedObject.java",
                "deletions": 18,
                "filename": "core/metamodel/src/main/java/org/apache/isis/metamodel/spec/ManagedObject.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/metamodel/spec/ManagedObject.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -22,7 +22,6 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Optional;\n import java.util.function.Function;\n import java.util.function.Predicate;\n import java.util.stream.Collectors;\n@@ -302,31 +301,33 @@ static boolean isNull(ManagedObject adapter) {\n         return adapter.getPojo()==null;\n     }\n     \n-    // -- DEPRECATIONS (in an attempt to decouple the metamodel from ObjectAdapter)\n-    @Deprecated\n-    static Optional<ObjectAdapter> promote(ManagedObject managedObject) {\n-        return Optional.ofNullable(managedObject)\n-        .filter(mo->mo instanceof ObjectAdapter) \n-        .map(ObjectAdapter.class::cast);\n-    }\n-\n-    // -- DEPRECATIONS - SPECIALIZED\n+    // -- DEPRECATIONS (REFACTORING)\n     \n     @Deprecated\n     static boolean _isDestroyed(ManagedObject adapter) {\n-        return ManagedObject.promote(adapter)\n-                .map(ObjectAdapter::isDestroyed)\n-                .orElseGet(()->!ManagedObject._oid(adapter).isPersistent());\n+        \n+        if(adapter==null || adapter.getPojo()==null) {\n+            return false;\n+        }\n+        \n+        val spec = adapter.getSpecification();\n+        if(!spec.isEntity()) {\n+            // services and view models are treated as persistent objects\n+            return false;\n+        }\n+        \n+        val entityFacet = spec.getFacet(EntityFacet.class);\n+        if(entityFacet==null) {\n+            return false;\n+        }\n+        \n+        val entityState = entityFacet.getEntityState(adapter.getPojo());\n+        return entityState == EntityState.persistable_Destroyed;\n     }\n \n     @Deprecated\n     static RootOid _collectionOidIfAny(ManagedObject adapter) {\n         return _rootOidIfAny(adapter);\n-//        val oid = ManagedObject.promote(adapter).getOid();\n-//        if(!(oid instanceof RootOid)) {\n-//            return null;\n-//        }\n-//        return (RootOid) oid;\n     }\n \n     @Deprecated",
                "changes": 37,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/metamodel/src/main/java/org/apache/isis/metamodel/spec/ManagedObject.java"
            },
            {
                "additions": 9,
                "sha": "67c09e0126029c298f46d7aaac86d737bf8c84f2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/plugins/jdo/common/src/main/java/org/apache/isis/jdo/metamodel/facets/object/persistencecapable/JdoPersistenceCapableFacetImpl.java",
                "deletions": 0,
                "filename": "core/plugins/jdo/common/src/main/java/org/apache/isis/jdo/metamodel/facets/object/persistencecapable/JdoPersistenceCapableFacetImpl.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/plugins/jdo/common/src/main/java/org/apache/isis/jdo/metamodel/facets/object/persistencecapable/JdoPersistenceCapableFacetImpl.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -28,6 +28,7 @@\n import org.apache.isis.jdo.metamodel.IsisJdoMetamodelPlugin;\n import org.apache.isis.metamodel.adapter.oid.Oid;\n import org.apache.isis.metamodel.facetapi.FacetHolder;\n+import org.apache.isis.metamodel.spec.EntityState;\n import org.apache.isis.metamodel.spec.ObjectSpecification;\n \n import lombok.val;\n@@ -86,6 +87,12 @@ public void persist(ObjectSpecification spec, Object pojo) {\n         //TODO don't bypass domain logic !? \n         persistenceSession.getJdoPersistenceManager().makePersistent(pojo);\n     }\n+    \n+    @Override\n+    public EntityState getEntityState(Object pojo) {\n+        val persistenceSession = super.getPersistenceSessionJdo();\n+        return persistenceSession.getEntityState(pojo);\n+    }\n \n     // -- HELPER\n     \n@@ -109,4 +116,6 @@ public boolean isProxyEnhancement(Method method) {\n     }\n \n \n+\n+\n }",
                "changes": 9,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/plugins/jdo/common/src/main/java/org/apache/isis/jdo/metamodel/facets/object/persistencecapable/JdoPersistenceCapableFacetImpl.java"
            },
            {
                "additions": 8,
                "sha": "7bbddca1cfbdbf84de1c7085b7cc5f21f28978d9",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/plugins/jdo/datanucleus-5/src/main/java/org/apache/isis/jdo/persistence/PersistenceSession5.java",
                "deletions": 8,
                "filename": "core/plugins/jdo/datanucleus-5/src/main/java/org/apache/isis/jdo/persistence/PersistenceSession5.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/plugins/jdo/datanucleus-5/src/main/java/org/apache/isis/jdo/persistence/PersistenceSession5.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -82,7 +82,7 @@\n import org.apache.isis.metamodel.services.container.query.QueryCardinality;\n import org.apache.isis.metamodel.spec.FreeStandingList;\n import org.apache.isis.metamodel.spec.ManagedObject;\n-import org.apache.isis.metamodel.spec.ManagedObjectState;\n+import org.apache.isis.metamodel.spec.EntityState;\n import org.apache.isis.metamodel.spec.ObjectSpecification;\n import org.apache.isis.runtime.memento.Data;\n import org.apache.isis.runtime.persistence.FixturesInstalledState;\n@@ -550,7 +550,7 @@ public Object fetchPersistentPojo(final RootOid rootOid) {\n     @Override\n     public void refreshRoot(final Object domainObject) {\n \n-        val state = stateOf(domainObject);\n+        val state = getEntityState(domainObject);\n         val isRepresentingPersistent = state.isAttached() || state.isDestroyed();  \n \n         if(!isRepresentingPersistent) {\n@@ -740,7 +740,7 @@ public String identifierFor(final Object pojo) {\n      */\n     @Override\n     public void invokeIsisPersistingCallback(final Persistable pojo) {\n-        if (stateOf(pojo).isDetached()) {\n+        if (getEntityState(pojo).isDetached()) {\n             val managedObject = ManagedObject.of(specificationLoader::loadSpecification, pojo);\n \n             // persisting\n@@ -835,7 +835,7 @@ public void ensureRootObject(final Persistable pojo) {\n     }\n \n     @Override\n-    public ManagedObjectState stateOf(@Nullable Object pojo) {\n+    public EntityState getEntityState(@Nullable Object pojo) {\n \n         // guard against misuse\n         if(pojo instanceof ObjectAdapter) {\n@@ -846,15 +846,15 @@ public ManagedObjectState stateOf(@Nullable Object pojo) {\n             val persistable = (Persistable) pojo;\n             val isDeleted = persistable.dnIsDeleted();\n             if(isDeleted) {\n-                return ManagedObjectState.persistable_Destroyed;\n+                return EntityState.persistable_Destroyed;\n             }\n             val isPersistent = persistable.dnIsPersistent();\n             if(isPersistent) {\n-                return ManagedObjectState.persistable_Attached;\n+                return EntityState.persistable_Attached;\n             }\n-            return ManagedObjectState.persistable_Detached;\n+            return EntityState.persistable_Detached;\n         }\n-        return ManagedObjectState.not_Persistable;\n+        return EntityState.not_Persistable;\n     }\n \n     @Override",
                "changes": 16,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/plugins/jdo/datanucleus-5/src/main/java/org/apache/isis/jdo/persistence/PersistenceSession5.java"
            },
            {
                "additions": 4,
                "sha": "074e70011c9e24db06a5c63ad530284f1d87aaf2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/runtime/src/main/java/org/apache/isis/runtime/memento/ObjectAdapterMementoDefault.java",
                "deletions": 0,
                "filename": "core/runtime/src/main/java/org/apache/isis/runtime/memento/ObjectAdapterMementoDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/runtime/memento/ObjectAdapterMementoDefault.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -560,6 +560,10 @@ public ManagedObject getObjectAdapter(\n             SpecificationLoader specificationLoader) {\n         \n         val spec = specificationLoader.loadSpecification(objectSpecId);\n+        if(spec==null) {\n+            // eg. ill-formed request\n+            return null;\n+        }\n         \n         // intercept when trivial\n         if(spec.getBeanSort().isManagedBean()) {",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/runtime/src/main/java/org/apache/isis/runtime/memento/ObjectAdapterMementoDefault.java"
            },
            {
                "additions": 3,
                "sha": "80e6f6c583c474d0c2a61299760fabcea547c900",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/runtime/src/main/java/org/apache/isis/runtime/persistence/adapter/PojoAdapter.java",
                "deletions": 3,
                "filename": "core/runtime/src/main/java/org/apache/isis/runtime/persistence/adapter/PojoAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/runtime/persistence/adapter/PojoAdapter.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -148,7 +148,7 @@ public boolean isTransient() {\n             return false;\n         }\n \n-        val state = persistenceSession.stateOf(pojo);\n+        val state = persistenceSession.getEntityState(pojo);\n         return state.isDetached();\n     }\n \n@@ -162,7 +162,7 @@ public boolean isRepresentingPersistent() {\n         if(persistenceSession==null) {\n             return false;\n         }\n-        val state = persistenceSession.stateOf(pojo);\n+        val state = persistenceSession.getEntityState(pojo);\n         val isRepresentingPersistent = state.isAttached() || state.isDestroyed();\n         return isRepresentingPersistent;\n     }\n@@ -177,7 +177,7 @@ public boolean isDestroyed() {\n         if(persistenceSession==null) {\n             return false;\n         }\n-        val state = persistenceSession.stateOf(pojo);\n+        val state = persistenceSession.getEntityState(pojo);\n         return state.isDestroyed();\n     }\n ",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/runtime/src/main/java/org/apache/isis/runtime/persistence/adapter/PojoAdapter.java"
            },
            {
                "additions": 2,
                "sha": "cb329d1ed0ad0ad15e292d65c1cf8e27d25227fa",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/runtime/src/main/java/org/apache/isis/runtime/system/persistence/PersistenceSession.java",
                "deletions": 2,
                "filename": "core/runtime/src/main/java/org/apache/isis/runtime/system/persistence/PersistenceSession.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/runtime/system/persistence/PersistenceSession.java?ref=05a72212c6f2985ff16ed281d2f55f13a8c7e391",
                "patch": "@@ -32,7 +32,7 @@\n import org.apache.isis.metamodel.adapter.ObjectAdapterProvider;\n import org.apache.isis.metamodel.adapter.oid.Oid;\n import org.apache.isis.metamodel.adapter.oid.RootOid;\n-import org.apache.isis.metamodel.spec.ManagedObjectState;\n+import org.apache.isis.metamodel.spec.EntityState;\n import org.apache.isis.metamodel.spec.ObjectSpecification;\n import org.apache.isis.runtime.memento.Data;\n import org.apache.isis.runtime.persistence.FixturesInstalledState;\n@@ -87,7 +87,7 @@ default void refreshRootInTransaction(final Object domainObject) {\n     /**\n      * @since 2.0\n      */\n-    ManagedObjectState stateOf(Object pojo);\n+    EntityState getEntityState(Object pojo);\n \n     /** whether pojo is recognized by the persistence layer, that is, it has an ObjectId\n      * @since 2.0*/",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/05a72212c6f2985ff16ed281d2f55f13a8c7e391/core/runtime/src/main/java/org/apache/isis/runtime/system/persistence/PersistenceSession.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2177: some fixes\n\nre-implement code for proper object deleted detection\nprevent NPE on ill-formed request",
        "commit": "https://github.com/apache/isis/commit/05a72212c6f2985ff16ed281d2f55f13a8c7e391"
    },
    {
        "parent": "https://github.com/apache/isis/commit/6610430ac2816b8e19b97e96041a5087b0bd3c19",
        "bug_id": "isis_4",
        "file": [
            {
                "additions": 0,
                "sha": "0530bce32125b2ede905edef63d5468e9ddff688",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/dc42c71b0ab018ecfbb0477e87fc54c3d955cb37/core/applib/pom.xml",
                "deletions": 21,
                "filename": "core/applib/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/pom.xml?ref=dc42c71b0ab018ecfbb0477e87fc54c3d955cb37",
                "patch": "@@ -68,27 +68,6 @@\n         <dependency>\n             <groupId>org.apache.isis.core</groupId>\n             <artifactId>isis-schema</artifactId>\n-            <!--\n-            these are transitively included only if built on jdk11; can't think of another way to remove them\n-            -->\n-            <exclusions>\n-                <exclusion>\n-                    <groupId>com.sun.xml.ws</groupId>\n-                    <artifactId>jaxws-ri</artifactId>\n-                </exclusion>\n-                <exclusion>\n-                    <groupId>javax.xml.bind</groupId>\n-                    <artifactId>jaxb-api</artifactId>\n-                </exclusion>\n-                <exclusion>\n-                    <groupId>com.sun.xml.bind</groupId>\n-                    <artifactId>jaxb-core</artifactId>\n-                </exclusion>\n-                <exclusion>\n-                    <groupId>com.sun.xml.bind</groupId>\n-                    <artifactId>jaxb-impl</artifactId>\n-                </exclusion>\n-            </exclusions>\n         </dependency>\n \t\t\n         <!-- HSQL-DB -->",
                "changes": 21,
                "blob_url": "https://github.com/apache/isis/blob/dc42c71b0ab018ecfbb0477e87fc54c3d955cb37/core/applib/pom.xml"
            },
            {
                "additions": 0,
                "sha": "3ad37eea409dcf6052383e7c3a42b69ad3fd97e4",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/dc42c71b0ab018ecfbb0477e87fc54c3d955cb37/core/runtime/pom.xml",
                "deletions": 21,
                "filename": "core/runtime/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/pom.xml?ref=dc42c71b0ab018ecfbb0477e87fc54c3d955cb37",
                "patch": "@@ -91,27 +91,6 @@\n         <dependency>\n             <groupId>org.apache.isis.core</groupId>\n             <artifactId>isis-schema</artifactId>\n-            <!--\n-            these are transitively included only if built on jdk11; can't think of another way to remove them\n-            -->\n-            <exclusions>\n-                <exclusion>\n-                    <groupId>com.sun.xml.ws</groupId>\n-                    <artifactId>jaxws-ri</artifactId>\n-                </exclusion>\n-                <exclusion>\n-                    <groupId>javax.xml.bind</groupId>\n-                    <artifactId>jaxb-api</artifactId>\n-                </exclusion>\n-                <exclusion>\n-                    <groupId>com.sun.xml.bind</groupId>\n-                    <artifactId>jaxb-core</artifactId>\n-                </exclusion>\n-                <exclusion>\n-                    <groupId>com.sun.xml.bind</groupId>\n-                    <artifactId>jaxb-impl</artifactId>\n-                </exclusion>\n-            </exclusions>\n         </dependency>\n \n ",
                "changes": 21,
                "blob_url": "https://github.com/apache/isis/blob/dc42c71b0ab018ecfbb0477e87fc54c3d955cb37/core/runtime/pom.xml"
            },
            {
                "additions": 26,
                "sha": "ebce9906fcc445562b7bdadba4675aca71971463",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/dc42c71b0ab018ecfbb0477e87fc54c3d955cb37/mavendeps/webapp/pom.xml",
                "deletions": 0,
                "filename": "mavendeps/webapp/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/mavendeps/webapp/pom.xml?ref=dc42c71b0ab018ecfbb0477e87fc54c3d955cb37",
                "patch": "@@ -74,6 +74,32 @@\n \t\t\t\t\t<artifactId>isis-applib</artifactId>\n \t\t\t\t</dependency>\n \n+\t\t\t\t<dependency>\n+\t\t\t\t\t<groupId>org.apache.isis.core</groupId>\n+\t\t\t\t\t<artifactId>isis-schema</artifactId>\n+\t\t\t\t\t<!--\n+\t\t\t\t\tthese are transitively included only if built on jdk11; can't think of another way to remove them\n+\t\t\t\t\t-->\n+\t\t\t\t\t<exclusions>\n+\t\t\t\t\t\t<exclusion>\n+\t\t\t\t\t\t\t<groupId>com.sun.xml.ws</groupId>\n+\t\t\t\t\t\t\t<artifactId>jaxws-ri</artifactId>\n+\t\t\t\t\t\t</exclusion>\n+\t\t\t\t\t\t<exclusion>\n+\t\t\t\t\t\t\t<groupId>javax.xml.bind</groupId>\n+\t\t\t\t\t\t\t<artifactId>jaxb-api</artifactId>\n+\t\t\t\t\t\t</exclusion>\n+\t\t\t\t\t\t<exclusion>\n+\t\t\t\t\t\t\t<groupId>com.sun.xml.bind</groupId>\n+\t\t\t\t\t\t\t<artifactId>jaxb-core</artifactId>\n+\t\t\t\t\t\t</exclusion>\n+\t\t\t\t\t\t<exclusion>\n+\t\t\t\t\t\t\t<groupId>com.sun.xml.bind</groupId>\n+\t\t\t\t\t\t\t<artifactId>jaxb-impl</artifactId>\n+\t\t\t\t\t\t</exclusion>\n+\t\t\t\t\t</exclusions>\n+\t\t\t\t</dependency>\n+\n \t\t\t\t<dependency>\n \t\t\t\t\t<groupId>org.apache.isis.core</groupId>\n \t\t\t\t\t<artifactId>isis-viewer-wicket-impl</artifactId>",
                "changes": 26,
                "blob_url": "https://github.com/apache/isis/blob/dc42c71b0ab018ecfbb0477e87fc54c3d955cb37/mavendeps/webapp/pom.xml"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2084: reverts exclusions in applib and runtime because of NPE in maven-compiler-plugin:3.8.1\n\nInstead, best can do is exclude in mavendeps-webapp",
        "commit": "https://github.com/apache/isis/commit/dc42c71b0ab018ecfbb0477e87fc54c3d955cb37"
    },
    {
        "parent": "https://github.com/apache/isis/commit/a824da64babfe503404e590b172ba2a140323574",
        "bug_id": "isis_5",
        "file": [
            {
                "additions": 1,
                "sha": "1e1b8cca9c4e0bb55683c7592ddd262742f535bb",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/c24020fc88351e371c2f6c73da6fb6b115c8296d/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModel.java",
                "deletions": 4,
                "filename": "core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModel.java?ref=c24020fc88351e371c2f6c73da6fb6b115c8296d",
                "patch": "@@ -1013,10 +1013,7 @@ public ScalarModelWithMultiPending asScalarModelWithMultiPending() {\n \n             @Override\n             public ArrayList<ObjectAdapterMemento> getMultiPending() {\n-                final ScalarModel scalarModel = ScalarModel.this;\n-                final ObjectAdapterMemento objectAdapterMemento = scalarModel.getObjectAdapterMemento();\n-                final ObjectAdapterMemento.Sort sort = objectAdapterMemento.getSort();\n-                final ObjectAdapterMemento pending = scalarModel.getPending();\n+                final ObjectAdapterMemento pending = ScalarModel.this.getPending();\n                 return pending != null ? pending.getList() : null;\n             }\n ",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/c24020fc88351e371c2f6c73da6fb6b115c8296d/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModel.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2001: fixes NPE for multi-line collection parameters.",
        "commit": "https://github.com/apache/isis/commit/c24020fc88351e371c2f6c73da6fb6b115c8296d"
    },
    {
        "parent": "https://github.com/apache/isis/commit/8d1e30aa768db8ec1896de15f22dd7f7277f634c",
        "bug_id": "isis_6",
        "file": [
            {
                "additions": 4,
                "sha": "179ec0844508725b16c4b5ab68e965834fe5a190",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/4539f97c6cc27049c7f451e8ba26573864ddb460/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorDefault.java",
                "deletions": 0,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorDefault.java?ref=4539f97c6cc27049c7f451e8ba26573864ddb460",
                "patch": "@@ -253,6 +253,10 @@ private boolean shouldRedirect(\n             final ObjectAdapter resultAdapter,\n             final RedirectFacet redirectFacet) {\n \n+        if(redirectFacet == null) {\n+            return getSettings().isRedirectEvenIfSameObject();\n+        }\n+\n         switch (redirectFacet.policy()) {\n \n         case EVEN_IF_SAME:",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/4539f97c6cc27049c7f451e8ba26573864ddb460/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorDefault.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2081: fixes npe with ActionLayout#redirect for property edits.",
        "commit": "https://github.com/apache/isis/commit/4539f97c6cc27049c7f451e8ba26573864ddb460"
    },
    {
        "parent": "https://github.com/apache/isis/commit/f00f26cd90c6650451a4ef3c434246c978f24551",
        "bug_id": "isis_7",
        "file": [
            {
                "additions": 10,
                "sha": "81dc0646f244e1d180b2d5d140945aa82b039801",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/f831d928f2574c262df3ce9f99005399104e4436/core/viewer-wicket-impl/src/main/java/org/apache/isis/viewer/wicket/viewer/IsisWicketModule.java",
                "deletions": 9,
                "filename": "core/viewer-wicket-impl/src/main/java/org/apache/isis/viewer/wicket/viewer/IsisWicketModule.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-impl/src/main/java/org/apache/isis/viewer/wicket/viewer/IsisWicketModule.java?ref=f831d928f2574c262df3ce9f99005399104e4436",
                "patch": "@@ -19,6 +19,9 @@\n \n package org.apache.isis.viewer.wicket.viewer;\n \n+import static org.apache.isis.commons.internal.base._Strings.prefix;\n+import static org.apache.isis.viewer.wicket.viewer.IsisWicketApplication.readLines;\n+\n import java.io.InputStream;\n import java.net.MalformedURLException;\n import java.net.URL;\n@@ -52,8 +55,6 @@\n import org.apache.isis.viewer.wicket.viewer.services.EmailServiceWicket;\n import org.apache.isis.viewer.wicket.viewer.settings.WicketViewerSettingsDefault;\n \n-import static org.apache.isis.viewer.wicket.viewer.IsisWicketApplication.readLines;\n-\n /**\n  * To override\n  *\n@@ -121,11 +122,14 @@ protected void configure() {\n                     final String fallback = getConfiguration().getString(\"isis.viewer.wicket.welcome.text\");\n                     final URL resource;\n                     try {\n-                        resource = servletContext.getResource(prefix(\"/\", welcomeFile));\n-                        return readLines(resource, fallback);\n+                        resource = servletContext.getResource(prefix(welcomeFile.get(), \"/\"));\n+                        if(resource!=null) {\n+                            return readLines(resource, fallback);    \n+                        }\n                     } catch (MalformedURLException e) {\n-                        return fallback;\n+                        // fall through\n                     }\n+                    return fallback;\n                 });\n \n         bind(String.class).annotatedWith(Names.named(\"applicationVersion\"))\n@@ -153,8 +157,5 @@ protected void configure() {\n     private IsisConfiguration getConfiguration() {\n         return _Config.getConfiguration();\n     }\n-    private static String prefix(final String prefix, final Provider<String> textProvider) {\n-        final String text = textProvider.get();\n-        return text.startsWith(prefix) ? text : prefix + text;\n-    }\n+ \n }",
                "changes": 19,
                "blob_url": "https://github.com/apache/isis/blob/f831d928f2574c262df3ce9f99005399104e4436/core/viewer-wicket-impl/src/main/java/org/apache/isis/viewer/wicket/viewer/IsisWicketModule.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1899: wicket-viewer: fixes NPE when welcome-file is missing",
        "commit": "https://github.com/apache/isis/commit/f831d928f2574c262df3ce9f99005399104e4436"
    },
    {
        "parent": "https://github.com/apache/isis/commit/e89e545695f00f70c23ae87aaac57caebb50447f",
        "bug_id": "isis_8",
        "file": [
            {
                "additions": 15,
                "sha": "98c40616af9aa287a800655956086facd8c7f2b4",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a494f564103769976083e2a5c0ed5142d475b230/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/tree/IsisToWicketTreeAdapter.java",
                "deletions": 2,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/tree/IsisToWicketTreeAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/tree/IsisToWicketTreeAdapter.java?ref=a494f564103769976083e2a5c0ed5142d475b230",
                "patch": "@@ -35,6 +35,7 @@\n import org.apache.wicket.extensions.markup.html.repeater.tree.ITreeProvider;\n import org.apache.wicket.extensions.markup.html.repeater.tree.NestedTree;\n import org.apache.wicket.extensions.markup.html.repeater.tree.Node;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n@@ -58,15 +59,27 @@\n \n class IsisToWicketTreeAdapter {\n \n-    public static EntityTree adapt(String id, ValueModel valueModel) {\n+    public static Component adapt(String id, ValueModel valueModel) {\n+        if(valueModel==null || valueModel.getObject()==null) {\n+            return emptyTreeComponent(id);\n+        }\n         return new EntityTree(id, toITreeProvider(valueModel), \n                 toIModelRepresentingCollapseExpandState(valueModel));\n     }\n \n-    public static EntityTree adapt(String id, ScalarModel scalarModel) {\n+    public static Component adapt(String id, ScalarModel scalarModel) {\n+        if(scalarModel==null || scalarModel.getObject()==null) {\n+            return emptyTreeComponent(id);\n+        }\n         return new EntityTree(id, toITreeProvider(scalarModel), \n                 toIModelRepresentingCollapseExpandState(scalarModel));\n     }\n+    \n+    // -- FALLBACK\n+    \n+    private static Component emptyTreeComponent(String id) {\n+        return new Label(id);\n+    }\n \n     // -- RENDERING\n ",
                "changes": 17,
                "blob_url": "https://github.com/apache/isis/blob/a494f564103769976083e2a5c0ed5142d475b230/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/tree/IsisToWicketTreeAdapter.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2101: TreeView: when for any reason the tree-model is empty don't\nNPE, create empty component instead\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-2101",
        "commit": "https://github.com/apache/isis/commit/a494f564103769976083e2a5c0ed5142d475b230"
    },
    {
        "parent": "https://github.com/apache/isis/commit/4cd48b5b943f94aa3ce8a1fb19f0d693db4f9737",
        "bug_id": "isis_9",
        "file": [
            {
                "additions": 4,
                "sha": "5109b8cb66c8763eb62cc91a2f37788b83afdd07",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/51f9408a54f79df5986631106ce89d0c203eed0c/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java",
                "deletions": 0,
                "filename": "core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java?ref=51f9408a54f79df5986631106ce89d0c203eed0c",
                "patch": "@@ -25,6 +25,8 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n+import java.util.function.Function;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n import java.util.stream.Stream;\n@@ -471,7 +473,9 @@ private ObjectAdapter executeAction() {\n                 final Object routeTo = routingService.route(result);\n                 return routeTo != null? getPersistenceSession().adapterFor(routeTo): null;\n             })\n+            .map(Optional::ofNullable)\n             .findFirst()\n+            .flatMap(Function.identity())\n             .orElse(resultAdapter);\n         \n     }",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/51f9408a54f79df5986631106ce89d0c203eed0c/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionModel.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-2066: fixes NPE occurring when invoke an action that returns null\n\nfix as per the idiom described here: https://stackoverflow.com/a/32476601/56880",
        "commit": "https://github.com/apache/isis/commit/51f9408a54f79df5986631106ce89d0c203eed0c"
    },
    {
        "parent": "https://github.com/apache/isis/commit/ed4ae6668e7e30ed2f313df7058a5a6078f6fc16",
        "bug_id": "isis_10",
        "file": [
            {
                "additions": 2,
                "sha": "4d3d2ee74c8cd54a5eaf90977336a788f4423140",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/2acc1da22593a254f20cdb714e2066aa96f9bdc3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java?ref=2acc1da22593a254f20cdb714e2066aa96f9bdc3",
                "patch": "@@ -74,7 +74,8 @@ public void process(final ProcessClassContext processClassContaxt) {\n     private static ObjectSpecIdFacet createObjectSpecIdFacet(final FacetHolder facetHolder, final Class<?> substitutedClass) {\n         final boolean isService = isService(facetHolder);\n         if (isService) {\n-            final String id = ServiceUtil.idOfType(substitutedClass);\n+            \n+            final String id = ServiceUtil.getExplicitelySpecifiedIdOfType(substitutedClass).orElse(null);\n             if (id != null) {\n                 return new ObjectSpecIdFacetDerivedFromDomainServiceAnnotationElseGetId(id, facetHolder);\n             }",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/2acc1da22593a254f20cdb714e2066aa96f9bdc3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java"
            },
            {
                "additions": 27,
                "sha": "769fa6c6b08868d06fc7fd763b16d6c0903f01a1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/2acc1da22593a254f20cdb714e2066aa96f9bdc3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServiceUtil.java",
                "deletions": 26,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServiceUtil.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServiceUtil.java?ref=2acc1da22593a254f20cdb714e2066aa96f9bdc3",
                "patch": "@@ -16,11 +16,10 @@\n  *  specific language governing permissions and limitations\n  *  under the License.\n  */\n-\n package org.apache.isis.core.metamodel.services;\n \n import java.lang.reflect.Method;\n-import java.util.function.Supplier;\n+import java.util.Optional;\n \n import org.apache.isis.applib.annotation.DomainService;\n import org.apache.isis.commons.internal.base._Strings;\n@@ -33,36 +32,39 @@\n     private ServiceUtil() {\n     }\n \n-    public static String idOfType(final Class<?> serviceClass) {\n-        \n-        final String serviceType = serviceTypeUsingAnnotation(serviceClass);\n-        if (serviceType != null) {\n-            return serviceType;\n-        }\n-\n-        return serviceTypeUsingIdGetterOrElseGet(serviceClass, ()->serviceClass.newInstance(), ()->null);\n-    }\n-\n     public static String idOfPojo(final Object serviceObject) {\n         final Class<?> serviceClass = serviceObject.getClass();\n-        final String serviceType = serviceTypeUsingAnnotation(serviceClass);\n-        if(serviceType != null) {\n-            return serviceType;\n-        }\n-\n-        return serviceTypeUsingIdGetterOrElseGet(serviceClass, ()->serviceObject, ()->normalize(serviceClass));\n+        return explicitelySpecifiedIdOfType(serviceClass, ()->serviceObject)\n+                .orElseGet(()->normalize(serviceClass));\n     }\n     \n     public static String idOfSpec(final ObjectSpecification serviceSpec) {\n-        return idOfType(serviceSpec.getCorrespondingClass());\n+        final Class<?> serviceClass = serviceSpec.getCorrespondingClass();\n+        return explicitelySpecifiedIdOfType(serviceClass, serviceClass::newInstance)\n+                .orElseGet(()->normalize(serviceClass));\n+    }\n+    \n+    public static String idOfAdapter(final ManagedObject serviceAdapter) {\n+        return idOfPojo(serviceAdapter.getPojo());\n     }\n     \n-    public static String idOfAdapter(final ManagedObject adapter) {\n-        return idOfPojo(adapter.getPojo());\n+    public static Optional<String> getExplicitelySpecifiedIdOfType(final Class<?> serviceClass) {\n+        return explicitelySpecifiedIdOfType(serviceClass, serviceClass::newInstance);\n     }\n     \n     // -- HELPER\n \n+    private static Optional<String> explicitelySpecifiedIdOfType(\n+            final Class<?> serviceClass, \n+            final _Functions.CheckedSupplier<Object> serviceInstanceSupplier) {\n+        \n+        final String serviceType = serviceTypeUsingAnnotation(serviceClass);\n+        if (serviceType != null) {\n+            return Optional.of(serviceType);\n+        }\n+        return serviceTypeUsingIdGetter(serviceClass, serviceInstanceSupplier);\n+    }\n+    \n     private static String serviceTypeUsingAnnotation(final Class<?> serviceClass) {\n         final String serviceType;\n         final DomainService domainService = serviceClass.getAnnotation(DomainService.class);\n@@ -75,17 +77,16 @@ private static String serviceTypeUsingAnnotation(final Class<?> serviceClass) {\n         return null;\n     }\n \n-    private static String serviceTypeUsingIdGetterOrElseGet(\n+    private static Optional<String> serviceTypeUsingIdGetter(\n             final Class<?> serviceClass, \n-            final _Functions.CheckedSupplier<Object> objectSupplier,\n-            final Supplier<String> orElse\n+            final _Functions.CheckedSupplier<Object> serviceInstanceSupplier\n             ) {\n         \n         try {\n             final Method m = serviceClass.getMethod(\"getId\");\n-            return (String) m.invoke(objectSupplier.get());\n+            return Optional.ofNullable((String) m.invoke(serviceInstanceSupplier.get()));\n         } catch (Exception e) {\n-            return orElse.get();\n+            return Optional.empty();\n         }\n     }\n     ",
                "changes": 53,
                "blob_url": "https://github.com/apache/isis/blob/2acc1da22593a254f20cdb714e2066aa96f9bdc3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServiceUtil.java"
            },
            {
                "additions": 4,
                "sha": "cd266fb629d26a099f9314ab1efa251f330220a1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/2acc1da22593a254f20cdb714e2066aa96f9bdc3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/services/ServiceUtil_Test.java",
                "deletions": 4,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/services/ServiceUtil_Test.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/services/ServiceUtil_Test.java?ref=2acc1da22593a254f20cdb714e2066aa96f9bdc3",
                "patch": "@@ -63,7 +63,7 @@ public void annotated() throws Exception {\n                 is(equalTo(\"foo.SomeServiceAnnotated\")));\n \n         assertThat(\n-                ServiceUtil.idOfType(SomeServiceAnnotated.class),\n+                ServiceUtil.getExplicitelySpecifiedIdOfType(SomeServiceAnnotated.class).orElse(null),\n                 is(equalTo(\"foo.SomeServiceAnnotated\")));\n     }\n \n@@ -75,7 +75,7 @@ public void id() throws Exception {\n                 is(equalTo(\"bar.SomeServiceWithId\")));\n \n         assertThat(\n-                ServiceUtil.idOfType(SomeServiceWithId.class),\n+                ServiceUtil.getExplicitelySpecifiedIdOfType(SomeServiceWithId.class).orElse(null),\n                 is(equalTo(\"bar.SomeServiceWithId\")));\n     }\n \n@@ -87,7 +87,7 @@ public void annotated_precedence_over_id() throws Exception {\n                 is(equalTo(\"bop.SomeServiceAnnotated\")));\n \n         assertThat(\n-                ServiceUtil.idOfType(SomeServiceAnnotatedAndWithId.class),\n+                ServiceUtil.getExplicitelySpecifiedIdOfType(SomeServiceAnnotatedAndWithId.class).orElse(null),\n                 is(equalTo(\"bop.SomeServiceAnnotated\")));\n     }\n \n@@ -97,7 +97,7 @@ public void fallback_to_fqcn_for_obj_but_to_null_for_service() throws Exception\n                 ServiceUtil.idOfPojo(new SomeServiceWithoutAnnotationOrId()),\n                 is(equalTo(\"org.apache.isis.core.metamodel.services.ServiceUtil_Test$SomeServiceWithoutAnnotationOrId\")));\n         assertThat(\n-                ServiceUtil.idOfType(SomeServiceWithoutAnnotationOrId.class),\n+                ServiceUtil.getExplicitelySpecifiedIdOfType(SomeServiceWithoutAnnotationOrId.class).orElse(null),\n                 is(nullValue()));\n     }\n ",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/2acc1da22593a254f20cdb714e2066aa96f9bdc3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/services/ServiceUtil_Test.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1976: further cleanup ServiceUtil, fixes a NPE regression\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-1976",
        "commit": "https://github.com/apache/isis/commit/2acc1da22593a254f20cdb714e2066aa96f9bdc3"
    },
    {
        "parent": "https://github.com/apache/isis/commit/dd1754e4facc65d9c0bf6a105d008662e0e79d7e",
        "bug_id": "isis_11",
        "file": [
            {
                "additions": 2,
                "sha": "9232744f1c8a4605da839fb79de7660192578774",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d3b8deccb8cab77c6a358c56386dfa00544ee938/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "deletions": 1,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java?ref=d3b8deccb8cab77c6a358c56386dfa00544ee938",
                "patch": "@@ -117,7 +117,8 @@ public final Recognition recognize2(final Throwable ex) {\n     private void injectServicesIfNecessary() {\n         if(!injected) {\n             for (final ExceptionRecognizer ers : exceptionRecognizers) {\n-                container.injectServicesInto(ers);\n+                if (container != null)\n+                    container.injectServicesInto(ers);\n             }\n             injected = true;\n         }",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/d3b8deccb8cab77c6a358c56386dfa00544ee938/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java"
            }
        ],
        "repo": "isis",
        "message": "ExceptionRecognizerComposite: NPE if container is null\n\nI have implemented ApplicationTenancy.\r\nWhen directly introducing the URL of an entity whose access is forbidden for me (i.e., http://localhost:8080/entity/KIT_:L_2) throws a NullPointerException.\r\nPerhaps the root cause is different.\r\nBut simply by evaluating if is null, it properly shows the error message (\"Not authorized or no such object\") instead of a HTTP 500 with a NullPointerException in the log.",
        "commit": "https://github.com/apache/isis/commit/d3b8deccb8cab77c6a358c56386dfa00544ee938"
    },
    {
        "parent": "https://github.com/apache/isis/commit/64b71b277b560c7c723b7ed84403bc7daabc91af",
        "bug_id": "isis_12",
        "file": [
            {
                "additions": 4,
                "sha": "67daafcee5f1f42e58c1a8530581bb157d0dce4f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/1c1ccb9ce823fa69b92a86e91cd1a6c20f5d14b9/core/runtime/src/main/java/org/apache/isis/core/runtime/services/ServicesInstallerFromAnnotation.java",
                "deletions": 20,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/services/ServicesInstallerFromAnnotation.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/services/ServicesInstallerFromAnnotation.java?ref=1c1ccb9ce823fa69b92a86e91cd1a6c20f5d14b9",
                "patch": "@@ -19,8 +19,6 @@\n \n package org.apache.isis.core.runtime.services;\n \n-import static org.apache.isis.commons.internal.functions._Predicates.not;\n-\n import java.lang.reflect.Modifier;\n import java.util.List;\n import java.util.Set;\n@@ -31,9 +29,6 @@\n \n import javax.annotation.PreDestroy;\n \n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n import org.apache.isis.applib.AppManifest;\n import org.apache.isis.applib.annotation.DomainService;\n import org.apache.isis.applib.annotation.DomainServiceLayout;\n@@ -51,7 +46,7 @@\n \n     // -- constants\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ServicesInstallerFromAnnotation.class);\n+    //private static final Logger LOG = LoggerFactory.getLogger(ServicesInstallerFromAnnotation.class);\n \n     public static final String NAME = \"annotation\";\n     public final static String PACKAGE_PREFIX_KEY = \"isis.services.ServicesInstallerFromAnnotation.packagePrefix\";\n@@ -143,24 +138,13 @@ protected void initIfRequired() {\n     public void shutdown() {\n     }\n \n-\n-\n-    // -- helpers\n+    // -- HELPERS\n \n     private Predicate<Class<?>> instantiatable() {\n-        return not(nullClass()).and(not(abstractClass()));\n-    }\n-\n-    private static Predicate<Class<?>> nullClass() {\n-        return (final Class<?> input) -> input == null;\n-    }\n-\n-    private static Predicate<Class<?>> abstractClass() {\n-        return (final Class<?> input) -> Modifier.isAbstract(input.getModifiers());\n+        return (final Class<?> input) -> \n+            input != null && !Modifier.isAbstract(input.getModifiers());\n     }\n \n-\n-\n     // -- getServices (API)\n \n     private List<Object> services;",
                "changes": 24,
                "blob_url": "https://github.com/apache/isis/blob/1c1ccb9ce823fa69b92a86e91cd1a6c20f5d14b9/core/runtime/src/main/java/org/apache/isis/core/runtime/services/ServicesInstallerFromAnnotation.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1976: fixes NPE on predicate composition\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-1976",
        "commit": "https://github.com/apache/isis/commit/1c1ccb9ce823fa69b92a86e91cd1a6c20f5d14b9"
    },
    {
        "parent": "https://github.com/apache/isis/commit/a4cc97294d0a6a9fd5536af2f944de487b6cb21d",
        "bug_id": "isis_13",
        "file": [
            {
                "additions": 2,
                "sha": "047dede52ae870e5d797360f8702c8bd02e8ae07",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/cb2673e181f5ee8791373cfed9e2da8aae4cf368/core/runtime/src/main/java/org/apache/isis/core/runtime/services/homepage/HomePageProviderServiceDefault.java",
                "deletions": 0,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/services/homepage/HomePageProviderServiceDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/services/homepage/HomePageProviderServiceDefault.java?ref=cb2673e181f5ee8791373cfed9e2da8aae4cf368",
                "patch": "@@ -30,6 +30,7 @@\n import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.annotation.Where;\n import org.apache.isis.applib.services.homepage.HomePageProviderService;\n+import org.apache.isis.commons.internal.base._NullSafe;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.consent.Consent;\n import org.apache.isis.core.metamodel.consent.InteractionInitiatedBy;\n@@ -59,6 +60,7 @@ public Object homePage() {\n             \n             final Optional<Object> homePage = objectActions\n             .map(objectAction->homePageIfUsable(serviceAdapter, objectAction))\n+            .filter(_NullSafe::isPresent)\n             .findAny();\n             \n             if(homePage.isPresent()) {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/cb2673e181f5ee8791373cfed9e2da8aae4cf368/core/runtime/src/main/java/org/apache/isis/core/runtime/services/homepage/HomePageProviderServiceDefault.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1976: fixes NPE with homepage lookup\n\nTask-Url: https://issues.apache.org/jira/browse/ISIS-1976",
        "commit": "https://github.com/apache/isis/commit/cb2673e181f5ee8791373cfed9e2da8aae4cf368"
    },
    {
        "parent": "https://github.com/apache/isis/commit/8540001f3304f319a052bbe70aa77b74cbc349f6",
        "bug_id": "isis_14",
        "file": [
            {
                "additions": 8,
                "sha": "f31cb57fbaa847d21c0375f4c5ffd7cc840f09a2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/687840765a3ac79738bf820cda1806f050680141/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java",
                "deletions": 0,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java?ref=687840765a3ac79738bf820cda1806f050680141",
                "patch": "@@ -37,6 +37,8 @@\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.Model;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import org.apache.isis.applib.layout.component.ServiceActionLayoutData;\n import org.apache.isis.applib.layout.menubars.MenuBars;\n@@ -64,6 +66,8 @@\n \n public final class ServiceActionUtil {\n \n+    private final static Logger LOG = LoggerFactory.getLogger(ServiceActionUtil.class);\n+\n     private ServiceActionUtil(){}\n \n     static void addLeafItem(\n@@ -241,6 +245,10 @@ public String apply(final ObjectAdapter objectAdapter) {\n                     final EntityModel entityModel = new EntityModel(serviceAdapter);\n                     final ObjectAction objectAction = serviceAdapter.getSpecification()\n                             .getObjectAction(actionLayoutData.getId());\n+                    if(objectAction == null) {\n+                        LOG.warn(\"No such action {}\", actionLayoutData.getId());\n+                        continue;\n+                    }\n                     final ServiceAndAction serviceAndAction =\n                             new ServiceAndAction(actionLayoutData.getNamed(), entityModel, objectAction);\n ",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/687840765a3ac79738bf820cda1806f050680141/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1822: further NPE fix.",
        "commit": "https://github.com/apache/isis/commit/687840765a3ac79738bf820cda1806f050680141"
    },
    {
        "parent": "https://github.com/apache/isis/commit/25f8b31600325efba432d9423fd7edb182e663ff",
        "bug_id": "isis_15",
        "file": [
            {
                "additions": 16,
                "sha": "c919cf11ecf9d80d596777353d098aaa3e95d46a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/7ba8fd644d7a85a9a86a4406363871b62fa6cda6/core/runtime/src/test/java/org/apache/isis/core/runtime/services/eventbus/EventBusServiceDefaultTest.java",
                "deletions": 6,
                "filename": "core/runtime/src/test/java/org/apache/isis/core/runtime/services/eventbus/EventBusServiceDefaultTest.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/test/java/org/apache/isis/core/runtime/services/eventbus/EventBusServiceDefaultTest.java?ref=7ba8fd644d7a85a9a86a4406363871b62fa6cda6",
                "patch": "@@ -16,19 +16,21 @@\n  */\n package org.apache.isis.core.runtime.services.eventbus;\n \n-import java.util.Collections;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.junit.Assert.assertThat;\n \n-import com.google.common.collect.ImmutableMap;\n-import com.google.common.eventbus.Subscribe;\n+import java.util.Collections;\n+import java.util.List;\n \n+import org.apache.isis.applib.services.registry.ServiceRegistry;\n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.ExpectedException;\n \n-import static org.hamcrest.Matchers.is;\n-import static org.hamcrest.Matchers.nullValue;\n-import static org.junit.Assert.assertThat;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.eventbus.Subscribe;\n \n public class EventBusServiceDefaultTest {\n \n@@ -37,6 +39,14 @@\n     @Before\n     public void setUp() throws Exception {\n         eventBusService = new EventBusServiceDefault() {\n+        \t{\n+        \t\tserviceRegistry = new ServiceRegistry() {\n+\t\t\t\t\t@Override public <T> Iterable<T> lookupServices(Class<T> service) { return null; }\n+\t\t\t\t\t@Override public <T> T lookupService(Class<T> service) { return null; }\n+\t\t\t\t\t@Override public <T> T injectServicesInto(T domainObject) {\treturn null; }\n+\t\t\t\t\t@Override public List<Object> getRegisteredServices() { return null; }\n+\t\t\t\t}; \n+        \t}\n         };\n     }\n ",
                "changes": 22,
                "blob_url": "https://github.com/apache/isis/blob/7ba8fd644d7a85a9a86a4406363871b62fa6cda6/core/runtime/src/test/java/org/apache/isis/core/runtime/services/eventbus/EventBusServiceDefaultTest.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1845 fix EventBusServiceDefaultTest NPE",
        "commit": "https://github.com/apache/isis/commit/7ba8fd644d7a85a9a86a4406363871b62fa6cda6"
    },
    {
        "parent": "https://github.com/apache/isis/commit/d795df241a86656c070abb5629149344a98ef212",
        "bug_id": "isis_16",
        "file": [
            {
                "additions": 1,
                "sha": "88eb6414f971f18d602f2fa24624a215bd5c088a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/45b4d403b032e93f04fd975345cfaf33ce1141bb/core/applib/src/main/java/org/apache/isis/applib/value/Markup.java",
                "deletions": 1,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/value/Markup.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/value/Markup.java?ref=45b4d403b032e93f04fd975345cfaf33ce1141bb",
                "patch": "@@ -45,7 +45,7 @@ public String asString() {\n     }\n     \n     public boolean isEqualTo(final Markup other) {\n-        return this.html.equals(other.html);\n+        return other==null ? false : this.html.equals(other.html);\n     }\n \n     public String title() {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/45b4d403b032e93f04fd975345cfaf33ce1141bb/core/applib/src/main/java/org/apache/isis/applib/value/Markup.java"
            }
        ],
        "repo": "isis",
        "message": "prevent NPE",
        "commit": "https://github.com/apache/isis/commit/45b4d403b032e93f04fd975345cfaf33ce1141bb"
    },
    {
        "parent": "https://github.com/apache/isis/commit/7dce4f63d9905b0474044abf8e16aae3e039c284",
        "bug_id": "isis_17",
        "file": [
            {
                "additions": 37,
                "sha": "97b6c0f8b6c9d5ab6e8312a5e46132aa32961199",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/6adc5edc98a489521d40f24a8ecf8bd014900398/core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java",
                "deletions": 19,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java?ref=6adc5edc98a489521d40f24a8ecf8bd014900398",
                "patch": "@@ -82,6 +82,9 @@ public void postProcess(final ObjectSpecification objectSpecification) {\n             final ObjectActionParameter.Predicates.CollectionParameter whetherCollectionParamOfType =\n                     new ObjectActionParameter.Predicates.CollectionParameter(specification);\n \n+            final ObjectActionParameter.Predicates.ScalarParameter whetherScalarParamOfType =\n+                    new ObjectActionParameter.Predicates.ScalarParameter(specification);\n+\n             final ImmutableList<ObjectAction> actions = FluentIterable.from(objectActions)\n                     .filter(ObjectAction.Predicates.associatedWith(otma))\n                     .toList();\n@@ -90,12 +93,16 @@ public void postProcess(final ObjectSpecification objectSpecification) {\n \n                 final List<ObjectActionParameter> parameters = action.getParameters();\n \n+                final ImmutableList<ObjectActionParameter> compatibleCollectionParams = FluentIterable.from(parameters)\n+                        .filter(whetherCollectionParamOfType).toList();\n+\n+                final ImmutableList<ObjectActionParameter> compatibleScalarParams = FluentIterable.from(parameters)\n+                        .filter(whetherScalarParamOfType).toList();\n+\n                 // for collection parameters, install an defaults facet (if there isn't one already)\n                 // this will cause the UI to render the collection with toggleboxes\n                 // with a thread-local used to provide the selected objects\n-                final ImmutableList<ObjectActionParameter> collectionParams = FluentIterable.from(parameters)\n-                        .filter(whetherCollectionParamOfType).toList();\n-                for (final ObjectActionParameter collectionParam : collectionParams) {\n+                for (final ObjectActionParameter collectionParam : compatibleCollectionParams) {\n                     final ActionParameterDefaultsFacet defaultsFacet = collectionParam\n                             .getFacet(ActionParameterDefaultsFacet.class);\n                     if (existsAndNotDerived(defaultsFacet)) {\n@@ -105,28 +112,39 @@ public void postProcess(final ObjectSpecification objectSpecification) {\n                     }\n                 }\n \n-                // for both scalar and collection parameters, install a choices facet (if there isn't one already)\n+                // for compatible collection parameters, install a choices facet (if there isn't one already)\n+                // using the associated collection for its values\n+                for (final ObjectActionParameter collectionParam : compatibleCollectionParams) {\n+                    addChoicesFacetIfNoneAlready(otma, collectionParam);\n+                }\n+\n+                // similarly for compatible scalar parameters, install a choices facet (if there isn't one already)\n                 // using the associated collection for its values.\n-                for (final ObjectActionParameter scalarOrCollectionParam : parameters) {\n-\n-                    final ActionParameterChoicesFacet choicesFacet = scalarOrCollectionParam\n-                            .getFacet(ActionParameterChoicesFacet.class);\n-                    final ActionParameterAutoCompleteFacet autoCompleteFacet = scalarOrCollectionParam\n-                            .getFacet(ActionParameterAutoCompleteFacet.class);\n-                    if (existsAndNotDerived(choicesFacet) || existsAndNotDerived(autoCompleteFacet)) {\n-                        // don't overwrite existing choices or autoComplete facet\n-                    } else {\n-                        FacetUtil.addFacet(\n-                                new ActionParameterChoicesFacetFromParentedCollection(\n-                                        scalarOrCollectionParam, otma,\n-                                        getDeploymentCategory(), specificationLoader,\n-                                        authenticationSessionProvider, adapterManager ));\n-                    }\n+                for (final ObjectActionParameter scalarParam : compatibleScalarParams) {\n+                    addChoicesFacetIfNoneAlready(otma, scalarParam);\n                 }\n             }\n         }\n     }\n \n+    private void addChoicesFacetIfNoneAlready(\n+            final OneToManyAssociation otma,\n+            final ObjectActionParameter scalarOrCollectionParam) {\n+        final ActionParameterChoicesFacet choicesFacet = scalarOrCollectionParam\n+                .getFacet(ActionParameterChoicesFacet.class);\n+        final ActionParameterAutoCompleteFacet autoCompleteFacet = scalarOrCollectionParam\n+                .getFacet(ActionParameterAutoCompleteFacet.class);\n+        if (existsAndNotDerived(choicesFacet) || existsAndNotDerived(autoCompleteFacet)) {\n+            // don't overwrite existing choices or autoComplete facet\n+        } else {\n+            FacetUtil.addFacet(\n+                    new ActionParameterChoicesFacetFromParentedCollection(\n+                            scalarOrCollectionParam, otma,\n+                            getDeploymentCategory(), specificationLoader,\n+                            authenticationSessionProvider, adapterManager ));\n+        }\n+    }\n+\n     private static boolean existsAndNotDerived(final Facet facet) {\n         return facet != null && !facet.isNoop() && !facet.isNoop();\n     }",
                "changes": 56,
                "blob_url": "https://github.com/apache/isis/blob/6adc5edc98a489521d40f24a8ecf8bd014900398/core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java"
            },
            {
                "additions": 4,
                "sha": "e5724e4057012dae5cb8458fb32fc38708c45ba1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/6adc5edc98a489521d40f24a8ecf8bd014900398/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/CollectionPanel.java",
                "deletions": 3,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/CollectionPanel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/CollectionPanel.java?ref=6adc5edc98a489521d40f24a8ecf8bd014900398",
                "patch": "@@ -193,9 +193,10 @@ public void clearToggles(final AjaxRequestTarget target) {\n             collectionModel.clearToggleMementosList();\n \n             final ObjectAdapterToggleboxColumn toggleboxColumn = bulkActionsProvider.getToggleboxColumn();\n-            toggleboxColumn.clearToggles();\n-\n-            target.add(collectionPanel);\n+            if(toggleboxColumn != null) {\n+                toggleboxColumn.clearToggles();\n+                target.add(collectionPanel);\n+            }\n         }\n     }\n ",
                "changes": 7,
                "blob_url": "https://github.com/apache/isis/blob/6adc5edc98a489521d40f24a8ecf8bd014900398/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/CollectionPanel.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1874: adds guard against NPE, and ensures choices facet not installed on incompatible parameters",
        "commit": "https://github.com/apache/isis/commit/6adc5edc98a489521d40f24a8ecf8bd014900398"
    },
    {
        "parent": "https://github.com/apache/isis/commit/655dd28110f9e7dfbbc86767d8c97bea5f31660e",
        "bug_id": "isis_18",
        "file": [
            {
                "additions": 3,
                "sha": "c3b055eac8113051d82bd129e6fbfdfcd469d223",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8c440ba37119aade294bc8e2777b88318a479fd0/core/applib/src/main/java/org/apache/isis/applib/conmap/ContentMappingServiceForCommandDto.java",
                "deletions": 0,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/conmap/ContentMappingServiceForCommandDto.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/conmap/ContentMappingServiceForCommandDto.java?ref=8c440ba37119aade294bc8e2777b88318a479fd0",
                "patch": "@@ -71,6 +71,9 @@ CommandDto asProcessedDto(final Object object) {\n     }\n \n     private CommandDto asProcessedDto(final CommandWithDto commandWithDto) {\n+        if(commandWithDto == null) {\n+            return null;\n+        }\n         CommandDto commandDto = commandWithDto.asDto();\n \n         // global processors",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/8c440ba37119aade294bc8e2777b88318a479fd0/core/applib/src/main/java/org/apache/isis/applib/conmap/ContentMappingServiceForCommandDto.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1569: fixes NPE for downloading command DTOs if xactn can't be found",
        "commit": "https://github.com/apache/isis/commit/8c440ba37119aade294bc8e2777b88318a479fd0"
    },
    {
        "parent": "https://github.com/apache/isis/commit/19dfb5324cf32c9fd1015ab01308439fe313d76b",
        "bug_id": "isis_19",
        "file": [
            {
                "additions": 4,
                "sha": "c4bdca4ef65ba98c3f3a9f31d3b927b2381e0eed",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/20458aaf95fbd6293d03023f58fb59dd4a8ee89c/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java",
                "deletions": 0,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java?ref=20458aaf95fbd6293d03023f58fb59dd4a8ee89c",
                "patch": "@@ -234,6 +234,10 @@ public String apply(final ObjectAdapter objectAdapter) {\n                     final Bookmark bookmark = new Bookmark(objectType, PersistenceSession.SERVICE_IDENTIFIER);\n                     final String oid = bookmark.toString();\n                     final ObjectAdapter serviceAdapter = serviceAdapterByOid.get(oid);\n+                    if(serviceAdapter == null) {\n+                        // service not recognised, presumably the menu layout is out of sync with actual configured modules\n+                        continue;\n+                    }\n                     final EntityModel entityModel = new EntityModel(serviceAdapter);\n                     final ObjectAction objectAction = serviceAdapter.getSpecification()\n                             .getObjectAction(actionLayoutData.getId());",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/20458aaf95fbd6293d03023f58fb59dd4a8ee89c/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1822: fixes NPE if encounters non-existent action in menubars.layout.xml",
        "commit": "https://github.com/apache/isis/commit/20458aaf95fbd6293d03023f58fb59dd4a8ee89c"
    },
    {
        "parent": "https://github.com/apache/isis/commit/7c95d76c72d1243999277fff85e330889ee13f23",
        "bug_id": "isis_20",
        "file": [
            {
                "additions": 12,
                "sha": "ec663470bfd14d41b4fb3a640de00c38a1a68048",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/629289008ec55a5b56895a7ddde1903fd2a70e39/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java",
                "deletions": 5,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java?ref=629289008ec55a5b56895a7ddde1903fd2a70e39",
                "patch": "@@ -174,14 +174,21 @@ private void specifyServicesAndRegisteredEntitiesUsing(final AppManifest appMani\n \n         final List<Class<?>> additionalServices = appManifest.getAdditionalServices();\n         if(additionalServices != null) {\n-            String existingServicesCsv = configuration.getString(ServicesInstallerFromConfiguration.SERVICES_KEY);\n-            String additionalServicesCsv = classNamesFrom(additionalServices);\n-            String servicesCsv = Joiner.on(\",\").join(existingServicesCsv, additionalServicesCsv);\n-            putConfigurationProperty(\n-                    ServicesInstallerFromConfiguration.SERVICES_KEY, servicesCsv);\n+            final String additionalServicesCsv = classNamesFrom(additionalServices);\n+            appendToPropertyCsvValue(ServicesInstallerFromConfiguration.SERVICES_KEY, additionalServicesCsv);\n         }\n     }\n \n+    private void appendToPropertyCsvValue(final String servicesKey, final String additionalServicesCsv) {\n+        final String existingServicesCsv = configuration.getString(servicesKey);\n+        final String servicesCsv = join(existingServicesCsv, additionalServicesCsv);\n+        putConfigurationProperty(servicesKey, servicesCsv);\n+    }\n+\n+    private static String join(final String csv1, final String csv2) {\n+        return csv1 != null ? Joiner.on(\",\").join(csv1, csv2) : null;\n+    }\n+\n     private Iterable<String> modulePackageNamesFrom(final AppManifest appManifest) {\n         List<Class<?>> modules = appManifest.getModules();\n         if (modules == null || modules.isEmpty()) {",
                "changes": 17,
                "blob_url": "https://github.com/apache/isis/blob/629289008ec55a5b56895a7ddde1903fd2a70e39/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1710: fixes NPE if no prior list of services",
        "commit": "https://github.com/apache/isis/commit/629289008ec55a5b56895a7ddde1903fd2a70e39"
    },
    {
        "parent": "https://github.com/apache/isis/commit/c19fa8fb844c64c9f117d93b30db782bebec757d",
        "bug_id": "isis_21",
        "file": [
            {
                "additions": 28,
                "sha": "83ba17ce975b8a48efc38135f560c4182f2a92c6",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/rgcms/_rgcms_classes_menubars.adoc",
                "deletions": 28,
                "filename": "adocs/documentation/src/main/asciidoc/guides/rgcms/_rgcms_classes_menubars.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/rgcms/_rgcms_classes_menubars.adoc?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -5,64 +5,64 @@\n :_imagesdir: images/\n \n \n-The `org.apache.isis.applib.layout.menus` package defines a number of classes that allow the layout of domain service actions to be organised across menu bars, menus and menu sections.\n+The `org.apache.isis.applib.layout.menubars` package and subpackages define a number of interfaces classes that allow the layout of domain service actions to be organised across menu bars, menus and menu sections.\n \n-These classes fall into two main categories:\n+The classes define a hierarchical structure of menu bars, menus and menu sections.\n+Similar to the xref:rgcms.adoc#_rgcms_classes_layout[object layout] classes, the concrete menu classes support bootstrap3; support for other layout systems is possible.\n \n-* menu classes, that define a hierarchical structure of menu bars, menus and menu sections, and;\n+The component class `ServiceActionLayoutData` defines action metadata, being broadly equivalent to the \"layout\" annotations for actions, ie xref:../rgant/rgant.adoc#_rgant-ActionLayout[`@ActionLayout`].\n+This is similar to the `ActionLayoutData` component class used for object layouts, but also captures the identity of the \"owning\" domain service.\n+Service actions are grouped into menu sections.\n \n-+\n-Unlike the xref:rgcms.adoc#_rgcms_classes_layout[object layout] classes, the menu classes have no dependency on any particular layout architecture (that is, they don't attempt to model some particular grid system such as bootstrap3).\n-\n-* a component class `(ServiceActionLayoutData`) that captures the layout metadata for a domain services action.\n-These are grouped into menu sections.\n-\n-+\n-The component class is broadly equivalent to the \"layout\" annotations for actions, ie xref:../rgant/rgant.adoc#_rgant-ActionLayout[`@ActionLayout`].\n-\n-The menu classes and the component class should be reusable across all any and all UI implementations, so this is a less abstract (though equally general) design as compared to the xref:rgcms.adoc#_rgcms_classes_layout[object layout] design.\n-\n-All of the classes in this package are JAXB-annotated, meaning that they can be serialized to/from XML (in the `http://isis.apache.org/applib/layout/menus` XSD namespace).\n+All of the classes in this package are JAXB-annotated, meaning that they can be serialized to/from XML (in the `http://isis.apache.org/applib/layout/menubars/bootstrap3` XSD namespace).\n This ability to serialize to/from XML is used by the xref:../rgsvc/rgsvc.adoc#_rgsvc_presentation-layer-spi_MenuBarsLoaderService[`MenuBarsLoaderService`], the default implementation of which reads the grid layout for a domain class from a `.layout.xml` file on the classpath.\n It also allows the menu bars to be exposed through the REST API provided by the xref:../ugvro/ugvro.adoc#[Restful Objects viewer], as either XML or JSON.\n \n-The service action component also allow a link to be associated with it.\n+The service action component also allows a link to be associated with it.\n Each such link is populated by the framework automatically when exposing the menu bars layout through the REST API, pointing back to the standard Restful Objects resources.\n This design greatly assists in the implementation of generic REST clients.\n \n \n-[[_rgcms_classes_menubars]]\n+[[_rgcms_classes_menubars_menus]]\n == Menus\n \n-Both the menu and component classes reside in the `org.apache.isis.applib.layout.menus` package, consisting of:\n+The menu classes reside in the `org.apache.isis.applib.layout.menubars.bootstrap3` package, consisting of:\n \n-* `MenuBars`\n+* `BS3MenuBars`\n \n +\n-The top-level structure that define three fields: a primary `MenuBar`, secondary `MenuBar` and tertiary `MenuBar`.\n-The xref:../ugvw/ugvw.adoc#[Wicket viewer] places the primary bar to the left, the secondary bar aligned right, and the tertiary bar (expected to consist of just one `Menu`) under the user names.\n+The top-level structure that define three fields: a primary `BS3MenuBar`, secondary `BS3MenuBar` and tertiary `BS3MenuBar`.\n+The xref:../ugvw/ugvw.adoc#[Wicket viewer] places the primary bar to the left, the secondary bar aligned right, and the tertiary bar (expected to consist of just one `BS3Menu`) under the user names.\n \n-* `MenuBar`\n+* `BS3MenuBar`\n \n +\n-consisting of one or many ``Menu``s.\n+consisting of one or many ``BS3Menu``s.\n \n-* `Menu`\n+* `BS3Menu`\n \n +\n-consisting of one or many ``MenuSection``s.\n+consisting of one or many ``BS3MenuSection``s.\n The xref:../ugvw/ugvw.adoc#[Wicket viewer] renders a separator between each section.\n \n-* `MenuSection`\n+* `BS3MenuSection`\n \n +\n consisting of one or many actions (``ServiceActionLayoutData``s)\n \n-* `ServiceActionLayoutData` class, which correspond to the xref:../rgant/rgant.adoc#_rgant-ActionLayout[`@ActionLayout`] annotation.\n+\n+[[_rgcms_classes_menubars_components]]\n+== Components\n+\n+The service action class reside in the `org.apache.isis.applib.layout.component` package, consisting of just:\n+\n+* `ServiceActionLayoutData` class\n \n +\n+which correspond to the xref:../rgant/rgant.adoc#_rgant-ActionLayout[`@ActionLayout`] annotation.\n+\n This is similar to `ActionLayoutData` (of the xref:rgcms.adoc#_rgcms_classes_layout[object layout] classes), however it also identifies the domain service to which it belongs.\n-(This isn't required for the object layouts because that is implicit).\n+(This isn't required for the object layouts because the owner in that case is implicit).\n \n \n ",
                "changes": 56,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/rgcms/_rgcms_classes_menubars.adoc"
            },
            {
                "additions": 2,
                "sha": "0139a0b777ec08d7d7e9f6ca81fea91000873ae0",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout.adoc",
                "deletions": 4,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout.adoc?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -5,17 +5,15 @@\n :_imagesdir: images/\n \n \n-\n-\n In implementing the http://en.wikipedia.org/wiki/Naked_objects[naked objects pattern], Apache Isis aims to infer as much information from the domain classes as possible.\n Nevertheless, some metadata relating solely to the UI is inevitably required.\n This chapter describes how this is done both for domain objects using either annotations or using an associated layout file.\n \n-It also describes how to layout the application menu items (containing domain service' actions), as more well as more advanced topics such as customising which columns appear in tables.\n+The chapter also describes how to customising which columns of associated objects appear in tables.\n+The layout of application menu items is described in a xref:ugvw.adoc#_ugvw_menubars-layout[separate chapter].\n \n include::_ugvw_layout_annotation-based.adoc[leveloffset=+1]\n include::_ugvw_layout_file-based.adoc[leveloffset=+1]\n-include::_ugvw_layout_application-menu.adoc[leveloffset=+1]\n include::_ugvw_layout_table-columns.adoc[leveloffset=+1]\n \n ",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout.adoc"
            },
            {
                "additions": 0,
                "sha": "02a83e5585b15a253fb5aba9c6b29f41175dbefa",
                "status": "removed",
                "raw_url": "https://github.com/apache/isis/raw/c19fa8fb844c64c9f117d93b30db782bebec757d/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_application-menu.adoc",
                "deletions": 165,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_application-menu.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_application-menu.adoc?ref=c19fa8fb844c64c9f117d93b30db782bebec757d",
                "patch": "@@ -1,165 +0,0 @@\n-[[_ugvw_layout_application-menu]]\n-= Application Menu Layout\n-:Notice: Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at. http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n-:_basedir: ../../\n-:_imagesdir: images/\n-\n-\n-\n-The actions of domain services are made available as an application menu bar. By default each domain service\n-corresponds to a single menu on this menu bar, with its actions as the drop-down menu items. This is rarely exactly\n-what is required, however. The `@MemberOrder` and `@DomainServiceLayout` annotations can be used to rearrange the\n-placement of menu items.\n-\n-The screenshots below are taken from http://github.com/estatio/estatio[Estatio], an open source estate management\n-application built using Apache Isis.\n-\n-== @DomainServiceLayout\n-\n-Menus for domain services can be placed either on a primary, secondary or tertiary menu bar.\n-\n-image::{_imagesdir}application-menu/layout-menus.png[width=\"800px\",link=\"{_imagesdir}application-menu/layout-menus.png\"]\n-\n-Within a single top-level menu (eg \"Fixed Assets\") there can be actions from multiple services. The Wicket viewer\n-automatically adds a divider between each:\n-\n-image::{_imagesdir}application-menu/dividers.png[width=\"400px\",link=\"{_imagesdir}application-menu/dividers.png\"]\n-\n-In the example above the top-level menu combines the actions from the `Properties`, `Units` and `FixedAssetRegistrations`\n-services. The `Properties` service is annotated:\n-\n-[source,java]\n-----\n-@DomainServiceLayout(\n-        named=\"Fixed Assets\",\n-        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n-        menuOrder = \"10.1\"\n-)\n-public class Properties ... { ... }\n-----\n-\n-while the `Units` service is annotated:\n-\n-[source,java]\n-----\n-@DomainServiceLayout(\n-        named=\"Fixed Assets\",\n-        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n-        menuOrder = \"10.2\"\n-)\n-public class Units ... { ... }\n-----\n-\n-and similarly `FixedAssetRegistrations` is annotated:\n-\n-[source,java]\n-----\n-@DomainServiceLayout(\n-        named=\"Fixed Assets\",\n-        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n-        menuOrder = \"10.3\"\n-)\n-public class FixedAssetRegistrations ... { ... }\n-----\n-\n-Note that in all three cases the value of the `named` attribute and the `menuBar` attribute is the same: \"Fixed Assets\"\n-and PRIMARY. This means that all will appear on a \"Fixed Assets\" menu in the primary menu bar.\n-\n-Meanwhile the value of `menuOrder` attribute is significant for two reasons:\n-\n-* for these three services on the same (\"Fixed Assets\") top-level menu, it determines the relative order of their sections (`Properties` first, then `Units`, then `FixedAssetRegistrations`)\n-* it determines the placement of the top-level menu itself (\"Fixed Assets\") with respect to other top-level menus on the menu bar.\n-\n-To illustrate this latter point, the next top-level menu on the menu bar, \"Parties\", is placed after \"Fixed Assets\"\n- because the `menuOrder` of the first of its domain services, namely the `Parties` service, is higher than that for\n- \"Fixed Assets\":\n-\n-[source,java]\n-----\n-@DomainServiceLayout(\n-        named=\"Parties\",\n-        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n-        menuOrder = \"20.1\"\n-)\n-public class Parties ... { ... }\n-----\n-\n-Note that only the `menuOrder` of the _first_ domain service is significant in placing the menus along the menu bar;\n-thereafter the purpose of the `menuOrder` is to order the menu services sections on the menu itself.\n-\n-== Ordering menu actions\n-\n-For a given service, the actions within a section on a menu is determined by the `@MemberOrder` annotation. Thus, for\n-the `Units` domain service, its actions are annotated:\n-\n-[source,java]\n-----\n-public class Units extends EstatioDomainService<Unit> {\n-\n-    @MemberOrder(sequence = \"1\")\n-    public Unit newUnit( ... ) { ... }\n-\n-    @MemberOrder(sequence = \"2\")\n-    public List<Unit> findUnits( ... ) { ... }\n-\n-    @ActionLayout( prototype = true )\n-    @MemberOrder(sequence = \"99\")\n-    public List<Unit> allUnits() { ... }\n-    ...\n-}\n-----\n-\n-Note that the last is also a prototype action (meaning it is only displayed in SERVER_PROTOTYPE (=Wicket Development) mode).\n-In the UI it is rendered in italics.\n-\n-(It is possible to override this place of a given action by specifying `@MemberOrder(name=&quot;...&quot;)` where the name is\n-that of a top-level menu. Prior to `1.8.0` this was the only way of doing things, as of `1.8.0` its use\n-is not recommended).\n-\n-== Tertiary menubar\n-\n-The tertiary menu bar consists of a single unnamed menu, rendered underneath the user's login, top right. This is\n-intended primarily for actions pertaining to the user themselves, eg their account, profile or settings:\n-\n-image::{_imagesdir}application-menu/tertiary.png[width=\"300px\",link=\"{_imagesdir}application-menu/tertiary.png\"]\n-\n-Domain services' actions can be associated with the tertiary menu using the same `@DomainServiceLayout` annotation. For\n-example, the `updateEpochDate(...)` and `listAllSettings(...)` actions come from the following service:\n-\n-[source,java]\n-----\n-@DomainServiceLayout(\n-        menuBar = DomainServiceLayout.MenuBar.TERTIARY,\n-        menuOrder = \"10.1\"\n-)\n-public class EstatioAdministrationService ... {\n-\n-    @MemberOrder(sequence = \"1\")\n-    public void updateEpochDate( ... ) { ... }\n-\n-    @MemberOrder(sequence = \"2\")\n-    public List<ApplicationSetting> listAllSettings() { ... }\n-    ...\n-}\n-----\n-\n-Because the number of items on the tertiary menu is expected to be small and most will pertain to the current user, the\n-viewer does _not_ place dividers between actions from different services on the tertiary menu.\n-\n-\n-== Incode Platform modules\n-\n-Some of the (non-ASF) link:http://platform.incode.org[Incode Platform^] modules also provide services whose actions appear in top-level menus.\n-\n-The security's module places its domain service menus in three\n-top-level menus:\n-\n-* its `ApplicationUsers`, `ApplicationRoles`, `ApplicationPermission`, `ApplicationFeatureViewModels` and\n- `ApplicationTenancies` domain services are all grouped together in a single \"Security\" top-level menu, on the\n- SECONDARY menu bar\n-\n-* its `MeService` domain service, which provides the `me()` action, is placed on the TERTIARY menu bar.\n-\n-Currently there is no facility to alter the placement of these services. However, their UI can be suppressed\n-using security or using a xref:../ugbtb/ugbtb.adoc#_ugbtb_hints-and-tips_vetoing-visibility[vetoing subscriber].\n-",
                "changes": 165,
                "blob_url": "https://github.com/apache/isis/blob/c19fa8fb844c64c9f117d93b30db782bebec757d/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_application-menu.adoc"
            },
            {
                "additions": 32,
                "sha": "36c56cd298c484215459e32b1e8d79f9c684d9db",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_file-based.adoc",
                "deletions": 30,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_file-based.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_file-based.adoc?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -20,14 +20,15 @@ It is also possible to download an initial `.layout.xml` - capturing any existin\n \n There are some downsides, though:\n \n-* file-based layouts are not type: a typo will result in the metadata not being picked up for the element.\n-They also suffer from syntactic fragility: an invalid XML document will result in no metadata for the entire class.\n+* file-based layouts are not typesafe: a typo will result in the metadata not being picked up for the element.\n \n-* there is no notion of inheritance, so a `.layout.xml` is required for all concrete classes and also for any abstract classes (if used as a collection type)\n+* they suffer from syntactic fragility: an invalid XML document will result in no metadata for the entire class.\n+\n+* there is no notion of inheritance, so a `.layout.xml` is required for all concrete classes and also for any abstract classes (if used as a collection type).\n In contrast, the dewey-decimal format `@MemberOrder` annotation allows the metadata of the subclass its superclasses to fit together relatively seamlessly.\n \n-The `Xxx.layout.xml` file is just the serialized form of a xref:../rgcms/rgcms.adoc#_rgcms_classes_layout[`Grid`] layout class defined within Apache Isis' applib.  These are JAXB-annotated classes with corresponding XSD schemas; the upshot of that\n-is that IDEs such as IntelliJ and Eclipse can provide \"intellisense\", making iteasy to author such layout files.\n+The `Xxx.layout.xml` file is just the serialized form of a xref:../rgcms/rgcms.adoc#_rgcms_classes_layout[`Grid`] layout class defined within Apache Isis' applib.\n+These are JAXB-annotated classes with corresponding XSD schemas; the upshot of that is that IDEs such as IntelliJ and Eclipse can provide \"intellisense\", making iteasy to author such layout files.\n \n \n [NOTE]\n@@ -62,15 +63,16 @@ This link:https://www.youtube.com/watch?v=MxewC5Pve5k[screencast] describes the\n \n == Examples\n \n-Probably the easiest way to understand dynamic XML layouts is by example.  For this we'll use the `ToDoItem` from the\n-(non-ASF) http://github.com/isisaddons/isis-app-todoapp[Isis addons' todoapp]:\n+Probably the easiest way to understand dynamic XML layouts is by example.\n+For this we'll use the `ToDoItem` from the (non-ASF) http://github.com/isisaddons/isis-app-todoapp[Isis addons' todoapp]:\n \n image::{_imagesdir}layout-dynamic-xml/ToDoItem.png[width=\"940px\",link=\"{_imagesdir}layout-dynamic-xml/ToDoItem.png\"]\n \n \n === Namespaces\n \n-First things first; every `.layout.xml` file must properly declare the XSD namespaces and schemas.  There are two: one for the grid classes, and one for the common component classes:\n+First things first; every `.layout.xml` file must properly declare the XSD namespaces and schemas.\n+There are two: one for the grid classes, and one for the common component classes:\n \n [source,xml]\n ----\n@@ -177,7 +179,7 @@ Note also the `unreferencedProperties` attribute for the fieldset; this topic is\n \n [NOTE]\n ====\n-(As of `1.15.0`) the ``<fieldset>``'s \"name\" attribute is optional.\n+The ``<fieldset>``'s \"name\" attribute is optional.\n If omitted, then the title panel is suppressed, freeing more real estate.\n \n Do be aware though that if there are any actions that have been placed on the fieldset's panel, then these _will *not* be displayed_.\n@@ -191,23 +193,23 @@ In the final row the collections are placed in tabs, simply one collection per t\n \n [source,xml]\n ----\n-                <bs3:tab name=\"Similar to\">\n-                    <bs3:row>\n-                        <bs3:col span=\"12\">\n-                            <c:collection defaultView=\"table\" id=\"similarTo\"/>\n-                        </bs3:col>\n-                    </bs3:row>\n-                </bs3:tab>\n-                <bs3:tab name=\"Dependencies\">\n-                    <bs3:row>\n-                        <bs3:col span=\"12\">\n-                            <c:collection defaultView=\"table\" id=\"dependencies\">\n-                                <c:action id=\"add\"/>\n-                                <c:action id=\"remove\"/>\n-                            </c:collection>\n-                        </bs3:col>\n-                    </bs3:row>\n-                </bs3:tab>\n+<bs3:tab name=\"Similar to\">\n+    <bs3:row>\n+        <bs3:col span=\"12\">\n+            <c:collection defaultView=\"table\" id=\"similarTo\"/>\n+        </bs3:col>\n+    </bs3:row>\n+</bs3:tab>\n+<bs3:tab name=\"Dependencies\">\n+    <bs3:row>\n+        <bs3:col span=\"12\">\n+            <c:collection defaultView=\"table\" id=\"dependencies\">\n+                <c:action id=\"add\"/>\n+                <c:action id=\"remove\"/>\n+            </c:collection>\n+        </bs3:col>\n+    </bs3:row>\n+</bs3:tab>\n ----\n \n As with properties, actions can be associated with collections; this indicates that they should be rendered in the collection's header.\n@@ -283,13 +285,13 @@ This is accomplished using the following (slightly abbreviated) layout:\n <1> render the collection in \"calendar\" view\n <2> also render the collection in \"table\" view\n \n-In the middle column the `notYetComplete` collection is rendered in \"calendar\" view, while in the right-most column\n-it is rendered in \"table\" view.\n+In the middle column the `notYetComplete` collection is rendered in \"calendar\" view, while in the right-most column it is rendered in \"table\" view.\n \n \n It is also possible to reference object properties and actions more than once.\n This might be useful for a complex domain object with multiple tabs; certain properties or actions might appear on a summary tab (that shows the most commonly used info), but also on detail tabs.\n \n+\n === Custom CSS\n \n The ToDoApp's dashboard (above) also shows how custom CSS styles can be associated with specific regions of the layout:\n@@ -320,8 +322,8 @@ The ToDoApp's dashboard (above) also shows how custom CSS styles can be associat\n <2> Render the column with the `custom-padding-top-20` CSS class.\n <3> Ditto\n \n-For example the `custom-width-100` style is used to \"stretch\" the button for the `exportToWordDoc` action in the\n-left-most column.  This is accomplished with the following CSS in `application.css`:\n+For example the `custom-width-100` style is used to \"stretch\" the button for the `exportToWordDoc` action in the left-most column.\n+This is accomplished with the following CSS in `application.css`:\n \n [source,css]\n ----",
                "changes": 62,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_layout_file-based.adoc"
            },
            {
                "additions": 39,
                "sha": "6e4ca6fb06ab3803c21950e7fd996d5c3a9054ac",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout.adoc",
                "deletions": 0,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout.adoc?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -0,0 +1,39 @@\n+[[_ugvw_menubars-layout]]\n+= Menu Bars Layout\n+:Notice: Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at. http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n+:_basedir: ../../\n+:_imagesdir: images/\n+\n+\n+\n+The actions of domain services are made available as menu items on menus.\n+By default each domain service corresponds to a single menu on this menu bar, with its actions as the drop-down menu items.\n+This is rarely exactly what is required, however; it often makes sense to group menu items for similar domain services together.\n+\n+For example, the (non-ASF) link:http://platform.incode.org[Incode Platform^] modules provides services whose actions appear into two top-level menus:\n+\n+* its `ApplicationUsers`, `ApplicationRoles`, `ApplicationPermission`, `ApplicationFeatureViewModels` and `ApplicationTenancies` domain services are all grouped together in a single \"Security\" top-level menu, on the SECONDARY menu bar\n+\n+* its `MeService` domain service, which provides the `me()` action, is placed on the TERTIARY menu bar.\n+\n+\n+The menus themselves can be placed either on a primary, secondary or tertiary menu bar, as shown in this screenshot (taken from http://github.com/estatio/estatio[Estatio], an open source estate management application built using Apache Isis):\n+\n+image::{_imagesdir}application-menu/layout-menus.png[width=\"800px\",link=\"{_imagesdir}application-menu/layout-menus.png\"]\n+\n+Within a single top-level menu (eg \"Fixed Assets\") there can be actions from multiple services.\n+The Wicket viewer shows these as separate sections, with a divider between each:\n+\n+image::{_imagesdir}application-menu/dividers.png[width=\"400px\",link=\"{_imagesdir}application-menu/dividers.png\"]\n+\n+\n+The tertiary menu bar consists of a single unnamed menu, rendered underneath the user's login, top right.\n+This is intended primarily for actions pertaining to the user themselves, eg their account, profile or settings:\n+\n+image::{_imagesdir}application-menu/tertiary.png[width=\"300px\",link=\"{_imagesdir}application-menu/tertiary.png\"]\n+\n+\n+The Apache Isis framework provides two mechanisms to control the arrangement of domain service actions across menubars and menus, either using annotations or (as of `1.16.0-SNAPSHOT`) using a file-based layout.\n+\n+include::_ugvw_menubars-layout_annotation-based.adoc[leveloffset=+1]\n+include::_ugvw_menubars-layout_file-based.adoc[leveloffset=+1]",
                "changes": 39,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout.adoc"
            },
            {
                "additions": 126,
                "sha": "54f468b696e550b007f748916c9ffa979f8602d6",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_annotation-based.adoc",
                "deletions": 0,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_annotation-based.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_annotation-based.adoc?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -0,0 +1,126 @@\n+[[_ugvw_menubars-layout_annotation-based]]\n+= Annotation-based Menu Bars\n+:Notice: Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at. http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n+:_basedir: ../../\n+:_imagesdir: images/\n+\n+\n+\n+The annotations-based approach for arranging the placement of menu items is achieved through the xref:../rgant/rgant.adoc#_rgant-MemberOrder[`@MemberOrder`] and xref:../rgant/rgant.adoc#_rgant-DomainServiceLayout[`@DomainServiceLayout`] annotations.\n+\n+== @DomainServiceLayout\n+\n+In the example from Estatio shown above the top-level menu combines the actions from the `Properties`, `Units` and `FixedAssetRegistrations` services.\n+The `Properties` service is annotated:\n+\n+[source,java]\n+----\n+@DomainServiceLayout(\n+        named=\"Fixed Assets\",\n+        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n+        menuOrder = \"10.1\"\n+)\n+public class Properties ... { ... }\n+----\n+\n+while the `Units` service is annotated:\n+\n+[source,java]\n+----\n+@DomainServiceLayout(\n+        named=\"Fixed Assets\",\n+        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n+        menuOrder = \"10.2\"\n+)\n+public class Units ... { ... }\n+----\n+\n+and similarly `FixedAssetRegistrations` is annotated:\n+\n+[source,java]\n+----\n+@DomainServiceLayout(\n+        named=\"Fixed Assets\",\n+        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n+        menuOrder = \"10.3\"\n+)\n+public class FixedAssetRegistrations ... { ... }\n+----\n+\n+Note that in all three cases the value of the `named` attribute and the `menuBar` attribute is the same: \"Fixed Assets\" and PRIMARY.\n+This means that all will appear on a \"Fixed Assets\" menu in the primary menu bar.\n+\n+Meanwhile the value of `menuOrder` attribute is significant for two reasons:\n+\n+* for these three services on the same (\"Fixed Assets\") top-level menu, it determines the relative order of their sections (`Properties` first, then `Units`, then `FixedAssetRegistrations`)\n+\n+* it determines the placement of the top-level menu itself (\"Fixed Assets\") with respect to other top-level menus on the menu bar.\n+\n+To illustrate this latter point, the next top-level menu on the menu bar, \"Parties\", is placed after \"Fixed Assets\" because the `menuOrder` of the first of its domain services, namely the `Parties` service, is higher than that for \"Fixed Assets\":\n+\n+[source,java]\n+----\n+@DomainServiceLayout(\n+        named=\"Parties\",\n+        menuBar = DomainServiceLayout.MenuBar.PRIMARY,\n+        menuOrder = \"20.1\"\n+)\n+public class Parties ... { ... }\n+----\n+\n+Note that only the `menuOrder` of the _first_ domain service is significant in placing the menus along the menu bar; thereafter the purpose of the `menuOrder` is to order the menu services sections on the menu itself.\n+\n+\n+\n+== Ordering menu actions\n+\n+For a given service, the actions within a section on a menu is determined by the `@MemberOrder` annotation.\n+Thus, for the `Units` domain service, its actions are annotated:\n+\n+[source,java]\n+----\n+public class Units extends EstatioDomainService<Unit> {\n+\n+    @MemberOrder(sequence = \"1\")\n+    public Unit newUnit( ... ) { ... }\n+\n+    @MemberOrder(sequence = \"2\")\n+    public List<Unit> findUnits( ... ) { ... }\n+\n+    @ActionLayout( prototype = true )\n+    @MemberOrder(sequence = \"99\")\n+    public List<Unit> allUnits() { ... }\n+    ...\n+}\n+----\n+\n+Note that the last is also a prototype action (meaning it is only displayed in SERVER_PROTOTYPE (=Wicket Development) mode).\n+In the UI it is rendered in italics.\n+\n+\n+\n+== Tertiary Menu\n+\n+\n+Domain services' actions can be associated with the tertiary menu using the same `@DomainServiceLayout` annotation, but be aware that the `@DomainServiceLayout#name()` attribute will be ignored (there is only one effective menu).\n+\n+For example, the `updateEpochDate(...)` and `listAllSettings(...)` actions come from the following service:\n+\n+[source,java]\n+----\n+@DomainServiceLayout(\n+        menuBar = DomainServiceLayout.MenuBar.TERTIARY,\n+        menuOrder = \"10.1\"\n+)\n+public class EstatioAdministrationService ... {\n+\n+    @MemberOrder(sequence = \"1\")\n+    public void updateEpochDate( ... ) { ... }\n+\n+    @MemberOrder(sequence = \"2\")\n+    public List<ApplicationSetting> listAllSettings() { ... }\n+    ...\n+}\n+----\n+\n+Because the number of items on the tertiary menu is expected to be small and most will pertain to the current user, the viewer does _not_ place dividers between actions from different services on the tertiary menu.",
                "changes": 126,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_annotation-based.adoc"
            },
            {
                "additions": 105,
                "sha": "ae972a5c40a971647db636494a6ca8cd94ded54f",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_file-based.adoc",
                "deletions": 0,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_file-based.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_file-based.adoc?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -0,0 +1,105 @@\n+[[_ugvw_menubars-layout_file-based]]\n+= File-based Menu Bars (`1.16.0-SNAPSHOT`)\n+:Notice: Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at. http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n+:_basedir: ../../\n+:_imagesdir: images/\n+\n+\n+(As of `1.16.0-SNAPSHOT`) the domain service actions can be arranged across menu items using the `menubars.layout.xml` file.\n+Not only is this easier to work with, it also can be reloaded dynamically (if in prototype mode), substantially redu.\n+\n+As for xref:ugvw.adoc#_ugvw_layout_file-based[file-based object layouts], this offers a number of benefits:\n+\n+* Probably most significantly, the layout can be updated without requiring a recompile of the code and redeploy of the app; fine-tuning the layout with your end users is easy to do\n+\n+* Many developers also find it easier to rationalize about menu bars layout when all the hints are collated together in a single place (rather than scattered across the domain service classes as annotations).\n+\n+There are some disadvantages to using file-based layouts:\n+\n+* file-based layouts are not typesafe: a typo will result in the metadata not being picked up for the element.\n+\n+* they also suffer from syntactic fragility: an invalid XML document will result in no metadata for the entire class.\n+\n+The `menubars.layout.xml` file is just the serialized form of a xref:../rgcms/rgcms.adoc#_rgcms_classes_layout[`MenuBars`] layout class defined within Apache Isis' applib.\n+These are JAXB-annotated classes with corresponding XSD schemas; the upshot of that\n+is that IDEs such as IntelliJ and Eclipse can provide \"intellisense\", making it easy to author such layout files.\n+\n+\n+== Obtaining an initial layout\n+\n+An initial `menubars.layout.xml` - capturing any existing metadata either implicit or explicitly specified through annotations can be downloaded from the xref:../rgsvc/rgsvc.adoc#_rgsvc_metadata-api_MenuBarsService[`MenuBarsService`] (exposed on the prototyping menu):\n+\n+image::{_imagesdir}/menubars/010-download.png[width=\"300px\",link=\"{_imagesdir}/menubars/010-download.png\"]\n+\n+\n+This action allows either the \"Default\" or the \"Fallback\" layout to be downloaded.\n+\n+image::{_imagesdir}/menubars/020-download.png[width=\"400px\",link=\"{_imagesdir}/menubars/020-download.png\"]\n+\n+The \"Default\" layout is that currently in use, while the \"Fallback\" layout is that provided only from the annotations.\n+Initially these are identical.\n+\n+For example, here's a fragment of that provided by the simpleapp archetype:\n+\n+[source,xml]\n+----\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<mb3:menuBars\n+    xsi:schemaLocation=\"...\"\n+    xmlns:cpt=\"http://isis.apache.org/applib/layout/component\"\n+    xmlns:lnk=\"http://isis.apache.org/applib/layout/links\"\n+    xmlns:mb3=\"http://isis.apache.org/applib/layout/menubars/bootstrap3\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <mb3:primary>\n+        <mb3:menu>\n+            <mb3:named>Simple Objects</mb3:named>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"simple.SimpleObjectMenu\" id=\"listAll\">\n+                    <cpt:named>List All</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"simple.SimpleObjectMenu\" id=\"findByName\">\n+                    <cpt:named>Find By Name</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"simple.SimpleObjectMenu\" id=\"create\">\n+                    <cpt:named>Create</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+        </mb3:menu>\n+        <mb3:menu unreferencedActions=\"true\">\n+            <mb3:named>Other</mb3:named>\n+        </mb3:menu>\n+    </mb3:primary>\n+    <mb3:secondary>\n+        <mb3:menu>\n+            <mb3:named>Prototyping</mb3:named>\n+            ...\n+    </mb3:secondary>\n+    <mb3:tertiary>\n+        <mb3:menu>\n+            ...\n+        </mb3:menu>\n+    </mb3:tertiary>\n+</mb3:menuBars>\n+----\n+\n+Note the \"Other\" menu, with `unreferencedActions` attribute set to `true`.\n+For a layout file to be valid there must be exactly one `<menu>` with this attribute set.\n+Any domain service actions that are not explicitly listed will be placed under this menu.\n+\n+\n+== Adjusting the layout\n+\n+The downloaded `menubars.layout.xml` file can be adjusted as necessary, creating new menus and menu sections.\n+Once done, it can be saved in the same package as the `AppManifest` used to bootstrap the application.\n+Subsequently, the file is then parsed and used when the application is started.\n+\n+If running in prototype mode, the file will be dynamically reloaded from the classpath.\n+\n+Once the application has bootstrapped with a layout file, downloading the \"Default\" layout (from the prototyping menu) in essence just returns this file.\n+\n+[TIP]\n+====\n+If, when the application is run, unwanted service actions are shown in the \"Other\" menu (which you would like to place elsewhere), then download the \"Default\" layout again.\n+The downloaded file will list out all these domain service actions, so that they can easily be moved elsewhere.\n+====\n+",
                "changes": 105,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/_ugvw_menubars-layout_file-based.adoc"
            },
            {
                "additions": 0,
                "sha": "4c79f7375baca08b44f46a3fa0e9dca4fcdae055",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/010-download.png",
                "deletions": 0,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/010-download.png",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/010-download.png?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "changes": 0,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/010-download.png"
            },
            {
                "additions": 0,
                "sha": "52100ece097a5a238d885da5e6e7b6a03cef3cda",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/020-download.png",
                "deletions": 0,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/020-download.png",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/020-download.png?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "changes": 0,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/images/menubars/020-download.png"
            },
            {
                "additions": 1,
                "sha": "8c69e4055c5cff6473835481e8d8dba6e8b30856",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/ugvw.adoc",
                "deletions": 0,
                "filename": "adocs/documentation/src/main/asciidoc/guides/ugvw/ugvw.adoc",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/adocs/documentation/src/main/asciidoc/guides/ugvw/ugvw.adoc?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -52,6 +52,7 @@ The remaining guides are:\n \n include::_ugvw_features.adoc[leveloffset=+1]\n include::_ugvw_layout.adoc[leveloffset=+1]\n+include::_ugvw_menubars-layout.adoc[leveloffset=+1]\n include::_ugvw_configuration-properties.adoc[leveloffset=+1]\n include::_ugvw_customisation.adoc[leveloffset=+1]\n include::_ugvw_extending.adoc[leveloffset=+1]",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/adocs/documentation/src/main/asciidoc/guides/ugvw/ugvw.adoc"
            },
            {
                "additions": 2,
                "sha": "cae713f754091a76068d1e35be3b6667203882c1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/core/runtime/src/main/java/org/apache/isis/core/runtime/services/menubars/bootstrap3/MenuBarsServiceBS3.java",
                "deletions": 0,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/services/menubars/bootstrap3/MenuBarsServiceBS3.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/services/menubars/bootstrap3/MenuBarsServiceBS3.java?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -101,6 +101,8 @@ public BS3MenuBars menuBars(final Type type) {\n \n             BS3MenuBars menuBars = menuBarsLoaderService.menuBars();\n \n+            menuBars.setTnsAndSchemaLocation(tnsAndSchemaLocation());\n+\n             final BS3Menu unreferencedActionsMenu = validate(menuBars);\n \n             if (unreferencedActionsMenu != null) {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/core/runtime/src/main/java/org/apache/isis/core/runtime/services/menubars/bootstrap3/MenuBarsServiceBS3.java"
            },
            {
                "additions": 91,
                "sha": "d81b2696ed353b3b829e0059c0a00336530fccdc",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/56c0195f891c6639696fd63fe1a72f49bc5dcf76/example/application/simpleapp/application/src/main/java/domainapp/application/manifest/menubars.layout.xml",
                "deletions": 0,
                "filename": "example/application/simpleapp/application/src/main/java/domainapp/application/manifest/menubars.layout.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simpleapp/application/src/main/java/domainapp/application/manifest/menubars.layout.xml?ref=56c0195f891c6639696fd63fe1a72f49bc5dcf76",
                "patch": "@@ -0,0 +1,91 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<mb3:menuBars xsi:schemaLocation=\"http://isis.apache.org/applib/layout/menubars/bootstrap3 http://isis.apache.org/applib/layout/menubars/bootstrap3/menubars.xsd http://isis.apache.org/applib/layout/component http://isis.apache.org/applib/layout/component/component.xsd http://isis.apache.org/applib/layout/links http://isis.apache.org/applib/layout/links/links.xsd\" xmlns:cpt=\"http://isis.apache.org/applib/layout/component\" xmlns:lnk=\"http://isis.apache.org/applib/layout/links\" xmlns:mb3=\"http://isis.apache.org/applib/layout/menubars/bootstrap3\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <mb3:primary>\n+        <mb3:menu>\n+            <mb3:named>Simple Objects</mb3:named>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"simple.SimpleObjectMenu\" id=\"create\">\n+                    <cpt:named>Create</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"simple.SimpleObjectMenu\" id=\"findByName\">\n+                    <cpt:named>Find By Name</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"simple.SimpleObjectMenu\" id=\"listAll\">\n+                    <cpt:named>List All</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+        </mb3:menu>\n+        <mb3:menu unreferencedActions=\"true\">\n+            <mb3:named>Other</mb3:named>\n+        </mb3:menu>\n+    </mb3:primary>\n+    <mb3:secondary>\n+        <mb3:menu>\n+            <mb3:named>Prototyping</mb3:named>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"isisApplib.FixtureScriptsDefault\" id=\"runFixtureScript\">\n+                    <cpt:named>Run Fixture Script</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.FixtureScriptsDefault\" id=\"runFixtureScriptWithAutoComplete\">\n+                    <cpt:named>Run Fixture Script</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.FixtureScriptsDefault\" id=\"recreateObjectsAndReturnFirst\">\n+                    <cpt:named>Recreate Objects And Return First</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"isisApplib.LayoutServiceMenu\" id=\"downloadLayouts\">\n+                    <cpt:named>Download Object Layouts (ZIP)</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.LayoutServiceMenu\" id=\"downloadMenuBarsLayout\">\n+                    <cpt:named>Download Menu Bars Layout (XML)</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"isisApplib.MetaModelServicesMenu\" id=\"downloadMetaModel\">\n+                    <cpt:named>Download Meta Model (CSV)</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"isisApplib.SwaggerServiceMenu\" id=\"openSwaggerUi\">\n+                    <cpt:named>Open Swagger Ui</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.SwaggerServiceMenu\" id=\"openRestApi\">\n+                    <cpt:named>Open Rest Api</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.SwaggerServiceMenu\" id=\"downloadSwaggerSchemaDefinition\">\n+                    <cpt:named>Download Swagger Schema Definition</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"isisApplib.TranslationServicePoMenu\" id=\"downloadTranslations\">\n+                    <cpt:named>Download Translations</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.TranslationServicePoMenu\" id=\"resetTranslationCache\">\n+                    <cpt:named>Clear translation cache</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.TranslationServicePoMenu\" id=\"switchToReadingTranslations\">\n+                    <cpt:named>Switch To Reading Translations</cpt:named>\n+                </mb3:serviceAction>\n+                <mb3:serviceAction objectType=\"isisApplib.TranslationServicePoMenu\" id=\"switchToWritingTranslations\">\n+                    <cpt:named>Switch To Writing Translations</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"isisApplib.HsqlDbManagerMenu\" id=\"hsqlDbManager\">\n+                    <cpt:named>HSQL DB Manager</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+        </mb3:menu>\n+    </mb3:secondary>\n+    <mb3:tertiary>\n+        <mb3:menu>\n+            <mb3:named>Configuration Service Menu</mb3:named>\n+            <mb3:section>\n+                <mb3:serviceAction objectType=\"isisApplib.ConfigurationServiceMenu\" id=\"configuration\">\n+                    <cpt:named>Configuration</cpt:named>\n+                </mb3:serviceAction>\n+            </mb3:section>\n+        </mb3:menu>\n+    </mb3:tertiary>\n+</mb3:menuBars>",
                "changes": 91,
                "blob_url": "https://github.com/apache/isis/blob/56c0195f891c6639696fd63fe1a72f49bc5dcf76/example/application/simpleapp/application/src/main/java/domainapp/application/manifest/menubars.layout.xml"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1766: updates docs for menubars, and fixes an NPE",
        "commit": "https://github.com/apache/isis/commit/56c0195f891c6639696fd63fe1a72f49bc5dcf76"
    },
    {
        "parent": "https://github.com/apache/isis/commit/e866c71dac85b81d0cc81c9c9eb0e4995f2eab88",
        "bug_id": "isis_22",
        "file": [
            {
                "additions": 8,
                "sha": "c83798b6b71c3a716ae13d71643ab6b6d23e3b6c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/f2da845e17bab3b8091b369f7a6a62967f8bef14/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/ExceptionMapperForRuntimeException.java",
                "deletions": 5,
                "filename": "core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/ExceptionMapperForRuntimeException.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/ExceptionMapperForRuntimeException.java?ref=f2da845e17bab3b8091b369f7a6a62967f8bef14",
                "patch": "@@ -26,6 +26,7 @@\n import com.google.common.base.Throwables;\n \n import org.apache.isis.core.runtime.system.context.IsisContext;\n+import org.apache.isis.core.runtime.system.session.IsisSession;\n import org.apache.isis.core.runtime.system.session.IsisSessionFactory;\n import org.apache.isis.core.runtime.system.transaction.IsisTransaction;\n \n@@ -35,15 +36,17 @@\n     @Override\n     public Response toResponse(final RuntimeException ex) {\n \n-        // since already rendered...\n-        final IsisTransaction currentTransaction = getIsisSessionFactory().getCurrentSession()\n-                .getPersistenceSession().getTransactionManager().getCurrentTransaction();\n-\n         final Throwable rootCause = Throwables.getRootCause(ex);\n         final List<Throwable> causalChain = Throwables.getCausalChain(ex);\n         for (Throwable throwable : causalChain) {\n             if(throwable == rootCause) {\n-                currentTransaction.clearAbortCause();\n+                // since already rendered...\n+                final IsisSession currentSession = getIsisSessionFactory().getCurrentSession();\n+                if(currentSession != null) {\n+                    final IsisTransaction currentTransaction = currentSession\n+                            .getPersistenceSession().getTransactionManager().getCurrentTransaction();\n+                    currentTransaction.clearAbortCause();\n+                }\n             }\n         }\n ",
                "changes": 13,
                "blob_url": "https://github.com/apache/isis/blob/f2da845e17bab3b8091b369f7a6a62967f8bef14/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/ExceptionMapperForRuntimeException.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1831: adds a guard in exception handler of a RuntimeException (REST API) to avoid throwing an NPE there.",
        "commit": "https://github.com/apache/isis/commit/f2da845e17bab3b8091b369f7a6a62967f8bef14"
    },
    {
        "parent": "https://github.com/apache/isis/commit/43f84745b3c3890259c413e64c2eca511b8dac9d",
        "bug_id": "isis_23",
        "file": [
            {
                "additions": 0,
                "sha": "a5759e3b944bb15b392067c6ec62a6d7c2b9ed83",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/92888b591e766fbb15b88dd7c43716b7af691915/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java",
                "deletions": 11,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java?ref=92888b591e766fbb15b88dd7c43716b7af691915",
                "patch": "@@ -51,17 +51,6 @@ public T build(\n         return (T)executionContext.executeChildT(parentFixtureScript, this);\n     }\n \n-    @Programmatic\n-    public T build(ExecutionContext executionContext) {\n-\n-        final FixtureScript anonymousParent = new FixtureScript() {\n-            @Override\n-            protected void execute(ExecutionContext executionContext) { }\n-        };\n-\n-        return build(anonymousParent, executionContext);\n-    }\n-\n \n }\n ",
                "changes": 11,
                "blob_url": "https://github.com/apache/isis/blob/92888b591e766fbb15b88dd7c43716b7af691915/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1784: removes BuilderFixtureScript#build (1 arg version)\n\nsince NPEs: requires calling fixture script to be injected into",
        "commit": "https://github.com/apache/isis/commit/92888b591e766fbb15b88dd7c43716b7af691915"
    },
    {
        "parent": "https://github.com/apache/isis/commit/a5eb0d8669951a22c70bd1e3b04874cf7ce15f3b",
        "bug_id": "isis_24",
        "file": [
            {
                "additions": 2,
                "sha": "f701c03a727bbf0c8a883d18b13ec1ec65d32f9f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/dda922cce63c9442dc5a6aefd1a6a53e6e915796/core/applib/src/main/java/org/apache/isis/applib/PropertyResource.java",
                "deletions": 3,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/PropertyResource.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/PropertyResource.java?ref=dda922cce63c9442dc5a6aefd1a6a53e6e915796",
                "patch": "@@ -18,7 +18,6 @@\n  */\n package org.apache.isis.applib;\n \n-import java.io.IOException;\n import java.io.InputStream;\n import java.util.Map;\n import java.util.Properties;\n@@ -53,9 +52,9 @@ void loadPropsInto(\n                     }\n                 }\n             }\n-        } catch (IOException e) {\n+        } catch (Exception e) {\n             throw new RuntimeException(\n-                    String.format(\"Failed to load '%s' file \", this), e);\n+                    String.format(\"Failed to load '%s' file relative to %s\", getPropertiesFile(), getPropertiesFileContext().getName()), e);\n         }\n     }\n }",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/dda922cce63c9442dc5a6aefd1a6a53e6e915796/core/applib/src/main/java/org/apache/isis/applib/PropertyResource.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1835: catches any type of exception in order to report a problem (an NPE was being thrown if the file wasn't present, rather than an IOException)",
        "commit": "https://github.com/apache/isis/commit/dda922cce63c9442dc5a6aefd1a6a53e6e915796"
    },
    {
        "parent": "https://github.com/apache/isis/commit/0a7c4ca581a286cc56a314c243d147b8bd93deb4",
        "bug_id": "isis_25",
        "file": [
            {
                "additions": 5,
                "sha": "5b6a9f5ee92b28e629b5385a3f3d75d4faaccdf3",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/eb9b70dab4d514b70911885338f622ff816f31ce/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationMixedIn.java",
                "deletions": 0,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationMixedIn.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationMixedIn.java?ref=eb9b70dab4d514b70911885338f622ff816f31ce",
                "patch": "@@ -187,6 +187,11 @@ protected FacetHolder getFacetHolder() {\n         return facetHolder;\n     }\n \n+    @Override\n+    public ObjectSpecification getOnType() {\n+        return mixedInType;\n+    }\n+\n     @Override\n     public ObjectSpecification getMixinType() {\n         return getSpecificationLoader().loadSpecification(mixinType);",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/eb9b70dab4d514b70911885338f622ff816f31ce/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationMixedIn.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1812: implements getOnType for OTOA on mixed in, avoiding NPE when attempt to render such a property in a table.",
        "commit": "https://github.com/apache/isis/commit/eb9b70dab4d514b70911885338f622ff816f31ce"
    },
    {
        "parent": "https://github.com/apache/isis/commit/7ea0197e435a2dca5bfd0dab708e362092465f4b",
        "bug_id": "isis_26",
        "file": [
            {
                "additions": 2,
                "sha": "666b690cf4779a6eddb926c15b87d85eda270d0d",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/b24b2fe8b7eb6c20025cfbe254d73abf00a41772/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ServiceActionsModel.java",
                "deletions": 1,
                "filename": "core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ServiceActionsModel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ServiceActionsModel.java?ref=b24b2fe8b7eb6c20025cfbe254d73abf00a41772",
                "patch": "@@ -61,7 +61,8 @@ public ServiceActionsModel(final DomainServiceLayout.MenuBar menuBar) {\n             public boolean apply(ObjectAdapter input) {\n                 final DomainServiceLayoutFacet facet = input.getSpecification().getFacet\n                         (DomainServiceLayoutFacet.class);\n-                return facet != null && facet.getMenuBar() == menuBar;\n+                return (facet != null && facet.getMenuBar() == menuBar) ||\n+                       (facet == null && menuBar == DomainServiceLayout.MenuBar.PRIMARY);\n             }\n         };\n     }",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/b24b2fe8b7eb6c20025cfbe254d73abf00a41772/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/ServiceActionsModel.java"
            },
            {
                "additions": 4,
                "sha": "0ba7e42a8c3734806cf776bd1cacfc7ee6b30e10",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/b24b2fe8b7eb6c20025cfbe254d73abf00a41772/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java",
                "deletions": 1,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java?ref=b24b2fe8b7eb6c20025cfbe254d73abf00a41772",
                "patch": "@@ -49,6 +49,7 @@\n import org.apache.isis.core.metamodel.services.ServicesInjector;\n import org.apache.isis.core.metamodel.spec.feature.ObjectAction;\n import org.apache.isis.core.runtime.system.IsisSystem;\n+import org.apache.isis.core.runtime.system.context.IsisContext;\n import org.apache.isis.core.runtime.system.persistence.PersistenceSession;\n import org.apache.isis.core.runtime.system.session.IsisSessionFactoryBuilder;\n import org.apache.isis.viewer.wicket.model.models.EntityModel;\n@@ -206,7 +207,9 @@ protected void populateItem(ListItem<CssMenuItem> listItem) {\n         // TODO: remove hard-coded dependency on BS3\n         final BS3MenuBar menuBar = (BS3MenuBar) menuBars.menuBarFor(serviceActionsModel.getMenuBar());\n \n-        final List<ObjectAdapter> serviceAdapters = serviceActionsModel.getObject();\n+        // we no longer use ServiceActionsModel#getObject() because the model only holds the services for the\n+        // menuBar in question, whereas the \"Other\" menu may reference a service which is defined for some other menubar\n+        final List<ObjectAdapter> serviceAdapters = IsisContext.getSessionFactory().getCurrentSession().getPersistenceSession().getServices();\n         final ImmutableMap<ObjectAdapter, String> oidByServiceAdapter = FluentIterable.from(serviceAdapters)\n                 .toMap(new Function<ObjectAdapter, String>() {\n                     @Override",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/b24b2fe8b7eb6c20025cfbe254d73abf00a41772/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actionmenu/serviceactions/ServiceActionUtil.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1765: fixes issue where non-referenced action was associated with a different menubar to the menubar of the owning service\n\nresulting in an NPE",
        "commit": "https://github.com/apache/isis/commit/b24b2fe8b7eb6c20025cfbe254d73abf00a41772"
    },
    {
        "parent": "https://github.com/apache/isis/commit/4a00684e5cfc8d6a4b0ce4cbe22d2b8001964c13",
        "bug_id": "isis_27",
        "file": [
            {
                "additions": 1,
                "sha": "85107cfba42ac0fa2a7a3bce2e8b631f44ff87ca",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/737c0a2c58c90b288f21f7d3c7f34f0a28ad1947/core/viewer-wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityModel.java",
                "deletions": 1,
                "filename": "core/viewer-wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityModel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityModel.java?ref=737c0a2c58c90b288f21f7d3c7f34f0a28ad1947",
                "patch": "@@ -162,7 +162,7 @@ public EntityModel(final ObjectAdapterMemento adapterMemento) {\n         this.pendingModel = new PendingModel(this);\n     }\n \n-    private static String oidStr(final PageParameters pageParameters) {\n+    public static String oidStr(final PageParameters pageParameters) {\n         return PageParameterNames.OBJECT_OID.getStringFrom(pageParameters);\n     }\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/737c0a2c58c90b288f21f7d3c7f34f0a28ad1947/core/viewer-wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityModel.java"
            },
            {
                "additions": 20,
                "sha": "83c587217cddccf537322d11f558426a98bed7a9",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/737c0a2c58c90b288f21f7d3c7f34f0a28ad1947/core/viewer-wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java",
                "deletions": 2,
                "filename": "core/viewer-wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java?ref=737c0a2c58c90b288f21f7d3c7f34f0a28ad1947",
                "patch": "@@ -20,10 +20,13 @@\n package org.apache.isis.viewer.wicket.ui.pages.entity;\n \n import java.util.List;\n+import org.apache.wicket.Application;\n+import org.apache.wicket.RestartResponseException;\n import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.util.string.Strings;\n import org.apache.isis.applib.annotation.Where;\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n@@ -64,9 +67,24 @@\n      * {@link BookmarkablePageLink bookmarkable} links.\n      */\n     public EntityPage(final PageParameters pageParameters) {\n-        this(pageParameters, new EntityModel(pageParameters));\n+        this(pageParameters, createEntityModel(pageParameters));\n     }\n-    \n+\n+    /**\n+     * Creates an EntityModel from the given page parameters.\n+     * Redirects to the application home page if there is no OID in the parameters.\n+     *\n+     * @param parameters The page parameters with the OID\n+     * @return An EntityModel for the requested OID\n+     */\n+    private static EntityModel createEntityModel(final PageParameters parameters) {\n+        String oid = EntityModel.oidStr(parameters);\n+        if (Strings.isEmpty(oid)) {\n+            throw new RestartResponseException(Application.get().getHomePage());\n+        }\n+        return new EntityModel(parameters);\n+    }\n+\n     private EntityPage(final PageParameters pageParameters, final EntityModel entityModel) {\n         this(pageParameters, entityModel, null);\n     }",
                "changes": 22,
                "blob_url": "https://github.com/apache/isis/blob/737c0a2c58c90b288f21f7d3c7f34f0a28ad1947/core/viewer-wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java"
            }
        ],
        "repo": "isis",
        "message": "IsisISIS-1111 Trying to load an entity with wrong/non-existing OID fails with NullPointerException",
        "commit": "https://github.com/apache/isis/commit/737c0a2c58c90b288f21f7d3c7f34f0a28ad1947"
    },
    {
        "parent": "https://github.com/apache/isis/commit/0c2a2a05d8497cc40a14e750791d0d1d7d76688c",
        "bug_id": "isis_28",
        "file": [
            {
                "additions": 1,
                "sha": "862c2d8aa02c487101791354df9e97c2c8a6c20e",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ad841f974943ce161db152b5fc99b92583d536ea/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/entity/ExceptionDetail.java",
                "deletions": 1,
                "filename": "core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/entity/ExceptionDetail.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/entity/ExceptionDetail.java?ref=ad841f974943ce161db152b5fc99b92583d536ea",
                "patch": "@@ -77,7 +77,7 @@ private static Throwable causeOf(Throwable ex) {\n         if (ex instanceof JDOException) {\n             final JDOException jdoException = (JDOException) ex;\n             final Throwable[] nestedExceptions = jdoException.getNestedExceptions();\n-            return nestedExceptions.length > 0? nestedExceptions[0]: null;\n+            return nestedExceptions != null && nestedExceptions.length > 0? nestedExceptions[0]: null;\n         }\n         else {\n             return ex.getCause();",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/ad841f974943ce161db152b5fc99b92583d536ea/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/mappers/entity/ExceptionDetail.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1836: removes chance of an NPE in the RO mapper for an exception (which was in turn resulting in a 500 rather than 422 when invoked an action with an incorrect parameter argument).",
        "commit": "https://github.com/apache/isis/commit/ad841f974943ce161db152b5fc99b92583d536ea"
    },
    {
        "parent": "https://github.com/apache/isis/commit/ed62ace5d67368b69a85f155193f5d63be94a315",
        "bug_id": "isis_29",
        "file": [
            {
                "additions": 1,
                "sha": "792521b1f87ca6db9d8d8b7adec4ef0313cc7b62",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/e843c0ad0ced78df948253d74fed744d0bcefd85/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java?ref=e843c0ad0ced78df948253d74fed744d0bcefd85",
                "patch": "@@ -1166,7 +1166,7 @@ private void addMixedInActionsIfAny(\n             }\n             final ObjectActionDefault mixinAction = (ObjectActionDefault) mixinTypeAction;\n             final NotContributedFacet notContributedFacet = mixinAction.getFacet(NotContributedFacet.class);\n-            if(notContributedFacet.toActions()) {\n+            if(notContributedFacet != null && notContributedFacet.toActions()) {\n                 continue;\n             }\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/e843c0ad0ced78df948253d74fed744d0bcefd85/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1602: prevent NPE for mixins which are missing the NonContributedFacet",
        "commit": "https://github.com/apache/isis/commit/e843c0ad0ced78df948253d74fed744d0bcefd85"
    },
    {
        "parent": "https://github.com/apache/isis/commit/8da4a6f08a4ec403768a30bf8b57f0a4e4f61617",
        "bug_id": "isis_30",
        "file": [
            {
                "additions": 34,
                "sha": "0e7214150d29d891ee26d363f47582db91cfac0a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/aedbd56b17e0f22207433a7f17d39bab4b23cbaf/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java",
                "deletions": 12,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java?ref=aedbd56b17e0f22207433a7f17d39bab4b23cbaf",
                "patch": "@@ -1405,26 +1405,48 @@ private void ensureMapsConsistent(final Oid oid) {\n \n     private void ensurePojoAdapterMapConsistent(final ObjectAdapter adapter) {\n         final Object adapterPojo = adapter.getObject();\n-        final ObjectAdapter adapterAccordingToPojoAdapterMap = pojoAdapterMap.getAdapter(adapterPojo);\n-        // take care not to touch the pojo, since it might have been deleted.\n-        ensureThatArg(\n-                adapter, is(adapterAccordingToPojoAdapterMap),\n-                \"mismatch in PojoAdapterMap: provided adapter's OID: \" + adapter.getOid() + \"; \\n\"\n-                        + \" but map's adapter's OID was : \" + adapterAccordingToPojoAdapterMap.getOid());\n+        final ObjectAdapter adapterAccordingToMap = pojoAdapterMap.getAdapter(adapterPojo);\n+\n+        if(adapterPojo == null) {\n+            // nothing to check\n+            return;\n+        }\n+        ensureMapConsistent(adapter, adapterAccordingToMap, \"PojoAdapterMap\");\n     }\n \n     private void ensureOidAdapterMapConsistent(final ObjectAdapter adapter) {\n         final Oid adapterOid = adapter.getOid();\n-        final ObjectAdapter adapterAccordingToOidAdapterMap = oidAdapterMap\n-                .getAdapter(adapterOid);\n+        final ObjectAdapter adapterAccordingToMap = oidAdapterMap.getAdapter(adapterOid);\n+\n+        if(adapterOid == null) {\n+            // nothing to check\n+            return;\n+        }\n+        ensureMapConsistent(adapter, adapterAccordingToMap, \"OidAdapterMap\");\n+    }\n+\n+    private void ensureMapConsistent(\n+            final ObjectAdapter adapter,\n+            final ObjectAdapter adapterAccordingToMap,\n+            final String mapName) {\n+\n+        final Oid adapterOid = adapter.getOid();\n+\n         // take care not to touch the pojo, since it might have been deleted.\n+\n+        if(adapterAccordingToMap == null) {\n+            throw new IllegalStateException(\"mismatch in \"\n+                    + mapName\n+                    + \": provided adapter's OID: \" + adapterOid + \"; but no adapter found in map\");\n+        }\n         ensureThatArg(\n-                adapter, is(adapterAccordingToOidAdapterMap),\n-                \"mismatch in OidAdapter map: \" + \"adapter's Oid: \" + adapterOid + \", \" + \"provided adapter's OID: \"\n-                        + adapter.getOid() + \"; \" + \"map's adapter's Oid: \" + adapterAccordingToOidAdapterMap.getOid());\n+                adapter, is(adapterAccordingToMap),\n+                \"mismatch in \"\n+                        + mapName\n+                        + \": provided adapter's OID: \" + adapterOid + \", \\n\"\n+                        + \"but map's adapter's OID was: \" + adapterAccordingToMap.getOid());\n     }\n \n-\n     public ObjectAdapter adapterForAny(RootOid rootOid) {\n \n         final ObjectSpecId specId = rootOid.getObjectSpecId();",
                "changes": 46,
                "blob_url": "https://github.com/apache/isis/blob/aedbd56b17e0f22207433a7f17d39bab4b23cbaf/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1246: improving the diagnostics for NPE.",
        "commit": "https://github.com/apache/isis/commit/aedbd56b17e0f22207433a7f17d39bab4b23cbaf"
    },
    {
        "parent": "https://github.com/apache/isis/commit/7864506fab5c4aa9599d220e9b0481f8eb2511d5",
        "bug_id": "isis_31",
        "file": [
            {
                "additions": 1,
                "sha": "80fe4cea3456a6893c834be058ca31f0e9be1a34",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/annotation/Programmatic.java",
                "deletions": 1,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/annotation/Programmatic.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/annotation/Programmatic.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -44,7 +44,7 @@\n  * being discouraged because of the name clash with <tt>org.junit.Ignore</tt>).\n  */\n @Inherited\n-@Target({ ElementType.METHOD, ElementType.TYPE })\n+@Target({ ElementType.METHOD, ElementType.TYPE, ElementType.FIELD })\n @Retention(RetentionPolicy.RUNTIME)\n public @interface Programmatic {\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/annotation/Programmatic.java"
            },
            {
                "additions": 1,
                "sha": "ff5fa4d9ad4f7dea67794dee0f39761ce1a98397",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java",
                "deletions": 0,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -24,6 +24,7 @@\n \n import org.apache.isis.applib.annotation.Programmatic;\n \n+@Programmatic\n public abstract class BuilderScriptAbstract<T,F extends BuilderScriptAbstract<T,F>>\n         extends FixtureScript implements WithPrereqs<T,F>, FixtureScriptWithExecutionStrategy {\n ",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/BuilderScriptAbstract.java"
            },
            {
                "additions": 2,
                "sha": "e09c5b4f4a4972b6c24a127c093114c1136d4c93",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/ClockFixture.java",
                "deletions": 0,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/ClockFixture.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/ClockFixture.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -23,12 +23,14 @@\n import org.joda.time.format.DateTimeFormat;\n import org.joda.time.format.DateTimeFormatter;\n \n+import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.clock.Clock;\n import org.apache.isis.applib.fixtures.FixtureClock;\n import org.apache.isis.applib.fixturescripts.FixtureScript;\n import org.apache.isis.applib.fixturescripts.FixtureScriptWithExecutionStrategy;\n import org.apache.isis.applib.fixturescripts.FixtureScripts;\n \n+@Programmatic\n class ClockFixture extends FixtureScript implements FixtureScriptWithExecutionStrategy {\n \n     static ClockFixture setTo(final String date) {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/ClockFixture.java"
            },
            {
                "additions": 2,
                "sha": "c4d372003c8161e59b3d28badf97d544d3bcd314",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/TickingClockFixture.java",
                "deletions": 0,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/TickingClockFixture.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/TickingClockFixture.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -23,6 +23,7 @@\n import org.joda.time.format.DateTimeFormat;\n import org.joda.time.format.DateTimeFormatter;\n \n+import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.clock.Clock;\n import org.apache.isis.applib.fixtures.FixtureClock;\n import org.apache.isis.applib.fixtures.TickingFixtureClock;\n@@ -31,6 +32,7 @@\n import org.apache.isis.applib.fixturescripts.FixtureScripts;\n \n \n+@Programmatic\n public class TickingClockFixture\n         extends FixtureScript\n         implements FixtureScriptWithExecutionStrategy {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/clock/TickingClockFixture.java"
            },
            {
                "additions": 2,
                "sha": "55061a54939083503638763214184256fe5574b9",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/setup/PersonaEnumPersistAll.java",
                "deletions": 0,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/fixturescripts/setup/PersonaEnumPersistAll.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/setup/PersonaEnumPersistAll.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -22,12 +22,14 @@\n \n import com.google.common.collect.Lists;\n \n+import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.fixturescripts.BuilderScriptAbstract;\n import org.apache.isis.applib.fixturescripts.FixtureScript;\n import org.apache.isis.applib.fixturescripts.FixtureScriptWithExecutionStrategy;\n import org.apache.isis.applib.fixturescripts.FixtureScripts;\n import org.apache.isis.applib.fixturescripts.PersonaWithBuilderScript;\n \n+@Programmatic\n public class PersonaEnumPersistAll<E extends Enum<E> & PersonaWithBuilderScript<T,F>, T, F extends BuilderScriptAbstract<T,F>>\n         extends FixtureScript\n         implements FixtureScriptWithExecutionStrategy {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/setup/PersonaEnumPersistAll.java"
            },
            {
                "additions": 2,
                "sha": "b9d131adc31d2bcabe9cccd4ca5e3a2f1ff047a6",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/teardown/TeardownFixtureAbstract.java",
                "deletions": 0,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/fixturescripts/teardown/TeardownFixtureAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/teardown/TeardownFixtureAbstract.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -23,9 +23,11 @@\n \n import com.google.common.base.Strings;\n \n+import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.fixturescripts.FixtureScript;\n import org.apache.isis.applib.services.jdosupport.IsisJdoSupport;\n \n+@Programmatic\n public abstract class TeardownFixtureAbstract extends FixtureScript {\n \n     protected void deleteFrom(final Class cls) {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/fixturescripts/teardown/TeardownFixtureAbstract.java"
            },
            {
                "additions": 1,
                "sha": "ccabfd629aa04c281d7772b3989a7788fcc928a9",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/services/metamodel/MetaModelService6.java",
                "deletions": 1,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/services/metamodel/MetaModelService6.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/services/metamodel/MetaModelService6.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -73,7 +73,7 @@ private Config newConfigWith(final int x) {\n         }\n \n         public Config withPackagePrefix(final String packagePrefix) {\n-            final List<String> prefixes = Lists.newArrayList(packagePrefix);\n+            final List<String> prefixes = Lists.newArrayList(this.packagePrefixes);\n             prefixes.add(packagePrefix);\n             return new Config(mask, prefixes);\n         }",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/main/java/org/apache/isis/applib/services/metamodel/MetaModelService6.java"
            },
            {
                "additions": 31,
                "sha": "97f59ea8f9e8b544bec41a039fdc35b6469ee758",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/applib/src/test/java/org/apache/isis/applib/services/metamodel/MetaModelService6_Config_Test.java",
                "deletions": 3,
                "filename": "core/applib/src/test/java/org/apache/isis/applib/services/metamodel/MetaModelService6_Config_Test.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/test/java/org/apache/isis/applib/services/metamodel/MetaModelService6_Config_Test.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -2,6 +2,7 @@\n \n import org.junit.Test;\n \n+import static org.hamcrest.Matchers.emptyCollectionOf;\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.is;\n import static org.junit.Assert.assertNotSame;\n@@ -18,11 +19,38 @@ public void ignore_noop() throws Exception {\n         assertThat(config.isIgnoreNoop(), is(equalTo(false)));\n \n         // and when\n-        MetaModelService6.Config flags2 = config.withIgnoreNoop();\n+        MetaModelService6.Config config2 = config.withIgnoreNoop();\n \n         // then\n-        assertNotSame(config, flags2);\n+        assertNotSame(config, config2);\n         assertThat(config.isIgnoreNoop(), is(equalTo(false)));\n-        assertThat(flags2.isIgnoreNoop(), is(equalTo(true)));\n+        assertThat(config2.isIgnoreNoop(), is(equalTo(true)));\n+    }\n+\n+    @Test\n+    public void packages_prefixes() throws Exception {\n+\n+        // when\n+        MetaModelService6.Config config = new MetaModelService6.Config();\n+        // then\n+        assertThat(config.getPackagePrefixes(), is(emptyCollectionOf(String.class)));\n+\n+        // and when\n+        MetaModelService6.Config config2 = config.withPackagePrefix(\"org.foo\");\n+\n+        // then\n+        assertNotSame(config, config2);\n+        assertThat(config2.getPackagePrefixes().size(), is(equalTo(1)));\n+        assertThat(config2.getPackagePrefixes().get(0), is(equalTo(\"org.foo\")));\n+\n+        // and when\n+        MetaModelService6.Config config3 = config2.withPackagePrefix(\"org.bar\");\n+\n+        // then\n+        assertNotSame(config, config3);\n+        assertNotSame(config2, config3);\n+        assertThat(config3.getPackagePrefixes().size(), is(equalTo(2)));\n+        assertThat(config3.getPackagePrefixes().get(0), is(equalTo(\"org.foo\")));\n+        assertThat(config3.getPackagePrefixes().get(1), is(equalTo(\"org.bar\")));\n     }\n }\n\\ No newline at end of file",
                "changes": 34,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/applib/src/test/java/org/apache/isis/applib/services/metamodel/MetaModelService6_Config_Test.java"
            },
            {
                "additions": 2,
                "sha": "dcf04d93b48e32a0bd15e636d2a02c3e8ae4ec22",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/Annotations.java",
                "deletions": 0,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/Annotations.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/Annotations.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -34,6 +34,7 @@\n import org.apache.isis.applib.annotation.Collection;\n import org.apache.isis.applib.annotation.CollectionLayout;\n import org.apache.isis.applib.annotation.MemberOrder;\n+import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.annotation.Property;\n import org.apache.isis.applib.annotation.PropertyLayout;\n import org.apache.isis.applib.annotation.Title;\n@@ -281,6 +282,7 @@ public Field getField() {\n                     PropertyLayout.class,\n                     Collection.class,\n                     CollectionLayout.class,\n+                    Programmatic.class,\n                     MemberOrder.class,\n                     javax.annotation.Nullable.class,\n                     Title.class,",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/Annotations.java"
            },
            {
                "additions": 2,
                "sha": "e09f26347d9257024a171a14a04efba99dc1a0b3",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/collections/disabled/fromimmutable/DisabledFacetOnCollectionDerivedFromImmutableFactory.java",
                "deletions": 7,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/collections/disabled/fromimmutable/DisabledFacetOnCollectionDerivedFromImmutableFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/collections/disabled/fromimmutable/DisabledFacetOnCollectionDerivedFromImmutableFactory.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -21,17 +21,11 @@\n \n import org.apache.isis.core.metamodel.facetapi.FacetUtil;\n import org.apache.isis.core.metamodel.facetapi.FeatureType;\n-import org.apache.isis.core.metamodel.facets.FacetFactory;\n import org.apache.isis.core.metamodel.facets.FacetFactoryAbstract;\n import org.apache.isis.core.metamodel.facets.FacetedMethod;\n import org.apache.isis.core.metamodel.facets.object.immutable.ImmutableFacet;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n \n-/**\n- * REVIEW: I'm not sure this {@link FacetFactory} actually makes sense. Just\n- * because a type is immutable, doesn't imply that the property can't change the\n- * instance that it refers to?\n- */\n public class DisabledFacetOnCollectionDerivedFromImmutableFactory extends FacetFactoryAbstract {\n \n     public DisabledFacetOnCollectionDerivedFromImmutableFactory() {\n@@ -40,7 +34,8 @@ public DisabledFacetOnCollectionDerivedFromImmutableFactory() {\n \n     @Override\n     public void process(final ProcessMethodContext processMethodContext) {\n-        final ObjectSpecification spec = getSpecificationLoader().loadSpecification(processMethodContext.getMethod().getDeclaringClass());\n+        final Class<?> declaringClass = processMethodContext.getMethod().getDeclaringClass();\n+        final ObjectSpecification spec = getSpecificationLoader().loadSpecification(declaringClass);\n         if (spec.containsDoOpFacet(ImmutableFacet.class)) {\n             final ImmutableFacet immutableFacet = spec.getFacet(ImmutableFacet.class);\n             final FacetedMethod facetHolder = processMethodContext.getFacetHolder();",
                "changes": 9,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/collections/disabled/fromimmutable/DisabledFacetOnCollectionDerivedFromImmutableFactory.java"
            },
            {
                "additions": 3,
                "sha": "55b87d0eef5e7c1af921fcdea71c7cd5702a1540",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/members/describedas/annotprop/DescribedAsFacetOnMemberFactory.java",
                "deletions": 16,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/members/describedas/annotprop/DescribedAsFacetOnMemberFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/members/describedas/annotprop/DescribedAsFacetOnMemberFactory.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -32,7 +32,6 @@\n import org.apache.isis.core.metamodel.facets.FacetFactoryAbstract;\n import org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet;\n import org.apache.isis.core.metamodel.services.ServicesInjector;\n-import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidatorComposite;\n import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidatorForDeprecatedAnnotation;\n \n@@ -52,10 +51,9 @@ public void process(final ProcessMethodContext processMethodContext) {\n         if(facet == null) {\n             facet = validator.flagIfPresent(createFromAnnotationIfPossible(processMethodContext), processMethodContext);\n         }\n-        if (facet == null) {\n-            facet = createFromAnnotationOnReturnTypeIfPossible(processMethodContext);\n-        }\n-        \n+\n+        // facet derived from type moved to post-processor\n+\n         // no-op if null\n         FacetUtil.addFacet(facet);\n     }\n@@ -82,17 +80,6 @@ private static DescribedAsFacet createFromAnnotationIfPossible(final ProcessMeth\n         return annotation == null ? null : new DescribedAsFacetOnMemberAnnotation(annotation.value(), processMethodContext.getFacetHolder());\n     }\n \n-    private DescribedAsFacet createFromAnnotationOnReturnTypeIfPossible(final ProcessMethodContext processMethodContext) {\n-        final Class<?> returnType = processMethodContext.getMethod().getReturnType();\n-        final DescribedAsFacet returnTypeDescribedAsFacet = getDescribedAsFacet(returnType);\n-        return returnTypeDescribedAsFacet != null ? new DescribedAsFacetOnMemberDerivedFromType(returnTypeDescribedAsFacet, processMethodContext.getFacetHolder()) : null;\n-    }\n-    \n-    private DescribedAsFacet getDescribedAsFacet(final Class<?> type) {\n-        final ObjectSpecification paramTypeSpec = getSpecificationLoader().loadSpecification(type);\n-        return paramTypeSpec.getFacet(DescribedAsFacet.class);\n-    }\n-\n \n     @Override\n     public void refineMetaModelValidator(final MetaModelValidatorComposite metaModelValidator, final IsisConfiguration configuration) {",
                "changes": 19,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/members/describedas/annotprop/DescribedAsFacetOnMemberFactory.java"
            },
            {
                "additions": 5,
                "sha": "312b8caf854ee4b1d82e7f5757dd1aa539230e8a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -24,6 +24,7 @@\n import javax.xml.bind.annotation.XmlType;\n \n import org.apache.isis.applib.annotation.NatureOfService;\n+import org.apache.isis.applib.fixturescripts.FixtureScript;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.metamodel.facetapi.FacetHolder;\n import org.apache.isis.core.metamodel.facetapi.FacetUtil;\n@@ -118,7 +119,10 @@ private void validate(\n                             return;\n                         }\n                         ObjectSpecIdFacet objectSpecIdFacet = objectSpec.getFacet(ObjectSpecIdFacet.class);\n-                        if(objectSpecIdFacet instanceof ObjectSpecIdFacetDerivedFromClassName) {\n+                        if(objectSpecIdFacet instanceof ObjectSpecIdFacetDerivedFromClassName &&\n+                           // as a special case, don't enforce this for fixture scripts... we never invoke actions on fixture scripts anyway\n+                           !FixtureScript.class.isAssignableFrom(objectSpec.getCorrespondingClass()) ) {\n+\n                             validationFailures.add(\n                                     \"%s: the object type must be specified explicitly ('%s' config property).  Defaulting the object type from the package/class/package name can lead to data migration issues for apps deployed to production (if the class is subsequently refactored).  Use @Discriminator, @DomainObject(objectType=...) or @PersistenceCapable(schema=...) to specify explicitly.\",\n                                     objectSpec.getFullIdentifier(), ISIS_REFLECTOR_VALIDATOR_EXPLICIT_OBJECT_TYPE_KEY);",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/objectspecid/classname/ObjectSpecIdFacetDerivedFromClassNameFactory.java"
            },
            {
                "additions": 2,
                "sha": "4ec136edb7990e77653e851b0380256b233627ce",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/defaults/fromtype/ActionParameterDefaultFacetDerivedFromTypeFactory.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/defaults/fromtype/ActionParameterDefaultFacetDerivedFromTypeFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/defaults/fromtype/ActionParameterDefaultFacetDerivedFromTypeFactory.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -23,10 +23,10 @@\n import org.apache.isis.core.metamodel.facetapi.FeatureType;\n import org.apache.isis.core.metamodel.facets.FacetFactoryAbstract;\n import org.apache.isis.core.metamodel.facets.actions.defaults.ActionDefaultsFacet;\n-import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacet;\n+import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n \n-public class ActionParameterDefaultFacetDerivedFromTypeFactory extends FacetFactoryAbstract {\n+public class ActionParameterDefaultFacetDerivedFromTypeFactory extends FacetFactoryAbstract  {\n \n     public ActionParameterDefaultFacetDerivedFromTypeFactory() {\n         super(FeatureType.PARAMETERS_ONLY);",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/defaults/fromtype/ActionParameterDefaultFacetDerivedFromTypeFactory.java"
            },
            {
                "additions": 3,
                "sha": "93b92544703ee73291acb7c6a55555db31e2e803",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/disabled/fromimmutable/DisabledFacetOnPropertyDerivedFromImmutableFactory.java",
                "deletions": 7,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/disabled/fromimmutable/DisabledFacetOnPropertyDerivedFromImmutableFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/disabled/fromimmutable/DisabledFacetOnPropertyDerivedFromImmutableFactory.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -21,18 +21,12 @@\n \n import org.apache.isis.core.metamodel.facetapi.FacetUtil;\n import org.apache.isis.core.metamodel.facetapi.FeatureType;\n-import org.apache.isis.core.metamodel.facets.FacetFactory;\n import org.apache.isis.core.metamodel.facets.FacetFactoryAbstract;\n import org.apache.isis.core.metamodel.facets.FacetedMethod;\n import org.apache.isis.core.metamodel.facets.members.disabled.DisabledFacet;\n import org.apache.isis.core.metamodel.facets.object.immutable.ImmutableFacet;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n \n-/**\n- * REVIEW: I'm not sure this {@link FacetFactory} actually makes sense. Just\n- * because a type is immutable, doesn't imply that the property can't change the\n- * instance that it refers to?\n- */\n public class DisabledFacetOnPropertyDerivedFromImmutableFactory extends FacetFactoryAbstract {\n \n     public DisabledFacetOnPropertyDerivedFromImmutableFactory() {\n@@ -41,7 +35,9 @@ public DisabledFacetOnPropertyDerivedFromImmutableFactory() {\n \n     @Override\n     public void process(final ProcessMethodContext processMethodContext) {\n-        final ObjectSpecification spec = getSpecificationLoader().loadSpecification(processMethodContext.getMethod().getDeclaringClass());\n+        final Class<?> declaringClass = processMethodContext.getMethod().getDeclaringClass();\n+        final ObjectSpecification spec = getSpecificationLoader().loadSpecification(\n+                declaringClass);\n         if (spec.containsDoOpFacet(ImmutableFacet.class)) {\n             final ImmutableFacet immutableFacet = spec.getFacet(ImmutableFacet.class);\n             final FacetedMethod facetHolder = processMethodContext.getFacetHolder();",
                "changes": 10,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/disabled/fromimmutable/DisabledFacetOnPropertyDerivedFromImmutableFactory.java"
            },
            {
                "additions": 1,
                "sha": "f6ea2def80a2f69f285c60ee8592cd3fa65a98eb",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/typicallen/fromtype/TypicalLengthFacetOnPropertyDerivedFromType.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/typicallen/fromtype/TypicalLengthFacetOnPropertyDerivedFromType.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/typicallen/fromtype/TypicalLengthFacetOnPropertyDerivedFromType.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -38,7 +38,7 @@ public TypicalLengthFacetOnPropertyDerivedFromType(final TypicalLengthFacet typi\n     @Override\n     public int value() {\n         final MultiLineFacet facet = getFacetHolder().getFacet(MultiLineFacet.class);\n-        return facet.numberOfLines() * typicalLengthFacet.value();\n+        return (facet != null ? facet.numberOfLines() : 1) * typicalLengthFacet.value();\n     }\n \n     @Override public void appendAttributesTo(final Map<String, Object> attributeMap) {",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/properties/typicallen/fromtype/TypicalLengthFacetOnPropertyDerivedFromType.java"
            },
            {
                "additions": 309,
                "sha": "b9e79ea58c0c8cba81befcc5a5863af8cb36f56c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java",
                "deletions": 26,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -31,9 +31,40 @@\n import org.apache.isis.core.metamodel.deployment.DeploymentCategoryProvider;\n import org.apache.isis.core.metamodel.facetapi.Facet;\n import org.apache.isis.core.metamodel.facetapi.FacetUtil;\n+import org.apache.isis.core.metamodel.facets.FacetedMethod;\n+import org.apache.isis.core.metamodel.facets.TypedHolder;\n+import org.apache.isis.core.metamodel.facets.actions.defaults.ActionDefaultsFacet;\n+import org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet;\n+import org.apache.isis.core.metamodel.facets.collections.disabled.fromimmutable.DisabledFacetOnCollectionDerivedFromImmutable;\n+import org.apache.isis.core.metamodel.facets.collections.disabled.fromimmutable.DisabledFacetOnCollectionDerivedFromImmutableFactory;\n+import org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType;\n+import org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberFactory;\n+import org.apache.isis.core.metamodel.facets.members.disabled.DisabledFacet;\n+import org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacet;\n+import org.apache.isis.core.metamodel.facets.object.immutable.ImmutableFacet;\n+import org.apache.isis.core.metamodel.facets.object.immutable.immutableannot.CopyImmutableFacetOntoMembersFactory;\n+import org.apache.isis.core.metamodel.facets.objectvalue.choices.ChoicesFacet;\n+import org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet;\n import org.apache.isis.core.metamodel.facets.param.autocomplete.ActionParameterAutoCompleteFacet;\n import org.apache.isis.core.metamodel.facets.param.choices.ActionParameterChoicesFacet;\n+import org.apache.isis.core.metamodel.facets.param.choices.enums.ActionParameterChoicesFacetDerivedFromChoicesFacet;\n+import org.apache.isis.core.metamodel.facets.param.choices.enums.ActionParameterChoicesFacetDerivedFromChoicesFacetFactory;\n import org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet;\n+import org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFacets;\n+import org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterAnnotationElseDerivedFromTypeFactory;\n+import org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterDerivedFromType;\n+import org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType;\n+import org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromTypeFacetFactory;\n+import org.apache.isis.core.metamodel.facets.properties.choices.PropertyChoicesFacet;\n+import org.apache.isis.core.metamodel.facets.properties.choices.enums.PropertyChoicesFacetDerivedFromChoicesFacet;\n+import org.apache.isis.core.metamodel.facets.properties.choices.enums.PropertyChoicesFacetDerivedFromChoicesFacetFactory;\n+import org.apache.isis.core.metamodel.facets.properties.defaults.PropertyDefaultFacet;\n+import org.apache.isis.core.metamodel.facets.properties.defaults.fromtype.PropertyDefaultFacetDerivedFromDefaultedFacet;\n+import org.apache.isis.core.metamodel.facets.properties.defaults.fromtype.PropertyDefaultFacetDerivedFromTypeFactory;\n+import org.apache.isis.core.metamodel.facets.properties.disabled.fromimmutable.DisabledFacetOnPropertyDerivedFromImmutable;\n+import org.apache.isis.core.metamodel.facets.properties.disabled.fromimmutable.DisabledFacetOnPropertyDerivedFromImmutableFactory;\n+import org.apache.isis.core.metamodel.facets.properties.typicallen.fromtype.TypicalLengthFacetOnPropertyDerivedFromType;\n+import org.apache.isis.core.metamodel.facets.properties.typicallen.fromtype.TypicalLengthFacetOnPropertyDerivedFromTypeFacetFactory;\n import org.apache.isis.core.metamodel.progmodel.ObjectSpecificationPostProcessor;\n import org.apache.isis.core.metamodel.services.ServicesInjector;\n import org.apache.isis.core.metamodel.services.ServicesInjectorAware;\n@@ -43,11 +74,18 @@\n import org.apache.isis.core.metamodel.spec.feature.Contributed;\n import org.apache.isis.core.metamodel.spec.feature.ObjectAction;\n import org.apache.isis.core.metamodel.spec.feature.ObjectActionParameter;\n+import org.apache.isis.core.metamodel.spec.feature.ObjectAssociation;\n+import org.apache.isis.core.metamodel.spec.feature.ObjectMember;\n import org.apache.isis.core.metamodel.spec.feature.OneToManyAssociation;\n+import org.apache.isis.core.metamodel.spec.feature.OneToOneAssociation;\n import org.apache.isis.core.metamodel.specloader.SpecificationLoader;\n+import org.apache.isis.core.metamodel.specloader.specimpl.ObjectActionParameterAbstract;\n+import org.apache.isis.core.metamodel.specloader.specimpl.ObjectMemberAbstract;\n \n /**\n  * Sets up all the {@link Facet}s for an action in a single shot.\n+ *\n+ * TODO: rename this class because it does much more than its name suggests.\n  */\n public class ActionCollectionParameterDefaultsAndChoicesPostProcessor implements ObjectSpecificationPostProcessor,\n         ServicesInjectorAware {\n@@ -67,9 +105,49 @@ public void postProcess(final ObjectSpecification objectSpecification) {\n         // and all the collections of this type\n         final List<OneToManyAssociation> collections = objectSpecification.getCollections(Contributed.INCLUDED);\n \n+        // and all the properties of this type\n+        final List<OneToOneAssociation> properties = objectSpecification.getProperties(Contributed.INCLUDED);\n+\n+        // for each action, ...\n+        for (final ObjectAction objectAction : objectActions) {\n+\n+            // ... for each action parameter\n+            final List<ObjectActionParameter> parameters = objectAction.getParameters();\n+\n+            for (final ObjectActionParameter parameter : parameters) {\n+\n+                deriveParameterDefaultFacetFromType(parameter);\n+                deriveParameterChoicesFromExistingChoices(parameter);\n+                deriveParameterDescribedAsFromType(parameter);\n+                deriveParameterTypicalLengthFromType(parameter);\n+            }\n+\n+            deriveActionDescribedAsFromType(objectAction);\n+\n+            // previously was also copying ImmutableFacet from spec onto Action (as for properties and collections ...\n+            // corresponds to CopyImmutableFacetOntoMembersFactory.  However, ImmutableFacet only ever disables for\n+            // properties and collections, so no point in copying over.\n+\n+        }\n+\n+        // for each property, ...\n+        for (final OneToOneAssociation property : properties) {\n+            derivePropertyChoicesFromExistingChoices(property);\n+            derivePropertyDefaultsFromType(property);\n+            derivePropertyTypicalLengthFromType(property);\n+            derivePropertyOrCollectionDescribedAsFromType(property);\n+            derivePropertyOrCollectionImmutableFromSpec(property);\n+            derivePropertyDisabledFromImmutable(property);\n+        }\n+\n+\n         // for each collection, ...\n         for (final OneToManyAssociation collection : collections) {\n \n+            derivePropertyOrCollectionDescribedAsFromType(collection);\n+            derivePropertyOrCollectionImmutableFromSpec(collection);\n+            deriveCollectionDisabledFromImmutable(collection);\n+\n             // ... see if any of its actions has a collection parameter of the same type\n             //\n             // eg Order#getItems() and Order#removeItems(List<OrderItem>)\n@@ -100,56 +178,261 @@ public void postProcess(final ObjectSpecification objectSpecification) {\n                 // this will cause the UI to render the collection with toggleboxes\n                 // with a thread-local used to provide the selected objects\n                 for (final ObjectActionParameter collectionParam : compatibleCollectionParams) {\n-                    addDefaultsFacetIfNoneAlready(collectionParam);\n+                    addCollectionParamDefaultsFacetIfNoneAlready(collectionParam);\n                 }\n \n                 // for compatible collection parameters, install a choices facet (if there isn't one already)\n                 // using the associated collection for its values\n                 for (final ObjectActionParameter collectionParam : compatibleCollectionParams) {\n-                    addChoicesFacetIfNoneAlready(collection, collectionParam);\n+                    addCollectionParamChoicesFacetIfNoneAlready(collection, collectionParam);\n                 }\n \n                 // similarly for compatible scalar parameters, install a choices facet (if there isn't one already)\n                 // using the associated collection for its values.\n                 for (final ObjectActionParameter scalarParam : compatibleScalarParams) {\n-                    addChoicesFacetIfNoneAlready(collection, scalarParam);\n+                    addCollectionParamChoicesFacetIfNoneAlready(collection, scalarParam);\n                 }\n             }\n         }\n     }\n \n-    private void addDefaultsFacetIfNoneAlready(final ObjectActionParameter collectionParam) {\n-        final ActionParameterDefaultsFacet defaultsFacet =\n-                collectionParam.getFacet(ActionParameterDefaultsFacet.class);\n-        if (existsAndNotDerived(defaultsFacet)) {\n-            // don't overwrite existing facet\n-        } else {\n-            FacetUtil.addFacet(new ActionParameterDefaultsFacetFromAssociatedCollection(collectionParam));\n+    private FacetedMethod facetedMethodFor(final ObjectMember objectMember) {\n+        // TODO: hacky, need to copy facet onto underlying peer, not to the action/association itself.\n+        final ObjectMemberAbstract objectActionImpl = (ObjectMemberAbstract) objectMember;\n+        return objectActionImpl.getFacetedMethod();\n+    }\n+    private TypedHolder peerFor(final ObjectActionParameter param) {\n+        // TODO: hacky, need to copy facet onto underlying peer, not to the param itself.\n+        final ObjectActionParameterAbstract objectActionImpl = (ObjectActionParameterAbstract) param;\n+        return objectActionImpl.getPeer();\n+    }\n+\n+    /**\n+     * Replaces some of the functionality in {@link DescribedAsFacetOnMemberFactory}.\n+     */\n+    private void deriveActionDescribedAsFromType(final ObjectAction objectAction) {\n+        if(objectAction.containsDoOpFacet(DescribedAsFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification returnSpec = objectAction.getReturnType();\n+        final DescribedAsFacet specFacet = returnSpec.getFacet(DescribedAsFacet.class);\n+        //TODO: this ought to check if a do-op; if you come across this, you can probably change it (just taking smaller steps for now)\n+        //if(existsAndIsDoOp(specFacet)) {\n+        if(specFacet != null) {\n+            FacetUtil.addFacet(new DescribedAsFacetOnMemberDerivedFromType(specFacet, facetedMethodFor(objectAction)));\n         }\n     }\n \n-    private void addChoicesFacetIfNoneAlready(\n-            final OneToManyAssociation otma,\n-            final ObjectActionParameter scalarOrCollectionParam) {\n+    /**\n+     * Replaces {@link org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFactory}\n+     */\n+    private void deriveParameterDefaultFacetFromType(final ObjectActionParameter parameter) {\n \n-        final ActionParameterChoicesFacet choicesFacet = scalarOrCollectionParam\n-                .getFacet(ActionParameterChoicesFacet.class);\n-        final ActionParameterAutoCompleteFacet autoCompleteFacet = scalarOrCollectionParam\n-                .getFacet(ActionParameterAutoCompleteFacet.class);\n+        if (parameter.containsDoOpFacet(ActionDefaultsFacet.class)) {\n+            return;\n+        }\n+\n+        // this loop within the outer loop (for every param) is really weird,\n+        // but arises from porting the old facet factory\n+        final ObjectAction objectAction = parameter.getAction();\n+        final List<ObjectSpecification> parameterSpecs = objectAction.getParameterTypes();\n+        final DefaultedFacet[] parameterTypeDefaultedFacets = new DefaultedFacet[parameterSpecs.size()];\n+        boolean hasAtLeastOneDefault = false;\n+        for (int i = 0; i < parameterSpecs.size(); i++) {\n+            final ObjectSpecification parameterSpec = parameterSpecs.get(i);\n+            parameterTypeDefaultedFacets[i] = parameterSpec.getFacet(DefaultedFacet.class);\n+            hasAtLeastOneDefault = hasAtLeastOneDefault | (parameterTypeDefaultedFacets[i] != null);\n+        }\n+        if (hasAtLeastOneDefault) {\n+            FacetUtil.addFacet(\n+                new ActionParameterDefaultFacetDerivedFromTypeFacets(parameterTypeDefaultedFacets, peerFor(parameter)));\n+        }\n+    }\n+\n+    /**\n+     * Replaces {@link ActionParameterChoicesFacetDerivedFromChoicesFacetFactory}.\n+     */\n+    private void deriveParameterChoicesFromExistingChoices(final ObjectActionParameter parameter) {\n+        if(parameter.containsDoOpFacet(ActionParameterChoicesFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification paramSpec = parameter.getSpecification();\n+        final ChoicesFacet specFacet = paramSpec.getFacet(ChoicesFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n+            FacetUtil.addFacet(\n+                new ActionParameterChoicesFacetDerivedFromChoicesFacet(\n+                    peerFor(parameter),\n+                    getDeploymentCategory(), specificationLoader, authenticationSessionProvider, adapterManager));\n+        }\n+    }\n \n-        if (existsAndNotDerived(choicesFacet) || existsAndNotDerived(autoCompleteFacet)) {\n-            // don't overwrite existing choices or autoComplete facet\n-        } else {\n+    /**\n+     * Replaces {@link DescribedAsFacetOnParameterAnnotationElseDerivedFromTypeFactory}\n+     */\n+    private void deriveParameterDescribedAsFromType(final ObjectActionParameter parameter) {\n+        if(parameter.containsDoOpFacet(DescribedAsFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification paramSpec = parameter.getSpecification();\n+        final DescribedAsFacet specFacet = paramSpec.getFacet(DescribedAsFacet.class);\n+\n+        //TODO: this ought to check if a do-op; if you come across this, you can probably change it (just taking smaller steps for now)\n+        //if(existsAndIsDoOp(specFacet)) {\n+        if(specFacet != null) {\n+            FacetUtil.addFacet(new DescribedAsFacetOnParameterDerivedFromType(specFacet, peerFor(parameter)));\n+        }\n+    }\n+\n+    /**\n+     * Replaces {@link TypicalLengthFacetOnParameterDerivedFromTypeFacetFactory}\n+     */\n+    private void deriveParameterTypicalLengthFromType(final ObjectActionParameter parameter) {\n+        if(parameter.containsDoOpFacet(TypicalLengthFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification paramSpec = parameter.getSpecification();\n+        final TypicalLengthFacet specFacet = paramSpec.getFacet(TypicalLengthFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n+            FacetUtil.addFacet(new TypicalLengthFacetOnParameterDerivedFromType(specFacet, peerFor(parameter)));\n+        }\n+    }\n+\n+    /**\n+     * Replaces {@link PropertyChoicesFacetDerivedFromChoicesFacetFactory}\n+     */\n+    private void derivePropertyChoicesFromExistingChoices(final OneToOneAssociation property) {\n+        if(property.containsDoOpFacet(PropertyChoicesFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification propertySpec = property.getSpecification();\n+        final ChoicesFacet specFacet = propertySpec.getFacet(ChoicesFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n             FacetUtil.addFacet(\n-                    new ActionParameterChoicesFacetFromParentedCollection(\n-                            scalarOrCollectionParam, otma,\n-                            getDeploymentCategory(), specificationLoader,\n-                            authenticationSessionProvider, adapterManager ));\n+                    new PropertyChoicesFacetDerivedFromChoicesFacet(facetedMethodFor(property), specificationLoader));\n         }\n     }\n \n-    private static boolean existsAndNotDerived(final Facet facet) {\n-        return facet != null && !facet.isNoop() && !facet.isNoop();\n+    /**\n+     * Replaces {@link PropertyDefaultFacetDerivedFromTypeFactory}\n+     */\n+    private void derivePropertyDefaultsFromType(final OneToOneAssociation property) {\n+        if(property.containsDoOpFacet(PropertyDefaultFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification propertySpec = property.getSpecification();\n+        final DefaultedFacet specFacet = propertySpec.getFacet(DefaultedFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n+            FacetUtil.addFacet(\n+                new PropertyDefaultFacetDerivedFromDefaultedFacet(\n+                        specFacet, facetedMethodFor(property), adapterManager));\n+        }\n+    }\n+\n+    /**\n+     * replaces {@link TypicalLengthFacetOnPropertyDerivedFromTypeFacetFactory}\n+     */\n+    private void derivePropertyTypicalLengthFromType(final OneToOneAssociation property) {\n+        if(property.containsDoOpFacet(TypicalLengthFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification propertySpec = property.getSpecification();\n+        final TypicalLengthFacet specFacet = propertySpec.getFacet(TypicalLengthFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n+            FacetUtil.addFacet(\n+                    new TypicalLengthFacetOnPropertyDerivedFromType(specFacet, facetedMethodFor(property)));\n+        }\n+    }\n+\n+    /**\n+     * Replaces some of the functionality in {@link DescribedAsFacetOnMemberFactory}.\n+     */\n+    private void derivePropertyOrCollectionDescribedAsFromType(final ObjectAssociation objectAssociation) {\n+        if(objectAssociation.containsDoOpFacet(DescribedAsFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification returnSpec = objectAssociation.getSpecification();\n+        final DescribedAsFacet specFacet = returnSpec.getFacet(DescribedAsFacet.class);\n+        //TODO: this ought to check if a do-op; if you come across this, you can probably change it (just taking smaller steps for now)\n+        //if(existsAndIsDoOp(specFacet)) {\n+        if(specFacet != null) {\n+            FacetUtil.addFacet(\n+                    new DescribedAsFacetOnMemberDerivedFromType(specFacet, facetedMethodFor(objectAssociation)));\n+        }\n+    }\n+\n+    /**\n+     * Replaces {@link DisabledFacetOnPropertyDerivedFromImmutableFactory}\n+     */\n+    private void derivePropertyDisabledFromImmutable(final OneToOneAssociation property) {\n+        if(property.containsDoOpFacet(DisabledFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification onType = property.getOnType();\n+        final ImmutableFacet specFacet = onType.getFacet(ImmutableFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n+            FacetUtil.addFacet(\n+                    new DisabledFacetOnPropertyDerivedFromImmutable(specFacet, facetedMethodFor(property)));\n+        }\n+    }\n+\n+    /**\n+     * Replaces {@link CopyImmutableFacetOntoMembersFactory}\n+     *\n+     * TODO: this looks to be redundant, see {@link #derivePropertyDisabledFromImmutable(OneToOneAssociation)} and {@link #deriveCollectionDisabledFromImmutable(OneToManyAssociation)}.  What differs is the implementation of the disabling facet (DisabledFacetOn... vs ImmutableFacetFor...).\n+     */\n+    private void derivePropertyOrCollectionImmutableFromSpec(final ObjectAssociation objectAssociation) {\n+        if(objectAssociation.containsDoOpFacet(DisabledFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification owningSpec = objectAssociation.getOnType();\n+        final ImmutableFacet specFacet = owningSpec.getFacet(ImmutableFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n+            specFacet.copyOnto(facetedMethodFor(objectAssociation));\n+        }\n+    }\n+\n+\n+    /**\n+     * Replaces {@link DisabledFacetOnCollectionDerivedFromImmutableFactory}\n+     */\n+    private void deriveCollectionDisabledFromImmutable(final OneToManyAssociation collection) {\n+        if(collection.containsDoOpFacet(DisabledFacet.class)) {\n+            return;\n+        }\n+        final ObjectSpecification onType = collection.getOnType();\n+        final ImmutableFacet specFacet = onType.getFacet(ImmutableFacet.class);\n+        if(existsAndIsDoOp(specFacet)) {\n+            FacetUtil.addFacet(\n+                    new DisabledFacetOnCollectionDerivedFromImmutable(specFacet, facetedMethodFor(collection)));\n+        }\n+    }\n+\n+\n+\n+    private void addCollectionParamDefaultsFacetIfNoneAlready(final ObjectActionParameter collectionParam) {\n+        if(collectionParam.containsDoOpFacet(ActionParameterDefaultsFacet.class)) {\n+            return;\n+        }\n+        FacetUtil.addFacet(new ActionParameterDefaultsFacetFromAssociatedCollection(collectionParam));\n+    }\n+\n+    private void addCollectionParamChoicesFacetIfNoneAlready(\n+            final OneToManyAssociation otma,\n+            final ObjectActionParameter scalarOrCollectionParam) {\n+        if (scalarOrCollectionParam.containsDoOpFacet(ActionParameterChoicesFacet.class) ||\n+            scalarOrCollectionParam.containsDoOpFacet(ActionParameterAutoCompleteFacet.class)) {\n+            return;\n+        }\n+\n+        FacetUtil.addFacet(\n+                new ActionParameterChoicesFacetFromParentedCollection(\n+                        scalarOrCollectionParam, otma,\n+                        getDeploymentCategory(), specificationLoader,\n+                        authenticationSessionProvider, adapterManager ));\n+    }\n+\n+    private static boolean existsAndIsDoOp(final Facet facet) {\n+        return facet != null && !facet.isNoop();\n     }\n \n     private List<ActionType> inferActionTypes() {",
                "changes": 335,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/postprocessors/param/ActionCollectionParameterDefaultsAndChoicesPostProcessor.java"
            },
            {
                "additions": 21,
                "sha": "27736d439cc2f1bdd406641f3fe577c55b7ce40e",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/metamodel/MetaModelExporter.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/metamodel/MetaModelExporter.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/metamodel/MetaModelExporter.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -91,7 +91,7 @@ MetamodelDto exportMetaModel(final MetaModelService6.Config config) {\n \n         // phase 1: create a domainClassType for each ObjectSpecification\n         // these are added into a map for lookups in phase 2\n-        Map<ObjectSpecification, DomainClassDto> domainClassByObjectSpec = Maps.newHashMap();\n+        final Map<ObjectSpecification, DomainClassDto> domainClassByObjectSpec = Maps.newHashMap();\n         for (final ObjectSpecification specification : specificationLookup.allSpecifications()) {\n             if(notInPackagePrefixes(specification, config)) {\n                 continue;\n@@ -119,6 +119,26 @@ MetamodelDto exportMetaModel(final MetaModelService6.Config config) {\n             addFacetsAndMembersTo(specification, domainClassByObjectSpec, config);\n         }\n \n+        // phase 2.5: check no duplicates\n+        final Map<String, ObjectSpecification> objectSpecificationByDomainClassId = Maps.newHashMap();\n+        final List<String> buf = Lists.newArrayList();\n+        for (final Map.Entry<ObjectSpecification, DomainClassDto> entry : domainClassByObjectSpec.entrySet()) {\n+            final ObjectSpecification objectSpecification = entry.getKey();\n+            final DomainClassDto domainClassDto = entry.getValue();\n+            final String id = domainClassDto.getId();\n+            final ObjectSpecification existing = objectSpecificationByDomainClassId.get(id);\n+            if(existing != null) {\n+                if(!existing.getCorrespondingClass().isEnum()) {\n+                    buf.add(String.format(\"%s mapped to %s and %s\", id, existing, objectSpecification));\n+                }\n+            } else {\n+                objectSpecificationByDomainClassId.put(id, objectSpecification);\n+            }\n+        }\n+        if(buf.size() > 0) {\n+            throw new IllegalStateException(Joiner.on(\"\\n\").join(buf));\n+        }\n+\n         // phase 3: now copy all domain classes into the metamodel\n         for (final DomainClassDto domainClass : Lists.newArrayList(domainClassByObjectSpec.values())) {\n             metamodelDto.getDomainClassDto().add(domainClass);",
                "changes": 22,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/metamodel/MetaModelExporter.java"
            },
            {
                "additions": 20,
                "sha": "544721402c70b72f335deced9b391fd4916e86ef",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefault.java",
                "deletions": 7,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefault.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -32,12 +32,13 @@\n /**\n  * This is populated in two parts.\n  *\n- * Initially the #specByClassName is populated using {@link #cache(String, ObjectSpecification)}.  This allows\n- * {@link #allSpecifications()} to return a list of specs.\n+ * Initially the <tt>specByClassName</tt> map is populated using {@link #cache(String, ObjectSpecification)}.\n+ * This allows {@link #allSpecifications()} to return a list of specs.\n+ * Later on, {@link #init()} called which populates #classNameBySpecId.\n  *\n- * Later on, {@link #init(Map)} is called which populates #classNameBySpecId.\n+ * Attempting to call {@link #getByObjectType(ObjectSpecId)} before {@link #init() initialisation} will result in an\n+ * {@link IllegalStateException}.\n  *\n- * TODO: the information passed to #init actually comes from the cache itself (the caller calls #allSpecifications() first) so this could be simplified\n  */\n class SpecificationCacheDefault {\n     \n@@ -70,9 +71,21 @@ public ObjectSpecification getByObjectType(ObjectSpecId objectSpecID) {\n         return className != null ? specByClassName.get(className) : null;\n     }\n \n-    /**\n-     */\n-    synchronized void init(final Map<ObjectSpecId, ObjectSpecification> specById) {\n+    synchronized void init() {\n+        final Collection<ObjectSpecification> objectSpecifications = allSpecifications();\n+        final Map<ObjectSpecId, ObjectSpecification> specById = Maps.newHashMap();\n+        for (final ObjectSpecification objSpec : objectSpecifications) {\n+            final ObjectSpecId objectSpecId = objSpec.getSpecId();\n+            if (objectSpecId == null) {\n+                continue;\n+            }\n+            specById.put(objectSpecId, objSpec);\n+        }\n+\n+        internalInit(specById);\n+    }\n+\n+    void internalInit(final Map<ObjectSpecId, ObjectSpecification> specById) {\n         final Map<ObjectSpecId, String> classNameBySpecId = Maps.newHashMap();\n         final Map<String, ObjectSpecification> specByClassName = Maps.newHashMap();\n         for (ObjectSpecId objectSpecId : specById.keySet()) {",
                "changes": 27,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefault.java"
            },
            {
                "additions": 5,
                "sha": "2ce4dbceb5c4e567e0db9c9c7bf2f834e3aa9a0c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationLoader.java",
                "deletions": 19,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationLoader.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationLoader.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -19,7 +19,6 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.concurrent.Future;\n \n@@ -28,7 +27,6 @@\n import com.google.common.collect.FluentIterable;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n-import com.google.common.collect.Maps;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -145,7 +143,7 @@ protected void finalize() throws Throwable {\n     //endregion\n \n \n-    //region > init\n+    //region > internalInit\n \n     private State state;\n \n@@ -249,7 +247,7 @@ public String toString() {\n \n \n         // for debugging only\n-        final Collection<ObjectSpecification> cachedSpecificationsAfter = allCachedSpecifications();\n+        final Collection<ObjectSpecification> cachedSpecificationsAfter = cache.allSpecifications();\n         ImmutableList<ObjectSpecification> cachedAfterNotBefore = FluentIterable.from(cachedSpecificationsAfter)\n                 .filter(new Predicate<ObjectSpecification>() {\n                     @Override\n@@ -261,10 +259,10 @@ public boolean apply(final ObjectSpecification objectSpecification) {\n                 cachedSpecificationsAfter.size(), cachedAfterNotBefore.size()));\n \n \n-        // only after full introspection has occured do we cache ObjectSpecifications\n+        // only after full introspection has occurred do we cache ObjectSpecifications\n         // by their ObjectSpecId.\n         // the cache (SpecificationCacheDefault will fail-fast as not initialized\n-        cacheBySpecId(specificationsFromRegistry);\n+        cache.init();\n \n     }\n \n@@ -285,18 +283,6 @@ private void loadSpecificationsFor(\n         }\n     }\n \n-    private void cacheBySpecId(final Collection<ObjectSpecification> objectSpecifications) {\n-        final Map<ObjectSpecId, ObjectSpecification> specById = Maps.newHashMap();\n-        for (final ObjectSpecification objSpec : objectSpecifications) {\n-            final ObjectSpecId objectSpecId = objSpec.getSpecId();\n-            if (objectSpecId == null) {\n-                continue;\n-            }\n-            specById.put(objectSpecId, objSpec);\n-        }\n-\n-        cache.init(specById);\n-    }\n \n \n \n@@ -360,7 +346,7 @@ public void validateAndAssert() {\n         ValidationFailures validationFailures = validate();\n         validationFailures.assertNone();\n \n-        cacheBySpecId(allCachedSpecifications());\n+        cache.init();\n     }\n \n     @Programmatic",
                "changes": 24,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/SpecificationLoader.java"
            },
            {
                "additions": 2,
                "sha": "b0156e9dc55fe0b1f1b80fe47b4e774bffb13e22",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java",
                "deletions": 7,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -34,7 +34,6 @@\n import org.apache.isis.core.metamodel.facetapi.FeatureType;\n import org.apache.isis.core.metamodel.facetapi.MultiTypedFacet;\n import org.apache.isis.core.metamodel.facets.FacetedMethodParameter;\n-import org.apache.isis.core.metamodel.facets.TypedHolder;\n import org.apache.isis.core.metamodel.interactions.InteractionUtils;\n import org.apache.isis.core.metamodel.interactions.UsabilityContext;\n import org.apache.isis.core.metamodel.interactions.VisibilityContext;\n@@ -125,19 +124,15 @@ public int getContributeeParamPosition() {\n                 continue;\n             }\n \n-            final TypedHolder paramPeer = paramPeers.get(serviceParamNum);\n-            final ObjectSpecification specification = ObjectMemberAbstract\n-                    .getSpecification(getSpecificationLoader(), paramPeer.getType());\n-\n             final ObjectActionParameterAbstract serviceParameter =\n                     (ObjectActionParameterAbstract) serviceParameters.get(serviceParamNum);\n \n             final ObjectActionParameterContributee contributedParam =\n                     serviceParameter.getPeer().getFeatureType() == FeatureType.ACTION_PARAMETER_SCALAR\n                             ? new OneToOneActionParameterContributee(\n-                                    getServiceAdapter(), serviceParameter, contributeeParamNum, this)\n+                                    servicePojo, serviceParameter, contributeeParamNum, this)\n                             : new OneToManyActionParameterContributee(\n-                                    getServiceAdapter(), serviceParameter, contributeeParamNum, this);\n+                                    servicePojo, serviceParameter, contributeeParamNum, this);\n \n             contributeeParameters.add(contributedParam);\n ",
                "changes": 9,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java"
            },
            {
                "additions": 1,
                "sha": "4c1fd0288d653ffae99198a985de0ee7481bb4d2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -121,7 +121,7 @@ public ObjectAction getAction() {\n      * NOT API, but exposed for the benefit of {@link ObjectActionParameterContributee}\n      * and {@link ObjectActionParameterMixedIn}.\n      */\n-    TypedHolder getPeer() {\n+    public TypedHolder getPeer() {\n         return peer;\n     }\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java"
            },
            {
                "additions": 10,
                "sha": "3527c891a629629eb7a8e69e1cb931a049a5b1a7",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterContributeeAbstract.java",
                "deletions": 5,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterContributeeAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterContributeeAbstract.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -28,17 +28,18 @@\n         extends ObjectActionParameterAbstract\n         implements ObjectActionParameterContributee {\n \n-    private final ObjectAdapter serviceAdapter;\n+    private final Object servicePojo;\n     private final ObjectActionParameter serviceActionParameter;\n     private final ObjectActionContributee contributeeAction;\n \n     public ObjectActionParameterContributeeAbstract(\n-            final FeatureType featureType, final ObjectAdapter serviceAdapter,\n+            final FeatureType featureType,\n+            final Object servicePojo,\n             final ObjectActionParameterAbstract serviceActionParameter,\n             final int contributeeParamNumber,\n             final ObjectActionContributee contributeeAction) {\n         super(featureType, contributeeParamNumber, contributeeAction, serviceActionParameter.getPeer());\n-        this.serviceAdapter = serviceAdapter;\n+        this.servicePojo = servicePojo;\n         this.serviceActionParameter = serviceActionParameter;\n         this.contributeeAction = contributeeAction;\n     }\n@@ -48,12 +49,16 @@ public ObjectActionParameterContributeeAbstract(\n             final ObjectAdapter adapter,\n             final String searchArg,\n             final InteractionInitiatedBy interactionInitiatedBy) {\n-        return serviceActionParameter.getAutoComplete(serviceAdapter, searchArg,\n+        return serviceActionParameter.getAutoComplete(getServiceAdapter(), searchArg,\n                 interactionInitiatedBy);\n     }\n \n+    protected ObjectAdapter getServiceAdapter() {\n+        return getObjectPersistor().adapterFor(servicePojo);\n+    }\n+\n     protected ObjectAdapter targetForDefaultOrChoices(final ObjectAdapter adapter) {\n-        return serviceAdapter;\n+        return getServiceAdapter();\n     }\n \n     protected List<ObjectAdapter> argsForDefaultOrChoices(",
                "changes": 15,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterContributeeAbstract.java"
            },
            {
                "additions": 3,
                "sha": "fe9b14de29ac541b547291c05a1498253dad42db",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectMemberAbstract.java",
                "deletions": 0,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectMemberAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectMemberAbstract.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -117,6 +117,9 @@ public FeatureType getFeatureType() {\n \n     //region > Facets\n \n+    /**\n+     * Not API.\n+     */\n     public FacetedMethod getFacetedMethod() {\n         return facetedMethod;\n     }",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectMemberAbstract.java"
            },
            {
                "additions": 2,
                "sha": "ed5e622eb7be8ec0621b8994fa770a50360197ba",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyActionParameterContributee.java",
                "deletions": 3,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyActionParameterContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyActionParameterContributee.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -16,7 +16,6 @@\n  */\n package org.apache.isis.core.metamodel.specloader.specimpl;\n \n-import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.facetapi.FeatureType;\n import org.apache.isis.core.metamodel.facets.collparam.semantics.CollectionSemantics;\n import org.apache.isis.core.metamodel.facets.collparam.semantics.CollectionSemanticsFacet;\n@@ -27,11 +26,11 @@\n         implements OneToManyActionParameter {\n \n     public OneToManyActionParameterContributee(\n-            final ObjectAdapter serviceAdapter,\n+            final Object servicePojo,\n             final ObjectActionParameterAbstract serviceActionParameter,\n             final int contributeeParamNumber,\n             final ObjectActionContributee contributeeAction) {\n-        super(FeatureType.ACTION_PARAMETER_COLLECTION, serviceAdapter, serviceActionParameter, contributeeParamNumber, contributeeAction);\n+        super(FeatureType.ACTION_PARAMETER_COLLECTION, servicePojo, serviceActionParameter, contributeeParamNumber, contributeeAction);\n     }\n \n     @Override",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyActionParameterContributee.java"
            },
            {
                "additions": 5,
                "sha": "4c53dac79c20edc96fbb157b00ec4e8f3bfd49a9",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java",
                "deletions": 0,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -123,6 +123,11 @@ public ObjectAdapter get(final ObjectAdapter ownerAdapter, final InteractionInit\n         return serviceAction.execute(getServiceAdapter(), null, new ObjectAdapter[]{ownerAdapter}, interactionInitiatedBy);\n     }\n \n+    @Override\n+    public ObjectSpecification getOnType() {\n+        return serviceAction.getOnType();\n+    }\n+\n     @Override\n     public Identifier getIdentifier() {\n         return identifier;",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java"
            },
            {
                "additions": 5,
                "sha": "f71777e53a3f522bb2ea98a2e254056c78dc94ee",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationMixedIn.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationMixedIn.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationMixedIn.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -206,10 +206,14 @@ protected FacetHolder getFacetHolder() {\n         return facetHolder;\n     }\n \n+    @Override\n+    public ObjectSpecification getOnType() {\n+        return mixedInType;\n+    }\n+\n     @Override\n     public ObjectSpecification getMixinType() {\n         return getSpecificationLoader().loadSpecification(mixinType);\n-\n     }\n \n     //endregion",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationMixedIn.java"
            },
            {
                "additions": 2,
                "sha": "b98d326d3a0234e9e97c6e3f157c9dc0145be878",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java",
                "deletions": 3,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -16,7 +16,6 @@\n  */\n package org.apache.isis.core.metamodel.specloader.specimpl;\n \n-import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.facetapi.FeatureType;\n import org.apache.isis.core.metamodel.spec.feature.OneToOneActionParameter;\n \n@@ -25,11 +24,11 @@\n         implements OneToOneActionParameter {\n \n     public OneToOneActionParameterContributee(\n-            final ObjectAdapter serviceAdapter,\n+            final Object servicePojo,\n             final ObjectActionParameterAbstract serviceActionParameter,\n             final int contributeeParamNumber,\n             final ObjectActionContributee contributeeAction) {\n-        super(FeatureType.ACTION_PARAMETER_SCALAR, serviceAdapter, serviceActionParameter, contributeeParamNumber, contributeeAction);\n+        super(FeatureType.ACTION_PARAMETER_SCALAR, servicePojo, serviceActionParameter, contributeeParamNumber, contributeeAction);\n     }\n \n ",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java"
            },
            {
                "additions": 5,
                "sha": "fdb3b1ba1808fac1054baeda8d7aa9292841c4e2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java",
                "deletions": 0,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -105,6 +105,11 @@ public ObjectAdapter get(final ObjectAdapter ownerAdapter, final InteractionInit\n         return serviceAction.execute(getServiceAdapter(), null, new ObjectAdapter[]{ownerAdapter}, interactionInitiatedBy);\n     }\n \n+    @Override\n+    public ObjectSpecification getOnType() {\n+        return serviceAction.getOnType();\n+    }\n+\n     @Override\n     public Identifier getIdentifier() {\n         return identifier;",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java"
            },
            {
                "additions": 46,
                "sha": "28b5a3983380987b302115bd4fba7c9941aa19ef",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/dflt/ObjectSpecificationDefault.java",
                "deletions": 11,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/dflt/ObjectSpecificationDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/dflt/ObjectSpecificationDefault.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -31,9 +31,11 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import org.apache.isis.applib.annotation.HomePage;\n import org.apache.isis.applib.annotation.NatureOfService;\n import org.apache.isis.applib.filter.Filter;\n import org.apache.isis.applib.filter.Filters;\n+import org.apache.isis.applib.fixturescripts.FixtureScript;\n import org.apache.isis.core.commons.lang.StringExtensions;\n import org.apache.isis.core.commons.util.ToString;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n@@ -45,6 +47,7 @@\n import org.apache.isis.core.metamodel.facets.all.i18n.PluralFacetTranslated;\n import org.apache.isis.core.metamodel.facets.all.named.NamedFacet;\n import org.apache.isis.core.metamodel.facets.all.named.NamedFacetInferred;\n+import org.apache.isis.core.metamodel.facets.object.domainservice.DomainServiceFacet;\n import org.apache.isis.core.metamodel.facets.object.mixin.MixinFacet;\n import org.apache.isis.core.metamodel.facets.object.plural.PluralFacet;\n import org.apache.isis.core.metamodel.facets.object.plural.inferred.PluralFacetInferred;\n@@ -206,17 +209,20 @@ private void addNamedFacetAndPluralFacetIfRequired() {\n \n     //region > create associations and actions\n     private List<ObjectAssociation> createAssociations(Properties properties) {\n-        final List<FacetedMethod> associationFacetedMethods = facetedMethodsBuilder.getAssociationFacetedMethods(properties);\n         final List<ObjectAssociation> associations = Lists.newArrayList();\n-        for (FacetedMethod facetedMethod : associationFacetedMethods) {\n-            final ObjectAssociation association = createAssociation(facetedMethod);\n-            if(association != null) {\n-                associations.add(association);\n+        if(skipAssociationsAndActions()) {\n+            // add no associations\n+        } else {\n+            final List<FacetedMethod> associationFacetedMethods = facetedMethodsBuilder.getAssociationFacetedMethods(properties);\n+            for (FacetedMethod facetedMethod : associationFacetedMethods) {\n+                final ObjectAssociation association = createAssociation(facetedMethod);\n+                if(association != null) {\n+                    associations.add(association);\n+                }\n             }\n         }\n         return associations;\n     }\n-    \n \n     private ObjectAssociation createAssociation(final FacetedMethod facetMethod) {\n         if (facetMethod.getFeatureType().isCollection()) {\n@@ -229,12 +235,16 @@ private ObjectAssociation createAssociation(final FacetedMethod facetMethod) {\n     }\n \n     private List<ObjectAction> createActions(Properties metadataProperties) {\n-        final List<FacetedMethod> actionFacetedMethods = facetedMethodsBuilder.getActionFacetedMethods(metadataProperties);\n         final List<ObjectAction> actions = Lists.newArrayList();\n-        for (FacetedMethod facetedMethod : actionFacetedMethods) {\n-            final ObjectAction action = createAction(facetedMethod);\n-            if(action != null) {\n-                actions.add(action);\n+        if(skipAssociationsAndActions()) {\n+            // create no actions\n+        } else {\n+            final List<FacetedMethod> actionFacetedMethods = facetedMethodsBuilder.getActionFacetedMethods(metadataProperties);\n+            for (FacetedMethod facetedMethod : actionFacetedMethods) {\n+                final ObjectAction action = createAction(facetedMethod);\n+                if(action != null) {\n+                    actions.add(action);\n+                }\n             }\n         }\n         return actions;\n@@ -249,6 +259,31 @@ private ObjectAction createAction(final FacetedMethod facetedMethod) {\n         }\n     }\n \n+    private boolean skipAssociationsAndActions() {\n+        return isFixtureScript() || isDomainServiceWithDomainNatureOfServiceNotHomePage();\n+    }\n+\n+    // TODO: this is a bit horrible; maybe instead introduce a new NatureOfService for home page services (also for seed services?)\n+    private boolean isDomainServiceWithDomainNatureOfServiceNotHomePage() {\n+        final DomainServiceFacet domainServiceFacet = this.getFacet(DomainServiceFacet.class);\n+        if (domainServiceFacet == null) {\n+            return false;\n+        }\n+        if (domainServiceFacet.getNatureOfService() != NatureOfService.DOMAIN) {\n+            return false;\n+        }\n+        // domain services that have a single method annotated with @HomePage ARE introspected.\n+        final Method[] methods = getCorrespondingClass().getDeclaredMethods();\n+        if (methods.length != 1) {\n+            return true;\n+        }\n+        return methods[0].getAnnotation(HomePage.class) == null;\n+    }\n+\n+    private boolean isFixtureScript() {\n+        return FixtureScript.class.isAssignableFrom(getCorrespondingClass());\n+    }\n+\n     //endregion\n \n     //region > isXxx",
                "changes": 57,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/dflt/ObjectSpecificationDefault.java"
            },
            {
                "additions": 11,
                "sha": "ab64d00bacbc9d5a872a5a2eb237fe3c4b447974",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/ProgrammingModelFacetsJava5.java",
                "deletions": 21,
                "filename": "core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/ProgrammingModelFacetsJava5.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/ProgrammingModelFacetsJava5.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -41,7 +41,6 @@\n import org.apache.isis.core.metamodel.facets.collections.accessor.CollectionAccessorFacetViaAccessorFactory;\n import org.apache.isis.core.metamodel.facets.collections.clear.CollectionClearFacetFactory;\n import org.apache.isis.core.metamodel.facets.collections.collection.CollectionAnnotationFacetFactory;\n-import org.apache.isis.core.metamodel.facets.collections.disabled.fromimmutable.DisabledFacetOnCollectionDerivedFromImmutableFactory;\n import org.apache.isis.core.metamodel.facets.collections.javautilcollection.CollectionFacetFactory;\n import org.apache.isis.core.metamodel.facets.collections.layout.CollectionLayoutFacetFactory;\n import org.apache.isis.core.metamodel.facets.collections.modify.CollectionAddToRemoveFromAndValidateFacetFactory;\n@@ -103,7 +102,6 @@\n import org.apache.isis.core.metamodel.facets.object.ignore.javalang.RemoveMethodsFacetFactory;\n import org.apache.isis.core.metamodel.facets.object.ignore.jdo.RemoveJdoEnhancementTypesFacetFactory;\n import org.apache.isis.core.metamodel.facets.object.ignore.jdo.RemoveJdoPrefixedMethodsFacetFactory;\n-import org.apache.isis.core.metamodel.facets.object.immutable.immutableannot.CopyImmutableFacetOntoMembersFactory;\n import org.apache.isis.core.metamodel.facets.object.immutable.immutablemarkerifc.ImmutableFacetMarkerInterfaceFactory;\n import org.apache.isis.core.metamodel.facets.object.mask.annotation.MaskFacetOnTypeAnnotationFactory;\n import org.apache.isis.core.metamodel.facets.object.maxlen.annotation.MaxLengthFacetOnTypeAnnotationFactory;\n@@ -132,30 +130,22 @@\n import org.apache.isis.core.metamodel.facets.object.value.annotcfg.ValueFacetAnnotationOrConfigurationFactory;\n import org.apache.isis.core.metamodel.facets.param.autocomplete.method.ActionParameterAutoCompleteFacetViaMethodFactory;\n import org.apache.isis.core.metamodel.facets.param.bigdecimal.javaxvaldigits.BigDecimalFacetOnParameterFromJavaxValidationAnnotationFactory;\n-import org.apache.isis.core.metamodel.facets.param.choices.enums.ActionParameterChoicesFacetDerivedFromChoicesFacetFactory;\n import org.apache.isis.core.metamodel.facets.param.choices.method.ActionChoicesFacetViaMethodFactory;\n import org.apache.isis.core.metamodel.facets.param.choices.methodnum.ActionParameterChoicesFacetViaMethodFactory;\n-import org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFactory;\n import org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethodFactory;\n-import org.apache.isis.core.metamodel.postprocessors.param.ActionCollectionParameterDefaultsAndChoicesPostProcessor;\n-import org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterAnnotationElseDerivedFromTypeFactory;\n import org.apache.isis.core.metamodel.facets.param.layout.ParameterLayoutFacetFactory;\n import org.apache.isis.core.metamodel.facets.param.mandatory.dflt.MandatoryFacetOnParametersDefaultFactory;\n import org.apache.isis.core.metamodel.facets.param.multiline.annotation.MultiLineFacetOnParameterAnnotationFactory;\n import org.apache.isis.core.metamodel.facets.param.named.annotation.NamedFacetOnParameterAnnotationFactory;\n import org.apache.isis.core.metamodel.facets.param.parameter.ParameterAnnotationFacetFactory;\n import org.apache.isis.core.metamodel.facets.param.renderedasdaybefore.annotation.RenderedAsDayBeforeFacetOnParameterAnnotationFactory;\n import org.apache.isis.core.metamodel.facets.param.typicallen.annotation.TypicalLengthFacetOnParameterAnnotationFactory;\n-import org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromTypeFacetFactory;\n import org.apache.isis.core.metamodel.facets.param.validating.maskannot.MaskFacetOnParameterAnnotationFactory;\n import org.apache.isis.core.metamodel.facets.properties.accessor.PropertyAccessorFacetViaAccessorFactory;\n import org.apache.isis.core.metamodel.facets.properties.autocomplete.method.PropertyAutoCompleteFacetMethodFactory;\n import org.apache.isis.core.metamodel.facets.properties.bigdecimal.javaxvaldigits.BigDecimalFacetOnPropertyFromJavaxValidationDigitsAnnotationFactory;\n-import org.apache.isis.core.metamodel.facets.properties.choices.enums.PropertyChoicesFacetDerivedFromChoicesFacetFactory;\n import org.apache.isis.core.metamodel.facets.properties.choices.method.PropertyChoicesFacetViaMethodFactory;\n-import org.apache.isis.core.metamodel.facets.properties.defaults.fromtype.PropertyDefaultFacetDerivedFromTypeFactory;\n import org.apache.isis.core.metamodel.facets.properties.defaults.method.PropertyDefaultFacetViaMethodFactory;\n-import org.apache.isis.core.metamodel.facets.properties.disabled.fromimmutable.DisabledFacetOnPropertyDerivedFromImmutableFactory;\n import org.apache.isis.core.metamodel.facets.properties.disabled.inferred.DisabledFacetOnPropertyInferredFactory;\n import org.apache.isis.core.metamodel.facets.properties.mandatory.dflt.MandatoryFacetOnProperyDefaultFactory;\n import org.apache.isis.core.metamodel.facets.properties.mandatory.staticmethod.MandatoryFacetOnPropertyStaticMethodFactory;\n@@ -164,7 +154,6 @@\n import org.apache.isis.core.metamodel.facets.properties.propertylayout.PropertyLayoutFacetFactory;\n import org.apache.isis.core.metamodel.facets.properties.renderedasdaybefore.annotation.RenderedAsDayBeforeAnnotationOnPropertyFacetFactory;\n import org.apache.isis.core.metamodel.facets.properties.typicallen.annotation.TypicalLengthOnPropertyFacetFactory;\n-import org.apache.isis.core.metamodel.facets.properties.typicallen.fromtype.TypicalLengthFacetOnPropertyDerivedFromTypeFacetFactory;\n import org.apache.isis.core.metamodel.facets.properties.update.PropertyModifyFacetFactory;\n import org.apache.isis.core.metamodel.facets.properties.update.PropertySetAndClearFacetFactory;\n import org.apache.isis.core.metamodel.facets.properties.validating.dflt.PropertyValidateFacetDefaultFactory;\n@@ -210,6 +199,7 @@\n import org.apache.isis.core.metamodel.facets.value.timestampsql.JavaSqlTimeStampValueFacetUsingSemanticsProviderFactory;\n import org.apache.isis.core.metamodel.facets.value.url.URLValueFacetUsingSemanticsProviderFactory;\n import org.apache.isis.core.metamodel.facets.value.uuid.UUIDValueFacetUsingSemanticsProviderFactory;\n+import org.apache.isis.core.metamodel.postprocessors.param.ActionCollectionParameterDefaultsAndChoicesPostProcessor;\n import org.apache.isis.core.metamodel.progmodel.ObjectSpecificationPostProcessor;\n import org.apache.isis.core.metamodel.progmodel.ProgrammingModelAbstract;\n \n@@ -254,8 +244,8 @@ public ProgrammingModelFacetsJava5(final DeprecatedPolicy deprecatedPolicy) {\n \n         // enum support\n         addFactory(new EnumFacetUsingValueFacetUsingSemanticsProviderFactory());\n-        addFactory(new ActionParameterChoicesFacetDerivedFromChoicesFacetFactory());\n-        addFactory(new PropertyChoicesFacetDerivedFromChoicesFacetFactory());\n+        // addFactory(new ActionParameterChoicesFacetDerivedFromChoicesFacetFactory()); ... moved into post-processor, see below\n+        // addFactory(new PropertyChoicesFacetDerivedFromChoicesFacetFactory()); ... moved into post-processor, see below\n \n         // properties\n         addFactory(new PropertyAccessorFacetViaAccessorFactory());\n@@ -329,13 +319,13 @@ public ProgrammingModelFacetsJava5(final DeprecatedPolicy deprecatedPolicy) {\n         addFactory(new ChoicesFacetFromBoundedMarkerInterfaceFactory());\n \n         addFactory(new DefaultedFacetAnnotationElseConfigurationFactory());\n-        addFactory(new PropertyDefaultFacetDerivedFromTypeFactory());\n-        addFactory(new ActionParameterDefaultFacetDerivedFromTypeFactory());\n+        //addFactory(new PropertyDefaultFacetDerivedFromTypeFactory()); ... logic moved to post-processor\n+        //addFactory(new ActionParameterDefaultFacetDerivedFromTypeFactory()); ... logic moved to post-processor\n \n         \n         addFactory(new DescribedAsFacetOnTypeAnnotationFactory());\n         addFactory(new DescribedAsFacetOnMemberFactory());\n-        addFactory(new DescribedAsFacetOnParameterAnnotationElseDerivedFromTypeFactory());\n+        //addFactory(new DescribedAsFacetOnParameterAnnotationElseDerivedFromTypeFactory()); ... logic moved to post-processor\n \n         addFactory(new BigDecimalFacetOnParameterFromJavaxValidationAnnotationFactory());\n         addFactory(new BigDecimalFacetOnPropertyFromJavaxValidationDigitsAnnotationFactory());\n@@ -372,7 +362,7 @@ public ProgrammingModelFacetsJava5(final DeprecatedPolicy deprecatedPolicy) {\n         addFactory(new HiddenObjectFacetViaMethodFactory());\n         addFactory(new DisabledObjectFacetViaMethodFactory());\n \n-        addFactory(new CopyImmutableFacetOntoMembersFactory());\n+        // addFactory(new CopyImmutableFacetOntoMembersFactory()); ... logic moved to post-processor\n         addFactory(new ImmutableFacetMarkerInterfaceFactory());\n \n         addFactory(new RecreatableObjectFacetFactory());\n@@ -460,8 +450,8 @@ public ProgrammingModelFacetsJava5(final DeprecatedPolicy deprecatedPolicy) {\n         \n         addFactory(new RegExFacetOnTypeAnnotationFactory());\n \n-        addFactory(new TypicalLengthFacetOnPropertyDerivedFromTypeFacetFactory());\n-        addFactory(new TypicalLengthFacetOnParameterDerivedFromTypeFacetFactory());\n+        // addFactory(new TypicalLengthFacetOnPropertyDerivedFromTypeFacetFactory()); ... logic moved to post-processor\n+        // addFactory(new TypicalLengthFacetOnParameterDerivedFromTypeFacetFactory()); ... logic moved to post-processor\n \n         \n         addFactory(new TypicalLengthFacetOnTypeAnnotationFactory());\n@@ -528,8 +518,8 @@ public ProgrammingModelFacetsJava5(final DeprecatedPolicy deprecatedPolicy) {\n         // so we can dogfood the applib \"value\" types\n         addFactory(new ValueFacetAnnotationOrConfigurationFactory());\n \n-        addFactory(new DisabledFacetOnPropertyDerivedFromImmutableFactory());\n-        addFactory(new DisabledFacetOnCollectionDerivedFromImmutableFactory());\n+        // addFactory(new DisabledFacetOnPropertyDerivedFromImmutableFactory()); ... logic moved to post-processor\n+        // addFactory(new DisabledFacetOnCollectionDerivedFromImmutableFactory()); ... logic moved to post-processor\n \n         // should come near the end, after any facets that install PropertySetterFacet have run.\n         addFactory(new DisabledFacetOnPropertyInferredFactory());",
                "changes": 32,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/ProgrammingModelFacetsJava5.java"
            },
            {
                "additions": 3,
                "sha": "4ea86195b07bc98b603903125ff55180575879d6",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefaultTest.java",
                "deletions": 3,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefaultTest.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefaultTest.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -23,15 +23,15 @@\n \n import com.google.common.collect.Maps;\n \n-import org.apache.isis.core.metamodel.spec.ObjectSpecId;\n-import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.jmock.Expectations;\n import org.jmock.auto.Mock;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n \n+import org.apache.isis.core.metamodel.spec.ObjectSpecId;\n+import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2;\n import org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2.Mode;\n \n@@ -109,7 +109,7 @@ public void getByObjectType_whenSet() {\n         Map<ObjectSpecId, ObjectSpecification> specByObjectType = Maps.newHashMap();\n         specByObjectType.put(ObjectSpecId.of(\"CUS\"), customerSpec);\n         \n-        specificationCache.init(specByObjectType);\n+        specificationCache.internalInit(specByObjectType);\n         final ObjectSpecification objectSpec = specificationCache.getByObjectType(ObjectSpecId.of(\"CUS\"));\n         \n         assertSame(objectSpec, customerSpec);",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/SpecificationCacheDefaultTest.java"
            },
            {
                "additions": 1,
                "sha": "6ca987e12e48d8a7eaa78a587ca1aef8578fc814",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactoryBuilder.java",
                "deletions": 1,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactoryBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactoryBuilder.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -260,6 +260,7 @@ public String toString() {\n             );\n \n             ThreadPoolSupport.getInstance().joinGatherFailures(futures);\n+            specificationLoader.postProcess();\n \n             persistenceSessionFactory.catalogNamedQueries(specificationLoader);\n \n@@ -269,7 +270,6 @@ public String toString() {\n                     new Runnable() {\n                         @Override\n                         public void run() {\n-                            specificationLoader.postProcess();\n                             try {\n                                 specificationLoader.validateAndAssert();\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactoryBuilder.java"
            },
            {
                "additions": 58,
                "sha": "680cf05e43f3731c9b51a41ecf7af620bd557c97",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java",
                "deletions": 17,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -41,17 +41,23 @@\n \n import org.apache.isis.applib.AppManifest;\n import org.apache.isis.applib.annotation.DomainObject;\n+import org.apache.isis.applib.annotation.DomainObjectLayout;\n import org.apache.isis.applib.annotation.DomainService;\n+import org.apache.isis.applib.annotation.DomainServiceLayout;\n import org.apache.isis.applib.annotation.Mixin;\n import org.apache.isis.applib.annotation.Nature;\n+import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.annotation.ViewModel;\n+import org.apache.isis.applib.annotation.ViewModelLayout;\n+import org.apache.isis.applib.fixturescripts.DiscoverableFixtureScript;\n import org.apache.isis.applib.fixturescripts.FixtureScript;\n import org.apache.isis.applib.services.classdiscovery.ClassDiscoveryServiceUsingReflections;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n import org.apache.isis.core.commons.factory.InstanceUtil;\n import org.apache.isis.core.commons.lang.ClassUtil;\n import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n+import org.apache.isis.core.metamodel.facets.Annotations;\n import org.apache.isis.core.metamodel.layoutmetadata.LayoutMetadataReader;\n import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n import org.apache.isis.core.metamodel.services.ServicesInjector;\n@@ -144,27 +150,53 @@ private void findAndRegisterTypes(final AppManifest appManifest) {\n \n         final Reflections reflections = new Reflections(moduleAndFrameworkPackages);\n \n-        final Set<Class<?>> domainServiceTypes = reflections.getTypesAnnotatedWith(DomainService.class);\n-        final Set<Class<?>> persistenceCapableTypes = reflections.getTypesAnnotatedWith(PersistenceCapable.class);\n-        final Set<Class<? extends FixtureScript>> fixtureScriptTypes = reflections.getSubTypesOf(FixtureScript.class);\n+        final Set<Class<?>> domainServiceTypes = Sets.newLinkedHashSet();\n+        domainServiceTypes.addAll(reflections.getTypesAnnotatedWith(DomainService.class));\n+        domainServiceTypes.addAll(reflections.getTypesAnnotatedWith(DomainServiceLayout.class));\n+\n+        final Set<Class<?>> persistenceCapableTypes = Sets.newLinkedHashSet();\n+        persistenceCapableTypes.addAll(reflections.getTypesAnnotatedWith(PersistenceCapable.class));\n+\n+        // the fixtureScript types are introspected just to provide a drop-down when running fixture scripts\n+        // in prototyping mode (though they may be introspected lazily if actually run).\n+        // we therefore try to limit the set of fixture types eagerly introspected at startup\n+        final Set<Class<? extends FixtureScript>> fixtureScriptTypes = Sets.newLinkedHashSet();\n+        fixtureScriptTypes.addAll(\n+            FluentIterable.from(reflections.getSubTypesOf(FixtureScript.class)).\n+                filter(new Predicate<Class<?>>(){\n+                    @Override\n+                    public boolean apply(@Nullable final Class<?> aClass) {\n+                        // ignore as a fixture script if annotated with @Programmatic\n+                        // (though directly implementing DiscoverableFixtureScript takes precedence and will NOT ignore)\n+                        return DiscoverableFixtureScript.class.isAssignableFrom(aClass) ||\n+                        Annotations.getAnnotation(aClass, Programmatic.class) == null;\n+                    }\n+                })\n+                .toList());\n+\n+        final Set<Class<?>> domainObjectTypes = Sets.newLinkedHashSet();\n+        domainObjectTypes.addAll(reflections.getTypesAnnotatedWith(DomainObject.class));\n+        domainObjectTypes.addAll(reflections.getTypesAnnotatedWith(DomainObjectLayout.class));\n \n         final Set<Class<?>> mixinTypes = Sets.newHashSet();\n         mixinTypes.addAll(reflections.getTypesAnnotatedWith(Mixin.class));\n-\n-        final Set<Class<?>> domainObjectTypes = reflections.getTypesAnnotatedWith(DomainObject.class);\n         mixinTypes.addAll(\n                 Lists.newArrayList(Iterables.filter(domainObjectTypes, new Predicate<Class<?>>() {\n                     @Override\n                     public boolean apply(@Nullable final Class<?> input) {\n                         if(input == null) { return false; }\n                         final DomainObject annotation = input.getAnnotation(DomainObject.class);\n-                        return annotation.nature() == Nature.MIXIN;\n+                        return annotation != null && annotation.nature() == Nature.MIXIN;\n                     }\n                 }))\n         );\n \n-        final Set<Class<?>> viewModelTypes = reflections.getTypesAnnotatedWith(ViewModel.class);\n-        final Set<Class<?>> xmlElementTypes = reflections.getTypesAnnotatedWith(XmlElement.class);\n+        final Set<Class<?>> viewModelTypes = Sets.newLinkedHashSet();\n+        viewModelTypes.addAll(reflections.getTypesAnnotatedWith(ViewModel.class));\n+        viewModelTypes.addAll(reflections.getTypesAnnotatedWith(ViewModelLayout.class));\n+\n+        final Set<Class<?>> xmlElementTypes = Sets.newLinkedHashSet();\n+        xmlElementTypes.addAll(reflections.getTypesAnnotatedWith(XmlElement.class));\n \n         // add in any explicitly registered services...\n         domainServiceTypes.addAll(appManifest.getAdditionalServices());\n@@ -183,27 +215,28 @@ public String apply(@Nullable final String s) {\n                 }\n             }).toList();\n \n-        registry.setDomainServiceTypes(within(packagesWithDotSuffix, domainServiceTypes));\n-        registry.setPersistenceCapableTypes(within(packagesWithDotSuffix, persistenceCapableTypes));\n-        registry.setFixtureScriptTypes(within(packagesWithDotSuffix, fixtureScriptTypes));\n-        registry.setMixinTypes(within(packagesWithDotSuffix, mixinTypes));\n-        registry.setDomainObjectTypes(within(packagesWithDotSuffix, domainObjectTypes));\n-        registry.setViewModelTypes(within(packagesWithDotSuffix, viewModelTypes));\n-        registry.setXmlElementTypes(within(packagesWithDotSuffix, xmlElementTypes));\n+        registry.setDomainServiceTypes(withinPackageAndNotAnonymous(packagesWithDotSuffix, domainServiceTypes));\n+        registry.setPersistenceCapableTypes(withinPackageAndNotAnonymous(packagesWithDotSuffix, persistenceCapableTypes));\n+        registry.setFixtureScriptTypes(withinPackageAndNotAnonymous(packagesWithDotSuffix, fixtureScriptTypes));\n+        registry.setMixinTypes(withinPackageAndNotAnonymous(packagesWithDotSuffix, mixinTypes));\n+        registry.setDomainObjectTypes(withinPackageAndNotAnonymous(packagesWithDotSuffix, domainObjectTypes));\n+        registry.setViewModelTypes(withinPackageAndNotAnonymous(packagesWithDotSuffix, viewModelTypes));\n+        registry.setXmlElementTypes(withinPackageAndNotAnonymous(packagesWithDotSuffix, xmlElementTypes));\n     }\n \n-    static <T> Set<Class<? extends T>> within(\n+    static <T> Set<Class<? extends T>> withinPackageAndNotAnonymous(\n             final List<String> packagesWithDotSuffix,\n             final Set<Class<? extends T>> classes) {\n         Set<Class<? extends T>> classesWithin = Sets.newLinkedHashSet();\n         for (Class<? extends T> clz : classes) {\n             final String className = clz.getName();\n-            if(containedWithin(packagesWithDotSuffix, className)) {\n+            if(containedWithin(packagesWithDotSuffix, className) && notAnonymous(clz)) {\n                 classesWithin.add(clz);\n             }\n         }\n         return classesWithin;\n     }\n+\n     static private boolean containedWithin(final List<String> packagesWithDotSuffix, final String className) {\n         for (String packageWithDotSuffix : packagesWithDotSuffix) {\n             if(className.startsWith(packageWithDotSuffix)) {\n@@ -213,6 +246,14 @@ static private boolean containedWithin(final List<String> packagesWithDotSuffix,\n         return false;\n     }\n \n+    private static <T> boolean notAnonymous(final Class<? extends T> clz) {\n+        try {\n+            return !clz.isAnonymousClass();\n+        } catch(NoClassDefFoundError error) {\n+            return false; // ignore, assume anonymous\n+        }\n+    }\n+\n     private void specifyServicesAndRegisteredEntitiesUsing(final AppManifest appManifest) {\n         final Iterable<String> packageNames = modulePackageNamesFrom(appManifest);\n         final String packageNamesCsv = Joiner.on(',').join(packageNames);",
                "changes": 75,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java"
            },
            {
                "additions": 1,
                "sha": "88816e2b8c845d8f9ac08f9e5675bda84ad2964a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/core/runtime/src/test/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider_within_Test.java",
                "deletions": 1,
                "filename": "core/runtime/src/test/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider_within_Test.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/test/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider_within_Test.java?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -40,7 +40,7 @@ public void within() throws Exception {\n         final String budgetAssignmentPackageWithDot =\n                 SomeServiceNotToInclude.class.getPackage().getName()  + \".\";\n \n-        final Set<Class<?>> within = IsisComponentProvider.within(Arrays.asList(budgetPackageWithDot),\n+        final Set<Class<?>> within = IsisComponentProvider.withinPackageAndNotAnonymous(Arrays.asList(budgetPackageWithDot),\n                 Sets.newHashSet(SomeServiceToInclude.class, SomeServiceNotToInclude.class));\n \n         Assert.assertThat(within.size(), is(equalTo(1)));",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/core/runtime/src/test/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider_within_Test.java"
            },
            {
                "additions": 304,
                "sha": "4258961c2d0bc2b5bad2c5cd4883f0af2fa2fc08",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.fixture.scenarios.DomainAppDemo.xml",
                "deletions": 0,
                "filename": "example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.fixture.scenarios.DomainAppDemo.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.fixture.scenarios.DomainAppDemo.xml?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -0,0 +1,304 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<mml:domainClassDto id=\"domainapp.application.fixture.scenarios.DomainAppDemo\" xmlns:mml=\"http://isis.apache.org/schema/metamodel\">\n+    <mml:facets>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n+            <mml:attr name=\"context\">domainapp.application.fixture.scenarios.DomainAppDemo</mml:attr>\n+            <mml:attr name=\"originalText\">Script</mml:attr>\n+            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.object.domainobjectlayout.NamedFacetForViewModelLayoutAnnotation</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacetFallback\">\n+            <mml:attr name=\"bookmarkPolicy\">NEVER</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.grid.GridFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.grid.GridFacetDefault\"/>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.membergroups.MemberGroupLayoutFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.membergroups.annotprop.MemberGroupLayoutFacetFallback\">\n+            <mml:attr name=\"columns\">[4,0,0,8]</mml:attr>\n+            <mml:attr name=\"left\">General</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.notpersistable.NotPersistableFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.fallback.NotPersistableFacetNull\">\n+            <mml:attr name=\"disabling\">true</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.objectspecid.ObjectSpecIdFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.objectspecid.classname.ObjectSpecIdFacetDerivedFromClassName\">\n+            <mml:attr name=\"derived\">true</mml:attr>\n+            <mml:attr name=\"value\">domainapp.application.fixture.scenarios.DomainAppDemo</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.objectvalidprops.ObjectValidPropertiesFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.objectvalidprops.impl.ObjectValidPropertiesFacetImpl\">\n+            <mml:attr name=\"validating\">true</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.paged.PagedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.fallback.PagedFacetFromConfiguration\">\n+            <mml:attr name=\"derived\">true</mml:attr>\n+            <mml:attr name=\"value\">25</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.plural.PluralFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.PluralFacetTranslated\">\n+            <mml:attr name=\"context\">domainapp.application.fixture.scenarios.DomainAppDemo</mml:attr>\n+            <mml:attr name=\"derived\">true</mml:attr>\n+            <mml:attr name=\"originalText\">Script</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.title.TitleFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.title.annotation.TitleFacetViaTitleAnnotation\">\n+            <mml:attr name=\"components\"></mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.viewmodel.ViewModelFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.recreatable.RecreatableObjectFacetForRecreatableObjectInterface\">\n+            <mml:attr name=\"recreationMechanism\">INITIALIZES</mml:attr>\n+        </mml:facet>\n+        <mml:facet id=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacet\" fqcn=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacetImpl\">\n+            <mml:attr name=\"disabling\">true</mml:attr>\n+            <mml:attr name=\"hiding\">true</mml:attr>\n+        </mml:facet>\n+    </mml:facets>\n+    <mml:properties/>\n+    <mml:collections/>\n+    <mml:actions>\n+        <mml:act id=\"downloadLayoutXml\">\n+            <mml:facets>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.hidden.HiddenFacetForActionAnnotation\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.hidden.HiddenFacetForActionAnnotation\">\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                    <mml:attr name=\"when\">ALWAYS</mml:attr>\n+                    <mml:attr name=\"where\">NOWHERE</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionDomainEventFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionDomainEventFacetForActionAnnotation\">\n+                    <mml:attr name=\"disabling\">true</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                    <mml:attr name=\"validating\">true</mml:attr>\n+                    <mml:attr name=\"value\">org.apache.isis.applib.services.layout.Object_downloadLayoutXml.ActionDomainEvent</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionInvocationFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionInvocationFacetForDomainEventFromActionAnnotation\">\n+                    <mml:attr name=\"eventType\">org.apache.isis.applib.services.layout.Object_downloadLayoutXml.ActionDomainEvent</mml:attr>\n+                    <mml:attr name=\"intent.act\">EXECUTE</mml:attr>\n+                    <mml:attr name=\"methods\">public java.lang.Object org.apache.isis.applib.services.layout.Object_downloadLayoutXml.act(java.lang.String,org.apache.isis.applib.services.layout.LayoutService$Style)</mml:attr>\n+                    <mml:attr name=\"onType\">org.apache.isis.applib.services.layout.Object_downloadLayoutXml</mml:attr>\n+                    <mml:attr name=\"returnType\">java.lang.Object</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.bulk.BulkFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.bulk.BulkFacetForActionAnnotation\">\n+                    <mml:attr name=\"value\">REGULAR_ONLY</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.notcontributed.NotContributedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.NotContributedFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"as\">ASSOCIATION</mml:attr>\n+                    <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.actions.notcontributed.derived.NotContributedFacetDerivedFromMixinFacet</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.position.ActionPositionFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.ActionPositionFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"position\">PANEL_DROPDOWN</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.prototype.PrototypeFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.prototype.PrototypeFacetForActionAnnotation\">\n+                    <mml:attr name=\"deploymentCategory\">PRODUCTION</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n+                    <mml:attr name=\"value\">SAFE</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n+                    <mml:attr name=\"context\">domainapp.application.fixture.scenarios.DomainAppDemo#downloadLayoutXml()</mml:attr>\n+                    <mml:attr name=\"originalText\">Download Layout Xml</mml:attr>\n+                    <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.all.named.NamedFacetInferred</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.collections.collection.defaultview.DefaultViewFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.collections.layout.DefaultViewFacetForCollectionLayoutAnnotation\">\n+                    <mml:attr name=\"value\">hidden</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.members.cssclassfa.CssClassFaFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.CssClassFaFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"position\">LEFT</mml:attr>\n+                    <mml:attr name=\"value\">fa fa-fw fa-download</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.members.order.MemberOrderFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.order.annotprop.MemberOrderFacetAnnotation\">\n+                    <mml:attr name=\"name\">datanucleusIdLong</mml:attr>\n+                    <mml:attr name=\"originalName\">datanucleusIdLong</mml:attr>\n+                    <mml:attr name=\"sequence\">700.1</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacetFallback\">\n+                    <mml:attr name=\"bookmarkPolicy\">NEVER</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.promptStyle.PromptStyleFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.promptStyle.PromptStyleFacetFallBackToInline\">\n+                    <mml:attr name=\"derived\">true</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.properties.renderunchanged.UnchangingFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.properties.propertylayout.UnchangingFacetOnPropertyFromLayoutProperties\">\n+                    <mml:attr name=\"value\">false</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacet\" fqcn=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacetImpl\">\n+                    <mml:attr name=\"disabling\">true</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                </mml:facet>\n+            </mml:facets>\n+            <mml:returnType>java.lang.Object</mml:returnType>\n+            <mml:params>\n+                <mml:param xsi:type=\"mml:scalarParam\" id=\"fileName\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+                    <mml:facets>\n+                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n+                            <mml:attr name=\"context\">org.apache.isis.applib.services.layout.Object_downloadLayoutXml#act(java.lang.String,org.apache.isis.applib.services.layout.LayoutService$Style)</mml:attr>\n+                            <mml:attr name=\"originalText\">File name</mml:attr>\n+                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.layout.NamedFacetForParameterLayoutAnnotation</mml:attr>\n+                        </mml:facet>\n+                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.labelat.LabelAtFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.layout.LabelAtFacetForParameterLayoutAnnotation\">\n+                            <mml:attr name=\"label\">DEFAULT</mml:attr>\n+                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.layout.LabelAtFacetForParameterLayoutAnnotation</mml:attr>\n+                        </mml:facet>\n+                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault\">\n+                            <mml:attr name=\"inverted\">false</mml:attr>\n+                            <mml:attr name=\"semantics\">REQUIRED</mml:attr>\n+                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault</mml:attr>\n+                            <mml:attr name=\"validating\">true</mml:attr>\n+                        </mml:facet>\n+                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n+                            <mml:attr name=\"intent.default0Act\">DEFAULTS</mml:attr>\n+                            <mml:attr name=\"methods\">public java.lang.String org.apache.isis.applib.services.layout.Object_downloadLayoutXml.default0Act()</mml:attr>\n+                        </mml:facet>\n+                    </mml:facets>\n+                    <mml:type>java.lang.String</mml:type>\n+                </mml:param>\n+                <mml:param xsi:type=\"mml:scalarParam\" id=\"style\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+                    <mml:facets>\n+                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault\">\n+                            <mml:attr name=\"inverted\">false</mml:attr>\n+                            <mml:attr name=\"semantics\">REQUIRED</mml:attr>\n+                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault</mml:attr>\n+                            <mml:attr name=\"validating\">true</mml:attr>\n+                        </mml:facet>\n+                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n+                            <mml:attr name=\"intent.default1Act\">DEFAULTS</mml:attr>\n+                            <mml:attr name=\"methods\">public org.apache.isis.applib.services.layout.LayoutService$Style org.apache.isis.applib.services.layout.Object_downloadLayoutXml.default1Act()</mml:attr>\n+                        </mml:facet>\n+                    </mml:facets>\n+                    <mml:type>org.apache.isis.applib.services.layout.LayoutService$Style</mml:type>\n+                </mml:param>\n+            </mml:params>\n+        </mml:act>\n+        <mml:act id=\"openRestApi\">\n+            <mml:facets>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.hidden.HiddenFacetForActionAnnotation\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.hidden.HiddenFacetForActionAnnotation\">\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                    <mml:attr name=\"when\">ALWAYS</mml:attr>\n+                    <mml:attr name=\"where\">NOWHERE</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionDomainEventFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionDomainEventFacetForActionAnnotation\">\n+                    <mml:attr name=\"disabling\">true</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                    <mml:attr name=\"validating\">true</mml:attr>\n+                    <mml:attr name=\"value\">org.apache.isis.applib.services.layout.Object_openRestApi.ActionDomainEvent</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionInvocationFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionInvocationFacetForDomainEventFromActionAnnotation\">\n+                    <mml:attr name=\"eventType\">org.apache.isis.applib.services.layout.Object_openRestApi.ActionDomainEvent</mml:attr>\n+                    <mml:attr name=\"intent.act\">EXECUTE</mml:attr>\n+                    <mml:attr name=\"methods\">public java.net.URL org.apache.isis.applib.services.layout.Object_openRestApi.act() throws java.net.MalformedURLException</mml:attr>\n+                    <mml:attr name=\"onType\">org.apache.isis.applib.services.layout.Object_openRestApi</mml:attr>\n+                    <mml:attr name=\"returnType\">java.net.URL</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.bulk.BulkFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.bulk.BulkFacetForActionAnnotation\">\n+                    <mml:attr name=\"value\">REGULAR_ONLY</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.notcontributed.NotContributedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.NotContributedFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"as\">ASSOCIATION</mml:attr>\n+                    <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.actions.notcontributed.derived.NotContributedFacetDerivedFromMixinFacet</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.position.ActionPositionFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.ActionPositionFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"position\">PANEL_DROPDOWN</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.prototype.PrototypeFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.prototype.PrototypeFacetForActionAnnotation\">\n+                    <mml:attr name=\"deploymentCategory\">PRODUCTION</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n+                    <mml:attr name=\"value\">SAFE</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n+                    <mml:attr name=\"context\">domainapp.application.fixture.scenarios.DomainAppDemo#openRestApi()</mml:attr>\n+                    <mml:attr name=\"originalText\">Open Rest Api</mml:attr>\n+                    <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.all.named.NamedFacetInferred</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.collections.collection.defaultview.DefaultViewFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.collections.layout.DefaultViewFacetForCollectionLayoutAnnotation\">\n+                    <mml:attr name=\"value\">hidden</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.members.cssclassfa.CssClassFaFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.CssClassFaFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"position\">LEFT</mml:attr>\n+                    <mml:attr name=\"value\">fa fa-fw fa-external-link</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.members.order.MemberOrderFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.order.annotprop.MemberOrderFacetAnnotation\">\n+                    <mml:attr name=\"name\">datanucleusIdLong</mml:attr>\n+                    <mml:attr name=\"originalName\">datanucleusIdLong</mml:attr>\n+                    <mml:attr name=\"sequence\">750.1</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacetFallback\">\n+                    <mml:attr name=\"bookmarkPolicy\">NEVER</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.promptStyle.PromptStyleFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.promptStyle.PromptStyleFacetFallBackToInline\">\n+                    <mml:attr name=\"derived\">true</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.properties.renderunchanged.UnchangingFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.properties.propertylayout.UnchangingFacetOnPropertyFromLayoutProperties\">\n+                    <mml:attr name=\"value\">false</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacet\" fqcn=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacetImpl\">\n+                    <mml:attr name=\"disabling\">true</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                </mml:facet>\n+            </mml:facets>\n+            <mml:returnType>java.net.URL</mml:returnType>\n+            <mml:params/>\n+        </mml:act>\n+        <mml:act id=\"rebuildMetamodel\">\n+            <mml:facets>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.hidden.HiddenFacetForActionAnnotation\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.hidden.HiddenFacetForActionAnnotation\">\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                    <mml:attr name=\"when\">ALWAYS</mml:attr>\n+                    <mml:attr name=\"where\">NOWHERE</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionDomainEventFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionDomainEventFacetForActionAnnotation\">\n+                    <mml:attr name=\"disabling\">true</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                    <mml:attr name=\"validating\">true</mml:attr>\n+                    <mml:attr name=\"value\">org.apache.isis.applib.services.layout.Object_rebuildMetamodel.ActionDomainEvent</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionInvocationFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionInvocationFacetForDomainEventFromActionAnnotation\">\n+                    <mml:attr name=\"eventType\">org.apache.isis.applib.services.layout.Object_rebuildMetamodel.ActionDomainEvent</mml:attr>\n+                    <mml:attr name=\"intent.act\">EXECUTE</mml:attr>\n+                    <mml:attr name=\"methods\">public void org.apache.isis.applib.services.layout.Object_rebuildMetamodel.act()</mml:attr>\n+                    <mml:attr name=\"onType\">org.apache.isis.applib.services.layout.Object_rebuildMetamodel</mml:attr>\n+                    <mml:attr name=\"returnType\">void</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.bulk.BulkFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.bulk.BulkFacetForActionAnnotation\">\n+                    <mml:attr name=\"value\">REGULAR_ONLY</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.notcontributed.NotContributedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.NotContributedFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"as\">ASSOCIATION</mml:attr>\n+                    <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.actions.notcontributed.derived.NotContributedFacetDerivedFromMixinFacet</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.position.ActionPositionFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.ActionPositionFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"position\">PANEL_DROPDOWN</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.prototype.PrototypeFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.prototype.PrototypeFacetForActionAnnotation\">\n+                    <mml:attr name=\"deploymentCategory\">PRODUCTION</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n+                    <mml:attr name=\"value\">IDEMPOTENT</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n+                    <mml:attr name=\"context\">domainapp.application.fixture.scenarios.DomainAppDemo#rebuildMetamodel()</mml:attr>\n+                    <mml:attr name=\"originalText\">Rebuild Metamodel</mml:attr>\n+                    <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.all.named.NamedFacetInferred</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.collections.collection.defaultview.DefaultViewFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.collections.layout.DefaultViewFacetForCollectionLayoutAnnotation\">\n+                    <mml:attr name=\"value\">hidden</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.members.cssclassfa.CssClassFaFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.layout.CssClassFaFacetForActionLayoutAnnotation\">\n+                    <mml:attr name=\"position\">LEFT</mml:attr>\n+                    <mml:attr name=\"value\">fa fa-fw fa-refresh</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.members.order.MemberOrderFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.order.annotprop.MemberOrderFacetAnnotation\">\n+                    <mml:attr name=\"name\">datanucleusIdLong</mml:attr>\n+                    <mml:attr name=\"originalName\">datanucleusIdLong</mml:attr>\n+                    <mml:attr name=\"sequence\">800.1</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.bookmarkpolicy.BookmarkPolicyFacetFallback\">\n+                    <mml:attr name=\"bookmarkPolicy\">NEVER</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.object.promptStyle.PromptStyleFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.object.promptStyle.PromptStyleFacetFallBackToInline\">\n+                    <mml:attr name=\"derived\">true</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.properties.renderunchanged.UnchangingFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.properties.propertylayout.UnchangingFacetOnPropertyFromLayoutProperties\">\n+                    <mml:attr name=\"value\">false</mml:attr>\n+                </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacet\" fqcn=\"org.apache.isis.core.runtime.authorization.standard.AuthorizationFacetImpl\">\n+                    <mml:attr name=\"disabling\">true</mml:attr>\n+                    <mml:attr name=\"hiding\">true</mml:attr>\n+                </mml:facet>\n+            </mml:facets>\n+            <mml:returnType>void</mml:returnType>\n+            <mml:params/>\n+        </mml:act>\n+    </mml:actions>\n+</mml:domainClassDto>",
                "changes": 304,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.fixture.scenarios.DomainAppDemo.xml"
            },
            {
                "additions": 0,
                "sha": "0548356a395042b1f572e9c815d7635c04631838",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.services.homepage.HomePageViewModel.xml",
                "deletions": 24,
                "filename": "example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.services.homepage.HomePageViewModel.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.services.homepage.HomePageViewModel.xml?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -168,7 +168,6 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">SAFE</mml:attr>\n                 </mml:facet>\n-                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.application.services.homepage.HomePageViewModel#downloadLayoutXml()</mml:attr>\n                     <mml:attr name=\"originalText\">Download Layout Xml</mml:attr>\n@@ -204,11 +203,6 @@\n             <mml:params>\n                 <mml:param xsi:type=\"mml:scalarParam\" id=\"fileName\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n                     <mml:facets>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.defaults.ActionDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFacets\">\n-                            <mml:attr name=\"defaultFacets\">org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider;org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider</mml:attr>\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                        </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterDerivedFromType\"/>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                             <mml:attr name=\"context\">org.apache.isis.applib.services.layout.Object_downloadLayoutXml#act(java.lang.String,org.apache.isis.applib.services.layout.LayoutService$Style)</mml:attr>\n                             <mml:attr name=\"originalText\">File name</mml:attr>\n@@ -224,11 +218,6 @@\n                             <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault</mml:attr>\n                             <mml:attr name=\"validating\">true</mml:attr>\n                         </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                            <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n-                        </mml:facet>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n                             <mml:attr name=\"intent.default0Act\">DEFAULTS</mml:attr>\n                             <mml:attr name=\"methods\">public java.lang.String org.apache.isis.applib.services.layout.Object_downloadLayoutXml.default0Act()</mml:attr>\n@@ -238,23 +227,12 @@\n                 </mml:param>\n                 <mml:param xsi:type=\"mml:scalarParam\" id=\"style\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n                     <mml:facets>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.defaults.ActionDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFacets\">\n-                            <mml:attr name=\"defaultFacets\">org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider;org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider</mml:attr>\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                        </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterDerivedFromType\"/>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault\">\n                             <mml:attr name=\"inverted\">false</mml:attr>\n                             <mml:attr name=\"semantics\">REQUIRED</mml:attr>\n                             <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault</mml:attr>\n                             <mml:attr name=\"validating\">true</mml:attr>\n                         </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                            <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n-                        </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.choices.ActionParameterChoicesFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.choices.enums.ActionParameterChoicesFacetDerivedFromChoicesFacet\"/>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n                             <mml:attr name=\"intent.default1Act\">DEFAULTS</mml:attr>\n                             <mml:attr name=\"methods\">public org.apache.isis.applib.services.layout.LayoutService$Style org.apache.isis.applib.services.layout.Object_downloadLayoutXml.default1Act()</mml:attr>\n@@ -301,7 +279,6 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">SAFE</mml:attr>\n                 </mml:facet>\n-                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.application.services.homepage.HomePageViewModel#openRestApi()</mml:attr>\n                     <mml:attr name=\"originalText\">Open Rest Api</mml:attr>\n@@ -373,7 +350,6 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">IDEMPOTENT</mml:attr>\n                 </mml:facet>\n-                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.application.services.homepage.HomePageViewModel#rebuildMetamodel()</mml:attr>\n                     <mml:attr name=\"originalText\">Rebuild Metamodel</mml:attr>",
                "changes": 24,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.application.services.homepage.HomePageViewModel.xml"
            },
            {
                "additions": 0,
                "sha": "ad36bf29160c6f5ce9742ac95ef7307ca7aa1b59",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObject.xml",
                "deletions": 36,
                "filename": "example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObject.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObject.xml?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -602,7 +602,6 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">SAFE</mml:attr>\n                 </mml:facet>\n-                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.modules.simple.dom.impl.SimpleObject#downloadJdoMetadata()</mml:attr>\n                     <mml:attr name=\"originalText\">Download Jdo Metadata</mml:attr>\n@@ -638,11 +637,6 @@\n             <mml:params>\n                 <mml:param xsi:type=\"mml:scalarParam\" id=\"fileName\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n                     <mml:facets>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.defaults.ActionDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFacets\">\n-                            <mml:attr name=\"defaultFacets\">org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider</mml:attr>\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                        </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterDerivedFromType\"/>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                             <mml:attr name=\"context\">org.apache.isis.core.metamodel.services.jdosupport.Persistable_downloadJdoMetadata#act(java.lang.String)</mml:attr>\n                             <mml:attr name=\"originalText\">File name</mml:attr>\n@@ -658,11 +652,6 @@\n                             <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault</mml:attr>\n                             <mml:attr name=\"validating\">true</mml:attr>\n                         </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                            <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n-                        </mml:facet>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n                             <mml:attr name=\"intent.default0Act\">DEFAULTS</mml:attr>\n                             <mml:attr name=\"methods\">public java.lang.String org.apache.isis.core.metamodel.services.jdosupport.Persistable_downloadJdoMetadata.default0Act()</mml:attr>\n@@ -709,7 +698,6 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">SAFE</mml:attr>\n                 </mml:facet>\n-                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.modules.simple.dom.impl.SimpleObject#downloadLayoutXml()</mml:attr>\n                     <mml:attr name=\"originalText\">Download Layout Xml</mml:attr>\n@@ -745,11 +733,6 @@\n             <mml:params>\n                 <mml:param xsi:type=\"mml:scalarParam\" id=\"fileName\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n                     <mml:facets>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.defaults.ActionDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFacets\">\n-                            <mml:attr name=\"defaultFacets\">org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider;org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider</mml:attr>\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                        </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterDerivedFromType\"/>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                             <mml:attr name=\"context\">org.apache.isis.applib.services.layout.Object_downloadLayoutXml#act(java.lang.String,org.apache.isis.applib.services.layout.LayoutService$Style)</mml:attr>\n                             <mml:attr name=\"originalText\">File name</mml:attr>\n@@ -765,11 +748,6 @@\n                             <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault</mml:attr>\n                             <mml:attr name=\"validating\">true</mml:attr>\n                         </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                            <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n-                        </mml:facet>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n                             <mml:attr name=\"intent.default0Act\">DEFAULTS</mml:attr>\n                             <mml:attr name=\"methods\">public java.lang.String org.apache.isis.applib.services.layout.Object_downloadLayoutXml.default0Act()</mml:attr>\n@@ -779,23 +757,12 @@\n                 </mml:param>\n                 <mml:param xsi:type=\"mml:scalarParam\" id=\"style\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n                     <mml:facets>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.defaults.ActionDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.fromtype.ActionParameterDefaultFacetDerivedFromTypeFacets\">\n-                            <mml:attr name=\"defaultFacets\">org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider;org.apache.isis.core.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider</mml:attr>\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                        </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.describedas.annotderived.DescribedAsFacetOnParameterDerivedFromType\"/>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault\">\n                             <mml:attr name=\"inverted\">false</mml:attr>\n                             <mml:attr name=\"semantics\">REQUIRED</mml:attr>\n                             <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.objectvalue.mandatory.MandatoryFacetDefault</mml:attr>\n                             <mml:attr name=\"validating\">true</mml:attr>\n                         </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n-                            <mml:attr name=\"derived\">true</mml:attr>\n-                            <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n-                        </mml:facet>\n-                        <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.choices.ActionParameterChoicesFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.choices.enums.ActionParameterChoicesFacetDerivedFromChoicesFacet\"/>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n                             <mml:attr name=\"intent.default1Act\">DEFAULTS</mml:attr>\n                             <mml:attr name=\"methods\">public org.apache.isis.applib.services.layout.LayoutService$Style org.apache.isis.applib.services.layout.Object_downloadLayoutXml.default1Act()</mml:attr>\n@@ -842,7 +809,6 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">SAFE</mml:attr>\n                 </mml:facet>\n-                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.modules.simple.dom.impl.SimpleObject#openRestApi()</mml:attr>\n                     <mml:attr name=\"originalText\">Open Rest Api</mml:attr>\n@@ -914,7 +880,6 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">IDEMPOTENT</mml:attr>\n                 </mml:facet>\n-                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.modules.simple.dom.impl.SimpleObject#rebuildMetamodel()</mml:attr>\n                     <mml:attr name=\"originalText\">Rebuild Metamodel</mml:attr>\n@@ -1060,7 +1025,6 @@\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n                             <mml:attr name=\"derived\">true</mml:attr>\n                             <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n                         </mml:facet>\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.defaults.methodnum.ActionParameterDefaultsFacetViaMethod\">\n                             <mml:attr name=\"intent.default0UpdateName\">DEFAULTS</mml:attr>",
                "changes": 36,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObject.xml"
            },
            {
                "additions": 1,
                "sha": "f73b959a4865b67f90a45743781805b9227a7481",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObjects.xml",
                "deletions": 2,
                "filename": "example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObjects.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObjects.xml?ref=813a313023c5a3285828174a53507df556196ecd",
                "patch": "@@ -88,6 +88,7 @@\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.actions.semantics.ActionSemanticsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.actions.action.semantics.ActionSemanticsFacetForActionAnnotation\">\n                     <mml:attr name=\"value\">NON_IDEMPOTENT</mml:attr>\n                 </mml:facet>\n+                <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.describedas.DescribedAsFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.members.describedas.annotprop.DescribedAsFacetOnMemberDerivedFromType\"/>\n                 <mml:facet id=\"org.apache.isis.core.metamodel.facets.all.named.NamedFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.all.i18n.NamedFacetTranslated\">\n                     <mml:attr name=\"context\">domainapp.modules.simple.dom.impl.SimpleObjects#create()</mml:attr>\n                     <mml:attr name=\"originalText\">Create</mml:attr>\n@@ -141,7 +142,6 @@\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n                             <mml:attr name=\"derived\">true</mml:attr>\n                             <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n                         </mml:facet>\n                     </mml:facets>\n                     <mml:type>java.lang.String</mml:type>\n@@ -245,7 +245,6 @@\n                         <mml:facet id=\"org.apache.isis.core.metamodel.facets.objectvalue.typicallen.TypicalLengthFacet\" fqcn=\"org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType\">\n                             <mml:attr name=\"derived\">true</mml:attr>\n                             <mml:attr name=\"typicalLengthFacet\">org.apache.isis.core.metamodel.facets.object.value.TypicalLengthFacetUsingParser</mml:attr>\n-                            <mml:attr name=\"underlyingFacet\">org.apache.isis.core.metamodel.facets.param.typicallen.fromtype.TypicalLengthFacetOnParameterDerivedFromType</mml:attr>\n                         </mml:facet>\n                     </mml:facets>\n                     <mml:type>java.lang.String</mml:type>",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/813a313023c5a3285828174a53507df556196ecd/example/application/simpleapp/application/src/test/java/domainapp/application/integtests/mml/approved/domainapp.modules.simple.dom.impl.SimpleObjects.xml"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1974: fixes to ensure new algorithm generates same metamodel as previously.\n\nMore or less, that is.\n\nThe main change here is that some facet factories have been reimplemented in the SpecLoader PostProcessor, namely those that derive facets on object members based on the facets from the type of those members ... typical length, described as, immutable => disabled, param defaults.\n- for now, the unused facets have been left in the codebase, commented out of ProgrammingModelFacetsJava5; the post-processor's name (ActionCollectionParameterDefaultsAndChoicesPostProcessor) is unchanged even though it now does much more than it used to\n\nThis results in some minor differences... ImmutableFacet is no longer always installed, for example, if DisabledFacet is present instead.\n\nIn addition to the PostProcessor changes:\n- call post processing without requiring there to be an open session.  Note that this requires a minor refactor in OneTo{One/Many}ActionParameterContributee - these take the servicePojo rather than the serviceAdapter\n- refactor SpecificationCacheDefault, init() semantics are now cleaner\n  - it no longer takes a map (and the old init is now internalInit)\n  - SpecificationLoader#cacheBySpecId now removed - this is basically what is in the new version of init in SpecificationCacheDefault\n- also search for @DomainServiceLayout, @DomainObjectLayout, @ViewModelLayout to find classes to introspect during bootstrapping\n- don't introspect @Programmatic fixture scripts (unless they are explicitly discoverable by implementing DiscoverableFixtureScript)\n- don't create any associations/actions for any domain services that have a nature of DOMAIN (unless they are also @HomePage domain service)\n- don't create any associations/actions for fixture scripts\n- OneTo{One/Many}AssociationContributee now implement getOnType (was throwing an NPE) & OneToManyAssociationMixedIn now implements getOnType (OTOAMI was already)\n  - these are to allow the implementatoin of the post-processor to look up the parent spec if the member is a mixin or contributee\n- MetaModelExporter now includes a check that the objectSpecId -> ObjectSpecification is one-to-one.\n  - this is what precipitated the refactoring of SpecificationCacheDefault\n- adds a guard in TypicalLengthFacetOnPropertyDerivedFromType, which was NPE'ing\n- in the metamodel validator, as an ugly special case, allow ObjectSpecIdFacet to be derived from class name\n  - seems ok, since no longer have actoins on fixture scripts in the metamodel.  Also, there are fixtures in the incode platform that fall foul of this check\n- allow @Programmatic to be specified on fields\n- annotate various fixture scripts as @Programmatic (so that they will be skipped completely from the metamodel)\n  - BuilderFixtureScript, TeardownFixtureScriptAbstract, PersonaEnumPersistAll, ClockFixture, TickingClockFixture\n- fixed bug with MetaModelService6.Config class for getPackagePrefixes()\n-",
        "commit": "https://github.com/apache/isis/commit/813a313023c5a3285828174a53507df556196ecd"
    },
    {
        "parent": "https://github.com/apache/isis/commit/e9a8ec523fb6d6a26905a2ae12b35de72c56cab4",
        "bug_id": "isis_32",
        "file": [
            {
                "additions": 1,
                "sha": "140862e992faabcc22be04dba7e6b9349a36d6e9",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/b5b3f0636e7e6cb8a4cc9b45e6fd02a7df2c8595/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormPanelAbstract.java",
                "deletions": 1,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormPanelAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormPanelAbstract.java?ref=b5b3f0636e7e6cb8a4cc9b45e6fd02a7df2c8595",
                "patch": "@@ -268,7 +268,7 @@ public void onCancel(\n \n             final PromptStyle promptStyle = formExecutorContext.getPromptStyle();\n \n-            if(promptStyle == PromptStyle.INLINE) {\n+            if(promptStyle == PromptStyle.INLINE && formExecutorContext.getInlinePromptContext() != null) {\n \n                 formExecutorContext.reset();\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/b5b3f0636e7e6cb8a4cc9b45e6fd02a7df2c8595/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormPanelAbstract.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1603: fixes NPE which can occur when cancel a dialog prompt for a component (eg BooleanPanel) that doesn't support inline prompts when (erroneously) <property promptStyle=\"inline\"> has been specified.",
        "commit": "https://github.com/apache/isis/commit/b5b3f0636e7e6cb8a4cc9b45e6fd02a7df2c8595"
    },
    {
        "parent": "https://github.com/apache/isis/commit/6b497b0ca8f9bf20fcef0ad54db9c0d3a8971346",
        "bug_id": "isis_33",
        "file": [
            {
                "additions": 4,
                "sha": "36d38612294d973d9460f51f7762efdb63977886",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a6aafd316d63429c1b8e03d631466e82abf59608/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java",
                "deletions": 1,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java?ref=a6aafd316d63429c1b8e03d631466e82abf59608",
                "patch": "@@ -99,7 +99,10 @@ private void buildGui() {\n      */\n     @Override\n     public boolean checkRequired() {\n-        return select2Field.checkRequired();\n+        if(select2Field != null) {\n+            return select2Field.checkRequired();\n+        }\n+        return super.checkRequired();\n     }\n \n     @Override",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/a6aafd316d63429c1b8e03d631466e82abf59608/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-637: fixing NPE if in edit mode.",
        "commit": "https://github.com/apache/isis/commit/a6aafd316d63429c1b8e03d631466e82abf59608"
    },
    {
        "parent": "https://github.com/apache/isis/commit/587a8bd622c9511389b92102c4308f6dd0dfabab",
        "bug_id": "isis_34",
        "file": [
            {
                "additions": 2,
                "sha": "c76aae7f927f200ba2f283172ab0f5cc367c5be6",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/64c6cee14fe868011c9e78d01542c679d4c0744b/core/viewer-restfulobjects-rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/AbstractObjectMemberReprRenderer.java",
                "deletions": 1,
                "filename": "core/viewer-restfulobjects-rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/AbstractObjectMemberReprRenderer.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-restfulobjects-rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/AbstractObjectMemberReprRenderer.java?ref=64c6cee14fe868011c9e78d01542c679d4c0744b",
                "patch": "@@ -78,7 +78,7 @@ public boolean isEventSerialization() {\n      * <p>\n      * Used to determine whether to follow links; only populated for {@link Mode#INLINE inline} Mode.\n      */\n-    private final String memberId;\n+    private String memberId;\n     private final Where where;\n \n     public AbstractObjectMemberReprRenderer(\n@@ -103,6 +103,7 @@ public R with(final ObjectAndMember<T> objectAndMember) {\n         this.objectAdapter = objectAndMember.getObjectAdapter();\n         this.objectMember = objectAndMember.getMember();\n         this.objectMemberType = MemberType.determineFrom(objectMember);\n+        this.memberId = objectMember.getId();\n         usingLinkTo(new DomainObjectLinkTo());\n \n         return cast(this);",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/64c6cee14fe868011c9e78d01542c679d4c0744b/core/viewer-restfulobjects-rendering/src/main/java/org/apache/isis/viewer/restfulobjects/rendering/domainobjects/AbstractObjectMemberReprRenderer.java"
            },
            {
                "additions": 2,
                "sha": "9e0567fc752464b3efc2271c3a9ee67926f0a468",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/64c6cee14fe868011c9e78d01542c679d4c0744b/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/DomainResourceHelper.java",
                "deletions": 2,
                "filename": "core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/DomainResourceHelper.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/DomainResourceHelper.java?ref=64c6cee14fe868011c9e78d01542c679d4c0744b",
                "patch": "@@ -46,7 +46,7 @@\n import org.apache.isis.viewer.restfulobjects.rendering.domainobjects.ObjectAdapterLinkTo;\n import org.apache.isis.viewer.restfulobjects.rendering.domainobjects.ObjectAndAction;\n import org.apache.isis.viewer.restfulobjects.rendering.domainobjects.ObjectAndActionInvocation;\n-import org.apache.isis.viewer.restfulobjects.rendering.domainobjects.ObjectAndCollection;\n+import org.apache.isis.viewer.restfulobjects.rendering.domainobjects.ObjectAndCollection2;\n import org.apache.isis.viewer.restfulobjects.rendering.domainobjects.ObjectAndProperty2;\n import org.apache.isis.viewer.restfulobjects.rendering.service.RepresentationService;\n import org.apache.isis.viewer.restfulobjects.server.ResourceContext;\n@@ -270,7 +270,7 @@ public Response collectionDetails(\n \n         final OneToManyAssociation collection = accessHelper.getCollectionThatIsVisibleForIntent(collectionId, ObjectAdapterAccessHelper.Intent.ACCESS);\n \n-        return representationService.collectionDetails(representationServiceContext, new ObjectAndCollection(objectAdapter, collection), memberMode);\n+        return representationService.collectionDetails(representationServiceContext, new ObjectAndCollection2(objectAdapter, collection, memberMode), memberMode);\n     }\n \n ",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/64c6cee14fe868011c9e78d01542c679d4c0744b/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/DomainResourceHelper.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1273: RO rendering of collection not showing details.\n\nAlso: fix to NPE when attempt to render collection as RO.",
        "commit": "https://github.com/apache/isis/commit/64c6cee14fe868011c9e78d01542c679d4c0744b"
    },
    {
        "parent": "https://github.com/apache/isis/commit/434ab61bb4b08af36a4d8409e6ad8a996d2ff2b1",
        "bug_id": "isis_35",
        "file": [
            {
                "additions": 5,
                "sha": "42fbda517289abc3a87ac09dfb208e08ae7d920f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/7a3e5a56a959bd1c518c7c1b3e08ebc332bfa45c/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionPromptProvider.java",
                "deletions": 7,
                "filename": "component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionPromptProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionPromptProvider.java?ref=7a3e5a56a959bd1c518c7c1b3e08ebc332bfa45c",
                "patch": "@@ -25,20 +25,18 @@\n \n         public static ActionPromptProvider getFrom(Component component) {\n             final Page page = component.getPage();\n-            if(page instanceof ActionPromptProvider) {\n-                final ActionPromptProvider provider = (ActionPromptProvider) page;\n-                return provider;\n-            } \n-            // else\n-            return null;\n+            if(page == null) {\n+                throw new IllegalArgumentException(\"Programming error: component must be added to a page in order to locate the ActionPromptProvider\");\n+            }\n+            return getFrom(page);\n         }\n         public static ActionPromptProvider getFrom(Page page) {\n             if(page instanceof ActionPromptProvider) {\n                 final ActionPromptProvider provider = (ActionPromptProvider) page;\n                 return provider;\n             }\n             // else\n-            return null;\n+            throw new IllegalArgumentException(\"Programming error: all pages should inherit from PageAbstract, which serves as the ActionPromptProvider\");\n         }\n     }\n ",
                "changes": 12,
                "blob_url": "https://github.com/apache/isis/blob/7a3e5a56a959bd1c518c7c1b3e08ebc332bfa45c/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ActionPromptProvider.java"
            },
            {
                "additions": 2,
                "sha": "5c7f7793881a1f9da9cb9dd96faf6bbeb01c8214",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/7a3e5a56a959bd1c518c7c1b3e08ebc332bfa45c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/ActionLinkFactoryAbstract.java",
                "deletions": 13,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/ActionLinkFactoryAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/ActionLinkFactoryAbstract.java?ref=7a3e5a56a959bd1c518c7c1b3e08ebc332bfa45c",
                "patch": "@@ -27,7 +27,6 @@\n import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.behavior.AttributeAppender;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.link.AbstractLink;\n@@ -60,17 +59,6 @@\n \n     private static final long serialVersionUID = 1L;\n \n-    public static void addTargetBlankIfActionReturnsUrl(final AbstractLink link, final ObjectAction action) {\n-        final ObjectSpecification returnType = action.getReturnType();\n-        if(returnType != null && \"java.net.URL\".equals(returnType.getFullIdentifier())) {\n-            link.add(new AttributeAppender(\"target\", Model.of(\"_blank\")));\n-            link.add(new CssClassAppender(\"noVeil\"));\n-        }\n-    }\n-    \n-    /**\n-     * Either creates a link for the action be rendered in a {@link ModalWindow}.\n-     */\n     protected AbstractLink newLink(\n             final String linkId,\n             final ObjectAdapter objectAdapter,\n@@ -86,10 +74,11 @@ protected AbstractLink newLink(\n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                final ActionPrompt actionPrompt = ActionPromptProvider.Util.getFrom(getPage()).getActionPrompt();\n                 if(ajaxDeferredBehaviour != null) {\n                     ajaxDeferredBehaviour.initiate(target);\n                 } else {\n+                    final ActionPromptProvider promptProvider = ActionPromptProvider.Util.getFrom(getPage());\n+                    final ActionPrompt actionPrompt = promptProvider.getActionPrompt();\n                     ActionPromptHeaderPanel titlePanel = new ActionPromptHeaderPanel(actionPrompt.getTitleId(), actionModel);\n                     final ActionPanel actionPanel =\n                             (ActionPanel) getComponentFactoryRegistry().createComponent(",
                "changes": 15,
                "blob_url": "https://github.com/apache/isis/blob/7a3e5a56a959bd1c518c7c1b3e08ebc332bfa45c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/ActionLinkFactoryAbstract.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-537: tidy up in ActionLinkFactoryAbstract and ActionPromptProvider (throw IllegalArgumentException rather than NPE).",
        "commit": "https://github.com/apache/isis/commit/7a3e5a56a959bd1c518c7c1b3e08ebc332bfa45c"
    },
    {
        "parent": "https://github.com/apache/isis/commit/88451f5a233a5f906eee0c8117897e21432ead56",
        "bug_id": "isis_36",
        "file": [
            {
                "additions": 2,
                "sha": "7402ae9e1daa82db62a1cb4edecba3b8ed0f79ef",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/ceae9e267ab25c1e0043357cb25d944a40446a20/core/applib/src/main/java/org/apache/isis/applib/AppManifest.java",
                "deletions": 3,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/AppManifest.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/AppManifest.java?ref=ceae9e267ab25c1e0043357cb25d944a40446a20",
                "patch": "@@ -25,21 +25,20 @@\n import java.net.URLDecoder;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n \n import javax.jdo.annotations.PersistenceCapable;\n \n-import com.google.common.base.Joiner;\n import com.google.common.collect.Lists;\n \n import org.reflections.vfs.SystemDir;\n import org.reflections.vfs.Vfs;\n \n import org.apache.isis.applib.annotation.DomainService;\n import org.apache.isis.applib.fixturescripts.FixtureScript;\n-import org.apache.isis.applib.services.classdiscovery.ClassDiscoveryServiceUsingReflections;\n \n /**\n  * Programmatic specification of the constituent parts of an application, most specifically the modules that contain\n@@ -194,7 +193,7 @@ public void setPersistenceCapableTypes(final Set<Class<?>> persistenceCapableTyp\n \n         private Set<Class<? extends FixtureScript>> fixtureScriptTypes;\n         public Set<Class<? extends FixtureScript>> getFixtureScriptTypes() {\n-            return fixtureScriptTypes;\n+            return fixtureScriptTypes == null ? new HashSet<Class<? extends FixtureScript>>() : fixtureScriptTypes;\n         }\n         public void setFixtureScriptTypes(final Set<Class<? extends FixtureScript>> fixtureScriptTypes) {\n             this.fixtureScriptTypes = fixtureScriptTypes;",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/ceae9e267ab25c1e0043357cb25d944a40446a20/core/applib/src/main/java/org/apache/isis/applib/AppManifest.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-848: When fixtureScriptTypes are not set an empty Set is returned.\n\nTo avoid NPE's further down the road.",
        "commit": "https://github.com/apache/isis/commit/ceae9e267ab25c1e0043357cb25d944a40446a20"
    },
    {
        "parent": "https://github.com/apache/isis/commit/71018db0a5e9ec699c71d4b40e452d66a7bd783e",
        "bug_id": "isis_37",
        "file": [
            {
                "additions": 1,
                "sha": "c039ce548663eb1d889dc377a043885800ae1a6f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/cdfccdc3197433ca40d9ffc3c0c2626c0ea31589/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/bookmarks/BookmarkServiceDefault.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/bookmarks/BookmarkServiceDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/bookmarks/BookmarkServiceDefault.java?ref=cdfccdc3197433ca40d9ffc3c0c2626c0ea31589",
                "patch": "@@ -52,7 +52,7 @@\n     @NotContributed(As.ASSOCIATION)\n     public Object lookup(final BookmarkHolder bookmarkHolder) {\n         Bookmark bookmark = bookmarkHolder.bookmark();\n-        return lookup(bookmark);\n+        return bookmark != null? lookup(bookmark): null;\n     }\n \n     /**",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/cdfccdc3197433ca40d9ffc3c0c2626c0ea31589/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/bookmarks/BookmarkServiceDefault.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-636: guard added to BookmarkServiceDefault\n\n... to guard against NPE for null Bookmark",
        "commit": "https://github.com/apache/isis/commit/cdfccdc3197433ca40d9ffc3c0c2626c0ea31589"
    },
    {
        "parent": "https://github.com/apache/isis/commit/9e417329098c715f36f77237747aaad21c715514",
        "bug_id": "isis_38",
        "file": [
            {
                "additions": 3,
                "sha": "2ec0ea59dfbbd04db6581cc819cf70ea9435953a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/91c1e86e43f09235ee9e4f42ddc69e54a143a28a/no-core/src/org/nakedobjects/object/reflect/Action.java",
                "deletions": 1,
                "filename": "no-core/src/org/nakedobjects/object/reflect/Action.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/no-core/src/org/nakedobjects/object/reflect/Action.java?ref=91c1e86e43f09235ee9e4f42ddc69e54a143a28a",
                "patch": "@@ -166,7 +166,9 @@ public String toString() {\n \n     public ActionParameterSet getParameters(Session session, NakedObject object) {\n         ActionParameterSet parameters = actionDelegate.getParameters(getIdentifier(), session, object, parameterStubs());\n-        parameters.checkParameters(getIdentifier().toString(), parameters());\n+        if(parameters != null) {\n+            parameters.checkParameters(getIdentifier().toString(), parameters());\n+        }\n         return parameters;\n     }\n }",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/91c1e86e43f09235ee9e4f42ddc69e54a143a28a/no-core/src/org/nakedobjects/object/reflect/Action.java"
            }
        ],
        "repo": "isis",
        "message": "Fixed Action bug where the parameters for an action were checked, even when no parameters existed, causing a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/isis/trunk@1006802 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/isis/commit/91c1e86e43f09235ee9e4f42ddc69e54a143a28a"
    },
    {
        "parent": "https://github.com/apache/isis/commit/0da818bb6bdd701ed29da53d7c8506b81d7d1044",
        "bug_id": "isis_39",
        "file": [
            {
                "additions": 1,
                "sha": "b97b5727000d3b5e064eadd1385425fa53a34d2d",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/295e67f4d31425cb1af98a10716b206948cd3cc0/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/bulk/BulkActionsLinkFactory.java",
                "deletions": 0,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/bulk/BulkActionsLinkFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/bulk/BulkActionsLinkFactory.java?ref=295e67f4d31425cb1af98a10716b206948cd3cc0",
                "patch": "@@ -156,6 +156,7 @@ public void onClick() {\n \n                     final ActionModel actionModel = model.getActionModelHint();\n                     if(actionModel != null && actionModel.getActionMemento().getAction(getSpecificationLoader()).getSemantics().isIdempotentInNature()) {\n+                        actionModel.detach(); // force reload\n                         ObjectAdapter resultAdapter = actionModel.getObject();\n                         model.setObjectList(resultAdapter);\n                     } else {",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/295e67f4d31425cb1af98a10716b206948cd3cc0/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collection/bulk/BulkActionsLinkFactory.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1613: fixes NPE with bulk actions\n\nwhich was resulting from the actionModel hint, which holds the action to invoke to recreate the list of domain objects, was caching its results and so was returning a list of stale pojos that were implicitly detached and therefore mapped as transient.\n\nFix was simply to invalidate this cached return result by invalidating the actionModel.",
        "commit": "https://github.com/apache/isis/commit/295e67f4d31425cb1af98a10716b206948cd3cc0"
    },
    {
        "parent": "https://github.com/apache/isis/commit/8cc29a3a79f1dd80d5fc30c861e514cd979ee3c8",
        "bug_id": "isis_40",
        "file": [
            {
                "additions": 11,
                "sha": "e2c1a3ce31de5971889adf1ba6cdbd0ddc8907da",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0ef9dd81e4adfce7ce2349bdeef638b81e30c0c7/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java",
                "deletions": 6,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java?ref=0ef9dd81e4adfce7ce2349bdeef638b81e30c0c7",
                "patch": "@@ -203,19 +203,24 @@ public void setDisabledReason(final String disabledReason) {\n      */\n     public Builder newSubMenuItem(final ObjectAdapterMemento targetAdapterMemento, final ObjectAction objectAction, final CssMenuLinkFactory cssMenuLinkFactory) {\n \n-        final LinkAndLabel linkAndLabel = cssMenuLinkFactory.newLink(targetAdapterMemento, objectAction, PageAbstract.ID_MENU_LINK);\n-        final AbstractLink link = linkAndLabel.getLink();\n-        final String actionLabel = linkAndLabel.getLabel();\n-\n-        // check visibility and whether enabled\n+        // check visibility\n         final AuthenticationSession session = getAuthenticationSession();\n-\n         final ObjectAdapter adapter = targetAdapterMemento.getObjectAdapter(ConcurrencyChecking.CHECK);\n         final Consent visibility = objectAction.isVisible(session, adapter, where);\n         if (visibility.isVetoed()) {\n             return null;\n         }\n \n+        // build the link\n+        final LinkAndLabel linkAndLabel = cssMenuLinkFactory.newLink(targetAdapterMemento, objectAction, PageAbstract.ID_MENU_LINK);\n+        if(linkAndLabel==null) {\n+            // can only get a null if invisible, so this should not happen given guard above\n+            return null;\n+        }\n+        final AbstractLink link = linkAndLabel.getLink();\n+        final String actionLabel = linkAndLabel.getLabel();\n+\n+        // check whether enabled\n         final Consent usability = objectAction.isUsable(session, adapter, where);\n         final String reasonDisabledIfAny = usability.getReason();\n ",
                "changes": 17,
                "blob_url": "https://github.com/apache/isis/blob/0ef9dd81e4adfce7ce2349bdeef638b81e30c0c7/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-390: fix for NPE in wicket viewer when rendering actions...\n\n... that are invisible to a particular user.",
        "commit": "https://github.com/apache/isis/commit/0ef9dd81e4adfce7ce2349bdeef638b81e30c0c7"
    },
    {
        "parent": "https://github.com/apache/isis/commit/53626608c130bea75a471db3f94f750575a0d2f1",
        "bug_id": "isis_41",
        "file": [
            {
                "additions": 13,
                "sha": "5d51862e9feb160d2336e21ca802365f9a66841d",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/3cb546e57e908bf0387336f774b495d8ac5b708a/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityCollectionModel.java",
                "deletions": 9,
                "filename": "core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityCollectionModel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityCollectionModel.java?ref=3cb546e57e908bf0387336f774b495d8ac5b708a",
                "patch": "@@ -19,18 +19,10 @@\n \n package org.apache.isis.viewer.wicket.model.models;\n \n-import java.io.Serializable;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.List;\n-\n import com.google.common.base.Function;\n import com.google.common.base.Predicates;\n import com.google.common.collect.Iterables;\n import com.google.common.collect.Lists;\n-\n-import org.apache.wicket.Component;\n-\n import org.apache.isis.applib.layout.component.CollectionLayoutData;\n import org.apache.isis.core.commons.factory.InstanceUtil;\n import org.apache.isis.core.commons.lang.ClassUtil;\n@@ -52,6 +44,12 @@\n import org.apache.isis.viewer.wicket.model.links.LinksProvider;\n import org.apache.isis.viewer.wicket.model.mementos.CollectionMemento;\n import org.apache.isis.viewer.wicket.model.mementos.ObjectAdapterMemento;\n+import org.apache.wicket.Component;\n+\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n \n /**\n  * Model representing a collection of entities, either {@link Type#STANDALONE\n@@ -313,14 +311,20 @@ private EntityCollectionModel(final Class<?> typeOf, final List<ObjectAdapterMem\n     }\n \n     private EntityCollectionModel(final EntityModel entityModel) {\n+        this.type = Type.PARENTED;\n         this.entityModel = entityModel;\n+\n         final OneToManyAssociation collection = collectionFor(entityModel.getObjectAdapterMemento(), getLayoutData());\n-        this.type = Type.PARENTED;\n         this.typeOf = forName(collection.getSpecification());\n+\n         this.collectionMemento = new CollectionMemento(collection, entityModel.getIsisSessionFactory());\n+\n         this.pageSize = pageSize(collection.getFacet(PagedFacet.class), PAGE_SIZE_DEFAULT_FOR_PARENTED);\n+\n         final SortedByFacet sortedByFacet = collection.getFacet(SortedByFacet.class);\n         this.sortedBy = sortedByFacet != null ? sortedByFacet.value(): null;\n+\n+        this.toggledMementosList = Lists.newArrayList();\n     }\n     \n ",
                "changes": 22,
                "blob_url": "https://github.com/apache/isis/blob/3cb546e57e908bf0387336f774b495d8ac5b708a/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/EntityCollectionModel.java"
            },
            {
                "additions": 5,
                "sha": "189b48bdd01f6209d2edd8a022f052e22cde5dc5",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/3cb546e57e908bf0387336f774b495d8ac5b708a/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/IsisAjaxNavigationToolbar.java",
                "deletions": 2,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/IsisAjaxNavigationToolbar.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/IsisAjaxNavigationToolbar.java?ref=3cb546e57e908bf0387336f774b495d8ac5b708a",
                "patch": "@@ -54,8 +54,11 @@ public void onClick(AjaxRequestTarget target) {\n                 final DataTable<?, ?> dataTable = getTable();\n                 final CollectionContentsSortableDataProvider dataProvider = (CollectionContentsSortableDataProvider) dataTable.getDataProvider();\n                 final EntityCollectionModel collectionModel = dataProvider.getEntityCollectionModel();\n-                collectionModel.clearToggleMementosList();\n-                toggleboxColumn.clearToggles();\n+\n+                if(toggleboxColumn != null) {\n+                    collectionModel.clearToggleMementosList();\n+                    toggleboxColumn.clearToggles();\n+                }\n \n                 final UiHintContainer hintContainer = getUiHintContainer();\n                 if(hintContainer != null) {",
                "changes": 7,
                "blob_url": "https://github.com/apache/isis/blob/3cb546e57e908bf0387336f774b495d8ac5b708a/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/IsisAjaxNavigationToolbar.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1436: fixes showAll behaviour for non-standalone collections.\n\nThe earlier work sorted out showAll for standalone, but unfortunately broke regular entity (parented) collections with an NPE - there is no toggled list for these.",
        "commit": "https://github.com/apache/isis/commit/3cb546e57e908bf0387336f774b495d8ac5b708a"
    },
    {
        "parent": "https://github.com/apache/isis/commit/bfece661b326a070f5d25cc814a539dbd11d97a8",
        "bug_id": "isis_42",
        "file": [
            {
                "additions": 0,
                "sha": "dcddc6d398c58a89ed0ef7d06c9d8ebcf09014b8",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/064c42e921a3fafbc5d83960b4e31e3715d0aa3c/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/ResponseGeneratorService.java",
                "deletions": 4,
                "filename": "core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/ResponseGeneratorService.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/ResponseGeneratorService.java?ref=064c42e921a3fafbc5d83960b4e31e3715d0aa3c",
                "patch": "@@ -58,11 +58,7 @@ public Response objectRepresentation(final ResponseContext responseContext) {\n \n         final ResourceContext resourceContext = responseContext.getResourceContext();\n         final ObjectAdapter objectAdapter = responseContext.getObjectAdapter();\n-        final ObjectAdapterLinkTo adapterLinkTo = responseContext.getAdapterLinkTo();\n-\n-        ObjectAdapterAccessHelper accessHelper = new ObjectAdapterAccessHelper(resourceContext, objectAdapter);\n \n-        resourceContext.canEagerlyRender(null);\n         final DomainObjectReprRenderer renderer = new DomainObjectReprRenderer(resourceContext, null, JsonRepresentation.newMap());\n         renderer.with(objectAdapter).includesSelf();\n ",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/064c42e921a3fafbc5d83960b4e31e3715d0aa3c/core/viewer-restfulobjects-server/src/main/java/org/apache/isis/viewer/restfulobjects/server/resources/ResponseGeneratorService.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-917: first cut at a pluggable representations service for RO.\n\nFix for NPE when app runs (previous commit lied), tests still failing.",
        "commit": "https://github.com/apache/isis/commit/064c42e921a3fafbc5d83960b4e31e3715d0aa3c"
    },
    {
        "parent": "https://github.com/apache/isis/commit/ef5168feb0164e7f6b52454d2f1fda9c61a4be2b",
        "bug_id": "isis_43",
        "file": [
            {
                "additions": 5,
                "sha": "72658fd4a9482756ee00923d06b58b8e279b6d56",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ObjectAdapterMemento.java",
                "deletions": 0,
                "filename": "component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ObjectAdapterMemento.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ObjectAdapterMemento.java?ref=6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd",
                "patch": "@@ -65,6 +65,7 @@ public static ObjectAdapterMemento createPersistent(final RootOid rootOid) {\n     }\n \n \n+\n     enum Type {\n         /**\n          * The {@link ObjectAdapter} that this is the memento for directly has\n@@ -349,6 +350,10 @@ public boolean equals(Object obj) {\n \n     @Override\n     public String toString() {\n+        return asString();\n+    }\n+\n+    public String asString() {\n         return type.toString(this);\n     }\n ",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ObjectAdapterMemento.java"
            },
            {
                "additions": 2,
                "sha": "956b4369239f52c82db71dbf268384cff5bcc935",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/ObjectAdapterMementoProviderAbstract.java",
                "deletions": 2,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/ObjectAdapterMementoProviderAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/ObjectAdapterMementoProviderAbstract.java?ref=6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd",
                "patch": "@@ -34,7 +34,7 @@\n \n     private static final long serialVersionUID = 1L;\n     \n-    private static final String NULL_PLACEHOLDER = \"$$_isis_null_$$\";\n+    protected static final String NULL_PLACEHOLDER = \"$$_isis_null_$$\";\n     private static final String NULL_DISPLAY_TEXT = \"\";\n \n     private final ScalarModel scalarModel;\n@@ -50,7 +50,7 @@ protected String getDisplayText(ObjectAdapterMemento choice) {\n \n     @Override\n     protected Object getId(ObjectAdapterMemento choice) {\n-        return choice != null? choice.toString(): NULL_PLACEHOLDER;\n+        return choice != null? choice.asString(): NULL_PLACEHOLDER;\n     }\n \n     @Override",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/ObjectAdapterMementoProviderAbstract.java"
            },
            {
                "additions": 42,
                "sha": "c2a382d405f2bdca5a8fbc08ae2020f63bceea40",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "deletions": 22,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java?ref=6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd",
                "patch": "@@ -18,21 +18,19 @@\n \n import java.util.Collection;\n import java.util.List;\n-\n+import com.google.common.base.Function;\n import com.google.common.base.Predicate;\n import com.google.common.collect.Collections2;\n import com.google.common.collect.Lists;\n import com.vaynberg.wicket.select2.ChoiceProvider;\n import com.vaynberg.wicket.select2.Select2Choice;\n-\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponentLabel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager.ConcurrencyChecking;\n import org.apache.isis.viewer.wicket.model.mementos.ObjectAdapterMemento;\n@@ -135,31 +133,52 @@ protected Component addComponentForCompact() {\n \n     \n     protected ChoiceProvider<ObjectAdapterMemento> newChoiceProvider(final List<ObjectAdapterMemento> choicesMementos) {\n-        ChoiceProvider<ObjectAdapterMemento> provider = new ObjectAdapterMementoProviderAbstract(getScalarModel()) {\n+        return new FixedObjectAdapterMementoProvider(getScalarModel(), choicesMementos);\n+    }\n+\n+\n+    static class FixedObjectAdapterMementoProvider extends ObjectAdapterMementoProviderAbstract {\n \n-            private static final long serialVersionUID = 1L;\n+        private static final long serialVersionUID = 1L;\n+        private final List<ObjectAdapterMemento> choicesMementos;\n \n-            @Override\n-            public Collection<ObjectAdapterMemento> toChoices(final Collection<String> ids) {\n-                final List<ObjectAdapterMemento> mementos = obtainMementos(null);\n-                final Predicate<ObjectAdapterMemento> predicate = new Predicate<ObjectAdapterMemento>() {\n+        public FixedObjectAdapterMementoProvider(\n+                final ScalarModel scalarModel,\n+                final List<ObjectAdapterMemento> choicesMementos) {\n+            super(scalarModel);\n+            this.choicesMementos = choicesMementos;\n+        }\n \n-                    @Override\n-                    public boolean apply(ObjectAdapterMemento input) {\n-                        final String id = (String) getId(input);\n-                        return ids.contains(id);\n+        @Override\n+        public Collection<ObjectAdapterMemento> toChoices(final Collection<String> ids) {\n+            final List<ObjectAdapterMemento> mementos = obtainMementos(null);\n+\n+            final Predicate<ObjectAdapterMemento> lookupOam = new Predicate<ObjectAdapterMemento>() {\n+                @Override\n+                public boolean apply(ObjectAdapterMemento input) {\n+                    final String id = (String) getId(input);\n+                    return ids.contains(id);\n+                }\n+            };\n+\n+            final Function<String, ObjectAdapterMemento> toOam = new Function<String, ObjectAdapterMemento>() {\n+                @Override\n+                public ObjectAdapterMemento apply(String input) {\n+                    if (NULL_PLACEHOLDER.equals(input)) {\n+                        return null;\n                     }\n-                };\n-                return Collections2.filter(mementos, predicate); \n-            }\n+                    final Collection<ObjectAdapterMemento> filteredCollection = Collections2.filter(mementos, lookupOam);\n+                    return filteredCollection.iterator().next();\n+                }\n+            };\n+            return Collections2.transform(ids, toOam);\n+        }\n \n-            @Override\n-            protected List<ObjectAdapterMemento> obtainMementos(String term) {\n-                return choicesMementos;\n-            }\n+        @Override\n+        protected List<ObjectAdapterMemento> obtainMementos(String term) {\n+            return choicesMementos;\n+        }\n \n-        };\n-        return provider;\n     }\n \n     @Override\n@@ -246,4 +265,5 @@ public void setPending(ObjectAdapterMemento pending) {\n     public ScalarModel getScalarModel() {\n         return scalarModel;\n     }\n+\n }",
                "changes": 64,
                "blob_url": "https://github.com/apache/isis/blob/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java"
            },
            {
                "additions": 64,
                "sha": "93f662e21324eca3e6fac2fde3eb93dce26ed53a",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/ui/src/test/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/FixedObjectAdapterMementoProviderTest.java",
                "deletions": 0,
                "filename": "component/viewer/wicket/ui/src/test/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/FixedObjectAdapterMementoProviderTest.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/test/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/FixedObjectAdapterMementoProviderTest.java?ref=6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd",
                "patch": "@@ -0,0 +1,64 @@\n+package org.apache.isis.viewer.wicket.ui.components.widgets.valuechoices;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import com.google.common.collect.Lists;\n+import org.jmock.Expectations;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2;\n+import org.apache.isis.viewer.wicket.model.mementos.ObjectAdapterMemento;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.nullValue;\n+\n+public class FixedObjectAdapterMementoProviderTest {\n+\n+    @Rule\n+    public JUnitRuleMockery2 context = JUnitRuleMockery2.createFor(JUnitRuleMockery2.Mode.INTERFACES_AND_CLASSES);\n+\n+    private List<ObjectAdapterMemento> mementos;\n+\n+    private ObjectAdapterMemento mockMemento1;\n+    private ObjectAdapterMemento mockMemento2;\n+    private ValueChoicesSelect2Panel.FixedObjectAdapterMementoProvider provider;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        mockMemento1 = mock(\"mockMemento1\");\n+        mockMemento2 = mock(\"mockMemento2\");\n+\n+        mementos = Lists.newArrayList(\n+                mockMemento1, mockMemento2\n+        );\n+\n+        provider = new ValueChoicesSelect2Panel.FixedObjectAdapterMementoProvider(null, mementos);\n+    }\n+\n+    @Test\n+    public void whenInList() throws Exception {\n+        final Collection<ObjectAdapterMemento> mementos = provider.toChoices(Collections.singletonList(\"mockMemento1\"));\n+        Assert.assertThat(mementos.size(), is(1));\n+        Assert.assertThat(mementos.iterator().next(), is(mockMemento1));\n+    }\n+\n+    @Test\n+    public void whenNullPlaceholder() throws Exception {\n+        final Collection<ObjectAdapterMemento> mementos = provider.toChoices(Collections.singletonList(\"$$_isis_null_$$\"));\n+        Assert.assertThat(mementos.size(), is(1));\n+        Assert.assertThat(mementos.iterator().next(), is(nullValue()));\n+    }\n+\n+    private ObjectAdapterMemento mock(final String id) {\n+        final ObjectAdapterMemento mock = context.mock(ObjectAdapterMemento.class, id);\n+        context.checking(new Expectations() {{\n+            allowing(mock).asString();\n+            will(returnValue(id));\n+        }});\n+        return mock;\n+    }\n+\n+}\n\\ No newline at end of file",
                "changes": 64,
                "blob_url": "https://github.com/apache/isis/blob/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/component/viewer/wicket/ui/src/test/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/FixedObjectAdapterMementoProviderTest.java"
            },
            {
                "additions": 0,
                "sha": "12a9e2ba3b81c596642755c0d8de1aba2b398ad1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/example/application/simple_wicket_restful_jdo/fixture/src/main/java/fixture/simple/SimpleObjectsFixturesService.java",
                "deletions": 8,
                "filename": "example/application/simple_wicket_restful_jdo/fixture/src/main/java/fixture/simple/SimpleObjectsFixturesService.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simple_wicket_restful_jdo/fixture/src/main/java/fixture/simple/SimpleObjectsFixturesService.java?ref=6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd",
                "patch": "@@ -18,8 +18,6 @@\n  */\n package fixture.simple;\n \n-import dom.simple.SimpleObjects;\n-\n import java.util.List;\n import org.apache.isis.applib.annotation.DomainService;\n import org.apache.isis.applib.annotation.MemberOrder;\n@@ -65,11 +63,5 @@ public Object installFixturesAndReturnFirst() {\n         return run.get(0).getObject();\n     }\n \n-    // //////////////////////////////////////\n-\n-    private SimpleObjects simpleObjects;\n-    public void injectSimpleObjects(SimpleObjects simpleObjects) {\n-        this.simpleObjects = simpleObjects;\n-    }\n \n }",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd/example/application/simple_wicket_restful_jdo/fixture/src/main/java/fixture/simple/SimpleObjectsFixturesService.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-835: fixed NPE, drop down for strings now ok for actions...\n\n... though still has an issue as a property (new value is just ignored).",
        "commit": "https://github.com/apache/isis/commit/6427dfb1a4f2296c6aeaf6bf240af8a0cd2822cd"
    },
    {
        "parent": "https://github.com/apache/isis/commit/48fe231be5f2946d81eb2192ebfbdd958bbe21a6",
        "bug_id": "isis_44",
        "file": [
            {
                "additions": 9,
                "sha": "4b09be1aed3088d14950f5628a1535fd9dc4ce01",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/df329882299524e194a7e9d0e86f497421eaa110/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/grid/GridFacet.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/grid/GridFacet.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/grid/GridFacet.java?ref=df329882299524e194a7e9d0e86f497421eaa110",
                "patch": "@@ -20,10 +20,18 @@\n \n \n import org.apache.isis.applib.layout.component.Grid;\n+import org.apache.isis.applib.services.layout.GridNormalizerService;\n+import org.apache.isis.applib.services.layout.GridService;\n import org.apache.isis.core.metamodel.facetapi.Facet;\n \n /**\n- * Corresponds to providing a <code>.layout.xml</code> file for the domain object's class.\n+ * Obtain the current grid, derived either from a <code>.layout.xml</code> file, and normalized, or synthesized from\n+ * existing layout metadata (annotations or <code>layout.json</code>).\n+ *\n+ * <p>\n+ *     Most of the heavy lifting is done by delegating to the {@link GridService} and {@link GridNormalizerService}\n+ *     services.\n+ * </p>\n  */\n public interface GridFacet extends Facet {\n ",
                "changes": 10,
                "blob_url": "https://github.com/apache/isis/blob/df329882299524e194a7e9d0e86f497421eaa110/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/grid/GridFacet.java"
            },
            {
                "additions": 9,
                "sha": "7a774d32d8940b9a791c248052de91111e265e70",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/df329882299524e194a7e9d0e86f497421eaa110/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/grid/GridServiceDefault.java",
                "deletions": 8,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/grid/GridServiceDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/grid/GridServiceDefault.java?ref=df329882299524e194a7e9d0e86f497421eaa110",
                "patch": "@@ -229,21 +229,22 @@ public Grid toGrid(final Object domainObject, final Style style) {\n     public Grid toGrid(final Class<?> domainClass, final Style style) {\n         switch (style) {\n         case NORMALIZED:\n-            // obtain the already normalized grid, if available.\n-            // (if there is none, then the facet will delegate back to this service to do the normalization,\n-            // but then will cache it for any subsequent requests).\n-            final ObjectSpecification objectSpec = specificationLookup.loadSpecification(domainClass);\n-            final GridFacet facet = objectSpec.getFacet(GridFacet.class);\n-            return facet != null? facet.getGrid(): null;\n+            return normalizedGrid(domainClass);\n         case COMPLETE:\n-            return complete(fromXml(domainClass));\n+            return complete(normalizedGrid(domainClass));\n         case MINIMAL:\n-            return minimal(fromXml(domainClass));\n+            return minimal(normalizedGrid(domainClass));\n         default:\n             throw new IllegalArgumentException(\"unsupported style\");\n         }\n     }\n \n+    protected Grid normalizedGrid(final Class<?> domainClass) {\n+        final ObjectSpecification objectSpec = specificationLookup.loadSpecification(domainClass);\n+        final GridFacet facet = objectSpec.getFacet(GridFacet.class);\n+        return facet != null? facet.getGrid(): null;\n+    }\n+\n     @Override\n     public String tnsAndSchemaLocation(final Grid grid) {\n         final List<String> parts = Lists.newArrayList();",
                "changes": 17,
                "blob_url": "https://github.com/apache/isis/blob/df329882299524e194a7e9d0e86f497421eaa110/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/grid/GridServiceDefault.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-993: minor changes, working towards being able to generate .layout.xml for complete vs normalized vs minimal (no longer NPEs for complete etc), however...\n\n... not yet correctly roundtripping for anything other than the complete .layout.xml.",
        "commit": "https://github.com/apache/isis/commit/df329882299524e194a7e9d0e86f497421eaa110"
    },
    {
        "parent": "https://github.com/apache/isis/commit/dba0d51eb79488319e1dd1e9fe5029e0b1f39eef",
        "bug_id": "isis_45",
        "file": [
            {
                "additions": 5,
                "sha": "0b84fa46923528a1e7901a216fae7dcc24c1170a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/3b7a74c551b1ff7bbd886b7fa22533df8d6d9a3c/core/runtime/src/main/java/org/apache/isis/core/runtime/services/sessmgmt/SessionManagementServiceDefault.java",
                "deletions": 4,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/services/sessmgmt/SessionManagementServiceDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/services/sessmgmt/SessionManagementServiceDefault.java?ref=3b7a74c551b1ff7bbd886b7fa22533df8d6d9a3c",
                "patch": "@@ -19,13 +19,12 @@\n \n package org.apache.isis.core.runtime.services.sessmgmt;\n \n-import javax.inject.Inject;\n-\n import org.apache.isis.applib.annotation.DomainService;\n import org.apache.isis.applib.annotation.NatureOfService;\n import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.services.sessmgmt.SessionManagementService;\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n+import org.apache.isis.core.metamodel.services.persistsession.PersistenceSessionServiceInternal;\n import org.apache.isis.core.runtime.system.session.IsisSessionFactory;\n \n @DomainService(\n@@ -40,15 +39,17 @@ public void nextSession() {\n         final AuthenticationSession authenticationSession =\n                 isisSessionFactory.getCurrentSession().getAuthenticationSession();\n \n-        isisSessionFactory.getCurrentSession().getPersistenceSession().getTransactionManager().endTransaction();\n+        persistenceSessionServiceInternal.commit();\n         isisSessionFactory.closeSession();\n \n         isisSessionFactory.openSession(authenticationSession);\n-        isisSessionFactory.getCurrentSession().getPersistenceSession().startTransaction();\n+        persistenceSessionServiceInternal.beginTran();\n     }\n \n \n     @javax.inject.Inject\n     IsisSessionFactory isisSessionFactory;\n+    @javax.inject.Inject\n+    PersistenceSessionServiceInternal persistenceSessionServiceInternal;\n \n }",
                "changes": 9,
                "blob_url": "https://github.com/apache/isis/blob/3b7a74c551b1ff7bbd886b7fa22533df8d6d9a3c/core/runtime/src/main/java/org/apache/isis/core/runtime/services/sessmgmt/SessionManagementServiceDefault.java"
            },
            {
                "additions": 13,
                "sha": "9d47b80c0561f3fe255bb35d0f18aad1bf02cff9",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/3b7a74c551b1ff7bbd886b7fa22533df8d6d9a3c/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java",
                "deletions": 3,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java?ref=3b7a74c551b1ff7bbd886b7fa22533df8d6d9a3c",
                "patch": "@@ -483,13 +483,23 @@ private void completeCommandFromInteractionAndClearDomainEvents() {\n         final Command command = commandContext.getCommand();\n         final Interaction interaction = interactionContext.getInteraction();\n \n+\n         if(command.getStartedAt() != null && command.getCompletedAt() == null) {\n             // the guard is in case we're here as the result of a redirect following a previous exception;just ignore.\n \n+            final Timestamp completedAt;\n+            final Interaction.Execution priorExecution = interaction.getPriorExecution();\n+            if (priorExecution != null) {\n+                // copy over from the most recent (which will be the top-level) interaction\n+                completedAt = priorExecution.getCompletedAt();\n+            } else {\n+                // this could arise as the result of calling SessionManagementService#nextSession within an action\n+                // the best we can do is to use the current time\n+\n+                // REVIEW: as for the interaction object, it is left somewhat high-n-dry.\n+                completedAt = clockService.nowAsJavaSqlTimestamp();\n+            }\n \n-            // copy over from the most recent (which will be the top-level) interaction\n-            Interaction.Execution priorExecution = interaction.getPriorExecution();\n-            final Timestamp completedAt = priorExecution.getCompletedAt();\n             command.setCompletedAt(completedAt);\n         }\n ",
                "changes": 16,
                "blob_url": "https://github.com/apache/isis/blob/3b7a74c551b1ff7bbd886b7fa22533df8d6d9a3c/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1453: fixes SessionManagementService to call the correct API to set up the next xactn.\n\nUse of the wrong API was resulting in the Isis framework's notion of the current transaction being out-of-whack with JDO's, resulting in the framework attempting to start the same JDO xactn twice.\n\nIn addition, fixed handling of closing the command when  first session is closed; was resulting in NPE because the interaction.Execution is still current and thus integration.getPriorExecution() returns null (resulting in an NPE).",
        "commit": "https://github.com/apache/isis/commit/3b7a74c551b1ff7bbd886b7fa22533df8d6d9a3c"
    },
    {
        "parent": "https://github.com/apache/isis/commit/0d79db9706c16ff6ba28a0e6279ba0ca2b00b2a7",
        "bug_id": "isis_46",
        "file": [
            {
                "additions": 4,
                "sha": "57cac359fab8e62e51bd447accb8c81ab1c07e98",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/FormExecutor.java",
                "deletions": 11,
                "filename": "core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/FormExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/FormExecutor.java?ref=0da818bb6bdd701ed29da53d7c8506b81d7d1044",
                "patch": "@@ -21,26 +21,19 @@\n \n import java.io.Serializable;\n \n+import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.form.Form;\n \n-import org.apache.isis.applib.annotation.PromptStyle;\n-\n /**\n  * Passed through the {@link ActionModel} or {@link ScalarModel}, allowing\n  * two different Wicket UI components (eg owning <code>ActionPanel</code> and\n  * <code>ActionParametersFormPanel</code> to interact.\n- *\n- * <p>\n- *     REVIEW: this is a rather clunky design.  The executing panel\n- *     isn't used by the model, and one panel is parent/creates of the other;\n- *     is it necessary to decouple them to this degree?\n- * </p>\n  */\n public interface FormExecutor extends Serializable {\n \n     boolean executeAndProcessResults(\n-            AjaxRequestTarget target,\n-            Form<?> feedbackForm,\n-            PromptStyle promptStyle);\n+            final Page page,\n+            final AjaxRequestTarget targetIfAny,\n+            final Form<?> feedbackFormIfAny);\n }",
                "changes": 15,
                "blob_url": "https://github.com/apache/isis/blob/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-model/src/main/java/org/apache/isis/viewer/wicket/model/models/FormExecutor.java"
            },
            {
                "additions": 7,
                "sha": "15182d534cdeaa1c186cfd580323b6ba8a3d2e6c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/actionresponse/ActionResultResponseType.java",
                "deletions": 6,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/actionresponse/ActionResultResponseType.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/actionresponse/ActionResultResponseType.java?ref=0da818bb6bdd701ed29da53d7c8506b81d7d1044",
                "patch": "@@ -22,8 +22,10 @@\n import java.util.concurrent.Callable;\n \n import com.google.common.collect.Lists;\n+\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.request.IRequestHandler;\n+\n import org.apache.isis.applib.value.Blob;\n import org.apache.isis.applib.value.Clob;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n@@ -34,7 +36,6 @@\n import org.apache.isis.core.runtime.system.session.IsisSessionFactory;\n import org.apache.isis.viewer.wicket.model.models.ActionModel;\n import org.apache.isis.viewer.wicket.model.models.EntityCollectionModel;\n-import org.apache.isis.viewer.wicket.model.models.EntityModel;\n import org.apache.isis.viewer.wicket.model.models.ValueModel;\n import org.apache.isis.viewer.wicket.model.models.VoidModel;\n import org.apache.isis.viewer.wicket.ui.pages.entity.EntityPage;\n@@ -171,15 +172,15 @@ private static ActionResultResponse toEntityPage(final ActionModel model, final\n \n     public static ActionResultResponse determineAndInterpretResult(\n             final ActionModel model, \n-            final AjaxRequestTarget target, \n+            final AjaxRequestTarget targetIfAny,\n             final ObjectAdapter resultAdapter) {\n-        ActionResultResponseType arrt = determineFor(resultAdapter, target);\n-        return arrt.interpretResult(model, target, resultAdapter);\n+        ActionResultResponseType arrt = determineFor(resultAdapter, targetIfAny);\n+        return arrt.interpretResult(model, targetIfAny, resultAdapter);\n     }\n \n     private static ActionResultResponseType determineFor(\n             final ObjectAdapter resultAdapter, \n-            final AjaxRequestTarget target) {\n+            final AjaxRequestTarget targetIfAny) {\n         if(resultAdapter == null) {\n             return ActionResultResponseType.VOID;\n         }\n@@ -195,7 +196,7 @@ private static ActionResultResponseType determineFor(\n                     return ActionResultResponseType.VALUE_BLOB;\n                 } \n                 if(value instanceof java.net.URL) {\n-                    return target != null? ActionResultResponseType.VALUE_URL_AJAX: ActionResultResponseType.VALUE_URL_NOAJAX;\n+                    return targetIfAny != null? ActionResultResponseType.VALUE_URL_AJAX: ActionResultResponseType.VALUE_URL_NOAJAX;\n                 } \n                 // else\n                 return ActionResultResponseType.VALUE;",
                "changes": 13,
                "blob_url": "https://github.com/apache/isis/blob/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/actionresponse/ActionResultResponseType.java"
            },
            {
                "additions": 2,
                "sha": "7462bca42b2f58ca7e3e2b6aef10e7fb2a75310f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersFormExecutor.java",
                "deletions": 2,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersFormExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersFormExecutor.java?ref=0da818bb6bdd701ed29da53d7c8506b81d7d1044",
                "patch": "@@ -56,9 +56,9 @@ protected void forwardOnConcurrencyException(\n \n     protected void forwardOntoResult(\n             final ObjectAdapter resultAdapter,\n-            final AjaxRequestTarget target) {\n+            final AjaxRequestTarget targetIfany) {\n         ActionResultResponse resultResponse = ActionResultResponseType\n-                .determineAndInterpretResult(model, target, resultAdapter);\n+                .determineAndInterpretResult(model, targetIfany, resultAdapter);\n         resultResponse.getHandlingStrategy().handleResults(resultResponse, getIsisSessionFactory());\n     }\n ",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersFormExecutor.java"
            },
            {
                "additions": 11,
                "sha": "bad909a33a5238c28a12d08185793f3fe303d03e",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersPanel.java",
                "deletions": 4,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersPanel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersPanel.java?ref=0da818bb6bdd701ed29da53d7c8506b81d7d1044",
                "patch": "@@ -19,6 +19,7 @@\n \n package org.apache.isis.viewer.wicket.ui.components.actions;\n \n+import org.apache.wicket.Page;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.Model;\n@@ -62,7 +63,7 @@\n     public ActionParametersPanel(final String id, final ActionModel actionModel) {\n         super(id, actionModel);\n         actionModel.setFormExecutor(new ActionParametersFormExecutor(actionModel));\n-        buildGui(getActionModel());\n+        //buildGui(getActionModel());\n     }\n \n     /**\n@@ -76,11 +77,16 @@ public void setActionPrompt(ActionPrompt actionPrompt) {\n         formExecutor.setActionPrompt(actionPrompt);\n     }\n \n+    @Override protected void onInitialize() {\n+        super.onInitialize();\n+\n+        buildGui(getModel());\n+    }\n+\n     @Override\n     protected void onConfigure() {\n         super.onConfigure();\n \n-        buildGui(getModel());\n     }\n \n     private void buildGui(final ActionModel actionModel) {\n@@ -145,8 +151,9 @@ protected void onConfigure() {\n \n     private void buildGuiForNoParameters(final ActionModel formExecutor) {\n \n-        boolean succeeded = formExecutor.getFormExecutor().executeAndProcessResults(null, null,\n-                formExecutor.getPromptStyle());\n+        final Page page = this.getPage();\n+        boolean succeeded = formExecutor.getFormExecutor().executeAndProcessResults(page, null, null);\n+\n         if(succeeded) {\n             // nothing to do\n         } else {",
                "changes": 15,
                "blob_url": "https://github.com/apache/isis/blob/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/actions/ActionParametersPanel.java"
            },
            {
                "additions": 29,
                "sha": "af208cc08ce5d3b6dc5ebda8e4a9d1bbb5812721",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorAbstract.java",
                "deletions": 28,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorAbstract.java?ref=0da818bb6bdd701ed29da53d7c8506b81d7d1044",
                "patch": "@@ -13,15 +13,13 @@\n import org.apache.wicket.util.visit.IVisit;\n import org.apache.wicket.util.visit.IVisitor;\n \n-import org.apache.isis.applib.annotation.PromptStyle;\n import org.apache.isis.applib.services.command.Command;\n import org.apache.isis.applib.services.command.CommandContext;\n import org.apache.isis.applib.services.exceprecog.ExceptionRecognizer;\n import org.apache.isis.applib.services.exceprecog.ExceptionRecognizerComposite;\n import org.apache.isis.applib.services.guice.GuiceBeanProvider;\n import org.apache.isis.applib.services.message.MessageService;\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n-import org.apache.isis.core.commons.authentication.MessageBroker;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.version.ConcurrencyException;\n import org.apache.isis.core.metamodel.facets.properties.renderunchanged.UnchangingFacet;\n@@ -57,16 +55,16 @@ protected WicketViewerSettings getSettings() {\n \n     @Override\n     public boolean executeAndProcessResults(\n-            final AjaxRequestTarget target,\n-            final Form<?> feedbackForm,\n-            final PromptStyle promptStyle) {\n+            final Page page,\n+            final AjaxRequestTarget targetIfAny,\n+            final Form<?> feedbackFormIfAny) {\n \n         ObjectAdapter targetAdapter = null;\n         try {\n             targetAdapter = obtainTargetAdapter();\n \n             // no concurrency exception, so continue...\n-            return doExecuteAndProcessResults(target, feedbackForm, promptStyle);\n+            return doExecuteAndProcessResults(page, targetIfAny, feedbackFormIfAny);\n \n         } catch (ConcurrencyException ex) {\n \n@@ -85,19 +83,21 @@ public boolean executeAndProcessResults(\n     }\n \n     /**\n-     * @param target\n+     *\n+     * @param page\n+     * @param targetIfAny\n      * @return whether to clear args or not (they aren't if there was a validation exception)\n      */\n     private boolean doExecuteAndProcessResults(\n-            final AjaxRequestTarget target,\n-            final Form<?> feedbackForm,\n-            final PromptStyle promptStyle) {\n+            final Page page,\n+            final AjaxRequestTarget targetIfAny,\n+            final Form<?> feedbackFormIfAny) {\n \n         // validate the action parameters (if any)\n         final String invalidReasonIfAny = getReasonInvalidIfAny();\n \n         if (invalidReasonIfAny != null) {\n-            raiseWarning(target, feedbackForm, invalidReasonIfAny);\n+            raiseWarning(targetIfAny, feedbackFormIfAny, invalidReasonIfAny);\n             return false;\n         }\n \n@@ -127,31 +127,30 @@ private boolean doExecuteAndProcessResults(\n             targetEntityModel.resetVersion();\n             targetEntityModel.resetPropertyModels();\n \n-            onExecuteAndProcessResults(target);\n+            onExecuteAndProcessResults(targetIfAny);\n \n             final ObjectAdapter targetAdapter = targetEntityModel.load();\n             final boolean redirectEvenIfSameObject = getSettings().isRedirectEvenIfSameObject();\n \n-            if (targetAdapter != resultAdapter || redirectEvenIfSameObject) {\n+            if (targetAdapter != resultAdapter || redirectEvenIfSameObject || targetIfAny == null) {\n \n-                forwardOntoResult(resultAdapter, target);\n+                forwardOntoResult(resultAdapter, targetIfAny);\n \n             } else {\n-\n-                final Page page = feedbackForm.getPage();\n+                final AjaxRequestTarget target = targetIfAny; // only in this branch if there *is* a target to use\n                 addComponentsToRedraw(target, page);\n             }\n \n             return true;\n \n         } catch (RuntimeException ex) {\n \n-            String message = recognizeException(ex, target, feedbackForm);\n+            String message = recognizeException(ex, targetIfAny, feedbackFormIfAny);\n \n             if (message != null) {\n                 // no need to add to message broker, should already have been added...\n \n-                if (feedbackForm == null) {\n+                if (feedbackFormIfAny == null) {\n                     // forward on instead to void page\n                     // (otherwise, we'll have rendered an action parameters page\n                     // and so we'll be staying on that page)\n@@ -171,10 +170,11 @@ private boolean doExecuteAndProcessResults(\n         }\n     }\n \n-    private void addComponentsToRedraw(final AjaxRequestTarget target, final Page page) {\n+    private void addComponentsToRedraw(final AjaxRequestTarget target, final Page pageUNUSED) {\n         final List<Component> componentsToRedraw = Lists.newArrayList();\n         final List<Component> componentsNotToRedraw = Lists.newArrayList();\n \n+        final Page page = target.getPage();\n         page.visitChildren(new IVisitor<Component, Object>() {\n             @Override\n             public void component(final Component component, final IVisit<Object> visit) {\n@@ -281,12 +281,17 @@ private String recognizeException(RuntimeException ex, AjaxRequestTarget target,\n         return recognizedErrorIfAny;\n     }\n \n-    private void raiseWarning(AjaxRequestTarget target, Form<?> feedbackForm, String error) {\n-        if(target != null && feedbackForm != null) {\n-            target.add(feedbackForm);\n-            feedbackForm.error(error);\n+    private void raiseWarning(\n+            final AjaxRequestTarget targetIfAny,\n+            final Form<?> feedbackFormIfAny,\n+            final String error) {\n+\n+        if(targetIfAny != null && feedbackFormIfAny != null) {\n+            targetIfAny.add(feedbackFormIfAny);\n+            feedbackFormIfAny.error(error);\n         } else {\n-            getMessageBroker().addWarning(error);\n+            final MessageService messageService = getServicesInjector().lookupService(MessageService.class);\n+            messageService.warnUser(error);\n         }\n     }\n \n@@ -311,10 +316,6 @@ private IsisTransactionManager getTransactionManager() {\n         return getPersistenceSession().getTransactionManager();\n     }\n \n-    private MessageBroker getMessageBroker() {\n-        return getAuthenticationSession().getMessageBroker();\n-    }\n-\n     protected IsisSessionFactory getIsisSessionFactory() {\n         return IsisContext.getSessionFactory();\n     }",
                "changes": 57,
                "blob_url": "https://github.com/apache/isis/blob/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/FormExecutorAbstract.java"
            },
            {
                "additions": 3,
                "sha": "797447fc8ace7824b9e405ae5e8ba555c528a7c1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormAbstract.java",
                "deletions": 7,
                "filename": "core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormAbstract.java?ref=0da818bb6bdd701ed29da53d7c8506b81d7d1044",
                "patch": "@@ -89,10 +89,8 @@ public void renderHead(final IHeaderResponse response) {\n \n     protected AjaxButton addOkButton() {\n \n-//        final IModel<ObjectAdapter> model = getModel();\n-\n         AjaxButton okButton = settings.isUseIndicatorForFormSubmit()\n-                ? new IndicatingAjaxButton(ID_OK_BUTTON, new ResourceModel(\"okLabel\")) {\n+        ? new IndicatingAjaxButton(ID_OK_BUTTON, new ResourceModel(\"okLabel\")) {\n             private static final long serialVersionUID = 1L;\n \n             @Override\n@@ -104,8 +102,6 @@ public void onSubmit(AjaxRequestTarget target, Form<?> form) {\n                 }\n \n                 onSubmitOf(target, form, this);\n-\n-\n             }\n \n             @Override\n@@ -122,7 +118,7 @@ protected void onError(AjaxRequestTarget target, Form<?> form) {\n                 target.add(form);\n             }\n         }\n-                : new AjaxButton(ID_OK_BUTTON, new ResourceModel(\"okLabel\")) {\n+        : new AjaxButton(ID_OK_BUTTON, new ResourceModel(\"okLabel\")) {\n             private static final long serialVersionUID = 1L;\n \n             @Override\n@@ -225,7 +221,7 @@ private void onSubmitOf(\n \n         final PromptStyle promptStyle = formExecutorContext.getPromptStyle();\n         boolean succeeded = formExecutorContext.getFormExecutor()\n-                .executeAndProcessResults(target, form, promptStyle);\n+                .executeAndProcessResults(target.getPage(), target, form);\n         if (succeeded) {\n             if (promptStyle == PromptStyle.DIALOG) {\n                 // the Wicket ajax callbacks will have just started to hide the veil",
                "changes": 10,
                "blob_url": "https://github.com/apache/isis/blob/0da818bb6bdd701ed29da53d7c8506b81d7d1044/core/viewer-wicket-ui/src/main/java/org/apache/isis/viewer/wicket/ui/panels/PromptFormAbstract.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1613: fixes no-arg actions, was hitting an NPE\n\n... as the result of attempting to infer the current page from feedbackForm (that was null when no prompt).\n\nInstead, have the FormExecutor ask for the page via its method (executeAndProcessResults).\n\nThis in turn requires building ActionParametersPanel's GUI using onInitialize() rather than constructor, so able to get hold of the panel's owning page so can pass down to the FormExecutor",
        "commit": "https://github.com/apache/isis/commit/0da818bb6bdd701ed29da53d7c8506b81d7d1044"
    },
    {
        "parent": "https://github.com/apache/isis/commit/e56c5a186184f6801c23bdf62c522c83fd9f372f",
        "bug_id": "isis_47",
        "file": [
            {
                "additions": 1,
                "sha": "25c6c09ea3cc5c89b5f2ac2ce311d616308850d2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/1e8ebb34408de1d7a04864564d1055a8b59ef33e/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/action/ActionAction.java",
                "deletions": 1,
                "filename": "viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/action/ActionAction.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/action/ActionAction.java?ref=1e8ebb34408de1d7a04864564d1055a8b59ef33e",
                "patch": "@@ -201,7 +201,7 @@ private FormState validateParameters(RequestContext context, ObjectAction action\n             String fieldName = parameterName(i);\n             String newEntry = context.getParameter(fieldName);\n             \n-            if( newEntry.equals(\"-OTHER-\")) {\n+            if(newEntry != null && newEntry.equals(\"-OTHER-\")) {\n                 newEntry = context.getParameter(fieldName + \"-other\");\n             }\n             ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/1e8ebb34408de1d7a04864564d1055a8b59ef33e/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/action/ActionAction.java"
            },
            {
                "additions": 1,
                "sha": "d2ad751c47c0e211a0a65d337246664c2f9a5d66",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/1e8ebb34408de1d7a04864564d1055a8b59ef33e/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/edit/EditAction.java",
                "deletions": 1,
                "filename": "viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/edit/EditAction.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/edit/EditAction.java?ref=1e8ebb34408de1d7a04864564d1055a8b59ef33e",
                "patch": "@@ -159,7 +159,7 @@ private FormState validateObject(\n                 continue;\n             }\n             \n-            if( newEntry.equals(\"-OTHER-\")) {\n+            if (newEntry != null && newEntry.equals(\"-OTHER-\")) {\n                 newEntry = context.getParameter(fieldId + \"-other\");\n             }\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/1e8ebb34408de1d7a04864564d1055a8b59ef33e/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/edit/EditAction.java"
            }
        ],
        "repo": "isis",
        "message": "Fixed problem with Select field throwing NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/isis/trunk@1081582 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/isis/commit/1e8ebb34408de1d7a04864564d1055a8b59ef33e"
    },
    {
        "parent": "https://github.com/apache/isis/commit/ad8f8a82c93fe877d55555b01aedd27d3ce42bd0",
        "bug_id": "isis_48",
        "file": [
            {
                "additions": 10,
                "sha": "94e9c345310b2ac4e6ebc81e5e78d19fd386814f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/eb5b2b07f1191b92fb32993e625d15d594e6c8e2/core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java",
                "deletions": 2,
                "filename": "core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java?ref=eb5b2b07f1191b92fb32993e625d15d594e6c8e2",
                "patch": "@@ -283,7 +283,7 @@ public void preDeleteProcessingFor(final PersistenceCapable pojo, final CalledFr\n         withLogging(pojo, new Runnable() {\n             @Override\n             public void run() {\n-                ObjectAdapter adapter = getAdapterManager().getAdapterFor(pojo);\n+                ObjectAdapter adapter = getAdapterManager().adapterFor(pojo);\n                 \n                 final IsisTransaction transaction = getCurrentTransaction();\n                 transaction.enlistDeleting(adapter);\n@@ -307,7 +307,15 @@ public void run() {\n                     adapter.changeState(ResolveState.DESTROYED);\n                 }\n \n-                CallbackFacet.Util.callCallback(adapter, RemovedCallbackFacet.class);\n+\n+                // previously we called the removed callback (if any).\n+                // however, this is almost certainly incorrect, because DN will not allow us\n+                // to \"touch\" the pojo once deleted.\n+                //\n+                // CallbackFacet.Util.callCallback(adapter, RemovedCallbackFacet.class);\n+\n+\n+                // this is probably still ok to do, however.\n                 ensureFrameworksInAgreement(pojo);\n             }\n         }, calledFrom);",
                "changes": 12,
                "blob_url": "https://github.com/apache/isis/blob/eb5b2b07f1191b92fb32993e625d15d594e6c8e2/core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-643: similar fix in preDelete processing.\n\nBut here, rather than an NPE guard, instead force the adapter to be loaded such that it can be enlisted in the xactn.",
        "commit": "https://github.com/apache/isis/commit/eb5b2b07f1191b92fb32993e625d15d594e6c8e2"
    },
    {
        "parent": "https://github.com/apache/isis/commit/915556bdf3b1f380d49ae6509112c9860f125eaa",
        "bug_id": "isis_49",
        "file": [
            {
                "additions": 3,
                "sha": "af75db2a232a4a34c8fbb3f458fb55cc07ef29ae",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/750bf2077b4609ac341310e5a742d2bce8e3d550/core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java",
                "deletions": 0,
                "filename": "core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java?ref=750bf2077b4609ac341310e5a742d2bce8e3d550",
                "patch": "@@ -300,6 +300,9 @@ public void postDeleteProcessingFor(final PersistenceCapable pojo, final CalledF\n             @Override\n             public void run() {\n                 ObjectAdapter adapter = getAdapterManager().getAdapterFor(pojo);\n+                if(adapter == null) {\n+                    return;\n+                }\n                 if(!adapter.isDestroyed()) {\n                     adapter.changeState(ResolveState.DESTROYED);\n                 }",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/750bf2077b4609ac341310e5a742d2bce8e3d550/core/objectstore-jdo-datanucleus/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/persistence/FrameworkSynchronizer.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-643: speculative fix to add a guard to an NPE if post delete processing.\n\n... based, unfortunately, only on the supplied stacktrace and a bit of guesswork, since no reproducible case available.",
        "commit": "https://github.com/apache/isis/commit/750bf2077b4609ac341310e5a742d2bce8e3d550"
    },
    {
        "parent": "https://github.com/apache/isis/commit/96ba20cea9386e06e1e6c4c560fa722c9066e289",
        "bug_id": "isis_50",
        "file": [
            {
                "additions": 2,
                "sha": "45756b17b529b25ce5bd47d7a3601dd430db3a6b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/db43ffca8d593be186542907b48ea1c322e9e865/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/Dispatcher.java",
                "deletions": 1,
                "filename": "viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/Dispatcher.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/Dispatcher.java?ref=db43ffca8d593be186542907b48ea1c322e9e865",
                "patch": "@@ -181,7 +181,8 @@ private void generateErrorPage(Throwable exception, RequestContext requestContex\n     \n         String replace = \"\\\\$\\\\{\";\n         String withReplacement = \"\\\\$&#x7B;\";\n-        requestContext.addVariable(\"_error-message\", exception.getMessage().replaceAll(replace, withReplacement), Scope.INTERACTION);\n+        String message = exception.getMessage();\n+        requestContext.addVariable(\"_error-message\", message == null ? \"\" : message.replaceAll(replace, withReplacement), Scope.INTERACTION);\n         requestContext.addVariable(\"_error-details\", out.toString().replaceAll(replace, withReplacement), Scope.INTERACTION);\n         requestContext.clearTransientVariables();\n     }",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/db43ffca8d593be186542907b48ea1c322e9e865/viewer/scimpi/dispatcher/src/main/java/org/apache/isis/viewer/scimpi/dispatcher/Dispatcher.java"
            }
        ],
        "repo": "isis",
        "message": "Not all exceptions have a message so check for one first to avoid an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/isis/trunk@1063663 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/isis/commit/db43ffca8d593be186542907b48ea1c322e9e865"
    },
    {
        "parent": "https://github.com/apache/isis/commit/e9d63719a3ed8c1b4ca0bc63993b29ea65be94f2",
        "bug_id": "isis_51",
        "file": [
            {
                "additions": 2,
                "sha": "9232744f1c8a4605da839fb79de7660192578774",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/0be6486e8e853cf85f0f4acf3fbbdffbdd85b273/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "deletions": 1,
                "filename": "core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java?ref=0be6486e8e853cf85f0f4acf3fbbdffbdd85b273",
                "patch": "@@ -117,7 +117,8 @@ public final Recognition recognize2(final Throwable ex) {\n     private void injectServicesIfNecessary() {\n         if(!injected) {\n             for (final ExceptionRecognizer ers : exceptionRecognizers) {\n-                container.injectServicesInto(ers);\n+                if (container != null)\n+                    container.injectServicesInto(ers);\n             }\n             injected = true;\n         }",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/0be6486e8e853cf85f0f4acf3fbbdffbdd85b273/core/applib/src/main/java/org/apache/isis/applib/services/exceprecog/ExceptionRecognizerComposite.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1108: adding NPE guard to allow for the usage of ExceptionRecognizerComposite whereby it is simply instantiated and used as a wrapper around other instances of ExceptionRecognizer that have already been injected into.\n\nThis is done in several places in the Wicket viewer: EntityPropertiesForm, ActionPanel, WebRequestCycleForIsis",
        "commit": "https://github.com/apache/isis/commit/0be6486e8e853cf85f0f4acf3fbbdffbdd85b273"
    },
    {
        "parent": "https://github.com/apache/isis/commit/6f56f7703c0d56a46b1baeefead6d863c3d73892",
        "bug_id": "isis_52",
        "file": [
            {
                "additions": 5,
                "sha": "0b601e4d4166973d51566bef4464cec78bf23b83",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/188e45079d9391c2cd38b5108e91520ba231b7f5/alternatives/security/file/src/main/java/org/apache/isis/alternatives/security/file/authorization/FileAuthorizor.java",
                "deletions": 3,
                "filename": "alternatives/security/file/src/main/java/org/apache/isis/alternatives/security/file/authorization/FileAuthorizor.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/alternatives/security/file/src/main/java/org/apache/isis/alternatives/security/file/authorization/FileAuthorizor.java?ref=188e45079d9391c2cd38b5108e91520ba231b7f5",
                "patch": "@@ -247,9 +247,11 @@ private boolean learn(final String role, final Identifier member) {\n     private void writeMap() {\r\n         try {\r\n             OutputStream whiteListOutputResource = resourceStreamSource.writeResource(whiteListResourceName);\r\n-            if (whiteListOutputResource == null && !printedWarning) {\r\n-            \tLOG.warn(\"unable to write out authorisation details\");\r\n-            \tprintedWarning = true; // just to stop flooding log\r\n+            if (whiteListOutputResource == null) {\n+                if (!printedWarning) {\r\n+                \tLOG.warn(\"unable to write out authorisation details\");\r\n+                \tprintedWarning = true; // just to stop flooding log\n+                }\r\n             \treturn;\r\n             }\r\n             if (LOG.isDebugEnabled() && !printedDebug) {\r",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/188e45079d9391c2cd38b5108e91520ba231b7f5/alternatives/security/file/src/main/java/org/apache/isis/alternatives/security/file/authorization/FileAuthorizor.java"
            }
        ],
        "repo": "isis",
        "message": "Guard to prevent warnings from being repeated went on to allow rest of method to run causing an NPE.  Guard now allows returns, but only logs once.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/isis/trunk@1060781 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/isis/commit/188e45079d9391c2cd38b5108e91520ba231b7f5"
    },
    {
        "parent": "https://github.com/apache/isis/commit/62d77af98dd28f12fc0ea2d075d6d6c18005af06",
        "bug_id": "isis_53",
        "file": [
            {
                "additions": 13,
                "sha": "66587b75e64a47b9b2b358bd5d43913bb53b89ac",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.css",
                "deletions": 0,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.css",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.css?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -139,3 +139,16 @@\n .collectionContentsAsAjaxTablePanel .table-responsive {\n \toverflow-x: auto;\n }\n+\n+.collectionContentsAsAjaxTablePanel table tbody tr:last-child td {\n+    border-bottom: none;\n+}\n+\n+.collectionContentsAsAjaxTablePanel table tfoot tr:first-child td {\n+    border-top: none;\n+    border-bottom: none;\n+}\n+\n+.collectionContentsAsAjaxTablePanel .table {\n+    margin-bottom: 0px;\n+}\n\\ No newline at end of file",
                "changes": 13,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.css"
            },
            {
                "additions": 0,
                "sha": "44669cd9d8688772591e0dc1a5103dfe169b88f6",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.java",
                "deletions": 6,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.java?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -45,7 +45,6 @@\n import org.apache.isis.viewer.wicket.model.isis.WicketViewerSettings;\n import org.apache.isis.viewer.wicket.model.mementos.ObjectAdapterMemento;\n import org.apache.isis.viewer.wicket.model.models.EntityCollectionModel;\n-import org.apache.isis.viewer.wicket.ui.components.collection.bulk.BulkActionsHelper;\n import org.apache.isis.viewer.wicket.ui.components.collection.bulk.BulkActionsProvider;\n import org.apache.isis.viewer.wicket.ui.components.collection.count.CollectionCountProvider;\n import org.apache.isis.viewer.wicket.ui.components.collectioncontents.ajaxtable.columns.ColumnAbstract;\n@@ -64,17 +63,12 @@\n     private static final long serialVersionUID = 1L;\n \n     private static final String ID_TABLE = \"table\";\n-    private static final String ID_ACTION_PROMPT_MODAL_WINDOW = \"actionPromptModalWindow\";\n-    private static final String ID_ENTITY_ACTIONS = \"entityActions\";\n \n     private IsisAjaxFallbackDataTable<ObjectAdapter,String> dataTable;\n \n-    private final BulkActionsHelper bulkActionsHelper;\n-\n \n     public CollectionContentsAsAjaxTablePanel(final String id, final EntityCollectionModel model) {\n         super(id, model);\n-        bulkActionsHelper = new BulkActionsHelper(model);\n     }\n     \n     @Override",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/ajaxtable/CollectionContentsAsAjaxTablePanel.java"
            },
            {
                "additions": 23,
                "sha": "9e60554cf00490cb7cb590976173818a0bfccac1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/multiple/CollectionContentsMultipleViewsPanel.java",
                "deletions": 20,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/multiple/CollectionContentsMultipleViewsPanel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/multiple/CollectionContentsMultipleViewsPanel.java?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -33,8 +33,8 @@\n import org.apache.isis.viewer.wicket.ui.ComponentFactory;\n import org.apache.isis.viewer.wicket.ui.ComponentType;\n import org.apache.isis.viewer.wicket.ui.components.collection.count.CollectionCountProvider;\n-import org.apache.isis.viewer.wicket.ui.components.collection.selector.CollectionSelectorPanel;\n import org.apache.isis.viewer.wicket.ui.components.collection.selector.CollectionSelectorHelper;\n+import org.apache.isis.viewer.wicket.ui.components.collection.selector.CollectionSelectorPanel;\n import org.apache.isis.viewer.wicket.ui.components.collection.selector.CollectionSelectorProvider;\n import org.apache.isis.viewer.wicket.ui.panels.PanelAbstract;\n import org.apache.isis.viewer.wicket.ui.panels.PanelUtil;\n@@ -163,31 +163,34 @@ public void onEvent(IEvent<?> event) {\n                 if(view >= 0 && view < componentFactories.size()) {\n                     underlyingViewNum = view;\n                 }\n-            } catch(NumberFormatException ex) {\n-                // ignore\n-            }\n-        }\n \n-        final EntityCollectionModel dummyModel = getModel().asDummy();\n-        for(int i=0; i<MAX_NUM_UNDERLYING_VIEWS; i++) {\n-            final Component component = underlyingViews[i];\n-            if(component == null) {\n-                continue;\n-            }\n-            final boolean isSelected = i == underlyingViewNum;\n-            applyCssVisibility(component, isSelected);\n-            component.setDefaultModel(isSelected? getModel(): dummyModel);\n-        }\n \n-        this.selectedComponentFactory = ignoreFactory;\n-        this.selectedComponent = underlyingViews[underlyingViewNum];\n+                final EntityCollectionModel dummyModel = getModel().asDummy();\n+                for(int i=0; i<MAX_NUM_UNDERLYING_VIEWS; i++) {\n+                    final Component component = underlyingViews[i];\n+                    if(component == null) {\n+                        continue;\n+                    }\n+                    final boolean isSelected = i == underlyingViewNum;\n+                    applyCssVisibility(component, isSelected);\n+                    component.setDefaultModel(isSelected? getModel(): dummyModel);\n+                }\n+\n+                this.selectedComponentFactory = ignoreFactory;\n+                this.selectedComponent = underlyingViews[underlyingViewNum];\n \n \n-        final AjaxRequestTarget target = uiHintEvent.getTarget();\n-        if(target != null) {\n-            target.add(this, selectorDropdownPanel);\n+                final AjaxRequestTarget target = uiHintEvent.getTarget();\n+                if(target != null) {\n+                    target.add(this, selectorDropdownPanel);\n+                }\n+\n+            } catch(NumberFormatException ex) {\n+                // ignore\n+            }\n         }\n \n+\n     }\n \n ",
                "changes": 43,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/collectioncontents/multiple/CollectionContentsMultipleViewsPanel.java"
            },
            {
                "additions": 3,
                "sha": "6f6e6fe93857e5412f7ce9da85390e2885f0f3bf",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/ScalarPanelAbstract.java",
                "deletions": 8,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/ScalarPanelAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/ScalarPanelAbstract.java?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -22,10 +22,7 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.common.NotificationPanel;\n \n import java.util.List;\n-\n import com.google.common.collect.Lists;\n-\n-import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;\n import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -38,7 +35,6 @@\n import org.apache.wicket.markup.html.form.LabeledWebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.Model;\n-\n import org.apache.isis.applib.annotation.Where;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.facets.members.cssclass.CssClassFacet;\n@@ -47,8 +43,10 @@\n import org.apache.isis.core.runtime.system.context.IsisContext;\n import org.apache.isis.viewer.wicket.model.links.LinkAndLabel;\n import org.apache.isis.viewer.wicket.model.mementos.ObjectAdapterMemento;\n-import org.apache.isis.viewer.wicket.model.models.*;\n+import org.apache.isis.viewer.wicket.model.models.ActionPromptProvider;\n+import org.apache.isis.viewer.wicket.model.models.EntityModel;\n import org.apache.isis.viewer.wicket.model.models.EntityModel.RenderingHint;\n+import org.apache.isis.viewer.wicket.model.models.ScalarModel;\n import org.apache.isis.viewer.wicket.ui.components.additionallinks.AdditionalLinksPanel;\n import org.apache.isis.viewer.wicket.ui.components.additionallinks.EntityActionUtil;\n import org.apache.isis.viewer.wicket.ui.components.scalars.TextFieldValueModel.ScalarModelProvider;\n@@ -348,9 +346,6 @@ protected void applyLabelAtRule(Label scalarName, MarkupContainer formGroup) {\n \n         final LabelAtFacet facet = getModel().getFacet(LabelAtFacet.class);\n \n-        // TODO mgrigorov: Remove this. It is for debugging\n-        scalarName.add(new AttributeModifier(\"title\", \"labelAt=\" + (facet != null? facet.value(): \"(null)\")));\n-\n         if (facet != null) {\n             switch (facet.value()) {\n                 case LEFT:",
                "changes": 11,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/ScalarPanelAbstract.java"
            },
            {
                "additions": 4,
                "sha": "a86f6ccdcd715ba16e4f0eaf048daf5273e1c168",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.html",
                "deletions": 4,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.html",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.html?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -30,11 +30,11 @@\n                 <div class=\"iconAndTitle panel-heading actionPanelHeaderNew\">\n                     <span wicket:id=\"actionName\" class=\"actionName panel-title\">[action name]</span>\n \n-                    <div class=\"pull-right\">\n+                    <div class=\"btn-group\">\n+                        <div wicket:id=\"additionalLinks\"></div>\n+                    </div>\n \n-                        <div class=\"btn-group\">\n-                            <div wicket:id=\"additionalLinks\"></div>\n-                        </div>\n+                    <div class=\"pull-right\">\n                         <div class=\"btn-group\">\n                             <span wicket:id=\"selectorDropdown\"/>\n                         </div>",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.html"
            },
            {
                "additions": 5,
                "sha": "c1b333d88e52b2fc9e2bc41dd5d032cac50268a1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.java",
                "deletions": 1,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.java?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -65,6 +65,7 @@\n     private final ActionPromptModalWindow actionPromptModalWindow;\n     private final CollectionSelectorPanel selectorDropdownPanel;\n     private final BulkActionsHelper bulkActionsHelper;\n+    private AdditionalLinksPanel additionalLinks;\n \n     /**\n      * note that the bulk actions components are added in {@link #configureBulkActions(org.apache.isis.viewer.wicket.ui.components.collectioncontents.ajaxtable.columns.ObjectAdapterToggleboxColumn)}.\n@@ -152,6 +153,9 @@ public void onSelected(\n     @Override\n     public void configureBulkActions(final ObjectAdapterToggleboxColumn toggleboxColumn) {\n \n+        if(additionalLinks != null) {\n+            return;\n+        }\n         final BulkActionsLinkFactory linkFactory =\n                 new BulkActionsLinkFactory(getModel(), toggleboxColumn);\n \n@@ -164,7 +168,7 @@ public LinkAndLabel apply(ObjectAction objectAction) {\n             }\n         });\n \n-        AdditionalLinksPanel additionalLinks = new AdditionalLinksPanel(ID_ADDITIONAL_LINKS, links);\n+        additionalLinks = new AdditionalLinksPanel(ID_ADDITIONAL_LINKS, links);\n         addOrReplace(additionalLinks);\n \n ",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/standalonecollection/StandaloneCollectionPanel.java"
            },
            {
                "additions": 1,
                "sha": "90c217558ff2232cc10b08ef6fb05d2f3cdfd977",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/PageAbstract.html",
                "deletions": 1,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/PageAbstract.html",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/PageAbstract.html?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -94,7 +94,7 @@\n                             </ul>\n                             <ul class=\"nav navbar-nav navbar-right\">\n                                 <p class=\"navbar-text powered-by\">Powered by:</p>\n-                                <li><a href=\"http://isis.apache.org\" target=\"_blank\">Apache Isis &#174;</a></li>\n+                                <li><a href=\"http://isis.apache.org\" target=\"_blank\">Apache Isis &#8482;</a></li>\n                                 <li><a wicket:id=\"aboutLink\" class=\"navbar-right\">About</a></li>\n                                 <li wicket:id=\"themePicker\"></li>\n                             </ul>",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/PageAbstract.html"
            },
            {
                "additions": 10,
                "sha": "51c53d3525978d6b9616b19dc843bca899e8d808",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/bootstrap-overrides.css",
                "deletions": 1,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/bootstrap-overrides.css",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/bootstrap-overrides.css?ref=8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd",
                "patch": "@@ -89,7 +89,7 @@ div.label-left.form-group {\n div.label-left label.control-label {\n     width: 30%;\n     float: left;\n-    padding-top: 7px;\n+    padding-top: 2px;\n     padding-left: 10px;\n     text-align: start;\n }\n@@ -163,3 +163,12 @@ div.label-left .choicesPlaceholder {\n .standaloneCollectionPanel .panel-heading {\n     padding-bottom: 15px;\n }\n+\n+.standaloneCollectionPanel .additionalLinkList {\n+    margin-left: 50px;\n+}\n+\n+.referencePanel .entityLinkSelect2Panel .entityImage {\n+    width: 20px;\n+    height: 20px;\n+}",
                "changes": 11,
                "blob_url": "https://github.com/apache/isis/blob/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/bootstrap-overrides.css"
            }
        ],
        "repo": "isis",
        "message": "ISIS-537: fixes for standalone collections; minor layout improvements\n\n- NPE when switch back to standalone collection (table view) after alternate view (excel)\n- after switch view of one collection, the \"other\" collections were no longer showing the correct view (lost their state)\n- remove bottom border for tables\n- render bulk actions to left, not right.\n- change powered by to use TM rather than (R).\n- remove debug message left over",
        "commit": "https://github.com/apache/isis/commit/8b7267e60e4f84ce627220c4c0e88dbf25c5bcfd"
    },
    {
        "parent": "https://github.com/apache/isis/commit/9032a866c477bf38a6e19bae3939fecee6d9df68",
        "bug_id": "isis_54",
        "file": [
            {
                "additions": 19,
                "sha": "509455cef9d9da8f51341c3d0a1de1624ea11a4b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionMemento.java",
                "deletions": 6,
                "filename": "component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionMemento.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionMemento.java?ref=42bf756a07370752def1dd1121b3ed49d5945893",
                "patch": "@@ -25,6 +25,7 @@\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager.ConcurrencyChecking;\n import org.apache.isis.core.metamodel.spec.ActionType;\n import org.apache.isis.core.metamodel.spec.ObjectSpecId;\n+import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.spec.feature.ObjectAction;\n \n /**\n@@ -42,17 +43,25 @@\n     private transient ObjectAction action;\n \n     public ActionMemento(final ObjectAction action) {\n-        this(action.getOnType().getSpecId(), action.getType(), action.getIdentifier().toNameParmsIdentityString());\n-        this.action = action;\n+        this(action.getOnType().getSpecId(), action.getType(), action.getIdentifier().toNameParmsIdentityString(), action);\n     }\n \n     public ActionMemento(final ObjectSpecId owningType, final ActionType actionType, final String nameParmsId) {\n-        this.owningType = owningType;\n+        this(owningType, actionType, nameParmsId, actionFor(owningType, actionType, nameParmsId));\n+    }\n+\n+    private ActionMemento(\n+            final ObjectSpecId owningSpecId, \n+            final ActionType actionType, \n+            final String nameParmsId, \n+            final ObjectAction action) {\n+        this.owningType = owningSpecId;\n         this.actionType = actionType;\n         this.nameParmsId = nameParmsId;\n-        this.actionSemantics = getAction().getSemantics();\n+        this.action = action;\n+        this.actionSemantics = action.getSemantics();\n     }\n-\n+    \n     public ObjectSpecId getOwningType() {\n         return owningType;\n     }\n@@ -71,10 +80,14 @@ public ConcurrencyChecking getConcurrencyChecking() {\n \n     public ObjectAction getAction() {\n         if (action == null) {\n-            action = SpecUtils.getSpecificationFor(owningType).getObjectAction(this.actionType, nameParmsId);\n+            action = actionFor(owningType, actionType, nameParmsId);\n         }\n         return action;\n     }\n \n+    private static ObjectAction actionFor(ObjectSpecId owningType, ActionType actionType, String nameParmsId) {\n+        final ObjectSpecification objectSpec = SpecUtils.getSpecificationFor(owningType);\n+        return objectSpec.getObjectAction(actionType, nameParmsId);\n+    }\n \n }",
                "changes": 25,
                "blob_url": "https://github.com/apache/isis/blob/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionMemento.java"
            },
            {
                "additions": 16,
                "sha": "fd92b44c84b125b5e211d563039036555bbbb51b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionParameterMemento.java",
                "deletions": 5,
                "filename": "component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionParameterMemento.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionParameterMemento.java?ref=42bf756a07370752def1dd1121b3ed49d5945893",
                "patch": "@@ -41,12 +41,19 @@\n     private transient ObjectActionParameter actionParameter;\n \n     public ActionParameterMemento(final ActionMemento actionMemento, final int number) {\n-        this.actionMemento = actionMemento;\n-        this.number = number;\n+        this(actionMemento, number, actionParameterFor(actionMemento, number));\n     }\n \n     public ActionParameterMemento(final ObjectActionParameter actionParameter) {\n-        this(new ActionMemento(actionParameter.getAction()), actionParameter.getNumber());\n+        this(new ActionMemento(actionParameter.getAction()), actionParameter.getNumber(), actionParameter);\n+    }\n+\n+    private ActionParameterMemento(\n+            final ActionMemento actionMemento, \n+            final int number, \n+            final ObjectActionParameter actionParameter) {\n+        this.actionMemento = actionMemento;\n+        this.number = number;\n         this.actionParameter = actionParameter;\n     }\n \n@@ -60,12 +67,16 @@ public int getNumber() {\n \n     public ObjectActionParameter getActionParameter() {\n         if (actionParameter == null) {\n-            final ObjectAction action = actionMemento.getAction();\n-            this.actionParameter = action.getParameters().get(number);\n+            this.actionParameter = actionParameterFor(actionMemento, number);\n         }\n         return actionParameter;\n     }\n \n+    private static ObjectActionParameter actionParameterFor(ActionMemento actionMemento, int number) {\n+        final ObjectAction action = actionMemento.getAction();\n+        return action.getParameters().get(number);\n+    }\n+\n     /**\n      * Convenience.\n      */",
                "changes": 21,
                "blob_url": "https://github.com/apache/isis/blob/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/ActionParameterMemento.java"
            },
            {
                "additions": 12,
                "sha": "6d2a0b2d93f0160e6e047633489303e6af70463b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/CollectionMemento.java",
                "deletions": 4,
                "filename": "component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/CollectionMemento.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/CollectionMemento.java?ref=42bf756a07370752def1dd1121b3ed49d5945893",
                "patch": "@@ -44,12 +44,16 @@ private static ObjectSpecification owningSpecFor(final OneToManyAssociation asso\n     private transient OneToManyAssociation collection;\n \n     public CollectionMemento(final ObjectSpecId owningType, final String id) {\n-        this.owningType = owningType;\n-        this.id = id;\n+        this(owningType, id, collectionFor(owningType, id));\n     }\n \n     public CollectionMemento(final OneToManyAssociation collection) {\n-        this(owningSpecFor(collection).getSpecId(), collection.getIdentifier().toNameIdentityString());\n+        this(owningSpecFor(collection).getSpecId(), collection.getIdentifier().toNameIdentityString(), collection);\n+    }\n+\n+    private CollectionMemento(final ObjectSpecId owningType, final String id, final OneToManyAssociation collection) {\n+        this.owningType = owningType;\n+        this.id = id;\n         this.collection = collection;\n     }\n \n@@ -74,9 +78,13 @@ public String getName() {\n \n     public OneToManyAssociation getCollection() {\n         if (collection == null) {\n-            collection = (OneToManyAssociation) SpecUtils.getSpecificationFor(owningType).getAssociation(id);\n+            collection = collectionFor(owningType, id);\n         }\n         return collection;\n     }\n \n+    private static OneToManyAssociation collectionFor(ObjectSpecId owningType, String id) {\n+        return (OneToManyAssociation) SpecUtils.getSpecificationFor(owningType).getAssociation(id);\n+    }\n+\n }",
                "changes": 16,
                "blob_url": "https://github.com/apache/isis/blob/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/CollectionMemento.java"
            },
            {
                "additions": 26,
                "sha": "6504be6802e273ec5f42fa007027a65fcdfbde14",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/PropertyMemento.java",
                "deletions": 25,
                "filename": "component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/PropertyMemento.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/PropertyMemento.java?ref=42bf756a07370752def1dd1121b3ed49d5945893",
                "patch": "@@ -35,52 +35,53 @@ private static ObjectSpecification owningSpecFor(final OneToOneAssociation assoc\n         return IsisContext.getSpecificationLoader().loadSpecification(association.getIdentifier().toClassIdentityString());\n     }\n \n-    private final ObjectSpecId owningType;\n+    private final ObjectSpecId owningSpecId;\n     private final String identifier;\n+    private final ObjectSpecId specId;\n \n-    /**\n-     * Lazily loaded as required.\n-     */\n-    private ObjectSpecId type;\n-\n-    private transient OneToOneAssociation property;\n+//    private transient OneToOneAssociation property;\n \n-    public PropertyMemento(final ObjectSpecId owningType, final String name) {\n-        this(owningType, name, null);\n+    public PropertyMemento(final ObjectSpecId owningType, final String identifier) {\n+        this(owningType, identifier, null);\n     }\n \n-    public PropertyMemento(final ObjectSpecId owningType, final String name, final ObjectSpecId type) {\n-        this.owningType = owningType;\n-        this.identifier = name;\n-        this.type = type;\n+    public PropertyMemento(final ObjectSpecId owningType, final String identifier, final ObjectSpecId type) {\n+        this(owningType, identifier, type, propertyFor(owningType, identifier));\n     }\n \n     public PropertyMemento(final OneToOneAssociation property) {\n-        this(owningSpecFor(property).getSpecId(), property.getIdentifier().toNameIdentityString(), property.getSpecification().getSpecId());\n-        this.property = property;\n+        this(owningSpecFor(property).getSpecId(), property.getIdentifier().toNameIdentityString(), property.getSpecification().getSpecId(), property);\n+    }\n+    \n+    private PropertyMemento(final ObjectSpecId owningSpecId, final String name, final ObjectSpecId specId, final OneToOneAssociation property) {\n+        this.owningSpecId = owningSpecId;\n+        this.identifier = name;\n+        this.specId = specId;\n+//        this.property = property;\n     }\n \n     public ObjectSpecId getOwningType() {\n-        return owningType;\n+        return owningSpecId;\n     }\n \n     public ObjectSpecId getType() {\n-        if (type == null) {\n-            // lazy load if need be\n-            type = getProperty().getSpecification().getSpecId();\n-        }\n-        return type;\n+        return specId;\n     }\n \n     public String getIdentifier() {\n         return identifier;\n     }\n \n     public OneToOneAssociation getProperty() {\n-        if (property == null) {\n-            property = (OneToOneAssociation) SpecUtils.getSpecificationFor(owningType).getAssociation(identifier);\n-        }\n-        return property;\n+//        if (property == null) {\n+//            property = propertyFor(owningSpecId, identifier);\n+//        }\n+//        return property;\n+        return propertyFor(owningSpecId, identifier);\n+    }\n+\n+    private static OneToOneAssociation propertyFor(ObjectSpecId owningType, String identifier) {\n+        return (OneToOneAssociation) SpecUtils.getSpecificationFor(owningType).getAssociation(identifier);\n     }\n \n     /**",
                "changes": 51,
                "blob_url": "https://github.com/apache/isis/blob/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/mementos/PropertyMemento.java"
            },
            {
                "additions": 14,
                "sha": "fc12a21b1f6ebc44e29ac97b054ddcd95f9c4477",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java",
                "deletions": 1,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java?ref=42bf756a07370752def1dd1121b3ed49d5945893",
                "patch": "@@ -27,6 +27,8 @@\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager.ConcurrencyChecking;\n import org.apache.isis.core.metamodel.adapter.version.ConcurrencyException;\n+import org.apache.isis.core.runtime.system.DeploymentType;\n+import org.apache.isis.core.runtime.system.context.IsisContext;\n import org.apache.isis.viewer.wicket.model.hints.UiHintsBroadcastEvent;\n import org.apache.isis.viewer.wicket.model.models.EntityModel;\n import org.apache.isis.viewer.wicket.ui.ComponentType;\n@@ -44,7 +46,6 @@\n     \n     private final EntityModel model;\n \n-\n     /**\n      * Called reflectively, in support of \n      * {@link BookmarkablePageLink bookmarkable} links.\n@@ -77,6 +78,14 @@ private static EntityModel newEntityModel(ObjectAdapter adapter, ConcurrencyExce\n \n     private EntityPage(PageParameters pageParameters, EntityModel entityModel, String titleString) {\n         super(pageParameters, ApplicationActions.INCLUDE, titleString, ComponentType.ENTITY);\n+\n+        // this is a work-around for JRebel integration...\n+        // ... even though the IsisJRebelPlugin calls invalidateCache, it seems that there is \n+        // some caching elsewhere in the Wicket viewer meaning that stale metadata is referenced.\n+        // doing an additional call here seems to be sufficient, though not exactly sure why... :-(\n+        if(!getDeploymentType().isProduction()) {\n+            getSpecificationLoader().invalidateCacheFor(entityModel.getObject().getObject());\n+        }\n         \n         this.model = entityModel;\n         addChildComponents(themeDiv, model);\n@@ -107,4 +116,8 @@ protected void onBeforeRender() {\n         super.onBeforeRender();\n     }\n \n+    private DeploymentType getDeploymentType() {\n+        return IsisContext.getDeploymentType();\n+    }\n+\n }",
                "changes": 15,
                "blob_url": "https://github.com/apache/isis/blob/42bf756a07370752def1dd1121b3ed49d5945893/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/pages/entity/EntityPage.java"
            },
            {
                "additions": 1,
                "sha": "c49630373421c009b8fef1007a77a2255522efd3",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/42bf756a07370752def1dd1121b3ed49d5945893/example/application/simple_wicket_restful_jdo/webapp/ide/eclipse/launch/SimpleApp-PROTOTYPE-jrebel.launch",
                "deletions": 1,
                "filename": "example/application/simple_wicket_restful_jdo/webapp/ide/eclipse/launch/SimpleApp-PROTOTYPE-jrebel.launch",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simple_wicket_restful_jdo/webapp/ide/eclipse/launch/SimpleApp-PROTOTYPE-jrebel.launch?ref=42bf756a07370752def1dd1121b3ed49d5945893",
                "patch": "@@ -27,5 +27,5 @@\n <stringAttribute key=\"org.eclipse.jdt.launching.PROGRAM_ARGUMENTS\" value=\"--port 8080 --type PROTOTYPE\"/>\n <stringAttribute key=\"org.eclipse.jdt.launching.PROJECT_ATTR\" value=\"simple_wicket_restful_jdo-webapp\"/>\n <stringAttribute key=\"org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER\" value=\"org.eclipse.m2e.launchconfig.sourcepathProvider\"/>\n-<stringAttribute key=\"org.eclipse.jdt.launching.VM_ARGUMENTS\" value=\"${jrebel_args} -Drebel.log=false -Drebel.plugins=c:/github/danhaywood/isis-jrebel-plugin/target/danhaywood-isis-jrebel-plugin-1.0.0-SNAPSHOT.jar -Disis-jrebel-plugin.packagePrefix=dom.simple -Disis-jrebel-plugin.loggingLevel=warn\"/>\n+<stringAttribute key=\"org.eclipse.jdt.launching.VM_ARGUMENTS\" value=\"${jrebel_args} -Drebel.log=false -Drebel.plugins=c:/github/danhaywood/isis-jrebel-plugin/target/danhaywood-isis-jrebel-plugin-1.0.0-SNAPSHOT.jar -Disis-jrebel-plugin.packagePrefix=dom.simple -Disis-jrebel-plugin.loggingLevel=warn -XX:MaxPermSize=128m\"/>\n </launchConfiguration>",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/42bf756a07370752def1dd1121b3ed49d5945893/example/application/simple_wicket_restful_jdo/webapp/ide/eclipse/launch/SimpleApp-PROTOTYPE-jrebel.launch"
            }
        ],
        "repo": "isis",
        "message": "ISIS-651: fixing NPE in ActionMemento and similar\n\nAlso: forcing invalidation of Isis ObjectSpec in EntityPage (else the UI is rendered w.r.t old Isis metadata)\n\nNot exactly sure why either of these are problems.  For the latter, certainly, it seems that the IsisJRebelPlugin invalidates the\ncache correctly, but it isn't picked up.  It would seem that the Wicket viewer is holding the ActionMemento, PropertyMemento and CollecitonMemento in-memory?\n\nalso:\n- adding maxPermSize to launch config for simple app.",
        "commit": "https://github.com/apache/isis/commit/42bf756a07370752def1dd1121b3ed49d5945893"
    },
    {
        "parent": "https://github.com/apache/isis/commit/4bdc6adb4988adbb64010aa2e5c03b44134f6f9c",
        "bug_id": "isis_55",
        "file": [
            {
                "additions": 3,
                "sha": "47b44558946ea776f3f30347590dec3a5b33370e",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModelWithPending.java",
                "deletions": 7,
                "filename": "component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModelWithPending.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModelWithPending.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -61,19 +61,15 @@ public ObjectAdapterMemento getObject() {\n                     final ObjectAdapterMemento objectAdapterMemento = owner.getScalarModel().getObjectAdapterMemento();\n                     owner.setPending(objectAdapterMemento);\n \n-//                    final ObjectAdapter adapter = scalarModel.getObject(); \n-//                    return ObjectAdapterMemento.createOrNull(adapter);\n                     return objectAdapterMemento;\n                 }\n \n                 @Override\n                 public void setObject(final ObjectAdapterMemento adapterMemento) {\n-                    if (adapterMemento != null) {\n-                        if (LOG.isDebugEnabled()) {\n-                            LOG.debug(\"setting to: \" + adapterMemento.toString());\n-                        }\n-                        owner.setPending(adapterMemento);\n+                    if (LOG.isDebugEnabled()) {\n+                        LOG.debug(\"setting to: \" + adapterMemento!=null?adapterMemento.toString():null);\n                     }\n+                    owner.setPending(adapterMemento);\n                     if (owner.getScalarModel() != null && owner.getPending() != null) {\n                         if (LOG.isDebugEnabled()) {\n                             LOG.debug(\"setting to pending: \" + owner.getPending().toString());",
                "changes": 10,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/model/src/main/java/org/apache/isis/viewer/wicket/model/models/ScalarModelWithPending.java"
            },
            {
                "additions": 2,
                "sha": "c15bd1d52829f9fdbdaf3afcd4279b1b1911519b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/reference/ReferencePanel.java",
                "deletions": 1,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/reference/ReferencePanel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/reference/ReferencePanel.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -160,7 +160,8 @@ protected Component addComponentForCompact() {\n         final ScalarModel scalarModel = getModel();\n         final String name = scalarModel.getName();\n         \n-        entityLink = (EntityLinkSelect2Panel) getComponentFactoryRegistry().createComponent(ComponentType.ENTITY_LINK, getModel());\n+        final Component entityLinkComponent = getComponentFactoryRegistry().createComponent(ComponentType.ENTITY_LINK, getModel());\n+        entityLink = (EntityLinkSelect2Panel) entityLinkComponent;\n         \n         entityLink.setOutputMarkupId(true);\n         entityLink.setLabel(Model.of(name));",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/scalars/reference/ReferencePanel.java"
            },
            {
                "additions": 1,
                "sha": "a46232bfbb62ee7b3c6b7369b3c2a786733374c3",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.html",
                "deletions": 5,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.html",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.html?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -33,17 +33,13 @@\n \t\t\t\t<div>\n \t\t\t\t\t<input wicket:id=\"autoComplete\" type=\"hidden\" class=\"autoComplete\" />\n \t\t\t\t\t<span wicket:id=\"entityIconAndTitle\">[icon and title]</span>\n-\t\t\t\t\t<span wicket:id=\"entityTitleNull\">(null)</span>\n-\t\t\t\t\t<div class=\"findUsingClearDetails\">\n+\t\t\t\t\t<div>\n \t\t\t\t\t\t<a href=\"#\" wicket:id=\"entityClearLink\" class=\"entityClearLink\">\n \t\t\t\t\t\t\t<span>clear</span>\n \t\t\t\t\t\t</a>\n \t\t\t\t\t</div>\n \t\t\t\t    <div class=\"clear\"/>\n \t  \t\t\t</div>\n-\t\t\t    <div class=\"xfeedbackPanel\">\n-\t\t\t        <span xwicket:id=\"feedback\"/>\n-\t\t\t    </div>\n \t\t\t</div>\n \t\t</wicket:panel>\n \t</body>",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.html"
            },
            {
                "additions": 59,
                "sha": "0ec864a1237ee6707ded7c1d366ce2f768350a67",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java",
                "deletions": 66,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -19,7 +19,6 @@\n \n package org.apache.isis.viewer.wicket.ui.components.widgets.entitylink;\n \n-import java.util.Collections;\n import java.util.List;\n \n import com.google.common.collect.Lists;\n@@ -29,24 +28,20 @@\n \n import org.apache.wicket.Component;\n import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponentPanel;\n import org.apache.wicket.markup.html.link.Link;\n import org.apache.wicket.model.IModel;\n \n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager.ConcurrencyChecking;\n import org.apache.isis.core.metamodel.facets.object.autocomplete.AutoCompleteFacet;\n-import org.apache.isis.core.metamodel.spec.ActionType;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n-import org.apache.isis.core.metamodel.spec.feature.ObjectAction;\n-import org.apache.isis.core.runtime.system.DeploymentType;\n-import org.apache.isis.core.runtime.system.context.IsisContext;\n import org.apache.isis.viewer.wicket.model.mementos.ObjectAdapterMemento;\n import org.apache.isis.viewer.wicket.model.models.ActionModel;\n import org.apache.isis.viewer.wicket.model.models.EntityModel;\n import org.apache.isis.viewer.wicket.model.models.EntityModel.RenderingHint;\n import org.apache.isis.viewer.wicket.model.models.ScalarModel;\n+import org.apache.isis.viewer.wicket.model.models.ScalarModelWithPending;\n import org.apache.isis.viewer.wicket.model.models.ScalarModelWithPending.Util;\n import org.apache.isis.viewer.wicket.model.util.MementoFunctions;\n import org.apache.isis.viewer.wicket.ui.ComponentFactory;\n@@ -66,10 +61,13 @@\n     private static final String ID_AUTO_COMPLETE = \"autoComplete\";\n \n     private static final String ID_ENTITY_ICON_AND_TITLE = \"entityIconAndTitle\";\n-    private static final String ID_ENTITY_TITLE_NULL = \"entityTitleNull\";\n+    //private static final String ID_ENTITY_TITLE_NULL = \"entityTitleNull\";\n \n     private static final String ID_ENTITY_CLEAR_LINK = \"entityClearLink\";\n     \n+    /**\n+     * This component may be null if there are no choices or autoComplete, or if in read-only mode.\n+     */\n     private Select2Choice<ObjectAdapterMemento> select2Field;\n     private Link<String> entityDetailsLink;\n     private Link<String> entityClearLink;\n@@ -170,9 +168,6 @@ private void syncWithInput() {\n \n         syncLinkWithInput(adapter);\n \n-        // represent no object by a simple label displaying '(null)'\n-        syncEntityTitleNullWithInput(adapter);\n-\n         syncEntityClearLinksWithInput(adapter);\n \n         doSyncWithInputIfAutoCompleteOrChoices();\n@@ -187,29 +182,28 @@ private void doSyncWithInputIfAutoCompleteOrChoices() {\n             return;\n         }\n \n-        \n-        final IModel<ObjectAdapterMemento> model = Util.createModel(getScalarModel().asScalarModelWithPending());       \n+        final IModel<ObjectAdapterMemento> model = ScalarModelWithPending.Util.createModel(getScalarModel().asScalarModelWithPending());       \n \n         if(select2Field == null) {\n             select2Field = new Select2Choice<ObjectAdapterMemento>(ID_AUTO_COMPLETE, model);\n-            setChoices(getScalarModel().getActionArgsHint());\n+            setProviderAndCurrAndPending(select2Field, getScalarModel().getActionArgsHint());\n             if(!getScalarModel().hasChoices()) {\n                 final Settings settings = select2Field.getSettings();\n-                ScalarModel scalarModel = (ScalarModel) getScalarModel();\n+                ScalarModel scalarModel = getScalarModel();\n                 final int minLength = scalarModel.getAutoCompleteMinLength();\n                 settings.setMinimumInputLength(minLength);\n+                settings.setPlaceholder(scalarModel.getName());\n             }\n             addOrReplace(select2Field);\n         }\n         \n         \n-        \n         // no need for link, since can see in drop-down\n         permanentlyHide(ID_ENTITY_ICON_AND_TITLE);\n \n         // no need for the 'null' title, since if there is no object yet\n         // can represent this fact in the drop-down\n-        permanentlyHide(ID_ENTITY_TITLE_NULL);\n+        // permanentlyHide(ID_ENTITY_TITLE_NULL);\n     }\n \n \n@@ -238,14 +232,10 @@ private void doSyncWithInputIfAutoCompleteOrChoices() {\n             \n             @Override\n             protected List<ObjectAdapterMemento> obtainMementos(String term) {\n+                final List<ObjectAdapter> autoCompleteChoices = Lists.newArrayList();\n                 final ScalarModel scalarModel = (ScalarModel) entityModel;\n-                final boolean hasAutoComplete = scalarModel.hasAutoComplete();\n-                if(!hasAutoComplete) {\n-                    return Collections.emptyList();\n-                }\n-                final List<ObjectAdapter> autoCompleteChoices = scalarModel.getAutoComplete(term);\n-                if(autoCompleteChoices.isEmpty()) {\n-                    return Collections.emptyList();\n+                if(scalarModel.hasAutoComplete()) {\n+                    autoCompleteChoices.addAll(scalarModel.getAutoComplete(term));\n                 }\n                 // take a copy otherwise is only lazily evaluated\n                 return Lists.newArrayList(Lists.transform(autoCompleteChoices, MementoFunctions.fromAdapter()));\n@@ -256,14 +246,10 @@ private void doSyncWithInputIfAutoCompleteOrChoices() {\n     \n     private List<ObjectAdapterMemento> getChoiceMementos(final ObjectAdapter[] argsIfAvailable) {\n         \n+        final List<ObjectAdapter> choices = Lists.newArrayList();\n         final ScalarModel scalarModel = (ScalarModel) getScalarModel();;\n-        final boolean hasChoices = scalarModel.hasChoices();\n-        if(!hasChoices) {\n-            return Collections.emptyList();\n-        }\n-        final List<ObjectAdapter> choices = scalarModel.getChoices(argsIfAvailable);\n-        if(choices.isEmpty()) {\n-            return Collections.emptyList();\n+        if(scalarModel.hasChoices()) {\n+            choices.addAll(scalarModel.getChoices(argsIfAvailable));\n         }\n         // take a copy otherwise is only lazily evaluated\n         return Lists.newArrayList(Lists.transform(choices, MementoFunctions.fromAdapter()));\n@@ -277,14 +263,6 @@ private void syncLinkWithInput(final ObjectAdapter adapter) {\n         }\n     }\n \n-    private void syncEntityTitleNullWithInput(final ObjectAdapter adapter) {\n-        if (adapter != null) {\n-            permanentlyHide(ID_ENTITY_TITLE_NULL);\n-        } else {\n-            addOrReplace(new Label(ID_ENTITY_TITLE_NULL, \"\"));\n-        }\n-    }\n-\n \n     private void syncEntityClearLinksWithInput(final ObjectAdapter adapter) {\n         if (adapter == null) {\n@@ -325,6 +303,10 @@ public void onClick(final ActionModel actionModel) {\n \n     public void onSelected(final ObjectAdapterMemento selectedAdapterMemento) {\n         getScalarModel().setPending(selectedAdapterMemento);\n+        getScalarModel().setObject(selectedAdapterMemento!=null?selectedAdapterMemento.getObjectAdapter(ConcurrencyChecking.NO_CHECK):null);\n+        if(this.select2Field != null) {\n+            select2Field.getModel().setObject(selectedAdapterMemento);\n+        }\n         renderSamePage();\n     }\n \n@@ -379,45 +361,56 @@ private boolean hasObjectAutoComplete() {\n     // //////////////////////////////////////\n \n     public void addFormComponentBehavior(Behavior behavior) {\n-        select2Field.add(behavior);\n+        if(select2Field != null) {\n+            select2Field.add(behavior);\n+        }\n     }\n \n     public void updateChoices(ObjectAdapter[] argsIfAvailable) {\n-        setChoices(argsIfAvailable);\n+        if(select2Field != null) {\n+            setProviderAndCurrAndPending(select2Field, argsIfAvailable);\n+        }\n     }\n     \n-    private void setChoices(final ObjectAdapter[] argsIfAvailable) {\n+    private void setProviderAndCurrAndPending(\n+            final Select2Choice<ObjectAdapterMemento> select2Field, \n+            final ObjectAdapter[] argsIfAvailable) {\n         \n-        final ChoiceProvider<ObjectAdapterMemento> provider;\n         if (getScalarModel().hasChoices()) {\n             final List<ObjectAdapterMemento> choiceMementos = getChoiceMementos(argsIfAvailable);\n-            provider = new ObjectAdapterMementoProviderAbstract() {\n-                private static final long serialVersionUID = 1L;\n-                @Override\n-                protected List<ObjectAdapterMemento> obtainMementos(String unused) {\n-                    return choiceMementos;\n-                }\n-            };\n-            final ObjectAdapterMemento curr = select2Field.getModelObject();\n-            select2Field.setProvider(provider);\n+            select2Field.setProvider(providerForChoices(choiceMementos));\n             getScalarModel().clearPending();\n-            if(curr == null || !curr.containedIn(choiceMementos)) {\n-                final ObjectAdapterMemento newAdapterMemento = \n-                        !choiceMementos.isEmpty() \n-                        ? choiceMementos.get(0) \n-                                : null;\n-                        select2Field.getModel().setObject(newAdapterMemento);\n-                        getModel().setObject(\n-                                newAdapterMemento != null? newAdapterMemento.getObjectAdapter(ConcurrencyChecking.NO_CHECK): null);\n-            }\n+            resetIfCurrentNotInChoices(select2Field, choiceMementos);\n         } else if(hasParamOrPropertyAutoComplete()) {\n-            provider = providerForParamOrPropertyAutoComplete();\n-            select2Field.setProvider(provider);\n-            getScalarModel().setPending(null);\n+            select2Field.setProvider(providerForParamOrPropertyAutoComplete());\n+            getScalarModel().clearPending();\n         } else {\n-            provider = providerForObjectAutoComplete();\n-            select2Field.setProvider(provider);\n-            getScalarModel().setPending(null);\n+            select2Field.setProvider(providerForObjectAutoComplete());\n+            getScalarModel().clearPending();\n+        }\n+    }\n+\n+    private ObjectAdapterMementoProviderAbstract providerForChoices(final List<ObjectAdapterMemento> choiceMementos) {\n+        return new ObjectAdapterMementoProviderAbstract() {\n+            private static final long serialVersionUID = 1L;\n+            @Override\n+            protected List<ObjectAdapterMemento> obtainMementos(String unused) {\n+                return choiceMementos;\n+            }\n+        };\n+    }\n+\n+    private void resetIfCurrentNotInChoices(final Select2Choice<ObjectAdapterMemento> select2Field, final List<ObjectAdapterMemento> choiceMementos) {\n+        final ObjectAdapterMemento curr = select2Field.getModelObject();\n+        if(curr == null || !curr.containedIn(choiceMementos)) {\n+            if(!choiceMementos.isEmpty()) {\n+                final ObjectAdapterMemento newAdapterMemento = choiceMementos.get(0);\n+                select2Field.getModel().setObject(newAdapterMemento);\n+                getModel().setObject(newAdapterMemento.getObjectAdapter(ConcurrencyChecking.NO_CHECK));\n+            } else {\n+                select2Field.getModel().setObject(null);\n+                getModel().setObject(null);\n+            }\n         }\n     }\n ",
                "changes": 125,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2Panel.java"
            },
            {
                "additions": 2,
                "sha": "7f75eb79e334d830e858f64212f19838933bc9f8",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2PanelFactory.java",
                "deletions": 3,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2PanelFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2PanelFactory.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -24,7 +24,6 @@\n \n import org.apache.isis.core.metamodel.facets.object.value.ValueFacet;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n-import org.apache.isis.viewer.wicket.model.models.EntityModel;\n import org.apache.isis.viewer.wicket.model.models.ScalarModel;\n import org.apache.isis.viewer.wicket.ui.ComponentFactoryAbstract;\n import org.apache.isis.viewer.wicket.ui.ComponentType;\n@@ -42,8 +41,8 @@ public ApplicationAdvice appliesTo(final IModel<?> model) {\n         if (!(model instanceof ScalarModel)) {\n             return ApplicationAdvice.DOES_NOT_APPLY;\n         }\n-        final ScalarModel entityModel = (ScalarModel) model;\n-        final ObjectSpecification specification = entityModel.getTypeOfSpecification();\n+        final ScalarModel scalarModel = (ScalarModel) model;\n+        final ObjectSpecification specification = scalarModel.getTypeOfSpecification();\n         return appliesIf(specification != null && !specification.containsFacet(ValueFacet.class));\n     }\n ",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/entitylink/EntityLinkSelect2PanelFactory.java"
            },
            {
                "additions": 3,
                "sha": "f2cdf6a7ad25c79c484736dbf9df06b87d92b1d3",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "deletions": 3,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -70,10 +70,10 @@ public ValueChoicesSelect2Panel(final String id, final ScalarModel scalarModel)\n     @Override\n     protected FormComponentLabel addComponentForRegular() {\n \n-        final IModel<ObjectAdapterMemento> modelObject = Util.createModel(this);\n-        \n+        final IModel<ObjectAdapterMemento> modelObject = ScalarModelWithPending.Util.createModel(this);\n+        final ObjectAdapter[] actionArgsHint = getScalarModel().getActionArgsHint();\n         select2Field = new Select2Choice<ObjectAdapterMemento>(ID_VALUE_ID, modelObject);\n-        setChoices(null);\n+        setChoices(actionArgsHint);\n \n         addStandardSemantics();\n ",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java"
            },
            {
                "additions": 20,
                "sha": "de00892a066b2fa0b04d440c524ab61fbb67321a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java",
                "deletions": 0,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -21,6 +21,7 @@\n \n import com.google.common.collect.Lists;\n \n+import org.apache.isis.applib.Identifier;\n import org.apache.isis.applib.annotation.Where;\n import org.apache.isis.applib.filter.Filter;\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n@@ -53,6 +54,9 @@\n      * Lazily initialized by {@link #getParameters()} (so don't use directly!)\n      */\n     private List<ObjectActionParameterContributee> parameters;\n+    \n+    \n+    private final Identifier identifier;\n \n     /**\n      * @param contributeeParam - the parameter number which corresponds to the contributee, and so should be suppressed.\n@@ -72,6 +76,12 @@ public ObjectActionContributee(\n \n         // copy over facets from contributed to own.\n         FacetUtil.copyFacets(serviceAction.getFacetedMethod(), facetHolder);\n+\n+        // calculate the identifier\n+        final Identifier contributorIdentifier = serviceAction.getFacetedMethod().getIdentifier();\n+        final String memberName = contributorIdentifier.getMemberName();\n+        List<String> memberParameterNames = contributorIdentifier.getMemberParameterNames();\n+        identifier = Identifier.actionIdentifier(getOnType().getCorrespondingClass().getName(), memberName, memberParameterNames);\n     }\n \n     @Override\n@@ -211,6 +221,16 @@ public void removeFacet(Class<? extends Facet> facetType) {\n     }\n \n     \n+    // //////////////////////////////////////\n+    \n+    /* (non-Javadoc)\n+     * @see org.apache.isis.core.metamodel.specloader.specimpl.ObjectMemberAbstract#getIdentifier()\n+     */\n+    @Override\n+    public Identifier getIdentifier() {\n+        return identifier;\n+    }\n+    \n     // //////////////////////////////////////\n \n     static <T> T[] addElementToArray(T[] array, final int n, final T element, final T[] type) {",
                "changes": 20,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionContributee.java"
            },
            {
                "additions": 4,
                "sha": "e4fe46630fd4497fe1701791d2fdf7c3d0ccda97",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java",
                "deletions": 4,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -932,19 +932,19 @@ private void addContributeeAssociationsIfAny(\n             contributedActions.add((ObjectActionImpl) serviceAction);\n         }\n         \n-        return Lists.newArrayList(Iterables.transform(contributedActions, createContributeeAssociationFunctor(serviceAdapter)));\n+        return Lists.newArrayList(Iterables.transform(contributedActions, createContributeeAssociationFunctor(serviceAdapter, this)));\n     }\n \n \n     private Function<ObjectActionImpl, ObjectAssociation> createContributeeAssociationFunctor(\n-            final ObjectAdapter serviceAdapter) {\n+            final ObjectAdapter serviceAdapter, final ObjectSpecification contributeeType) {\n         return new Function<ObjectActionImpl, ObjectAssociation>(){\n             @Override\n             public ObjectAssociation apply(ObjectActionImpl input) {\n                 final ObjectSpecification returnType = input.getReturnType();\n                 final ObjectAssociationAbstract association = returnType.isNotCollection() \n-                        ? new OneToOneAssociationContributee(serviceAdapter, input, objectMemberContext) \n-                        : new OneToManyAssociationContributee(serviceAdapter, input, objectMemberContext);\n+                        ? new OneToOneAssociationContributee(serviceAdapter, input, contributeeType, objectMemberContext) \n+                        : new OneToManyAssociationContributee(serviceAdapter, input, contributeeType, objectMemberContext);\n                 facetProcessor.processMemberOrder(metadataProperties, association);\n                 return association;\n             }",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectSpecificationAbstract.java"
            },
            {
                "additions": 22,
                "sha": "4c66147603df84eeddcc14cd0732416df9d3ec50",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java",
                "deletions": 5,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -18,6 +18,7 @@\n \n import java.util.List;\n \n+import org.apache.isis.applib.Identifier;\n import org.apache.isis.applib.annotation.Render;\n import org.apache.isis.applib.filter.Filter;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n@@ -50,27 +51,40 @@\n      * use layout metadata to position the contributee in different ways)\n      */\n     private final FacetHolder facetHolder = new FacetHolderImpl();\n+    \n+    private final Identifier identifier;\n \n     private static ObjectSpecification typeOfSpec(final ObjectActionImpl objectAction, ObjectMemberContext objectMemberContext) {\n         final TypeOfFacet actionTypeOfFacet = objectAction.getFacet(TypeOfFacet.class);\n         return objectMemberContext.getSpecificationLookup().loadSpecification(actionTypeOfFacet.value());\n     }\n     \n-    public OneToManyAssociationContributee(ObjectAdapter serviceAdapter, ObjectActionImpl objectAction, ObjectMemberContext objectMemberContext) {\n-        super(objectAction.getFacetedMethod(), typeOfSpec(objectAction, objectMemberContext), objectMemberContext);\n+    public OneToManyAssociationContributee(\n+            final ObjectAdapter serviceAdapter, \n+            final ObjectActionImpl serviceAction,\n+            final ObjectSpecification contributeeType,\n+            final ObjectMemberContext objectMemberContext) {\n+        super(serviceAction.getFacetedMethod(), typeOfSpec(serviceAction, objectMemberContext), objectMemberContext);\n         this.serviceAdapter = serviceAdapter;\n-        this.objectAction = objectAction;\n+        this.objectAction = serviceAction;\n         \n         renderFacet = new RenderFacetAbstract(Render.Type.EAGERLY, this) {};\n         notPersistedFacet = new NotPersistedFacetAbstract(this) {};\n         typeOfFacet = new TypeOfFacetAbstract(getSpecification().getCorrespondingClass(), this, objectMemberContext.getSpecificationLookup()) {};\n         \n         // copy over facets from contributed to own.\n-        FacetUtil.copyFacets(objectAction.getFacetedMethod(), facetHolder);\n+        FacetUtil.copyFacets(serviceAction.getFacetedMethod(), facetHolder);\n         \n         FacetUtil.addFacet(renderFacet);\n         FacetUtil.addFacet(notPersistedFacet);\n         FacetUtil.addFacet(typeOfFacet);\n+        \n+        // calculate the identifier\n+        final Identifier contributorIdentifier = serviceAction.getFacetedMethod().getIdentifier();\n+        final String memberName = contributorIdentifier.getMemberName();\n+        List<String> memberParameterNames = contributorIdentifier.getMemberParameterNames();\n+        \n+        identifier = Identifier.actionIdentifier(contributeeType.getCorrespondingClass().getName(), memberName, memberParameterNames);\n     }\n \n     \n@@ -79,7 +93,10 @@ public ObjectAdapter get(final ObjectAdapter ownerAdapter) {\n         return objectAction.execute(serviceAdapter, new ObjectAdapter[]{ownerAdapter});\n     }\n \n-\n+    @Override\n+    public Identifier getIdentifier() {\n+        return identifier;\n+    }\n     \n     // //////////////////////////////////////\n     // FacetHolder",
                "changes": 27,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToManyAssociationContributee.java"
            },
            {
                "additions": 20,
                "sha": "5d21f60bb797146724142f70435482980dcaea22",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java",
                "deletions": 8,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -18,6 +18,7 @@\n \n import java.util.List;\n \n+import org.apache.isis.applib.Identifier;\n import org.apache.isis.applib.filter.Filter;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.facetapi.Facet;\n@@ -27,6 +28,7 @@\n import org.apache.isis.core.metamodel.facetapi.MultiTypedFacet;\n import org.apache.isis.core.metamodel.facets.notpersisted.NotPersistedFacet;\n import org.apache.isis.core.metamodel.facets.notpersisted.NotPersistedFacetAbstract;\n+import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.spec.feature.ObjectAction;\n import org.apache.isis.core.metamodel.spec.feature.ObjectMemberContext;\n \n@@ -42,31 +44,41 @@\n      * use layout metadata to position the contributee in different ways)\n      */\n     private final FacetHolder facetHolder = new FacetHolderImpl();\n+    \n+    private final Identifier identifier;\n \n     public OneToOneAssociationContributee(\n             final ObjectAdapter serviceAdapter, \n-            final ObjectActionImpl objectAction, \n+            final ObjectActionImpl servceAction, \n+            final ObjectSpecification contributeeType,\n             final ObjectMemberContext objectMemberContext) {\n-        super(objectAction.getFacetedMethod(), objectAction.getReturnType(), objectMemberContext);\n+        super(servceAction.getFacetedMethod(), servceAction.getReturnType(), objectMemberContext);\n         this.serviceAdapter = serviceAdapter;\n-        this.objectAction = objectAction;\n+        this.objectAction = servceAction;\n         \n         notPersistedFacet = new NotPersistedFacetAbstract(this) {};\n \n         // copy over facets from contributed to own.\n-        FacetUtil.copyFacets(objectAction.getFacetedMethod(), facetHolder);\n+        FacetUtil.copyFacets(servceAction.getFacetedMethod(), facetHolder);\n         FacetUtil.addFacet(notPersistedFacet);\n+        \n+        // calculate the identifier\n+        final Identifier contributorIdentifier = servceAction.getFacetedMethod().getIdentifier();\n+        final String memberName = contributorIdentifier.getMemberName();\n+        List<String> memberParameterNames = contributorIdentifier.getMemberParameterNames();\n+        \n+        identifier = Identifier.actionIdentifier(contributeeType.getCorrespondingClass().getName(), memberName, memberParameterNames);\n     }\n \n     @Override\n     public ObjectAdapter get(final ObjectAdapter ownerAdapter) {\n         return objectAction.execute(serviceAdapter, new ObjectAdapter[]{ownerAdapter});\n     }\n-    \n-\n-    \n-\n \n+    @Override\n+    public Identifier getIdentifier() {\n+        return identifier;\n+    }\n     \n     // //////////////////////////////////////\n     // FacetHolder",
                "changes": 28,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneAssociationContributee.java"
            },
            {
                "additions": 1,
                "sha": "75531c52579a6e966017815b46875349dd7b9804",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java",
                "deletions": 0,
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java?ref=d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3",
                "patch": "@@ -168,6 +168,7 @@ public boolean apply(ToDoItem input) {\n     // UpdateCategory (contributed action)\n     // //////////////////////////////////////\n \n+    @Named(\"Update\")\n     @DescribedAs(\"Update category and subcategory\")\n     @NotInServiceMenu\n     @ActionSemantics(Of.IDEMPOTENT)",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-478,ISIS-503: various fixes.\n\nISIS_478, for conditional choices, for EntitySelect:\n* clear link now should work\n* if no choices/autocomplete then doesn't NPE (BankMandates#newBankMandate)\n* removed ID_ENTITY_TITLE_NULL label, since never visible\n* sets up a placeholder text\nfor conditional choices, for ValueSelect:\n* correctly initializes second dropdown based\n\nISIS-503, for contributee actions/associations, calculate identifier\n* was causing stack trace when go back to list, caused by call to getIdentifier() incorrectly returning the wrong value for a contributed association.",
        "commit": "https://github.com/apache/isis/commit/d82f3d3c7655f9a825a070f0f9cd3aa5e189b2c3"
    },
    {
        "parent": "https://github.com/apache/isis/commit/fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6",
        "bug_id": "isis_56",
        "file": [
            {
                "additions": 26,
                "sha": "413abfbb8c733122df474ada8da0fef60163a810",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java",
                "deletions": 5,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -45,6 +45,7 @@\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager.ConcurrencyChecking;\n import org.apache.isis.core.metamodel.consent.Consent;\n+import org.apache.isis.core.metamodel.facets.describedas.DescribedAsFacet;\n import org.apache.isis.core.metamodel.facets.members.cssclass.CssClassFacet;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.spec.feature.ObjectAction;\n@@ -94,6 +95,10 @@ public Builder parent(final CssMenuItem parent) {\n             return this;\n         }\n \n+        public Builder describedAs(String descriptionIfAny) {\n+            cssMenuItem.setDescription(descriptionIfAny);\n+            return this;\n+        }\n \n         public Builder returnsBlobOrClob(boolean blobOrClob) {\n             cssMenuItem.setReturnsBlobOrClob(blobOrClob);\n@@ -133,6 +138,7 @@ public CssMenuItem build() {\n             }\n             return cssMenuItem;\n         }\n+\n     }\n \n     private final String name;\n@@ -152,6 +158,8 @@ public CssMenuItem build() {\n     private String actionIdentifier;\n     private String cssClass;\n \n+    private String description;\n+\n \n \n     /**\n@@ -161,6 +169,7 @@ public static Builder newMenuItem(final String name) {\n         return new Builder(name);\n     }\n \n+\n     public void setActionIdentifier(String actionIdentifier) {\n         this.actionIdentifier = actionIdentifier;\n     }\n@@ -218,7 +227,6 @@ public void setReturnsBlobOrClob(boolean blobOrClob) {\n         this.blobOrClob = blobOrClob;\n     }\n \n-\n     /**\n      * Only populated if not {@link #isEnabled() enabled}.\n      */\n@@ -230,6 +238,13 @@ public void setDisabledReason(final String disabledReason) {\n         this.disabledReason = disabledReason;\n     }\n \n+    public String getDescription() {\n+        return description;\n+    }\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n     // //////////////////////////////////////////////////////////////\n     // To add submenu items\n     // //////////////////////////////////////////////////////////////\n@@ -267,18 +282,21 @@ public Builder newSubMenuItem(final ObjectAdapterMemento targetAdapterMemento, f\n         final AbstractLink link = linkAndLabel.getLink();\n         final String actionLabel = linkAndLabel.getLabel();\n \n-        // check whether enabled\n         final Consent usability = objectAction.isUsable(session, adapter, where);\n         final String reasonDisabledIfAny = usability.getReason();\n-        CssClassFacet cssClassFacet = objectAction.getFacet(CssClassFacet.class);\n+        \n+        final DescribedAsFacet describedAsFacet = objectAction.getFacet(DescribedAsFacet.class);\n+        final String descriptionIfAny = describedAsFacet != null? describedAsFacet.value(): null;\n+        \n+        final CssClassFacet cssClassFacet = objectAction.getFacet(CssClassFacet.class);\n \n-        // check if returns blob or clob (if so, then add CSS to suppress veil)\n         final boolean blobOrClob = returnsBlobOrClob(objectAction);\n         final boolean prototype = isExplorationOrPrototype(objectAction);\n         final String actionIdentifier = actionIdentifierFor(objectAction);\n \n         Builder builder = newSubMenuItem(actionLabel)\n                 .link(link)\n+                .describedAs(descriptionIfAny)\n                 .enabled(reasonDisabledIfAny)\n                 .returnsBlobOrClob(blobOrClob)\n                 .prototyping(prototype)\n@@ -357,7 +375,10 @@ private Component addMenuItemComponentTo(final MarkupContainer markupContainer)\n             // show link...\n             markupContainer.add(link);\n             link.add(label);\n-            \n+\n+            if(this.description != null) {\n+                label.add(new AttributeModifier(\"title\", Model.of(description)));\n+            }\n             if(this.blobOrClob) {\n                 link.add(new CssClassAppender(\"noVeil\"));\n             }",
                "changes": 31,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/cssmenu/CssMenuItem.java"
            },
            {
                "additions": 6,
                "sha": "e7117808115b8790f102d48348019d1a97f474e7",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "deletions": 0,
                "filename": "component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -229,6 +229,12 @@ protected void onBeforeRenderWhenEnabled() { // Edit: read/write\n         // take a copy otherwise is only lazily evaluated\n         final List<ObjectAdapterMemento> choicesMementos = Lists.newArrayList(Lists.transform(choices, Mementos.fromAdapter()));\n         \n+        final ObjectAdapterMemento currentValue = getModel().getObjectAdapterMemento();\n+        if(currentValue != null && !choicesMementos.contains(currentValue)) {\n+            choicesMementos.add(currentValue);\n+        }\n+        \n+\n         return new ModelAbstract<List<ObjectAdapterMemento>>(choicesMementos){\n             private static final long serialVersionUID = 1L;\n ",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/component/viewer/wicket/ui/src/main/java/org/apache/isis/viewer/wicket/ui/components/widgets/valuechoices/ValueChoicesSelect2Panel.java"
            },
            {
                "additions": 1,
                "sha": "4e4011452758bee39cfa66efbf867cd70b451e14",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -32,5 +32,5 @@\n  */\n public interface ActionParameterChoicesFacet extends Facet {\n \n-    public Object[] getChoices(ObjectAdapter inObject);\n+    public Object[] getChoices(ObjectAdapter target, ObjectAdapter[] arguments);\n }",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/param/choices/ActionParameterChoicesFacet.java"
            },
            {
                "additions": 1,
                "sha": "deeaa23a37c8ca803b601a377a74e6b1837578df",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -443,7 +443,7 @@ private ObjectAdapter adapterFor(final Object pojo) {\n             for (int i = 0; i < parameterCount; i++) {\n                 final ActionParameterChoicesFacet paramFacet = parameters.get(i).getFacet(ActionParameterChoicesFacet.class);\n                 if (paramFacet != null && !paramFacet.isNoop()) {\n-                    parameterChoicesPojos[i] = paramFacet.getChoices(target);\n+                    parameterChoicesPojos[i] = paramFacet.getChoices(target, null);\n                 } else {\n                     parameterChoicesPojos[i] = new Object[0];\n                 }",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionImpl.java"
            },
            {
                "additions": 97,
                "sha": "1da4772fbbe3b874084cbcba8dd5c0c825b3e659",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java",
                "deletions": 62,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -244,40 +244,10 @@ public void removeFacet(final Class<? extends Facet> facetType) {\n         }\n     }\n \n-    // //////////////////////////////////////////////////////////\n-    // Interaction\n-    // //////////////////////////////////////////////////////////\n-\n-    @Override\n-    public ActionArgumentContext createProposedArgumentInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObject, final ObjectAdapter[] proposedArguments, final int position) {\n-        return new ActionArgumentContext(getDeploymentCategory(), getAuthenticationSession(), invocationMethod, targetObject, getIdentifier(), proposedArguments, position);\n-    }\n \n-\n-    @Override\n-    public boolean hasChoices() {\n-        final ActionParameterChoicesFacet choicesFacet = getFacet(ActionParameterChoicesFacet.class);\n-\n-        return choicesFacet != null || BoundedFacetUtils.isBoundedSet(getSpecification());\n-    }\n-\n-    @Override\n-    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n-        final List<ObjectAdapter> parameterChoices = Lists.newArrayList();\n-        final ActionParameterChoicesFacet choicesFacet = getFacet(ActionParameterChoicesFacet.class);\n-\n-        if (choicesFacet != null) {\n-            final Object[] choices = choicesFacet.getChoices(adapter);\n-            checkChoicesOrAutoCompleteType(getSpecificationLookup(), choices, getSpecification());\n-            for (final Object choice : choices) {\n-                parameterChoices.add(getAdapterMap().adapterFor(choice));\n-            }\n-        }\n-        if (parameterChoices.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n-            addParameterChoicesForBounded(parameterChoices);\n-        }\n-        return parameterChoices.toArray(new ObjectAdapter[0]);\n-    }\n+    // /////////////////////////////////////////////////////////////\n+    // AutoComplete\n+    // /////////////////////////////////////////////////////////////\n \n     @Override\n     public boolean hasAutoComplete() {\n@@ -287,20 +257,20 @@ public boolean hasAutoComplete() {\n \n     @Override\n     public ObjectAdapter[] getAutoComplete(ObjectAdapter adapter, String searchArg) {\n-        final List<ObjectAdapter> autoCompleteChoiceAdapters = Lists.newArrayList();\n+        final List<ObjectAdapter> adapters = Lists.newArrayList();\n         final ActionParameterAutoCompleteFacet facet = getFacet(ActionParameterAutoCompleteFacet.class);\n \n         if (facet != null) {\n-            final Object[] autoCompleteChoices = facet.autoComplete(adapter, searchArg);\n-            checkChoicesOrAutoCompleteType(getSpecificationLookup(), autoCompleteChoices, getSpecification());\n-            for (final Object autoCompleteChoice : autoCompleteChoices) {\n-                autoCompleteChoiceAdapters.add(getAdapterMap().adapterFor(autoCompleteChoice));\n+            final Object[] choices = facet.autoComplete(adapter, searchArg);\n+            checkChoicesOrAutoCompleteType(getSpecificationLookup(), choices, getSpecification());\n+            for (final Object choice : choices) {\n+                adapters.add(getAdapterMap().adapterFor(choice));\n             }\n         }\n-        if (autoCompleteChoiceAdapters.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n-            addParameterChoicesForBounded(autoCompleteChoiceAdapters);\n+        if (adapters.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n+            addAllInstancesForType(adapters);\n         }\n-        return autoCompleteChoiceAdapters.toArray(new ObjectAdapter[0]);\n+        return adapters.toArray(new ObjectAdapter[0]);\n     }\n \n     @Override\n@@ -309,54 +279,115 @@ public int getAutoCompleteMinLength() {\n         return facet != null? facet.getMinLength(): MinLengthUtil.MIN_LENGTH_DEFAULT;\n     }\n \n-    private <T> void addParameterChoicesForBounded(final List<ObjectAdapter> parameterChoices) {\n-        final Query<T> query = new QueryFindAllInstances<T>(getSpecification().getFullIdentifier());\n-        final List<ObjectAdapter> allInstancesAdapter = getQuerySubmitter().allMatchingQuery(query);\n-        for (final ObjectAdapter choiceAdapter : allInstancesAdapter) {\n-            parameterChoices.add(choiceAdapter);\n-        }\n+\n+    // /////////////////////////////////////////////////////////////\n+    // Choices\n+    // /////////////////////////////////////////////////////////////\n+\n+    @Override\n+    public boolean hasChoices() {\n+        final ActionParameterChoicesFacet choicesFacet = getFacet(ActionParameterChoicesFacet.class);\n+        return choicesFacet != null || BoundedFacetUtils.isBoundedSet(getSpecification());\n     }\n \n-    protected static void checkChoicesOrAutoCompleteType(final SpecificationLoader specificationLookup, final Object[] objects, final ObjectSpecification paramSpec) {\n-        for (final Object object : objects) {\n-            final ObjectSpecification componentSpec = specificationLookup.loadSpecification(object.getClass());\n-            if (!componentSpec.isOfType(paramSpec)) {\n-                throw new DomainModelException(\"Type incompatible with parameter type; expected \" + paramSpec.getFullIdentifier() + \", but was \" + componentSpec.getFullIdentifier());\n+    @Override\n+    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n+        final ObjectAdapter target = targetForDefaultOrChoices(adapter);\n+        final ObjectAdapter[] args = argsForDefaultOrChoices(adapter);\n+        \n+        return getChoices(target, args);\n+    }\n+\n+    private ObjectAdapter[] getChoices(final ObjectAdapter target, final ObjectAdapter[] args) {\n+        final List<ObjectAdapter> adapters = Lists.newArrayList();\n+        final ActionParameterChoicesFacet facet = getFacet(ActionParameterChoicesFacet.class);\n+\n+        if (facet != null) {\n+            final Object[] choices = facet.getChoices(target, args);\n+            checkChoicesOrAutoCompleteType(getSpecificationLookup(), choices, getSpecification());\n+            for (final Object choice : choices) {\n+                adapters.add(getAdapterMap().adapterFor(choice));\n             }\n         }\n+        if (adapters.size() == 0 && BoundedFacetUtils.isBoundedSet(getSpecification())) {\n+            addAllInstancesForType(adapters);\n+        }\n+        return adapters.toArray(new ObjectAdapter[0]);\n     }\n+    \n+    // /////////////////////////////////////////////////////////////\n+    // Defaults\n+    // /////////////////////////////////////////////////////////////\n \n     @Override\n     public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n-        if (false /*parentAction.isContributed()*/ && adapter != null) {\n-            if (adapter.getSpecification().isOfType(getSpecification())) {\n-                return adapter;\n-            }\n-        }\n+        \n+        final ObjectAdapter target = targetForDefaultOrChoices(adapter);;\n+        final ObjectAdapter[] args = argsForDefaultOrChoices(adapter);\n+        \n+        return getDefault(target, args);\n+    }\n+\n+    private ObjectAdapter getDefault(\n+            final ObjectAdapter target, \n+            final ObjectAdapter[] args) {\n         final ActionParameterDefaultsFacet defaultsFacet = getFacet(ActionParameterDefaultsFacet.class);\n         if (defaultsFacet != null) {\n-            final Object dflt = defaultsFacet.getDefault(adapter, null);\n+            final Object dflt = defaultsFacet.getDefault(target, args);\n             if (dflt == null) {\n                 // it's possible that even though there is a default facet, when\n-                // invoked it\n-                // is unable to return a default.\n+                // invoked it is unable to return a default.\n                 return null;\n             }\n             return getAdapterMap().adapterFor(dflt);\n         }\n         return null;\n     }\n \n-    protected AuthenticationSession getAuthenticationSession() {\n-        return getAuthenticationSessionProvider().getAuthenticationSession();\n+    /**\n+     * Hook method; {@link ObjectActionParameterContributee contributed action parameter}s override.\n+     */\n+    protected ObjectAdapter targetForDefaultOrChoices(ObjectAdapter adapter) {\n+        return adapter;\n+    }\n+\n+    /**\n+     * Hook method; {@link ObjectActionParameterContributee contributed action parameter}s override.\n+     */\n+    protected ObjectAdapter[] argsForDefaultOrChoices(final ObjectAdapter adapter) {\n+        return null;\n     }\n \n     \n+    // helpers\n+\n+    static void checkChoicesOrAutoCompleteType(final SpecificationLoader specificationLookup, final Object[] objects, final ObjectSpecification paramSpec) {\n+        for (final Object object : objects) {\n+            final ObjectSpecification componentSpec = specificationLookup.loadSpecification(object.getClass());\n+            if (!componentSpec.isOfType(paramSpec)) {\n+                throw new DomainModelException(\"Type incompatible with parameter type; expected \" + paramSpec.getFullIdentifier() + \", but was \" + componentSpec.getFullIdentifier());\n+            }\n+        }\n+    }\n+\n+    private <T> void addAllInstancesForType(final List<ObjectAdapter> adapters) {\n+        final Query<T> query = new QueryFindAllInstances<T>(getSpecification().getFullIdentifier());\n+        final List<ObjectAdapter> allInstancesAdapter = getQuerySubmitter().allMatchingQuery(query);\n+        for (final ObjectAdapter choiceAdapter : allInstancesAdapter) {\n+            adapters.add(choiceAdapter);\n+        }\n+    }\n+\n     \n     // /////////////////////////////////////////////////////////////\n     // Validation\n     // /////////////////////////////////////////////////////////////\n \n+    @Override\n+    public ActionArgumentContext createProposedArgumentInteractionContext(final AuthenticationSession session, final InteractionInvocationMethod invocationMethod, final ObjectAdapter targetObject, final ObjectAdapter[] proposedArguments, final int position) {\n+        return new ActionArgumentContext(getDeploymentCategory(), getAuthenticationSession(), invocationMethod, targetObject, getIdentifier(), proposedArguments, position);\n+    }\n+\n     @Override\n     public String isValid(final ObjectAdapter adapter, final Object proposedValue, final Localization localization) {\n         \n@@ -435,4 +466,8 @@ protected QuerySubmitter getQuerySubmitter() {\n         return parentAction.getQuerySubmitter();\n     }\n \n+    protected AuthenticationSession getAuthenticationSession() {\n+        return getAuthenticationSessionProvider().getAuthenticationSession();\n+    }\n+\n }",
                "changes": 159,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterAbstract.java"
            },
            {
                "additions": 19,
                "sha": "cad997b34b6d6cb03bfaa0e55ac4ecb902fdff89",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java",
                "deletions": 24,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -16,7 +16,13 @@\n  */\n package org.apache.isis.core.metamodel.specloader.specimpl;\n \n+import java.util.List;\n+\n+import com.google.common.collect.Lists;\n+\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n+import org.apache.isis.core.metamodel.facets.object.bounded.BoundedFacetUtils;\n+import org.apache.isis.core.metamodel.facets.param.choices.ActionParameterChoicesFacet;\n import org.apache.isis.core.metamodel.facets.param.defaults.ActionParameterDefaultsFacet;\n import org.apache.isis.core.metamodel.spec.feature.ObjectActionParameter;\n \n@@ -33,50 +39,39 @@\n     private final ObjectActionParameter serviceActionParameter;\n     @SuppressWarnings(\"unused\")\n     private final int serviceParamNumber;\n-    private final ObjectActionContributee objectAction;\n+    @SuppressWarnings(\"unused\")\n+    private final int contributeeParamNumber;\n+    private final ObjectActionContributee contributeeAction;\n \n     public ObjectActionParameterParseableContributee(\n             final ObjectAdapter serviceAdapter,\n             final ObjectActionImpl serviceAction,\n             final ObjectActionParameterAbstract serviceActionParameter,\n             final int serviceParamNumber,\n-            final int number,\n-            final ObjectActionContributee objectAction) {\n-        super(number, objectAction, serviceActionParameter.getPeer());\n+            final int contributeeParamNumber,\n+            final ObjectActionContributee contributeeAction) {\n+        super(contributeeParamNumber, contributeeAction, serviceActionParameter.getPeer());\n         this.serviceAdapter = serviceAdapter;\n         this.serviceAction = serviceAction;\n         this.serviceActionParameter = serviceActionParameter;\n         this.serviceParamNumber = serviceParamNumber;\n-        this.objectAction = objectAction;\n+        this.contributeeParamNumber = contributeeParamNumber;\n+        this.contributeeAction = contributeeAction;\n     }\n \n     @Override\n     public ObjectAdapter[] getAutoComplete(ObjectAdapter adapter, String searchArg) {\n         return serviceActionParameter.getAutoComplete(serviceAdapter, searchArg);\n     }\n \n-    @Override\n-    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n-        return serviceActionParameter.getChoices(serviceAdapter);\n+    protected ObjectAdapter targetForDefaultOrChoices(ObjectAdapter adapter) {\n+        return serviceAdapter;\n     }\n \n-    @Override\n-    public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n-        \n+    protected ObjectAdapter[] argsForDefaultOrChoices(final ObjectAdapter adapter) {\n         ObjectAdapter[] args = new ObjectAdapter[serviceAction.getParameterCount()];\n-        args[objectAction.getContributeeParam()] = adapter;\n-        \n-        final ActionParameterDefaultsFacet defaultsFacet = serviceActionParameter.getFacet(ActionParameterDefaultsFacet.class);\n-        if (defaultsFacet != null) {\n-            final Object dflt = defaultsFacet.getDefault(serviceAdapter, args);\n-            if (dflt == null) {\n-                return null;\n-            }\n-            return getAdapterMap().adapterFor(dflt);\n-        }\n-        return null;\n+        args[contributeeAction.getContributeeParam()] = adapter;\n+        return args;\n     }\n-\n-    \n     \n }",
                "changes": 43,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/ObjectActionParameterParseableContributee.java"
            },
            {
                "additions": 13,
                "sha": "b706a1c842dfdaa26727ed9ab35cad99f9d8da70",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java",
                "deletions": 22,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -27,48 +27,39 @@\n     private final ObjectActionParameter serviceActionParameter;\n     @SuppressWarnings(\"unused\")\n     private final int serviceParamNumber;\n-    private final ObjectActionContributee objectAction;\n+    @SuppressWarnings(\"unused\")\n+    private final int contributeeParamNumber;\n+    private final ObjectActionContributee contributeeAction;\n \n     public OneToOneActionParameterContributee(\n             final ObjectAdapter serviceAdapter,\n             final ObjectActionImpl serviceAction,\n             final ObjectActionParameterAbstract serviceActionParameter,\n             final int serviceParamNumber,\n-            final int number,\n-            final ObjectActionContributee objectAction) {\n-        super(number, objectAction, serviceActionParameter.getPeer());\n+            final int contributeeParamNumber,\n+            final ObjectActionContributee contributeeAction) {\n+        super(contributeeParamNumber, contributeeAction, serviceActionParameter.getPeer());\n         this.serviceAdapter = serviceAdapter;\n         this.serviceAction = serviceAction;\n         this.serviceActionParameter = serviceActionParameter;\n         this.serviceParamNumber = serviceParamNumber;\n-        this.objectAction = objectAction;\n+        this.contributeeParamNumber = contributeeParamNumber;\n+        this.contributeeAction = contributeeAction;\n     }\n \n     @Override\n     public ObjectAdapter[] getAutoComplete(ObjectAdapter adapter, String searchArg) {\n         return serviceActionParameter.getAutoComplete(serviceAdapter, searchArg);\n     }\n \n-    @Override\n-    public ObjectAdapter[] getChoices(final ObjectAdapter adapter) {\n-        return serviceActionParameter.getChoices(serviceAdapter);\n+    protected ObjectAdapter targetForDefaultOrChoices(ObjectAdapter adapter) {\n+        return serviceAdapter;\n     }\n \n-    @Override\n-    public ObjectAdapter getDefault(final ObjectAdapter adapter) {\n-        \n+    protected ObjectAdapter[] argsForDefaultOrChoices(final ObjectAdapter adapter) {\n         ObjectAdapter[] args = new ObjectAdapter[serviceAction.getParameterCount()];\n-        args[objectAction.getContributeeParam()] = serviceAdapter;\n-        \n-        final ActionParameterDefaultsFacet defaultsFacet = serviceActionParameter.getFacet(ActionParameterDefaultsFacet.class);\n-        if (defaultsFacet != null) {\n-            final Object dflt = defaultsFacet.getDefault(serviceAdapter, args);\n-            if (dflt == null) {\n-                return null;\n-            }\n-            return getAdapterMap().adapterFor(dflt);\n-        }\n-        return null;\n+        args[contributeeAction.getContributeeParam()] = adapter;\n+        return args;\n     }\n \n }",
                "changes": 35,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/specimpl/OneToOneActionParameterContributee.java"
            },
            {
                "additions": 1,
                "sha": "ae1112ea25f472ee06b5addef38307bb198a05fe",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -31,7 +31,7 @@ public ActionParameterChoicesFacetNone(final FacetHolder holder, final Specifica\n     }\n \n     @Override\n-    public Object[] getChoices(final ObjectAdapter inObject) {\n+    public Object[] getChoices(final ObjectAdapter adapter, final ObjectAdapter[] arguments) {\n         return new ObjectAdapter[0];\n     }\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/ActionParameterChoicesFacetNone.java"
            },
            {
                "additions": 1,
                "sha": "872d2748863a0a4beecef9065e974f3c7474fa8b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -35,7 +35,7 @@ public ActionParameterChoicesFacetDerivedFromChoicesFacet(final FacetHolder hold\n     }\n \n     @Override\n-    public Object[] getChoices(final ObjectAdapter adapter) {\n+    public Object[] getChoices(final ObjectAdapter adapter, final ObjectAdapter[] arguments) {\n         final FacetHolder facetHolder = getFacetHolder();\n         final TypedHolder paramPeer = (TypedHolder) facetHolder;\n         final ObjectSpecification noSpec = getSpecification(paramPeer.getType());",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/enums/ActionParameterChoicesFacetDerivedFromChoicesFacet.java"
            },
            {
                "additions": 2,
                "sha": "12a9279df0c3346a1f9250f78f874f81dd1e9153",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -65,8 +65,8 @@ public boolean impliesObjectChanged() {\n     }\n \n     @Override\n-    public Object[] getChoices(final ObjectAdapter owningAdapter) {\n-        final Object options = AdapterInvokeUtils.invoke(method, owningAdapter);\n+    public Object[] getChoices(final ObjectAdapter adapter, final ObjectAdapter[] arguments) {\n+        final Object options = AdapterInvokeUtils.invoke(method, adapter, arguments);\n         if (options == null) {\n             return new Object[0];\n         }",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/core/metamodel/src/main/java/org/apache/isis/core/progmodel/facets/param/choices/methodnum/ActionParameterChoicesFacetViaMethod.java"
            },
            {
                "additions": 1,
                "sha": "7ff951b695f5a312de739c876bf52b339be25e0b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/pom.xml",
                "deletions": 1,
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/pom.xml?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -111,7 +111,7 @@\n \t\t<dependency>\n             <groupId>org.apache.isis.core</groupId>\n \t\t\t<artifactId>isis-core-unittestsupport</artifactId>\n-            <scope>true</scope>\n+            <scope>test</scope>\n \t\t</dependency>\n \n         <!--",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/pom.xml"
            },
            {
                "additions": 4,
                "sha": "fb4b89b378bb007c39548fd2f1e4fb4409fca61d",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java",
                "deletions": 0,
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -31,6 +31,10 @@ public ToDoItemPayload(ToDoItem changed) {\n             super(changed);\n         }\n         \n+        /**\n+         * Expose the item's {@link ToDoItem#getDescription() description} more explicitly\n+         * in the payload.\n+         */\n         public String getDescription() {\n             return getChanged().getDescription();\n         }",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemChangedPayloadFactory.java"
            },
            {
                "additions": 181,
                "sha": "4d91bd17a42b2b392a85dc303c5517e761872672",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java",
                "deletions": 0,
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -0,0 +1,181 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package dom.todo;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.google.common.base.Function;\n+import com.google.common.base.Objects;\n+import com.google.common.base.Predicate;\n+import com.google.common.collect.Iterables;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Ordering;\n+\n+import dom.todo.ToDoItem.Category;\n+\n+import org.joda.time.LocalDate;\n+\n+import org.apache.isis.applib.AbstractFactoryAndRepository;\n+import org.apache.isis.applib.annotation.ActionSemantics;\n+import org.apache.isis.applib.annotation.ActionSemantics.Of;\n+import org.apache.isis.applib.annotation.DescribedAs;\n+import org.apache.isis.applib.annotation.Hidden;\n+import org.apache.isis.applib.annotation.MemberOrder;\n+import org.apache.isis.applib.annotation.Named;\n+import org.apache.isis.applib.annotation.NotContributed;\n+import org.apache.isis.applib.annotation.NotContributed.As;\n+import org.apache.isis.applib.annotation.NotInServiceMenu;\n+import org.apache.isis.applib.annotation.Where;\n+import org.apache.isis.applib.filter.Filter;\n+import org.apache.isis.applib.query.QueryDefault;\n+\n+public class ToDoItemContributions extends AbstractFactoryAndRepository {\n+\n+    \n+    // //////////////////////////////////////\n+    // priority (contributed property)\n+    // //////////////////////////////////////\n+    \n+    @DescribedAs(\"The relative priority of this item compared to others (using 'due by' date)\")\n+    @NotInServiceMenu\n+    @MemberOrder(sequence=\"1\")\n+    @ActionSemantics(Of.SAFE)\n+    @NotContributed(As.ACTION)\n+    @Hidden(where=Where.ALL_TABLES)\n+    public Integer priority(final ToDoItem toDoItem) {\n+        if(toDoItem.isComplete()) {\n+            return null;\n+        }\n+\n+        // sort items ...\n+        final List<ToDoItem> sortedNotYetComplete = \n+                ORDERING_DUE_BY\n+                .compound(ORDERING_DESCRIPTION)\n+                .sortedCopy(toDoItems.notYetComplete());\n+        \n+        // ... then locate this one\n+        int i=1;\n+        for (ToDoItem each : sortedNotYetComplete) {\n+            if(each == toDoItem) {\n+                return i;\n+            }\n+            i++;\n+        }\n+        return null;\n+    }\n+\n+    private static Ordering<ToDoItem> ORDERING_DUE_BY = \n+        Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, LocalDate>(){\n+            @Override\n+            public LocalDate apply(ToDoItem input) {\n+                return input.getDueBy();\n+            }\n+        });\n+    \n+    private static Ordering<ToDoItem> ORDERING_DESCRIPTION = \n+        Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, String>(){\n+            @Override\n+            public String apply(ToDoItem input) {\n+                return input.getDescription();\n+            }\n+        });\n+    \n+    \n+    // //////////////////////////////////////\n+    // SimilarTo (contributed collection)\n+    // //////////////////////////////////////\n+    \n+    @NotInServiceMenu\n+    @ActionSemantics(Of.SAFE)\n+    @MemberOrder(sequence=\"1\")\n+    @NotContributed(As.ACTION)\n+    public List<ToDoItem> similarTo(final ToDoItem toDoItem) {\n+        if(false) {\n+            // the naive implementation ...\n+            return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(ToDoItem t) {\n+                    return t != toDoItem && Objects.equal(toDoItem.getCategory(), t.getCategory()) && Objects.equal(toDoItem.getOwnedBy(), t.getOwnedBy());\n+                }\n+            });\n+        } else {\n+            // the JDO implementation ...\n+            final List<ToDoItem> similarToDoItems = allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_similarTo\", \n+                            \"ownedBy\", currentUserName(), \n+                            \"category\", toDoItem.getCategory()));\n+            return Lists.newArrayList(Iterables.filter(similarToDoItems, excluding(toDoItem)));\n+        }\n+    }\n+\n+    private static Predicate<ToDoItem> excluding(final ToDoItem toDoItem) {\n+        return new Predicate<ToDoItem>() {\n+            @Override\n+            public boolean apply(ToDoItem input) {\n+                return input != toDoItem;\n+            }\n+        };\n+    }\n+\n+    \n+    // //////////////////////////////////////\n+    // UpdateCategory (contributed action)\n+    // //////////////////////////////////////\n+\n+    @DescribedAs(\"Demonstrates contributed actions; could also be implemented as a simple editable property\")\n+    @NotInServiceMenu\n+    @ActionSemantics(Of.IDEMPOTENT)\n+    @MemberOrder(sequence=\"1\")\n+    public ToDoItem updateCategory(ToDoItem item, @Named(\"Category\") Category category) {\n+        item.setCategory(category);\n+        return item;\n+    }\n+\n+    public List<Category> choices1UpdateCategory(ToDoItem item, Category category) {\n+        // in principle we could fine-tune the choices.\n+        // here, though, we just return all categories\n+        return Arrays.asList(Category.values());\n+    }\n+    \n+    public Category default1UpdateCategory(ToDoItem item, Category category) {\n+        return item.getCategory();\n+    }\n+    \n+    public String validateUpdateCategory(final ToDoItem item, Category category) {\n+        return category == item.getCategory() ? \"Already set to that value!\" : null;\n+    }\n+\n+    \n+    // //////////////////////////////////////\n+    // helpers\n+    // //////////////////////////////////////\n+    \n+    protected String currentUserName() {\n+        return getContainer().getUser().getName();\n+    }\n+\n+    // //////////////////////////////////////\n+\n+    private ToDoItems toDoItems;\n+    public void injectToDoItems(ToDoItems toDoItems) {\n+        this.toDoItems = toDoItems;\n+    }\n+}",
                "changes": 181,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemContributions.java"
            },
            {
                "additions": 57,
                "sha": "47df583a675080161612600073b936344f02bd02",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java",
                "deletions": 92,
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -20,6 +20,8 @@\n \n import java.math.BigDecimal;\n import java.math.RoundingMode;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n@@ -28,6 +30,7 @@\n import com.google.common.base.Objects;\n import com.google.common.collect.Collections2;\n import com.google.common.collect.Iterables;\n+import com.google.common.collect.Lists;\n import com.google.common.collect.Ordering;\n \n import dom.todo.ToDoItem.Category;\n@@ -50,6 +53,7 @@\n import org.apache.isis.applib.annotation.Where;\n import org.apache.isis.applib.clock.Clock;\n import org.apache.isis.applib.filter.Filter;\n+import org.apache.isis.applib.query.QueryDefault;\n \n @Named(\"ToDos\")\n public class ToDoItems extends AbstractFactoryAndRepository {\n@@ -68,53 +72,66 @@ public String iconName() {\n     }\n \n     // //////////////////////////////////////\n-    // NotYetComplete(action)\n+    // NotYetComplete (action)\n     // //////////////////////////////////////\n     \n     @ActionSemantics(Of.SAFE)\n     @MemberOrder(sequence = \"1\")\n     public List<ToDoItem> notYetComplete() {\n-        List<ToDoItem> items = doNotYetComplete();\n+        final List<ToDoItem> items;\n+        if(false) {\n+            // the naive implementation ...\n+            items = allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(final ToDoItem t) {\n+                    return ownedByCurrentUser(t) && !t.isComplete();\n+                }\n+            });\n+        } else {\n+            // the JDO implementation ...\n+            items = allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_notYetComplete\", \n+                            \"ownedBy\", currentUserName()));\n+        }\n         if(items.isEmpty()) {\n             getContainer().informUser(\"All to-do items have been completed :-)\");\n         }\n         return items;\n     }\n-\n-    protected List<ToDoItem> doNotYetComplete() {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(final ToDoItem t) {\n-                return ownedByCurrentUser(t) && !t.isComplete();\n-            }\n-        });\n-    }\n     \n     // //////////////////////////////////////\n-    // Complete(action)\n+    // Complete (action)\n     // //////////////////////////////////////\n     \n     @ActionSemantics(Of.SAFE)\n     @MemberOrder(sequence = \"2\")\n     public List<ToDoItem> complete() {\n-        List<ToDoItem> items = doComplete();\n+        final List<ToDoItem> items;\n+        if(false) {\n+            // the naive implementation ...\n+            items = allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(final ToDoItem t) {\n+                    return ownedByCurrentUser(t) && t.isComplete();\n+                }\n+            });\n+        } else {\n+            // the JDO implementation ...\n+            items = allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_complete\", \n+                            \"ownedBy\", currentUserName()));\n+        }\n         if(items.isEmpty()) {\n             getContainer().informUser(\"No to-do items have yet been completed :-(\");\n         }\n         return items;\n     }\n \n-    protected List<ToDoItem> doComplete() {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(final ToDoItem t) {\n-                return ownedByCurrentUser(t) && t.isComplete();\n-            }\n-        });\n-    }\n \n     // //////////////////////////////////////\n-    // NewToDo(action)\n+    // NewToDo (action)\n     // //////////////////////////////////////\n \n     @MemberOrder(sequence = \"3\")\n@@ -134,7 +151,7 @@ public LocalDate default2NewToDo() {\n     }\n \n     // //////////////////////////////////////\n-    // AllToDos(action)\n+    // AllToDos (action)\n     // //////////////////////////////////////\n \n     @ActionSemantics(Of.SAFE)\n@@ -156,81 +173,30 @@ public LocalDate default2NewToDo() {\n         return items;\n     }\n \n-    // //////////////////////////////////////\n-    // priority (contributed property)\n-    // //////////////////////////////////////\n-    \n-    @DescribedAs(\"The relative priority of this item compared to others (using 'due by' date)\")\n-    @NotInServiceMenu\n-    @MemberOrder(sequence=\"1\")\n-    @ActionSemantics(Of.SAFE)\n-    @NotContributed(As.ACTION)\n-    @Hidden(where=Where.ALL_TABLES)\n-    public Integer priority(final ToDoItem toDoItem) {\n-        if(toDoItem.isComplete()) {\n-            return null;\n-        }\n-\n-        final List<ToDoItem> sortedNotYetComplete = \n-                ORDERING_DUE_BY\n-                .compound(ORDERING_DESCRIPTION)\n-                .sortedCopy(notYetComplete());\n-        int i=1;\n-        for (ToDoItem each : sortedNotYetComplete) {\n-            if(each == toDoItem) {\n-                return i;\n-            }\n-            i++;\n-        }\n-        return null;\n-    }\n \n-    private static Ordering<ToDoItem> ORDERING_DUE_BY = \n-        Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, LocalDate>(){\n-            @Override\n-            public LocalDate apply(ToDoItem input) {\n-                return input.getDueBy();\n-            }\n-        });\n-    \n-    private static Ordering<ToDoItem> ORDERING_DESCRIPTION = \n-            Ordering.natural().nullsLast().onResultOf(new Function<ToDoItem, String>(){\n-                @Override\n-                public String apply(ToDoItem input) {\n-                    return input.getDescription();\n-                }\n-            });\n-    \n-    // //////////////////////////////////////\n-    // SimilarTo (contributed collection)\n-    // //////////////////////////////////////\n-    \n-    @NotInServiceMenu\n-    @ActionSemantics(Of.SAFE)\n-    @MemberOrder(sequence=\"1\")\n-    @NotContributed(As.ACTION)\n-    public List<ToDoItem> similarTo(final ToDoItem toDoItem) {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(ToDoItem t) {\n-                return t != toDoItem && Objects.equal(toDoItem.getCategory(), t.getCategory()) && Objects.equal(toDoItem.getOwnedBy(), t.getOwnedBy());\n-            }\n-        });\n-    }\n-    \n     // //////////////////////////////////////\n     // AutoComplete\n     // //////////////////////////////////////\n \n     @Programmatic // not part of metamodel\n     public List<ToDoItem> autoComplete(final String description) {\n-        return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n-            @Override\n-            public boolean accept(final ToDoItem t) {\n-                return ownedByCurrentUser(t) && t.getDescription().contains(description);\n-            }\n-\n-        });\n+        if(false) {\n+            // the naive implementation ...\n+            return allMatches(ToDoItem.class, new Filter<ToDoItem>() {\n+                @Override\n+                public boolean accept(final ToDoItem t) {\n+                    return ownedByCurrentUser(t) && t.getDescription().contains(description);\n+                }\n+                \n+            });\n+        } else {\n+            // the JDO implementation ...\n+            return allMatches(\n+                    new QueryDefault<ToDoItem>(ToDoItem.class, \n+                            \"todo_autoComplete\", \n+                            \"ownedBy\", currentUserName(), \n+                            \"description\", description));\n+        }\n     }\n \n     // //////////////////////////////////////\n@@ -273,5 +239,4 @@ protected String currentUserName() {\n         return getContainer().getUser().getName();\n     }\n \n-\n }",
                "changes": 149,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItems.java"
            },
            {
                "additions": 0,
                "sha": "1927ec05d6f5a05d5ed7b482024341a297599c47",
                "status": "removed",
                "raw_url": "https://github.com/apache/isis/raw/fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java",
                "deletions": 87,
                "filename": "example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java?ref=fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6",
                "patch": "@@ -1,87 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- *\n- *        http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-package dom.todo;\n-\n-import java.util.List;\n-\n-import com.google.common.base.Predicate;\n-import com.google.common.collect.Iterables;\n-import com.google.common.collect.Lists;\n-\n-import dom.todo.ToDoItem;\n-import dom.todo.ToDoItems;\n-\n-import org.apache.isis.applib.query.QueryDefault;\n-\n-public class ToDoItemsJdo extends ToDoItems {\n-\n-    // {{ notYetComplete (action)\n-    @Override\n-    protected List<ToDoItem> doNotYetComplete() {\n-        return allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_notYetComplete\", \n-                        \"ownedBy\", currentUserName()));\n-    }\n-    // }}\n-\n-    // {{ done (action)\n-    @Override\n-    protected List<ToDoItem> doComplete() {\n-        return allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_complete\", \n-                        \"ownedBy\", currentUserName()));\n-    }\n-    // }}\n-\n-    // {{ similarTo (action)\n-    @Override\n-    public List<ToDoItem> similarTo(final ToDoItem thisToDoItem) {\n-        final List<ToDoItem> similarToDoItems = allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_similarTo\", \n-                        \"ownedBy\", currentUserName(), \n-                        \"category\", thisToDoItem.getCategory()));\n-        return Lists.newArrayList(Iterables.filter(similarToDoItems, excluding(thisToDoItem)));\n-    }\n-\n-    private static Predicate<ToDoItem> excluding(final ToDoItem toDoItem) {\n-        return new Predicate<ToDoItem>() {\n-            @Override\n-            public boolean apply(ToDoItem input) {\n-                return input != toDoItem;\n-            }\n-        };\n-    }\n-    // }}\n-\n-    // {{ autoComplete (action)\n-    @Override\n-    public List<ToDoItem> autoComplete(String description) {\n-        \n-        return allMatches(\n-                new QueryDefault<ToDoItem>(ToDoItem.class, \n-                        \"todo_autoComplete\", \n-                        \"ownedBy\", currentUserName(), \n-                        \"description\", description));\n-    }\n-    // }}\n-\n-}",
                "changes": 87,
                "blob_url": "https://github.com/apache/isis/blob/fbc5e0b4ab776d016ea5b0c927cd55f087ca21d6/example/application/quickstart_wicket_restful_jdo/dom/src/main/java/dom/todo/ToDoItemsJdo.java"
            },
            {
                "additions": 4,
                "sha": "b6d0399ff95ee5d6cab757e22ae4972bf19ef11b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java",
                "deletions": 5,
                "filename": "example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -16,10 +16,8 @@\n  */\n package integration;\n \n-import dom.todo.ToDoItemsJdo;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import dom.todo.ToDoItemContributions;\n+import dom.todo.ToDoItems;\n \n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n@@ -56,7 +54,8 @@ public ToDoSystemBuilder() {\n             with(new DataNucleusPersistenceMechanismInstaller());\n             \n             withServices(\n-                    new ToDoItemsJdo(),\n+                    new ToDoItems(),\n+                    new ToDoItemContributions(),\n                     new WrapperFactoryDefault(),\n                     new RegisterEntities(),\n                     new IsisJdoSupportImpl()",
                "changes": 9,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/integtests/src/test/java/integration/ToDoSystemInitializer.java"
            },
            {
                "additions": 18,
                "sha": "7c8b134c6e5be27f0d7c3d1df8302dd5dd465e61",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java",
                "deletions": 0,
                "filename": "example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -22,6 +22,8 @@\n \n import com.google.common.collect.Lists;\n \n+import dom.todo.ToDoItem;\n+import dom.todo.ToDoItems;\n import fixture.todo.ToDoItemsFixture;\n \n import org.apache.isis.applib.AbstractService;\n@@ -57,10 +59,26 @@ public String default0InstallFor() {\n \n     // //////////////////////////////////////\n \n+    @Prototype\n+    public ToDoItem installAndReturnFirst() {\n+        install();\n+        List<ToDoItem> notYetComplete = toDoItems.notYetComplete();\n+        return !notYetComplete.isEmpty() ? notYetComplete.get(0) : null;\n+    }\n+\n+    // //////////////////////////////////////\n+\n     private static void installFixturesFor(String user) {\n         final FixturesInstallerDelegate installer = new FixturesInstallerDelegate().withOverride();\n         installer.addFixture(new ToDoItemsFixture(user));\n         installer.installFixtures();\n     }\n+    \n+    // //////////////////////////////////////\n+\n+    private ToDoItems toDoItems;\n+    public void injectToDoItems(ToDoItems toDoItems) {\n+        this.toDoItems = toDoItems;\n+    }\n \n }",
                "changes": 18,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/java/app/services/ToDoItemsFixturesService.java"
            },
            {
                "additions": 2,
                "sha": "84e7bb197ec66e4217991870b2f8a6080473ac47",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties",
                "deletions": 1,
                "filename": "example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties?ref=07d99321cdcb894d26e0f1b61d78195c7f83809c",
                "patch": "@@ -185,7 +185,8 @@ isis.reflector.facet-decorators=org.apache.isis.core.progmodel.facetdecorators.i\n \n # if using the DataNucleus object store\n #isis.services.prefix = \n-isis.services = dom.todo.ToDoItemsJdo,\\\n+isis.services = dom.todo.ToDoItems,\\\n+                dom.todo.ToDoItemContributions,\\\n                 app.services.ToDoItemsFixturesService,\\\n                 app.services.DeveloperUtilities,\\\n                 org.apache.isis.core.metamodel.services.bookmarks.BookmarkServiceDefault,\\",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/07d99321cdcb894d26e0f1b61d78195c7f83809c/example/application/quickstart_wicket_restful_jdo/webapp/src/main/webapp/WEB-INF/isis.properties"
            }
        ],
        "repo": "isis",
        "message": "ISIS-210: choices with param types now also supported.\n\n* changes to ObjectActionParameterContributee subtypes and ActionParameterChoicesFacet to support choices taking parameter types\n* refactored to simplify impl of defaults also\n\nin addition:\n* updated ToDo example, factored out ToDoItemContributions to demonstrate usage with a new \"updateCategory\" action\n* combined ToDoItemsJdo with ToDoItems service\n* new installAndReturnFirst() prototype action\n\nalso:\n* fixed minor issue with wicket dropdown; the current value must be in the list of choices, else will NPE, so adds automatically\n* enhanced rendering of actions to show @DescribedAs as a title",
        "commit": "https://github.com/apache/isis/commit/07d99321cdcb894d26e0f1b61d78195c7f83809c"
    },
    {
        "parent": "https://github.com/apache/isis/commit/39771a14da83a397ab2d6654cda79b2f94332b42",
        "bug_id": "isis_57",
        "file": [
            {
                "additions": 3,
                "sha": "172016080875420c39be12b2cb0ec7e8b17f3daf",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/integtestsupport/src/main/java/org/apache/isis/core/integtestsupport/IsisComponentProviderDefault.java",
                "deletions": 220,
                "filename": "core/integtestsupport/src/main/java/org/apache/isis/core/integtestsupport/IsisComponentProviderDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/integtestsupport/src/main/java/org/apache/isis/core/integtestsupport/IsisComponentProviderDefault.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,52 +19,17 @@\n \n package org.apache.isis.core.integtestsupport;\n \n-import java.util.Collection;\n import java.util.List;\n-import java.util.Set;\n-\n-import com.google.common.collect.Lists;\n-import com.google.common.collect.Sets;\n \n import org.apache.isis.applib.AppManifest;\n import org.apache.isis.applib.fixtures.InstallableFixture;\n-import org.apache.isis.applib.fixturescripts.FixtureScript;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n-import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n-import org.apache.isis.core.commons.resource.ResourceStreamSourceContextLoaderClassPath;\n-import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n-import org.apache.isis.core.metamodel.facetdecorator.FacetDecorator;\n-import org.apache.isis.core.metamodel.layoutmetadata.LayoutMetadataReader;\n-import org.apache.isis.core.metamodel.layoutmetadata.json.LayoutMetadataReaderFromJson;\n-import org.apache.isis.core.metamodel.metamodelvalidator.dflt.MetaModelValidatorDefault;\n import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n-import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n-import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidator;\n-import org.apache.isis.core.runtime.authentication.AuthenticationManager;\n-import org.apache.isis.core.runtime.authentication.standard.AuthenticationManagerStandard;\n-import org.apache.isis.core.runtime.authentication.standard.Authenticator;\n-import org.apache.isis.core.runtime.authorization.AuthorizationManager;\n-import org.apache.isis.core.runtime.authorization.standard.AuthorizationManagerStandard;\n-import org.apache.isis.core.runtime.fixtures.FixturesInstaller;\n-import org.apache.isis.core.runtime.fixtures.FixturesInstallerFromConfiguration;\n-import org.apache.isis.core.runtime.persistence.internal.RuntimeContextFromSession;\n-import org.apache.isis.core.runtime.services.ServicesInstallerFromConfiguration;\n-import org.apache.isis.core.runtime.services.ServicesInstallerFromConfigurationAndAnnotation;\n import org.apache.isis.core.runtime.system.DeploymentType;\n-import org.apache.isis.core.runtime.system.IsisSystemException;\n-import org.apache.isis.core.runtime.system.persistence.PersistenceSessionFactory;\n-import org.apache.isis.core.runtime.systemusinginstallers.IsisComponentProviderAbstract;\n-import org.apache.isis.core.runtime.transaction.facetdecorator.standard.StandardTransactionFacetDecorator;\n-import org.apache.isis.core.security.authentication.AuthenticatorBypass;\n-import org.apache.isis.objectstore.jdo.datanucleus.DataNucleusPersistenceMechanismInstaller;\n-import org.apache.isis.progmodels.dflt.JavaReflectorHelper;\n-import org.apache.isis.progmodels.dflt.ProgrammingModelFacetsJava5;\n-\n-public class IsisComponentProviderDefault extends IsisComponentProviderAbstract {\n+import org.apache.isis.core.runtime.systemusinginstallers.IsisComponentProviderDefault2;\n \n-    private final ProgrammingModel programmingModel;\n-    private final MetaModelValidator metaModelValidator;\n+public class IsisComponentProviderDefault extends IsisComponentProviderDefault2 {\n \n     public IsisComponentProviderDefault(\n             final DeploymentType deploymentType,\n@@ -74,189 +39,7 @@ public IsisComponentProviderDefault(\n             final IsisConfiguration configurationOverride,\n             final ProgrammingModel programmingModelOverride,\n             final MetaModelValidator metaModelValidatorOverride) {\n-        super(deploymentType, appManifestIfAny);\n-\n-        this.configuration = elseDefault(configurationOverride);\n-\n-        final String fixtureClassNamesCsv;\n-        if(appManifest != null) {\n-\n-            putAppManifestKey(appManifest);\n-            registerPackageNames(appManifest);\n-            specifyServicesAndRegisteredEntitiesUsing(appManifest);\n-\n-            List<Class<? extends FixtureScript>> fixtureClasses = appManifest.getFixtures();\n-            fixtureClassNamesCsv = classNamesFrom(fixtureClasses);\n-\n-            overrideConfigurationUsing(appManifest);\n-\n-            this.services = createServices(configuration);\n-\n-        } else {\n-            fixtureClassNamesCsv = classNamesFrom(fixturesOverride);\n-\n-            this.services = elseDefault(servicesOverride, configuration);\n-        }\n-\n-        putConfigurationProperty(FixturesInstallerFromConfiguration.FIXTURES, fixtureClassNamesCsv);\n-        this.fixturesInstaller = createFixturesInstaller(configuration);\n-\n-        // integration tests ignore appManifest for authentication and authorization.\n-        this.authenticationManager = createAuthenticationManager(configuration);\n-        this.authorizationManager = createAuthorizationManager(configuration);\n-\n-        this.programmingModel = elseDefault(programmingModelOverride, configuration);\n-        this.metaModelValidator = elseDefault(metaModelValidatorOverride);\n-\n-    }\n-\n-\n-\n-    //region > appManifest\n-\n-    private List<Object> createServices(final IsisConfiguration configuration) {\n-        final ServicesInstallerFromConfigurationAndAnnotation servicesInstaller =\n-                new ServicesInstallerFromConfigurationAndAnnotation();\n-        servicesInstaller.setConfiguration(configuration);\n-        return servicesInstaller.getServices();\n-    }\n-\n-\n-    @Override\n-    protected void doPutConfigurationProperty(final String key, final String value) {\n-        // bit hacky :-(\n-        IsisConfigurationDefault configurationDefault = (IsisConfigurationDefault) this.configuration;\n-        configurationDefault.put(key, value);\n-    }\n-\n-    //endregion\n-\n-    /**\n-     * Default will read <tt>isis.properties</tt> (and other optional property files) from the &quot;config&quot;\n-     * package on the current classpath.\n-     */\n-    private static IsisConfigurationDefault elseDefault(final IsisConfiguration configuration) {\n-        return configuration != null\n-                ? (IsisConfigurationDefault) configuration\n-                : new IsisConfigurationDefault(ResourceStreamSourceContextLoaderClassPath.create(\"config\"));\n-    }\n-\n-    private static List<Object> elseDefault(\n-            final List<Object> servicesOverride,\n-            final IsisConfiguration configuration) {\n-        return servicesOverride != null\n-                ? servicesOverride\n-                : createDefaultServices(configuration);\n-    }\n-\n-    private static List<Object> createDefaultServices(\n-            final IsisConfiguration configuration) {\n-        final ServicesInstallerFromConfiguration servicesInstaller = new ServicesInstallerFromConfiguration();\n-        servicesInstaller.setConfiguration(configuration);\n-        return servicesInstaller.getServices();\n-    }\n-\n+        super(deploymentType, appManifestIfAny, servicesOverride, fixturesOverride, configurationOverride, programmingModelOverride, metaModelValidatorOverride);\n \n-    private static ProgrammingModel elseDefault(final ProgrammingModel programmingModel, final IsisConfiguration configuration) {\n-        return programmingModel != null\n-                ? programmingModel\n-                : createDefaultProgrammingModel(configuration);\n     }\n-\n-    // TODO: this is duplicating logic in JavaReflectorInstallerNoDecorators; need to unify.\n-    private static ProgrammingModel createDefaultProgrammingModel(final IsisConfiguration configuration) {\n-        final ProgrammingModelFacetsJava5 programmingModel = new ProgrammingModelFacetsJava5();\n-\n-        ProgrammingModel.Util.includeFacetFactories(configuration, programmingModel);\n-        ProgrammingModel.Util.excludeFacetFactories(configuration, programmingModel);\n-        return programmingModel;\n-    }\n-\n-    private static MetaModelValidator elseDefault(final MetaModelValidator metaModelValidator) {\n-        return metaModelValidator != null\n-                ? metaModelValidator\n-                : new MetaModelValidatorDefault();\n-    }\n-\n-    private static FixturesInstaller createFixturesInstaller(final IsisConfiguration configuration) {\n-        final FixturesInstallerFromConfiguration fixturesInstallerFromConfiguration = new FixturesInstallerFromConfiguration();\n-        fixturesInstallerFromConfiguration.setConfiguration(configuration);\n-        return fixturesInstallerFromConfiguration;\n-    }\n-\n-    /**\n-     * The standard authentication manager, configured with the default authenticator (allows all requests through).\n-     */\n-    private static AuthenticationManager createAuthenticationManager(final IsisConfiguration configuration) {\n-        final AuthenticationManagerStandard authenticationManager = new AuthenticationManagerStandard(configuration);\n-        Authenticator authenticator = new AuthenticatorBypass(configuration);\n-        authenticationManager.addAuthenticator(authenticator);\n-        return authenticationManager;\n-    }\n-\n-    /**\n-     * The standard authorization manager, allowing all access.\n-     */\n-    private static AuthorizationManager createAuthorizationManager(final IsisConfiguration configuration) {\n-        return new AuthorizationManagerStandard(configuration);\n-    }\n-\n-\n-    @Override\n-    public DeploymentType getDeploymentType() {\n-        return deploymentType;\n-    }\n-\n-    @Override\n-    public IsisConfigurationDefault getConfiguration() {\n-        return configuration;\n-    }\n-\n-    @Override\n-    public List<Object> provideServices() {\n-        return services;\n-    }\n-\n-    @Override\n-    public FixturesInstaller provideFixturesInstaller()  {\n-        return fixturesInstaller;\n-    }\n-\n-    @Override\n-    public SpecificationLoaderSpi provideSpecificationLoaderSpi(\n-            Collection<MetaModelRefiner> metaModelRefiners) throws IsisSystemException {\n-\n-        final Set<FacetDecorator> facetDecorators = Sets\n-                .newHashSet((FacetDecorator) new StandardTransactionFacetDecorator(getConfiguration()));\n-        final List<LayoutMetadataReader> layoutMetadataReaders =\n-                Lists.<LayoutMetadataReader>newArrayList(new LayoutMetadataReaderFromJson());\n-\n-        return JavaReflectorHelper\n-                .createObjectReflector(\n-                        programmingModel,\n-                        metaModelRefiners,\n-                        facetDecorators, layoutMetadataReaders,\n-                        metaModelValidator,\n-                        getConfiguration());\n-    }\n-\n-    @Override\n-    public AuthenticationManager provideAuthenticationManager(DeploymentType deploymentType) {\n-        return authenticationManager;\n-    }\n-\n-    @Override\n-    public AuthorizationManager provideAuthorizationManager(DeploymentType deploymentType) {\n-        return authorizationManager;\n-    }\n-\n-    @Override\n-    public PersistenceSessionFactory providePersistenceSessionFactory(\n-            DeploymentType deploymentType,\n-            final ServicesInjectorSpi servicesInjectorSpi,\n-            final RuntimeContextFromSession runtimeContext) {\n-        DataNucleusPersistenceMechanismInstaller installer = new DataNucleusPersistenceMechanismInstaller();\n-        return installer.createPersistenceSessionFactory(deploymentType, servicesInjectorSpi, getConfiguration(), runtimeContext);\n-    }\n-\n }",
                "changes": 223,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/integtestsupport/src/main/java/org/apache/isis/core/integtestsupport/IsisComponentProviderDefault.java"
            },
            {
                "additions": 47,
                "sha": "10344a89a42c29eb61bc756631c37b6c93b25ba8",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoAbstract.java",
                "deletions": 27,
                "filename": "core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoAbstract.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -31,14 +31,18 @@\n import org.apache.maven.plugins.annotations.Parameter;\n import org.apache.maven.project.MavenProject;\n \n+import org.apache.isis.applib.AppManifest;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationBuilderDefault;\n+import org.apache.isis.core.commons.factory.InstanceUtil;\n import org.apache.isis.core.metamodel.app.IsisMetaModel;\n-import org.apache.isis.core.metamodel.runtimecontext.noruntime.RuntimeContextNoRuntime;\n-import org.apache.isis.core.metamodel.services.ServicesInjectorDefault;\n+import org.apache.isis.core.metamodel.specloader.ObjectReflectorDefault;\n import org.apache.isis.core.runtime.services.ServicesInstaller;\n import org.apache.isis.core.runtime.services.ServicesInstallerFromAnnotation;\n import org.apache.isis.core.runtime.services.ServicesInstallerFromConfigurationAndAnnotation;\n+import org.apache.isis.core.runtime.system.DeploymentType;\n+import org.apache.isis.core.runtime.system.IsisSystem;\n+import org.apache.isis.core.runtime.systemusinginstallers.IsisComponentProviderDefault2;\n import org.apache.isis.progmodels.dflt.ProgrammingModelFacetsJava5;\n import org.apache.isis.tool.mavenplugin.util.IsisMetaModels;\n import org.apache.isis.tool.mavenplugin.util.MavenProjects;\n@@ -53,6 +57,9 @@\n     @Parameter(required = true, readonly = false, property = \"isisConfigDir\")\n     private String isisConfigDir;\n \n+    @Parameter(required = false, readonly = false, property = \"appManifest\")\n+    private String appManifest;\n+\n     private final MetaModelProcessor metaModelProcessor;\n     private final ContextForMojo context;\n \n@@ -64,30 +71,49 @@ protected IsisMojoAbstract(final MetaModelProcessor metaModelProcessor) {\n     public void execute() throws MojoExecutionException, MojoFailureException {\n \n         final Plugin plugin = MavenProjects.lookupPlugin(mavenProject, CURRENT_PLUGIN_KEY);\n-        final List<Object> serviceList = plugin != null ? serviceListFor(plugin) : null;\n-        if(serviceList == null || serviceList.size() == 0) {\n-            return;\n-        }\n-        getLog().info(\"Found \" + serviceList.size() + \" services\");\n \n-        usingIsisMetaModel(serviceList, metaModelProcessor);\n-    }\n+        if(this.appManifest != null) {\n+\n+            final AppManifest manifest = InstanceUtil.createInstance(this.appManifest, AppManifest.class);\n+            final IsisComponentProviderDefault2 componentProvider = new IsisComponentProviderDefault2(\n+                    DeploymentType.UNIT_TESTING, manifest, null, null, null, null, null);\n+\n+            final IsisSystem isisSystem = new IsisSystem(componentProvider);\n+            try {\n+                isisSystem.init();\n+\n+            } catch(RuntimeException ex) {\n+                ;\n+                // ignore\n+            } finally {\n+                isisSystem.shutdown();\n+            }\n+\n+            final ObjectReflectorDefault specificationLoader =\n+                    (ObjectReflectorDefault) isisSystem.getSessionFactory().getSpecificationLoader();\n+            metaModelProcessor.process(specificationLoader, context);\n+\n \n-    private void usingIsisMetaModel(\n-            final List<Object> serviceList,\n-            final MetaModelProcessor metaModelProcessor) throws MojoExecutionException, MojoFailureException {\n+        } else {\n \n-        IsisMetaModel isisMetaModel = null;\n-        try {\n-            isisMetaModel = bootstrapIsis(serviceList);\n-            metaModelProcessor.process(isisMetaModel, context);\n-        } finally {\n-            IsisMetaModels.disposeSafely(isisMetaModel);\n+            final IsisConfiguration isisConfiguration = getIsisConfiguration();\n+            final List<Object> serviceList = plugin != null ? serviceListFor(plugin, isisConfiguration) : null;\n+            if (serviceList == null || serviceList.size() == 0) {\n+                return;\n+            }\n+            getLog().info(\"Found \" + serviceList.size() + \" services\");\n+\n+            IsisMetaModel isisMetaModel = null;\n+            try {\n+                isisMetaModel = bootstrapIsis(serviceList);\n+                metaModelProcessor.process((ObjectReflectorDefault) isisMetaModel.getSpecificationLoader(), context);\n+            } finally {\n+                IsisMetaModels.disposeSafely(isisMetaModel);\n+            }\n         }\n     }\n \n-    private List<Object> serviceListFor(Plugin plugin) throws MojoFailureException {\n-        IsisConfiguration isisConfiguration = getIsisConfiguration();\n+    private List<Object> serviceListFor(Plugin plugin, final IsisConfiguration isisConfiguration) throws MojoFailureException {\n \n         final ServicesInstaller servicesInstaller;\n         if(isisConfiguration == null) {\n@@ -126,13 +152,7 @@ private File getIsisConfigDir() {\n     }\n \n     private static IsisMetaModel bootstrapIsis(List<Object> serviceList) {\n-        final RuntimeContextNoRuntime runtimeContext =\n-                new RuntimeContextNoRuntime(\n-                new ServicesInjectorDefault(serviceList));\n-        IsisMetaModel isisMetaModel = new IsisMetaModel(\n-                runtimeContext,\n-                                            new ProgrammingModelFacetsJava5(),\n-                                            serviceList);\n+        IsisMetaModel isisMetaModel = new IsisMetaModel(new ProgrammingModelFacetsJava5(), serviceList);\n         isisMetaModel.init();\n         return isisMetaModel;\n     }",
                "changes": 74,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoAbstract.java"
            },
            {
                "additions": 13,
                "sha": "2286ff1148002f686d34579d622d2711d257e11c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoValidate.java",
                "deletions": 6,
                "filename": "core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoValidate.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoValidate.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,13 +19,14 @@\n package org.apache.isis.tool.mavenplugin;\n \n import java.util.Collection;\n-import org.apache.maven.plugin.MojoExecutionException;\n+\n import org.apache.maven.plugin.MojoFailureException;\n import org.apache.maven.plugins.annotations.LifecyclePhase;\n import org.apache.maven.plugins.annotations.Mojo;\n import org.apache.maven.plugins.annotations.ResolutionScope;\n-import org.apache.isis.core.metamodel.app.IsisMetaModel;\n+\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n+import org.apache.isis.core.metamodel.specloader.ObjectReflectorDefault;\n import org.apache.isis.core.metamodel.specloader.validator.ValidationFailures;\n \n @Mojo(\n@@ -42,14 +43,20 @@ protected IsisMojoValidate() {\n     }\n \n     static class ValidateMetaModelProcessor implements MetaModelProcessor {\n+\n+\n         @Override\n-        public void process(final IsisMetaModel isisMetaModel, final Context context) throws MojoFailureException, MojoExecutionException {\n-            final Collection<ObjectSpecification> objectSpecifications = isisMetaModel.getSpecificationLoader().allSpecifications();\n+        public void process(\n+                final ObjectReflectorDefault specificationLoader,\n+                final Context context)\n+                throws MojoFailureException {\n+\n+            final ValidationFailures validationFailures = specificationLoader.validate();\n+\n+            final Collection<ObjectSpecification> objectSpecifications = specificationLoader.allSpecifications();\n             for (ObjectSpecification objectSpecification : objectSpecifications) {\n                 context.getLog().debug(\"loaded: \" + objectSpecification.getFullIdentifier());\n             }\n-\n-            final ValidationFailures validationFailures = isisMetaModel.getValidationFailures();\n             if (validationFailures.occurred()) {\n                 context.throwFailureException(validationFailures.getNumberOfMessages() + \" problems found.\", validationFailures.getMessages());\n             }",
                "changes": 19,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/IsisMojoValidate.java"
            },
            {
                "additions": 5,
                "sha": "bd6f457a62be105fbd3e86af6e7782c6e5012837",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/MetaModelProcessor.java",
                "deletions": 2,
                "filename": "core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/MetaModelProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/MetaModelProcessor.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,11 +19,13 @@\n package org.apache.isis.tool.mavenplugin;\n \n import java.util.Set;\n+\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.plugin.MojoFailureException;\n import org.apache.maven.plugin.logging.Log;\n import org.apache.maven.project.MavenProject;\n-import org.apache.isis.core.metamodel.app.IsisMetaModel;\n+\n+import org.apache.isis.core.metamodel.specloader.ObjectReflectorDefault;\n \n interface MetaModelProcessor {\n \n@@ -42,5 +44,6 @@\n         void throwExecutionException(final String errorMessage, final Exception e) throws MojoExecutionException;\n     }\n \n-    public void process(final IsisMetaModel isisMetaModel, final Context context) throws MojoFailureException, MojoExecutionException;\n+    void process(final ObjectReflectorDefault specificationLoader, final Context context) throws MojoFailureException;\n+\n }",
                "changes": 7,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/maven-plugin/src/main/java/org/apache/isis/tool/mavenplugin/MetaModelProcessor.java"
            },
            {
                "additions": 2,
                "sha": "fa03a54a52989e38372735f3e7bfac14c1b37204",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/authentication/AuthenticationSessionProvider.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/commons/authentication/AuthenticationSessionProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/commons/authentication/AuthenticationSessionProvider.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -16,9 +16,9 @@\n  */\n package org.apache.isis.core.commons.authentication;\n \n-import org.apache.isis.core.commons.components.Injectable;\n+public interface AuthenticationSessionProvider {\n \n-public interface AuthenticationSessionProvider extends Injectable {\n+    void injectInto(final Object candidate);\n \n     /**\n      * Provided by <tt>AuthenticationManager</tt> when used by framework.",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/authentication/AuthenticationSessionProvider.java"
            },
            {
                "additions": 0,
                "sha": "5a91c2c63b8e3ecc4760410e4193b6ea9d7b8a3d",
                "status": "removed",
                "raw_url": "https://github.com/apache/isis/raw/39771a14da83a397ab2d6654cda79b2f94332b42/core/metamodel/src/main/java/org/apache/isis/core/commons/components/Injectable.java",
                "deletions": 31,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/commons/components/Injectable.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/commons/components/Injectable.java?ref=39771a14da83a397ab2d6654cda79b2f94332b42",
                "patch": "@@ -1,31 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- *\n- *        http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-\n-package org.apache.isis.core.commons.components;\n-\n-\n-public interface Injectable {\n-\n-    /**\n-     * Will inject itself into the candidate if the candidate implements the\n-     * corresponding <tt>*Aware</tt> type.\n-     */\n-    void injectInto(Object candidate);\n-\n-}",
                "changes": 31,
                "blob_url": "https://github.com/apache/isis/blob/39771a14da83a397ab2d6654cda79b2f94332b42/core/metamodel/src/main/java/org/apache/isis/core/commons/components/Injectable.java"
            },
            {
                "additions": 2,
                "sha": "cafacb2438dcfd53f0f3e76ad7ae04ba1fda791b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/components/package-info.java",
                "deletions": 3,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/commons/components/package-info.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/commons/components/package-info.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -33,9 +33,8 @@\n  * </ul>\n  * \n  * <p>\n- * Many {@link org.apache.isis.core.commons.components.Component}s may also be\n- * {@link org.apache.isis.core.commons.components.Injectable}, meaning that\n- * they know hot to inject themselves to a candidate object &quot;if appropriate&quot;.\n+ * Many {@link org.apache.isis.core.commons.components.Component}s may also be injectable,\n+ * meaning that they know hot to inject themselves to a candidate object &quot;if appropriate&quot;.\n  * The convention adopted in most cases is for an object requiring injection of\n  * component <tt>Xxx</tt> to implement an <tt>XxxAware</tt> interface that\n  * defines a <tt>setXxx(Xxx)</tt> method.",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/components/package-info.java"
            },
            {
                "additions": 4,
                "sha": "d2bf8abea10fa7e77e975944f71bb77b0ac45132",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfiguration.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfiguration.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -24,7 +24,7 @@\n import java.util.Iterator;\n import java.util.Map;\n \n-import org.apache.isis.core.commons.components.Injectable;\n+import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n import org.apache.isis.core.commons.debug.DebuggableWithTitle;\n import org.apache.isis.core.commons.resource.ResourceStreamSource;\n \n@@ -42,7 +42,9 @@\n  * Thus the {@link IsisConfiguration} held by different components may vary, but\n  * with each being a possible superset of the previous.\n  */\n-public interface IsisConfiguration extends DebuggableWithTitle, Injectable, Iterable<String> {\n+public interface IsisConfiguration extends DebuggableWithTitle, Iterable<String>, ApplicationScopedComponent {\n+\n+    void injectInto(Object candidate);\n \n     /**\n      * Creates a new IsisConfiguration containing the properties starting with",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfiguration.java"
            },
            {
                "additions": 3,
                "sha": "c118c87101b38d2444cfa5a98c34895a40bbb08f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilder.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilder.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,7 +19,6 @@\n \n package org.apache.isis.core.commons.config;\n \n-import org.apache.isis.core.commons.components.Injectable;\n import org.apache.isis.core.commons.resource.ResourceStreamSource;\n import org.apache.isis.core.commons.resource.ResourceStreamSourceChainOfResponsibility;\n \n@@ -33,7 +32,9 @@\n  * @see IsisConfiguration for more details on the mutable/immutable pair\n  *      pattern.\n  */\n-public interface IsisConfigurationBuilder extends Injectable {\n+public interface IsisConfigurationBuilder {\n+\n+    void injectInto(Object candidate);\n \n     /**\n      * Returns a currently known {@link IsisConfiguration}.",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilder.java"
            },
            {
                "additions": 0,
                "sha": "48c282eabc76031b1b11cd992ad2f7e5586ad6da",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilderResourceStreams.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilderResourceStreams.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilderResourceStreams.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -243,7 +243,6 @@ public void dumpResourcesToLog() {\n     // Injectable\n     // ////////////////////////////////////////////////////////////\n \n-    @Override\n     public void injectInto(final Object candidate) {\n         if (IsisConfigurationBuilderAware.class.isAssignableFrom(candidate.getClass())) {\n             final IsisConfigurationBuilderAware cast = IsisConfigurationBuilderAware.class.cast(candidate);",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/commons/config/IsisConfigurationBuilderResourceStreams.java"
            },
            {
                "additions": 1,
                "sha": "4a66f50d9eccec9b24d9b78e49be91dc49305670",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/adapter/mgr/AdapterManager.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/adapter/mgr/AdapterManager.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/adapter/mgr/AdapterManager.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -22,12 +22,11 @@\n import java.util.concurrent.Callable;\n \n import org.apache.isis.applib.annotation.ActionSemantics;\n-import org.apache.isis.core.commons.components.Injectable;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.oid.Oid;\n import org.apache.isis.core.metamodel.spec.feature.OneToManyAssociation;\n \n-public interface AdapterManager extends Injectable {\n+public interface AdapterManager {\n \n     /**\n      * Gets the {@link ObjectAdapter adapter} for the {@link Oid} if it exists",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/adapter/mgr/AdapterManager.java"
            },
            {
                "additions": 46,
                "sha": "476b3563c709eca19b7b00ef8f0541eea1399f64",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/app/IsisMetaModel.java",
                "deletions": 140,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/app/IsisMetaModel.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/app/IsisMetaModel.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -20,33 +20,31 @@\n package org.apache.isis.core.metamodel.app;\n \n import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import java.util.TreeSet;\n+\n import com.google.common.collect.Lists;\n+\n import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n-import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n+import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n import org.apache.isis.core.metamodel.facetdecorator.FacetDecorator;\n import org.apache.isis.core.metamodel.layoutmetadata.LayoutMetadataReader;\n import org.apache.isis.core.metamodel.layoutmetadata.json.LayoutMetadataReaderFromJson;\n import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n import org.apache.isis.core.metamodel.runtimecontext.RuntimeContext;\n-import org.apache.isis.core.metamodel.runtimecontext.ServicesInjector;\n+import org.apache.isis.core.metamodel.runtimecontext.noruntime.RuntimeContextNoRuntime;\n import org.apache.isis.core.metamodel.services.ServicesInjectorDefault;\n-import org.apache.isis.core.metamodel.services.container.DomainObjectContainerDefault;\n+import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.metamodel.specloader.ObjectReflectorDefault;\n-import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidator;\n import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidatorComposite;\n import org.apache.isis.core.metamodel.specloader.validator.ValidationFailures;\n \n-import static org.apache.isis.core.commons.ensure.Ensure.ensureThatArg;\n import static org.apache.isis.core.commons.ensure.Ensure.ensureThatState;\n import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.CoreMatchers.notNullValue;\n \n /**\n  * Facade for the entire Isis metamodel and supporting components.\n@@ -57,51 +55,65 @@\n  */\n public class IsisMetaModel implements ApplicationScopedComponent {\n \n+\n     private static enum State {\n         NOT_INITIALIZED, INITIALIZED, SHUTDOWN;\n     }\n \n-    private final List<Object> services = Lists.newArrayList();\n-\n     private State state = State.NOT_INITIALIZED;\n \n-    private ObjectReflectorDefault reflector;\n+    private final ServicesInjectorSpi servicesInjector;\n+\n+    private ObjectReflectorDefault specificationLoader;\n     private RuntimeContext runtimeContext;\n \n-    private IsisConfiguration configuration;\n+    private IsisConfigurationDefault configuration;\n     private ProgrammingModel programmingModel;\n     private Set<FacetDecorator> facetDecorators;\n     private MetaModelValidatorComposite metaModelValidator;\n \n     private ValidationFailures validationFailures;\n \n-    public IsisMetaModel(final RuntimeContext runtimeContext, ProgrammingModel programmingModel, final List<Object> services) {\n-        this(runtimeContext, programmingModel, services.toArray());\n+    public IsisMetaModel(\n+            final ProgrammingModel programmingModel,\n+            final List<Object> services) {\n+        this(programmingModel, services.toArray());\n     }\n     \n     public IsisMetaModel(\n-            final RuntimeContext runtimeContext,\n             final ProgrammingModel programmingModel,\n             final Object... services) {\n-        this.runtimeContext = runtimeContext;\n \n-        this.services.add(new DomainObjectContainerDefault());\n-        this.services.addAll(Arrays.asList(services));\n+        this.programmingModel = programmingModel;\n+\n+        final List<Object> serviceList = Lists.newArrayList();\n+        serviceList.addAll(Arrays.asList(services));\n+        this.servicesInjector = new ServicesInjectorDefault(serviceList);\n \n         this.configuration = new IsisConfigurationDefault();\n \n         this.facetDecorators = new TreeSet<>();\n-        setProgrammingModelFacets(programmingModel);\n \n         this.metaModelValidator = new MetaModelValidatorComposite();\n-        programmingModel.refineMetaModelValidator(metaModelValidator, configuration);\n+        this.programmingModel.refineMetaModelValidator(metaModelValidator, configuration);\n+\n+        final DeploymentCategory deploymentCategory = DeploymentCategory.PRODUCTION;\n+        final List<LayoutMetadataReader> layoutMetadataReaders =\n+                Lists.<LayoutMetadataReader>newArrayList(new LayoutMetadataReaderFromJson());\n+\n+        this.specificationLoader = new ObjectReflectorDefault(\n+                deploymentCategory, configuration,\n+                this.programmingModel, facetDecorators,\n+                metaModelValidator, layoutMetadataReaders);\n+        specificationLoader.setServiceInjector(servicesInjector);\n+\n+        this.runtimeContext = new RuntimeContextNoRuntime(\n+                deploymentCategory, configuration, servicesInjector, specificationLoader);\n+\n     }\n \n-    /**\n-     * The list of classes representing services.\n-     */\n-    public List<Object> getServices() {\n-        return Collections.unmodifiableList(services);\n+    public ServicesInjectorSpi getServicesInjector() {\n+        return servicesInjector;\n     }\n \n     // ///////////////////////////////////////////////////////\n@@ -111,27 +123,17 @@ public IsisMetaModel(\n     public void init() {\n         ensureNotInitialized();\n \n-        final List<LayoutMetadataReader> layoutMetadataReaders = Lists.<LayoutMetadataReader>newArrayList(\n-                new LayoutMetadataReaderFromJson());\n+        runtimeContext.injectInto(specificationLoader);\n \n-        reflector = new ObjectReflectorDefault(configuration, programmingModel, facetDecorators, metaModelValidator, layoutMetadataReaders);\n+        specificationLoader.initialize();\n \n-        final ServicesInjectorDefault servicesInjector = new ServicesInjectorDefault(services);\n-        reflector.setServiceInjector(servicesInjector);\n-        \n-        runtimeContext.injectInto(reflector);\n-        reflector.injectInto(runtimeContext);\n-\n-        reflector.initialize();\n-\n-        validationFailures = reflector.validate();\n-        runtimeContext.init();\n-\n-        for (final Object service : services) {\n-            final ObjectSpecification serviceSpec = reflector.loadSpecification(service.getClass());\n+        for (final Object service : servicesInjector.getRegisteredServices()) {\n+            final ObjectSpecification serviceSpec = specificationLoader.loadSpecification(service.getClass());\n             serviceSpec.markAsService();\n         }\n \n+        validationFailures = specificationLoader.validate();\n+\n         state = State.INITIALIZED;\n     }\n     \n@@ -144,113 +146,15 @@ public void shutdown() {\n         state = State.SHUTDOWN;\n     }\n \n-    // ///////////////////////////////////////////////////////\n-    // SpecificationLoader\n-    // ///////////////////////////////////////////////////////\n \n     /**\n      * Available once {@link #init() initialized}.\n      */\n     public SpecificationLoaderSpi getSpecificationLoader() {\n-        return reflector;\n-    }\n-\n-\n-    // ///////////////////////////////////////////////////////\n-    // DependencyInjector\n-    // ///////////////////////////////////////////////////////\n-\n-    /**\n-     * Available once {@link #init() initialized}.\n-     */\n-    public ServicesInjector getDependencyInjector() {\n-        ensureInitialized();\n-        return runtimeContext.getServicesInjector();\n+        return specificationLoader;\n     }\n \n-    // ///////////////////////////////////////////////////////\n-    // Override defaults\n-    // ///////////////////////////////////////////////////////\n-\n-    /**\n-     * The {@link IsisConfiguration} in force, either defaulted or specified\n-     * {@link #setConfiguration(IsisConfiguration) explicitly.}\n-     */\n-    public IsisConfiguration getConfiguration() {\n-        return configuration;\n-    }\n-\n-    /**\n-     * Optionally specify the {@link IsisConfiguration}.\n-     * \n-     * <p>\n-     * Call prior to {@link #init()}.\n-     */\n-    public void setConfiguration(final IsisConfiguration configuration) {\n-        ensureNotInitialized();\n-        ensureThatArg(configuration, is(notNullValue()));\n-        this.configuration = configuration;\n-    }\n-\n-    /**\n-     * The {@link ProgrammingModel} in force, either defaulted or specified\n-     * {@link #setProgrammingModelFacets(ProgrammingModel) explicitly}.\n-     */\n-    public ProgrammingModel getProgrammingModelFacets() {\n-        return programmingModel;\n-    }\n-\n-    /**\n-     * Optionally specify the {@link ProgrammingModel}.\n-     * \n-     * <p>\n-     * Call prior to {@link #init()}.\n-     */\n-    public void setProgrammingModelFacets(final ProgrammingModel programmingModel) {\n-        ensureNotInitialized();\n-        ensureThatArg(programmingModel, is(notNullValue()));\n-        this.programmingModel = programmingModel;\n-    }\n-\n-    /**\n-     * The {@link FacetDecorator}s in force, either defaulted or specified\n-     * {@link #setFacetDecorators(Set) explicitly}.\n-     */\n-    public Set<FacetDecorator> getFacetDecorators() {\n-        return Collections.unmodifiableSet(facetDecorators);\n-    }\n-\n-    /**\n-     * Optionally specify the {@link FacetDecorator}s.\n-     * \n-     * <p>\n-     * Call prior to {@link #init()}.\n-     */\n-    public void setFacetDecorators(final Set<FacetDecorator> facetDecorators) {\n-        ensureNotInitialized();\n-        ensureThatArg(facetDecorators, is(notNullValue()));\n-        this.facetDecorators = facetDecorators;\n-    }\n-\n-    /**\n-     * The {@link MetaModelValidator} in force, either defaulted or specified\n-     * {@link #setMetaModelValidator(org.apache.isis.core.metamodel.specloader.validator.MetaModelValidatorComposite) explicitly}.\n-     */\n-    public MetaModelValidatorComposite getMetaModelValidator() {\n-        return metaModelValidator;\n-    }\n-\n-    /**\n-     * Optionally specify the {@link MetaModelValidator}.\n-     * @param metaModelValidator\n-     */\n-    public void setMetaModelValidator(final MetaModelValidatorComposite metaModelValidator) {\n-        this.metaModelValidator = metaModelValidator;\n-    }\n-\n-    // ///////////////////////////////////////////////////////\n-    // State management\n-    // ///////////////////////////////////////////////////////\n+    //region > State management\n \n     private State ensureNotInitialized() {\n         return ensureThatState(state, is(State.NOT_INITIALIZED));\n@@ -260,4 +164,6 @@ private State ensureInitialized() {\n         return ensureThatState(state, is(State.INITIALIZED));\n     }\n \n+    //endregion\n+\n }",
                "changes": 186,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/app/IsisMetaModel.java"
            },
            {
                "additions": 4,
                "sha": "8949bd0ed3593344781f199f405eb7152b767f1c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProvider.java",
                "deletions": 3,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProvider.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,8 +19,9 @@\n \n package org.apache.isis.core.metamodel.deployment;\n \n-import org.apache.isis.core.commons.components.Injectable;\n+public interface DeploymentCategoryProvider {\n \n-public interface DeploymentCategoryProvider extends Injectable {\n-    public DeploymentCategory getDeploymentCategory();\n+    void injectInto(final Object candidate);\n+\n+    DeploymentCategory getDeploymentCategory();\n }",
                "changes": 7,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProvider.java"
            },
            {
                "additions": 0,
                "sha": "1ca19049a313ccba4d9714b7ac72c8f9a1db3214",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProviderAbstract.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProviderAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProviderAbstract.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -18,7 +18,6 @@\n \n public abstract class DeploymentCategoryProviderAbstract implements DeploymentCategoryProvider {\n \n-    @Override\n     public void injectInto(final Object candidate) {\n         if (DeploymentCategoryAware.class.isAssignableFrom(candidate.getClass())) {\n             final DeploymentCategoryAware cast = DeploymentCategoryAware.class.cast(candidate);",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/deployment/DeploymentCategoryProviderAbstract.java"
            },
            {
                "additions": 5,
                "sha": "8113493e6b69d7c65a8472c41bf6215e18bace04",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/ignore/javalang/RemoveInjectMethodsFacetFactory.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/ignore/javalang/RemoveInjectMethodsFacetFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/ignore/javalang/RemoveInjectMethodsFacetFactory.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -23,9 +23,13 @@\n import java.util.List;\n import org.apache.isis.core.metamodel.facetapi.FeatureType;\n import org.apache.isis.core.metamodel.facets.FacetFactoryAbstract;\n+import org.apache.isis.core.metamodel.spec.InjectorMethodEvaluator;\n+import org.apache.isis.core.metamodel.specloader.InjectorMethodEvaluatorDefault;\n \n public class RemoveInjectMethodsFacetFactory extends FacetFactoryAbstract  {\n \n+    private final InjectorMethodEvaluator injectorMethodEvaluator = new InjectorMethodEvaluatorDefault();\n+\n     public RemoveInjectMethodsFacetFactory() {\n         super(FeatureType.OBJECTS_ONLY);\n     }\n@@ -36,7 +40,7 @@ public void process(final ProcessClassContext processClassContext) {\n         for (Class<? extends Object> serviceClass : serviceClasses) {\n             Method[] methods = processClassContext.getCls().getMethods();\n             for (Method method : methods) {\n-                if(getSpecificationLoader().isInjectorMethodFor(method, serviceClass)) {\n+                if(injectorMethodEvaluator.isInjectorMethodFor(method, serviceClass)) {\n                     processClassContext.removeMethod(method);\n                 }\n             }",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/facets/object/ignore/javalang/RemoveInjectMethodsFacetFactory.java"
            },
            {
                "additions": 2,
                "sha": "1fa57b1be210524af6ea344296690fee3d406860",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ConfigurationService.java",
                "deletions": 5,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ConfigurationService.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ConfigurationService.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -18,14 +18,11 @@\n \n import java.util.List;\n \n-import org.apache.isis.core.commons.components.Injectable;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n \n-public interface ConfigurationService extends Injectable {\n+public interface ConfigurationService {\n \n-    // //////////////////////////////////////////////////////////////////\n-    // properties\n-    // //////////////////////////////////////////////////////////////////\n+    void injectInto(final Object candidate);\n \n     /**\n      * Provided by {@link RuntimeContextAbstract} itself, cloned properties from",
                "changes": 7,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ConfigurationService.java"
            },
            {
                "additions": 3,
                "sha": "040a90aee001890488507cf0984d118833fd89d1",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/LocalizationProvider.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/LocalizationProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/LocalizationProvider.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -20,9 +20,10 @@\n package org.apache.isis.core.metamodel.runtimecontext;\n \n import org.apache.isis.applib.profiles.Localization;\n-import org.apache.isis.core.commons.components.Injectable;\n \n-public interface LocalizationProvider extends Injectable {\n+public interface LocalizationProvider {\n+\n+    void injectInto(final Object candidate);\n \n     Localization getLocalization();\n ",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/LocalizationProvider.java"
            },
            {
                "additions": 2,
                "sha": "d33e32738c2e8391640ce236ab3c90f8dc693eac",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/MessageBrokerService.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/MessageBrokerService.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/MessageBrokerService.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -16,9 +16,9 @@\n  */\n package org.apache.isis.core.metamodel.runtimecontext;\n \n-import org.apache.isis.core.commons.components.Injectable;\n+public interface MessageBrokerService {\n \n-public interface MessageBrokerService extends Injectable {\n+    void injectInto(final Object candidate);\n \n     /**\n      * Provided by <tt>MessageBroker</tt> when used by framework.",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/MessageBrokerService.java"
            },
            {
                "additions": 2,
                "sha": "ec5eede8c53aa4e01b38b32faf99fe27102f450e",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/PersistenceSessionService.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/PersistenceSessionService.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/PersistenceSessionService.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -20,13 +20,13 @@\n \n import org.apache.isis.applib.query.Query;\n import org.apache.isis.applib.services.bookmark.Bookmark;\n-import org.apache.isis.core.commons.components.Injectable;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n \n-public interface PersistenceSessionService extends AdapterManager, Injectable {\n+public interface PersistenceSessionService extends AdapterManager {\n \n+    void injectInto(final Object candidate);\n \n     // ///////////////////////////////////////////\n     // Instantiate",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/PersistenceSessionService.java"
            },
            {
                "additions": 2,
                "sha": "3b0d6048ab5844931fa45bc9b8c4cda9b8bf1a65",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContext.java",
                "deletions": 3,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContext.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContext.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -22,7 +22,6 @@\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n import org.apache.isis.core.commons.authentication.AuthenticationSessionProvider;\n import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n-import org.apache.isis.core.commons.components.Injectable;\n import org.apache.isis.core.metamodel.deployment.DeploymentCategoryProvider;\n import org.apache.isis.core.metamodel.spec.SpecificationLoader;\n import org.apache.isis.core.metamodel.transactions.TransactionStateProvider;\n@@ -31,9 +30,9 @@\n  * Decouples the metamodel from a runtime.\n  * \n  */\n-public interface RuntimeContext extends Injectable, ApplicationScopedComponent {\n+public interface RuntimeContext extends ApplicationScopedComponent {\n \n-    public void init();\n+    void injectInto(Object candidate);\n \n     // //////////////////////////////////////\n     // application-scoped",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContext.java"
            },
            {
                "additions": 10,
                "sha": "e6470902441a94e0e48780a501d067789049912a",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContextAbstract.java",
                "deletions": 102,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContextAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContextAbstract.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,42 +19,35 @@\n \n package org.apache.isis.core.metamodel.runtimecontext;\n \n-import java.lang.reflect.Method;\n-import java.util.Collection;\n-import java.util.List;\n-\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n import org.apache.isis.core.metamodel.deployment.DeploymentCategoryProvider;\n import org.apache.isis.core.metamodel.deployment.DeploymentCategoryProviderAbstract;\n-import org.apache.isis.core.metamodel.spec.ObjectSpecId;\n-import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n-import org.apache.isis.core.metamodel.spec.SpecificationLoader;\n-import org.apache.isis.core.metamodel.spec.SpecificationLoaderDelegator;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n-import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpiAware;\n-\n-public abstract class RuntimeContextAbstract implements RuntimeContext, SpecificationLoaderSpiAware {\n \n-    private final SpecificationLoaderDelegator specificationLookupDelegator = new SpecificationLoaderDelegator();\n+public abstract class RuntimeContextAbstract implements RuntimeContext {\n \n     private final DeploymentCategory deploymentCategory;\n     private final IsisConfigurationDefault configuration;\n     private final ServicesInjector servicesInjector;\n+    private final SpecificationLoaderSpi specificationLoader;\n \n     public RuntimeContextAbstract(\n             final DeploymentCategory deploymentCategory,\n             final IsisConfigurationDefault configuration,\n-            final ServicesInjector servicesInjector) {\n+            final ServicesInjector servicesInjector,\n+            final SpecificationLoaderSpi specificationLoader) {\n         this.deploymentCategory = deploymentCategory;\n         this.configuration = configuration;\n         this.servicesInjector = servicesInjector;\n+        this.specificationLoader = specificationLoader;\n     }\n \n \n     @Override\n     public DeploymentCategoryProvider getDeploymentCategoryProvider() {\n         return new DeploymentCategoryProviderAbstract() {\n+\n             @Override\n             public DeploymentCategory getDeploymentCategory() {\n                 return deploymentCategory;\n@@ -73,14 +66,13 @@ public ServicesInjector getServicesInjector() {\n         return servicesInjector;\n     }\n \n-    public void init() {\n-    }\n-\n-    public void shutdown() {\n+    @Override\n+    public SpecificationLoaderSpi getSpecificationLoader() {\n+        return specificationLoader;\n     }\n \n \n-    @Override\n+    //@Override\n     public void injectInto(final Object candidate) {\n         if (RuntimeContextAware.class.isAssignableFrom(candidate.getClass())) {\n             final RuntimeContextAware cast = RuntimeContextAware.class.cast(candidate);\n@@ -101,88 +93,4 @@ protected void injectSubcomponentsInto(final Object candidate) {\n         getSpecificationLoader().injectInto(candidate);\n     }\n \n-    @Override\n-    public SpecificationLoader getSpecificationLoader() {\n-        return specificationLookupDelegator;\n-    }\n-\n-    /**\n-     * Is injected into when the reflector is initialized.\n-     */\n-    @Override\n-    public void setSpecificationLoaderSpi(final SpecificationLoaderSpi specificationLoader) {\n-        this.specificationLookupDelegator.setDelegate(new SpecificationLoader() {\n-\n-            @Override\n-            public void injectInto(final Object candidate) {\n-                specificationLoader.injectInto(candidate);\n-            }\n-\n-            @Override\n-            public ObjectSpecification loadSpecification(final Class<?> cls) {\n-                return specificationLoader.loadSpecification(cls);\n-            }\n-\n-            @Override\n-            public Collection<ObjectSpecification> allSpecifications() {\n-                return specificationLoader.allSpecifications();\n-            }\n-\n-            @Override\n-            public ObjectSpecification lookupBySpecId(ObjectSpecId objectSpecId) {\n-                return specificationLoader.lookupBySpecId(objectSpecId);\n-            }\n-\n-            @Override\n-            public ObjectSpecification loadSpecification(String fullyQualifiedClassName) {\n-                return specificationLoader.loadSpecification(fullyQualifiedClassName);\n-            }\n-\n-            @Override\n-            public boolean loadSpecifications(List<Class<?>> typesToLoad) {\n-                return specificationLoader.loadSpecifications(typesToLoad);\n-            }\n-\n-            @Override\n-            public boolean loadSpecifications(List<Class<?>> typesToLoad, Class<?> typeToIgnore) {\n-                return specificationLoader.loadSpecifications(typesToLoad, typeToIgnore);\n-            }\n-\n-            @Override\n-            public boolean loaded(Class<?> cls) {\n-                return specificationLoader.loaded(cls);\n-            }\n-\n-            @Override\n-            public boolean loaded(String fullyQualifiedClassName) {\n-                return specificationLoader.loaded(fullyQualifiedClassName);\n-            }\n-\n-            @Override\n-            public ObjectSpecification introspectIfRequired(ObjectSpecification spec) {\n-                return specificationLoader.introspectIfRequired(spec);\n-            }\n-\n-            @Override\n-            public List<Class<?>> getServiceClasses() {\n-                return specificationLoader.getServiceClasses();\n-            }\n-\n-            @Override\n-            public boolean isServiceClass(Class<?> cls) {\n-                return specificationLoader.isServiceClass(cls);\n-            }\n-\n-            @Override\n-            public void invalidateCache(Class<?> domainClass) {\n-                specificationLoader.invalidateCache(domainClass);\n-            }\n-\n-            @Override\n-            public boolean isInjectorMethodFor(Method method, Class<? extends Object> serviceClass) {\n-                return specificationLoader.isInjectorMethodFor(method, serviceClass);\n-            }\n-        });\n-    }\n-\n }",
                "changes": 112,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/RuntimeContextAbstract.java"
            },
            {
                "additions": 4,
                "sha": "5a2439d448929ca5f8233a22203f910fd9212d16",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ServicesInjector.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ServicesInjector.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ServicesInjector.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -17,12 +17,14 @@\n package org.apache.isis.core.metamodel.runtimecontext;\n \n import java.util.List;\n+\n import org.apache.isis.applib.annotation.Programmatic;\n import org.apache.isis.applib.services.exceprecog.ExceptionRecognizer;\n import org.apache.isis.applib.services.publish.PublishingService;\n-import org.apache.isis.core.commons.components.Injectable;\n \n-public interface ServicesInjector extends Injectable {\n+public interface ServicesInjector {\n+\n+    void injectInto(final Object candidate);\n \n     /**\n      * All registered services, as an immutable {@link List}.",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/ServicesInjector.java"
            },
            {
                "additions": 7,
                "sha": "355c41886058525dce616773b1bd5e6e30dcd212",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/noruntime/RuntimeContextNoRuntime.java",
                "deletions": 4,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/noruntime/RuntimeContextNoRuntime.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/noruntime/RuntimeContextNoRuntime.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -42,6 +42,7 @@\n import org.apache.isis.core.metamodel.runtimecontext.RuntimeContextAbstract;\n import org.apache.isis.core.metamodel.runtimecontext.ServicesInjector;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n+import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.metamodel.spec.feature.OneToManyAssociation;\n import org.apache.isis.core.metamodel.transactions.TransactionState;\n import org.apache.isis.core.metamodel.transactions.TransactionStateProvider;\n@@ -55,15 +56,17 @@\n     private final MessageBrokerServiceAbstract messageBrokerService;\n \n     public RuntimeContextNoRuntime(\n-            final ServicesInjector servicesInjector) {\n-        this(DeploymentCategory.PRODUCTION, new IsisConfigurationDefault(null), servicesInjector);\n+            final ServicesInjector servicesInjector,\n+            final SpecificationLoaderSpi specificationLoader) {\n+        this(DeploymentCategory.PRODUCTION, new IsisConfigurationDefault(null), servicesInjector, specificationLoader);\n     }\n \n     public RuntimeContextNoRuntime(\n             final DeploymentCategory deploymentCategory,\n             final IsisConfigurationDefault isisConfiguration,\n-            final ServicesInjector servicesInjector) {\n-        super(deploymentCategory, isisConfiguration, servicesInjector);\n+            final ServicesInjector servicesInjector,\n+            final SpecificationLoaderSpi specificationLoader) {\n+        super(deploymentCategory, isisConfiguration, servicesInjector, specificationLoader);\n         authenticationSessionProvider = new AuthenticationSessionProviderAbstract() {\n             @Override\n             public AuthenticationSession getAuthenticationSession() {",
                "changes": 11,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/runtimecontext/noruntime/RuntimeContextNoRuntime.java"
            },
            {
                "additions": 3,
                "sha": "8761a9b4eb2285a4cbca76ab929b5d5d05ac30ca",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorDefault.java",
                "deletions": 11,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorDefault.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -56,7 +56,7 @@\n /**\n  * Must be a thread-safe.\n  */\n-public class ServicesInjectorDefault implements ServicesInjectorSpi, SpecificationLoaderAware {\n+public class ServicesInjectorDefault implements ServicesInjectorSpi {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ServicesInjectorDefault.class);\n \n@@ -73,6 +73,8 @@\n \n     private final Map<Class<?>, Object> serviceByConcreteType = Maps.newHashMap();\n \n+    private final InjectorMethodEvaluator injectorMethodEvaluator;\n+\n     public ServicesInjectorDefault(final List<Object> services) {\n         this(services, null);\n     }\n@@ -452,14 +454,4 @@ public boolean apply(final Object input) {\n \n     //endregion\n \n-    //region > injected dependencies\n-\n-    private InjectorMethodEvaluator injectorMethodEvaluator;\n-\n-    @Override\n-    public void setSpecificationLoader(final SpecificationLoader specificationLookup) {\n-        injectorMethodEvaluator = specificationLookup;\n-    }\n-\n-    //endregion\n }",
                "changes": 14,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorDefault.java"
            },
            {
                "additions": 1,
                "sha": "9bf8d01a8bee80a25b7d6e530b935e8320429936",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorSpi.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorSpi.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorSpi.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -20,7 +20,6 @@\n package org.apache.isis.core.metamodel.services;\n \n import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n-import org.apache.isis.core.commons.components.Injectable;\n import org.apache.isis.core.metamodel.runtimecontext.ServicesInjector;\n \n /**\n@@ -29,7 +28,7 @@\n  * <p>\n  * Can be considered a mutable SPI to the {@link org.apache.isis.core.metamodel.runtimecontext.ServicesInjector} immutable API.\n  */\n-public interface ServicesInjectorSpi extends ApplicationScopedComponent, Injectable, ServicesInjector {\n+public interface ServicesInjectorSpi extends ApplicationScopedComponent, ServicesInjector {\n \n     public void init();\n ",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/ServicesInjectorSpi.java"
            },
            {
                "additions": 2,
                "sha": "271a389196f3b786d62e88e5ba14a3520c490143",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoader.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoader.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoader.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -18,11 +18,11 @@\n \n import java.util.Collection;\n import java.util.List;\n-import org.apache.isis.core.commons.components.Injectable;\n+\n import org.apache.isis.core.metamodel.facets.FacetFactory;\n import org.apache.isis.core.metamodel.facets.object.autocomplete.AutoCompleteFacet;\n \n-public interface SpecificationLoader extends Injectable, InjectorMethodEvaluator {\n+public interface SpecificationLoader {\n \n     ObjectSpecification lookupBySpecId(ObjectSpecId objectSpecId);\n ",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoader.java"
            },
            {
                "additions": 0,
                "sha": "5447e123dfafa6b46dc57f3cc75b2a66c6c9a9dd",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderAbstract.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderAbstract.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -18,7 +18,6 @@\n \n public abstract class SpecificationLoaderAbstract implements SpecificationLoader {\n \n-    @Override\n     public void injectInto(final Object candidate) {\n         if (SpecificationLoaderAware.class.isAssignableFrom(candidate.getClass())) {\n             final SpecificationLoaderAware cast = SpecificationLoaderAware.class.cast(candidate);",
                "changes": 1,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderAbstract.java"
            },
            {
                "additions": 0,
                "sha": "7dec35b3966baa456dcaaee9edc072b26e6dfeee",
                "status": "removed",
                "raw_url": "https://github.com/apache/isis/raw/39771a14da83a397ab2d6654cda79b2f94332b42/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderDelegator.java",
                "deletions": 112,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderDelegator.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderDelegator.java?ref=39771a14da83a397ab2d6654cda79b2f94332b42",
                "patch": "@@ -1,112 +0,0 @@\n-/**\n- *  Licensed to the Apache Software Foundation (ASF) under one or more\n- *  contributor license agreements.  See the NOTICE file distributed with\n- *  this work for additional information regarding copyright ownership.\n- *  The ASF licenses this file to You under the Apache License, Version 2.0\n- *  (the \"License\"); you may not use this file except in compliance with\n- *  the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- */\n-package org.apache.isis.core.metamodel.spec;\n-\n-import java.lang.reflect.Method;\n-import java.util.Collection;\n-import java.util.List;\n-\n-/**\n- * Allows a {@link SpecificationLoader} to be provided even if the concrete\n- * implementation is only available later.\n- */\n-public class SpecificationLoaderDelegator extends SpecificationLoaderAbstract {\n-\n-    private SpecificationLoader specificationLoaderDelegate;\n-\n-    public void setDelegate(final SpecificationLoader specificationLoaderDelegate) {\n-        this.specificationLoaderDelegate = specificationLoaderDelegate;\n-    }\n-\n-    @Override\n-    public ObjectSpecification loadSpecification(final Class<?> cls) {\n-        if (specificationLoaderDelegate == null) {\n-            throw new IllegalStateException(\"No SpecificationLookup provided\");\n-        }\n-        return specificationLoaderDelegate.loadSpecification(cls);\n-    }\n-\n-    @Override\n-    public Collection<ObjectSpecification> allSpecifications() {\n-        return specificationLoaderDelegate.allSpecifications();\n-    }\n-\n-    @Override\n-    public ObjectSpecification lookupBySpecId(ObjectSpecId objectSpecId) {\n-        return specificationLoaderDelegate.lookupBySpecId(objectSpecId);\n-    }\n-\n-    @Override\n-    public boolean loadSpecifications(List<Class<?>> typesToLoad, Class<?> typeToIgnore) {\n-        return specificationLoaderDelegate.loadSpecifications(typesToLoad, typeToIgnore);\n-    }\n-\n-    @Override\n-    public ObjectSpecification loadSpecification(String fullyQualifiedClassName) {\n-        return specificationLoaderDelegate.loadSpecification(fullyQualifiedClassName);\n-    }\n-\n-    @Override\n-    public boolean loaded(Class<?> cls) {\n-        return specificationLoaderDelegate.loaded(cls);\n-    }\n-\n-    @Override\n-    public boolean loaded(String fullyQualifiedClassName) {\n-        return specificationLoaderDelegate.loaded(fullyQualifiedClassName);\n-    }\n-\n-    @Override\n-    public boolean loadSpecifications(List<Class<?>> typesToLoad) {\n-        return specificationLoaderDelegate.loadSpecifications(typesToLoad);\n-    }\n-\n-    @Override\n-    public ObjectSpecification introspectIfRequired(ObjectSpecification spec) {\n-        return specificationLoaderDelegate.introspectIfRequired(spec);\n-    }\n-\n-    @Override\n-    public List<Class<?>> getServiceClasses() {\n-        return specificationLoaderDelegate.getServiceClasses();\n-    }\n-    @Override\n-    public boolean isServiceClass(Class<?> cls) {\n-        return specificationLoaderDelegate.isServiceClass(cls);\n-    }\n-\n-    @Override\n-    public void invalidateCache(Class<?> domainClass) {\n-        specificationLoaderDelegate.invalidateCache(domainClass);\n-    }\n-\n-    @Override\n-    public boolean isInjectorMethodFor(Method method, Class<? extends Object> serviceClass) {\n-        return specificationLoaderDelegate.isInjectorMethodFor(method, serviceClass);\n-    }\n-\n-    @Override\n-    public void injectInto(Object candidate) {\n-        super.injectInto(candidate);\n-        if(specificationLoaderDelegate != null) {\n-            specificationLoaderDelegate.injectInto(candidate);\n-        }\n-    }\n-\n-\n-\n-}",
                "changes": 112,
                "blob_url": "https://github.com/apache/isis/blob/39771a14da83a397ab2d6654cda79b2f94332b42/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderDelegator.java"
            },
            {
                "additions": 2,
                "sha": "130ced23218de3a9fc510e73542ed6beed764f58",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderSpi.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderSpi.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderSpi.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -25,12 +25,13 @@\n \n public interface SpecificationLoaderSpi extends ApplicationScopedComponent, DebuggableWithTitle, SpecificationLoader {\n \n+    void injectInto(final Object candidate);\n+\n     public void init();\n     public void shutdown();\n \n     /**\n      * Specify the services to pro-actively prime the cache, and to initialize them also.\n-     * @param services\n      */\n     void setServiceInjector(ServicesInjectorSpi services);\n ",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/spec/SpecificationLoaderSpi.java"
            },
            {
                "additions": 16,
                "sha": "04ff7c933735a7c9a7d875682afa6721f84d2a7d",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefault.java",
                "deletions": 41,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefault.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,7 +19,6 @@\n \n package org.apache.isis.core.metamodel.specloader;\n \n-import java.lang.reflect.Method;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n@@ -57,7 +56,6 @@\n import org.apache.isis.core.metamodel.runtimecontext.noruntime.RuntimeContextNoRuntime;\n import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n import org.apache.isis.core.metamodel.spec.FreeStandingList;\n-import org.apache.isis.core.metamodel.spec.InjectorMethodEvaluator;\n import org.apache.isis.core.metamodel.spec.ObjectSpecId;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n import org.apache.isis.core.metamodel.spec.ObjectSpecificationDependencies;\n@@ -118,23 +116,12 @@\n \n     private final ClassSubstitutor classSubstitutor = new ClassSubstitutor();\n \n-    /**\n-     * Injected in the constructor.\n-     */\n+    private final DeploymentCategory deploymentCategory;\n     private final IsisConfiguration configuration;\n-    /**\n-     * Injected in the constructor.\n-     */\n     private final ProgrammingModel programmingModel;\n-\n-    /**\n-     * Defaulted in the constructor.\n-     */\n     private final FacetProcessor facetProcessor;\n \n     /**\n-     * Initialized in the constructor.\n-     * \n      * <p>\n      * {@link FacetDecorator}s must be added prior to {@link #init()\n      * initialization.}\n@@ -146,9 +133,8 @@\n      * {@link RuntimeContextNoRuntime}) otherwise.\n      * \n      * <p>\n-     * Should be injected when used by framework, but will default to a no-op\n-     * implementation if the metamodel is being used standalone (eg for a\n-     * code-generator).\n+     * Should be injected when used by framework, but will default to a no-op implementation if the metamodel is\n+     * being used standalone (eg for a code-generator).\n      */\n     private RuntimeContext runtimeContext;\n \n@@ -163,26 +149,29 @@\n      * Populated in {@link SpecificationLoaderSpi#setServiceInjector(org.apache.isis.core.metamodel.services.ServicesInjectorSpi)}.\n      */\n     private ServicesInjectorSpi servicesInjector;\n-\n+    private ValidationFailures validationFailures;\n \n     // /////////////////////////////////////////////////////////////\n     // Constructor\n     // /////////////////////////////////////////////////////////////\n \n     public ObjectReflectorDefault(\n+            final DeploymentCategory deploymentCategory,\n             final IsisConfiguration configuration,\n             final ProgrammingModel programmingModel,\n             final Set<FacetDecorator> facetDecorators,\n             final MetaModelValidator metaModelValidator,\n             final List<LayoutMetadataReader> layoutMetadataReaders) {\n \n+        ensureThatArg(deploymentCategory, is(notNullValue()));\n         ensureThatArg(configuration, is(notNullValue()));\n         ensureThatArg(programmingModel, is(notNullValue()));\n         ensureThatArg(facetDecorators, is(notNullValue()));\n         ensureThatArg(metaModelValidator, is(notNullValue()));\n         ensureThatArg(layoutMetadataReaders, is(notNullValue()));\n         ensureThatArg(layoutMetadataReaders, is(not(emptyCollectionOf(LayoutMetadataReader.class))));\n \n+        this.deploymentCategory = deploymentCategory;\n         this.configuration = configuration;\n         this.programmingModel = programmingModel;\n \n@@ -227,8 +216,10 @@ public void validateAndAssert() {\n     }\n \n     public ValidationFailures validate() {\n-        ValidationFailures validationFailures = new ValidationFailures();\n-        metaModelValidator.validate(validationFailures);\n+        if(validationFailures == null) {\n+            validationFailures = new ValidationFailures();\n+            metaModelValidator.validate(validationFailures);\n+        }\n         return validationFailures;\n     }\n \n@@ -239,10 +230,9 @@ public void initialize() {\n \n         // default subcomponents\n         if (runtimeContext == null) {\n-            runtimeContext = new RuntimeContextNoRuntime(servicesInjector);\n+            runtimeContext = new RuntimeContextNoRuntime(servicesInjector, this);\n         }\n-        injectInto(runtimeContext);\n-        injectInto(specificationTraverser);\n+\n         injectInto(metaModelValidator);\n \n         // wire subcomponents into each other\n@@ -323,13 +313,6 @@ public void invalidateCache(final Class<?> cls) {\n         }\n     }\n \n-    //region > isInjectorMethodFor\n-    private final InjectorMethodEvaluator injectorMethodEvaluator = new InjectorMethodEvaluatorDefault();\n-\n-    public boolean isInjectorMethodFor(Method method, final Class<?> serviceClass) {\n-        return injectorMethodEvaluator.isInjectorMethodFor(method, serviceClass);\n-    }\n-    //endregion\n \n     private void recache(final ObjectSpecification newSpec) {\n         getCache().recache(newSpec);\n@@ -443,17 +426,13 @@ public boolean loadSpecifications(final List<Class<?>> typesToLoad) {\n     private ObjectSpecification createSpecification(final Class<?> cls) {\n \n         final ServicesInjector servicesInjector = getRuntimeContext().getServicesInjector();\n-        final PersistenceSessionService persistenceSessionService =\n-                getRuntimeContext().getPersistenceSessionService();\n+        final PersistenceSessionService persistenceSessionService = getRuntimeContext().getPersistenceSessionService();\n \n         final ObjectSpecificationDependencies specContext =\n-                new ObjectSpecificationDependencies(\n-                        getDeploymentCategory(), servicesInjector, this, facetProcessor);\n+                new ObjectSpecificationDependencies(deploymentCategory, servicesInjector, this, facetProcessor);\n \n         final ObjectMemberDependencies objectMemberDependencies =\n-                new ObjectMemberDependencies(\n-                this, servicesInjector,\n-                        persistenceSessionService);\n+                new ObjectMemberDependencies(this, servicesInjector, persistenceSessionService);\n \n         // ... and create the specs\n         if (FreeStandingList.class.isAssignableFrom(cls)) {\n@@ -467,10 +446,6 @@ private ObjectSpecification createSpecification(final Class<?> cls) {\n         }\n     }\n \n-    private DeploymentCategory getDeploymentCategory() {\n-        return runtimeContext.getDeploymentCategoryProvider().getDeploymentCategory();\n-    }\n-\n     private Class<?> loadBuiltIn(final String className) throws ClassNotFoundException {\n         final Class<?> builtIn = ClassUtil.getBuiltIn(className);\n         if (builtIn != null) {",
                "changes": 57,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefault.java"
            },
            {
                "additions": 4,
                "sha": "b132603768932819e25bf4ff2eea0221c8585858",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorInstaller.java",
                "deletions": 1,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorInstaller.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorInstaller.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -21,6 +21,7 @@\n \n import java.util.Collection;\n import org.apache.isis.core.commons.components.Installer;\n+import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n \n@@ -31,7 +32,9 @@\n \n     static String TYPE = \"reflector\";\n \n-    SpecificationLoaderSpi createReflector(Collection<MetaModelRefiner> metaModelRefiners);\n+    SpecificationLoaderSpi createReflector(\n+            final DeploymentCategory deploymentCategory,\n+            final Collection<MetaModelRefiner> metaModelRefiners);\n \n     void addFacetDecoratorInstaller(final FacetDecoratorInstaller decoratorInstaller);\n ",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorInstaller.java"
            },
            {
                "additions": 3,
                "sha": "18a2ed5b989f5da6737a52b302a77ba0e4dd4fd5",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/transactions/TransactionStateProvider.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/transactions/TransactionStateProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/core/metamodel/transactions/TransactionStateProvider.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -19,8 +19,9 @@\n \n package org.apache.isis.core.metamodel.transactions;\n \n-import org.apache.isis.core.commons.components.Injectable;\n+public interface TransactionStateProvider {\n+\n+    void injectInto(final Object candidate);\n \n-public interface TransactionStateProvider extends Injectable {\n     public TransactionState getTransactionState();\n }",
                "changes": 5,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/core/metamodel/transactions/TransactionStateProvider.java"
            },
            {
                "additions": 7,
                "sha": "61dae2052c530478d6dc7cacf560f2b0844fea38",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorHelper.java",
                "deletions": 3,
                "filename": "core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorHelper.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorHelper.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -25,6 +25,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n+import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n import org.apache.isis.core.metamodel.facetdecorator.FacetDecorator;\n import org.apache.isis.core.metamodel.layoutmetadata.LayoutMetadataReader;\n@@ -42,12 +43,13 @@\n     private JavaReflectorHelper(){}\n     \n     public static SpecificationLoaderSpi createObjectReflector(\n+            final DeploymentCategory deploymentCategory,\n+            final IsisConfiguration configuration,\n             final ProgrammingModel programmingModel,\n             final Collection<MetaModelRefiner> metaModelRefiners,\n             final Set<FacetDecorator> facetDecorators,\n             final List<LayoutMetadataReader> layoutMetadataReaders,\n-            final MetaModelValidator mmv,\n-            final IsisConfiguration configuration) {\n+            final MetaModelValidator mmv) {\n \n         MetaModelValidatorComposite metaModelValidator = MetaModelValidatorComposite.asComposite(mmv);\n         for (MetaModelRefiner metaModelRefiner : metaModelRefiners) {\n@@ -60,7 +62,9 @@ public static SpecificationLoaderSpi createObjectReflector(\n             programmingModel.refineMetaModelValidator(metaModelValidator, configuration);\n         }\n \n-        return new ObjectReflectorDefault(configuration, programmingModel, facetDecorators, metaModelValidator, layoutMetadataReaders);\n+        return new ObjectReflectorDefault(\n+                deploymentCategory, configuration,\n+                programmingModel, facetDecorators, metaModelValidator, layoutMetadataReaders);\n     }\n \n }",
                "changes": 10,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorHelper.java"
            },
            {
                "additions": 5,
                "sha": "f287ec045c059fa87e9e6e72724bc121bbdf9ecc",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorInstallerNoDecorators.java",
                "deletions": 2,
                "filename": "core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorInstallerNoDecorators.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorInstallerNoDecorators.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.isis.core.commons.config.InstallerAbstract;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.factory.InstanceUtil;\n+import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n import org.apache.isis.core.metamodel.facetdecorator.FacetDecorator;\n import org.apache.isis.core.metamodel.facets.FacetFactory;\n@@ -73,14 +74,16 @@ public JavaReflectorInstallerNoDecorators(final String name) {\n     // /////////////////////////////////////////////////////\n \n     @Override\n-    public SpecificationLoaderSpi createReflector(final Collection<MetaModelRefiner> metaModelRefiners) {\n+    public SpecificationLoaderSpi createReflector(\n+            final DeploymentCategory deploymentCategory,\n+            final Collection<MetaModelRefiner> metaModelRefiners) {\n \n         final ProgrammingModel programmingModel = createProgrammingModel(getConfiguration());\n         final Set<FacetDecorator> facetDecorators = createFacetDecorators(getConfiguration());\n         final MetaModelValidator mmv = createMetaModelValidator(getConfiguration());\n         final List<LayoutMetadataReader> layoutMetadataReaders = createLayoutMetadataReaders(getConfiguration());\n \n-        return JavaReflectorHelper.createObjectReflector(programmingModel, metaModelRefiners, facetDecorators, layoutMetadataReaders, mmv, getConfiguration());\n+        return JavaReflectorHelper.createObjectReflector(deploymentCategory, getConfiguration(), programmingModel, metaModelRefiners, facetDecorators, layoutMetadataReaders, mmv);\n     }\n \n ",
                "changes": 7,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/main/java/org/apache/isis/progmodels/dflt/JavaReflectorInstallerNoDecorators.java"
            },
            {
                "additions": 2,
                "sha": "3dd2ad2bb54313c4d295b62088e7ed9be6656f4c",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelBaseTest_constructDefaults.java",
                "deletions": 24,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelBaseTest_constructDefaults.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelBaseTest_constructDefaults.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -23,15 +23,12 @@\n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n+\n import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n import org.apache.isis.core.metamodel.runtimecontext.RuntimeContext;\n import org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2;\n import org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2.Mode;\n \n-import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.CoreMatchers.notNullValue;\n-import static org.junit.Assert.assertThat;\n-\n public class IsisMetaModelBaseTest_constructDefaults {\n \n     @Rule\n@@ -48,28 +45,9 @@\n     @Before\n     public void setUp() {\n         context.ignoring(mockProgrammingModel);\n-        metaModel = new IsisMetaModel(mockContext, mockProgrammingModel);\n+        metaModel = new IsisMetaModel(mockProgrammingModel);\n     }\n \n-    @Test\n-    public void shouldDefaultConfiguration() {\n-        assertThat(metaModel.getConfiguration(), is(notNullValue()));\n-    }\n-\n-    @Test\n-    public void shouldDefaultProgrammingModelFacets() {\n-        assertThat(metaModel.getProgrammingModelFacets(), is(notNullValue()));\n-    }\n-\n-    @Test\n-    public void shouldDefaultFacetDecorators() {\n-        assertThat(metaModel.getFacetDecorators(), is(notNullValue()));\n-    }\n-\n-    @Test\n-    public void shouldHaveNoFacetDecorators() {\n-        assertThat(metaModel.getFacetDecorators().size(), is(0));\n-    }\n \n     @Test(expected = IllegalStateException.class)\n     public void shouldNotBeAbleToShutdown() {",
                "changes": 26,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelBaseTest_constructDefaults.java"
            },
            {
                "additions": 3,
                "sha": "85730670b4ce5cb031ac5898adbe0b702c1c7c3b",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_constructWithServices.java",
                "deletions": 3,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_constructWithServices.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_constructWithServices.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -62,13 +62,13 @@ public void setUp() throws Exception {\n \n     @Test\n     public void shouldSucceedWithoutThrowingAnyExceptions() {\n-        metaModel = new IsisMetaModel(mockContext, mockProgrammingModel);\n+        metaModel = new IsisMetaModel(mockProgrammingModel);\n     }\n \n     @Test\n     public void shouldBeAbleToRegisterServices() {\n-        metaModel = new IsisMetaModel(mockContext, mockProgrammingModel, mockService1, mockService2);\n-        final List<Object> services = metaModel.getServices();\n+        metaModel = new IsisMetaModel(mockProgrammingModel, mockService1, mockService2);\n+        final List<Object> services = metaModel.getServicesInjector().getRegisteredServices();\n         assertThat(services.size(), is(3));\n         assertThat(services, IsisMatchers.containsObjectOfType(SomeRepo.class));\n         assertThat(services, IsisMatchers.containsObjectOfType(SomeOtherRepo.class));",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_constructWithServices.java"
            },
            {
                "additions": 1,
                "sha": "929fcca299fef24a5edbf6f1214bf5c3f943e523",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_getDomainObjectContainer.java",
                "deletions": 1,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_getDomainObjectContainer.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_getDomainObjectContainer.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -45,7 +45,7 @@\n \n     @Before\n     public void setUp() {\n-        metaModel = new IsisMetaModel(mockContext, mockProgrammingModel);\n+        metaModel = new IsisMetaModel(mockProgrammingModel);\n         expectingMetaModelToBeInitialized();\n         metaModel.init();\n     }",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_getDomainObjectContainer.java"
            },
            {
                "additions": 0,
                "sha": "ff17185b8bedf1de038c18479fc732bd9c097f6e",
                "status": "removed",
                "raw_url": "https://github.com/apache/isis/raw/39771a14da83a397ab2d6654cda79b2f94332b42/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_init.java",
                "deletions": 171,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_init.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_init.java?ref=39771a14da83a397ab2d6654cda79b2f94332b42",
                "patch": "@@ -1,171 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- *\n- *        http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-\n-package org.apache.isis.core.metamodel.app;\n-\n-import java.util.TreeSet;\n-\n-import com.google.common.collect.Lists;\n-\n-import org.jmock.Expectations;\n-import org.jmock.Sequence;\n-import org.jmock.auto.Mock;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Rule;\n-import org.junit.Test;\n-\n-import org.apache.isis.core.commons.authentication.AuthenticationSessionProvider;\n-import org.apache.isis.core.commons.config.IsisConfiguration;\n-import org.apache.isis.core.metamodel.runtimecontext.MessageBrokerService;\n-import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager;\n-import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n-import org.apache.isis.core.metamodel.deployment.DeploymentCategoryProviderAbstract;\n-import org.apache.isis.core.metamodel.facetdecorator.FacetDecorator;\n-import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n-import org.apache.isis.core.metamodel.runtimecontext.RuntimeContext;\n-import org.apache.isis.core.metamodel.runtimecontext.ServicesInjector;\n-import org.apache.isis.core.metamodel.spec.SpecificationLoader;\n-import org.apache.isis.core.unittestsupport.jmocking.IsisActions;\n-import org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2;\n-import org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2.Mode;\n-\n-public class IsisMetaModelTest_init {\n-\n-    @Rule\n-    public JUnitRuleMockery2 context = JUnitRuleMockery2.createFor(Mode.INTERFACES_AND_CLASSES);\n-\n-    @Mock\n-    private IsisConfiguration mockConfiguration;\n-    @Mock\n-    private ProgrammingModel mockProgrammingModelFacets;\n-    @Mock\n-    private AuthenticationSessionProvider mockAuthenticationSessionProvider;\n-    @Mock\n-    private SpecificationLoader mockSpecificationLoader;\n-    @Mock\n-    private AdapterManager mockAdapterManager;\n-    @Mock\n-    private MessageBrokerService mockMessageBrokerService;\n-    @Mock\n-    private ServicesInjector mockDependencyInjector;\n-    @Mock\n-    private FacetDecorator mockFacetDecorator;\n-    @Mock\n-    private RuntimeContext mockRuntimeContext;\n-\n-    private IsisMetaModel metaModel;\n-\n-    @Before\n-    public void setUp() {\n-        expectingMetaModelToBeInitialized();\n-        metaModel = new IsisMetaModel(mockRuntimeContext, mockProgrammingModelFacets);\n-    }\n-\n-    private void expectingMetaModelToBeInitialized() {\n-        final Sequence initSequence = context.sequence(\"init\");\n-        context.checking(new Expectations() {\n-            {\n-                allowing(mockRuntimeContext).injectInto(with(any(Object.class)));\n-                will(IsisActions.injectInto());\n-                \n-                allowing(mockRuntimeContext).getAuthenticationSessionProvider();\n-                will(returnValue(mockAuthenticationSessionProvider));\n-\n-                allowing(mockRuntimeContext).getSpecificationLoader();\n-                will(returnValue(mockSpecificationLoader));\n-\n-                allowing(mockRuntimeContext).getMessageBrokerService();\n-                will(returnValue(mockMessageBrokerService));\n-\n-                allowing(mockRuntimeContext).getServicesInjector();\n-                will(returnValue(mockDependencyInjector));\n-\n-                allowing(mockRuntimeContext).getDeploymentCategoryProvider();\n-                will(returnValue(new DeploymentCategoryProviderAbstract() {\n-                    @Override\n-                    public DeploymentCategory getDeploymentCategory() {\n-                        return DeploymentCategory.PRODUCTION;\n-                    }\n-                }));\n-\n-                oneOf(mockProgrammingModelFacets).init();\n-                inSequence(initSequence);\n-                \n-                oneOf(mockProgrammingModelFacets).getList();\n-                inSequence(initSequence);\n-                will(returnValue(Lists.newArrayList()));\n-                \n-                oneOf(mockRuntimeContext).init();\n-                inSequence(initSequence);\n-            }\n-        });\n-        context.ignoring(mockProgrammingModelFacets);\n-    }\n-\n-    @Ignore // too much effort, not used\n-    @Test\n-    public void shouldSucceedWithoutThrowingAnyExceptions() {\n-        metaModel.init();\n-    }\n-\n-    @Ignore // too much effort, not used\n-    @Test(expected = IllegalStateException.class)\n-    public void shouldNotBeAbleToChangeConfiguration() {\n-        metaModel.init();\n-        metaModel.setConfiguration(mockConfiguration);\n-    }\n-\n-    @Ignore // too much effort, not used\n-    @Test(expected = IllegalStateException.class)\n-    public void shouldNotBeAbleToChangeProgrammingModelFacets() {\n-        metaModel.init();\n-        metaModel.setProgrammingModelFacets(mockProgrammingModelFacets);\n-    }\n-\n-    @Ignore // too much effort, not used\n-    @Test(expected = IllegalStateException.class)\n-    public void shouldNotBeAbleToChangeFacetDecorators() {\n-        metaModel.init();\n-        metaModel.setFacetDecorators(new TreeSet<FacetDecorator>());\n-    }\n-\n-    @Ignore // too much effort, not used\n-    @Test(expected = UnsupportedOperationException.class)\n-    public void shouldNotBeAbleToAddToFacetDecorators() {\n-        metaModel.init();\n-        metaModel.getFacetDecorators().add(mockFacetDecorator);\n-    }\n-\n-    @Ignore // too much effort, not used\n-    @Test(expected = IllegalStateException.class)\n-    public void shouldNotBeAbleToInitializeAgain() {\n-        metaModel.init();\n-        //\n-        metaModel.init();\n-    }\n-\n-    @Ignore // too much effort, not used\n-    @Test\n-    public void shouldPrime() {\n-        metaModel.init();\n-\n-    }\n-\n-}",
                "changes": 171,
                "blob_url": "https://github.com/apache/isis/blob/39771a14da83a397ab2d6654cda79b2f94332b42/core/metamodel/src/test/java/org/apache/isis/core/metamodel/app/IsisMetaModelTest_init.java"
            },
            {
                "additions": 0,
                "sha": "9f15094bc508d849845a9e2232ac8e260c063a93",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/ProgrammableReflector.java",
                "deletions": 8,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/ProgrammableReflector.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/ProgrammableReflector.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -80,14 +80,6 @@ public boolean loaded(final String fullyQualifiedClassName) {\n     public void injectInto(final Object candidate) {\n     }\n \n-    //region > isInjectorMethodFor\n-\n-    private final Map<Method, Map<Class<?>, Boolean>> isInjectorMethod = Maps.newConcurrentMap();\n-\n-    public boolean isInjectorMethodFor(Method method, final Class<?> serviceClass) {\n-        return false;\n-    }\n-    //endregion\n \n     @Override\n     public void setRuntimeContext(final RuntimeContext runtimeContext) {",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/facets/ProgrammableReflector.java"
            },
            {
                "additions": 18,
                "sha": "914dcd25404c0ed6805f1570f91849986b89e663",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefaultTestAbstract.java",
                "deletions": 17,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefaultTestAbstract.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefaultTestAbstract.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -30,6 +30,7 @@\n import org.junit.Test;\n import org.junit.rules.ExpectedException;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n+import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n import org.apache.isis.core.metamodel.facetapi.Facet;\n import org.apache.isis.core.metamodel.facetdecorator.FacetDecorator;\n import org.apache.isis.core.metamodel.facets.actcoll.typeof.TypeOfFacet;\n@@ -79,14 +80,16 @@ public void setUp() throws Exception {\n             }\n         });\n \n-        runtimeContext = new RuntimeContextNoRuntime(new ServicesInjectorDefault(Collections.emptyList()));\n-        final ObjectReflectorDefault reflector = \n-                new ObjectReflectorDefault(\n+        final ObjectReflectorDefault reflector =\n+                new ObjectReflectorDefault(DeploymentCategory.PRODUCTION,\n                         mockConfiguration,\n                         new ProgrammingModelFacetsJava5(),\n                         new HashSet<FacetDecorator>(),\n                         new MetaModelValidatorDefault(),\n                         Lists.<LayoutMetadataReader>newArrayList(new LayoutMetadataReaderFromJson()));\n+        runtimeContext =\n+                new RuntimeContextNoRuntime(\n+                        new ServicesInjectorDefault(Collections.emptyList()), reflector);\n         reflector.setRuntimeContext(runtimeContext);\n         reflector.setServiceInjector(new ServicesInjectorDefault(Collections.<Object>singletonList(new DomainObjectContainerDefault())));\n         reflector.init();\n@@ -101,27 +104,25 @@ public void testLayoutMetadataReaderEmptyList() {\n         expectedException.expect(IllegalArgumentException.class);\n         expectedException.expectMessage(\"illegal argument, expected: is not an empty collection\");\n \n-        new ObjectReflectorDefault(\n-            mockConfiguration,\n-            new ProgrammingModelFacetsJava5(),\n-            new HashSet<FacetDecorator>(),\n-            new MetaModelValidatorDefault(),\n-            Lists.<LayoutMetadataReader>newArrayList()\n-        );\n+        new ObjectReflectorDefault(DeploymentCategory.PRODUCTION ,\n+                mockConfiguration,\n+                new ProgrammingModelFacetsJava5(),\n+                new HashSet<FacetDecorator>(),\n+                new MetaModelValidatorDefault(),\n+                Lists.<LayoutMetadataReader>newArrayList());\n     }\n \n     @Test\n     public void testLayoutMetadataReaderNull() {\n         expectedException.expect(IllegalArgumentException.class);\n         expectedException.expectMessage(\"illegal argument, expected: is not null\");\n \n-        new ObjectReflectorDefault(\n-            mockConfiguration,\n-            new ProgrammingModelFacetsJava5(),\n-            new HashSet<FacetDecorator>(),\n-            new MetaModelValidatorDefault(),\n-            null\n-        );\n+        new ObjectReflectorDefault(DeploymentCategory.PRODUCTION,\n+                mockConfiguration,\n+                new ProgrammingModelFacetsJava5(),\n+                new HashSet<FacetDecorator>(),\n+                new MetaModelValidatorDefault(),\n+                null);\n     }\n \n     @Test",
                "changes": 35,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/specloader/ObjectReflectorDefaultTestAbstract.java"
            },
            {
                "additions": 2,
                "sha": "a56a549a2f4083af9971100bcba511d5dee62423",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/testspec/ObjectSpecificationStub.java",
                "deletions": 1,
                "filename": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/testspec/ObjectSpecificationStub.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/metamodel/src/test/java/org/apache/isis/core/metamodel/testspec/ObjectSpecificationStub.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -72,7 +72,8 @@\n \n     public ObjectSpecificationStub(final Class<?> type) {\n         this(type.getName());\n-        runtimeContext = new RuntimeContextNoRuntime(new ServicesInjectorDefault(Collections.emptyList()));\n+        runtimeContext = new RuntimeContextNoRuntime(\n+                new ServicesInjectorDefault(Collections.emptyList()), null);\n     }\n \n     @Override",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/metamodel/src/test/java/org/apache/isis/core/metamodel/testspec/ObjectSpecificationStub.java"
            },
            {
                "additions": 1,
                "sha": "2124c1fe1a8fbe6943ba42110db637cd00f435ea",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/InstallerLookup.java",
                "deletions": 7,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/InstallerLookup.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/InstallerLookup.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -33,7 +33,6 @@\n import org.slf4j.LoggerFactory;\n \n import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n-import org.apache.isis.core.commons.components.Injectable;\n import org.apache.isis.core.commons.components.Installer;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationBuilder;\n@@ -91,7 +90,7 @@\n  * even if it has not been registered in <tt>installer-registry.properties</tt>\n  * : just specify the {@link Installer}'s fully qualified class name.\n  */\n-public class InstallerLookup implements InstallerRepository, ApplicationScopedComponent, IsisConfigurationBuilderAware, Injectable, SystemDependencyInjector {\n+public class InstallerLookup implements InstallerRepository, ApplicationScopedComponent, IsisConfigurationBuilderAware, SystemDependencyInjector {\n \n     private static final Logger LOG = LoggerFactory.getLogger(InstallerLookup.class);\n \n@@ -323,7 +322,6 @@ public void putConfigurationProperty(final String key, final String value) {\n         return candidate;\n     }\n \n-    @Override\n     public void injectInto(final Object candidate) {\n         if (SystemDependencyInjectorAware.class.isAssignableFrom(candidate.getClass())) {\n             final SystemDependencyInjectorAware cast = SystemDependencyInjectorAware.class.cast(candidate);\n@@ -347,10 +345,6 @@ public void injectInto(final Object candidate) {\n      */\n     private IsisConfigurationBuilder isisConfigurationBuilder;\n \n-    public IsisConfigurationBuilder getConfigurationBuilder() {\n-        return isisConfigurationBuilder;\n-    }\n-\n     @Override\n     @Inject\n     public void setConfigurationBuilder(final IsisConfigurationBuilder configurationLoader) {",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/InstallerLookup.java"
            },
            {
                "additions": 1,
                "sha": "0cec1f8c0d6b346ea276d89a3853032ca7de02c4",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/installerapi/PersistenceMechanismInstaller.java",
                "deletions": 3,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/installerapi/PersistenceMechanismInstaller.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/installerapi/PersistenceMechanismInstaller.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -23,7 +23,6 @@\n import org.apache.isis.core.commons.config.IsisConfigurationBuilderAware;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n-import org.apache.isis.core.runtime.persistence.internal.RuntimeContextFromSession;\n import org.apache.isis.core.runtime.system.DeploymentType;\n import org.apache.isis.core.runtime.system.persistence.PersistenceSession;\n import org.apache.isis.core.runtime.system.persistence.PersistenceSessionFactory;\n@@ -37,8 +36,7 @@\n \n     PersistenceSessionFactory createPersistenceSessionFactory(\n             final DeploymentType deploymentType,\n-            final ServicesInjectorSpi servicesInjector,\n             final IsisConfigurationDefault configuration,\n-            final RuntimeContextFromSession runtimeContext);\n+            final ServicesInjectorSpi servicesInjector);\n \n }",
                "changes": 4,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/installerregistry/installerapi/PersistenceMechanismInstaller.java"
            },
            {
                "additions": 1,
                "sha": "85dbd3e6660088582567d063ab1ed375ee248087",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adapter/PojoAdapter.java",
                "deletions": 1,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adapter/PojoAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adapter/PojoAdapter.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -428,7 +428,7 @@ public ObjectSpecification getElementSpecification() {\n      *\n      * <p>\n      *     Specifically, if an action which has been annotated (is copied by {@link org.apache.isis.core.metamodel.facets.actions.action.invocation.ActionInvocationFacet action invocation facet}), and for a parented collection\n-     *     (is copied by the {@link org.apache.isis.core.runtime.persistence.adaptermanager.AdapterManagerDefault adapter manager} when {@link org.apache.isis.core.runtime.persistence.adaptermanager.AdapterManagerDefault#adapterFor(Object, ObjectAdapter, OneToManyAssociation) creating} an adapter for a collection.\n+     *     (is copied by the {@link PersistenceSession} when {@link PersistenceSession#adapterFor(Object, ObjectAdapter, OneToManyAssociation) creating} an adapter for a collection.\n      * </p>\n      */\n     @Override",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adapter/PojoAdapter.java"
            },
            {
                "additions": 0,
                "sha": "6e13b6ab10bf22b008f17092b400dfb483e8b501",
                "status": "removed",
                "raw_url": "https://github.com/apache/isis/raw/39771a14da83a397ab2d6654cda79b2f94332b42/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adaptermanager/AdapterManagerDefault.java",
                "deletions": 136,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adaptermanager/AdapterManagerDefault.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adaptermanager/AdapterManagerDefault.java?ref=39771a14da83a397ab2d6654cda79b2f94332b42",
                "patch": "@@ -1,136 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- *\n- *        http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-\n-package org.apache.isis.core.runtime.persistence.adaptermanager;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import org.apache.isis.core.commons.components.SessionScopedComponent;\n-import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n-import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager;\n-import org.apache.isis.core.metamodel.adapter.mgr.AdapterManagerAware;\n-import org.apache.isis.core.metamodel.adapter.oid.Oid;\n-import org.apache.isis.core.metamodel.spec.feature.OneToManyAssociation;\n-import org.apache.isis.core.runtime.system.persistence.PersistenceSession;\n-\n-/**\n- * Responsible for managing the {@link ObjectAdapter adapter}s and {@link Oid\n- * identities} for each and every POJO that is being used by the framework.\n- *\n- * <p>\n- * It provides a consistent set of adapters in memory, providing an\n- * {@link ObjectAdapter adapter} for the POJOs that are in use ensuring that the\n- * same object is not loaded twice into memory.\n- *\n- * <p>\n- * Each POJO is given an {@link ObjectAdapter adapter} so that the framework can\n- * work with the POJOs even though it does not understand their types. Each POJO\n- * maps to an {@link ObjectAdapter adapter} and these are reused.\n- */\n-public class AdapterManagerDefault implements AdapterManager,\n-        SessionScopedComponent {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterManagerDefault.class);\n-\n-    //region > constructor and fields\n-\n-    private final PersistenceSession persistenceSession;\n-\n-    /**\n-     * For object store implementations (eg JDO) that do not provide any mechanism\n-     * to allow transient objects to be reattached.\n-     * \n-     * @see <a href=\"http://www.datanucleus.org/servlet/forum/viewthread_thread,7238_lastpage,yes#35976\">this thread</a>\n-     */\n-    public AdapterManagerDefault(\n-            final PersistenceSession persistenceSession) {\n-        this.persistenceSession = persistenceSession;\n-\n-    }\n-    //endregion\n-\n-    //region > open, close\n-    public void open() {\n-    }\n-\n-    public void close() {\n-    }\n-    //endregion\n-\n-    //region > getAdapterFor\n-    @Override\n-    public ObjectAdapter getAdapterFor(final Object pojo) {\n-        return persistenceSession.getAdapterFor(pojo);\n-    }\n-\n-    @Override\n-    public ObjectAdapter getAdapterFor(final Oid oid) {\n-        return persistenceSession.getAdapterFor(oid);\n-    }\n-    //endregion\n-\n-    //region > adapterFor\n-\n-    @Override\n-    public ObjectAdapter adapterFor(final Object pojo) {\n-        return persistenceSession.adapterFor(pojo);\n-    }\n-\n-    @Override\n-    public ObjectAdapter adapterFor(\n-            final Object pojo, final ObjectAdapter parentAdapter, final OneToManyAssociation collection) {\n-        return persistenceSession.adapterFor(pojo, parentAdapter, collection);\n-    }\n-\n-    //endregion\n-\n-\n-    //region > mapRecreatedPojo\n-\n-    @Override\n-    public ObjectAdapter mapRecreatedPojo(final Oid oid, final Object recreatedPojo) {\n-        return persistenceSession.mapRecreatedPojo(oid, recreatedPojo);\n-    }\n-\n-    //endregion\n-\n-    //region > removeAdapter\n-    @Override\n-    public void removeAdapter(final ObjectAdapter adapter) {\n-        persistenceSession.removeAdapter(adapter);\n-    }\n-\n-    //endregion\n-\n-\n-    //region > Injectable\n-\n-    @Override\n-    public void injectInto(final Object candidate) {\n-        if (AdapterManagerAware.class.isAssignableFrom(candidate.getClass())) {\n-            final AdapterManagerAware cast = AdapterManagerAware.class.cast(candidate);\n-            cast.setAdapterManager(this);\n-        }\n-    }\n-    //endregion\n-\n-\n-\n-}",
                "changes": 136,
                "blob_url": "https://github.com/apache/isis/blob/39771a14da83a397ab2d6654cda79b2f94332b42/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adaptermanager/AdapterManagerDefault.java"
            },
            {
                "additions": 4,
                "sha": "f2cb9bc1a98145cbeabf206916cde5f60ebb89a3",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/internal/RuntimeContextFromSession.java",
                "deletions": 3,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/internal/RuntimeContextFromSession.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/internal/RuntimeContextFromSession.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -31,7 +31,6 @@\n import org.apache.isis.core.commons.authentication.MessageBroker;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n import org.apache.isis.core.metamodel.adapter.ObjectAdapter;\n-import org.apache.isis.core.metamodel.adapter.mgr.AdapterManager;\n import org.apache.isis.core.metamodel.adapter.mgr.AdapterManagerAware;\n import org.apache.isis.core.metamodel.adapter.oid.Oid;\n import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n@@ -44,6 +43,7 @@\n import org.apache.isis.core.metamodel.runtimecontext.RuntimeContextAbstract;\n import org.apache.isis.core.metamodel.runtimecontext.ServicesInjector;\n import org.apache.isis.core.metamodel.spec.ObjectSpecification;\n+import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.metamodel.spec.feature.OneToManyAssociation;\n import org.apache.isis.core.metamodel.transactions.TransactionState;\n import org.apache.isis.core.metamodel.transactions.TransactionStateProvider;\n@@ -73,8 +73,9 @@\n     public RuntimeContextFromSession(\n             final DeploymentCategory deploymentCategory,\n             final IsisConfigurationDefault configuration,\n-            final ServicesInjector servicesInjector) {\n-        super(deploymentCategory, configuration, servicesInjector);\n+            final ServicesInjector servicesInjector,\n+            final SpecificationLoaderSpi specificationLoader) {\n+        super(deploymentCategory, configuration, servicesInjector, specificationLoader);\n \n         this.authenticationSessionProvider = new AuthenticationSessionProviderAbstract() {\n ",
                "changes": 7,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/internal/RuntimeContextFromSession.java"
            },
            {
                "additions": 3,
                "sha": "bb9695bbaa3028bdf64be24ec912fa6576d30154",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/runner/IsisInjectModule.java",
                "deletions": 3,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/runner/IsisInjectModule.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/runner/IsisInjectModule.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -48,20 +48,20 @@ private static InstallerLookup defaultInstallerLookup() {\n         return new InstallerLookup();\n     }\n \n-    private static IsisConfigurationBuilderDefault defaultConfigurationBuider() {\n+    private static IsisConfigurationBuilderDefault defaultConfigurationBuilder() {\n         return new IsisConfigurationBuilderDefault();\n     }\n \n     public IsisInjectModule(final DeploymentType deploymentType) {\n-        this(deploymentType, defaultConfigurationBuider(), defaultInstallerLookup());\n+        this(deploymentType, defaultConfigurationBuilder(), defaultInstallerLookup());\n     }\n \n     public IsisInjectModule(final DeploymentType deploymentType, final IsisConfigurationBuilder isisConfigurationBuilder) {\n         this(deploymentType, isisConfigurationBuilder, defaultInstallerLookup());\n     }\n \n     public IsisInjectModule(final DeploymentType deploymentType, final InstallerLookup installerLookup) {\n-        this(deploymentType, defaultConfigurationBuider(), installerLookup);\n+        this(deploymentType, defaultConfigurationBuilder(), installerLookup);\n     }\n \n     public IsisInjectModule(final DeploymentType deploymentType, final IsisConfigurationBuilder isisConfigurationBuilder, final InstallerLookup installerLookup) {",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/runner/IsisInjectModule.java"
            },
            {
                "additions": 49,
                "sha": "794c0939ac2e8f221aeac5cda737c485548b5802",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/IsisSystem.java",
                "deletions": 26,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/IsisSystem.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/IsisSystem.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -54,6 +54,7 @@\n import org.apache.isis.core.runtime.system.internal.IsisTimeZoneInitializer;\n import org.apache.isis.core.runtime.system.persistence.PersistenceSession;\n import org.apache.isis.core.runtime.system.persistence.PersistenceSessionFactory;\n+import org.apache.isis.core.runtime.system.persistence.PersistenceSessionFactoryMetamodelRefiner;\n import org.apache.isis.core.runtime.system.session.IsisSessionFactory;\n import org.apache.isis.core.runtime.system.transaction.IsisTransactionManager;\n import org.apache.isis.core.runtime.system.transaction.IsisTransactionManagerException;\n@@ -137,7 +138,8 @@ public void init() {\n             final SpecificationLoaderSpi specificationLoader = sessionFactory.getSpecificationLoader();\n             specificationLoader.validateAndAssert();\n \n-            serviceInitializer = initializeServices();\n+            // store simply so can do postConstruct when shutdown\n+            this.serviceInitializer = initializeServices();\n \n             installFixturesIfRequired();\n \n@@ -152,35 +154,52 @@ public void init() {\n \n     private IsisSessionFactory createSessionFactory(final DeploymentType deploymentType) throws IsisSystemException {\n \n+        // configuration\n         final IsisConfigurationDefault configuration = isisComponentProvider.getConfiguration();\n-        final List<Object> services = isisComponentProvider.provideServices();\n-\n-        ServicesInjectorSpi servicesInjectorSpi = new ServicesInjectorDefault(services);\n-        servicesInjectorSpi.addFallbackIfRequired(FixtureScripts.class, new FixtureScriptsDefault());\n-        servicesInjectorSpi.validateServices();\n-\n-        final RuntimeContextFromSession runtimeContext = new RuntimeContextFromSession(deploymentType.getDeploymentCategory(), configuration, servicesInjectorSpi);\n \n-        final PersistenceSessionFactory persistenceSessionFactory =\n-                isisComponentProvider.providePersistenceSessionFactory(deploymentType, servicesInjectorSpi, runtimeContext);\n+        // services\n+        final List<Object> services = isisComponentProvider.provideServices();\n+        ServicesInjectorDefault servicesInjector = new ServicesInjectorDefault(services);\n+        servicesInjector.addFallbackIfRequired(FixtureScripts.class, new FixtureScriptsDefault());\n+        servicesInjector.validateServices();\n \n+        // authentication, authorization\n         final AuthenticationManager authenticationManager =\n                 isisComponentProvider.provideAuthenticationManager(deploymentType);\n         final AuthorizationManager authorizationManager =\n                 isisComponentProvider.provideAuthorizationManager(deploymentType);\n \n+        // specificationLoader\n         final Collection<MetaModelRefiner> metaModelRefiners =\n-                refiners(authenticationManager, authorizationManager, persistenceSessionFactory);\n+                refiners(authenticationManager, authorizationManager,\n+                        new PersistenceSessionFactoryMetamodelRefiner());\n         final SpecificationLoaderSpi specificationLoader =\n-                isisComponentProvider.provideSpecificationLoaderSpi(metaModelRefiners);\n+                isisComponentProvider.provideSpecificationLoaderSpi(deploymentType, metaModelRefiners);\n+\n+        specificationLoader.setServiceInjector(servicesInjector);\n \n-        // bind metamodel to the (runtime) framework\n+        // persistenceSessionFactory\n+        final PersistenceSessionFactory persistenceSessionFactory =\n+                isisComponentProvider.providePersistenceSessionFactory(\n+                        deploymentType, servicesInjector, specificationLoader);\n+\n+        // runtimeContext\n+        final RuntimeContextFromSession runtimeContext =\n+                new RuntimeContextFromSession(\n+                        deploymentType.getDeploymentCategory(), configuration,\n+                        servicesInjector, specificationLoader);\n+\n+        // wire up components and components into services...\n         runtimeContext.injectInto(specificationLoader);\n \n+        for (Object service : servicesInjector.getRegisteredServices()) {\n+            runtimeContext.injectInto(service);\n+        }\n+\n+        // finally instantiate\n         return new IsisSessionFactory (\n-                deploymentType, configuration, specificationLoader,\n-                authenticationManager, authorizationManager,\n-                persistenceSessionFactory);\n+                deploymentType, configuration, servicesInjector, specificationLoader,\n+                authenticationManager, authorizationManager, persistenceSessionFactory);\n     }\n \n     private static Collection<MetaModelRefiner> refiners(Object... possibleRefiners ) {\n@@ -307,20 +326,24 @@ public void shutdown() {\n     private void shutdownServices(final ServiceInitializer serviceInitializer) {\n \n         // call @PostDestroy (in a session)\n-        IsisContext.openSession(new InitialisationSession());\n-        try {\n-            getTransactionManager().startTransaction();\n+        if(serviceInitializer != null) {\n+            IsisContext.openSession(new InitialisationSession());\n             try {\n-                serviceInitializer.preDestroy();\n+                getTransactionManager().startTransaction();\n+                try {\n \n-            } catch(RuntimeException ex) {\n-                getTransactionManager().getTransaction().setAbortCause(new IsisTransactionManagerException(ex));\n+                    serviceInitializer.preDestroy();\n+\n+                } catch (RuntimeException ex) {\n+                    getTransactionManager().getTransaction().setAbortCause(\n+                            new IsisTransactionManagerException(ex));\n+                } finally {\n+                    // will commit or abort\n+                    getTransactionManager().endTransaction();\n+                }\n             } finally {\n-                // will commit or abort\n-                getTransactionManager().endTransaction();\n+                IsisContext.closeSession();\n             }\n-        } finally {\n-            IsisContext.closeSession();\n         }\n     }\n ",
                "changes": 75,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/IsisSystem.java"
            },
            {
                "additions": 5,
                "sha": "1e25e5e24ec06deb9e57d3b5b556942632b568b6",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/context/IsisContextThreadLocal.java",
                "deletions": 13,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/context/IsisContextThreadLocal.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/context/IsisContextThreadLocal.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -117,6 +117,11 @@ public void debugData(final DebugBuilder debug) {\n         }\n     }\n \n+\n+    // /////////////////////////////////////////////////////////\n+    // open, close\n+    // /////////////////////////////////////////////////////////\n+\n     @Override\n     protected IsisSession getSessionInstance(final String executionContextId) {\n         for (final IsisSession data : sessionsByThread.values()) {\n@@ -127,10 +132,6 @@ protected IsisSession getSessionInstance(final String executionContextId) {\n         return null;\n     }\n \n-    // /////////////////////////////////////////////////////////\n-    // open, close\n-    // /////////////////////////////////////////////////////////\n-\n     /**\n      * Is only intended to be called through\n      * {@link IsisContext#openSession(AuthenticationSession)}.\n@@ -154,15 +155,6 @@ public IsisSession openSessionInstance(final AuthenticationSession authenticatio\n         }\n     }\n \n-    protected IsisSession createAndOpenSession(final Thread thread, final AuthenticationSession authenticationSession) {\n-        final IsisSession session = getSessionFactoryInstance().openSession(authenticationSession);\n-        session.open();\n-        if (LOG.isInfoEnabled()) {\n-            LOG.info(\"  opening session \" + session + \" (count \" + sessionsByThread.size() + \") for \" + authenticationSession.getUserName());\n-        }\n-        return session;\n-    }\n-\n     private IsisSession saveSession(final Thread thread, final IsisSession session) {\n         synchronized (sessionsByThread) {\n             sessionsByThread.put(thread, session);",
                "changes": 18,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/context/IsisContextThreadLocal.java"
            },
            {
                "additions": 43,
                "sha": "4327cf477002b6d7a3b0aaab8dc5ae6f9247d0d6",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java",
                "deletions": 38,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -28,6 +28,7 @@\n import javax.jdo.FetchGroup;\n import javax.jdo.FetchPlan;\n import javax.jdo.PersistenceManager;\n+import javax.jdo.PersistenceManagerFactory;\n \n import com.google.common.collect.Lists;\n import com.google.common.collect.Maps;\n@@ -43,7 +44,6 @@\n import org.apache.isis.applib.services.exceprecog.ExceptionRecognizer;\n import org.apache.isis.applib.services.exceprecog.ExceptionRecognizer2;\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n-import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n import org.apache.isis.core.commons.components.SessionScopedComponent;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n@@ -101,9 +101,6 @@\n import org.apache.isis.core.runtime.persistence.PojoRefreshException;\n import org.apache.isis.core.runtime.persistence.UnsupportedFindException;\n import org.apache.isis.core.runtime.persistence.adapter.PojoAdapter;\n-import org.apache.isis.core.runtime.persistence.adaptermanager.OidAdapterHashMap;\n-import org.apache.isis.core.runtime.persistence.adaptermanager.PojoAdapterHashMap;\n-import org.apache.isis.core.runtime.persistence.adaptermanager.RootAndCollectionAdapters;\n import org.apache.isis.core.runtime.persistence.container.DomainObjectContainerResolve;\n import org.apache.isis.core.runtime.persistence.objectstore.transaction.CreateObjectCommand;\n import org.apache.isis.core.runtime.persistence.objectstore.transaction.DestroyObjectCommand;\n@@ -113,6 +110,9 @@\n import org.apache.isis.core.runtime.persistence.query.PersistenceQueryFindUsingApplibQueryDefault;\n import org.apache.isis.core.runtime.runner.opts.OptionHandlerFixtureAbstract;\n import org.apache.isis.core.runtime.system.context.IsisContext;\n+import org.apache.isis.core.runtime.system.persistence.adaptermanager.OidAdapterHashMap;\n+import org.apache.isis.core.runtime.system.persistence.adaptermanager.PojoAdapterHashMap;\n+import org.apache.isis.core.runtime.system.persistence.adaptermanager.RootAndCollectionAdapters;\n import org.apache.isis.core.runtime.system.transaction.IsisTransaction;\n import org.apache.isis.core.runtime.system.transaction.IsisTransactionManager;\n import org.apache.isis.core.runtime.system.transaction.TransactionalClosure;\n@@ -132,6 +132,11 @@\n import static org.hamcrest.CoreMatchers.notNullValue;\n import static org.hamcrest.CoreMatchers.nullValue;\n \n+/**\n+ * A wrapper around the JDO {@link PersistenceManager}, which also manages concurrency\n+ * and maintains an identity map of {@link ObjectAdapter adapter}s and {@link Oid\n+ * identities} for each and every POJO that is being used by the framework.\n+ */\n public class PersistenceSession implements TransactionalResource, SessionScopedComponent, DebuggableWithTitle, AdapterManager,\n         MessageBrokerService, PersistenceSessionService, ConfigurationService {\n \n@@ -153,19 +158,23 @@\n \n     //region > constructor, fields, finalize()\n \n-    private final PersistenceSessionFactory persistenceSessionFactory;\n+    private final FixturesInstalledFlag fixturesInstalledFlag;\n \n     private final PersistenceQueryFactory persistenceQueryFactory;\n     private final IsisConfigurationDefault configuration;\n     private final SpecificationLoaderSpi specificationLoader;\n     private final AuthenticationSession authenticationSession;\n \n     private final ServicesInjectorSpi servicesInjector;\n+    /**\n+     * Used to create the {@link #persistenceManager} when {@link #open()}ed.\n+     */\n+    private final PersistenceManagerFactory jdoPersistenceManagerFactory;\n \n     // not final only for testing purposes\n     private IsisTransactionManager transactionManager;\n \n-    private final OidMarshaller oidMarshaller;\n+    private final OidMarshaller oidMarshaller = new OidMarshaller();\n \n     /**\n      * populated only when {@link #open()}ed.\n@@ -178,7 +187,6 @@\n     private final Map<Class<?>, PersistenceQueryProcessor<?>> persistenceQueryProcessorByClass = Maps.newHashMap();\n \n     private final Map<ObjectSpecId, RootOid> registeredServices = Maps.newHashMap();\n-    private final DataNucleusApplicationComponents applicationComponents;\n \n     private final boolean concurrencyCheckingGloballyEnabled;\n \n@@ -187,38 +195,32 @@\n      * persisted objects and persist changes to the object that are saved.\n      */\n     public PersistenceSession(\n-            final PersistenceSessionFactory persistenceSessionFactory,\n             final IsisConfigurationDefault configuration,\n+            final ServicesInjectorSpi servicesInjector,\n             final SpecificationLoaderSpi specificationLoader,\n-            final AuthenticationSession authenticationSession) {\n+            final AuthenticationSession authenticationSession,\n+            final PersistenceManagerFactory jdoPersistenceManagerFactory,\n+            final FixturesInstalledFlag fixturesInstalledFlag) {\n \n-        ensureThatArg(persistenceSessionFactory, is(not(nullValue())), \"persistence session factory required\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"creating \" + this);\n+        }\n \n         // injected\n         this.configuration = configuration;\n         this.specificationLoader = specificationLoader;\n         this.authenticationSession = authenticationSession;\n-        this.persistenceSessionFactory = persistenceSessionFactory;\n+        this.fixturesInstalledFlag = fixturesInstalledFlag;\n \n-        this.servicesInjector = persistenceSessionFactory.getServicesInjector();\n-        this.applicationComponents = persistenceSessionFactory.getApplicationComponents();\n+        this.servicesInjector = servicesInjector;\n+        this.jdoPersistenceManagerFactory = jdoPersistenceManagerFactory;\n \n         // sub-components\n-\n-        this.oidMarshaller = new OidMarshaller();\n-\n-\n-        this.persistenceQueryFactory = new PersistenceQueryFactory(this, getSpecificationLoader());\n-        this.transactionManager = new IsisTransactionManager(this, servicesInjector);\n+        this.persistenceQueryFactory = new PersistenceQueryFactory(this, this.specificationLoader);\n+        this.transactionManager = new IsisTransactionManager(this, this.servicesInjector);\n \n         setState(State.NOT_INITIALIZED);\n \n-        // to implement DomainObjectServices\n-\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"creating \" + this);\n-        }\n-\n         final boolean concurrencyCheckingGloballyDisabled =\n                 configuration.getBoolean(\"isis.persistor.disableConcurrencyChecking\", false);\n         this.concurrencyCheckingGloballyEnabled = !concurrencyCheckingGloballyDisabled;\n@@ -235,12 +237,15 @@ protected void finalize() throws Throwable {\n \n     //region > open\n \n+    /**\n+     * Only populated once {@link #open()}'d\n+     */\n     public PersistenceManager getPersistenceManager() {\n         return persistenceManager;\n     }\n \n     /**\n-     * Injects components, calls  {@link org.apache.isis.core.commons.components.SessionScopedComponent#open()} on subcomponents, and then creates service\n+     * Injects components, calls open on subcomponents, and then creates service\n      * adapters.\n      */\n     public void open() {\n@@ -253,10 +258,10 @@ public void open() {\n         oidAdapterMap.open();\n         pojoAdapterMap.open();\n \n-        persistenceManager = applicationComponents.getPersistenceManagerFactory().getPersistenceManager();\n+        persistenceManager = jdoPersistenceManagerFactory.getPersistenceManager();\n \n         final IsisLifecycleListener2 isisLifecycleListener = new IsisLifecycleListener2(this);\n-        persistenceManager.addInstanceLifecycleListener(isisLifecycleListener, (Class[])null);\n+        persistenceManager.addInstanceLifecycleListener(isisLifecycleListener, (Class[]) null);\n \n         persistenceQueryProcessorByClass.put(\n                 PersistenceQueryFindAllInstances.class,\n@@ -308,8 +313,7 @@ private void initServices() {\n     //region > close\n \n     /**\n-     * Calls {@link org.apache.isis.core.commons.components.SessionScopedComponent#close()}\n-     * on the subcomponents.\n+     * Closes the subcomponents.\n      *\n      * <p>\n      * Automatically {@link IsisTransactionManager#endTransaction() ends\n@@ -347,6 +351,8 @@ public void close() {\n             LOG.error(\n                 \"close: failed to close JDO persistenceManager; continuing to avoid memory leakage\");\n         }\n+        // TODO: REVIEW ... ??? this is a guess: don't set to null, because we need for -> transactionManager -> transaction -> messageBroker\n+        // persistenceManager = null;\n \n         try {\n             oidAdapterMap.close();\n@@ -657,8 +663,7 @@ private RootOid getOidForService(final ObjectSpecification serviceSpec) {\n      * up objects.\n      * \n      * <p>\n-     * This method is called only once after the\n-     * {@link ApplicationScopedComponent#init()} has been called. If this flag\n+     * This method is called only once after the init has been called. If this flag\n      * returns <code>false</code> the framework will run the fixtures to\n      * initialise the persistor.\n      * \n@@ -674,10 +679,10 @@ private RootOid getOidForService(final ObjectSpecification serviceSpec) {\n      * @see FixturesInstalledFlag\n      */\n     public boolean isFixturesInstalled() {\n-        if (persistenceSessionFactory.isFixturesInstalled() == null) {\n-            persistenceSessionFactory.setFixturesInstalled(objectStoreIsFixturesInstalled());\n+        if (fixturesInstalledFlag.isFixturesInstalled() == null) {\n+            fixturesInstalledFlag.setFixturesInstalled(objectStoreIsFixturesInstalled());\n         }\n-        return persistenceSessionFactory.isFixturesInstalled();\n+        return fixturesInstalledFlag.isFixturesInstalled();\n     }\n \n \n@@ -900,7 +905,7 @@ public void refreshRoot(final ObjectAdapter adapter) {\n      * Makes an {@link ObjectAdapter} persistent. The specified object should be\n      * stored away via this object store's persistence mechanism, and have a\n      * new and unique OID assigned to it. The object, should also be added to\n-     * the {@link org.apache.isis.core.runtime.persistence.adaptermanager.AdapterManagerDefault} as the object is implicitly 'in use'.\n+     * the {@link PersistenceSession} as the object is implicitly 'in use'.\n      *\n      * <p>\n      * If the object has any associations then each of these, where they aren't\n@@ -1166,7 +1171,7 @@ public void debugData(final DebugBuilder debug) {\n         debug.appendln();\n \n         debug.appendTitle(\"Services\");\n-        for (final Object servicePojo : persistenceSessionFactory.getServicesInjector().getRegisteredServices()) {\n+        for (final Object servicePojo : servicesInjector.getRegisteredServices()) {\n             final String id = ServiceUtil.id(servicePojo);\n             final Class<? extends Object> serviceClass = servicePojo.getClass();\n             final ObjectSpecification serviceSpecification = getSpecificationLoader().loadSpecification(serviceClass);\n@@ -1210,7 +1215,7 @@ protected AuthenticationSession getAuthenticationSession() {\n      * The configured {@link ServicesInjectorSpi}.\n      */\n     public ServicesInjectorSpi getServicesInjector() {\n-        return persistenceSessionFactory.getServicesInjector();\n+        return servicesInjector;\n     }\n \n ",
                "changes": 81,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSession.java"
            },
            {
                "additions": 14,
                "sha": "713dff1db0c293342dd3b07ef063d4310f855fb2",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactory.java",
                "deletions": 114,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactory.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -22,45 +22,26 @@\n import java.util.Map;\n import java.util.Set;\n \n+import javax.jdo.PersistenceManagerFactory;\n+\n import org.datanucleus.PropertyNames;\n import org.datanucleus.api.jdo.JDOPersistenceManagerFactory;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import org.apache.isis.applib.clock.Clock;\n-import org.apache.isis.applib.fixtures.FixtureClock;\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n-import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n-import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n-import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpiAware;\n-import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidatorComposite;\n import org.apache.isis.core.runtime.persistence.FixturesInstalledFlag;\n-import org.apache.isis.core.runtime.persistence.internal.RuntimeContextFromSession;\n import org.apache.isis.core.runtime.system.DeploymentType;\n import org.apache.isis.objectstore.jdo.datanucleus.DataNucleusPersistenceMechanismInstaller;\n import org.apache.isis.objectstore.jdo.datanucleus.JDOStateManagerForIsis;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.object.auditable.AuditableAnnotationInJdoApplibFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.object.auditable.AuditableMarkerInterfaceInJdoApplibFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.object.datastoreidentity.JdoDatastoreIdentityAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.object.discriminator.JdoDiscriminatorAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.object.persistencecapable.JdoPersistenceCapableAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.object.query.JdoQueryAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.object.version.JdoVersionAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.prop.column.BigDecimalDerivedFromJdoColumnAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.prop.column.MandatoryFromJdoColumnAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.prop.column.MaxLengthDerivedFromJdoColumnAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.prop.notpersistent.JdoNotPersistentAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.facets.prop.primarykey.JdoPrimaryKeyAnnotationFacetFactory;\n-import org.apache.isis.objectstore.jdo.metamodel.specloader.validator.JdoMetaModelValidator;\n import org.apache.isis.objectstore.jdo.service.RegisterEntities;\n \n-public class PersistenceSessionFactory implements MetaModelRefiner,\n-        SpecificationLoaderSpiAware, ApplicationScopedComponent, FixturesInstalledFlag {\n+public class PersistenceSessionFactory implements ApplicationScopedComponent, FixturesInstalledFlag {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PersistenceSessionFactory.class);\n \n@@ -69,32 +50,11 @@\n     private final DeploymentType deploymentType;\n     private final IsisConfigurationDefault configuration;\n \n-    private final ServicesInjectorSpi servicesInjector;\n-    private final RuntimeContextFromSession runtimeContext;\n-\n-    private SpecificationLoaderSpi specificationLoader;\n-\n     public PersistenceSessionFactory(\n             final DeploymentType deploymentType,\n-            final ServicesInjectorSpi servicesInjector,\n-            final IsisConfigurationDefault isisConfiguration,\n-            final RuntimeContextFromSession runtimeContext) {\n+            final IsisConfigurationDefault isisConfiguration) {\n         this.deploymentType = deploymentType;\n         this.configuration = isisConfiguration;\n-        this.servicesInjector = servicesInjector;\n-        this.runtimeContext = runtimeContext;\n-    }\n-\n-    public DeploymentType getDeploymentType() {\n-        return deploymentType;\n-    }\n-\n-    public IsisConfigurationDefault getConfiguration() {\n-        return configuration;\n-    }\n-\n-    public ServicesInjectorSpi getServicesInjector() {\n-        return servicesInjector;\n     }\n \n     //endregion\n@@ -104,29 +64,6 @@ public ServicesInjectorSpi getServicesInjector() {\n     private DataNucleusApplicationComponents applicationComponents;\n \n     public final void init() {\n-\n-        // a bit of a workaround, but required if anything in the metamodel (for\n-        // example, a\n-        // ValueSemanticsProvider for a date value type) needs to use the Clock\n-        // singleton\n-        // we do this after loading the services to allow a service to prime a\n-        // different clock\n-        // implementation (eg to use an NTP time service).\n-        if (!deploymentType.isProduction() && !Clock.isInitialized()) {\n-            FixtureClock.initialize();\n-        }\n-\n-        runtimeContext.injectInto(servicesInjector);\n-\n-        // wire up components\n-        getSpecificationLoader().injectInto(runtimeContext);\n-\n-        for (Object service : servicesInjector.getRegisteredServices()) {\n-            runtimeContext.injectInto(service);\n-        }\n-\n-        servicesInjector.init();\n-\n         this.applicationComponents = createDataNucleusApplicationComponents(configuration);\n     }\n \n@@ -215,49 +152,24 @@ public final void shutdown() {\n \n     //endregion\n \n-    //region > MetaModelRefiner impl\n-\n-    @Override\n-    public void refineProgrammingModel(ProgrammingModel programmingModel, IsisConfiguration configuration) {\n-        programmingModel.addFactory(\n-                JdoPersistenceCapableAnnotationFacetFactory.class, ProgrammingModel.Position.BEGINNING);\n-        programmingModel.addFactory(JdoDatastoreIdentityAnnotationFacetFactory.class);\n-\n-        programmingModel.addFactory(JdoPrimaryKeyAnnotationFacetFactory.class);\n-        programmingModel.addFactory(JdoNotPersistentAnnotationFacetFactory.class);\n-        programmingModel.addFactory(JdoDiscriminatorAnnotationFacetFactory.class);\n-        programmingModel.addFactory(JdoVersionAnnotationFacetFactory.class);\n-\n-        programmingModel.addFactory(JdoQueryAnnotationFacetFactory.class);\n-\n-        programmingModel.addFactory(BigDecimalDerivedFromJdoColumnAnnotationFacetFactory.class);\n-        programmingModel.addFactory(MaxLengthDerivedFromJdoColumnAnnotationFacetFactory.class);\n-        // must appear after JdoPrimaryKeyAnnotationFacetFactory (above)\n-        // and also MandatoryFacetOnPropertyMandatoryAnnotationFactory\n-        // and also PropertyAnnotationFactory\n-        programmingModel.addFactory(MandatoryFromJdoColumnAnnotationFacetFactory.class);\n-\n-        programmingModel.addFactory(AuditableAnnotationInJdoApplibFacetFactory.class);\n-        programmingModel.addFactory(AuditableMarkerInterfaceInJdoApplibFacetFactory.class);\n-    }\n-\n-    @Override\n-    public void refineMetaModelValidator(MetaModelValidatorComposite metaModelValidator, IsisConfiguration configuration) {\n-        metaModelValidator.add(new JdoMetaModelValidator());\n-    }\n-\n-    //endregion\n-\n-    //region > createPersisenceSession\n \n+    //region > createPersistenceSession\n \n     /**\n      * Called by {@link org.apache.isis.core.runtime.system.session.IsisSessionFactory#openSession(AuthenticationSession)}.\n      */\n     public PersistenceSession createPersistenceSession(\n+            final ServicesInjectorSpi servicesInjector,\n             final SpecificationLoaderSpi specificationLoader,\n             final AuthenticationSession authenticationSession) {\n-        return new PersistenceSession(this, getConfiguration(), specificationLoader, authenticationSession);\n+\n+        final FixturesInstalledFlag fixturesInstalledFlag = this;\n+        final PersistenceManagerFactory persistenceManagerFactory =\n+                applicationComponents.getPersistenceManagerFactory();\n+\n+        return new PersistenceSession(\n+                configuration, servicesInjector, specificationLoader,\n+                authenticationSession, persistenceManagerFactory, fixturesInstalledFlag);\n     }\n \n     DataNucleusApplicationComponents getApplicationComponents() {\n@@ -282,17 +194,5 @@ public void setFixturesInstalled(final Boolean fixturesInstalled) {\n \n     //endregion\n \n-    //region > dependencies (from init)\n-\n-    protected SpecificationLoaderSpi getSpecificationLoader() {\n-        return specificationLoader;\n-    }\n-\n-    @Override\n-    public void setSpecificationLoaderSpi(final SpecificationLoaderSpi specificationLoader) {\n-        this.specificationLoader = specificationLoader;\n-    }\n-\n-    //endregion\n \n }",
                "changes": 128,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactory.java"
            },
            {
                "additions": 53,
                "sha": "f8b44282d409e05525ec93549c2e17152a605580",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactoryMetamodelRefiner.java",
                "deletions": 0,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactoryMetamodelRefiner.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactoryMetamodelRefiner.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -0,0 +1,53 @@\n+package org.apache.isis.core.runtime.system.persistence;\n+\n+import org.apache.isis.core.commons.config.IsisConfiguration;\n+import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n+import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n+import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidatorComposite;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.object.auditable.AuditableAnnotationInJdoApplibFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.object.auditable.AuditableMarkerInterfaceInJdoApplibFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.object.datastoreidentity.JdoDatastoreIdentityAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.object.discriminator.JdoDiscriminatorAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.object.persistencecapable.JdoPersistenceCapableAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.object.query.JdoQueryAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.object.version.JdoVersionAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.prop.column.BigDecimalDerivedFromJdoColumnAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.prop.column.MandatoryFromJdoColumnAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.prop.column.MaxLengthDerivedFromJdoColumnAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.prop.notpersistent.JdoNotPersistentAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.facets.prop.primarykey.JdoPrimaryKeyAnnotationFacetFactory;\n+import org.apache.isis.objectstore.jdo.metamodel.specloader.validator.JdoMetaModelValidator;\n+\n+public class PersistenceSessionFactoryMetamodelRefiner implements MetaModelRefiner {\n+\n+    @Override\n+    public void refineProgrammingModel(ProgrammingModel programmingModel, IsisConfiguration configuration) {\n+        programmingModel.addFactory(\n+                JdoPersistenceCapableAnnotationFacetFactory.class, ProgrammingModel.Position.BEGINNING);\n+        programmingModel.addFactory(JdoDatastoreIdentityAnnotationFacetFactory.class);\n+\n+        programmingModel.addFactory(JdoPrimaryKeyAnnotationFacetFactory.class);\n+        programmingModel.addFactory(JdoNotPersistentAnnotationFacetFactory.class);\n+        programmingModel.addFactory(JdoDiscriminatorAnnotationFacetFactory.class);\n+        programmingModel.addFactory(JdoVersionAnnotationFacetFactory.class);\n+\n+        programmingModel.addFactory(JdoQueryAnnotationFacetFactory.class);\n+\n+        programmingModel.addFactory(BigDecimalDerivedFromJdoColumnAnnotationFacetFactory.class);\n+        programmingModel.addFactory(MaxLengthDerivedFromJdoColumnAnnotationFacetFactory.class);\n+        // must appear after JdoPrimaryKeyAnnotationFacetFactory (above)\n+        // and also MandatoryFacetOnPropertyMandatoryAnnotationFactory\n+        // and also PropertyAnnotationFactory\n+        programmingModel.addFactory(MandatoryFromJdoColumnAnnotationFacetFactory.class);\n+\n+        programmingModel.addFactory(AuditableAnnotationInJdoApplibFacetFactory.class);\n+        programmingModel.addFactory(AuditableMarkerInterfaceInJdoApplibFacetFactory.class);\n+    }\n+\n+    @Override\n+    public void refineMetaModelValidator(\n+            MetaModelValidatorComposite metaModelValidator,\n+            IsisConfiguration configuration) {\n+        metaModelValidator.add(new JdoMetaModelValidator());\n+    }\n+}",
                "changes": 53,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionFactoryMetamodelRefiner.java"
            },
            {
                "additions": 13,
                "sha": "684e25bbb94f03593588646da4ca123bc840d02c",
                "status": "renamed",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/OidAdapterHashMap.java",
                "previous_filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adaptermanager/OidAdapterHashMap.java",
                "deletions": 17,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/OidAdapterHashMap.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/OidAdapterHashMap.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -17,7 +17,7 @@\n  *  under the License.\n  */\n \n-package org.apache.isis.core.runtime.persistence.adaptermanager;\n+package org.apache.isis.core.runtime.system.persistence.adaptermanager;\n \n import java.util.Iterator;\n import java.util.Map;\n@@ -43,25 +43,22 @@\n \n     private final Map<Oid, ObjectAdapter> adapterByOidMap = Maps.newHashMapWithExpectedSize(DEFAULT_OID_ADAPTER_MAP_SIZE);\n \n-\n-    // ///////////////////////////////////////////////////////\n-    // open, close\n-    // ///////////////////////////////////////////////////////\n+    //region > open, close\n \n     public void open() {\n         // nothing to do\n     }\n \n     public void close() {\n-        LOG.debug(\"close\");\n+        if(LOG.isDebugEnabled()) {\n+            LOG.debug(\"close\");\n+        }\n         adapterByOidMap.clear();\n     }\n \n+    //endregion\n \n-    // ///////////////////////////////////////////////////////\n-    // add, remove\n-    // ///////////////////////////////////////////////////////\n-\n+    //region > add, remove\n     /**\n      * Add an adapter for a given oid\n      */\n@@ -90,26 +87,24 @@ public boolean remove(final Oid oid) {\n         return adapterByOidMap.remove(oid) != null;\n     }\n \n+    //endregion\n \n+    //region > getAdapter, iterator\n     /**\n      * Get the adapter identified by the specified OID.\n      */\n     public ObjectAdapter getAdapter(final Oid oid) {\n         return adapterByOidMap.get(oid);\n     }\n \n-    // ///////////////////////////////////////////////////////\n-    // iterator\n-    // ///////////////////////////////////////////////////////\n-\n     @Override\n     public Iterator<Oid> iterator() {\n         return adapterByOidMap.keySet().iterator();\n     }\n \n-    // ///////////////////////////////////////////////////////\n-    // debugging\n-    // ///////////////////////////////////////////////////////\n+    //endregion\n+\n+    //region > debugging\n \n     @Override\n     public String debugTitle() {\n@@ -131,5 +126,6 @@ public void debugData(final DebugBuilder debug) {\n         }\n     }\n \n+    //endregion\n \n }",
                "changes": 30,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/OidAdapterHashMap.java"
            },
            {
                "additions": 23,
                "sha": "9a810a47e5def3ce08ffa38c5a498af864811b69",
                "status": "renamed",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/PojoAdapterHashMap.java",
                "previous_filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adaptermanager/PojoAdapterHashMap.java",
                "deletions": 22,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/PojoAdapterHashMap.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/PojoAdapterHashMap.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -17,7 +17,7 @@\n  *  under the License.\n  */\n \n-package org.apache.isis.core.runtime.persistence.adaptermanager;\n+package org.apache.isis.core.runtime.system.persistence.adaptermanager;\n \n import java.util.Iterator;\n import java.util.Map;\n@@ -57,10 +57,7 @@ public boolean equals(final Object obj) {\n \n     protected final Map<Object, ObjectAdapter> adapterByPojoMap;\n \n-    // ///////////////////////////////////////////////////////////////////////////\n-    // Constructors, finalize\n-    // ///////////////////////////////////////////////////////////////////////////\n-\n+    //region > Constructors, finalize\n     public PojoAdapterHashMap() {\n         this(DEFAULT_POJO_ADAPTER_MAP_SIZE);\n     }\n@@ -72,26 +69,28 @@ public PojoAdapterHashMap(final int capacity) {\n     @Override\n     protected void finalize() throws Throwable {\n         super.finalize();\n-        LOG.debug(\"finalizing hash of pojos\");\n+        if(LOG.isDebugEnabled()) {\n+            LOG.debug(\"finalizing hash of pojos\");\n+        }\n     }\n+    //endregion\n \n-    // ///////////////////////////////////////////////////////////////////////////\n-    // open, close\n-    // ///////////////////////////////////////////////////////////////////////////\n+    //region > open, close\n \n     public void open() {\n         // nothing to do\n     }\n \n     public void close() {\n-        LOG.debug(\"close\");\n+        if(LOG.isDebugEnabled()) {\n+            LOG.debug(\"close\");\n+        }\n         adapterByPojoMap.clear();\n     }\n \n+    //endregion\n \n-    // ///////////////////////////////////////////////////////////////////////////\n-    // add, remove\n-    // ///////////////////////////////////////////////////////////////////////////\n+    //region > add, remove\n \n     public void add(final Object pojo, final ObjectAdapter adapter) {\n         adapterByPojoMap.put(key(pojo), adapter);\n@@ -109,9 +108,9 @@ public void remove(final ObjectAdapter object) {\n         adapterByPojoMap.remove(key(object.getObject()));\n     }\n \n-    // ///////////////////////////////////////////////////////////////////////////\n-    // get, contains\n-    // ///////////////////////////////////////////////////////////////////////////\n+    //endregion\n+\n+    //region > getAdapter, containsPojo\n \n     public boolean containsPojo(final Object pojo) {\n         return adapterByPojoMap.containsKey(key(pojo));\n@@ -121,10 +120,9 @@ public ObjectAdapter getAdapter(final Object pojo) {\n         return adapterByPojoMap.get(key(pojo));\n     }\n \n-    // ///////////////////////////////////////////////////////////////////////////\n-    // elements\n-    // ///////////////////////////////////////////////////////////////////////////\n+    //endregion\n \n+    //region > iterator, key\n     @Override\n     public Iterator<ObjectAdapter> iterator() {\n         return adapterByPojoMap.values().iterator();\n@@ -134,9 +132,9 @@ private Object key(final Object pojo) {\n         return new IdentityHashKey(pojo);\n     }\n \n-    // ///////////////////////////////////////////////////////////////////////////\n-    // Debugging\n-    // ///////////////////////////////////////////////////////////////////////////\n+    //endregion\n+\n+    //region > Debugging\n \n     @Override\n     public void debugData(final DebugBuilder debug) {\n@@ -157,4 +155,7 @@ public void debugData(final DebugBuilder debug) {\n     public String debugTitle() {\n         return \"POJO Adapter Hashtable\";\n     }\n+\n+    //endregion\n+\n }",
                "changes": 45,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/PojoAdapterHashMap.java"
            },
            {
                "additions": 1,
                "sha": "4a35fe011d9a6f22371914410042bcc87d87bd13",
                "status": "renamed",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/RootAndCollectionAdapters.java",
                "previous_filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/persistence/adaptermanager/RootAndCollectionAdapters.java",
                "deletions": 1,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/RootAndCollectionAdapters.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/RootAndCollectionAdapters.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -17,7 +17,7 @@\n  *  under the License.\n  */\n \n-package org.apache.isis.core.runtime.persistence.adaptermanager;\n+package org.apache.isis.core.runtime.system.persistence.adaptermanager;\n \n import java.util.Collections;\n import java.util.Iterator;",
                "changes": 2,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/persistence/adaptermanager/RootAndCollectionAdapters.java"
            },
            {
                "additions": 24,
                "sha": "48267b15311927e7d28cf5bf32980363e3339429",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactory.java",
                "deletions": 5,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactory.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactory.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -24,6 +24,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import org.apache.isis.applib.clock.Clock;\n+import org.apache.isis.applib.fixtures.FixtureClock;\n import org.apache.isis.core.commons.authentication.AuthenticationSession;\n import org.apache.isis.core.commons.components.ApplicationScopedComponent;\n import org.apache.isis.core.commons.config.IsisConfiguration;\n@@ -68,6 +70,7 @@\n     private final DeploymentType deploymentType;\n     private final IsisConfiguration configuration;\n     private final SpecificationLoaderSpi specificationLoaderSpi;\n+    private final ServicesInjectorSpi servicesInjector;\n     private final AuthenticationManager authenticationManager;\n     private final AuthorizationManager authorizationManager;\n     private final PersistenceSessionFactory persistenceSessionFactory;\n@@ -76,6 +79,7 @@\n     public IsisSessionFactory(\n             final DeploymentType deploymentType,\n             final IsisConfiguration configuration,\n+            final ServicesInjectorSpi servicesInjector,\n             final SpecificationLoaderSpi specificationLoader,\n             final AuthenticationManager authenticationManager,\n             final AuthorizationManager authorizationManager,\n@@ -84,6 +88,7 @@ public IsisSessionFactory(\n         ensureThatArg(deploymentType, is(not(nullValue())));\n         ensureThatArg(configuration, is(not(nullValue())));\n         ensureThatArg(specificationLoader, is(not(nullValue())));\n+        ensureThatArg(servicesInjector, is(not(nullValue())));\n         ensureThatArg(authenticationManager, is(not(nullValue())));\n         ensureThatArg(authorizationManager, is(not(nullValue())));\n         ensureThatArg(persistenceSessionFactory, is(not(nullValue())));\n@@ -93,8 +98,9 @@ public IsisSessionFactory(\n         this.specificationLoaderSpi = specificationLoader;\n         this.authenticationManager = authenticationManager;\n         this.authorizationManager = authorizationManager;\n+        this.servicesInjector = servicesInjector;\n         this.persistenceSessionFactory = persistenceSessionFactory;\n-        this.oidMarshaller = new OidMarshaller();;\n+        this.oidMarshaller = new OidMarshaller();\n     }\n \n \n@@ -107,8 +113,17 @@ public IsisSessionFactory(\n      * Wires components as necessary, and then init}ializes all.\n      */\n     public void init() {\n-        final ServicesInjectorSpi servicesInjector = persistenceSessionFactory.getServicesInjector();\n-        specificationLoaderSpi.setServiceInjector(servicesInjector);\n+\n+        // a bit of a workaround, but required if anything in the metamodel (for\n+        // example, a\n+        // ValueSemanticsProvider for a date value type) needs to use the Clock\n+        // singleton\n+        // we do this after loading the services to allow a service to prime a\n+        // different clock\n+        // implementation (eg to use an NTP time service).\n+        if (!deploymentType.isProduction() && !Clock.isInitialized()) {\n+            FixtureClock.initialize();\n+        }\n \n         specificationLoaderSpi.init();\n \n@@ -117,6 +132,9 @@ public void init() {\n \n         authenticationManager.init();\n         authorizationManager.init();\n+\n+        servicesInjector.init();\n+\n         persistenceSessionFactory.init();\n     }\n \n@@ -135,7 +153,8 @@ public void shutdown() {\n      */\n     public IsisSession openSession(final AuthenticationSession authenticationSession) {\n         final PersistenceSession persistenceSession =\n-                persistenceSessionFactory.createPersistenceSession(getSpecificationLoader(), authenticationSession);\n+                persistenceSessionFactory.createPersistenceSession(\n+                        servicesInjector, getSpecificationLoader(), authenticationSession);\n         ensureThatArg(persistenceSession, is(not(nullValue())));\n \n         return newIsisSession(authenticationSession, persistenceSession);\n@@ -199,7 +218,7 @@ public PersistenceSessionFactory getPersistenceSessionFactory() {\n     }\n \n     public List<Object> getServices() {\n-        return getPersistenceSessionFactory().getServicesInjector().getRegisteredServices();\n+        return servicesInjector.getRegisteredServices();\n     }\n \n     /**",
                "changes": 29,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/system/session/IsisSessionFactory.java"
            },
            {
                "additions": 4,
                "sha": "b2bbeb0fae8dd6c26ee0941725dadd15b007c20f",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java",
                "deletions": 4,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -22,15 +22,13 @@\n import java.util.Collection;\n import java.util.List;\n \n-import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.runtime.authentication.AuthenticationManager;\n import org.apache.isis.core.runtime.authorization.AuthorizationManager;\n import org.apache.isis.core.runtime.fixtures.FixturesInstaller;\n-import org.apache.isis.core.runtime.persistence.internal.RuntimeContextFromSession;\n import org.apache.isis.core.runtime.system.DeploymentType;\n import org.apache.isis.core.runtime.system.IsisSystemException;\n import org.apache.isis.core.runtime.system.persistence.PersistenceSessionFactory;\n@@ -51,12 +49,14 @@\n \n     FixturesInstaller provideFixturesInstaller();\n \n-    SpecificationLoaderSpi provideSpecificationLoaderSpi(Collection<MetaModelRefiner> metaModelRefiners)\n+    SpecificationLoaderSpi provideSpecificationLoaderSpi(\n+            final DeploymentType deploymentType,\n+            Collection<MetaModelRefiner> metaModelRefiners)\n             throws IsisSystemException;\n \n     PersistenceSessionFactory providePersistenceSessionFactory(\n             final DeploymentType deploymentType,\n             final ServicesInjectorSpi servicesInjectorSpi,\n-            final RuntimeContextFromSession runtimeContext);\n+            final SpecificationLoaderSpi specificationLoader);\n \n }",
                "changes": 8,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProvider.java"
            },
            {
                "additions": 287,
                "sha": "2f112c485185e5c04b312ef87cee1062e6dd7cd3",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderDefault2.java",
                "deletions": 0,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderDefault2.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderDefault2.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -0,0 +1,287 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.apache.isis.core.runtime.systemusinginstallers;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Sets;\n+\n+import org.apache.isis.applib.AppManifest;\n+import org.apache.isis.applib.fixtures.InstallableFixture;\n+import org.apache.isis.applib.fixturescripts.FixtureScript;\n+import org.apache.isis.core.commons.config.IsisConfiguration;\n+import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n+import org.apache.isis.core.commons.resource.ResourceStreamSourceContextLoaderClassPath;\n+import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n+import org.apache.isis.core.metamodel.facetapi.MetaModelRefiner;\n+import org.apache.isis.core.metamodel.facetdecorator.FacetDecorator;\n+import org.apache.isis.core.metamodel.layoutmetadata.LayoutMetadataReader;\n+import org.apache.isis.core.metamodel.layoutmetadata.json.LayoutMetadataReaderFromJson;\n+import org.apache.isis.core.metamodel.metamodelvalidator.dflt.MetaModelValidatorDefault;\n+import org.apache.isis.core.metamodel.progmodel.ProgrammingModel;\n+import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n+import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n+import org.apache.isis.core.metamodel.specloader.validator.MetaModelValidator;\n+import org.apache.isis.core.runtime.authentication.AuthenticationManager;\n+import org.apache.isis.core.runtime.authentication.AuthenticationRequest;\n+import org.apache.isis.core.runtime.authentication.standard.AuthenticationManagerStandard;\n+import org.apache.isis.core.runtime.authentication.standard.Authenticator;\n+import org.apache.isis.core.runtime.authentication.standard.AuthenticatorAbstract;\n+import org.apache.isis.core.runtime.authorization.AuthorizationManager;\n+import org.apache.isis.core.runtime.authorization.standard.AuthorizationManagerStandard;\n+import org.apache.isis.core.runtime.fixtures.FixturesInstaller;\n+import org.apache.isis.core.runtime.fixtures.FixturesInstallerFromConfiguration;\n+import org.apache.isis.core.runtime.services.ServicesInstallerFromConfiguration;\n+import org.apache.isis.core.runtime.services.ServicesInstallerFromConfigurationAndAnnotation;\n+import org.apache.isis.core.runtime.system.DeploymentType;\n+import org.apache.isis.core.runtime.system.IsisSystemException;\n+import org.apache.isis.core.runtime.system.persistence.PersistenceSessionFactory;\n+import org.apache.isis.core.runtime.transaction.facetdecorator.standard.StandardTransactionFacetDecorator;\n+import org.apache.isis.objectstore.jdo.datanucleus.DataNucleusPersistenceMechanismInstaller;\n+import org.apache.isis.progmodels.dflt.JavaReflectorHelper;\n+import org.apache.isis.progmodels.dflt.ProgrammingModelFacetsJava5;\n+\n+public class IsisComponentProviderDefault2 extends IsisComponentProviderAbstract {\n+\n+    private final ProgrammingModel programmingModel;\n+    private final MetaModelValidator metaModelValidator;\n+\n+    public IsisComponentProviderDefault2(\n+            final DeploymentType deploymentType,\n+            final AppManifest appManifestIfAny,\n+            final List<Object> servicesOverride,\n+            final List<InstallableFixture> fixturesOverride,\n+            final IsisConfiguration configurationOverride,\n+            final ProgrammingModel programmingModelOverride,\n+            final MetaModelValidator metaModelValidatorOverride) {\n+        super(deploymentType, appManifestIfAny);\n+\n+        this.configuration = elseDefault(configurationOverride);\n+\n+        final String fixtureClassNamesCsv;\n+        if(appManifest != null) {\n+\n+            putAppManifestKey(appManifest);\n+            registerPackageNames(appManifest);\n+            specifyServicesAndRegisteredEntitiesUsing(appManifest);\n+\n+            List<Class<? extends FixtureScript>> fixtureClasses = appManifest.getFixtures();\n+            fixtureClassNamesCsv = classNamesFrom(fixtureClasses);\n+\n+            overrideConfigurationUsing(appManifest);\n+\n+            this.services = createServices(configuration);\n+\n+        } else {\n+            fixtureClassNamesCsv = classNamesFrom(fixturesOverride);\n+\n+            this.services = elseDefault(servicesOverride, configuration);\n+        }\n+\n+        putConfigurationProperty(FixturesInstallerFromConfiguration.FIXTURES, fixtureClassNamesCsv);\n+        this.fixturesInstaller = createFixturesInstaller(configuration);\n+\n+        // integration tests ignore appManifest for authentication and authorization.\n+        this.authenticationManager = createAuthenticationManager(configuration);\n+        this.authorizationManager = createAuthorizationManager(configuration);\n+\n+        this.programmingModel = elseDefault(programmingModelOverride, configuration);\n+        this.metaModelValidator = elseDefault(metaModelValidatorOverride);\n+\n+    }\n+\n+\n+\n+    //region > appManifest\n+\n+    private List<Object> createServices(final IsisConfiguration configuration) {\n+        final ServicesInstallerFromConfigurationAndAnnotation servicesInstaller =\n+                new ServicesInstallerFromConfigurationAndAnnotation();\n+        servicesInstaller.setConfiguration(configuration);\n+        return servicesInstaller.getServices();\n+    }\n+\n+\n+    @Override\n+    protected void doPutConfigurationProperty(final String key, final String value) {\n+        // bit hacky :-(\n+        IsisConfigurationDefault configurationDefault = (IsisConfigurationDefault) this.configuration;\n+        configurationDefault.put(key, value);\n+    }\n+\n+    //endregion\n+\n+    /**\n+     * Default will read <tt>isis.properties</tt> (and other optional property files) from the &quot;config&quot;\n+     * package on the current classpath.\n+     */\n+    private static IsisConfigurationDefault elseDefault(final IsisConfiguration configuration) {\n+        return configuration != null\n+                ? (IsisConfigurationDefault) configuration\n+                : new IsisConfigurationDefault(ResourceStreamSourceContextLoaderClassPath.create(\"config\"));\n+    }\n+\n+    private static List<Object> elseDefault(\n+            final List<Object> servicesOverride,\n+            final IsisConfiguration configuration) {\n+        return servicesOverride != null\n+                ? servicesOverride\n+                : createDefaultServices(configuration);\n+    }\n+\n+    private static List<Object> createDefaultServices(\n+            final IsisConfiguration configuration) {\n+        final ServicesInstallerFromConfiguration servicesInstaller = new ServicesInstallerFromConfiguration();\n+        servicesInstaller.setConfiguration(configuration);\n+        return servicesInstaller.getServices();\n+    }\n+\n+\n+    private static ProgrammingModel elseDefault(final ProgrammingModel programmingModel, final IsisConfiguration configuration) {\n+        return programmingModel != null\n+                ? programmingModel\n+                : createDefaultProgrammingModel(configuration);\n+    }\n+\n+    // TODO: this is duplicating logic in JavaReflectorInstallerNoDecorators; need to unify.\n+    private static ProgrammingModel createDefaultProgrammingModel(final IsisConfiguration configuration) {\n+        final ProgrammingModelFacetsJava5 programmingModel = new ProgrammingModelFacetsJava5();\n+\n+        ProgrammingModel.Util.includeFacetFactories(configuration, programmingModel);\n+        ProgrammingModel.Util.excludeFacetFactories(configuration, programmingModel);\n+        return programmingModel;\n+    }\n+\n+    private static MetaModelValidator elseDefault(final MetaModelValidator metaModelValidator) {\n+        return metaModelValidator != null\n+                ? metaModelValidator\n+                : new MetaModelValidatorDefault();\n+    }\n+\n+    private static FixturesInstaller createFixturesInstaller(final IsisConfiguration configuration) {\n+        final FixturesInstallerFromConfiguration fixturesInstallerFromConfiguration = new FixturesInstallerFromConfiguration();\n+        fixturesInstallerFromConfiguration.setConfiguration(configuration);\n+        return fixturesInstallerFromConfiguration;\n+    }\n+\n+    /**\n+     * The standard authentication manager, configured with the default authenticator (allows all requests through).\n+     */\n+    private static AuthenticationManager createAuthenticationManager(final IsisConfiguration configuration) {\n+        final AuthenticationManagerStandard authenticationManager = new AuthenticationManagerStandard(configuration);\n+        Authenticator authenticator = new AuthenticatorBypass(configuration);\n+        authenticationManager.addAuthenticator(authenticator);\n+        return authenticationManager;\n+    }\n+\n+    private static class AuthenticatorBypass extends AuthenticatorAbstract {\n+\n+        public AuthenticatorBypass(final IsisConfiguration configuration) {\n+            super(configuration);\n+        }\n+\n+        @Override\n+        public boolean isValid(final AuthenticationRequest request) {\n+            return true;\n+        }\n+\n+        @Override\n+        public boolean canAuthenticate(final Class<? extends AuthenticationRequest> authenticationRequestClass) {\n+            return true;\n+        }\n+\n+    }\n+\n+\n+    /**\n+     * The standard authorization manager, allowing all access.\n+     */\n+    private static AuthorizationManager createAuthorizationManager(final IsisConfiguration configuration) {\n+        return new AuthorizationManagerStandard(configuration);\n+    }\n+\n+\n+    @Override\n+    public DeploymentType getDeploymentType() {\n+        return deploymentType;\n+    }\n+\n+    @Override\n+    public IsisConfigurationDefault getConfiguration() {\n+        return configuration;\n+    }\n+\n+    @Override\n+    public List<Object> provideServices() {\n+        return services;\n+    }\n+\n+    @Override\n+    public FixturesInstaller provideFixturesInstaller()  {\n+        return fixturesInstaller;\n+    }\n+\n+    @Override\n+    public SpecificationLoaderSpi provideSpecificationLoaderSpi(\n+            final DeploymentType deploymentType,\n+            Collection<MetaModelRefiner> metaModelRefiners) throws IsisSystemException {\n+\n+        final DeploymentCategory deploymentCategory = deploymentType.getDeploymentCategory();\n+\n+        final Set<FacetDecorator> facetDecorators =\n+                Sets.newHashSet((FacetDecorator) new StandardTransactionFacetDecorator(getConfiguration()));\n+        final List<LayoutMetadataReader> layoutMetadataReaders =\n+                Lists.<LayoutMetadataReader>newArrayList(new LayoutMetadataReaderFromJson());\n+\n+        return JavaReflectorHelper\n+                .createObjectReflector(\n+                        deploymentCategory, getConfiguration(), programmingModel,\n+                        metaModelRefiners,\n+                        facetDecorators, layoutMetadataReaders,\n+                        metaModelValidator\n+                );\n+    }\n+\n+    @Override\n+    public AuthenticationManager provideAuthenticationManager(DeploymentType deploymentType) {\n+        return authenticationManager;\n+    }\n+\n+    @Override\n+    public AuthorizationManager provideAuthorizationManager(DeploymentType deploymentType) {\n+        return authorizationManager;\n+    }\n+\n+    @Override\n+    public PersistenceSessionFactory providePersistenceSessionFactory(\n+            DeploymentType deploymentType,\n+            final ServicesInjectorSpi servicesInjectorSpi,\n+            final SpecificationLoaderSpi specificationLoader) {\n+        DataNucleusPersistenceMechanismInstaller installer =\n+                new DataNucleusPersistenceMechanismInstaller();\n+        return installer.createPersistenceSessionFactory(\n+                deploymentType, configuration, servicesInjectorSpi\n+        );\n+    }\n+\n+}",
                "changes": 287,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderDefault2.java"
            },
            {
                "additions": 6,
                "sha": "ea2afe41a431cec8ac03cb4a3d7a200ea0005e3d",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderUsingInstallers.java",
                "deletions": 6,
                "filename": "core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderUsingInstallers.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderUsingInstallers.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -34,7 +34,6 @@\n import org.apache.isis.core.runtime.fixtures.FixturesInstallerFromConfiguration;\n import org.apache.isis.core.runtime.installerregistry.InstallerLookup;\n import org.apache.isis.core.runtime.installerregistry.installerapi.PersistenceMechanismInstaller;\n-import org.apache.isis.core.runtime.persistence.internal.RuntimeContextFromSession;\n import org.apache.isis.core.runtime.services.ServicesInstaller;\n import org.apache.isis.core.runtime.services.ServicesInstallerFromConfigurationAndAnnotation;\n import org.apache.isis.core.runtime.system.DeploymentType;\n@@ -168,19 +167,20 @@ protected void doPutConfigurationProperty(final String key, final String value)\n \n     @Override\n     public SpecificationLoaderSpi provideSpecificationLoaderSpi(\n+            final DeploymentType deploymentType,\n             final Collection<MetaModelRefiner> metaModelRefiners) {\n-        return reflectorInstaller.createReflector(metaModelRefiners);\n+        return reflectorInstaller.createReflector(deploymentType.getDeploymentCategory(), metaModelRefiners);\n     }\n \n \n     @Override\n     public PersistenceSessionFactory providePersistenceSessionFactory(\n             final DeploymentType deploymentType,\n             final ServicesInjectorSpi servicesInjectorSpi,\n-            final RuntimeContextFromSession runtimeContext) {\n-        return persistenceMechanismInstaller.createPersistenceSessionFactory(deploymentType, servicesInjectorSpi,\n-                getConfiguration(),\n-                runtimeContext);\n+            final SpecificationLoaderSpi specificationLoader) {\n+        return persistenceMechanismInstaller.createPersistenceSessionFactory(\n+                    deploymentType, getConfiguration(),\n+                    servicesInjectorSpi);\n     }\n \n     //region > helpers",
                "changes": 12,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/core/runtime/systemusinginstallers/IsisComponentProviderUsingInstallers.java"
            },
            {
                "additions": 2,
                "sha": "07cf7833fbe72b52861ea9fd739abf051ecd8690",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/DataNucleusPersistenceMechanismInstaller.java",
                "deletions": 4,
                "filename": "core/runtime/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/DataNucleusPersistenceMechanismInstaller.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/DataNucleusPersistenceMechanismInstaller.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -29,7 +29,6 @@\n import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.runtime.installerregistry.installerapi.PersistenceMechanismInstaller;\n-import org.apache.isis.core.runtime.persistence.internal.RuntimeContextFromSession;\n import org.apache.isis.core.runtime.system.DeploymentType;\n import org.apache.isis.core.runtime.system.context.IsisContext;\n import org.apache.isis.core.runtime.system.persistence.PersistenceSessionFactory;\n@@ -68,11 +67,10 @@ public DataNucleusPersistenceMechanismInstaller() {\n     @Override\n     public PersistenceSessionFactory createPersistenceSessionFactory(\n             final DeploymentType deploymentType,\n-            final ServicesInjectorSpi servicesInjector,\n             final IsisConfigurationDefault configuration,\n-            final RuntimeContextFromSession runtimeContext) {\n+            final ServicesInjectorSpi servicesInjector) {\n \n-        return new PersistenceSessionFactory(deploymentType, servicesInjector, configuration, runtimeContext);\n+        return new PersistenceSessionFactory(deploymentType, configuration);\n     }\n     //endregion\n ",
                "changes": 6,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/main/java/org/apache/isis/objectstore/jdo/datanucleus/DataNucleusPersistenceMechanismInstaller.java"
            },
            {
                "additions": 7,
                "sha": "51afc3aaff93bf6d3550c88eb742403940971c80",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/test/java/org/apache/isis/core/runtime/context/IsisContextTest.java",
                "deletions": 4,
                "filename": "core/runtime/src/test/java/org/apache/isis/core/runtime/context/IsisContextTest.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/test/java/org/apache/isis/core/runtime/context/IsisContextTest.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.isis.core.commons.config.IsisConfiguration;\n import org.apache.isis.core.commons.config.IsisConfigurationDefault;\n import org.apache.isis.core.metamodel.adapter.oid.OidMarshaller;\n+import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.runtime.authentication.AuthenticationManager;\n import org.apache.isis.core.runtime.authentication.standard.SimpleSession;\n@@ -56,6 +57,8 @@\n     @Mock\n     private SpecificationLoaderSpi mockSpecificationLoader;\n \n+    @Mock\n+    protected ServicesInjectorSpi mockServicesInjector;\n     @Mock\n     protected PersistenceSessionFactory mockPersistenceSessionFactory;\n     @Mock\n@@ -91,10 +94,10 @@ public void setUp() throws Exception {\n                 mockSpecificationLoader,\n                 mockAuthenticationManager,\n                 mockAuthorizationManager,\n-                mockContainer)\n-        ;\n+                mockContainer);\n \n-        sessionFactory = new IsisSessionFactory(DeploymentType.UNIT_TESTING, configuration, mockSpecificationLoader, mockAuthenticationManager, mockAuthorizationManager, mockPersistenceSessionFactory);\n+        sessionFactory = new IsisSessionFactory(DeploymentType.UNIT_TESTING, configuration, mockServicesInjector,\n+                mockSpecificationLoader, mockAuthenticationManager, mockAuthorizationManager, mockPersistenceSessionFactory);\n         authSession = new SimpleSession(\"tester\", Collections.<String>emptyList());\n         \n         IsisContext.setConfiguration(configuration);\n@@ -121,7 +124,7 @@ public void openSession_getSpecificationLoader() {\n         // expecting\n         context.checking(new Expectations() {{\n             one(mockPersistenceSessionFactory)\n-                    .createPersistenceSession(mockSpecificationLoader, authSession);\n+                    .createPersistenceSession(mockServicesInjector, mockSpecificationLoader, authSession);\n             will(returnValue(mockPersistenceSession));\n         }});\n ",
                "changes": 11,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/test/java/org/apache/isis/core/runtime/context/IsisContextTest.java"
            },
            {
                "additions": 17,
                "sha": "35a3dbe69efbde19734e1b70305db4f1d51694ca",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/test/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionTest.java",
                "deletions": 12,
                "filename": "core/runtime/src/test/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionTest.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/core/runtime/src/test/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionTest.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -21,6 +21,8 @@\n \n import java.util.Collections;\n \n+import javax.jdo.PersistenceManagerFactory;\n+\n import org.jmock.Expectations;\n import org.jmock.Sequence;\n import org.jmock.auto.Mock;\n@@ -39,11 +41,11 @@\n import org.apache.isis.core.metamodel.deployment.DeploymentCategory;\n import org.apache.isis.core.metamodel.runtimecontext.RuntimeContext;\n import org.apache.isis.core.metamodel.services.ServicesInjectorDefault;\n+import org.apache.isis.core.metamodel.services.ServicesInjectorSpi;\n import org.apache.isis.core.metamodel.services.container.DomainObjectContainerDefault;\n import org.apache.isis.core.metamodel.spec.SpecificationLoaderSpi;\n import org.apache.isis.core.metamodel.specloader.InjectorMethodEvaluatorDefault;\n import org.apache.isis.core.runtime.persistence.adapter.PojoAdapter;\n-import org.apache.isis.core.runtime.persistence.adaptermanager.AdapterManagerDefault;\n import org.apache.isis.core.runtime.persistence.internal.RuntimeContextFromSession;\n import org.apache.isis.core.runtime.persistence.objectstore.transaction.CreateObjectCommand;\n import org.apache.isis.core.runtime.persistence.objectstore.transaction.DestroyObjectCommand;\n@@ -61,7 +63,6 @@\n     public JUnitRuleMockery2 context = JUnitRuleMockery2.createFor(Mode.INTERFACES_AND_CLASSES);\n \n     private ServicesInjectorDefault servicesInjector;\n-    private AdapterManagerDefault adapterManager;\n \n     \n     private PersistenceSession persistenceSession;\n@@ -94,17 +95,20 @@\n     @Mock\n     private RuntimeContext mockRuntimeContext;\n \n+    @Mock\n+    private ServicesInjectorSpi mockServicesInjector;\n+\n     @Mock\n     private IsisConfigurationDefault mockConfiguration;\n-    \n+\n+    @Mock\n+    private PersistenceManagerFactory mockPersistenceManager;\n+\n     @Mock\n     private MessageBroker mockMessageBroker;\n-    \n \n     private IsisMetaModel isisMetaModel;\n \n-\n-\n     public static class Customer {\n     }\n \n@@ -120,7 +124,7 @@ public void setUp() throws Exception {\n         context.ignoring(mockConfiguration);\n         context.ignoring(mockAuditingService3);\n \n-        isisMetaModel = new IsisMetaModel(mockRuntimeContext, new ProgrammingModelFacetsJava5(), new CustomerRepository());\n+        isisMetaModel = new IsisMetaModel(new ProgrammingModelFacetsJava5(), new CustomerRepository());\n         isisMetaModel.init();\n         \n         context.checking(new Expectations() {\n@@ -140,24 +144,25 @@ public void setUp() throws Exception {\n                 new RuntimeContextFromSession(\n                         DeploymentCategory.PRODUCTION,\n                         mockConfiguration,\n-                        servicesInjector);\n+                        servicesInjector,\n+                        mockSpecificationLoader);\n         final DomainObjectContainerDefault container = new DomainObjectContainerDefault();\n \n         runtimeContext.injectInto(container);\n \n         servicesInjector = new ServicesInjectorDefault(\n                 Collections.<Object>singletonList(container),new InjectorMethodEvaluatorDefault());\n \n-        persistenceSession = new PersistenceSession(mockPersistenceSessionFactory, mockConfiguration,\n-                mockSpecificationLoader, mockAuthenticationSession) {\n+        persistenceSession = new PersistenceSession(mockConfiguration, mockServicesInjector, mockSpecificationLoader,\n+                mockAuthenticationSession,\n+                mockPersistenceManager, mockPersistenceSessionFactory\n+        ) {\n             @Override\n             protected SpecificationLoaderSpi getSpecificationLoader() {\n                 return isisMetaModel.getSpecificationLoader();\n             }\n             \n         };\n-        adapterManager = new AdapterManagerDefault(persistenceSession\n-        );\n \n         context.checking(new Expectations(){{\n             allowing(mockAuthenticationSession).getUserName();",
                "changes": 29,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/core/runtime/src/test/java/org/apache/isis/core/runtime/system/persistence/PersistenceSessionTest.java"
            },
            {
                "additions": 3,
                "sha": "c671ddecd88c7b686067e485ae34afdea1f78e28",
                "status": "modified",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/example/application/simpleapp/dom/pom.xml",
                "deletions": 0,
                "filename": "example/application/simpleapp/dom/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simpleapp/dom/pom.xml?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -153,6 +153,7 @@\n                 </dependency>\n             </dependencies>\n         </profile>\n+\n         <profile>\n             <id>isis-validate</id>\n             <activation>\n@@ -165,6 +166,7 @@\n                         <artifactId>isis-maven-plugin</artifactId>\n                         <version>${isis.version}</version>\n                         <configuration>\n+                            <appManifest>domainapp.dom.DomainAppDomManifest</appManifest>\n                             <isisConfigDir>../webapp/src/main/webapp/WEB-INF</isisConfigDir>\n                         </configuration>\n                         <dependencies>\n@@ -195,6 +197,7 @@\n                 </plugins>\n             </build>\n         </profile>\n+\n     </profiles>\n \n </project>",
                "changes": 3,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/example/application/simpleapp/dom/pom.xml"
            },
            {
                "additions": 92,
                "sha": "c32996f5f0aced4f9d601d925e5bea077ad770b5",
                "status": "added",
                "raw_url": "https://github.com/apache/isis/raw/a129fd2d5b3817d682aa128086d2cfa3a02854a3/example/application/simpleapp/dom/src/main/java/domainapp/dom/DomainAppDomManifest.java",
                "deletions": 0,
                "filename": "example/application/simpleapp/dom/src/main/java/domainapp/dom/DomainAppDomManifest.java",
                "contents_url": "https://api.github.com/repos/apache/isis/contents/example/application/simpleapp/dom/src/main/java/domainapp/dom/DomainAppDomManifest.java?ref=a129fd2d5b3817d682aa128086d2cfa3a02854a3",
                "patch": "@@ -0,0 +1,92 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package domainapp.dom;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.isis.applib.AppManifest;\n+import org.apache.isis.applib.fixturescripts.FixtureScript;\n+\n+/**\n+ * Bootstrap the application.\n+ */\n+public class DomainAppDomManifest implements AppManifest {\n+\n+    /**\n+     * Load all services and entities found in (the packages and subpackages within) these modules\n+     */\n+    @Override\n+    public List<Class<?>> getModules() {\n+        return Arrays.asList(\n+                DomainAppDomainModule.class  // domain (entities and repositories)\n+        );\n+    }\n+\n+    /**\n+     * No additional services.\n+     */\n+    @Override\n+    public List<Class<?>> getAdditionalServices() {\n+        return Collections.emptyList();\n+    }\n+\n+    /**\n+     * Use shiro for authentication.\n+     *\n+     * <p>\n+     *     NB: this is ignored for integration tests, which always use \"bypass\".\n+     * </p>\n+     */\n+    @Override\n+    public String getAuthenticationMechanism() {\n+        return \"shiro\";\n+    }\n+\n+    /**\n+     * Use shiro for authorization.\n+     *\n+     * <p>\n+     *     NB: this is ignored for integration tests, which always use \"bypass\".\n+     * </p>\n+     */\n+    @Override\n+    public String getAuthorizationMechanism() {\n+        return \"shiro\";\n+    }\n+\n+    /**\n+     * No fixtures.\n+     */\n+    @Override\n+    public List<Class<? extends FixtureScript>> getFixtures() {\n+        return Collections.emptyList();\n+    }\n+\n+    /**\n+     * No overrides.\n+     */\n+    @Override\n+    public Map<String, String> getConfigurationProperties() {\n+        return null;\n+    }\n+\n+}",
                "changes": 92,
                "blob_url": "https://github.com/apache/isis/blob/a129fd2d5b3817d682aa128086d2cfa3a02854a3/example/application/simpleapp/dom/src/main/java/domainapp/dom/DomainAppDomManifest.java"
            }
        ],
        "repo": "isis",
        "message": "ISIS-1194: simplfying the bootstrap and wiring of components, in particular around PersistenceSessionFactory\n\nspecifically:\n- IsisSessionFactory\n  - now passed in the ServicesInjector (rather than obtaining it from the PersistenceSessionFactory)\n  - initialization of FixtureClock done in IsisSessionFactory rather than PersistenceSessionFactory\n- IsisSystem\n  - createSessionFactory(), changed the order in order to remove some bidir relationships\n  - in shutdownServices, avoid NPE if the serviceInitializer was never instantiated during init()\n- PersistenceSessionFactory\n- no longer implements MetaModelRefiner, instead moved out to separate class (PersistenceSessionFactoryMetamodelRefiner)\n    - this allows us to break the bidir between PersistenceSessionFactory and SpecificationLoader\n  - no longer requires a RuntimeContext\n  - no longer requires a ServicesInjector (is provided by IsisSessionFactory when #createPersistenceSession() is called to pass onto the created PersistenceSession)\n  - no longer implements SpecificationLoaderAware, nor requires a SpecificationLoader (is provided by IsisSessionFactory when #createPerisistenceSession is called)\n- similar changes to IsisMetaModel, in its constructor an init() method, to wire up components in the correct order\n- PersistenceSession\n  - no longer holds reference to PersistenceSessionFactory (though does only as FixturesInstallerFlag in order that PSF can continue to cache whether fixtures installed)\n  - is passed in the JDO PersistenceManagerFactory from Isis' PSF (rather than accessing the PSF's DataNucleusApplicationComponents, which is now wholly internal to PSF)\n  - is passed in the ServicesInjector directly (rather than obtain from Isis' PSF)\n- RuntimeContextAbstract\n  - now also passed in SpecificationLoader into its constructor (required reordering of IsisSessionFactory#init to be able to do this)\n  - thereby remove the whole SpecificationLookupDelegator contrivance\n- JavaReflectorHelper\n  - pass through deploymentType to ObjectReflectorDefault\n- ObjectReflectorDefault\n  - removal of isInjectorMethodFor, instead have callers instantiate the InjectorMethodEvaluatorDefault directly\n\nalso, to make caller hierarchy more useful::\n- changed ApplicationScopedComponent and SessionScopedComponent into marker interfaces\n- removed Injectable, pushed injectInto(Object) into subtypes\n\nalso:\n- enhanced IsisMojoAbstract and IsisMojoValidate (maven-isis-plugin)\n  - to accept an appManifest in the pom.xml\n  - use an AppManifest rather than MetaModel to bootstrap the system and validate\n- moved IsisComponentProviderDefault from core-integtest into core-runtime (renamed as ...Default2), so can be used by maven-isis-plugin\n\nalso:\n- deleted AdapterManagerDefault, no longer used",
        "commit": "https://github.com/apache/isis/commit/a129fd2d5b3817d682aa128086d2cfa3a02854a3"
    }
]