[{"commit": "https://github.com/apache/ignite-teamcity-bot/commit/631daf7e7ffeb3cc174dc76099e484ed3c5be410", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/27e6181fef885a91fe5c579a1a8b27775c93ae1d", "message": "NPE fix", "bug_id": "ignite-teamcity-bot_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/631daf7e7ffeb3cc174dc76099e484ed3c5be410/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/ui/DsTestFailureUi.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/631daf7e7ffeb3cc174dc76099e484ed3c5be410/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/ui/DsTestFailureUi.java", "sha": "6b9612c6dfc645487c58ea6e3a77c8edfd5d5d44", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/ui/DsTestFailureUi.java?ref=631daf7e7ffeb3cc174dc76099e484ed3c5be410", "patch": "@@ -218,7 +218,7 @@ public void initStat(TestCompactedMult occurrence,\n             if (statForProblemsDetection.detectTemplate(EventTemplates.newContributedTestFailure) != null)\n                 problemRef = new DsProblemRef(\"Recently contributed test failure\");\n \n-            if (stat.isFlaky()\n+            if (statForProblemsDetection.isFlaky()\n                     && statForProblemsDetection.detectTemplate(EventTemplates.newFailureForFlakyTest) != null)\n                 problemRef = new DsProblemRef(\"New failure of flaky test\");\n         }", "filename": "tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/ui/DsTestFailureUi.java"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/a2e07956e73b1373666ba4b4d477917659478b37", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/ca6b0d72b7ce766414d19a7287415f67f3ce822d", "message": "NPE fix for trusted tests mode", "bug_id": "ignite-teamcity-bot_2", "file": [{"additions": 6, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/a2e07956e73b1373666ba4b4d477917659478b37/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/a2e07956e73b1373666ba4b4d477917659478b37/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java", "sha": "2afa07a885ac8eb534442e555b94672db2ce0efd", "changes": 11, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java?ref=a2e07956e73b1373666ba4b4d477917659478b37", "patch": "@@ -642,12 +642,13 @@ public int trustedTests(ITeamcityIgnited tcIgnited, @Nullable Integer branchName\n \n             if (baseBranchStat == null)\n                 testWillBeBlockerIfFailed = true;\n+            else {\n+                float failRate = baseBranchStat.getFailRate();\n+                boolean lowFailureRate = failRate * 100.0f < TcBotConst.NON_FLAKY_TEST_FAIL_RATE_BLOCKER_BORDER_PERCENTS;\n \n-            float failRate = baseBranchStat.getFailRate();\n-            boolean lowFailureRate = failRate * 100.0f < TcBotConst.NON_FLAKY_TEST_FAIL_RATE_BLOCKER_BORDER_PERCENTS;\n-\n-            if (lowFailureRate && !baseBranchStat.isFlaky())\n-                testWillBeBlockerIfFailed = true;\n+                if (lowFailureRate && !baseBranchStat.isFlaky())\n+                    testWillBeBlockerIfFailed = true;\n+            }\n \n             if (testWillBeBlockerIfFailed) // this test will be considered as blocker if will fail\n                 trustedCnt.addAndGet(1);", "filename": "tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/cc551236b6da53738a4cf893fd23b405a5cc930e", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/5c2d80c3ae7eb0153b2131abc9729b8d89b0a1b6", "message": "NPE in case unknown base branch fixed", "bug_id": "ignite-teamcity-bot_3", "file": [{"additions": 1, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/cc551236b6da53738a4cf893fd23b405a5cc930e/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/Version.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/cc551236b6da53738a4cf893fd23b405a5cc930e/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/Version.java", "sha": "13d00b76e431e2f32017d1646c06b0d3b583328a", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/Version.java?ref=cc551236b6da53738a4cf893fd23b405a5cc930e", "patch": "@@ -28,7 +28,7 @@\n     public static final String GITHUB_REF = \"https://github.com/apache/ignite-teamcity-bot\";\n \n     /** TC Bot Version. */\n-    public static final String VERSION = \"20190706\";\n+    public static final String VERSION = \"20190711\";\n \n     /** Java version, where Web App is running. */\n     public String javaVer;", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/Version.java"}, {"additions": 5, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/cc551236b6da53738a4cf893fd23b405a5cc930e/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/cc551236b6da53738a4cf893fd23b405a5cc930e/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java", "sha": "b947da0fb7908010cfa992a18520064f01447ac4", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java?ref=cc551236b6da53738a4cf893fd23b405a5cc930e", "patch": "@@ -659,10 +659,14 @@ public IRunHistory history(ITeamcityIgnited tcIgn, Integer baseBranchId) {\n     }\n \n     @Nullable\n-    ISuiteRunHistory suiteHist(ITeamcityIgnited tcIgn, Integer baseBranchId) {\n+    ISuiteRunHistory suiteHist(ITeamcityIgnited tcIgn, @Nullable Integer baseBranchId) {\n         Integer buildTypeIdId = buildTypeIdId();\n         Preconditions.checkNotNull(buildTypeIdId, \"Build type ID should be filled\");\n \n+        //unknown string for compactor\n+        if (baseBranchId == null)\n+            return null;\n+\n         try {\n             return historyCacheMap.get(baseBranchId,\n                 () -> {", "filename": "tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/MultBuildRunCtx.java"}, {"additions": 2, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/cc551236b6da53738a4cf893fd23b405a5cc930e/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/TestCompactedMult.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/cc551236b6da53738a4cf893fd23b405a5cc930e/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/TestCompactedMult.java", "sha": "6f25d1c6c6b997ea52fc4f780240f1b91d695f5e", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/TestCompactedMult.java?ref=cc551236b6da53738a4cf893fd23b405a5cc930e", "patch": "@@ -120,10 +120,9 @@ public void add(TestCompacted next) {\n         occurrences.add(next);\n     }\n \n-\n-    public IRunHistory history(ITeamcityIgnited ignited, Integer baseBranchId) {\n+    public IRunHistory history(ITeamcityIgnited ignited, @Nullable Integer baseBranchId) {\n         Integer name = testName();\n-        if (name == null)\n+        if (name == null || baseBranchId == null)\n             return null;\n \n         ISuiteRunHistory suiteRunHist = ctx.suiteHist(ignited, baseBranchId);", "filename": "tcbot-engine/src/main/java/org/apache/ignite/tcbot/engine/chain/TestCompactedMult.java"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/a44cc309cf5ffee78aae7669c529e304da5f7e82", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/efdd0c7e0dbda0ae05edbf42775330133b1f7180", "message": "NPE fix during build ctx creation", "bug_id": "ignite-teamcity-bot_4", "file": [{"additions": 6, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/a44cc309cf5ffee78aae7669c529e304da5f7e82/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcbot/chain/BuildChainProcessor.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/a44cc309cf5ffee78aae7669c529e304da5f7e82/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcbot/chain/BuildChainProcessor.java", "sha": "325fffc4ff60e575072eb53c3babf6abfbe0b22d", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcbot/chain/BuildChainProcessor.java?ref=a44cc309cf5ffee78aae7669c529e304da5f7e82", "patch": "@@ -157,10 +157,14 @@ public FullChainRunCtx loadFullChainContext(\n \n     @SuppressWarnings(\"WeakerAccess\")\n     @AutoProfiling\n-    protected void createCxt(ITeamcityIgnited teamcityIgnited, Map<String, MultBuildRunCtx> buildsCtxMap,\n-        FatBuildCompacted buildCompacted) {\n+    protected void createCxt(ITeamcityIgnited teamcityIgnited,\n+                             Map<String, MultBuildRunCtx> buildsCtxMap,\n+                             FatBuildCompacted buildCompacted) {\n         final BuildRef ref = buildCompacted.toBuildRef(compactor);\n \n+        if (buildCompacted.isFakeStub() || ref.isFakeStub())\n+            return;\n+\n         final MultBuildRunCtx ctx = buildsCtxMap.computeIfAbsent(ref.buildTypeId,\n                 k -> new MultBuildRunCtx(ref, compactor));\n ", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcbot/chain/BuildChainProcessor.java"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/de6a8b655ab66517766adb6f5692b4f1879dfa88", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/bd93e25788650a32a24382d0de46a27b301ac277", "message": "IGNITE-9333: NPE fixed", "bug_id": "ignite-teamcity-bot_5", "file": [{"additions": 9, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/de6a8b655ab66517766adb6f5692b4f1879dfa88/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/de6a8b655ab66517766adb6f5692b4f1879dfa88/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java", "sha": "820d888844e0d3699fe1f31f5eb92805aa6438ee", "changes": 10, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java?ref=de6a8b655ab66517766adb6f5692b4f1879dfa88", "patch": "@@ -182,7 +182,15 @@ private long getAllProblemsCount(String buildTypeId) {\n \n         return problems.stream()\n             .filter(Objects::nonNull)\n-            .filter(p -> buildTypeId == null || buildTypeId.equals(p.buildRef.buildTypeId)\n+            .filter(p -> {\n+                    if (buildTypeId == null)\n+                        return true;\n+                    if (p.buildRef == null && buildTypeId == null)\n+                        return true;\n+                    if (p.buildRef != null && buildTypeId.equals(p.buildRef.buildTypeId))\n+                        return true;\n+                    return false;\n+                }\n             );\n     }\n ", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java"}, {"additions": 3, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/de6a8b655ab66517766adb6f5692b4f1879dfa88/ignite-tc-helper-web/src/main/webapp/js/testfails-2.1.js", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/de6a8b655ab66517766adb6f5692b4f1879dfa88/ignite-tc-helper-web/src/main/webapp/js/testfails-2.1.js", "sha": "3502592c13bec8c67057e6d48d9c331f8be4daee", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/webapp/js/testfails-2.1.js?ref=de6a8b655ab66517766adb6f5692b4f1879dfa88", "patch": "@@ -184,7 +184,7 @@ function addBlockersData(server, settings) {\n         blockers = \"<tr bgcolor='#F5F5FF'><th colspan='3' class='table-title'><b>Possible Blockers</b></th>\" +\n             \"<th  class='table-title'>Base Branch</th></tr>\" +\n             blockers +\n-            \"<tr bgcolor='#F5F5FF'><th colspan='3' class='table-title'><b>Other failures</b></th>\" +\n+            \"<tr bgcolor='#F5F5FF'><th colspan='3' class='table-title'><b>All Failures</b></th>\" +\n             \"<th  class='table-title'>Base Branch</th></tr>\";\n     }\n \n@@ -666,7 +666,7 @@ function drawLatestRuns(latestRuns) {\n         return \"\";\n \n     var res = \"\";\n-    res += \"<nobr><span style='white-space: nowrap; width:\" + (latestRuns.length  * 2) + \"px; display: inline-block;' title='Latest master runs history from right to left is oldest to newest. Red-failed,green-passed,black-timeout'>\";\n+    res += \"<nobr><span style='white-space: nowrap; width:\" + (latestRuns.length  * 1) + \"px; display: inline-block;' title='Latest master runs history from right to left is oldest to newest. Red-failed,green-passed,black-timeout'>\";\n \n     var len = 1;\n     var prevState = null;\n@@ -704,7 +704,7 @@ function drawLatestRunsBlock(state, len) {\n     else if (state == 3)\n         runColor = \"black\";\n \n-    return \"<span style='background-color: \" + runColor + \"; width:\" + (len * 2) + \"px; height:10px; display: inline-block;'></span>\";\n+    return \"<span style='background-color: \" + runColor + \"; width:\" + (len * 1) + \"px; height:10px; display: inline-block;'></span>\";\n }\n \n ", "filename": "ignite-tc-helper-web/src/main/webapp/js/testfails-2.1.js"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/68413dff2aa6dc19144f9db714059fcc202fee17", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/25a0826ccd397bd1c83f4b92d5e9d191b1917441", "message": "NPE for old branches was fixed", "bug_id": "ignite-teamcity-bot_6", "file": [{"additions": 3, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/68413dff2aa6dc19144f9db714059fcc202fee17/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/68413dff2aa6dc19144f9db714059fcc202fee17/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java", "sha": "249a72a57dbdf80b5e2d26ecdecd6351329d5667", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java?ref=68413dff2aa6dc19144f9db714059fcc202fee17", "patch": "@@ -482,12 +482,11 @@ public Build getBuild(String href) {\n \n     public ProblemOccurrences getProblems(Build build) {\n         if (build.problemOccurrences != null) {\n-            ProblemOccurrences problemOccurrences = getJaxbUsingHref(build.problemOccurrences.href, ProblemOccurrences.class);\n+            ProblemOccurrences coll = getJaxbUsingHref(build.problemOccurrences.href, ProblemOccurrences.class);\n \n-            problemOccurrences.problemOccurrences\n-                .forEach(p -> p.buildRef = build);\n+            coll.getProblemsNonNull().forEach(p -> p.buildRef = build);\n \n-            return problemOccurrences;\n+            return coll;\n         }\n         else\n             return new ProblemOccurrences();", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java"}, {"additions": 1, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/68413dff2aa6dc19144f9db714059fcc202fee17/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/conf/ChainAtServerTracked.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/68413dff2aa6dc19144f9db714059fcc202fee17/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/conf/ChainAtServerTracked.java", "sha": "794f47f7b024430cfd7ddc54dcc70724137d03f7", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/conf/ChainAtServerTracked.java?ref=68413dff2aa6dc19144f9db714059fcc202fee17", "patch": "@@ -46,7 +46,7 @@\n     }\n \n     /**\n-     * @return\n+     * @return branch in TC indentification to queue builds\n      */\n     @Nonnull public String getBranchForRestMandatory() {\n         checkState(!isNullOrEmpty(branchForRest), \"Invalid config: branchForRest should be filled \" + this);", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/conf/ChainAtServerTracked.java"}, {"additions": 2, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/68413dff2aa6dc19144f9db714059fcc202fee17/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/68413dff2aa6dc19144f9db714059fcc202fee17/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java", "sha": "43d2e820b3a6e16c9f22124091dfc0a5724c1436", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java?ref=68413dff2aa6dc19144f9db714059fcc202fee17", "patch": "@@ -22,14 +22,15 @@\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n import org.apache.ignite.ci.tcmodel.result.ProblemOccurrencesRef;\n+import org.jetbrains.annotations.Nullable;\n \n /**\n  * List of problems associated with build.\n  */\n @XmlRootElement(name = \"problemOccurrences\")\n public class ProblemOccurrences extends ProblemOccurrencesRef {\n     @XmlElement(name = \"problemOccurrence\")\n-    public List<ProblemOccurrence> problemOccurrences;\n+    @Nullable public List<ProblemOccurrence> problemOccurrences;\n \n     public List<ProblemOccurrence> getProblemsNonNull() {\n         return problemOccurrences == null ? Collections.emptyList() : problemOccurrences;", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/b40da538c1e3999eaf3b5a715ea6488f6c1c1202", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/c861b457c1dbd35a2a2d30998b827a98916b049b", "message": "IGNITE-10562 NPE fix for TC Bot DB contains invalid values for build references ID maps to value with other ID.", "bug_id": "ignite-teamcity-bot_7", "file": [{"additions": 2, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/b40da538c1e3999eaf3b5a715ea6488f6c1c1202/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/FatBuildDao.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/b40da538c1e3999eaf3b5a715ea6488f6c1c1202/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/FatBuildDao.java", "sha": "38f6502a08d5a554f58fe028a0bddfb1a5d339d9", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/FatBuildDao.java?ref=b40da538c1e3999eaf3b5a715ea6488f6c1c1202", "patch": "@@ -24,6 +24,7 @@\n import java.util.Objects;\n import java.util.Set;\n import java.util.stream.Collectors;\n+import javax.annotation.Nullable;\n import javax.inject.Inject;\n import javax.inject.Provider;\n import javax.validation.constraints.NotNull;\n@@ -37,7 +38,6 @@\n import org.apache.ignite.ci.tcmodel.result.stat.Statistics;\n import org.apache.ignite.ci.tcmodel.result.tests.TestOccurrencesFull;\n import org.apache.ignite.ci.teamcity.ignited.IStringCompactor;\n-import org.jetbrains.annotations.Nullable;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -80,7 +80,7 @@ public FatBuildDao init() {\n      * @param existingBuild existing version of build in the DB.\n      * @return Fat Build saved (if modifications detected), otherwise null.\n      */\n-    public FatBuildCompacted saveBuild(int srvIdMaskHigh,\n+    @Nullable public FatBuildCompacted saveBuild(int srvIdMaskHigh,\n                                        int buildId,\n                                        @NotNull Build build,\n                                        @NotNull List<TestOccurrencesFull> tests,", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/FatBuildDao.java"}, {"additions": 4, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/b40da538c1e3999eaf3b5a715ea6488f6c1c1202/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/ProactiveFatBuildSync.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/b40da538c1e3999eaf3b5a715ea6488f6c1c1202/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/ProactiveFatBuildSync.java", "sha": "52af9fe2b91ea1bda373001c3a9a0926b72d9587", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/ProactiveFatBuildSync.java?ref=b40da538c1e3999eaf3b5a715ea6488f6c1c1202", "patch": "@@ -271,6 +271,9 @@ public FatBuildCompacted loadBuild(ITeamcityConn conn, int buildId,\n \n         FatBuildCompacted savedVer = reloadBuild(conn, buildId, existingBuild);\n \n+        if (savedVer == null)\n+            return null;\n+\n         BuildRefCompacted refCompacted = new BuildRefCompacted(savedVer);\n         if (savedVer.isFakeStub())\n             refCompacted.setId(buildId); //to provide possiblity to save the build\n@@ -294,7 +297,7 @@ public FatBuildCompacted loadBuild(ITeamcityConn conn, int buildId,\n      */\n     @SuppressWarnings({\"WeakerAccess\"})\n     @AutoProfiling\n-    public FatBuildCompacted reloadBuild(ITeamcityConn conn, int buildId, @Nullable FatBuildCompacted existingBuild) {\n+    @Nullable public FatBuildCompacted reloadBuild(ITeamcityConn conn, int buildId, @Nullable FatBuildCompacted existingBuild) {\n         //todo some sort of locking to avoid double requests\n \n         final String srvName = conn.serverId();", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/teamcity/ignited/fatbuild/ProactiveFatBuildSync.java"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/fdc8130cd692d73da10025ba813119a0009ff783", "message": "Refactor save of value in cache and fix NPE - Fixes #3.\n\nSigned-off-by: Dmitriy Pavlov <dpavlov@apache.org>", "bug_id": "ignite-teamcity-bot_8", "file": [{"additions": 33, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/ITeamcity.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/ITeamcity.java", "sha": "d9d8d1da9d75127416418d4df59e232be4e367c3", "changes": 36, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/ITeamcity.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -33,6 +33,7 @@\n import org.apache.ignite.ci.tcmodel.conf.BuildType;\n import org.apache.ignite.ci.tcmodel.hist.BuildRef;\n import org.apache.ignite.ci.tcmodel.result.Build;\n+import org.apache.ignite.ci.tcmodel.result.issues.IssuesUsagesList;\n import org.apache.ignite.ci.tcmodel.result.problems.ProblemOccurrence;\n import org.apache.ignite.ci.tcmodel.result.problems.ProblemOccurrences;\n import org.apache.ignite.ci.tcmodel.result.stat.Statistics;\n@@ -52,6 +53,7 @@\n public interface ITeamcity extends AutoCloseable {\n \n     String DEFAULT = \"<default>\";\n+    long DEFAULT_BUILDS_COUNT = 1000;\n \n     CompletableFuture<List<BuildType>> getProjectSuites(String projectId);\n \n@@ -62,7 +64,17 @@\n      * @param branch\n      * @return list of builds in historical order, recent builds coming last\n      */\n-    List<BuildRef> getFinishedBuilds(String projectId, String branch);\n+    default List<BuildRef> getFinishedBuilds(String projectId, String branch) {\n+        return getFinishedBuilds(projectId, branch, null);\n+    };\n+\n+    /**\n+     * @param projectId suite ID (string without spaces)\n+     * @param branch\n+     * @param cnt builds count\n+     * @return list of builds in historical order, recent builds coming last\n+     */\n+    List<BuildRef> getFinishedBuilds(String projectId, String branch, Long cnt);\n \n     /**\n      * Includes snapshot dependencies failed builds into list\n@@ -71,7 +83,19 @@\n      * @param branch branch in TC identification\n      * @return list of builds in historical order, recent builds coming last\n      */\n-    List<BuildRef> getFinishedBuildsIncludeSnDepFailed(String projectId, String branch);\n+    default List<BuildRef> getFinishedBuildsIncludeSnDepFailed(String projectId, String branch){\n+        return getFinishedBuilds(projectId, branch, null);\n+    };\n+\n+    /**\n+     * Includes snapshot dependencies failed builds into list\n+     *\n+     * @param projectId suite ID (string without spaces)\n+     * @param branch branch in TC identification\n+     * @param cnt builds count\n+     * @return list of builds in historical order, recent builds coming last\n+     */\n+    List<BuildRef> getFinishedBuildsIncludeSnDepFailed(String projectId, String branch, Long cnt);\n \n     /**   */\n     CompletableFuture<List<BuildRef>> getRunningBuilds(@Nullable String branch);\n@@ -80,7 +104,11 @@\n     CompletableFuture<List<BuildRef>> getQueuedBuilds(@Nullable String branch);\n \n     default int[] getBuildNumbersFromHistory(String projectId, String branchNameForHist) {\n-        return getFinishedBuilds(projectId, branchNameForHist).stream().mapToInt(BuildRef::getId).toArray();\n+        return getBuildNumbersFromHistory(projectId, branchNameForHist, null);\n+    }\n+\n+    default int[] getBuildNumbersFromHistory(String projectId, String branchNameForHist, Long cnt) {\n+        return getFinishedBuilds(projectId, branchNameForHist, cnt).stream().mapToInt(BuildRef::getId).toArray();\n     }\n \n     Build getBuild(String href);\n@@ -114,6 +142,8 @@ default Build getBuild(int id) {\n \n     ChangesList getChangesList(String href);\n \n+    IssuesUsagesList getIssuesUsagesList(String href);\n+\n     /**\n      * Runs deep collection of all related statistics for particular build\n      *", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/ITeamcity.java"}, {"additions": 54, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgnitePersistentTeamcity.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgnitePersistentTeamcity.java", "sha": "e89e2f2ba11ed49ae1cd4fd4ac0fe1c5d5134483", "changes": 75, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgnitePersistentTeamcity.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -36,6 +36,7 @@\n import java.util.function.BiFunction;\n import java.util.function.Function;\n import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import java.util.stream.StreamSupport;\n import javax.annotation.Nullable;\n@@ -57,6 +58,7 @@\n import org.apache.ignite.ci.tcmodel.conf.BuildType;\n import org.apache.ignite.ci.tcmodel.hist.BuildRef;\n import org.apache.ignite.ci.tcmodel.result.Build;\n+import org.apache.ignite.ci.tcmodel.result.issues.IssuesUsagesList;\n import org.apache.ignite.ci.tcmodel.result.problems.ProblemOccurrences;\n import org.apache.ignite.ci.tcmodel.result.stat.Statistics;\n import org.apache.ignite.ci.tcmodel.result.tests.TestOccurrence;\n@@ -84,6 +86,7 @@\n     public static final String LOG_CHECK_RESULT = \"logCheckResult\";\n     public static final String CHANGE_INFO_FULL = \"changeInfoFull\";\n     public static final String CHANGES_LIST = \"changesList\";\n+    public static final String ISSUES_USAGES_LIST = \"issuesUsagesList\";\n     public static final String TEST_FULL = \"testFull\";\n     public static final String BUILD_PROBLEMS = \"buildProblems\";\n     public static final String BUILD_STATISTICS = \"buildStatistics\";\n@@ -197,7 +200,7 @@ private IgnitePersistentTeamcity(Ignite ignite, IgniteTeamcityHelper teamcity) {\n     }\n \n     /**\n-     * @return Build history: {@link BuildRef} lists cache, 32 parts, transaactional\n+     * @return Build history: {@link BuildRef} lists cache, 32 parts, transactional\n      */\n     public IgniteCache<SuiteInBranch, Expirable<List<BuildRef>>> buildHistIncFailedCache() {\n         return getOrCreateCacheV2Tx(ignCacheNme(BUILD_HIST_FINISHED_OR_FAILED));\n@@ -240,14 +243,15 @@ private IgnitePersistentTeamcity(Ignite ignite, IgniteTeamcityHelper teamcity) {\n         return loaded;\n     }\n \n-    private <K, V> V timedLoadIfAbsentOrMerge(IgniteCache<K, Expirable<V>> cache, int seconds, K key,\n+    private <K, V extends List> V timedLoadIfAbsentOrMerge(IgniteCache<K, Expirable<V>> cache, int seconds, Long cnt, K key,\n         BiFunction<K, V, V> loadWithMerge) {\n         @Nullable final Expirable<V> persistedBuilds = cache.get(key);\n \n         int fields = ObjectInterner.internFields(persistedBuilds);\n \n         if (persistedBuilds != null) {\n-            if (persistedBuilds.isAgeLessThanSecs(seconds))\n+            if (persistedBuilds.isAgeLessThanSecs(seconds) &&\n+                (cnt == null || persistedBuilds.hasCounterGreaterThan(cnt)))\n                 return persistedBuilds.getData();\n         }\n \n@@ -258,7 +262,7 @@ private IgnitePersistentTeamcity(Ignite ignite, IgniteTeamcityHelper teamcity) {\n         try {\n             apply = loadWithMerge.apply(key, persistedBuilds != null ? persistedBuilds.getData() : null);\n \n-            final Expirable<V> newVal = new Expirable<>(System.currentTimeMillis(), apply);\n+            final Expirable<V> newVal = new Expirable<>(System.currentTimeMillis(), apply.size(), apply);\n \n             cache.put(key, newVal);\n         }\n@@ -270,14 +274,14 @@ private IgnitePersistentTeamcity(Ignite ignite, IgniteTeamcityHelper teamcity) {\n     }\n \n     /** {@inheritDoc} */\n-    @Override public List<BuildRef> getFinishedBuilds(String projectId, String branch) {\n+    @Override public List<BuildRef> getFinishedBuilds(String projectId, String branch, Long cnt) {\n         final SuiteInBranch suiteInBranch = new SuiteInBranch(projectId, branch);\n \n-        return timedLoadIfAbsentOrMerge(buildHistCache(), 60, suiteInBranch,\n+        List<BuildRef> buildRefs = timedLoadIfAbsentOrMerge(buildHistCache(), 60, cnt, suiteInBranch,\n             (key, persistedValue) -> {\n                 List<BuildRef> builds;\n                 try {\n-                    builds = teamcity.getFinishedBuilds(projectId, branch);\n+                    builds = teamcity.getFinishedBuilds(projectId, branch, cnt);\n                 }\n                 catch (Exception e) {\n                     if (Throwables.getRootCause(e) instanceof FileNotFoundException) {\n@@ -290,6 +294,13 @@ private IgnitePersistentTeamcity(Ignite ignite, IgniteTeamcityHelper teamcity) {\n \n                 return mergeByIdToHistoricalOrder(persistedValue, builds);\n             });\n+\n+        if (cnt == null)\n+            return buildRefs;\n+\n+        return buildRefs.stream()\n+            .skip(cnt < buildRefs.size() ? buildRefs.size() - cnt : 0)\n+            .collect(Collectors.toList());\n     }\n \n     @NotNull\n@@ -307,12 +318,12 @@ private IgnitePersistentTeamcity(Ignite ignite, IgniteTeamcityHelper teamcity) {\n     //loads build history with following parameter: defaultFilter:false,state:finished\n \n     /** {@inheritDoc} */\n-    @Override public List<BuildRef> getFinishedBuildsIncludeSnDepFailed(String projectId, String branch) {\n+    @Override public List<BuildRef> getFinishedBuildsIncludeSnDepFailed(String projectId, String branch, Long cnt) {\n         final SuiteInBranch suiteInBranch = new SuiteInBranch(projectId, branch);\n \n-        return timedLoadIfAbsentOrMerge(buildHistIncFailedCache(), 60, suiteInBranch,\n+        return timedLoadIfAbsentOrMerge(buildHistIncFailedCache(), 60, cnt, suiteInBranch,\n             (key, persistedValue) -> {\n-                List<BuildRef> failed = teamcity.getFinishedBuildsIncludeSnDepFailed(projectId, branch);\n+                List<BuildRef> failed = teamcity.getFinishedBuildsIncludeSnDepFailed(projectId, branch, cnt);\n \n                 return mergeByIdToHistoricalOrder(persistedValue, failed);\n             });\n@@ -335,8 +346,8 @@ private IgnitePersistentTeamcity(Ignite ignite, IgniteTeamcityHelper teamcity) {\n \n     public static int getTriggerRelCacheValidSecs(int defaultSecs) {\n         long msSinceTrigger = System.currentTimeMillis() - lastTriggerMs;\n-        long secondsSinceTigger = TimeUnit.MILLISECONDS.toSeconds(msSinceTrigger);\n-        return Math.min((int)secondsSinceTigger, defaultSecs);\n+        long secondsSinceTrigger = TimeUnit.MILLISECONDS.toSeconds(msSinceTrigger);\n+        return Math.min((int)secondsSinceTrigger, defaultSecs);\n     }\n \n     /** {@inheritDoc} */\n@@ -446,18 +457,22 @@ private Build realLoadBuild(String href1) {\n \n     /** {@inheritDoc}*/\n     @Override public ProblemOccurrences getProblems(Build build) {\n-        String href = build.problemOccurrences.href;\n+        if (build.problemOccurrences != null) {\n+            String href = build.problemOccurrences.href;\n \n-        return loadIfAbsent(\n-            buildProblemsCache(),\n-            href,\n-            k -> {\n-                ProblemOccurrences problems = teamcity.getProblems(build);\n+            return loadIfAbsent(\n+                buildProblemsCache(),\n+                href,\n+                k -> {\n+                    ProblemOccurrences problems = teamcity.getProblems(build);\n \n-                registerCriticalBuildProblemInStat(build, problems);\n+                    registerCriticalBuildProblemInStat(build, problems);\n \n-                return problems;\n-            });\n+                    return problems;\n+                });\n+        }\n+        else\n+            return new ProblemOccurrences();\n     }\n \n     private void registerCriticalBuildProblemInStat(Build build, ProblemOccurrences problems) {\n@@ -591,6 +606,24 @@ private void addTestOccurrencesToStat(TestOccurrences val, String normalizedBran\n         });\n     }\n \n+    @Override public IssuesUsagesList getIssuesUsagesList(String href) {\n+        IssuesUsagesList issuesUsages =  loadIfAbsentV2(ISSUES_USAGES_LIST, href, href1 -> {\n+            try {\n+                return teamcity.getIssuesUsagesList(href1);\n+            }\n+            catch (Exception e) {\n+                if (Throwables.getRootCause(e) instanceof FileNotFoundException) {\n+                    System.err.println(\"Issues Usage List not found for href : \" + href);\n+\n+                    return new IssuesUsagesList();\n+                }\n+                else\n+                    throw e;\n+            }\n+        });\n+        return issuesUsages;\n+    }\n+\n     /** {@inheritDoc} */\n     @Override public List<RunStat> topTestFailing(int cnt) {\n         return CollectionUtil.top(allTestAnalysis(), cnt, Comparator.comparing(RunStat::getFailRate));", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgnitePersistentTeamcity.java"}, {"additions": 52, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java", "sha": "d3421b7ba6834dfabf80113598871d771deb076d", "changes": 61, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -62,6 +62,7 @@\n import org.apache.ignite.ci.tcmodel.hist.BuildRef;\n import org.apache.ignite.ci.tcmodel.hist.Builds;\n import org.apache.ignite.ci.tcmodel.result.Build;\n+import org.apache.ignite.ci.tcmodel.result.issues.IssuesUsagesList;\n import org.apache.ignite.ci.tcmodel.result.problems.ProblemOccurrences;\n import org.apache.ignite.ci.tcmodel.result.stat.Statistics;\n import org.apache.ignite.ci.tcmodel.result.tests.TestOccurrenceFull;\n@@ -354,18 +355,28 @@ public String basicAuthToken() {\n     private List<BuildRef> getBuildHistory(@Nullable String buildTypeId,\n         @Nullable String branchName,\n         boolean dfltFilter,\n-        @Nullable String state) {\n+        @Nullable String state){\n+\n+        return getBuildHistory(buildTypeId, branchName, dfltFilter, state, null);\n+    }\n+\n+    private List<BuildRef> getBuildHistory(@Nullable String buildTypeId,\n+        @Nullable String branchName,\n+        boolean dfltFilter,\n+        @Nullable String state,\n+        @Nullable Long cnt) {\n         String btFilter = isNullOrEmpty(buildTypeId) ? \"\" : \",buildType:\" + buildTypeId + \"\";\n         String stateFilter = isNullOrEmpty(state) ? \"\" : (\",state:\" + state);\n-        String brachFilter = isNullOrEmpty(branchName) ? \"\" :\",branch:\" + branchName;\n+        String branchFilter = isNullOrEmpty(branchName) ? \"\" :\",branch:\" + branchName;\n+        long cntFilter = cnt == null ? DEFAULT_BUILDS_COUNT : cnt;\n \n         return sendGetXmlParseJaxb(host + \"app/rest/latest/builds\"\n             + \"?locator=\"\n             + \"defaultFilter:\" + dfltFilter\n             + btFilter\n             + stateFilter\n-            + brachFilter\n-            + \",count:1000\", Builds.class).getBuildsNonNull();\n+            + branchFilter\n+            + \",count:\" + cntFilter, Builds.class).getBuildsNonNull();\n     }\n \n     public BuildTypeFull getBuildType(String buildTypeId) {\n@@ -378,7 +389,16 @@ public Build getBuild(String href) {\n     }\n \n     public ProblemOccurrences getProblems(Build build) {\n-        return getJaxbUsingHref(build.problemOccurrences.href, ProblemOccurrences.class);\n+        if (build.problemOccurrences != null) {\n+            ProblemOccurrences problemOccurrences = getJaxbUsingHref(build.problemOccurrences.href, ProblemOccurrences.class);\n+\n+            problemOccurrences.problemOccurrences\n+                .forEach(p -> p.buildRef = build);\n+\n+            return problemOccurrences;\n+        }\n+        else\n+            return new ProblemOccurrences();\n     }\n \n     public TestOccurrences getTests(String href, String normalizedBranch) {\n@@ -401,6 +421,8 @@ public ChangesList getChangesList(String href) {\n         return getJaxbUsingHref(href, ChangesList.class);\n     }\n \n+    public IssuesUsagesList getIssuesUsagesList(String href) { return getJaxbUsingHref(href, IssuesUsagesList.class); }\n+\n     private <T> T getJaxbUsingHref(String href, Class<T> elem) {\n         return sendGetXmlParseJaxb(host + (href.startsWith(\"/\") ? href.substring(1) : href), elem);\n     }\n@@ -411,17 +433,29 @@ public ChangesList getChangesList(String href) {\n     /** {@inheritDoc} */\n     @Override public List<BuildRef> getFinishedBuilds(String projectId,\n         String branch) {\n+\n+        return getFinishedBuilds(projectId, branch, null);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public List<BuildRef> getFinishedBuilds(String projectId,\n+        String branch, Long cnt) {\n         List<BuildRef> finished = getBuildHistory(projectId,\n             UrlUtil.escape(branch),\n             true,\n-            null);\n+            null, cnt);\n \n         return finished.stream().filter(BuildRef::isNotCancelled).collect(Collectors.toList());\n     }\n \n     /** {@inheritDoc} */\n     @Override public List<BuildRef> getFinishedBuildsIncludeSnDepFailed(String projectId, String branch) {\n-        return getBuildsInState(projectId, branch, BuildRef.STATE_FINISHED);\n+        return getBuildsInState(projectId, branch, BuildRef.STATE_FINISHED, null);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public List<BuildRef> getFinishedBuildsIncludeSnDepFailed(String projectId, String branch, Long cnt) {\n+        return getBuildsInState(projectId, branch, BuildRef.STATE_FINISHED, cnt);\n     }\n \n     /** {@inheritDoc} */\n@@ -437,14 +471,23 @@ public ChangesList getChangesList(String href) {\n     private List<BuildRef> getBuildsInState(\n         @Nullable final String projectId,\n         @Nullable final String branch,\n-        @Nonnull final String state) {\n+        @Nonnull final String state,\n+        @Nullable final Long cnt) {\n         List<BuildRef> finished = getBuildHistory(projectId,\n             UrlUtil.escape(branch),\n             false,\n-            state);\n+            state, cnt);\n         return finished.stream().filter(BuildRef::isNotCancelled).collect(Collectors.toList());\n     }\n \n+    private List<BuildRef> getBuildsInState(\n+        @Nullable final String projectId,\n+        @Nullable final String branch,\n+        @Nonnull final String state) {\n+\n+        return getBuildsInState(projectId, branch, state, null);\n+    }\n+\n     public String serverId() {\n         return tcName;\n     }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/IgniteTeamcityHelper.java"}, {"additions": 12, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/Expirable.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/Expirable.java", "sha": "32d176a891984235ce743b729f15d1da2b4e0377", "changes": 14, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/Expirable.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -27,14 +27,16 @@\n public class Expirable<D> {\n     private final long ts;\n     private final D data;\n+    private final long cnt;\n \n     public Expirable(D data) {\n-        this(System.currentTimeMillis(), data);\n+        this(System.currentTimeMillis(), 1, data);\n     }\n \n-    public Expirable(long ts, D data) {\n+    public Expirable(long ts, long cnt, D data) {\n         this.ts = ts;\n         this.data = data;\n+        this.cnt = cnt;\n     }\n \n     public long getTs() {\n@@ -45,11 +47,19 @@ public D getData() {\n         return data;\n     }\n \n+    public long getCnt(){\n+        return cnt;\n+    }\n+\n     public long getAgeMs() {\n         return System.currentTimeMillis() - ts;\n     }\n \n     public boolean isAgeLessThanSecs(int seconds) {\n         return getAgeMs() < TimeUnit.SECONDS.toMillis(seconds);\n     }\n+\n+    public boolean hasCounterGreaterThan(long cnt){\n+        return cnt < this.cnt;\n+    }\n }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/Expirable.java"}, {"additions": 3, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/MultBuildRunCtx.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/MultBuildRunCtx.java", "sha": "4a9d47c11d5870acd7563f360d0f1037fb1421a4", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/MultBuildRunCtx.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -125,7 +125,7 @@ public String buildTypeId() {\n     public boolean hasNontestBuildProblem() {\n         return problems != null && problems.stream().anyMatch(problem ->\n             !problem.isFailedTests()\n-                && !problem.isShaphotDepProblem()\n+                && !problem.isSnapshotDepProblem()\n                 && !ProblemOccurrence.BUILD_FAILURE_ON_MESSAGE.equals(problem.type));\n         //todo what to do with BuildFailureOnMessage, now it is ignored\n     }\n@@ -135,7 +135,7 @@ public boolean hasAnyBuildProblemExceptTestOrSnapshot() {\n     }\n \n     private Optional<ProblemOccurrence> getBuildProblemExceptTestOrSnapshot() {\n-        return problems.stream().filter(p -> !p.isFailedTests() && !p.isShaphotDepProblem()).findAny();\n+        return problems.stream().filter(p -> !p.isFailedTests() && !p.isSnapshotDepProblem()).findAny();\n     }\n \n     public List<SingleBuildRunCtx> getBuilds() {\n@@ -244,7 +244,7 @@ public String getResult() {\n             Stream<ProblemOccurrence> stream =\n                 problems.stream().filter(p ->\n                     !p.isFailedTests()\n-                        && !p.isShaphotDepProblem()\n+                        && !p.isSnapshotDepProblem()\n                         && !p.isExecutionTimeout()\n                         && !p.isJvmCrash()\n                         && !p.isExitCode()", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/analysis/MultBuildRunCtx.java"}, {"additions": 6, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/issue/ProblemRef.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/issue/ProblemRef.java", "previous_filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/issue/IssueRef.java", "sha": "7c04fbd3b4c95a4ca4d63b32c89a6c19d2a71537", "changes": 8, "status": "renamed", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/issue/ProblemRef.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -17,11 +17,15 @@\n \n package org.apache.ignite.ci.issue;\n \n-public class IssueRef {\n+/**\n+ * Reference to some Issue with current suite or test detected by the Bot.\n+ * Currently contains only display name.\n+ */\n+public class ProblemRef {\n     public String name;\n     public String webUrl;\n \n-    public IssueRef(String name) {\n+    public ProblemRef(String name) {\n         this.name = name;\n     }\n }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/issue/ProblemRef.java"}, {"additions": 2, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/hist/BuildRef.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/hist/BuildRef.java", "sha": "0e6202b9263d83705ac20cf6095fb97c326ba0af", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/hist/BuildRef.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -52,6 +52,8 @@\n \n     @XmlAttribute public Boolean composite;\n \n+    @XmlAttribute public String webUrl;\n+\n     /**\n      * @return Build ID\n      */", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/hist/BuildRef.java"}, {"additions": 13, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/Build.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/Build.java", "sha": "9c6a9cd1f732093cb037d4f713f7bd309f2ff0a4", "changes": 16, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/Build.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -58,6 +58,8 @@\n \n     @XmlElement(name = \"statistics\") public StatisticsRef statisticsRef;\n \n+    @XmlElement(name = \"relatedIssues\") public RelatedIssuesRef relatedIssuesRef;\n+\n     /** Changes not included into build.*/\n     @XmlElement(name = \"lastChanges\") public ChangesList lastChanges;\n \n@@ -87,11 +89,19 @@ public String getFinishDateDdMmYyyy() throws ParseException {\n     }\n \n     public Date getFinishDate() {\n+        return getDate(finishDate);\n+    }\n+\n+    public Date getStartDate() {\n+        return getDate(startDate);\n+    }\n+\n+    private Date getDate(String date) {\n         try {\n-            if (finishDate == null)\n+            if (date == null)\n                 return null;\n             SimpleDateFormat f = new SimpleDateFormat(\"yyyyMMdd'T'HHmmssZ\");\n-            return f.parse(finishDate);\n+            return f.parse(date);\n         }\n         catch (ParseException e) {\n             throw new IllegalStateException(e);\n@@ -127,4 +137,4 @@ public Triggered getTriggered() {\n     public void setTriggered(Triggered triggered) {\n         this.triggered = triggered;\n     }\n-}\n+}\n\\ No newline at end of file", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/Build.java"}, {"additions": 4, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/ProblemOccurrencesRef.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/ProblemOccurrencesRef.java", "sha": "a382ddbe55d7128710f6a4e841b28826489781fc", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/ProblemOccurrencesRef.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -25,4 +25,8 @@\n public class ProblemOccurrencesRef {\n     /** Href without host name to obtain full problems list. */\n     @XmlAttribute public String href;\n+\n+    @XmlAttribute public long count;\n+\n+    @XmlAttribute public long newFailed;\n }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/ProblemOccurrencesRef.java"}, {"additions": 25, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/RelatedIssuesRef.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/RelatedIssuesRef.java", "sha": "81e1157642a46e15e4cf0c6972a0f14c9fec3d17", "changes": 25, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/RelatedIssuesRef.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ci.tcmodel.result;\n+\n+/**\n+ * Related issues reference.\n+ */\n+public class RelatedIssuesRef extends AbstractRef {\n+}\n+", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/RelatedIssuesRef.java"}, {"additions": 2, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/TestOccurrencesRef.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/TestOccurrencesRef.java", "sha": "b250e98ba529db20ad2ec53a1ee8784fef2901cb", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/TestOccurrencesRef.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -29,5 +29,7 @@\n     @XmlAttribute public Integer count;\n     @XmlAttribute public Integer passed;\n     @XmlAttribute public Integer failed;\n+    @XmlAttribute public Integer newFailed;\n+    @XmlAttribute public Integer ignored;\n     @XmlAttribute public Integer muted;\n }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/TestOccurrencesRef.java"}, {"additions": 38, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueRef.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueRef.java", "sha": "09ea91a6f9908872d8fe72c2cc85974a44dd804e", "changes": 38, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueRef.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ci.tcmodel.result.issues;\n+\n+import javax.xml.bind.annotation.XmlAttribute;\n+\n+/**\n+ * Issue short version from list of build's related issues.\n+ *\n+ * See example of XML, e.g. here\n+ * https://ci.ignite.apache.org/app/rest/latest/builds/id:1694977/relatedIssues\n+ */\n+public class IssueRef {\n+    @XmlAttribute public String id;\n+    @XmlAttribute public String url;\n+\n+    @Override public String toString() {\n+        return \"IssueRef{\" +\n+            \"id='\" + id + '\\'' +\n+            \", url='\" + url + '\\'' +\n+            '}';\n+    }\n+}", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueRef.java"}, {"additions": 43, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueUsage.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueUsage.java", "sha": "ae57c4dcd6a4d9796e6288a3336867cf81fcc2bd", "changes": 43, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueUsage.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ci.tcmodel.result.issues;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import org.apache.ignite.ci.tcmodel.changes.ChangesList;\n+\n+/**\n+ * Build's related issue from TC.\n+ *\n+ * See example of XML, e.g. here\n+ * https://ci.ignite.apache.org/app/rest/latest/builds/id:1694977/relatedIssues\n+ */\n+@XmlRootElement(name = \"IssueUsage\")\n+@XmlAccessorType(XmlAccessType.FIELD)\n+public class IssueUsage {\n+    @XmlElement(name = \"issue\")\n+    private IssueRef issue;\n+    @XmlElement(name = \"changes\")\n+    private ChangesList changesList;\n+\n+    public IssueRef getIssue(){\n+        return issue;\n+    }\n+}", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssueUsage.java"}, {"additions": 49, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssuesUsagesList.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssuesUsagesList.java", "sha": "1212ab6dcb8714325306f8c2b1f44747306e92ed", "changes": 49, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssuesUsagesList.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ci.tcmodel.result.issues;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+\n+/**\n+ * List of build's related issues from TC.\n+ *\n+ * See example of XML, e.g. here\n+ * https://ci.ignite.apache.org/app/rest/latest/builds/id:1694977/relatedIssues\n+ */\n+@XmlRootElement(name = \"issuesUsages\")\n+public class IssuesUsagesList {\n+    @XmlElement(name = \"issueUsage\")\n+    private List<IssueUsage> issuesUsages;\n+\n+    @XmlElement Integer count;\n+\n+    @XmlElement String href;\n+\n+    public List<IssueUsage> getIssuesUsagesNonNull() {\n+        return issuesUsages == null ? Collections.emptyList() : issuesUsages;\n+    }\n+\n+    @Override public String toString() {\n+        return \"IssuesUsagesList{\" +\n+            \"issuesUsages=\" + issuesUsages +\n+            '}';\n+    }\n+}", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/issues/IssuesUsagesList.java"}, {"additions": 23, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrence.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrence.java", "sha": "b8ae4f06054feba4b2e17012b9c8c36580f74dfb", "changes": 30, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrence.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -18,34 +18,41 @@\n package org.apache.ignite.ci.tcmodel.result.problems;\n \n import javax.xml.bind.annotation.XmlAttribute;\n+import org.apache.ignite.ci.tcmodel.hist.BuildRef;\n \n /**\n  * One build problem. Contains its type.\n  */\n public class ProblemOccurrence {\n     public static final String BUILD_FAILURE_ON_MESSAGE = \"BuildFailureOnMessage\";\n-    private static final String TC_EXIT_CODE = \"TC_EXIT_CODE\";\n-    private static final String TC_OOME = \"TC_OOME\";\n+    public static final String TC_EXIT_CODE = \"TC_EXIT_CODE\";\n+    public static final String TC_OOME = \"TC_OOME\";\n+    public static final String TC_EXECUTION_TIMEOUT = \"TC_EXECUTION_TIMEOUT\";\n+    public static final String TC_FAILED_TESTS = \"TC_FAILED_TESTS\";\n+    public static final String TC_JVM_CRASH = \"TC_JVM_CRASH\";\n+    public static final String OTHER = \"OTHER\";\n+    public static final String SNAPSHOT_DEPENDENCY_ERROR = \"SNAPSHOT_DEPENDENCY_ERROR_BUILD_PROCEEDS_TYPE\";\n \n     @XmlAttribute public String id;\n     @XmlAttribute public String identity;\n     @XmlAttribute public String type;\n     @XmlAttribute public String href;\n+    public BuildRef buildRef;\n \n     public boolean isExecutionTimeout() {\n-        return \"TC_EXECUTION_TIMEOUT\".equals(type);\n+        return TC_EXECUTION_TIMEOUT.equals(type);\n     }\n \n     public boolean isFailedTests() {\n-        return \"TC_FAILED_TESTS\".equals(type);\n+        return TC_FAILED_TESTS.equals(type);\n     }\n \n-    public boolean isShaphotDepProblem() {\n-        return \"SNAPSHOT_DEPENDENCY_ERROR_BUILD_PROCEEDS_TYPE\".equals(type);\n+    public boolean isSnapshotDepProblem() {\n+        return SNAPSHOT_DEPENDENCY_ERROR.equals(type);\n     }\n \n     public boolean isJvmCrash() {\n-        return \"TC_JVM_CRASH\".equals(type);\n+        return TC_JVM_CRASH.equals(type);\n     }\n \n     public boolean isOome() {\n@@ -55,4 +62,13 @@ public boolean isOome() {\n     public boolean isExitCode() {\n         return TC_EXIT_CODE.equals(type);\n     }\n+\n+    public boolean isOther(){\n+        return !isFailedTests()\n+            && !isSnapshotDepProblem()\n+            && !isExecutionTimeout()\n+            && !isJvmCrash()\n+            && !isExitCode()\n+            && !isOome();\n+    }\n }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrence.java"}, {"additions": 2, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java", "sha": "c95a7bcb49fb895c748c2238a5d4ad28d8296e00", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -29,9 +29,10 @@\n @XmlRootElement(name = \"problemOccurrences\")\n public class ProblemOccurrences extends ProblemOccurrencesRef {\n     @XmlElement(name = \"problemOccurrence\")\n-    private List<ProblemOccurrence> problemOccurrences;\n+    public List<ProblemOccurrence> problemOccurrences;\n \n     public List<ProblemOccurrence> getProblemsNonNull() {\n         return problemOccurrences == null ? Collections.emptyList() : problemOccurrences;\n     }\n }\n+", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/tcmodel/result/problems/ProblemOccurrences.java"}, {"additions": 286, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java", "sha": "2b73771aa82e03cd2e325bfadf42b4549b9216a8", "changes": 286, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -0,0 +1,286 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ci.web.model.current;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import javax.annotation.Nonnull;\n+import org.apache.ignite.ci.ITeamcity;\n+import org.apache.ignite.ci.tcmodel.hist.BuildRef;\n+import org.apache.ignite.ci.tcmodel.result.Build;\n+import org.apache.ignite.ci.tcmodel.result.issues.IssueRef;\n+import org.apache.ignite.ci.tcmodel.result.issues.IssueUsage;\n+import org.apache.ignite.ci.tcmodel.result.problems.ProblemOccurrence;\n+import org.apache.ignite.ci.util.TimeUtil;\n+import org.apache.ignite.ci.web.IBackgroundUpdatable;\n+\n+/**\n+ * Summary of build statistics.\n+ */\n+public class BuildStatisticsSummary extends UpdateInfo implements IBackgroundUpdatable {\n+    /** Build with test and problems references. */\n+    public Build build;\n+\n+    /** List of problem occurrences. */\n+    private List<ProblemOccurrence> problems;\n+\n+    /** List of related issues. */\n+    public List<IssueRef> relatedIssues;\n+\n+    /** Duration printable. */\n+    public String durationPrintable;\n+\n+    /** Short build run result (without snapshot-dependencies printable result). */\n+    public String shortRes;\n+\n+    /** Snapshot-dependencies build run result. */\n+    public List<String> fullRes;\n+\n+    /** Snapshot-dependency. */\n+    private List<BuildRef> snapshotDependencies;\n+\n+    /** Build problems count. */\n+    public long problemsCount;\n+\n+    public BuildStatisticsSummary(Build build){\n+        this.build = build;\n+    }\n+\n+    /** Initialize build statistics. */\n+    public void initialize(@Nonnull final ITeamcity teamcity) {\n+\n+        if (build.isFakeStub())\n+            return;\n+\n+        relatedIssues = teamcity.getIssuesUsagesList(build.relatedIssuesRef.href).getIssuesUsagesNonNull().stream()\n+            .map(IssueUsage::getIssue).collect(Collectors.toList());\n+\n+        durationPrintable = TimeUtil\n+            .getDurationPrintable(build.getFinishDate().getTime() - build.getStartDate().getTime());\n+\n+        snapshotDependencies = getSnapshotDependencies(teamcity, build);\n+\n+        problems = getProblems(teamcity);\n+\n+        shortRes = getShortRes();\n+\n+        fullRes = getFullRes();\n+\n+        problemsCount = getAllProblemsCount(null);\n+    }\n+\n+    private long getExecutionTimeoutCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).filter(ProblemOccurrence::isExecutionTimeout).count();\n+    }\n+\n+    private long getJvmCrashProblemCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).filter(ProblemOccurrence::isJvmCrash).count();\n+    }\n+\n+    private long getExitCodeProblemsCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).filter(ProblemOccurrence::isExitCode).count();\n+    }\n+\n+    private long getOomeProblemCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).filter(ProblemOccurrence::isOome).count();\n+    }\n+\n+    private long getFailedTestsProblemCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).filter(ProblemOccurrence::isFailedTests).count();\n+    }\n+\n+    private long getSnapshotDepProblemCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).filter(ProblemOccurrence::isSnapshotDepProblem).count();\n+    }\n+\n+    private long getOtherProblemCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).filter(ProblemOccurrence::isOther).count();\n+    }\n+\n+    private long getAllProblemsCount(String buildTypeId) {\n+        return getProblemsStream(buildTypeId).count();\n+    }\n+\n+    /**\n+     * Problems for all snapshot-dependencies.\n+     *\n+     * @param teamcity Teamcity.\n+     */\n+    private List<ProblemOccurrence> getProblems(@Nonnull final ITeamcity teamcity){\n+        if (snapshotDependencies == null)\n+            return Collections.emptyList();\n+\n+        List<ProblemOccurrence> problemOccurrences = new ArrayList<>();\n+\n+        List<BuildRef> snapshotDependencyWithProblems = getSnapshotDependenciesWithProblems();\n+\n+        for (BuildRef buildRef : snapshotDependencyWithProblems)\n+            problemOccurrences.addAll(teamcity\n+                .getProblems(teamcity.getBuild(buildRef.href))\n+                .getProblemsNonNull());\n+\n+        return problemOccurrences;\n+    }\n+\n+    /**\n+     * Snapshot-dependencies for build.\n+     *\n+     * @param teamcity Teamcity.\n+     * @param buildRef Build reference.\n+     */\n+    private List<BuildRef> getSnapshotDependencies(@Nonnull final ITeamcity teamcity, BuildRef buildRef){\n+        List<BuildRef> snapshotDependencies = new ArrayList<>();\n+\n+        if (buildRef.isComposite()){\n+            Build build = teamcity.getBuild(buildRef.href);\n+\n+            for (BuildRef snDep : build.getSnapshotDependenciesNonNull())\n+                snapshotDependencies.addAll(getSnapshotDependencies(teamcity, snDep));\n+        } else\n+            snapshotDependencies.add(buildRef);\n+\n+        return snapshotDependencies;\n+    }\n+\n+    /**\n+     * Snapshot-dependencies without status \"Success\".\n+     */\n+    private List<BuildRef> getSnapshotDependenciesWithProblems(){\n+        if (snapshotDependencies == null)\n+            return Collections.emptyList();\n+\n+        return snapshotDependencies.stream()\n+            .filter(b -> !b.isSuccess())\n+            .collect(Collectors.toList());\n+    }\n+\n+    /**\n+     * @param buildTypeId Build type id (if null - for all problems).\n+     */\n+    private Stream<ProblemOccurrence> getProblemsStream(String buildTypeId) {\n+        if (problems == null)\n+            return Stream.empty();\n+\n+        return problems.stream()\n+            .filter(Objects::nonNull)\n+            .filter(p -> buildTypeId == null || buildTypeId.equals(p.buildRef.buildTypeId)\n+            );\n+    }\n+\n+    /**\n+     * Full build run result (snapshot-dependencies printable result).\n+     *\n+     * @return printable result;\n+     */\n+    private List<String> getFullRes(){\n+        List<String> fullRes = new ArrayList<>();\n+\n+        List<BuildRef> snapshotDependencyWithProblems = getSnapshotDependenciesWithProblems();\n+\n+        for (BuildRef build : snapshotDependencyWithProblems)\n+            fullRes.add(getRes(build.buildTypeId));\n+\n+        return fullRes.stream()\n+            .sorted()\n+            .collect(Collectors.toList());\n+    }\n+\n+    /**\n+     * Short build run result (without snapshot-dependencies printable result).\n+     *\n+     * @return printable result;\n+     */\n+    private String getShortRes(){\n+        return getRes(null);\n+    }\n+\n+    /**\n+     * Build run result for buildTypeId.\n+     *\n+     * @param buildTypeId buildTypeId.\n+     *\n+     * @return printable result.\n+     */\n+    private String getRes(String buildTypeId){\n+        StringBuilder res = new StringBuilder();\n+\n+        addKnownProblemCnt(res, ProblemOccurrence.TC_EXECUTION_TIMEOUT, getExecutionTimeoutCount(buildTypeId));\n+        addKnownProblemCnt(res, ProblemOccurrence.TC_JVM_CRASH, getJvmCrashProblemCount(buildTypeId));\n+        addKnownProblemCnt(res, ProblemOccurrence.TC_OOME, getOomeProblemCount(buildTypeId));\n+        addKnownProblemCnt(res, ProblemOccurrence.TC_EXIT_CODE, getExitCodeProblemsCount(buildTypeId));\n+        addKnownProblemCnt(res, ProblemOccurrence.TC_FAILED_TESTS, getFailedTestsProblemCount(buildTypeId));\n+        addKnownProblemCnt(res, ProblemOccurrence.SNAPSHOT_DEPENDENCY_ERROR, getSnapshotDepProblemCount(buildTypeId));\n+        addKnownProblemCnt(res, ProblemOccurrence.OTHER, getOtherProblemCount(buildTypeId));\n+\n+        res.insert(0, (buildTypeId != null ? buildTypeId : \"TOTAL\") + \" [\" + getAllProblemsCount(buildTypeId) + \"]\"\n+            + (res.length() != 0 ? \": \" : \" \"));\n+\n+        return res.toString();\n+    }\n+\n+    /**\n+     * @param res Response.\n+     * @param nme Name of problem.\n+     * @param execToCnt Execute to count.\n+     */\n+    private void addKnownProblemCnt(StringBuilder res, String nme, long execToCnt) {\n+        if (execToCnt > 0) {\n+            if (res.length() > 0)\n+                res.append(\", \");\n+\n+            res.append(nme)\n+                .append(execToCnt > 1 ? \" [\" + execToCnt + \"]\" : \"\");\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void setUpdateRequired(boolean update) {\n+        updateRequired = update;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public boolean equals(Object o) {\n+        if (this == o)\n+            return true;\n+\n+        if (!(o instanceof BuildStatisticsSummary))\n+            return false;\n+\n+        BuildStatisticsSummary that = (BuildStatisticsSummary)o;\n+\n+        return problemsCount == that.problemsCount &&\n+            Objects.equals(build, that.build) &&\n+            Objects.equals(problems, that.problems) &&\n+            Objects.equals(relatedIssues, that.relatedIssues) &&\n+            Objects.equals(durationPrintable, that.durationPrintable) &&\n+            Objects.equals(getShortRes(), that.getShortRes()) &&\n+            Objects.equals(getFullRes(), that.getFullRes()) &&\n+            Objects.equals(snapshotDependencies, that.snapshotDependencies);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public int hashCode() {\n+\n+        return Objects.hash(build, problems, relatedIssues, durationPrintable, getShortRes(), getFullRes(),\n+            snapshotDependencies, problemsCount);\n+    }\n+}\n\\ No newline at end of file", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/BuildStatisticsSummary.java"}, {"additions": 4, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/SuiteCurrentStatus.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/SuiteCurrentStatus.java", "sha": "91945c19e9ce5a06b2b9625ad333f059f1d34be8", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/SuiteCurrentStatus.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -38,7 +38,7 @@\n import org.apache.ignite.ci.analysis.TestInBranch;\n import org.apache.ignite.ci.analysis.TestLogCheckResult;\n import org.apache.ignite.ci.issue.EventTemplates;\n-import org.apache.ignite.ci.issue.IssueRef;\n+import org.apache.ignite.ci.issue.ProblemRef;\n import org.apache.ignite.ci.tcmodel.result.tests.TestOccurrenceFull;\n import org.apache.ignite.ci.web.rest.GetBuildLog;\n import org.jetbrains.annotations.NotNull;\n@@ -105,7 +105,7 @@\n \n     public String durationPrintable;\n \n-    @Nullable public IssueRef problemRef;\n+    @Nullable public ProblemRef problemRef;\n \n \n     public void initFromContext(@Nonnull final ITeamcity teamcity,\n@@ -244,12 +244,12 @@ private void initStat(@Nullable ITcAnalytics tcAnalytics, String failRateNormali\n             RunStat.TestId testId = latestRunsSrc.detectTemplate(EventTemplates.newFailure);\n \n             if (testId != null)\n-                problemRef = new IssueRef(\"New Failure\");\n+                problemRef = new ProblemRef(\"New Failure\");\n \n             RunStat.TestId buildIdCritical  = latestRunsSrc.detectTemplate(EventTemplates.newCriticalFailure);\n \n             if (buildIdCritical != null)\n-                problemRef = new IssueRef(\"New Critical Failure\");\n+                problemRef = new ProblemRef(\"New Critical Failure\");\n         }\n     }\n ", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/SuiteCurrentStatus.java"}, {"additions": 4, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/TestFailure.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/TestFailure.java", "sha": "559fb3e594405e80adcfb1dcfa1a9f521af38cec", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/TestFailure.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -32,7 +32,7 @@\n import org.apache.ignite.ci.analysis.RunStat;\n import org.apache.ignite.ci.analysis.TestInBranch;\n import org.apache.ignite.ci.issue.EventTemplates;\n-import org.apache.ignite.ci.issue.IssueRef;\n+import org.apache.ignite.ci.issue.ProblemRef;\n import org.apache.ignite.ci.logs.LogMsgToWarn;\n import org.apache.ignite.ci.tcmodel.result.tests.TestOccurrenceFull;\n \n@@ -78,7 +78,7 @@\n \n     public List<String> warnings = new ArrayList<>();\n \n-    @Nullable public IssueRef problemRef;\n+    @Nullable public ProblemRef problemRef;\n \n     @Nullable public String flakyComments;\n \n@@ -209,12 +209,12 @@ public void initStat(@Nullable final Function<TestInBranch, RunStat> runStatSupp\n             RunStat.TestId testId = latestRunsSrcInBranch.detectTemplate(EventTemplates.newFailure);\n \n             if (testId != null)\n-                problemRef = new IssueRef(\"New Failure\");\n+                problemRef = new ProblemRef(\"New Failure\");\n \n             RunStat.TestId recentContributedTestId = latestRunsSrcInBranch.detectTemplate(EventTemplates.newContributedTestFailure);\n \n             if (recentContributedTestId != null)\n-                problemRef = new IssueRef(\"Recently contributed test failure\");\n+                problemRef = new ProblemRef(\"Recently contributed test failure\");\n \n             flakyComments = latestRunsSrcInBranch.getFlakyComments();\n         }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/model/current/TestFailure.java"}, {"additions": 71, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/build/GetBuildTestFailures.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/build/GetBuildTestFailures.java", "sha": "5c860c6a3a2e512ab25940f9fcaf5e3b7d9d082d", "changes": 79, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/build/GetBuildTestFailures.java?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -17,13 +17,11 @@\n \n package org.apache.ignite.ci.web.rest.build;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.List;\n import java.util.Optional;\n import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.stream.Collectors;\n-import javax.annotation.Nonnull;\n import javax.servlet.ServletContext;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.GET;\n@@ -36,27 +34,30 @@\n import org.apache.ignite.ci.IAnalyticsEnabledTeamcity;\n import org.apache.ignite.ci.ITcHelper;\n import org.apache.ignite.ci.ITeamcity;\n-import org.apache.ignite.ci.IgnitePersistentTeamcity;\n import org.apache.ignite.ci.analysis.FullChainRunCtx;\n import org.apache.ignite.ci.analysis.mode.LatestRebuildMode;\n import org.apache.ignite.ci.analysis.mode.ProcessLogsMode;\n import org.apache.ignite.ci.tcmodel.hist.BuildRef;\n import org.apache.ignite.ci.user.ICredentialsProv;\n-import org.apache.ignite.ci.web.rest.login.ServiceUnauthorizedException;\n import org.apache.ignite.ci.web.BackgroundUpdater;\n import org.apache.ignite.ci.web.CtxListener;\n+import org.apache.ignite.ci.web.model.current.BuildStatisticsSummary;\n import org.apache.ignite.ci.web.model.current.ChainAtServerCurrentStatus;\n import org.apache.ignite.ci.web.model.current.TestFailuresSummary;\n import org.apache.ignite.ci.web.model.current.UpdateInfo;\n+import org.apache.ignite.ci.web.rest.login.ServiceUnauthorizedException;\n import org.apache.ignite.ci.web.rest.parms.FullQueryParams;\n import org.jetbrains.annotations.NotNull;\n import org.jetbrains.annotations.Nullable;\n \n+import static com.google.common.base.Strings.isNullOrEmpty;\n+\n @Path(GetBuildTestFailures.BUILD)\n @Produces(MediaType.APPLICATION_JSON)\n public class GetBuildTestFailures {\n     public static final String BUILD = \"build\";\n     public static final String TEST_FAILURES_SUMMARY_CACHE_NAME = BUILD + \"TestFailuresSummary\";\n+    public static final String BUILDS_STATISTICS_SUMMARY_CACHE_NAME = BUILD + \"sStatisticsSummary\";\n     @Context\n     private ServletContext context;\n \n@@ -88,7 +89,7 @@ public TestFailuresSummary getBuildTestFails(\n         @QueryParam(\"serverId\") String serverId,\n         @QueryParam(\"buildId\") Integer buildId,\n         @Nullable @QueryParam(\"checkAllLogs\") Boolean checkAllLogs)\n-            throws ServiceUnauthorizedException {\n+        throws ServiceUnauthorizedException {\n \n         final BackgroundUpdater updater = CtxListener.getBackgroundUpdater(context);\n \n@@ -131,7 +132,6 @@ public TestFailuresSummary getBuildTestFails(\n                     (checkAllLogs != null && checkAllLogs) ? ProcessLogsMode.ALL : ProcessLogsMode.SUITE_NOT_COMPLETE,\n                     false, false, teamcity, failRateBranch);\n \n-\n             pubCtx.ifPresent(ctx -> {\n                 final ChainAtServerCurrentStatus chainStatus = new ChainAtServerCurrentStatus(serverId, ctx.branchName());\n \n@@ -149,4 +149,67 @@ public TestFailuresSummary getBuildTestFails(\n \n         return res;\n     }\n-}\n+\n+    @GET\n+    @Path(\"history\")\n+    public List<BuildStatisticsSummary> getBuildsHistory(\n+        @Nullable @QueryParam(\"server\") String server,\n+        @Nullable @QueryParam(\"buildType\") String buildType,\n+        @Nullable @QueryParam(\"branch\") String branch,\n+        @Nullable @QueryParam(\"count\") Long count)\n+        throws ServiceUnauthorizedException {\n+\n+        String srvId = isNullOrEmpty(server) ? \"apache\" : server;\n+        String buildTypeId = isNullOrEmpty(buildType) ? \"IgniteTests24Java8_RunAll\" : buildType;\n+        String branchName = isNullOrEmpty(branch) ? \"refs/heads/master\" : branch;\n+        long cnt = count == null ? 50 : count;\n+\n+        final BackgroundUpdater updater = CtxListener.getBackgroundUpdater(context);\n+\n+        final ITcHelper tcHelper = CtxListener.getTcHelper(context);\n+\n+        final ICredentialsProv prov = ICredentialsProv.get(req);\n+\n+        try (IAnalyticsEnabledTeamcity teamcity = tcHelper.server(srvId, prov)) {\n+\n+            int[] finishedBuilds = teamcity.getBuildNumbersFromHistory(buildTypeId, branchName, cnt);\n+\n+            List<BuildStatisticsSummary> buildsStatistics = new ArrayList<>();\n+\n+            for (int i = 0; i < finishedBuilds.length; i++) {\n+                int buildId = finishedBuilds[i];\n+\n+                FullQueryParams param = new FullQueryParams();\n+                param.setBuildId(buildId);\n+                param.setBranch(branchName);\n+                param.setServerId(srvId);\n+\n+                BuildStatisticsSummary buildsStatistic = updater.get(\n+                    BUILDS_STATISTICS_SUMMARY_CACHE_NAME, prov, param,\n+                    (k) -> getBuildStatisticsSummaryNoCache(srvId, buildId), false);\n+\n+                if (!buildsStatistic.build.isFakeStub())\n+                    buildsStatistics.add(buildsStatistic);\n+            }\n+\n+            return buildsStatistics;\n+        }\n+    }\n+\n+    private BuildStatisticsSummary getBuildStatisticsSummaryNoCache(String server, int buildId) {\n+\n+        String srvId = isNullOrEmpty(server) ? \"apache\" : server;\n+\n+        final ITcHelper tcHelper = CtxListener.getTcHelper(context);\n+\n+        final ICredentialsProv creds = ICredentialsProv.get(req);\n+\n+        try (IAnalyticsEnabledTeamcity teamcity = tcHelper.server(srvId, creds)) {\n+\n+            BuildStatisticsSummary stat = new BuildStatisticsSummary(teamcity.getBuild(buildId));\n+            stat.initialize(teamcity);\n+\n+            return stat;\n+        }\n+    }\n+}\n\\ No newline at end of file", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/build/GetBuildTestFailures.java"}, {"additions": 4, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/webapp/index.html", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/webapp/index.html", "sha": "c642863ca9c01082411ba9ada859b53292e51612", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/webapp/index.html?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -6,7 +6,7 @@\n     <link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\n \n     <link rel=\"stylesheet\" href=\"css/style-1.5.css\">\n-    \n+\n     <script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\n     <script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\n     <script src=\"js/common-1.6.js\"></script>\n@@ -45,7 +45,7 @@\n         error: showErrInLoadStatus\n     });\n \n-     $.ajax({\n+    $.ajax({\n         url: \"rest/branches/getServerIds\",\n         success: function(result) {\n             $(\"#loadStatus\").html(\"\");\n@@ -122,7 +122,8 @@\n <a href=\"restpretty.html?url=top/failingSuite\">Top failing suites</a> (JSON) <br>\n <!--<a href=\"./status\">Current Build Status (obsolete)</a><br>-->\n <br>\n-\n+<a href=\"statistics.html?buildType=IgniteTests24Java8_RunAll&branch=refs/heads/master&count=50\">Master's branch statistics</a><br>\n+<br>\n Check branch/PR:   <br>\n <div id=\"suitesForPrCheck\"></div>\n <br>", "filename": "ignite-tc-helper-web/src/main/webapp/index.html"}, {"additions": 203, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/webapp/statistics.html", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/9e3cb0bb05d7205dad68a12f9edb0df78cca3749/ignite-tc-helper-web/src/main/webapp/statistics.html", "sha": "ffdf9bb2555ba741b36eadacd7cc8ed5d8ddbd37", "changes": 203, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/webapp/statistics.html?ref=9e3cb0bb05d7205dad68a12f9edb0df78cca3749", "patch": "@@ -0,0 +1,203 @@\n+<html>\n+<head>\n+    <title>Ignite Teamcity - statistics master's branch</title>\n+    <link rel=\"icon\" href=\"img/leaf-icon-png-7066.png\">\n+    <link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\n+    <link rel=\"stylesheet\" href=\"css/style-1.5.css\">\n+\n+    <script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\n+    <script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\n+    <script src=\"js/common-1.6.js\"></script>\n+    <script src=\"js/testfails-2.0.js\"></script>\n+    <style>\n+        table {\n+            width: 70%;\n+            border-collapse: collapse;\n+        }\n+        td, th {\n+\n+            padding: 10px 5px 10px 5px;\n+        }\n+        th {\n+            text-align: left;\n+            padding: 5px;\n+            background-color: #f5f5ff;\n+            color: #000000;\n+        }\n+        tr:nth-child(odd) { background-color: #fafaff; }\n+    </style>\n+</head>\n+<body>\n+<script>\n+    var g_shownDataHashCodeHex = \"\"\n+    var g_updTimer = null;\n+\n+    $(document).ready(function() {\n+        $.getScript(\"js/testfails-2.0.js\", function(data, textStatus, jqxhr){ });\n+\n+        $( document ).tooltip();\n+        loadData();\n+        //todo fix setInterval( function() { checkForUpdate(); }, 30000);\n+\n+        $.ajax({ url: \"rest/branches/version\",  success: showVersionInfo, error: showErrInLoadStatus });\n+\n+        if(g_updTimer==null) {\n+            g_updTimer=setTimeout(tstTimeout, 3200);\n+        }\n+        setInterval(tstTimeout, 10000);\n+    });\n+\n+    function tstTimeout() {\n+\n+        if(g_updTimer!=null) {\n+            clearTimeout(g_updTimer);\n+            g_updTimer=null;\n+        }\n+\n+\n+        var d = new Date();\n+        var n = d.getTime();\n+\n+        // $(document.body).prepend(\"timeout at \"+n+\"<br>\");\n+\n+\n+        if(g_updTimer==null) {\n+            g_updTimer=setTimeout(tstTimeout, 3200);\n+        }\n+    }\n+\n+    function parmsForRest() {\n+        var curReqParms = \"\";\n+        var server = findGetParameter(\"server\");\n+        if(server!=null) {\n+            curReqParms += \"&server=\" + server;\n+        }\n+\n+        var buildType = findGetParameter(\"buildType\");\n+        if(buildType!=null) {\n+            curReqParms += \"&buildType=\" + buildType;\n+        }\n+\n+        var branch = findGetParameter(\"branch\");\n+        if(branch!=null) {\n+            curReqParms += \"&branch=\" + branch;\n+        }\n+\n+        var count = findGetParameter(\"count\");\n+        if(count!=null) {\n+            curReqParms += \"&count=\" + count;\n+        }\n+\n+        curReqParms = curReqParms.replace(\"&\",\"?\");\n+\n+        return curReqParms;\n+    }\n+\n+    function loadData() {\n+        var curFailuresUrl = \"rest/build/history\" + parmsForRest();\n+\n+        $(\"#loadStatus\").html(\"<img src='https://www.wallies.com/filebin/images/loading_apple.gif' width=20px height=20px> Please wait\");\n+        $.ajax({\n+            url: curFailuresUrl,\n+            success: function(result) {\n+                if(result.updateRequired || (isDefinedAndFilled(result.runningUpdates) && result.runningUpdates>0)) {\n+                    setTimeout(checkForUpdate, 3000)\n+                    $(\"#loadStatus\").html(\"<img src='https://www.wallies.com/filebin/images/loading_apple.gif' width=20px height=20px> Updating\");\n+                } else {\n+                    $(\"#loadStatus\").html(\"\");\n+                }\n+                showData(result);\n+                g_shownDataHashCodeHex = isDefinedAndFilled(result.hashCodeHex) ? result.hashCodeHex : \"\";\n+            },\n+            error: showErrInLoadStatus\n+        });\n+    }\n+    function showData(result) {\n+        $(\"#statistics\").html(showBuildHistory(result));\n+    }\n+\n+    function median(arr){\n+        arr = arr.sort(function(a, b){ return a - b; });\n+        var i = arr.length / 2;\n+        return i % 1 == 0 ? (arr[i - 1] + arr[i]) / 2 : arr[Math.floor(i)];\n+    }\n+\n+    function formatString(string) {\n+        if (string.indexOf(\"_\") < string.indexOf(\":\"))\n+            string = string.substring(string.indexOf(\"_\") + 1);\n+\n+        return \"<b>\" + string.substring(0, string.indexOf(\":\") + 1) + \"</b>\" + string.substring(string.indexOf(\":\") + 1);\n+    }\n+\n+    function showBuildHistory(result) {\n+        var res = \"<table><tr><th>#</th><th>Id</th><th>Total tests</th><th>Failed tests</th><th>Ignored tests</th>\" +\n+            \"<th>Muted tests</th><th>Total issues</th><th>Total run time</th></tr>\";\n+\n+        var problemCountMin = result[0].problemsCount;\n+        var problemCountMax = problemCountMin;\n+        var problemCounts = [];\n+        var average = 0;\n+\n+        for (var i = 0; i < result.length; i++) {\n+            var buildStatistics = result[i];\n+\n+            problemCounts[i] = buildStatistics.problemsCount;\n+\n+            if (problemCounts[i] > problemCountMax) problemCountMax = problemCounts[i];\n+\n+            if (problemCounts[i] < problemCountMin) problemCountMin = problemCounts[i];\n+\n+            average += problemCounts[i] / buildStatistics.build.testOccurrences.failed;\n+\n+            res += \"<tr><td>\" + (i + 1) + \"</td>\" +\n+                \"<td><a href='\" + buildStatistics.build.webUrl + \"'>\" + buildStatistics.build.id + \"</a></td>\" +\n+                \"<td>\" + buildStatistics.build.testOccurrences.count + \"</td>\" +\n+                \"<td>\" + buildStatistics.build.testOccurrences.failed + \"</td>\" +\n+                \"<td>\" + buildStatistics.build.testOccurrences.ignored + \"</td>\" +\n+                \"<td>\" + buildStatistics.build.testOccurrences.muted + \"</td><td>\";\n+\n+            if (buildStatistics.fullRes.length > 0) {\n+                res += \"<details><summary>\" + formatString(buildStatistics.shortRes) + \"</summary><p>\";\n+\n+                for (var k = 0; k < buildStatistics.fullRes.length; k++) {\n+                    res += (k + 1) + \". \" + formatString(buildStatistics.fullRes[k]) + \"<br>\";\n+                }\n+\n+                res += \"</p></details><br>\";\n+            } else {\n+                res += \"<p>\" + buildStatistics.shortRes + \"</p>\";\n+            }\n+\n+            var issuesArr = buildStatistics.relatedIssues;\n+\n+            if (issuesArr.length > 0) {\n+                res += \"<details><summary>Related issues [\" + issuesArr.length + \"]</summary><p>\";\n+\n+                for (var j = 0; j < issuesArr.length; j++) {\n+                    var issue = issuesArr[j];\n+\n+                    if (j !== 0) res += \", \";\n+\n+                    res += \"<a href='\" + issue.url + \"'>\" + issue.id + \"</a>\";\n+                }\n+\n+                res += \"</p></details>\";\n+            }\n+\n+            res += \"</td><td>\" + buildStatistics.durationPrintable + \"</td></tr>\";\n+        }\n+\n+        res += \"</table><br>min: \" + problemCountMin + \"; max: \" + problemCountMax +\n+            \"; median: \" + (Math.round(median(problemCounts) * 1000) / 1000) +\n+            \"; average: \" + (Math.round(average / result.length * 1000) / 1000) + \"<br><br>\";\n+\n+        return res;\n+\n+    }\n+</script>\n+<br>\n+<div id=\"loadStatus\"></div>\n+<div id=\"statistics\"></div>\n+<div id=\"version\"></div>\n+</body>\n+</html>\n\\ No newline at end of file", "filename": "ignite-tc-helper-web/src/main/webapp/statistics.html"}], "repo": "ignite-teamcity-bot"}, {"commit": "https://github.com/apache/ignite-teamcity-bot/commit/71a40b0170aaf5df0a5eb18e501071eb544a8b9b", "parent": "https://github.com/apache/ignite-teamcity-bot/commit/95163d28e4b2ed00b202ed1bcd07c6f7f5b11713", "message": "NPE", "bug_id": "ignite-teamcity-bot_9", "file": [{"additions": 11, "raw_url": "https://github.com/apache/ignite-teamcity-bot/raw/71a40b0170aaf5df0a5eb18e501071eb544a8b9b/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/model/current/TestFailuresSummary.java", "blob_url": "https://github.com/apache/ignite-teamcity-bot/blob/71a40b0170aaf5df0a5eb18e501071eb544a8b9b/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/model/current/TestFailuresSummary.java", "sha": "74e6fb56635d47515daf49e46d7d799566fd2376", "changes": 18, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/ignite-teamcity-bot/contents/ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/model/current/TestFailuresSummary.java?ref=71a40b0170aaf5df0a5eb18e501071eb544a8b9b", "patch": "@@ -23,12 +23,16 @@\n     public void addChainOnServer(ChainAtServerCurrentStatus chainStatus) {\n         servers.add(chainStatus);\n \n-        if (failedToFinish == null)\n-            failedToFinish = 0;\n-        failedToFinish += chainStatus.failedToFinish;\n-\n-        if (failedTests == null)\n-            failedTests = 0;\n-        failedTests += chainStatus.failedTests;\n+        if(chainStatus.failedToFinish!=null) {\n+            if (failedToFinish == null)\n+                failedToFinish = 0;\n+            failedToFinish += chainStatus.failedToFinish;\n+        }\n+\n+        if(chainStatus.failedTests!=null) {\n+            if (failedTests == null)\n+                failedTests = 0;\n+            failedTests += chainStatus.failedTests;\n+        }\n     }\n }", "filename": "ignite-tc-helper-web/src/main/java/org/apache/ignite/ci/web/rest/model/current/TestFailuresSummary.java"}], "repo": "ignite-teamcity-bot"}]
