[
    {
        "repo": "maven-wagon",
        "commit": "https://github.com/apache/maven-wagon/commit/0eed00cf95e2f42167b3680b59347e14d8a842b7",
        "bug_id": "maven-wagon_0eed00c",
        "message": "\"[WAGON-426] Prevent fingerprints loss in known_hosts. Recommit fc34bf340 with proper handling of NPE\"",
        "parent": "https://github.com/apache/maven-wagon/commit/8863ded43b40a030bef525f5a42b5adc3a0cb8de",
        "patched_files": [
            "AbstractJschWagon.java",
            "AbstractKnownHostsProvider.java",
            "KnownHostsProvider.java",
            "FileKnownHostsProvider.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 10,
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java",
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "filename": "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java",
                "deletions": 5,
                "sha": "6b9117a598c5a23bb6c55859e945516ecd3abf48",
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java",
                "patch": "@@ -34,7 +34,7 @@\n {\n     /**\n      * Valid values are ask, yes, no.\n-     * \n+     *\n      * @plexus.configuration default-value=\"ask\"\n      */\n     private String hostKeyChecking = \"ask\";\n@@ -43,7 +43,7 @@\n      * the known hosts, in the openssh format\n      */\n     protected String contents;\n-    \n+\n     protected Set<KnownHostEntry> knownHosts = new HashSet<KnownHostEntry>();\n \n     public void setHostKeyChecking( String hostKeyChecking )\n@@ -60,11 +60,16 @@ public String getContents()\n     {\n         return contents;\n     }\n-    \n+\n     public void storeKnownHosts( String contents )\n         throws IOException\n     {\n     }\n-    \n-    \n+\n+    public void addKnownHost( KnownHostEntry knownHost )\n+        throws IOException\n+    {\n+    }\n+\n+\n }",
                "changes": 15
            },
            {
                "status": "modified",
                "additions": 14,
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java",
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "filename": "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java",
                "deletions": 3,
                "sha": "48ab250621f66108f70a6b8fffb06956bb68d999",
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java",
                "patch": "@@ -33,7 +33,7 @@\n  *\n  * @author Juan F. Codagnone\n  * @since Sep 12, 2005\n- * \n+ *\n  * @plexus.component role=\"org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider\"\n  *    role-hint=\"file\"\n  *    instantiation-strategy=\"per-lookup\"\n@@ -72,15 +72,26 @@ public void storeKnownHosts( String contents )\n         throws IOException\n     {\n         Set<KnownHostEntry> hosts = this.loadKnownHosts( contents );\n-        \n+\n         if ( ! this.knownHosts.equals( hosts ) )\n         {\n             file.getParentFile().mkdirs();\n             FileUtils.fileWrite( file.getAbsolutePath(), contents );\n             this.knownHosts = hosts;\n         }\n     }\n-    \n+\n+    public void addKnownHost( KnownHostEntry knownHostEntry )\n+        throws IOException\n+    {\n+        if ( !this.knownHosts.contains( knownHostEntry ) )\n+        {\n+            String knownHost = knownHostEntry.getHostName() + \" \" + knownHostEntry.getKeyType() + \" \"\n+                + knownHostEntry.getKeyValue() + \"\\n\";\n+            FileUtils.fileAppend( file.getAbsolutePath(), knownHost );\n+        }\n+    }\n+\n     public File getFile()\n     {\n         return file;",
                "changes": 17
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java",
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "filename": "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java",
                "deletions": 0,
                "sha": "abaebefdb09c2457f3c6b26d16b9c1fc0507c4ce",
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java",
                "patch": "@@ -34,6 +34,9 @@\n     void storeKnownHosts( String contents )\n         throws IOException;\n \n+    void addKnownHost( KnownHostEntry knownHost )\n+        throws IOException;\n+\n     void setHostKeyChecking( String hostKeyChecking );\n \n     String getHostKeyChecking();",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 27,
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "filename": "wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "deletions": 29,
                "sha": "84288e92ffe8e25f2e7f65dd2763e1efe67aeca6",
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "patch": "@@ -25,8 +25,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n import java.util.List;\n import java.util.Properties;\n \n@@ -48,17 +46,14 @@\n import org.apache.maven.wagon.providers.ssh.interactive.NullInteractiveUserInfo;\n import org.apache.maven.wagon.providers.ssh.jsch.interactive.UserInfoUIKeyboardInteractiveProxy;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostChangedException;\n+import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostEntry;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider;\n import org.apache.maven.wagon.providers.ssh.knownhost.UnknownHostException;\n import org.apache.maven.wagon.proxy.ProxyInfo;\n import org.apache.maven.wagon.resource.Resource;\n import org.codehaus.plexus.util.IOUtil;\n import org.codehaus.plexus.util.StringInputStream;\n \n-import com.jcraft.jsch.agentproxy.AgentProxyException;\n-import com.jcraft.jsch.agentproxy.Connector;\n-import com.jcraft.jsch.agentproxy.ConnectorFactory;\n-import com.jcraft.jsch.agentproxy.RemoteIdentityRepository;\n import com.jcraft.jsch.ChannelExec;\n import com.jcraft.jsch.HostKey;\n import com.jcraft.jsch.HostKeyRepository;\n@@ -71,6 +66,10 @@\n import com.jcraft.jsch.Session;\n import com.jcraft.jsch.UIKeyboardInteractive;\n import com.jcraft.jsch.UserInfo;\n+import com.jcraft.jsch.agentproxy.AgentProxyException;\n+import com.jcraft.jsch.agentproxy.Connector;\n+import com.jcraft.jsch.agentproxy.ConnectorFactory;\n+import com.jcraft.jsch.agentproxy.RemoteIdentityRepository;\n \n /**\n  * AbstractJschWagon\n@@ -251,24 +250,9 @@ public void openConnectionInternal()\n \n         session.setUserInfo( ui );\n \n-        StringWriter stringWriter = new StringWriter();\n         try\n         {\n             session.connect();\n-\n-            if ( getKnownHostsProvider() != null )\n-            {\n-                PrintWriter w = new PrintWriter( stringWriter );\n-\n-                HostKeyRepository hkr = sch.getHostKeyRepository();\n-                HostKey[] keys = hkr.getHostKey();\n-\n-                for ( int i = 0; keys != null && i < keys.length; i++ )\n-                {\n-                    HostKey key = keys[i];\n-                    w.println( key.getHost() + \" \" + key.getType() + \" \" + key.getKey() );\n-                }\n-            }\n         }\n         catch ( JSchException e )\n         {\n@@ -286,16 +270,30 @@ else if ( e.getMessage().contains( \"HostKey has been changed\" ) )\n             }\n         }\n \n-        try\n-        {\n-            getKnownHostsProvider().storeKnownHosts( stringWriter.toString() );\n-        }\n-        catch ( IOException e )\n+        if ( getKnownHostsProvider() != null )\n         {\n-            closeConnection();\n+            HostKeyRepository hkr = sch.getHostKeyRepository();\n \n-            throw new AuthenticationException(\n-                \"Connection aborted - failed to write to known_hosts. Reason: \" + e.getMessage(), e );\n+            HostKey[] hk = hkr.getHostKey( host, null );\n+            try\n+            {\n+                if ( hk != null )\n+                {\n+                    for ( HostKey hostKey : hk )\n+                    {\n+                        KnownHostEntry knownHostEntry = new KnownHostEntry( hostKey.getHost(), hostKey.getType(),\n+                            hostKey.getKey() );\n+                        getKnownHostsProvider().addKnownHost( knownHostEntry );\n+                    }\n+                }\n+            }\n+            catch ( IOException e )\n+            {\n+                closeConnection();\n+\n+                throw new AuthenticationException(\n+                    \"Connection aborted - failed to write to known_hosts. Reason: \" + e.getMessage(), e );\n+            }\n         }\n     }\n ",
                "changes": 56
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "filename": "wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java",
                "deletions": 0,
                "sha": "72dc1c0918d80b3bf2fb470196fc84c4894caec0",
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java",
                "patch": "@@ -21,6 +21,7 @@\n \n import org.apache.maven.wagon.Wagon;\n import org.apache.maven.wagon.providers.ssh.AbstractEmbeddedScpWagonTest;\n+import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostEntry;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider;\n \n import java.io.IOException;\n@@ -47,6 +48,11 @@ public void storeKnownHosts( String contents )\n \n             }\n \n+            public void addKnownHost( KnownHostEntry knownHost )\n+                throws IOException\n+            {\n+            }\n+\n             public void setHostKeyChecking( String hostKeyChecking )\n             {\n             }",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "filename": "wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java",
                "deletions": 0,
                "sha": "47d642db666697defcbea0ce1327f20a0a18e777",
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.maven.wagon.Wagon;\n import org.apache.maven.wagon.authentication.AuthenticationInfo;\n import org.apache.maven.wagon.providers.ssh.AbstractEmbeddedScpWagonWithKeyTest;\n+import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostEntry;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider;\n \n import java.io.File;\n@@ -50,6 +51,11 @@ public void storeKnownHosts( String contents )\n \n             }\n \n+            public void addKnownHost( KnownHostEntry knownHost )\n+                    throws IOException\n+            {\n+            }\n+\n             public void setHostKeyChecking( String hostKeyChecking )\n             {\n             }",
                "changes": 6
            }
        ],
        "unit_tests": [
            "EmbeddedScpWagonTest.java",
            "KnownHostsProviderTest.java",
            "EmbeddedScpWagonWithKeyTest.java",
            "FileKnownHostsProviderTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java",
        "buggy_files": [
            "wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
            "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java",
            "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java",
            "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java"
        ],
        "fixed": true
    }
]