{
    "commons-vfs_f070d7c": {
        "repo": "commons-vfs",
        "message": "[tests][hdfs] fix NullPointerException in tests on linux\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1650852 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-vfs/commit/f070d7c0174e3588c5f1f1347a7baa839c97262c",
        "parent": "https://github.com/apache/commons-vfs/commit/75f54c482430c99e107aeb3ef8b6742007fd0544",
        "bug_id": "commons-vfs_f070d7c",
        "file": [
            {
                "sha": "24eb2f5282901803e5fb62bd05655aeeecc8ebfb",
                "filename": "core/src/test/java/org/apache/commons/vfs2/provider/hdfs/test/HdfsFileProviderTest.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/f070d7c0174e3588c5f1f1347a7baa839c97262c/core/src/test/java/org/apache/commons/vfs2/provider/hdfs/test/HdfsFileProviderTest.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/f070d7c0174e3588c5f1f1347a7baa839c97262c/core/src/test/java/org/apache/commons/vfs2/provider/hdfs/test/HdfsFileProviderTest.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/provider/hdfs/test/HdfsFileProviderTest.java?ref=f070d7c0174e3588c5f1f1347a7baa839c97262c",
                "patch": "@@ -75,7 +75,6 @@\n     private static FileSystem hdfs;\n \n     protected static Configuration conf;\n-    protected static DefaultFileSystemManager vfs;\n     protected static MiniDFSCluster cluster;\n \n     @BeforeClass\n@@ -134,7 +133,7 @@ public static void setUmask(Configuration conf2)\n             // Need to set permission to 777 xor umask\n             // leading zero makes java interpret as base 8\n             final int newPermission = 0777 ^ umask;\n-            conf.set(\"dfs.datanode.data.dir.perm\", String.format(\"%03o\", newPermission));\n+            conf2.set(\"dfs.datanode.data.dir.perm\", String.format(\"%03o\", newPermission));\n         }\n         catch (final Exception e)\n         {",
                "deletions": 2
            }
        ],
        "patched_files": [
            "HdfsFileProvider.java"
        ],
        "unit_tests": [
            "HdfsFileProviderTest.java"
        ]
    },
    "commons-vfs_4bbfc97": {
        "repo": "commons-vfs",
        "message": "[VFS-682] Throw a org.apache.commons.vfs2.FileSystemException instead of a NullPointerException in org.apache.commons.vfs2.impl.DefaultFileSystemManager.resolveName(FileName, String, NameScope).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1847024 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-vfs/commit/4bbfc975e0664aba9c5339988ee512fe8eef0569",
        "parent": "https://github.com/apache/commons-vfs/commit/7fc4d909c72e273dc9ce17ed871fd5214d36a6a9",
        "bug_id": "commons-vfs_4bbfc97",
        "file": [
            {
                "sha": "91a9d2fdf1eb174443910120dff342a435c25698",
                "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/DefaultFileSystemManager.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/4bbfc975e0664aba9c5339988ee512fe8eef0569/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/DefaultFileSystemManager.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/4bbfc975e0664aba9c5339988ee512fe8eef0569/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/DefaultFileSystemManager.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/DefaultFileSystemManager.java?ref=4bbfc975e0664aba9c5339988ee512fe8eef0569",
                "patch": "@@ -762,7 +762,10 @@ public FileName resolveName(final FileName root, final String path) throws FileS\n     public FileName resolveName(final FileName base, final String name, final NameScope scope)\n             throws FileSystemException {\n         if (base == null) {\n-            throw new FileSystemException(\"Invalid base filename.\");\n+            throw new FileSystemException(\"Invalid base FileName.\");\n+        }\n+        if (name == null) {\n+            throw new FileSystemException(\"Invalid name String.\");\n         }\n         final FileName realBase;\n         if (VFS.isUriStyle() && base.isFile()) {",
                "deletions": 1
            },
            {
                "sha": "a5a16b604f42b50b4f990b5e86c5a91646c01c6f",
                "filename": "src/changes/changes.xml",
                "blob_url": "https://github.com/apache/commons-vfs/blob/4bbfc975e0664aba9c5339988ee512fe8eef0569/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/commons-vfs/raw/4bbfc975e0664aba9c5339988ee512fe8eef0569/src/changes/changes.xml",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=4bbfc975e0664aba9c5339988ee512fe8eef0569",
                "patch": "@@ -104,6 +104,9 @@ The <action> type attribute can be add,update,fix,remove.\n       <action issue=\"VFS-674\" dev=\"ggregory\" type=\"fix\" due-to=\"Boris Petrov, Gary Gregory\">\n         Cannot close an FTP input stream without an exception.\n       </action>\n+      <action issue=\"VFS-682\" dev=\"ggregory\" type=\"update\">\n+        Throw a org.apache.commons.vfs2.FileSystemException instead of a NullPointerException in org.apache.commons.vfs2.impl.DefaultFileSystemManager.resolveName(FileName, String, NameScope).\n+      </action>\n     </release>\n     <release version=\"2.2\" date=\"2017-10-06\" description=\"New features and bug fix release.\">\n       <action issue=\"VFS-642\" dev=\"pschumacher\" type=\"update\" due-to=\"ilangoldfeld\">",
                "deletions": 0
            }
        ],
        "patched_files": [
            "DefaultFileSystemManager.java"
        ],
        "unit_tests": [
            "DefaultFileSystemManagerTest.java"
        ]
    },
    "commons-vfs_add1a77": {
        "repo": "commons-vfs",
        "message": "[VFS-739] Changes to parseUri breaks backward compatibility by throwing\nNullPointerException in some cases.",
        "commit": "https://github.com/apache/commons-vfs/commit/add1a771a73c830378eca440f0e7a249c3638faf",
        "parent": "https://github.com/apache/commons-vfs/commit/efbffc78807a17f0050f8e623ddef7b0be681f95",
        "bug_id": "commons-vfs_add1a77",
        "file": [
            {
                "sha": "90abfeb71d918ab0bd28aa6ace1933e3fbb137e4",
                "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/local/LocalFileNameParser.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/add1a771a73c830378eca440f0e7a249c3638faf/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/local/LocalFileNameParser.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/add1a771a73c830378eca440f0e7a249c3638faf/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/local/LocalFileNameParser.java",
                "status": "modified",
                "changes": 12,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/provider/local/LocalFileNameParser.java?ref=add1a771a73c830378eca440f0e7a249c3638faf",
                "patch": "@@ -16,8 +16,11 @@\n  */\n package org.apache.commons.vfs2.provider.local;\n \n+import java.net.URI;\n+\n import org.apache.commons.vfs2.FileName;\n import org.apache.commons.vfs2.FileSystemException;\n+import org.apache.commons.vfs2.FileSystemManager;\n import org.apache.commons.vfs2.FileType;\n import org.apache.commons.vfs2.VFS;\n import org.apache.commons.vfs2.provider.AbstractFileNameParser;\n@@ -63,7 +66,7 @@ public FileName parseUri(final VfsComponentContext context, final FileName base,\n         final StringBuilder name = new StringBuilder();\n \n         // Extract the scheme\n-        String scheme = UriParser.extractScheme(context.getFileSystemManager().getSchemes(), uri, name);\n+        String scheme = UriParser.extractScheme(getSchemes(context, base, uri), uri, name);\n         if (scheme == null && base != null) {\n             scheme = base.getScheme();\n         }\n@@ -87,6 +90,13 @@ public FileName parseUri(final VfsComponentContext context, final FileName base,\n         return createFileName(scheme, rootFile, path, fileType);\n     }\n \n+    private String[] getSchemes(final VfsComponentContext context, FileName base, String uri) {\n+        if (context == null) {\n+            return new String[] { base != null ? base.getScheme() : URI.create(uri).getScheme() };\n+        }\n+        return context.getFileSystemManager().getSchemes();\n+    }\n+\n     protected abstract FileName createFileName(String scheme, final String rootFile, final String path,\n             final FileType type);\n }",
                "deletions": 1
            },
            {
                "sha": "6baadda4a8c6e3263e6d9a3fb75529e0129e8f8a",
                "filename": "commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/url/UrlFileNameParserTest.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/add1a771a73c830378eca440f0e7a249c3638faf/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/url/UrlFileNameParserTest.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/add1a771a73c830378eca440f0e7a249c3638faf/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/url/UrlFileNameParserTest.java",
                "status": "added",
                "changes": 38,
                "additions": 38,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/test/java/org/apache/commons/vfs2/provider/url/UrlFileNameParserTest.java?ref=add1a771a73c830378eca440f0e7a249c3638faf",
                "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.vfs2.provider.url;\n+\n+import java.net.URI;\n+\n+import org.apache.commons.vfs2.FileName;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class UrlFileNameParserTest {\n+\n+    @Test\n+    public void testJira739() throws Exception {\n+        final String uriStr = \"maprfs:///\";\n+        // Check that we have a valid URI\n+        final URI uri = new URI(uriStr);\n+        // VFS-739 shows that parseUri throws an NPE:\n+        final FileName fileName = new UrlFileNameParser().parseUri(null, null, uriStr);\n+        Assert.assertEquals(uriStr, fileName.getURI());\n+        Assert.assertEquals(uri.getScheme(), fileName.getScheme());\n+    }\n+}",
                "deletions": 0
            },
            {
                "sha": "8b39b814c5b430f7ae2313179c19926c80a2c737",
                "filename": "src/changes/changes.xml",
                "blob_url": "https://github.com/apache/commons-vfs/blob/add1a771a73c830378eca440f0e7a249c3638faf/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/commons-vfs/raw/add1a771a73c830378eca440f0e7a249c3638faf/src/changes/changes.xml",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=add1a771a73c830378eca440f0e7a249c3638faf",
                "patch": "@@ -95,6 +95,9 @@ The <action> type attribute can be add,update,fix,remove.\n       <action issue=\"VFS-738\" dev=\"ggregory\" type=\"add\" due-to=\"Gary Gregory\">\r\n         Deprecate org.apache.commons.vfs2.FileChangeEvent.getFile() in favor of getFileObject().\r\n       </action>\r\n+      <action issue=\"VFS-739\" dev=\"ggregory\" type=\"fix\" due-to=\"xia0c, Gary Gregory\">\r\n+        Changes to parseUri breaks backward compatibility by throwing NullPointerException in some cases.\r\n+      </action>\r\n     </release>\r\n     <release version=\"2.4.1\" date=\"2019-08-10\" description=\"Bug fix release.\">\r\n       <action issue=\"VFS-725\" dev=\"ggregory\" type=\"fix\" due-to=\"Gary Gregory\">\r",
                "deletions": 0
            }
        ],
        "patched_files": [
            "LocalFileNameParser.java",
            "UrlFileNameParser.java"
        ],
        "unit_tests": [
            "UrlFileNameParserTest.java"
        ]
    },
    "commons-vfs_0e681a7": {
        "repo": "commons-vfs",
        "message": "[VFS-427][HTTP] NPE on HttpFileObject.getContent().getContentInfo().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1362235 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/commons-vfs/commit/0e681a785066d2bbecaed0deb9366586d156ca49",
        "parent": "https://github.com/apache/commons-vfs/commit/4b9ef61dfe2b904af86a09be6d5dbe77482ba32c",
        "bug_id": "commons-vfs_0e681a7",
        "file": [
            {
                "sha": "3c6cfcfdfc18563fbecd3b8f8d27105e616d6b15",
                "filename": "core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java",
                "status": "modified",
                "changes": 17,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49",
                "patch": "@@ -16,8 +16,11 @@\n  */\n package org.apache.commons.vfs2.provider.http;\n \n+import java.io.IOException;\n+\n import org.apache.commons.httpclient.Header;\n import org.apache.commons.httpclient.HeaderElement;\n+import org.apache.commons.httpclient.methods.HeadMethod;\n import org.apache.commons.vfs2.FileContent;\n import org.apache.commons.vfs2.FileContentInfo;\n import org.apache.commons.vfs2.FileContentInfoFactory;\n@@ -26,7 +29,7 @@\n import org.apache.commons.vfs2.util.FileObjectUtils;\n \n /**\n- * Creates the FileContentInfo.\n+ * Creates FileContentInfo instances for HTTP.\n  */\n public class HttpFileContentInfoFactory implements FileContentInfoFactory\n {\n@@ -38,7 +41,15 @@ public FileContentInfo create(FileContent fileContent) throws FileSystemExceptio\n         String contentType = null;\n         String contentEncoding = null;\n \n-        Header header = httpFile.getHeadMethod().getResponseHeader(\"content-type\");\n+        HeadMethod headMethod;\n+        try\n+        {\n+            headMethod = httpFile.getHeadMethod();\n+        } catch (IOException e)\n+        {\n+            throw new FileSystemException(e);\n+        }\n+        Header header = headMethod.getResponseHeader(\"content-type\");\n         if (header != null)\n         {\n             HeaderElement[] element = header.getElements();\n@@ -48,7 +59,7 @@ public FileContentInfo create(FileContent fileContent) throws FileSystemExceptio\n             }\n         }\n \n-        contentEncoding = httpFile.getHeadMethod().getResponseCharSet();\n+        contentEncoding = headMethod.getResponseCharSet();\n \n         return new DefaultFileContentInfo(contentType, contentEncoding);\n     }",
                "deletions": 3
            },
            {
                "sha": "c8b044bb5fdd7d2a6bd74b03a8f95f345328cb85",
                "filename": "core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java",
                "status": "modified",
                "changes": 16,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49",
                "patch": "@@ -74,11 +74,7 @@ protected void doDetach() throws Exception\n     protected FileType doGetType() throws Exception\n     {\n         // Use the HEAD method to probe the file.\n-        method = new HeadMethod();\n-        setupMethod(method);\n-        final HttpClient client = fileSystem.getClient();\n-        final int status = client.executeMethod(method);\n-        method.releaseConnection();\n+        final int status = this.getHeadMethod().getStatusCode();\n         if (status == HttpURLConnection.HTTP_OK)\n         {\n             return FileType.FILE;\n@@ -216,8 +212,16 @@ protected FileContentInfoFactory getFileContentInfoFactory()\n         return new HttpFileContentInfoFactory();\n     }\n \n-    HeadMethod getHeadMethod()\n+    HeadMethod getHeadMethod() throws IOException\n     {\n+        if (method != null) {\n+            return method;\n+        }\n+        method = new HeadMethod();\n+        setupMethod(method);\n+        final HttpClient client = fileSystem.getClient();\n+        client.executeMethod(method);\n+        method.releaseConnection();\n         return method;\n     }\n ",
                "deletions": 6
            },
            {
                "sha": "7c1c4c5d91c9905baa4c90ec0417de5a78d9100f",
                "filename": "core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java",
                "status": "added",
                "changes": 35,
                "additions": 35,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49",
                "patch": "@@ -0,0 +1,35 @@\n+package org.apache.commons.vfs2.provider.http.test;\n+\n+import org.apache.commons.vfs2.FileContent;\n+import org.apache.commons.vfs2.FileObject;\n+import org.apache.commons.vfs2.FileSystemException;\n+import org.apache.commons.vfs2.FileSystemManager;\n+import org.apache.commons.vfs2.VFS;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo()\n+ * \n+ * @since 2.1\n+ */\n+public class GetContentInfoFunctionalTest\n+{\n+\n+    /**\n+     * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo().\n+     * \n+     * @throws FileSystemException\n+     *             thrown when the getContentInfo API fails.\n+     */\n+    @Test\n+    public void testGoogle() throws FileSystemException\n+    {\n+        final FileSystemManager fsManager = VFS.getManager();\n+        final FileObject fo = fsManager.resolveFile(\"http://www.google.com/images/logos/ps_logo2.png\");\n+        final FileContent content = fo.getContent();\n+        Assert.assertNotNull(content);\n+        // Used to NPE before fix:\n+        content.getContentInfo();\n+    }\n+}",
                "deletions": 0
            },
            {
                "sha": "5b9ca1388be1231b1917cfadad52c8e9989819ba",
                "filename": "core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java",
                "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java",
                "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java",
                "status": "added",
                "changes": 35,
                "additions": 35,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java?ref=0e681a785066d2bbecaed0deb9366586d156ca49",
                "patch": "@@ -0,0 +1,35 @@\n+package org.apache.commons.vfs2.provider.https.test;\n+\n+import org.apache.commons.vfs2.FileContent;\n+import org.apache.commons.vfs2.FileObject;\n+import org.apache.commons.vfs2.FileSystemException;\n+import org.apache.commons.vfs2.FileSystemManager;\n+import org.apache.commons.vfs2.VFS;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo()\n+ * \n+ * @since 2.1\n+ */\n+public class GetContentInfoFunctionalTest\n+{\n+\n+    /**\n+     * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo().\n+     * \n+     * @throws FileSystemException\n+     *             thrown when the getContentInfo API fails.\n+     */\n+    @Test\n+    public void testGoogle() throws FileSystemException\n+    {\n+        final FileSystemManager fsManager = VFS.getManager();\n+        final FileObject fo = fsManager.resolveFile(\"https://www.google.com/images/logos/ps_logo2.png\");\n+        final FileContent content = fo.getContent();\n+        Assert.assertNotNull(content);\n+        // Used to NPE before fix:\n+        content.getContentInfo();\n+    }\n+}",
                "deletions": 0
            },
            {
                "sha": "4effa43c6956f27c2f2ebd1c756fef9ba8ecccc8",
                "filename": "src/changes/changes.xml",
                "blob_url": "https://github.com/apache/commons-vfs/blob/0e681a785066d2bbecaed0deb9366586d156ca49/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/commons-vfs/raw/0e681a785066d2bbecaed0deb9366586d156ca49/src/changes/changes.xml",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=0e681a785066d2bbecaed0deb9366586d156ca49",
                "patch": "@@ -23,6 +23,9 @@\n \n   <body>\n     <release version=\"2.1\" date=\"TBD\" description=\"New features and bug fix release.\">\n+      <action issue=\"VFS-427\" dev=\"ggregory\" type=\"add\" due-to=\"awelynant\">\n+        [HTTP] NPE on HttpFileObject.getContent().getContentInfo().\n+      </action>\n       <action issue=\"VFS-405\" dev=\"ggregory\" type=\"add\" due-to=\"dwaszak\">\n         Get/set the file permissions.\n       </action>\n@@ -108,7 +111,7 @@\n         [RAM] Reading a RAM FileSystem file fails because it never returns EOF -1.\n       </action>\n       <action issue=\"VFS-404\" dev=\"ggregory\" type=\"update\">\n-        [FTP][FTPS] Update Apache Commons Net to 3.1 from 3.0.1\n+        [FTP][FTPS] Update Apache Commons Net to 3.1 from 3.0.1.\n       </action>\n       <action issue=\"VFS-402\" dev=\"ggregory\" type=\"update\">\n         [WebDAV] Update Apache Jackrabbit 1.5.2 to 1.6.5.",
                "deletions": 1
            }
        ],
        "patched_files": [
            "HttpFileContentInfoFactory.java",
            "HttpFileObject.java"
        ],
        "unit_tests": [
            "GetContentInfoFunctionalTest.java"
        ]
    }
}