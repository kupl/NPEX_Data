{
    "xmlgraphics-commons_2f57398": {
        "bug_id": "xmlgraphics-commons_2f57398",
        "commit": "https://github.com/apache/xmlgraphics-commons/commit/2f57398595b2d6196ba9ae480049d32bda786d62",
        "file": [
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/xmlgraphics-commons/blob/2f57398595b2d6196ba9ae480049d32bda786d62/src/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriter.java",
                "changes": 70,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-commons/contents/src/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriter.java?ref=2f57398595b2d6196ba9ae480049d32bda786d62",
                "deletions": 33,
                "filename": "src/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriter.java",
                "patch": "@@ -118,41 +118,45 @@ private void updateParams(TIFFEncodeParam encodeParams, ImageWriterParams params\n \n     private TIFFEncodeParam createTIFFEncodeParams(ImageWriterParams params) {\n         TIFFEncodeParam encodeParams = new TIFFEncodeParam();\n-        if (params.getCompressionMethod() == null) {\n-            //PackBits as default\n-            encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_PACKBITS);\n-        } else if (\"PackBits\".equalsIgnoreCase(params.getCompressionMethod())) {\n-            encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_PACKBITS);\n-        } else if (\"NONE\".equalsIgnoreCase(params.getCompressionMethod())) {\n+        if (params == null) {\n             encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_NONE);\n-        } else if (\"JPEG\".equalsIgnoreCase(params.getCompressionMethod())) {\n-            encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_JPEG_TTN2);\n-        } else if (\"Deflate\".equalsIgnoreCase(params.getCompressionMethod())) {\n-            encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_DEFLATE);\n         } else {\n-            throw new UnsupportedOperationException(\"Compression method not supported: \"\n-                    + params.getCompressionMethod());\n-        }\n-        \n-        if (params.getResolution() != null) {\n-            // Set target resolution\n-            float pixSzMM = 25.4f / params.getResolution().floatValue();\n-            // num Pixs in 100 Meters\n-            int numPix = (int)(((1000 * 100) / pixSzMM) + 0.5); \n-            int denom = 100 * 100;  // Centimeters per 100 Meters;\n-            long [] rational = {numPix, denom};\n-            TIFFField [] fields = {\n-                new TIFFField(TIFFImageDecoder.TIFF_RESOLUTION_UNIT, \n-                              TIFFField.TIFF_SHORT, 1, \n-                              new char[] {(char)3}),\n-                new TIFFField(TIFFImageDecoder.TIFF_X_RESOLUTION, \n-                              TIFFField.TIFF_RATIONAL, 1, \n-                              new long[][] {rational}),\n-                new TIFFField(TIFFImageDecoder.TIFF_Y_RESOLUTION, \n-                              TIFFField.TIFF_RATIONAL, 1, \n-                              new long[][] {rational}) \n-                    };\n-            encodeParams.setExtraFields(fields);\n+            if (params.getCompressionMethod() == null) {\n+                //PackBits as default\n+                encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_PACKBITS);\n+            } else if (\"PackBits\".equalsIgnoreCase(params.getCompressionMethod())) {\n+                encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_PACKBITS);\n+            } else if (\"NONE\".equalsIgnoreCase(params.getCompressionMethod())) {\n+                encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_NONE);\n+            } else if (\"JPEG\".equalsIgnoreCase(params.getCompressionMethod())) {\n+                encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_JPEG_TTN2);\n+            } else if (\"Deflate\".equalsIgnoreCase(params.getCompressionMethod())) {\n+                encodeParams.setCompression(TIFFEncodeParam.COMPRESSION_DEFLATE);\n+            } else {\n+                throw new UnsupportedOperationException(\"Compression method not supported: \"\n+                        + params.getCompressionMethod());\n+            }\n+            \n+            if (params.getResolution() != null) {\n+                // Set target resolution\n+                float pixSzMM = 25.4f / params.getResolution().floatValue();\n+                // num Pixs in 100 Meters\n+                int numPix = (int)(((1000 * 100) / pixSzMM) + 0.5); \n+                int denom = 100 * 100;  // Centimeters per 100 Meters;\n+                long [] rational = {numPix, denom};\n+                TIFFField [] fields = {\n+                    new TIFFField(TIFFImageDecoder.TIFF_RESOLUTION_UNIT, \n+                                  TIFFField.TIFF_SHORT, 1, \n+                                  new char[] {(char)3}),\n+                    new TIFFField(TIFFImageDecoder.TIFF_X_RESOLUTION, \n+                                  TIFFField.TIFF_RATIONAL, 1, \n+                                  new long[][] {rational}),\n+                    new TIFFField(TIFFImageDecoder.TIFF_Y_RESOLUTION, \n+                                  TIFFField.TIFF_RATIONAL, 1, \n+                                  new long[][] {rational}) \n+                        };\n+                encodeParams.setExtraFields(fields);\n+            }\n         }\n         return encodeParams;\n     }",
                "raw_url": "https://github.com/apache/xmlgraphics-commons/raw/2f57398595b2d6196ba9ae480049d32bda786d62/src/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriter.java",
                "sha": "c5f47796b5e64b795a8c61ff2e92b846905f1510",
                "status": "modified"
            }
        ],
        "message": "Bugfix: Don't throw an NPE if no encoding params are given.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlgraphics/commons/trunk@592680 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlgraphics-commons/commit/7476744022d3e1ccb15525910c168231a36c6475",
        "patched_files": [
            "TIFFImageWriter.java"
        ],
        "repo": "xmlgraphics-commons",
        "unit_tests": [
            "TIFFImageWriterTest.java"
        ]
    },
    "xmlgraphics-commons_3918697": {
        "bug_id": "xmlgraphics-commons_3918697",
        "commit": "https://github.com/apache/xmlgraphics-commons/commit/391869777fcc4518dbd02162957567c55e4e047b",
        "file": [
            {
                "additions": 54,
                "blob_url": "https://github.com/apache/xmlgraphics-commons/blob/391869777fcc4518dbd02162957567c55e4e047b/test/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriterTest.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/xmlgraphics-commons/contents/test/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriterTest.java?ref=391869777fcc4518dbd02162957567c55e4e047b",
                "deletions": 0,
                "filename": "test/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriterTest.java",
                "patch": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/* $Id$ */\n+\n+package org.apache.xmlgraphics.image.writer.internal;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.OutputStream;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.commons.io.output.NullOutputStream;\n+import org.apache.xmlgraphics.image.writer.ImageWriterParams;\n+import org.apache.xmlgraphics.image.writer.MultiImageWriter;\n+\n+public class TIFFImageWriterTest extends TestCase {\n+\n+    public void testJPEGWritingWithoutParams() throws Exception {\n+        //This used to generate a NPE because the JPEG encoding params were not set\n+        OutputStream out = new NullOutputStream();\n+        org.apache.xmlgraphics.image.writer.ImageWriter imageWriter = new TIFFImageWriter();\n+        MultiImageWriter writer = null;\n+        try {\n+            writer = imageWriter.createMultiImageWriter(out);\n+            // retrieve writer\n+            if (imageWriter != null) {\n+                ImageWriterParams iwp = new ImageWriterParams();\n+                iwp.setCompressionMethod(\"JPEG\");\n+\n+                for (int pageNumber = 0; pageNumber <= 2; pageNumber++) {\n+                    BufferedImage image = new BufferedImage(200, 200, BufferedImage.TYPE_BYTE_GRAY);\n+                    writer.writeImage(image, iwp);\n+                }\n+            }\n+        } finally {\n+            writer.close();\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/xmlgraphics-commons/raw/391869777fcc4518dbd02162957567c55e4e047b/test/java/org/apache/xmlgraphics/image/writer/internal/TIFFImageWriterTest.java",
                "sha": "fb7722bd940585062fc6822e9b14a0ecf83c61e4",
                "status": "added"
            }
        ],
        "message": "Bugzilla #42998:\r\nTest case for the NPE in TIFFImageWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xmlgraphics/commons/trunk@582850 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/xmlgraphics-commons/commit/1aa15e425823567314a66ee15cd2cb3585903f35",
        "patched_files": [
            "TIFFImageWriter.java"
        ],
        "repo": "xmlgraphics-commons",
        "unit_tests": [
            "TIFFImageWriterTest.java"
        ]
    }
}