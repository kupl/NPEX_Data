[
    {
        "repo": "sling-org-apache-sling-testing-osgi-mock",
        "message": "SLING-6386 osgi-mock: Avoid NPE when providing servicer properties with null values\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1773474 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/commit/31ff942071e27467d73a47b870068c5e589d9c1a",
        "parent": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/commit/de6fd2b9e602913b06294cf0ca4e6f538508a04a",
        "bug_id": "sling-org-apache-sling-testing-osgi-mock_1",
        "file": [
            {
                "sha": "44aef63241863bd0040088ddf26d94ca66ba43bc",
                "filename": "src/main/java/org/apache/sling/testing/mock/osgi/MapUtil.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/blob/31ff942071e27467d73a47b870068c5e589d9c1a/src/main/java/org/apache/sling/testing/mock/osgi/MapUtil.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/raw/31ff942071e27467d73a47b870068c5e589d9c1a/src/main/java/org/apache/sling/testing/mock/osgi/MapUtil.java",
                "status": "modified",
                "changes": 14,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-testing-osgi-mock/contents/src/main/java/org/apache/sling/testing/mock/osgi/MapUtil.java?ref=31ff942071e27467d73a47b870068c5e589d9c1a",
                "patch": "@@ -46,7 +46,13 @@ private MapUtil() {\n         if (map == null) {\n             return null;\n         }\n-        return new Hashtable<T, U>(map);\n+        Hashtable<T, U> hashtable = new Hashtable<>();\n+        for (Map.Entry<T, U> entry : map.entrySet()) {\n+            if (entry.getKey() != null && entry.getValue() != null) {\n+                hashtable.put(entry.getKey(), entry.getValue());\n+            }\n+        }\n+        return hashtable;\n     }\n \n     /**\n@@ -101,7 +107,11 @@ else if (args[0] instanceof Dictionary) {\n         }\n         final Map<String, Object> result = new HashMap<>();\n         for (int i=0 ; i < args.length; i+=2) {\n-            result.put(args[i].toString(), args[i+1]);\n+            Object key = args[i];\n+            Object value = args[i+1];\n+            if (key != null && value != null) {\n+                result.put(key.toString(), value);\n+            }\n         }\n         return result;\n     }",
                "deletions": 2
            },
            {
                "sha": "acb96e70e67f3ea5e86e8b9622bc08c9b6c1c9ae",
                "filename": "src/main/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImpl.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/blob/31ff942071e27467d73a47b870068c5e589d9c1a/src/main/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImpl.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/raw/31ff942071e27467d73a47b870068c5e589d9c1a/src/main/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImpl.java",
                "status": "modified",
                "changes": 6,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-testing-osgi-mock/contents/src/main/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImpl.java?ref=31ff942071e27467d73a47b870068c5e589d9c1a",
                "patch": "@@ -20,7 +20,6 @@\n \n import java.lang.reflect.Array;\n import java.util.Dictionary;\n-import java.util.Hashtable;\n import java.util.Map;\n \n import org.apache.sling.testing.mock.osgi.MapUtil;\n@@ -114,10 +113,7 @@ public final BundleContext bundleContext() {\n      * @return Registered service instance\n      */\n     public final <T> T registerService(final Class<T> serviceClass, final T service, final Map<String, Object> properties) {\n-        Dictionary<String, Object> serviceProperties = null;\n-        if (properties != null) {\n-            serviceProperties = new Hashtable<String, Object>(properties);\n-        }\n+        Dictionary<String, Object> serviceProperties = MapUtil.toDictionary(properties);\n         bundleContext().registerService(serviceClass != null ? serviceClass.getName() : null, service, serviceProperties);\n         return service;\n     }",
                "deletions": 5
            },
            {
                "sha": "36fd1224e9666ec8a11d71d3117785111d461579",
                "filename": "src/test/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImplTest.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/blob/31ff942071e27467d73a47b870068c5e589d9c1a/src/test/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImplTest.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/raw/31ff942071e27467d73a47b870068c5e589d9c1a/src/test/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImplTest.java",
                "status": "modified",
                "changes": 25,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-testing-osgi-mock/contents/src/test/java/org/apache/sling/testing/mock/osgi/context/OsgiContextImplTest.java?ref=31ff942071e27467d73a47b870068c5e589d9c1a",
                "patch": "@@ -126,6 +126,31 @@ public void testRegisterInjectActivateWithProperties() {\n         assertEquals(\"value3\", service.getConfig().get(\"prop1\"));\n     }\n \n+    @Test\n+    public void testRegisterInjectActivateWithPropertiesWithNulls() {\n+        context.registerService(ServiceInterface1.class, mock(ServiceInterface1.class));\n+        context.registerService(ServiceInterface2.class, mock(ServiceInterface2.class));\n+        OsgiServiceUtilTest.Service3 service = context.registerInjectActivateService(new OsgiServiceUtilTest.Service3(),\n+                \"prop1\", \"value3\",\n+                \"prop2\", null,\n+                null, \"value4\",\n+                null, null);\n+        assertEquals(\"value3\", service.getConfig().get(\"prop1\"));\n+    }\n+\n+    @Test\n+    public void testRegisterInjectActivateWithPropertyMapNulls() {\n+        context.registerService(ServiceInterface1.class, mock(ServiceInterface1.class));\n+        context.registerService(ServiceInterface2.class, mock(ServiceInterface2.class));\n+        Map<String,Object> props = new HashMap<>();\n+        props.put(\"prop1\", \"value3\");\n+        props.put(\"prop2\", null);\n+        props.put(null, \"value4\");\n+        props.put(null, null);\n+        OsgiServiceUtilTest.Service3 service = context.registerInjectActivateService(new OsgiServiceUtilTest.Service3(), props);\n+        assertEquals(\"value3\", service.getConfig().get(\"prop1\"));\n+    }\n+\n     @Test(expected=RuntimeException.class)\n     public void testRegisterInjectActivate_RefrenceMissing() {\n         context.registerInjectActivateService(new OsgiServiceUtilTest.Service3());",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "sling-org-apache-sling-testing-osgi-mock",
        "message": "SLING-5372 osgi-mock: MockBundleContext.getServices(Class,String) throws NPE when no services found\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1719219 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/commit/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12",
        "parent": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/commit/5d71e9383bb8e4299388105c4ded8aa2d230dfa7",
        "bug_id": "sling-org-apache-sling-testing-osgi-mock_2",
        "file": [
            {
                "sha": "3c0ad53f4ae498a6240634f2e43aa8852dc7e361",
                "filename": "src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/blob/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/raw/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java",
                "status": "modified",
                "changes": 8,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-testing-osgi-mock/contents/src/main/java/org/apache/sling/testing/mock/osgi/MockBundleContext.java?ref=35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12",
                "patch": "@@ -218,7 +218,13 @@ public ServiceReference getServiceReference(final String clazz) {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public <S> Collection<ServiceReference<S>> getServiceReferences(Class<S> clazz, String filter) throws InvalidSyntaxException {\n-        return ImmutableList.<ServiceReference<S>>copyOf(getServiceReferences(clazz.getName(), filter));\n+        ServiceReference<S>[] result = getServiceReferences(clazz.getName(), filter);\n+        if (result == null) {\n+            return ImmutableList.<ServiceReference<S>>of();\n+        }\n+        else {\n+            return ImmutableList.<ServiceReference<S>>copyOf(result);\n+        }\n     }\n \n     @SuppressWarnings(\"unchecked\")",
                "deletions": 1
            },
            {
                "sha": "2b1cded8dbc8ee1ae8d6ad7a6c6d66ff58012fae",
                "filename": "src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java",
                "blob_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/blob/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-testing-osgi-mock/raw/35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12/src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java",
                "status": "modified",
                "changes": 15,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-testing-osgi-mock/contents/src/test/java/org/apache/sling/testing/mock/osgi/MockBundleContextTest.java?ref=35d51a13b60e26d6a2a16ab4cffb7b04b8fc5d12",
                "patch": "@@ -29,6 +29,7 @@\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n \n+import java.util.Collection;\n import java.util.Dictionary;\n import java.util.Hashtable;\n \n@@ -92,6 +93,10 @@ public void testServiceRegistration() throws InvalidSyntaxException {\n         assertSame(reg1.getReference(), refsString[0]);\n         assertSame(reg2.getReference(), refsString[1]);\n \n+        Collection<ServiceReference<String>> refColString = bundleContext.getServiceReferences(String.class, null);\n+        assertEquals(2, refColString.size());\n+        assertSame(reg1.getReference(), refColString.iterator().next());\n+\n         ServiceReference<?>[] refsInteger = bundleContext.getServiceReferences(Integer.class.getName(), null);\n         assertEquals(2, refsInteger.length);\n         assertSame(reg3.getReference(), refsInteger[0]);\n@@ -111,6 +116,16 @@ public void testServiceRegistration() throws InvalidSyntaxException {\n         bundleContext.ungetService(refInteger);\n     }\n     \n+    @Test\n+    public void testNoServiceReferences() throws InvalidSyntaxException {\n+        ServiceReference<?>[] refs = bundleContext.getServiceReferences(String.class.getName(), null);\n+        assertNull(refs);\n+\n+        Collection<ServiceReference<String>> refCol = bundleContext.getServiceReferences(String.class, null);\n+        assertNotNull(refCol);\n+        assertTrue(refCol.isEmpty());\n+    }\n+    \n     @Test\n     public void testServiceUnregistration() {\n         // prepare test services",
                "deletions": 0
            }
        ]
    }
]