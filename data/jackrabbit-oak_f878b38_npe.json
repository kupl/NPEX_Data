[
    {
        "repo": "jackrabbit-oak",
        "commit": "https://github.com/apache/jackrabbit-oak/commit/f878b3867093dbcc53760f2acadfa12dbf31801f",
        "bug_id": "jackrabbit-oak_f878b38",
        "message": "OAK-8218: ReadOnlyNodeTypeManager.isNodeType prone to NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1857304 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit-oak/commit/11903eb48da994d1477df04eb4aa7e86750005bb",
        "patched_files": [
            "CugConfiguration.java",
            "WorkspaceImpl.java",
            "ReadOnlyNodeTypeManager.java",
            "RepositoryUpgrade.java",
            "NodeTypeRegistry.java",
            "NodeTypeImpl.java",
            "IndexDefinition.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-authorization-cug/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-authorization-cug/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfiguration.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-authorization-cug/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfiguration.java",
                "deletions": 0,
                "sha": "5f80affba976045796a82fda4315856d40d699d0",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-authorization-cug/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfiguration.java",
                "patch": "@@ -233,6 +233,7 @@ private CugExclude getExclude() {\n     static boolean registerCugNodeTypes(@NotNull final Root root) {\n         try {\n             ReadOnlyNodeTypeManager ntMgr = new ReadOnlyNodeTypeManager() {\n+                @NotNull\n                 @Override\n                 protected Tree getTypes() {\n                     return root.getTree(NodeTypeConstants.NODE_TYPES_PATH);",
                "changes": 1
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugValidatorTest.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugValidatorTest.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugValidatorTest.java",
                "deletions": 1,
                "sha": "a35c1bbc58d3d6dc84b17c508cb3601c64f0ecfd",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugValidatorTest.java",
                "patch": "@@ -153,7 +153,7 @@ protected Root getWriteRoot() {\n                 return root;\n             }\n \n-            @Nullable\n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return root.getTree(NODE_TYPES_PATH);",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/NodeTypeImpl.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/NodeTypeImpl.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/NodeTypeImpl.java",
                "deletions": 1,
                "sha": "c019c5f34445cb2ad64f75e1251d7c5e5106c575",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/NodeTypeImpl.java",
                "patch": "@@ -485,7 +485,8 @@ private boolean internalCanRemoveItem(String itemName,\n     private ReadOnlyNodeTypeManager getManager() {\n         final Tree types = definition.getParent();\n         return new ReadOnlyNodeTypeManager() {\n-            @Override @Nullable\n+            @NotNull\n+            @Override\n             protected Tree getTypes() {\n                 return types;\n             }",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 14,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/ReadOnlyNodeTypeManager.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/ReadOnlyNodeTypeManager.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/ReadOnlyNodeTypeManager.java",
                "deletions": 15,
                "sha": "3fdd4802c26b6a8dce75c28a982b9ebcb140f337",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/ReadOnlyNodeTypeManager.java",
                "patch": "@@ -82,10 +82,13 @@ protected final String getOakName(String jcrName) throws RepositoryException {\n     }\n \n     /**\n-     * @return  {@link org.apache.jackrabbit.oak.api.Tree} instance where the node types\n-     * are stored or {@code null} if none.\n+     * Returns the {@link Tree} instance where the node types are stored. This\n+     * method never returns {@code null} and may return a {@code Tree} that\n+     * does not exist (see {@link Tree#exists()} when there are no types stored.\n+     *\n+     * @return {@link Tree} instance where the node types are stored.\n      */\n-    @Nullable\n+    @NotNull\n     protected abstract Tree getTypes();\n \n     /**\n@@ -125,6 +128,7 @@ protected NamePathMapper getNamePathMapper() {\n     public static ReadOnlyNodeTypeManager getInstance(final Root root,\n                                                       final NamePathMapper namePathMapper) {\n         return new ReadOnlyNodeTypeManager() {\n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return root.getTree(NODE_TYPES_PATH);\n@@ -142,8 +146,7 @@ protected NamePathMapper getNamePathMapper() {\n \n     @Override\n     public boolean hasNodeType(String name) throws RepositoryException {\n-        Tree types = getTypes();\n-        return types != null && types.hasChild(getOakName(name));\n+        return getTypes().hasChild(getOakName(name));\n     }\n \n     @Override\n@@ -155,11 +158,9 @@ public NodeType getNodeType(String name) throws RepositoryException {\n     public NodeTypeIterator getAllNodeTypes() throws RepositoryException {\n         List<NodeType> list = Lists.newArrayList();\n         Tree types = getTypes();\n-        if (types != null) {\n-            NamePathMapper mapper = getNamePathMapper();\n-            for (Tree type : types.getChildren()) {\n-                list.add(new NodeTypeImpl(type, mapper));\n-            }\n+        NamePathMapper mapper = getNamePathMapper();\n+        for (Tree type : types.getChildren()) {\n+            list.add(new NodeTypeImpl(type, mapper));\n         }\n         return new NodeTypeIteratorAdapter(list);\n     }\n@@ -411,11 +412,9 @@ public PropertyDefinition getDefinition(@NotNull Tree parent, @NotNull PropertyS\n     @NotNull\n     NodeTypeImpl internalGetNodeType(@NotNull String oakName) throws NoSuchNodeTypeException {\n         Tree types = getTypes();\n-        if (types != null) {\n-            Tree type = types.getChild(oakName);\n-            if (type.exists()) {\n-                return new NodeTypeImpl(type, getNamePathMapper());\n-            }\n+        Tree type = types.getChild(oakName);\n+        if (type.exists()) {\n+            return new NodeTypeImpl(type, getNamePathMapper());\n         }\n         throw new NoSuchNodeTypeException(getNamePathMapper().getJcrName(oakName));\n     }",
                "changes": 29
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistry.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistry.java",
                "deletions": 0,
                "sha": "d7afc68120bdeb4813bc3f8136e4ee2c3083d918",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistry.java",
                "patch": "@@ -51,6 +51,7 @@\n \n     private NodeTypeRegistry(final Root root) {\n         this.ntMgr =  new ReadWriteNodeTypeManager() {\n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return root.getTree(NODE_TYPES_PATH);",
                "changes": 1
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistryTest.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistryTest.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistryTest.java",
                "deletions": 0,
                "sha": "fff81a9d937bdb4bb3c40a44083ed00bca45234e",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/test/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistryTest.java",
                "patch": "@@ -182,12 +182,14 @@ public void registerNodeType() throws Exception {\n         registerNodeType(root, \"oak6440-1.cnd\");\n         NodeTypeManager readOnlyNtMgr = new ReadOnlyNodeTypeManager() {\n             private Root r = session.getLatestRoot();\n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return r.getTree(NODE_TYPES_PATH);\n             }\n         };\n         NodeTypeManager ntMgr = new ReadWriteNodeTypeManager() {\n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return root.getTree(NODE_TYPES_PATH);\n@@ -234,6 +236,7 @@ protected Root getWriteRoot() {\n     @Test\n     public void reRegisterNtResource() throws Exception {\n         NodeTypeManager ntMgr = new ReadWriteNodeTypeManager() {\n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return root.getTree(NODE_TYPES_PATH);",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/JcrUUIDTest.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/JcrUUIDTest.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/JcrUUIDTest.java",
                "deletions": 0,
                "sha": "830c07dd599ef4b0e157e966c03937d5422cd9b7",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/evaluation/JcrUUIDTest.java",
                "patch": "@@ -57,6 +57,7 @@ protected Root getWriteRoot() {\n                 return root;\n             }\n \n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return root.getTree(NODE_TYPES_PATH);",
                "changes": 1
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/WorkspaceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/WorkspaceImpl.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/WorkspaceImpl.java",
                "deletions": 0,
                "sha": "e6b70950a16238306fdb88183cab8c106062c248",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/WorkspaceImpl.java",
                "patch": "@@ -81,6 +81,7 @@ protected void refresh() throws RepositoryException {\n                 getSession().refresh(true);\n             }\n \n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n                 return sessionDelegate.getRoot().getTree(NODE_TYPES_PATH);",
                "changes": 1
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinition.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinition.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinition.java",
                "deletions": 4,
                "sha": "01d0430a6ba7da8ef9a8997d35a83dc1b81cb0cd",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinition.java",
                "patch": "@@ -42,6 +42,7 @@\n import com.google.common.primitives.Ints;\n import org.apache.jackrabbit.JcrConstants;\n import org.apache.jackrabbit.oak.api.PropertyState;\n+import org.apache.jackrabbit.oak.api.Root;\n import org.apache.jackrabbit.oak.api.Tree;\n import org.apache.jackrabbit.oak.api.Type;\n import org.apache.jackrabbit.oak.commons.PathUtils;\n@@ -51,7 +52,7 @@\n import org.apache.jackrabbit.oak.plugins.index.search.util.FunctionIndexProcessor;\n import org.apache.jackrabbit.oak.plugins.memory.PropertyStates;\n import org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager;\n-import org.apache.jackrabbit.oak.plugins.tree.TreeUtil;\n+import org.apache.jackrabbit.oak.plugins.tree.factories.RootFactory;\n import org.apache.jackrabbit.oak.plugins.tree.factories.TreeFactory;\n import org.apache.jackrabbit.oak.spi.filter.PathFilter;\n import org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry;\n@@ -774,7 +775,7 @@ public IndexingRule getApplicableIndexingRule(NodeState state) {\n         }\n \n         Map<String, List<IndexingRule>> nt2rules = newHashMap();\n-        ReadOnlyNodeTypeManager ntReg = createNodeTypeManager(TreeFactory.createReadOnlyTree(root));\n+        ReadOnlyNodeTypeManager ntReg = createNodeTypeManager(RootFactory.createReadOnlyRoot(root));\n \n         //Use Tree API to read ordered child nodes\n         Tree ruleTree = TreeFactory.createReadOnlyTree(indexRules);\n@@ -1593,11 +1594,12 @@ private NodeState getTikaConfigNode() {\n         }\n     }\n \n-    private static ReadOnlyNodeTypeManager createNodeTypeManager(final Tree root) {\n+    private static ReadOnlyNodeTypeManager createNodeTypeManager(final Root root) {\n         return new ReadOnlyNodeTypeManager() {\n+            @NotNull\n             @Override\n             protected Tree getTypes() {\n-                return TreeUtil.getTree(root,NODE_TYPES_PATH);\n+                return root.getTree(NODE_TYPES_PATH);\n             }\n \n             @NotNull",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java?ref=f878b3867093dbcc53760f2acadfa12dbf31801f",
                "filename": "oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java",
                "deletions": 0,
                "sha": "34e2ca87f4b0c1f908b2e34fe167aaae9e609fe2",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/f878b3867093dbcc53760f2acadfa12dbf31801f/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java",
                "patch": "@@ -451,6 +451,7 @@ public void copy(RepositoryInitializer initializer) throws RepositoryException {\n             } else {\n                 logger.info(\"Copying registered node types\");\n                 NodeTypeManager ntMgr = new ReadWriteNodeTypeManager() {\n+                    @NotNull\n                     @Override\n                     protected Tree getTypes() {\n                         return upgradeRoot.getTree(NODE_TYPES_PATH);",
                "changes": 1
            }
        ],
        "unit_tests": [
            "RepositoryUpgradeTest.java",
            "JcrUUIDTest.java",
            "CugConfigurationTest.java",
            "NodeTypeRegistryTest.java",
            "CugValidatorTest.java",
            "IndexDefinitionTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinitionTest.java",
        "buggy_files": [
            "oak-authorization-cug/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugConfiguration.java",
            "oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/WorkspaceImpl.java",
            "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/ReadOnlyNodeTypeManager.java",
            "oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java",
            "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/write/NodeTypeRegistry.java",
            "oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/nodetype/NodeTypeImpl.java",
            "oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/IndexDefinition.java"
        ],
        "fixed": true
    }
]