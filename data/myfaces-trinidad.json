{
    "myfaces-trinidad_3268dd9": {
        "bug_id": "myfaces-trinidad_3268dd9",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/3268dd98e78217a47a51c39009701eb18de773c6",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/3268dd98e78217a47a51c39009701eb18de773c6/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java?ref=3268dd98e78217a47a51c39009701eb18de773c6",
                "deletions": 1,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "patch": "@@ -281,7 +281,7 @@ public void validate(\n   {\n     if ((context == null) || (component == null))\n     {\n-      throw new NullPointerException();\n+      throw new NullPointerException(\"FacesContext or Component is null\");\n     }\n \n     if (value != null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/3268dd98e78217a47a51c39009701eb18de773c6/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "sha": "2cd1394d16695d0b81986b12b0d06ad97293226b",
                "status": "modified"
            }
        ],
        "message": "npe constructor...",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/68986a9f530ed1b6a27cd31d95c493be5c0f98f5",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "DateTimeRangeValidatorTest.java"
        ]
    },
    "myfaces-trinidad_34f0778": {
        "bug_id": "myfaces-trinidad_34f0778",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/34f0778b5092ead65122826e100dde56e989c9ef",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java?ref=34f0778b5092ead65122826e100dde56e989c9ef",
                "deletions": 3,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "patch": "@@ -18,6 +18,7 @@\n import java.util.List;\n \n import javax.faces.context.FacesContext;\n+import javax.faces.el.PropertyResolver;\n \n /**\n  * Creates a TreeModel from a List of beans.\n@@ -312,9 +313,8 @@ protected Object getChildData(Object parentData)\n     if (prop == null)\n       return null;\n     \n-    FacesContext context = FacesContext.getCurrentInstance();\n-    return \n-      context.getApplication().getPropertyResolver().getValue(parentData, prop);\n+    PropertyResolver resolver = SortableModel.__getPropertyResolver();\n+    return resolver.getValue(parentData, prop);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "sha": "7c4aaee27cfa15d35d8cf2c0abff8bc6c454242a",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java?ref=34f0778b5092ead65122826e100dde56e989c9ef",
                "deletions": 4,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "patch": "@@ -19,6 +19,8 @@\n import java.util.Comparator;\n import java.util.List;\n \n+import javax.faces.FactoryFinder;\n+import javax.faces.application.ApplicationFactory;\n import javax.faces.context.FacesContext;\n import javax.faces.el.PropertyResolver;\n import javax.faces.model.DataModel;\n@@ -145,8 +147,7 @@ public boolean isSortable(String property)\n       Object data = _model.getRowData();\n       try\n       {\n-        FacesContext context = FacesContext.getCurrentInstance();\n-        PropertyResolver resolver = context.getApplication().getPropertyResolver();\n+        PropertyResolver resolver = __getPropertyResolver();\n         Object propertyValue = resolver.getValue(data, property);\n \n         // when the value is null, we don't know if we can sort it.\n@@ -246,9 +247,8 @@ private void _sort(String property, boolean isAscending)\n     // Make sure the model has that row 0! (It could be empty.)\n     if (_model.isRowAvailable())\n     {\n-      FacesContext context = FacesContext.getCurrentInstance();\n       Comparator<Integer> comp =\n-        new Comp(context. getApplication().getPropertyResolver(), property);\n+        new Comp(__getPropertyResolver(), property);\n       if (!isAscending)\n         comp = new Inverter<Integer>(comp);\n \n@@ -388,6 +388,22 @@ public int compare(T o1, T o2)\n     private final Comparator<T> _comp;\n   }\n \n+  static PropertyResolver __getPropertyResolver()\n+  {\n+    // First try the FacesContext, which is a faster way to\n+    // get the PropertyResolver (and the 99.9% scenario)\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    if (context != null)\n+      return context.getApplication().getPropertyResolver();\n+    \n+    // If that fails, then we're likely outside of the JSF lifecycle.\n+    // Look to the ApplicationFactory.\n+    ApplicationFactory factory = (ApplicationFactory)\n+      FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY);\n+    return factory.getApplication().getPropertyResolver();\n+    \n+  }\n+\n   private SortCriterion _sortCriterion = null;\n \n   private DataModel _model = null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "sha": "73865fed0b07d8a338e77738cd0feb5f46f5cc4e",
                "status": "modified"
            }
        ],
        "message": "ADFFACES-342: ChildPropertyTreeModel and SortableModel will throw NPE if used outside of the JSF lifecycle",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/7a3e2ae43a5bc14660982e6507141c8703cbda94",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "ChildPropertyTreeModelTest.java",
            "SortableModelTest.java"
        ]
    },
    "myfaces-trinidad_acd93fb": {
        "bug_id": "myfaces-trinidad_acd93fb",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/acd93fb5c5cb6f917c07b625f5b2208938a1750f",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java",
                "patch": "@@ -150,7 +150,7 @@\n    * @todo is this iterator read-only or read-write?\n    * @exception IllegalArgumentException if the key is not a list key.\n    */\n-  public Iterator<Object> entries(PropertyKey listKey);\n+  public Iterator<? extends Object> entries(PropertyKey listKey);\n \n   /**\n    * Copies all properties, bindings, and list entries from",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java",
                "sha": "d59da3bdcd169ade2403774ca53ae3ce053813ab",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java",
                "patch": "@@ -253,7 +253,7 @@ public void addAll(FacesBean from)\n         }\n         else\n         {\n-          Iterator<Object> entries = from.entries(fromKey);\n+          Iterator<? extends Object> entries = from.entries(fromKey);\n           while (entries.hasNext())\n             addEntry(toKey, entries.next());\n         }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java",
                "sha": "a3538ab32be1724c14a0ca81a9a49f9691cd10b1",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 11,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java",
                "patch": "@@ -560,6 +560,7 @@ public Iterator getFacetsAndChildren()\n \n   // ------------------------------------------- Event processing methods\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public void broadcast(FacesEvent event)\n     throws AbortProcessingException\n@@ -578,10 +579,12 @@ public void broadcast(FacesEvent event)\n         adfContext.partialUpdateNotify(component);\n     }\n \n-    Iterator<Object> iter = getFacesBean().entries(_LISTENERS_KEY);\n+    Iterator<FacesListener> iter = \n+      (Iterator<FacesListener>)getFacesBean().entries(_LISTENERS_KEY);\n+    \n     while (iter.hasNext())\n     {\n-      FacesListener listener = (FacesListener) iter.next();\n+      FacesListener listener = iter.next();\n       if (event.isAppropriateListener(listener))\n       {\n         event.processListener(listener);\n@@ -606,8 +609,8 @@ public void decode(FacesContext context)\n       throw new NullPointerException();\n \n     // Find all the partialTriggers and save on the context\n-    // FIXME: -= Simon Lessard =-\n-    //        JSF 1.2 specify <String, Object>\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>\n     Map<Object, Object> attrs = getAttributes();\n     Object triggers = attrs.get(\"partialTriggers\");\n     if (triggers instanceof String[])\n@@ -809,8 +812,8 @@ public void processRestoreState(FacesContext context, Object state)\n   @Override\n   public void markInitialState()\n   {\n-    // FIXME: -= Simon Lessard =-\n-    //        Set to true, but never read\n+    // -= Simon Lessard =-\n+    // FIXME: Set to true, but never read\n     //_initialStateMarked = true;\n     getFacesBean().markInitialState();\n   }\n@@ -1272,15 +1275,16 @@ private void _init(\n     if (oldBean != null)\n       _facesBean.addAll(oldBean);\n \n-    // FIXME: -= Simon Lessard =- \n-    //        JSF 1.2 specify <String, Object>, but ValueMap\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>, but ValueMap\n     //        accept PropertyKey as key as well\n     _attributes = new ValueMap(_facesBean);\n   }\n \n   private FacesBean                _facesBean;\n   private List<UIComponent>        _children;\n-  // FIXME: -= Simon Lessard =- JSF 1.2 specify <String, Object>\n+  // -= Simon Lessard =-\n+  // FIXME: JSF 1.2 specify <String, Object>\n   private Map<Object, Object>      _attributes;\n   private Map<String, UIComponent> _facets;\n   private UIComponent              _parent;\n@@ -1291,8 +1295,8 @@ private void _init(\n   private transient LifecycleRenderer _cachedLifecycleRenderer =\n                                                 _UNDEFINED_LIFECYCLE_RENDERER;\n   \n-  // FIXME: -= Simon Lessard =- \n-  //        _initialStateMarked is never read \n+  // -= Simon Lessard =-\n+  // FIXME: _initialStateMarked is never read \n   //        So commented out, is that ok? If so, this attribute should be deleted\n   //private transient boolean _initialStateMarked;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java",
                "sha": "d7daea717c1bb3f10ece50ff18e2af4b0515e2ff",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java",
                "patch": "@@ -163,5 +163,5 @@\n    * <br><i>accessKeys</i>- returns a Boolean value signifying whether or not the Agent\n    * supports accessKeys.\n    */\n-  public Map<String, Object> getCapabilities();\n+  public Map<Object, Object> getCapabilities();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java",
                "sha": "28a366e61542e8a4dd08f8397a46b01cd86082af",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java",
                "patch": "@@ -119,10 +119,10 @@ public void setCurrentLaunchSource(UIComponent component)\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java",
                "sha": "81ac1a8cf160373341718ae0805fd32d0d72fa29",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java",
                "patch": "@@ -16,7 +16,6 @@\n package org.apache.myfaces.trinidad.context;\n \n import java.awt.Color;\n-import java.net.URL;\n import java.util.List;\n import java.util.Map;\n import java.util.TimeZone;\n@@ -100,7 +99,7 @@ protected RequestContext()\n   /**\n    * @deprecated use getPageFlowScope()\n    */\n-  @SuppressWarnings(\"dep-ann\")\n+  @Deprecated\n   final public Map<String, Object> getProcessScope()\n   {\n     return getPageFlowScope();\n@@ -159,10 +158,10 @@ public abstract void returnFromDialog(\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n   //\n   // General ADF Faces\n@@ -286,13 +285,13 @@ public abstract void launchDialog(\n    * Returns a Map that will accept topic names as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpTopic();\n+  public abstract Map<String, Object> getHelpTopic();\n \n   /**\n    * Returns a Map that will accept help system properties as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpSystem();\n+  public abstract Map<String, Object> getHelpSystem();\n \n   //\n   // Date formatting\n@@ -368,7 +367,7 @@ public abstract void addPartialTriggerListeners(UIComponent listener,\n    * second the first parameter into the message. (The formatter Map supports\n    * only a single parameter at this time.)\n    */\n-  public abstract Map<Object, String> getFormatter();\n+  public abstract Map<Object, Map<Object,String>> getFormatter();\n \n   /**\n    * Returns the Agent information for the current context",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java",
                "sha": "988f67e5dc3012f7c0846d8415dd64b165b358ad",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java",
                "patch": "@@ -52,8 +52,8 @@ public LaunchEvent(UIComponent source,\n   {\n     super(source);\n     _viewRoot = viewRoot;\n-    _dialogParameters = new HashMap<Object, Object>();\n-    _windowProperties  = new HashMap<Object, Object>();\n+    _dialogParameters = new HashMap<String, Object>();\n+    _windowProperties  = new HashMap<String, Object>();\n \n     // LaunchEvents should always be queued for the current phase\n     setPhaseId(PhaseId.ANY_PHASE);\n@@ -84,7 +84,7 @@ public UIViewRoot getViewRoot()\n    * A map of parameters to pass to the dialog.  All entries\n    * in the map will be added to the pageFlowScope.\n    */\n-  public Map<Object, Object> getDialogParameters()\n+  public Map<String, Object> getDialogParameters()\n   {\n     return _dialogParameters;\n   }\n@@ -96,7 +96,7 @@ public UIViewRoot getViewRoot()\n    * The map will be ignored if a dialog is not used.\n    * =-=AEW getWindowProperties or getDialogProperties or ??\n    */\n-  public Map<Object, Object> getWindowProperties()\n+  public Map<String, Object> getWindowProperties()\n   {\n     return _windowProperties;\n   }\n@@ -176,6 +176,6 @@ public String toString()\n   }\n \n   private UIViewRoot          _viewRoot;\n-  private Map<Object, Object> _dialogParameters;\n-  private Map<Object, Object> _windowProperties;\n+  private Map<String, Object> _dialogParameters;\n+  private Map<String, Object> _windowProperties;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java",
                "sha": "655deeb7fc8aa7d458d6538e34f77a2e6d3b7804",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java",
                "patch": "@@ -339,11 +339,13 @@ public static Object getMaxVisitedRowKey(\n \n       //TODO - if I change this to use pageFlowScope it doesn't work.\n       // figure out why.\n-      Map sessionMap  = externalContext.getSessionMap();\n+      // FIXME: -= Simon Lessard\n+      //        session map is <String, Object> as of JSF 1.2\n+      Map<Object,Object> sessionMap  = externalContext.getSessionMap();\n \n-      Map maxPathMap = (Map)sessionMap.get(maxPathKey);\n+      Map<Object,Object> maxPathMap = (Map<Object,Object>)sessionMap.get(maxPathKey);\n       if (maxPathMap == null)\n-        maxPathMap = new HashMap();\n+        maxPathMap = new HashMap<Object,Object>();\n \n       Object focusRowKey = model.getFocusRowKey();\n       Object parentRowKey = model.getContainerRowKey(focusRowKey);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java",
                "sha": "c50bfd8f45b501a88b74adfb0ced04daee9c3f0f",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java",
                "patch": "@@ -33,6 +33,10 @@\n  * compute. Use the {@link #getSize()} method on this class for an inexpensive size.\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// TODO: Since RowKeySet is used by so many components internally,\n+//       I believe we shouldn't parametrize it. I would rather see \n+//       public abstract class RowKeySet extends AbstractSet<Object> implements Cloneable\n public abstract class RowKeySet<E> extends AbstractSet<E> implements Cloneable\n {\n   public RowKeySet()",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java",
                "sha": "30f22fb3d293bb0164a26dfa9a9ba1f5733a66ae",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java",
                "patch": "@@ -67,12 +67,12 @@\n    *   default dialog functionality.\n    */\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map<?, ?>    processParameters,\n-    boolean      useWindow,\n-    Map<?, ?>    windowProperties);\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties);\n \n   /**\n    * Called to return from a dialog.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java",
                "sha": "8a906c06a934b6c0f25ac1913f4aee44ed7a4742",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java",
                "patch": "@@ -52,6 +52,10 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/util/ArrayMap.java#0 $) $Date: 10-nov-2005.19:08:36 $\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// FIXME: Using a single array for both the key and the value leads to many \n+//        problems, especially with type safety. Using parallel arrays or \n+//        a sigle array containing nodes would be a much cleaner/safer idea.\n public class ArrayMap<K,V> extends AbstractMap<K,V> implements Cloneable\n {\n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java",
                "sha": "626e3d7336eacaa500b5864be31ad5c19e9b1973",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java",
                "patch": "@@ -42,11 +42,12 @@ public Agent createAgent(String userAgent, String accept)\n     return agent;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public Agent createAgent(FacesContext facesContext)\n   {\n     AgentImpl agent = new AgentImpl();\n \n-    Map headerMap;\n+    Map<String, String> headerMap;\n     if (facesContext != null)\n     {\n       headerMap = facesContext.getExternalContext().getRequestHeaderMap();\n@@ -63,22 +64,25 @@ public Agent createAgent(FacesContext facesContext)\n   }\n \n \n-  private void _populateAgentImpl(Map headerMap, AgentImpl agent)\n+  private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n   {\n-    String userAgent = (String) headerMap.get(\"User-Agent\");\n+    String userAgent = headerMap.get(\"User-Agent\");\n \n     if ((userAgent != null) && userAgent.startsWith(\"PTG\"))\n     {\n       _populateIaswAgentImpl(userAgent,\n-                             (String) headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n+                             headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n       return;\n     }\n \n     // determine the agent from the headers\n-    _populateAgentImpl(userAgent, (String) headerMap.get(\"Accept\"),agent);\n+    _populateAgentImpl(userAgent, headerMap.get(\"Accept\"), agent);\n   }\n \n-  private void _populateAgentImpl(String userAgent, String accept,AgentImpl agent)\n+  private void _populateAgentImpl(\n+      String userAgent, \n+      String accept, \n+      AgentImpl agent)\n   {\n     /* for testing PocketPC */\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java",
                "sha": "25eb69c1312ab158ce56efeb8534767c1e0fb59f",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java",
                "patch": "@@ -61,37 +61,44 @@ public AgentImpl(boolean nullAgentEntry)\n     _entry = _getAgentEntry(userAgent, accept);\n   }\n   */\n+  @Override\n   public Object getType()\n   {\n     return _entry._type;\n   }\n \n+  @Override\n   public String getAgentName()\n   {\n     return _entry._agent;\n   }\n \n+  @Override\n   public String getAgentVersion()\n   {\n     return _entry._agentVersion;\n   }\n \n+  @Override\n   public String getPlatformName()\n   {\n     return _entry._platform;\n   }\n \n+  @Override\n   public String getPlatformVersion()\n   {\n     return _entry._platformVersion;\n   }\n \n+  @Override\n   public String getHardwareMakeModel()\n   {\n     return _entry._makeModel;\n   }\n \n-  public Map getCapabilities()\n+  @Override\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _requestCapabilities;\n   }\n@@ -148,12 +155,12 @@ void __addRequestCapability(CapabilityKey key,Object value)\n   {\n      if (_requestCapabilities == null)\n      {\n-       _requestCapabilities = new HashMap();\n+       _requestCapabilities = new HashMap<Object, Object>();\n      }\n     _requestCapabilities.put(key,value);\n   }\n \n-  private HashMap _requestCapabilities;\n+  private HashMap<Object, Object> _requestCapabilities;\n   private AgentEntry _entry;\n   static private final AgentEntry _NULL_AGENT_ENTRY = new AgentEntry();\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentImpl.class);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java",
                "sha": "e1a79b04dc1467444b22002aca7122f6ad7cb575",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java",
                "patch": "@@ -39,7 +39,11 @@\n    * @param platform\n    * @return\n    */\n-  public static TrinidadAgent getAgent(int type, int browser, String agentVersion, int platform)\n+  public static TrinidadAgent getAgent(\n+      int type, \n+      int browser, \n+      String agentVersion, \n+      int platform)\n   {\n     final int fType = type;\n     final int fBrowser = browser;\n@@ -49,18 +53,23 @@ public static TrinidadAgent getAgent(int type, int browser, String agentVersion,\n     Agent agent =\n             new DefaultAgent ()\n             {\n+              @Override\n               public Object getType() {\n                 return AgentNameUtil.getAgentName(fType);\n               }\n \n+              @Override\n               public String getAgentName() {\n                 return AgentNameUtil.getAgentName(fBrowser);\n               }\n \n+              @Override\n               public String getAgentVersion() {\n                 return fAgentVersion;\n               }\n \n+              // FIXME: This method is never used locally, should it be removed?\n+              @SuppressWarnings(\"unused\")\n               public String getPlatFormName() {\n                 return AgentNameUtil.getPlatformName(fPlatform);\n               }\n@@ -110,7 +119,9 @@ public static TrinidadAgent getAgent(FacesContext context)\n   //=-=AEW: I don't believe this is a repository thing:  the concept\n   //of output mode is entirely renderkit specific, and the tweaks\n   //that are made to the capabilities are also renderkit specific.\n-  public static TrinidadAgent mergeCapabilities(TrinidadAgent agent, Map capabilities)\n+  public static TrinidadAgent mergeCapabilities(\n+      TrinidadAgent agent, \n+      Map<Object, Object> capabilities)\n   {\n     if (!(agent instanceof TrinidadAgentImpl))\n       throw new IllegalArgumentException(\"mergeCapabilities() may only be \" +",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java",
                "sha": "8905122d8bf3873b16991f373327632af4380a45",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java",
                "patch": "@@ -54,10 +54,10 @@ static public CapabilitiesProvider getCapabilitiesProvider(URL capUrl)\n     //getCapabilitiesProvider\n     //--Are we really going to support multiple files??\n     CapabilitiesProvider provider = null;\n-    Map providerMap = _getProviderMap();\n+    Map<URL, CapabilitiesProvider> providerMap = _getProviderMap();\n     synchronized (providerMap)\n     {\n-      provider = (CapabilitiesProvider) providerMap.get(capUrl);\n+      provider = providerMap.get(capUrl);\n       if (provider == null)\n       {\n         provider = new CapabilitiesProvider(capUrl);\n@@ -83,7 +83,7 @@ public CapabilityMap getCapabilities(Agent agent)\n     synchronized (this) {\n       try\n       {\n-        caps = (CapabilityMap) _sCache.get(key);\n+        caps = _sCache.get(key);\n \n         //if not in cache, acquire\n         if (caps == null)\n@@ -134,7 +134,7 @@ private CapabilitiesDocument _getCapabilityDocument()\n     return _document;\n   }\n \n-  static private Map _getProviderMap()\n+  static private Map<URL, CapabilitiesProvider> _getProviderMap()\n   {\n     return _providerMap;\n   }\n@@ -175,11 +175,13 @@ static private Map _getProviderMap()\n \n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return _hashCode;\n     }\n \n+    @Override\n     public boolean equals(Object obj)\n     {\n       if (obj == this)\n@@ -216,10 +218,12 @@ public boolean equals(Object obj)\n \n   //@todo: The caches are global. Should we store in SC?\n   //@todo: Use an LRU, to limit number of entries\n-  static private HashMap _sCache = new HashMap(64);\n+  static private HashMap<CacheKey, CapabilityMap> _sCache = \n+    new HashMap<CacheKey, CapabilityMap>(64);\n \n \n-  static private Map _providerMap = new HashMap(4);\n+  static private Map<URL, CapabilitiesProvider> _providerMap = \n+    new HashMap<URL, CapabilitiesProvider>(4);\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesProvider.class);\n \n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java",
                "sha": "32e675269758e71940e7e93ff2301bdbf72cd5eb",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java",
                "patch": "@@ -106,11 +106,13 @@ public static CapabilityKey getKeyAt(int index)\n     return null;\n   }\n \n+  @Override\n   public boolean equals(Object obj)\n   {\n     return this == obj;\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _capIndex;\n@@ -126,6 +128,7 @@ synchronized private static Object _createKey(String capabilityName)\n     return key;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _capName;\n@@ -136,7 +139,8 @@ public String toString()\n \n   static final private int DEFAULT_SIZE = 50;\n \n-  static private HashMap _capKeyNames = new HashMap();\n+  static private HashMap<String, CapabilityKey> _capKeyNames = \n+    new HashMap<String, CapabilityKey>();\n   static private CapabilityKey[] _keys = new CapabilityKey[DEFAULT_SIZE];\n   private static int _count = 0;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java",
                "sha": "abd7e08a7f427cba35908887d85e8f4846853ecc",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 11,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java",
                "patch": "@@ -30,7 +30,10 @@\n  * -- Also this impl assumes that the number of keys **will** change (increase) after init.\n  *\n  */\n-public class CapabilityMap extends AbstractMap implements Cloneable\n+// FIXME -= Simon Lessard =-\n+//       This is another map that can accept both String and another type as keys.\n+//       Shouldn't we force type safety with a single key type ?\n+public class CapabilityMap extends AbstractMap<Object, Object> implements Cloneable\n {\n \n   private CapabilityMap()\n@@ -99,7 +102,7 @@ public Object getCapability(CapabilityKey capKey)\n    * @param capabilities\n    * @return  returns a new capability map that merges key/values of the provided map\n    */\n-  public CapabilityMap merge(Map capabilities)\n+  public CapabilityMap merge(Map<Object, Object> capabilities)\n   {\n     if ((capabilities == null) || (capabilities.isEmpty()))\n       return this;\n@@ -155,6 +158,7 @@ public CapabilityMap merge(Object[] capabilities)\n    * @param key\n    * @return\n    */\n+  @Override\n   public Object get(Object key)\n   {\n     if (key == null)\n@@ -171,6 +175,7 @@ public Object get(Object key)\n    * @param value\n    * @return\n    */\n+  @Override\n   public Object put(Object key, Object value)\n   {\n     return new UnsupportedOperationException();\n@@ -179,20 +184,22 @@ public Object put(Object key, Object value)\n   /**\n    * @return\n    */\n-  public Set entrySet()\n+  @Override\n+  public Set<Map.Entry<Object, Object>> entrySet()\n   {\n     if (_entrySet == null)\n       _createEntrySet();\n \n     return _entrySet;\n   }\n \n+  @Override\n   public Object clone()\n   {\n     try\n     {\n       CapabilityMap that = (CapabilityMap) super.clone();\n-      that._indexedValues = (Object[]) _indexedValues.clone();\n+      that._indexedValues = _indexedValues.clone();\n       that._entrySet = null;\n       return that;\n     }\n@@ -220,8 +227,9 @@ synchronized private void _createEntrySet()\n   {\n     if (_entrySet == null)\n     {\n-      HashSet hs = new HashSet();\n-      Iterator iter = new KeyIterator();\n+      HashSet<Map.Entry<Object, Object>> hs = \n+        new HashSet<Map.Entry<Object, Object>>();\n+      Iterator<Object> iter = new KeyIterator();\n       while (iter.hasNext())\n       {\n         CapabilityKey capKey = (CapabilityKey) iter.next();\n@@ -241,9 +249,9 @@ private int _max(int value1, int value2)\n   }\n \n \n-  private Object[] _getMapAsArray(Map capabilities)\n+  private Object[] _getMapAsArray(Map<Object, Object> capabilities)\n   {\n-    Iterator iter = capabilities.keySet().iterator();\n+    Iterator<Object> iter = capabilities.keySet().iterator();\n     Object[] caps = new Object[capabilities.size() * 2];\n     int i = 0;\n     while (iter.hasNext())\n@@ -260,7 +268,7 @@ private int _max(int value1, int value2)\n \n \n   //KeyIterator\n-  private class KeyIterator implements Iterator\n+  private class KeyIterator implements Iterator<Object>\n   {\n     public KeyIterator()\n     {\n@@ -315,7 +323,7 @@ private void _setNext()\n \n \n   //Map Entry\n-  private class CEntry implements Entry\n+  private class CEntry implements Entry<Object, Object>\n   {\n \n     private Object key;\n@@ -327,6 +335,7 @@ private void _setNext()\n       this.value = value;\n     }\n \n+    @Override\n     public boolean equals(Object o)\n     {\n       if (this == o)\n@@ -355,6 +364,7 @@ public Object setValue(Object newValue)\n       throw new UnsupportedOperationException();\n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return key.hashCode() ^ (value == null ? 0 : value.hashCode());\n@@ -363,5 +373,5 @@ public int hashCode()\n \n \n   private Object[] _indexedValues;\n-  private Set _entrySet;\n+  private Set<Map.Entry<Object, Object>> _entrySet;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java",
                "sha": "961386e34937c68f805f0b3befa66031f178b842",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java",
                "patch": "@@ -72,5 +72,5 @@ synchronized static private Object _getValue(Object value)\n     return value;\n   }\n   \n-  private static HashMap _values = new HashMap(32);\n+  private static HashMap<Object, Object> _values = new HashMap<Object, Object>(32);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java",
                "sha": "3b0f429d208a96015a1e7cb9d11b6ec24995cbeb",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java",
                "patch": "@@ -91,7 +91,7 @@ public String getHardwareMakeModel()\n    *\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities ()\n+  public Map<Object, Object> getCapabilities ()\n   {\n     return null;\n   }  ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java",
                "sha": "263d44211d835f29ed09aa0aa8f7680558d25ea0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java",
                "patch": "@@ -267,6 +267,7 @@\n    * based on it (like Netscape 6).\n    * @deprecated since 2.2.0. Use {@link #APPLICATION_GECKO}.\n    */\n+  @Deprecated\n   static public final int APPLICATION_MOZILLA   = APPLICATION_GECKO;\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java",
                "sha": "cfb2ed7e8f109332a8074327b7b933984aa4ffaf",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java",
                "patch": "@@ -121,7 +121,7 @@ public String getPlatformVersion()\n   /**\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities()\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _capMap;\n   }\n@@ -154,6 +154,7 @@ public Object getCapability(CapabilityKey key)\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try\n@@ -170,6 +171,7 @@ public Object clone()\n   }\n \n \n+  @Override\n   public String toString()\n   {\n     StringBuffer buffer = new StringBuffer(\"Agent[\");\n@@ -231,7 +233,7 @@ private void _initialize(FacesContext context)\n       _major = _getMajorVersion(getAgentVersion());\n \n     _capMap = _getCapabilityMap(context);\n-    Map requestCaps = _delegate.getCapabilities();\n+    Map<Object, Object> requestCaps = _delegate.getCapabilities();\n     if (requestCaps != null)\n     {\n       _capMap = _capMap.merge(requestCaps);\n@@ -370,7 +372,7 @@ static private int _getMajorVersion(String source)\n     return (int) version;\n   }\n \n-  void __mergeCapabilities(Map capabilities)\n+  void __mergeCapabilities(Map<Object, Object> capabilities)\n   {\n     _capMap = _capMap.merge(capabilities);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java",
                "sha": "b1973c53276d041f10ee35986098ca86815528e9",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java",
                "patch": "@@ -35,6 +35,7 @@\n   {\n     _agents = agents;\n     _devices = devices;\n+    _includeNodeBySrcCaps = new HashMap<URL, Object>();\n     _defaultAgentCapabilities = _getDefaultAgentCapabilities(_agents);\n   }\n \n@@ -174,7 +175,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       CapabilitiesNode matchNode)\n   {\n     assert (matchNode != null);\n@@ -187,7 +188,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n     //check for circular dependecy\n     if (includedByRefs == null)\n-      includedByRefs = new ArrayList();\n+      includedByRefs = new ArrayList<String>();\n \n     if (matchNode.__getId() != null)\n     {\n@@ -240,7 +241,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n     assert (capNodes != null);\n     assert (dcNode != null);\n \n-    ArrayList includedByRefs = new ArrayList();\n+    ArrayList<String> includedByRefs = new ArrayList<String>();\n \n     //process node that includes by reference\n     IncludeNode[] refIncludes = dcNode.__getIncludesByRef();\n@@ -279,7 +280,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       String refId)\n   {\n     assert (capNodes != null);\n@@ -305,15 +306,15 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[] _getCapabilities(URL srcUrl)\n   {\n-    Object o = includeNodeBySrcCaps.get(srcUrl);\n+    Object o = _includeNodeBySrcCaps.get(srcUrl);\n     if (o != null)\n       return (Object[]) o;\n \n     Object[] caps = null;\n-    synchronized (includeNodeBySrcCaps)\n+    synchronized (_includeNodeBySrcCaps)\n     {\n       caps = CapabilityDataDocumentParser.parse(srcUrl);\n-      includeNodeBySrcCaps.put(srcUrl, caps);\n+      _includeNodeBySrcCaps.put(srcUrl, caps);\n     }\n \n     return caps;\n@@ -348,7 +349,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n   private CapabilitiesNode[] _agents;\n   private DeviceNode[] _devices;\n-  private HashMap includeNodeBySrcCaps = new HashMap();\n+  private HashMap<URL, Object> _includeNodeBySrcCaps;\n   private Object[][] _defaultAgentCapabilities;\n \n   static final CapabilitiesDocument EMPTY_DOCUMENT = new CapabilitiesDocument();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java",
                "sha": "4dd5d0b5bd10d9e36cba2714881a5ebcdf0491c3",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java",
                "patch": "@@ -43,7 +43,11 @@\n         implements XMLConstants\n {\n \n-  private CapabilitiesDocumentParser() {}\n+  private CapabilitiesDocumentParser()\n+  {\n+    _capabilitiesNodes = new ArrayList<CapabilitiesNode>();\n+    _deviceNodes = new ArrayList<DeviceNode>();\n+  }\n \n   static public CapabilitiesDocument createInstance (URL capUrl)\n   {\n@@ -95,6 +99,7 @@ static public CapabilitiesDocument createInstance (URL capUrl)\n   }\n \n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -115,6 +120,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -143,6 +149,7 @@ else if (ELEMENT_DEVICE.equals(localName))\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -153,13 +160,14 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_CAPABILITIES.equals(localName))\n-      _capabilitiesNodes.add(child);\n+      _capabilitiesNodes.add((CapabilitiesNode)child);\n \n     if (ELEMENT_DEVICE.equals(localName))\n-      _deviceNodes.add(child);\n+      _deviceNodes.add((DeviceNode)child);\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -170,23 +178,23 @@ public Object endElement (ParseContext context,\n     CapabilitiesNode[] agents = null;\n     if (_capabilitiesNodes.size() > 0)\n     {\n-      agents = (CapabilitiesNode[]) _capabilitiesNodes.toArray\n+      agents = _capabilitiesNodes.toArray\n               (new CapabilitiesNode[_capabilitiesNodes.size()]);\n     }\n \n     DeviceNode[] devices = null;\n     if (_deviceNodes.size() > 0)\n     {\n-      devices = (DeviceNode[]) _deviceNodes.toArray\n+      devices = _deviceNodes.toArray\n               (new DeviceNode[_deviceNodes.size()]);\n     }\n \n     CapabilitiesDocument document = new CapabilitiesDocument(agents, devices);\n     return document;\n   }\n \n-  private List _capabilitiesNodes = new ArrayList();\n-  private List _deviceNodes = new ArrayList();\n+  private List<CapabilitiesNode> _capabilitiesNodes;\n+  private List<DeviceNode> _deviceNodes;\n \n   static final String __BASE_URL = \"baseURL\";\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java",
                "sha": "4766723ec1342e4e1080ac1cc57d139f4bcb1925",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java",
                "patch": "@@ -33,7 +33,12 @@\n  */\n class CapabilitiesNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  CapabilitiesNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -84,6 +89,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -98,6 +104,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -108,29 +115,30 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_INCLUDE.equals(localName))\n-      _includeNodes.add(child);\n+      _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_agent == null))\n       return null;\n \n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n \n     return new CapabilitiesNode(_id, _isDefault, _agent,\n@@ -143,7 +151,7 @@ public Object endElement (ParseContext context,\n   private boolean _isDefault;\n   private NameVersion _agent;\n   private NameVersion _platform;\n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesNodeParser.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java",
                "sha": "b80dcae526de680ca0f6690913788c00ab8e8ef1",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java",
                "patch": "@@ -45,6 +45,7 @@\n \n   private CapabilityDataDocumentParser()\n   {\n+    _capList = new ArrayList<Object>();\n   }\n \n   static public Object[] parse (URL srcUrl)\n@@ -92,6 +93,7 @@ private CapabilityDataDocumentParser()\n     return new Object[0];\n   }\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -105,6 +107,7 @@ public void startElement (ParseContext context,\n     }\n   }\n \n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -144,6 +147,7 @@ public NodeParser startChildElement(\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -154,7 +158,7 @@ public Object endElement (ParseContext context,\n     return null;\n   }\n \n-  private List _capList = new ArrayList();\n+  private List<Object> _capList;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilityDataDocumentParser.class);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java",
                "sha": "638c645721354c99a373f20f3b0d966f8eb048ec",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java",
                "patch": "@@ -29,7 +29,12 @@\n  */\n class ComponentNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  ComponentNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -46,6 +51,7 @@ public void startElement (ParseContext context,\n \n   }\n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -60,6 +66,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -69,30 +76,31 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _includeNodes.add(child);\n+    _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n     return new DeviceComponentNode(_type, nodesWithRef, nodesWithSrc);    \n   }\n \n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n   private String _type;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java",
                "sha": "9e83a4e4c41bc57be95a6b890c3711c1e204af42",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java",
                "patch": "@@ -47,8 +47,12 @@ public DeviceNode(String id, NameVersion makeModel,\n     return _makeModel.match(makeModel, null);\n   }\n \n+  // -= Simon Lessard =-\n+  // FIXME: _id and _extendsId are never read locally\n+  @SuppressWarnings(\"unused\")\n   private String _id;\n   private NameVersion _makeModel;\n+  @SuppressWarnings(\"unused\")\n   private String _extendsId;\n   private DeviceComponentNode[] _componentNodes;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java",
                "sha": "fdaac152a64bba267775bfb9a45b53fcc0fa404b",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java",
                "patch": "@@ -31,6 +31,12 @@\n  */\n class DeviceNodeParser extends BaseNodeParser implements XMLConstants\n {\n+  DeviceNodeParser()\n+  {\n+    _componentNodes = new ArrayList<DeviceComponentNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -71,6 +77,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -85,6 +92,7 @@ public NodeParser startChildElement(ParseContext context,\n \n   }\n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -94,17 +102,18 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _componentNodes.add(child);\n+    _componentNodes.add((DeviceComponentNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_model == null))\n       return null;\n \n-    DeviceComponentNode[] cNodes = (DeviceComponentNode[])\n+    DeviceComponentNode[] cNodes = \n             _componentNodes.toArray(\n                     new DeviceComponentNode[_componentNodes.size()]);\n     return new DeviceNode(_id, _model, _extendsId, cNodes);\n@@ -114,7 +123,7 @@ public Object endElement (ParseContext context,\n   private String _id;\n   private NameVersion _model;\n   private String _extendsId;\n-  private List _componentNodes = new ArrayList();\n+  private List<DeviceComponentNode> _componentNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DeviceNodeParser.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java",
                "sha": "890d8f7b3d2191acea6731ca5483915a8e5e1fbe",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java",
                "patch": "@@ -30,6 +30,7 @@\n class IncludeNodeParser extends BaseNodeParser implements XMLConstants\n {\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -57,6 +58,7 @@ public void startElement (ParseContext context,\n     _refId = refId;\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java",
                "sha": "e766a1e84102d841fa434b5e2ef4db5e024f1a03",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 21,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java",
                "patch": "@@ -107,7 +107,7 @@ public double match(String name, VersionId version)\n     int i = 0;\n     char ch = data[i];\n \n-    ArrayList entries = new ArrayList(5);\n+    ArrayList<Object[]> entries = new ArrayList<Object[]>(5);\n     VersionEntry vEntry = null;\n     NameEntry head, curr;\n     head = curr = new NameEntry();\n@@ -173,7 +173,9 @@ public double match(String name, VersionId version)\n           }\n           else\n           {\n-            while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            while (!Character.isWhitespace(ch) && (ch != (char) 0x1000000))\n               ch = data[++i];\n           }\n \n@@ -207,7 +209,9 @@ public double match(String name, VersionId version)\n           i++;\n           break;\n         default:\n-          if ((!inQuote) && (Character.isSpace(ch)))\n+          // 2006-08-02: -= Simon Lessard =-\n+          //if ((!inQuote) && (Character.isSpace(ch)))\n+          if ((!inQuote) && (Character.isWhitespace(ch)))\n           {\n             if (start != i)\n             {\n@@ -228,7 +232,9 @@ public double match(String name, VersionId version)\n             }\n             //Skip space\n             ch = data[++i];\n-            while (Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (Character.isSpace(ch))\n+            while (Character.isWhitespace(ch))\n               ch = data[++i];\n             start = i;\n           }\n@@ -280,7 +286,9 @@ private VersionEntry _parseVersion(String value,\n           version = value.substring(0, i);\n           for (++i; i < length; i++)\n           {\n-            if (!Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //if (!Character.isSpace(ch))\n+            if (!Character.isWhitespace(ch))\n               throw new ParseException(\"Unexpected char.\", offset + i);\n           }\n           //if the version string was simpley \"*\" or \"+\"\n@@ -370,15 +378,15 @@ private double _matchVersion(VersionEntry entry,\n \n     if (entry._type == VersionEntry.STAR_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       int matchedParts = 0;\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n         matchedParts++;\n@@ -388,7 +396,7 @@ private double _matchVersion(VersionEntry entry,\n       //parts (sub versions), then it must be .0's\n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n \n@@ -405,16 +413,16 @@ private double _matchVersion(VersionEntry entry,\n     }\n     else if (entry._type == VersionEntry.PLUS_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n         try\n         {\n-          int v1 = Integer.parseInt((String) vIterator1.next());\n-          int v2 = Integer.parseInt((String) vIterator2.next());\n+          int v1 = Integer.parseInt(vIterator1.next());\n+          int v2 = Integer.parseInt(vIterator2.next());\n           if (v1 > v2)\n             return (VERSION_GE_MATCH * (entry._versionId.getVersion() / version.getVersion()));\n           else if (v1 < v2)\n@@ -432,7 +440,7 @@ else if (v1 < v2)\n       {\n         try\n         {\n-          if (Integer.parseInt((String) vIterator2.next()) != 0)\n+          if (Integer.parseInt(vIterator2.next()) != 0)\n             return NO_MATCH;\n         }\n         catch (NumberFormatException npe)\n@@ -446,27 +454,27 @@ else if (v1 < v2)\n     else\n     {\n       //exact match\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n       }\n \n       while (vIterator1.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator1.next()))\n+        if (!\"0\".equals(vIterator1.next()))\n           return NO_MATCH;\n       }\n \n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java",
                "sha": "bfc433175c0679b2e699461a0fa4ce634a61127a",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 5,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java",
                "patch": "@@ -32,6 +32,7 @@ public VersionId(String version)\n     _version = _parseVersion(version);\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _versionString;\n@@ -53,7 +54,7 @@ public double getVersion()\n         char currChar = _versionString.charAt(currIndex);\n         if ((currChar >= '0') && (currChar <= '9'))\n         {\n-          double addValue = (double) (currChar - '0');\n+          double addValue = (currChar - '0');\n           if (hasDecimal)\n           {\n             // handle digits to right of decimal\n@@ -88,7 +89,7 @@ public double getVersion()\n   }\n \n \n-  public Iterator iterator()\n+  public Iterator<String> iterator()\n   {\n     return new VIterator();\n   }\n@@ -112,7 +113,9 @@ private Entry _parseVersion(String value)\n     while (i < length + 1)\n     {\n       //Ignore spaces. TODO: This should happen only for start and end (trim).\n-      while (Character.isSpace(ch))\n+      // 2006-08-02: -= Simon Lessard =-\n+      //while (Character.isSpace(ch))\n+      while (Character.isWhitespace(ch))\n         ch = data[++i];\n \n       switch (ch)\n@@ -151,7 +154,7 @@ private Entry _parseVersion(String value)\n     Entry next;\n   }\n \n-  private class VIterator implements Iterator\n+  private class VIterator implements Iterator<String>\n   {\n     public VIterator()\n     {\n@@ -168,7 +171,7 @@ public boolean hasNext()\n       return (null != _current);\n     }\n \n-    public Object next()\n+    public String next()\n     {\n       String part = _current.text;\n       _current = _current.next;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java",
                "sha": "74ce4437978298c4ad53e8bb2d8d6806a808d649",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java",
                "patch": "@@ -29,6 +29,7 @@ public NavigationHandlerImpl(NavigationHandler delegate)\n     _dialogPrefix = null;\n   }\n \n+  @Override\n   public void handleNavigation(\n     FacesContext context,\n     String       fromAction,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java",
                "sha": "c0e298e70a85bbae4faab71b82e02bd1f4835f6f",
                "status": "modified"
            },
            {
                "additions": 56,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java",
                "changes": 86,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 30,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java",
                "patch": "@@ -169,6 +169,8 @@ static public UIViewRoot restoreViewRoot(\n     return root;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public SerializedView saveSerializedView(FacesContext context)\n   {\n     if (!isSavingStateInClient(context))\n@@ -183,8 +185,8 @@ public SerializedView saveSerializedView(FacesContext context)\n \n     // See if we're going to use the application view cache for\n     // this request\n-    Map applicationViewCache = null;\n-    Map perSessionApplicationViewCache = null;\n+    Map<String, Object> applicationViewCache = null;\n+    Map<String, Object> perSessionApplicationViewCache = null;\n     if (_useApplicationViewCache(context))\n     {\n       // OK, we are: so find the application cache and\n@@ -225,12 +227,14 @@ public SerializedView saveSerializedView(FacesContext context)\n         assert(cache != null);\n \n         // Store bits of the session as subkeys off of the session\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n         // Sadly, we can't save just a SerializedView, because we should\n         // save a serialized object, and SerializedView is a *non*-static\n         // inner class of StateManager\n+        // -= Simon Lessard =-\n+        // FIXME: pageState is never read\n         PageState pageState = new PageState(\n             structure,\n             state,\n@@ -278,12 +282,15 @@ public SerializedView saveSerializedView(FacesContext context)\n     return view;\n   }\n \n+  @Override\n   public void writeState(FacesContext context,\n                          SerializedView state) throws IOException\n   {\n     _delegate.writeState(context, state);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId,\n                                 String renderKitId)\n   {\n@@ -312,8 +319,8 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       // Load from the application cache\n       if (_APPLICATION_CACHE_TOKEN.equals(token))\n       {\n-        Map cache = _getApplicationViewCache(context);\n-        Map perSessionCache =\n+        Map<String, Object> cache = _getApplicationViewCache(context);\n+        Map<String, Object> perSessionCache =\n           _getPerSessionApplicationViewCache(context);\n \n         // Synchronize on the application-level cache.\n@@ -336,10 +343,10 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       }\n       else\n       {\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n-        viewState = (PageState) stateMap.get((String) token);\n+        viewState = (PageState) stateMap.get(token);\n \n         // Make sure that if the view state is present, the cache still\n         // has the token, and vice versa\n@@ -380,7 +387,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n         // newRoot.getChildren().addAll(root.getChildren());\n         // because \"root\"'s child List is being mutated as the List\n         // is traversed.\n-        List temp = new ArrayList(root.getChildCount());\n+        List<UIComponent> temp = new ArrayList<UIComponent>(root.getChildCount());\n         temp.addAll(root.getChildren());\n         newRoot.getChildren().addAll(temp);\n \n@@ -448,6 +455,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n     return null;\n   }\n \n+  @Override\n   public boolean isSavingStateInClient(FacesContext context)\n   {\n     return _delegate.isSavingStateInClient(context);\n@@ -457,22 +465,26 @@ public boolean isSavingStateInClient(FacesContext context)\n   // Protected APIs: we don't want\n   //\n \n+  @Override\n   protected Object getTreeStructureToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected Object getComponentStateToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected UIViewRoot restoreTreeStructure\n     (FacesContext context, String viewId, String renderKitId)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected void restoreComponentState\n     (FacesContext context, UIViewRoot viewRoot, String renderKitId)\n   {\n@@ -530,38 +542,41 @@ private int _getCacheSize(FacesContext context)\n   // @todo Map is a bad structure\n   // @todo a static size is bad\n   //\n-  static private Map _getApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getApplicationViewCache(FacesContext context)\n   {\n     synchronized (_APPLICATION_VIEW_CACHE_LOCK)\n     {\n-      Map appMap = context.getExternalContext().getApplicationMap();\n-      Map cache = (Map) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n+      Map<String, Object> cache = (Map<String, Object>) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n-        cache = new HashMap(128);\n+        cache = new HashMap<String, Object>(128);\n         appMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n \n       return cache;\n     }\n   }\n \n-  static private Map _getPerSessionApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getPerSessionApplicationViewCache(FacesContext context)\n   {\n     ExternalContext external = context.getExternalContext();\n     Object session = external.getSession(true);\n     assert(session != null);\n \n-    Map cache;\n+    Map<String, Object> cache;\n     // Synchronize on the session object to ensure that\n     // we don't ever create two different caches\n     synchronized (session)\n     {\n-      cache = (Map) external.getSessionMap().get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> sessionMap = external.getSessionMap();\n+      cache = (Map<String, Object>) sessionMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n         cache = _createPerSessionApplicationViewCache();\n-        external.getSessionMap().put(_APPLICATION_VIEW_CACHE_KEY, cache);\n+        sessionMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n     }\n \n@@ -572,9 +587,9 @@ static private Map _getPerSessionApplicationViewCache(FacesContext context)\n   // For the per-session mirror of the application view cache,\n   // use an LRU LinkedHashMap to store the latest 16 pages.\n   //\n-  static private Map _createPerSessionApplicationViewCache()\n+  static private Map<String, Object> _createPerSessionApplicationViewCache()\n   {\n-    return new LRUCache(_MAX_PER_SESSION_APPLICATION_SIZE);\n+    return new LRUCache<String, Object>(_MAX_PER_SESSION_APPLICATION_SIZE);\n   }\n \n   static private final int _MAX_PER_SESSION_APPLICATION_SIZE = 16;\n@@ -648,34 +663,43 @@ static private ResponseStateManager _getResponseStateManager(\n     return kit.getResponseStateManager();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _removeTransientComponents(\n     UIComponent root)\n   {\n-    List components = new ArrayList();\n+    List<UIComponent> components = new ArrayList<UIComponent>();\n     _gatherTransientComponents(root, components);\n-    Iterator iter = components.iterator();\n+    Iterator<UIComponent> iter = components.iterator();\n     while (iter.hasNext())\n     {\n-      UIComponent kid = (UIComponent) iter.next();\n+      UIComponent kid = iter.next();\n       UIComponent parent = kid.getParent();\n       // First, see if its a child\n       if (parent.getChildCount() > 0)\n       {\n-        List children = parent.getChildren();\n+        List<UIComponent> children = parent.getChildren();\n         if (children.remove(kid))\n         {\n           continue;\n         }\n       }\n \n       // Nope, guess it's a facet\n-      Iterator facetNames = parent.getFacets().keySet().iterator();\n-      while (facetNames.hasNext())\n+      // 2006-08-02: -= Simon Lessard\n+      //             Not 1.5 structure and inefficient loop\n+      //             values() is more efficient as you don't have \n+      //             to do a second lookup for the value.\n+      Map<String, UIComponent> facets = parent.getFacets();\n+      for(Iterator<UIComponent> facetIter = facets.values().iterator(); \n+          facetIter.hasNext();)\n       {\n-        String name = (String) facetNames.next();\n-        if (parent.getFacet(name) == kid)\n+        if(facetIter.next() == kid)\n         {\n-          parent.getFacets().remove(name);\n+          facetIter.remove();\n+          // FIXME: -= Simon Lessard\n+          //        Is that continue need to labeled to go all the way up to \n+          //        the first while? Currently it won't cause any problem, but \n+          //        it's a performance loss.\n           continue;\n         }\n       }\n@@ -686,13 +710,14 @@ static private void _removeTransientComponents(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _gatherTransientComponents(\n-    UIComponent component, List componentsToRemove)\n+    UIComponent component, List<UIComponent> componentsToRemove)\n   {\n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n     {\n-      UIComponent kid = (UIComponent) kids.next();\n+      UIComponent kid = kids.next();\n       // UIXComponentBase doesn't mind transient components\n       // in its saved state, so don't bother with this.\n       if (!(component instanceof UIXComponentBase) &&\n@@ -715,6 +740,7 @@ private SerializedView _getCachedSerializedView(\n                  getRequestMap().get(_CACHED_SERIALIZED_VIEW);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _saveCachedSerializedView(\n     FacesContext context, SerializedView state)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java",
                "sha": "792d9b2277e7fef51b17c0db85ac3fc448c709aa",
                "status": "modified"
            },
            {
                "additions": 44,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 22,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java",
                "patch": "@@ -35,6 +35,22 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+//     Why using an ArrayList as a map again? It is not type-safe.\n+//     Using an object to store the key/value seems like a decent\n+//     compromise memory wise. Or better, I would suggest a TreeMap \n+//     to lower the complexity to O(log(n)) instead of O(n) at \n+//     minimal memory cost. If balancing is still considered too \n+//     expensive and an additional class is not wanted, then parallel\n+//     lists would also do the trick\n+// =-=Adam Winer =-=\n+//   To answer the question:  the explicit intent of this\n+//   class is entirely to produce an optimal, minimally-sized\n+//   structure for state saving.  Everything is iterated through\n+//   straight away.  Type-safety is nearly irrelevant (it's\n+//   one, self-encapsulated structure, with no relevant external API);\n+//   everything is iterated through directly (there is no O(log n) anything)\n+//   relevant.  Of overriding importance here is size and efficiency.\n final class Structure implements Externalizable\n {\n   /**\n@@ -59,33 +75,34 @@ public Structure(UIComponent component)\n   /**\n    * Re-create a component from a structure object\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public UIComponent createComponent()\n     throws ClassNotFoundException, InstantiationException,\n            IllegalAccessException\n   {\n-    Class clazz = ClassLoaderUtils.loadClass(_class);\n+    Class<?> clazz = ClassLoaderUtils.loadClass(_class);\n     UIComponent component = (UIComponent) clazz.newInstance();\n     if (_id != null)\n       component.setId(_id);\n     // Create any facets\n     if (_facets != null)\n     {\n-      Map facets = component.getFacets();\n+      Map<String, UIComponent> facets = component.getFacets();\n       for (int i = 0 ; i < _facets.size(); i += 2)\n       {\n         UIComponent facet = ((Structure) _facets.get(i + 1)).\n                                  createComponent();\n-        facets.put(_facets.get(i), facet);\n+        facets.put((String)_facets.get(i), facet);\n       }\n     }\n \n     // Create any children\n     if (_children != null)\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       for (int i = 0 ; i < _children.size(); i++)\n       {\n-        UIComponent child = ((Structure) _children.get(i)).createComponent();\n+        UIComponent child = _children.get(i).createComponent();\n         children.add(child);\n       }\n     }\n@@ -121,9 +138,14 @@ public void writeExternal(ObjectOutput out) throws IOException\n     else\n     {\n       out.writeShort(_children.size());\n+      \n+      // 2006-08-02: -= Simon Lessard =-\n+      //             get(index) is inefficient if the List ever\n+      //             become something else than ArrayList\n+      // =-=Adam Winer=-=:  yep, so we won't change it to be something else.\n       for (int i = 0; i < _children.size(); i++)\n       {\n-        ((Structure) _children.get(i)).writeExternal(out);\n+        _children.get(i).writeExternal(out);\n       }\n     }\n   }\n@@ -138,7 +160,7 @@ public void readExternal(ObjectInput in)\n     short facetCount = in.readShort();\n     if (facetCount > 0)\n     {\n-      _facets = new ArrayList(facetCount);\n+      _facets = new ArrayList<Object>(facetCount);\n       for (int i = 0; i < facetCount; i += 2)\n       {\n         _facets.add(in.readObject());\n@@ -152,7 +174,7 @@ public void readExternal(ObjectInput in)\n     short childCount = in.readShort();\n     if (childCount > 0)\n     {\n-      _children = new ArrayList(childCount);\n+      _children = new ArrayList<Structure>(childCount);\n       for (int i = 0; i < childCount; i++)\n       {\n         Structure newStruct = new Structure();\n@@ -165,18 +187,17 @@ public void readExternal(ObjectInput in)\n   /**\n    * Store the structure of all the children.\n    */\n-  private List _getChildren(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Structure> _getChildren(UIComponent component)\n   {\n     if (component.getChildCount() == 0)\n       return null;\n \n-    List children = component.getChildren();\n-    ArrayList list = new ArrayList(children.size());\n+    List<UIComponent> children = component.getChildren();\n+    ArrayList<Structure> list = new ArrayList<Structure>(children.size());\n \n-    Iterator childIterator = children.iterator();\n-    while (childIterator.hasNext())\n+    for(UIComponent child : children)\n     {\n-      UIComponent child = (UIComponent) childIterator.next();\n       if ((child != null) && !child.isTransient())\n       {\n         list.add(new Structure(child));\n@@ -193,9 +214,10 @@ private List _getChildren(UIComponent component)\n   /**\n    * Store the structure of all the facets.\n    */\n-  private List _getFacets(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Object> _getFacets(UIComponent component)\n   {\n-    Iterator facetNames;\n+    Iterator<String> facetNames;\n     if (component instanceof UIXComponentBase)\n     {\n       facetNames = ((UIXComponentBase) component).getFacetNames();\n@@ -208,12 +230,12 @@ private List _getFacets(UIComponent component)\n     if (!facetNames.hasNext())\n       return null;\n \n-    Map facets = component.getFacets();\n-    ArrayList list = new ArrayList(facets.size() * 2);\n+    Map<String, UIComponent> facets = component.getFacets();\n+    ArrayList<Object> list = new ArrayList<Object>(facets.size() * 2);\n     while (facetNames.hasNext())\n     {\n-      Object name = facetNames.next();\n-      UIComponent facet = (UIComponent) facets.get(name);\n+      String name = facetNames.next();\n+      UIComponent facet = facets.get(name);\n       if ((facet != null) && !facet.isTransient())\n       {\n         list.add(name);\n@@ -245,8 +267,8 @@ static private String _unabbreviateClass(String clazz)\n \n   private String _class;\n   private String _id;\n-  private List _facets;\n-  private List _children;\n+  private List<Object> _facets;\n+  private List<Structure> _children;\n \n \n   static private final String _COMMON_CLASS_PREFIX =",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java",
                "sha": "b12c244bdd4c29cc0b6843785e67240ef9fe3064",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 13,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java",
                "patch": "@@ -64,20 +64,23 @@ public ViewHandlerImpl(\n     ViewHandler delegate)\n   {\n     _delegate = delegate;\n-    _timestamps = new HashMap();\n+    _timestamps = new HashMap<String, Long>();\n     _loadInternalViews();\n   }\n \n+  @Override\n   public Locale calculateLocale(FacesContext context)\n   {\n     return _delegate.calculateLocale(context);\n   }\n \n+  @Override\n   public String calculateRenderKitId(FacesContext context)\n   {\n     return _delegate.calculateRenderKitId(context);\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     _initIfNeeded(context);\n@@ -98,7 +101,7 @@ else if (_checkTimestamp(context))\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long) _timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -116,6 +119,7 @@ else if (_checkTimestamp(context))\n     return _delegate.createView(context, viewId);\n   }\n \n+  @Override\n   public String getActionURL(FacesContext context, String viewId)\n   {\n     String actionURL = _delegate.getActionURL(context, viewId);\n@@ -130,6 +134,7 @@ public String getActionURL(FacesContext context, String viewId)\n     return actionURL;\n   }\n \n+  @Override\n   public String getResourceURL(\n     FacesContext context,\n     String       path)\n@@ -138,6 +143,7 @@ public String getResourceURL(\n   }\n \n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -181,6 +187,7 @@ public void renderView(\n     }\n   }\n \n+  @Override\n   public UIViewRoot restoreView(\n     FacesContext context,\n     String       viewId)\n@@ -216,7 +223,7 @@ public UIViewRoot restoreView(\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long)_timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -261,6 +268,7 @@ else if ((ts == null) ||\n     return result;\n   }\n \n+  @Override\n   public void writeState(\n     FacesContext context) throws IOException\n   {\n@@ -294,10 +302,10 @@ synchronized private void _initIfNeeded(FacesContext context)\n         try\n         {\n           ClassLoader loader = Thread.currentThread().getContextClassLoader();\n-          Class c = loader.loadClass(alternateViewHandler);\n+          Class<?> c = loader.loadClass(alternateViewHandler);\n           try\n           {\n-            Constructor constructor = c.getConstructor(\n+            Constructor<?> constructor = c.getConstructor(\n                new Class[]{ViewHandler.class});\n             viewHandlerInstance =\n                (ViewHandler) constructor.newInstance(new Object[]{_delegate});\n@@ -393,16 +401,16 @@ private Long _getLastModified(URL url) throws IOException\n   //\n   private void _loadInternalViews()\n   {\n-    _internalViews = new HashMap();\n-    List<URL> list = new ArrayList();\n+    _internalViews = new HashMap<String, InternalView>();\n+    List<URL> list = new ArrayList<URL>();\n     ClassLoader loader = _getClassLoader();\n     try\n     {\n-      Enumeration en = loader.getResources(\n+      Enumeration<URL> en = loader.getResources(\n                \"META-INF/org.apache.myfaces.trinidad.render.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n       // And, for some temporary backwards compatibility, also load\n@@ -411,7 +419,7 @@ private void _loadInternalViews()\n                \"META-INF/org.apache.myfaces.trinidad.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n \n@@ -432,11 +440,11 @@ private void _loadInternalViews()\n         _LOG.fine(\"Loading internal views from {0}\",  url);\n         properties.load(url.openStream());\n \n-        for (Map.Entry entry : properties.entrySet())\n+        for (Map.Entry<Object, Object> entry : properties.entrySet())\n         {\n           String name = (String) entry.getKey();\n           String className = (String) entry.getValue();\n-          Class clazz = loader.loadClass(className);\n+          Class<?> clazz = loader.loadClass(className);\n           InternalView view = (InternalView) clazz.newInstance();\n           _internalViews.put(name, view);\n         }\n@@ -472,7 +480,7 @@ static private ClassLoader _getClassLoader()\n   private Boolean           _checkTimestamp;\n   // Mostly final, but see _initIfNeeded()\n   private ViewHandler       _delegate;\n-  private final Map         _timestamps;\n+  private final Map<String, Long> _timestamps;\n   private boolean           _inited;\n   private Map<String, InternalView> _internalViews;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java",
                "sha": "84fd93afcb405dc2a7e7f58d95226fcfaaf95a70",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java",
                "patch": "@@ -24,6 +24,7 @@ public UIXEditableFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public void setProperty(PropertyKey key, Object value)\n   {\n     super.setProperty(key, value);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java",
                "sha": "a6a2dea362868eec7eae6ba2f5ab5c030c740c5d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java",
                "patch": "@@ -25,6 +25,7 @@ public UIXFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return _type;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java",
                "sha": "4b8b5b33d263bc30c941f4fdab907550da062e38",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java",
                "patch": "@@ -42,6 +42,7 @@ public AccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return new Character(text.charAt(accessKeyIndex + 1));\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return Character.class;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java",
                "sha": "08015b50515ba443c6e8aed8daca8c0334ea2fe1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java",
                "patch": "@@ -42,6 +42,7 @@ public StripAccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return StringUtils.stripMnemonic(text);\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return String.class;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java",
                "sha": "f0f095cb19c5de2057c356f397bae45e61ae000b",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java",
                "patch": "@@ -36,22 +36,26 @@ protected ValueBindingAdapter(ValueBinding base)\n     _base = base;\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     return _base.getValue(context);\n   }\n \n+  @Override\n   public void setValue(FacesContext context, Object value)\n   {\n     throw new PropertyNotFoundException(\"Can't set value\");\n   }\n   \n+  @Override\n   public boolean isReadOnly(FacesContext context)\n   {\n     return true;\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return _base.getType(context);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java",
                "sha": "0de21d7b24551471cb01bdcd283e64005095ee15",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 17,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java",
                "patch": "@@ -57,6 +57,7 @@\n    * @todo =-=pu : Maybe we need to allow adding Changes for specific viewId's -\n    *  BIBeans req. - external customizer dialog\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -94,6 +95,7 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addDocumentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -140,22 +142,23 @@ private void _addDocumentChangeImpl(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(\n     FacesContext facesContext,\n     UIComponent uiComponent)\n   {\n     if (uiComponent == null)\n       return null;\n \n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n       return null;\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n-    List changesList = (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changesList = componentToChangesMap.get(uniqueIdForComponent);\n     if (changesList == null)\n       return null;\n \n@@ -165,10 +168,11 @@ public Iterator getComponentChanges(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n@@ -187,7 +191,7 @@ public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected abstract Map getComponentToChangesMapForView(\n+  protected abstract Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary);\n@@ -203,18 +207,18 @@ private void _addComponentChangeImpl(\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n \n-    Map componentToChangesMap = getComponentToChangesMapForView(facesContext,\n+    Map<String, List<ComponentChange>> componentToChangesMap = getComponentToChangesMapForView(facesContext,\n                                                                 viewId,\n                                                                 true);\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n \n-    List changeListForComponent =\n-      (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changeListForComponent = \n+      componentToChangesMap.get(uniqueIdForComponent);\n \n     if (changeListForComponent == null)\n     {\n-      changeListForComponent = new LinkedList();\n+      changeListForComponent = new LinkedList<ComponentChange>();\n       componentToChangesMap.put(uniqueIdForComponent, changeListForComponent);\n     }\n \n@@ -283,11 +287,11 @@ private Node _getComponentNode(\n   {\n     if (document instanceof DocumentTraversal)\n     {\n-      List idPath = _getIdPath(component);\n+      List<String> idPath = _getIdPath(component);\n \n       if (!idPath.isEmpty())\n       {\n-        Iterator pathIds = idPath.iterator();\n+        Iterator<String> pathIds = idPath.iterator();\n \n         DocumentTraversal traversalFactory = (DocumentTraversal)document;\n         TreeWalker walker = traversalFactory.createTreeWalker(\n@@ -296,9 +300,9 @@ private Node _getComponentNode(\n                                    null,\n                                    true);\n \n-        Node currElement = (Element)walker.getCurrentNode();\n+        Node currElement = walker.getCurrentNode();\n         Node stopElement = walker.getRoot();\n-        String neededID = (String)pathIds.next();\n+        String neededID = pathIds.next();\n \n         do\n         {\n@@ -319,7 +323,7 @@ private Node _getComponentNode(\n                 return currElement;\n \n               // update the id we need\n-              neededID = (String)pathIds.next();\n+              neededID = pathIds.next();\n \n               // don't pop back up to this parent\n               stopElement = currElement;\n@@ -391,15 +395,16 @@ private Node _getNextNode(\n    * @param component\n    * @return\n    */\n-  private List _getIdPath(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<String> _getIdPath(UIComponent component)\n   {\n     String componentID = component.getId();\n \n     // we need an ID\n     if ((componentID == null) || (componentID.length() == 0))\n       return Collections.EMPTY_LIST;\n \n-    LinkedList pathList = new LinkedList();\n+    LinkedList<String> pathList = new LinkedList<String>();\n     pathList.addFirst(componentID);\n \n     UIComponent currAncestor = component.getParent();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java",
                "sha": "3a37b9f56441c2f7886c7be35ccee996a79ed453",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java",
                "patch": "@@ -34,6 +34,7 @@\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -45,7 +46,8 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(FacesContext facesContext,\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(FacesContext facesContext,\n                              UIComponent uiComponent)\n   {\n     return null;\n@@ -54,7 +56,8 @@ public Iterator getComponentChanges(FacesContext facesContext,\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     return null;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java",
                "sha": "a71972d43be8f17a2eb6873e0e41fe33b97ecc64",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java",
                "patch": "@@ -17,10 +17,12 @@\n package org.apache.myfaces.trinidadinternal.change;\n \n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n import javax.faces.context.FacesContext;\n \n+import org.apache.myfaces.trinidad.change.ComponentChange;\n import org.w3c.dom.Document;\n \n /**\n@@ -42,29 +44,32 @@\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected Map getComponentToChangesMapForView(\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  protected Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary)\n   {\n-    Map sessMap = facesContext.getExternalContext().getSessionMap();\n+    Map<String, Object> sessMap = facesContext.getExternalContext().getSessionMap();\n     //pu: Get datastructure #1 described at the end of this file.\n-    Map viewToChangesMap = (Map) sessMap.get(_CHANGE_KEY);\n+    Map<String, Map<String, List<ComponentChange>>> viewToChangesMap = \n+      (Map<String, Map<String, List<ComponentChange>>>)sessMap.get(_CHANGE_KEY);\n     if (viewToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      viewToChangesMap = new HashMap();\n+      viewToChangesMap = new HashMap<String, Map<String, List<ComponentChange>>>();\n       sessMap.put(_CHANGE_KEY, viewToChangesMap);\n     }\n     \n     //pu: Get datastructure #2 described at the end of this file.\n-    Map componentToChangesMap = (Map) viewToChangesMap.get(viewId);\n+    Map<String, List<ComponentChange>> componentToChangesMap = viewToChangesMap.get(viewId);\n     if (componentToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      componentToChangesMap = new HashMap();\n+      componentToChangesMap = new HashMap<String, List<ComponentChange>>();\n       viewToChangesMap.put(viewId, componentToChangesMap);\n     }\n     return componentToChangesMap;\n@@ -73,6 +78,7 @@ protected Map getComponentToChangesMapForView(\n   /** \n    * We don't support DocumentAspect persistence\n    */\n+  @Override\n   protected Document getDocument(FacesContext context)\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java",
                "sha": "abbb8765171284e354e68f71b4bf0ae91a3a4044",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java",
                "changes": 59,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 21,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java",
                "patch": "@@ -46,17 +46,19 @@ public DialogServiceImpl(RequestContextImpl context)\n     _context = context;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void pushView(UIViewRoot viewRoot)\n   {\n     FacesContext context = _getFacesContext();\n     Object savedOld = StateManagerImpl.saveViewRoot(context, viewRoot);\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n-      list = new ArrayList(1);\n+      list = new ArrayList<Object>(1);\n     else\n     {\n-      List tmp = new ArrayList(list.size() + 1);\n+      List<Object> tmp = new ArrayList<Object>(list.size() + 1);\n       tmp.addAll(list);\n       list = tmp;\n     }\n@@ -67,6 +69,8 @@ public void pushView(UIViewRoot viewRoot)\n     _LOG.fine(\"Pushed view {0}\", viewRoot.getViewId());\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void popView(boolean navigateToPoppedView)\n   {\n     FacesContext context = _getFacesContext();\n@@ -86,7 +90,7 @@ public void popView(boolean navigateToPoppedView)\n     }\n \n     // Make a copy of the List;  never mutate the original list\n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n     {\n       // For starters, this should only happen if we weren't navigating\n@@ -100,18 +104,20 @@ else if (list.size() == 1)\n     }\n     else\n     {\n-      list = new ArrayList(list);\n+      list = new ArrayList<Object>(list);\n       list.remove(list.size() - 1);\n       _getPageFlowScope().put(_PUSHED_VIEWS_KEY, list);\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot peekView()\n   {\n     FacesContext context = _getFacesContext();\n     Object savedRoot = null;\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list != null)\n       savedRoot = list.get(list.size() - 1);\n \n@@ -140,8 +146,10 @@ public UIViewRoot peekView()\n     return null;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean returnFromDialog(Object returnValue,\n-                                  Map returnParameters)\n+                                  Map<Object, Object> returnParameters)\n   {\n     FacesContext context = _getFacesContext();\n     context.getExternalContext().getSessionMap().\n@@ -172,7 +180,7 @@ public boolean returnFromDialog(Object returnValue,\n     // do that;  we'll mark the response as complete, because we'll need\n     // the AdfFacesFilter to re-execute the faces lifecycle with the\n     // new parameters\n-    Map launchParameters = (Map)\n+    Map<Object, Object> launchParameters = (Map<Object, Object>)\n       poppedView.getAttributes().get(RequestContextImpl.LAUNCH_PARAMETERS);\n \n     if (launchParameters != null)\n@@ -181,7 +189,7 @@ public boolean returnFromDialog(Object returnValue,\n       // AdfFacesFilterImpl and ViewHandlerImpl\n       poppedView.getAttributes().remove(RequestContextImpl.LAUNCH_PARAMETERS);\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n       requestMap.put(RequestContextImpl.LAUNCH_PARAMETERS, launchParameters);\n       requestMap.put(RequestContextImpl.LAUNCH_VIEW, poppedView);\n \n@@ -194,12 +202,14 @@ public boolean returnFromDialog(Object returnValue,\n \n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ReturnEvent getReturnEvent(UIComponent source)\n   {\n     FacesContext context = _getFacesContext();\n     if (TrinidadFilterImpl.isExecutingDialogReturn(context))\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, Object> parameterMap = context.getExternalContext().getRequestParameterMap();\n       Object returnParam = parameterMap.get(_RETURN_PARAM);\n       if (returnParam == null)\n         return null;\n@@ -225,11 +235,11 @@ public ReturnEvent getReturnEvent(UIComponent source)\n              remove(_DIALOG_RETURN_KEY);\n \n     Object returnValue = null;\n-    Map    returnParams = null;\n+    Map<Object, Object> returnParams = null;\n     if (o != null)\n     {\n       returnValue = ((Object[]) o)[0];\n-      returnParams = (Map) ((Object[]) o)[1];\n+      returnParams = (Map<Object, Object>)((Object[]) o)[1];\n     }\n \n     ReturnEvent returnEvent =\n@@ -241,6 +251,7 @@ public ReturnEvent getReturnEvent(UIComponent source)\n     return returnEvent;\n   }\n \n+  @Override\n   public void queueLaunchEvent(UIViewRoot viewRoot)\n   {\n     UIComponent source = getCurrentLaunchSource();\n@@ -254,9 +265,10 @@ public void queueLaunchEvent(UIViewRoot viewRoot)\n     }\n   }\n \n+  @Override\n   public void queueReturnEvent(\n     Object returnValue,\n-    Map    returnParams)\n+    Map<Object, Object> returnParams)\n   {\n     UIComponent source = getCurrentLaunchSource();\n     if (source == null)\n@@ -274,15 +286,17 @@ public void queueReturnEvent(\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     if (dialogParameters == null)\n-      dialogParameters = new HashMap();\n+      dialogParameters = new HashMap<String, Object>();\n \n     FacesContext context = _getFacesContext();\n \n@@ -323,7 +337,7 @@ public void launchDialog(\n       // Save the parameters used to launch the dialog so we can\n       // simulate a postback when coming back to the dialog;  and\n       // write in a \"returnId\" with the \"id\" that will be used.\n-      Map savedRequestParameters = new HashMap();\n+      Map<String, Object> savedRequestParameters = new HashMap<String, Object>();\n       savedRequestParameters.putAll(\n             context.getExternalContext().getRequestParameterValuesMap());\n       if (source != null)\n@@ -365,7 +379,8 @@ private FacesContext _getFacesContext()\n     return _context.__getFacesContext();\n   }\n \n-  private Map _getPageFlowScope()\n+  @SuppressWarnings(\"unchecked\")\n+  private Map<String, Object> _getPageFlowScope()\n   {\n     return _context.getPageFlowScope();\n   }\n@@ -374,7 +389,7 @@ static private DialogRenderKitService _getDialogRenderKitService(\n     FacesContext context)\n   {\n     RenderKit rk = context.getRenderKit();\n-    DialogRenderKitService service = (DialogRenderKitService)\n+    DialogRenderKitService service = \n        Service.getService(rk, DialogRenderKitService.class);\n \n     if (service == null)\n@@ -391,15 +406,16 @@ static private DialogRenderKitService _getDialogRenderKitService(\n    * Execute any \"binding\" attributes so that a popped view\n    * is properly set up\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _executeBindings(FacesContext context, UIComponent component)\n   {\n     ValueBinding binding = component.getValueBinding(\"binding\");\n     if (binding != null)\n       binding.setValue(context, component);\n \n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n-      _executeBindings(context, (UIComponent) kids.next());\n+      _executeBindings(context, kids.next());\n   }\n \n   private RequestContextImpl _context;\n@@ -417,6 +433,7 @@ public InternalLaunch(UIComponent source,\n       super(source, viewRoot);\n     }\n \n+    @Override\n     public void launchDialog(boolean useWindow)\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java",
                "sha": "a6533526f9044219cdc3e590fd44a6d4f87f05f8",
                "status": "modified"
            },
            {
                "additions": 46,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java",
                "patch": "@@ -35,175 +35,217 @@\n  */\n abstract public class ExternalContextDecorator extends ExternalContext\n {\n+  @Override\n   public void dispatch(String path) throws IOException\n   {\n     getExternalContext().dispatch(path);\n   }\n \n-\n+  @Override\n   public Object getContext()\n   { \n     return getExternalContext().getContext();\n   }\n   \n+  @Override\n   public Object getRequest()\n   {\n     return getExternalContext().getRequest(); \n   }\n   \n+  @Override\n   public Object getResponse()\n   {\n     return getExternalContext().getResponse();\n   }\n   \n+  @Override\n   public Object getSession(boolean create)\n   {\n     return getExternalContext().getSession(create);\n   }\n   \n+  @Override\n   public String getRequestContextPath()\n   {\n     return getExternalContext().getRequestContextPath();\n   }\n \n+  @Override\n   public String getRequestPathInfo()\n   {\n     return getExternalContext().getRequestPathInfo();\n   }\n \n+  @Override\n   public String getRequestServletPath()\n   {\n     return getExternalContext().getRequestServletPath();\n   }\n \n+  @Override\n   public String getInitParameter(String name)\n   {\n     return getExternalContext().getInitParameter(name);\n   }\n   \n+  @Override\n   public String encodeResourceURL(String url)\n   {\n     return getExternalContext().encodeResourceURL(url);\n   }\n \n+  @Override\n   public String encodeActionURL(String url)\n   {\n     return getExternalContext().encodeActionURL(url);\n   }\n \n+  @Override\n   public String encodeNamespace(String ns)\n   {\n     return getExternalContext().encodeNamespace(ns);\n   }\n \n+  @Override\n   public String getAuthType()\n   {\n     return getExternalContext().getAuthType();\n   }\n \n+  @Override\n   public String getRemoteUser()\n   {\n     return getExternalContext().getRemoteUser();\n   }\n \n+  @Override\n   public Principal getUserPrincipal()\n   {\n     return getExternalContext().getUserPrincipal();\n   }\n \n+  @Override\n   public boolean isUserInRole(String role)\n   {\n     return getExternalContext().isUserInRole(role);\n   }\n \n+  @Override\n   public URL getResource(String path) throws MalformedURLException\n   {\n     return getExternalContext().getResource(path);\n   }\n \n+  @Override\n   public InputStream getResourceAsStream(String path)\n   {\n     return getExternalContext().getResourceAsStream(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Set getResourcePaths(String path)\n   {\n     return getExternalContext().getResourcePaths(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterMap()\n   {\n     return getExternalContext().getRequestParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterValuesMap()\n   {\n     return getExternalContext().getRequestParameterValuesMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestParameterNames()\n   {\n     return getExternalContext().getRequestParameterNames();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestCookieMap()\n   {\n     return getExternalContext().getRequestCookieMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderMap()\n   {\n     return getExternalContext().getRequestHeaderMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderValuesMap()\n   {\n     return getExternalContext().getRequestHeaderValuesMap();\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getInitParameterMap()\n   {\n     return getExternalContext().getInitParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getApplicationMap()\n   {\n     return getExternalContext().getApplicationMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getSessionMap()\n   {\n     return getExternalContext().getSessionMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestMap()\n   {\n     return getExternalContext().getRequestMap();\n   }\n \n-\n+  @Override\n   public Locale getRequestLocale()\n   {\n     return getExternalContext().getRequestLocale();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestLocales()\n   {\n     return getExternalContext().getRequestLocales();\n   }\n \n-\n+  @Override\n   public void log(String message)\n   {\n     getExternalContext().log(message);\n   }\n \n+  @Override\n   public void log(String message, Throwable t)\n   {\n     getExternalContext().log(message, t);\n   }\n \n+  @Override\n   public void redirect(String url) throws IOException\n   {\n     getExternalContext().redirect(url);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java",
                "sha": "6b7c13d9091fac2a4d58da8340bb2e78bf509365",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java",
                "patch": "@@ -48,8 +48,12 @@ public FacesContextFactoryImpl(FacesContextFactory factory)\n     _factory = factory;\n   }\n \n-  public FacesContext getFacesContext(Object context, Object request,\n-                                      Object response, Lifecycle lifecycle)\n+  @Override\n+  public FacesContext getFacesContext(\n+      Object context,\n+      Object request,\n+      Object response, \n+      Lifecycle lifecycle)\n   {\n     return new CacheRenderKit(_factory.getFacesContext(context,\n                                                        request,\n@@ -66,36 +70,46 @@ public CacheRenderKit(FacesContext base)\n       setCurrentInstance(this);\n     }\n \n+    @Override\n     public Application getApplication()\n     {\n       return _base.getApplication();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getClientIdsWithMessages()\n     {\n       return _base.getClientIdsWithMessages();\n     }\n \n+    @Override\n     public ExternalContext getExternalContext()\n     {\n       return _external;\n     }\n \n+    @Override\n     public FacesMessage.Severity getMaximumSeverity()\n     {\n       return _base.getMaximumSeverity();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages()\n     {\n       return _base.getMessages();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages(String clientId)\n     {\n       return _base.getMessages(clientId);\n     }\n \n+    @Override\n     public RenderKit getRenderKit()\n     {\n       if (_kit == null)\n@@ -124,61 +138,73 @@ public RenderKit getRenderKit()\n       return _kit;\n     }\n \n+    @Override\n     public boolean getRenderResponse()\n     {\n       return _base.getRenderResponse();\n     }\n \n+    @Override\n     public boolean getResponseComplete()\n     {\n       return _base.getResponseComplete();\n     }\n \n+    @Override\n     public ResponseStream getResponseStream()\n     {\n       return _base.getResponseStream();\n     }\n \n+    @Override\n     public void setResponseStream(ResponseStream responseStream)\n     {\n       _base.setResponseStream(responseStream);\n     }\n \n+    @Override\n     public ResponseWriter getResponseWriter()\n     {\n       return _base.getResponseWriter();\n     }\n \n+    @Override\n     public void setResponseWriter(ResponseWriter responseWriter)\n     {\n       _base.setResponseWriter(responseWriter);\n     }\n \n+    @Override\n     public UIViewRoot getViewRoot()\n     {\n       return _base.getViewRoot();\n     }\n \n+    @Override\n     public void setViewRoot(UIViewRoot viewRoot)\n     {\n       _base.setViewRoot(viewRoot);\n     }\n \n+    @Override\n     public void addMessage(String clientId, FacesMessage facesMessage)\n     {\n       _base.addMessage(clientId, facesMessage);\n     }\n \n+    @Override\n     public void release()\n     {\n       _base.release();\n     }\n \n+    @Override\n     public void renderResponse()\n     {\n       _base.renderResponse();\n     }\n \n+    @Override\n     public void responseComplete()\n     {\n       _base.responseComplete();\n@@ -197,6 +223,7 @@ public OverrideDispatch(ExternalContext decorated)\n       _decorated = decorated;\n     }\n \n+    @Override\n     public void dispatch(String path) throws IOException\n     {\n       RequestContext afc = RequestContext.getCurrentInstance();\n@@ -209,6 +236,7 @@ public void dispatch(String path) throws IOException\n     }\n \n \n+    @Override\n     protected ExternalContext getExternalContext()\n     {\n       return _decorated;\n@@ -219,6 +247,9 @@ protected ExternalContext getExternalContext()\n \n   private final FacesContextFactory _factory;\n \n+  // 2006-08-02; -= Simon Lessard =-\n+  // There's nothing logged in this class at this time.\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(FacesContextFactoryImpl.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java",
                "sha": "71f30ad14fc96115dcf11e23f398e941d29c7411",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 16,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java",
                "patch": "@@ -34,7 +34,7 @@\n  *\n  * @author The Oracle ADF Faces Team\n  */\n-class PageFlowScopeMap implements Map, Serializable\n+class PageFlowScopeMap implements Map<String, Object>, Serializable\n {\n   /**\n    * Return a PageFlowScopeMap stored with a token.\n@@ -87,7 +87,7 @@ static private PageFlowScopeMap _getPageFlowScopeMap(\n       childToken = token.substring(lastSeparator + 1);\n     }\n \n-    Map storeMap = _createMapToStore(context, parentToken);\n+    Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n     return (PageFlowScopeMap) storeMap.get(childToken);\n   }\n \n@@ -101,11 +101,11 @@ public PageFlowScopeMap()\n \n   public PageFlowScopeMap(int lifetime)\n   {\n-    this(new HashMap(13), null, new SharedData(lifetime));\n+    this(new HashMap<String, Object>(13), null, new SharedData(lifetime));\n   }\n \n   private PageFlowScopeMap(\n-    HashMap map,\n+    HashMap<String, Object> map,\n     String token,\n     SharedData sharedData)\n   {\n@@ -124,7 +124,7 @@ private PageFlowScopeMap(PageFlowScopeMap parent, boolean copyParent)\n     _sharedData = new SharedData(parent._sharedData._lifetime);\n     _sharedData._parent = parent;\n \n-    _map = new HashMap();\n+    _map = new HashMap<String, Object>();\n     if (copyParent)\n       _map.putAll(parent._map);\n   }\n@@ -160,7 +160,7 @@ synchronized public String getToken(FacesContext context)\n       cache = _getRootTokenCache(context, _sharedData._lifetime);\n     }\n \n-    Map store = _createMapToStore(context, parentToken);\n+    Map<String, Object> store = _createMapToStore(context, parentToken);\n \n     String token = cache.addNewEntry(this, store);\n \n@@ -181,7 +181,8 @@ synchronized public String getToken(FacesContext context)\n     return _token;\n   }\n \n-  static private Map _createMapToStore(\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _createMapToStore(\n     FacesContext context,\n     String       parentToken)\n   {\n@@ -201,6 +202,7 @@ static private Map _createMapToStore(\n                          fullToken);\n   }\n \n+  @Override\n   public boolean equals(Object o)\n   {\n     if (o instanceof PageFlowScopeMap)\n@@ -209,6 +211,7 @@ public boolean equals(Object o)\n     return _map.equals(o);\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _map.hashCode();\n@@ -234,22 +237,22 @@ public boolean containsValue(Object value)\n     return _map.containsValue(value);\n   }\n \n-  public Collection values()\n+  public Collection<Object> values()\n   {\n     // Use an unmodifiableCollection to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableCollection(_map.values());\n   }\n \n \n-  public Set entrySet()\n+  public Set<Map.Entry<String, Object>> entrySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableSet(_map.entrySet());\n   }\n \n-  public Set keySet()\n+  public Set<String> keySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n@@ -261,7 +264,7 @@ public Object get(Object key)\n     return _map.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public Object put(String key, Object value)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -283,7 +286,7 @@ public Object remove(Object key)\n     return _map.remove(key);\n   }\n \n-  public void putAll(Map t)\n+  public void putAll(Map<? extends String, ? extends Object> t)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -332,7 +335,7 @@ public void discard()\n     // Remove ourselves\n     if (_sharedData._parent != null)\n     {\n-      Map storeMap = _createMapToStore(context, parentToken);\n+      Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n       _sharedData._parent._sharedData._children.removeOldEntry(childToken,\n                                                                storeMap);\n     }\n@@ -347,11 +350,12 @@ private void _removeAllChildren(FacesContext context, String token)\n     // this will in fact automatically recurse through all children\n     // grandchildren etc. - which is kind of a design flaw of SubKeyMap,\n     // but one we're relying on\n-    Map store = _createMapToStore(context, token);\n+    Map<String, Object> store = _createMapToStore(context, token);\n     store.clear();\n     _sharedData._children = null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"PageFlowScopeMap@\" + System.identityHashCode(this) +\n@@ -383,11 +387,12 @@ private TokenCache _getTokenCache()\n   // repeatedly during Render Response *without further\n   // mutations*.  Both of these assumptions seem very\n   // dubious!\n+  @SuppressWarnings(\"unchecked\")\n   private void _detachIfNeeded()\n   {\n     if (_token != null)\n     {\n-      _map = (HashMap) _map.clone();\n+      _map = (HashMap<String, Object>) _map.clone();\n       _token = null;\n \n       // =-=AEW When do we discard children?\n@@ -416,7 +421,7 @@ public SharedData(int lifetime)\n \n   private SharedData _sharedData;\n   private String     _token;\n-  private HashMap    _map;\n+  private HashMap<String, Object> _map;\n \n   static private final String _PAGE_FLOW_SCOPE_CACHE =\n     \"org.apache.myfaces.trinidadinternal.application.PageFlowScope\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java",
                "sha": "13cda3324c609742c7f9b228df6e69aaf2439424",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java",
                "patch": "@@ -38,7 +38,8 @@ private PageFlowScopeProviderImpl()\n   {\n   }\n \n-  public Map getPageFlowScope(FacesContext context)\n+  @Override\n+  public Map<String, Object> getPageFlowScope(FacesContext context)\n   {\n     PageFlowScopeMap pageFlowScope = _getPageFlowScope(context);\n     if (pageFlowScope == null)\n@@ -68,7 +69,8 @@ public Map getPageFlowScope(FacesContext context)\n     return pageFlowScope;\n   }\n \n-  public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n+  @Override\n+  public Map<String, Object> pushPageFlowScope(FacesContext context, boolean copyParent)\n   {\n     PageFlowScopeMap oldPageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n     if (oldPageFlowScope.getToken(context) != null)\n@@ -86,7 +88,8 @@ public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n     return oldPageFlowScope;\n   }\n \n-  public Map popPageFlowScope(FacesContext context, boolean discardScope)\n+  @Override\n+  public Map<String, Object> popPageFlowScope(FacesContext context, boolean discardScope)\n   {\n     PageFlowScopeMap oldPageFlowScope = _getPageFlowScope(context);\n \n@@ -103,6 +106,7 @@ public Map popPageFlowScope(FacesContext context, boolean discardScope)\n     return oldPageFlowScope;\n   }\n \n+  @Override\n   public String encodeCurrentPageFlowScopeURL(FacesContext context, String url)\n   {\n     PageFlowScopeMap pageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n@@ -137,6 +141,7 @@ static private PageFlowScopeMap _getPageFlowScope(FacesContext context)\n   // Store the page flow scope\n   // =-=AEW MAKE THIS PRIVATE WHNE OBSOLETE DIALOGSERVICE METHODS\n   // ARE REMOVED\n+  @SuppressWarnings(\"unchecked\")\n   static void __setPageFlowScope(FacesContext context,\n                                  PageFlowScopeMap pageFlowScope)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java",
                "sha": "0c31f4a3749020e37f0a96bba6feb2d111acfe57",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java",
                "patch": "@@ -37,6 +37,7 @@ private PageResolverDefaultImpl()\n    * @param viewId {@inheritDoc}\n    * @return {@inheritDoc}\n    */\n+  @Override\n   public String getPhysicalURI(String viewId)\n   {\n     return viewId;\n@@ -45,6 +46,7 @@ public String getPhysicalURI(String viewId)\n   /**\n    * Encodes an action URI.\n    */\n+  @Override\n   public String encodeActionURI(String actionURI)\n   {\n     return actionURI;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java",
                "sha": "6e56f68a846d93b6257d31c92e7fbab5215a26af",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java",
                "patch": "@@ -64,6 +64,7 @@\n     TYPE.lock();\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return TYPE;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java",
                "sha": "d600986a7eac2490944164494e6fc89030cd2029",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java",
                "patch": "@@ -37,6 +37,7 @@ public RequestContextFactoryImpl()\n   {\n   }\n \n+  @Override\n   public RequestContext createContext(Object context,\n                                        Object request)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java",
                "sha": "ad91a3f4033bf8d3d124eb32cad07bb919d2f9a7",
                "status": "modified"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java",
                "changes": 91,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 30,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java",
                "patch": "@@ -15,10 +15,11 @@\n  */\n package org.apache.myfaces.trinidadinternal.context;\n \n-\n+import java.awt.Color;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n@@ -82,6 +83,7 @@ public RequestContextImpl(RequestContextBean bean)\n   {\n     _bean = bean;\n     _dialogService = new DialogServiceImpl(this);\n+    _partialTargets = new HashSet<String>();\n   }\n \n   public void init(Object request)\n@@ -90,28 +92,33 @@ public void init(Object request)\n   }\n \n \n+  @Override\n   public DialogService getDialogService()\n   {\n     return _dialogService;\n   }\n \n+  @Override\n   public PageResolver getPageResolver()\n   {\n     return _pageResolver;\n   }\n \n+  @Override\n   public PageFlowScopeProvider getPageFlowScopeProvider()\n   {\n     return _pageFlowScopeProvider;\n   }\n \n-  public Map getPageFlowScope()\n+  @Override\n+  public Map<String, Object> getPageFlowScope()\n   {\n     return _pageFlowScopeProvider.getPageFlowScope(__getFacesContext());\n   }\n \n \n-  public void returnFromDialog(Object returnValue, Map returnParameters)\n+  @Override\n+  public void returnFromDialog(Object returnValue, Map<Object, Object> returnParameters)\n   {\n     boolean dialogIsInaccessible =\n       _dialogService.returnFromDialog(returnValue, returnParameters);\n@@ -125,12 +132,13 @@ public void returnFromDialog(Object returnValue, Map returnParameters)\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     _pageFlowScopeProvider.pushPageFlowScope(__getFacesContext(),\n                                              true);\n@@ -141,13 +149,15 @@ public void launchDialog(\n                                 windowProperties);\n   }\n \n+  @Override\n   public UploadedFileProcessor getUploadedFileProcessor()\n   {\n     return (UploadedFileProcessor)\n       _bean.getProperty(RequestContextBean.UPLOADED_FILE_PROCESSOR_KEY);\n   }\n \n \n+  @Override\n   public boolean isPostback()\n   {\n     FacesContext context = __getFacesContext();\n@@ -175,38 +185,44 @@ public boolean isPostback()\n     return true;\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean isPartialRequest(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n     if (Boolean.TRUE.equals(requestMap.get(XhtmlConstants.PARTIAL_PARAM)))\n       return true;\n     \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, Object> parameters = context.getExternalContext().getRequestParameterMap();\n     if (\"true\".equals(parameters.get(\"partial\")))\n       return true;\n \n     return false;\n   }\n \n \n+  @Override\n   public boolean isDebugOutput()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.DEBUG_OUTPUT_KEY));\n   }\n \n+  @Override\n   public boolean isClientValidationDisabled()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.CLIENT_VALIDATION_DISABLED_KEY));\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.OUTPUT_MODE_KEY);\n   }\n \n   // get skinFamily; default to minimal if nothing is specified.\n+  @Override\n   public String getSkinFamily()\n   {\n     String skinFamily =\n@@ -216,6 +232,7 @@ public String getSkinFamily()\n     return skinFamily;\n   }\n \n+  @Override\n   public String getAccessibilityMode()\n   {\n     String s = (String) _bean.getProperty(\n@@ -233,6 +250,7 @@ public String getAccessibilityMode()\n     return null;\n   }\n \n+  @Override\n   public char getNumberGroupingSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -243,6 +261,7 @@ public char getNumberGroupingSeparator()\n     return (char) 0;\n   }\n \n+  @Override\n   public char getDecimalSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -254,6 +273,7 @@ public char getDecimalSeparator()\n   }\n \n \n+  @Override\n   public TimeZone getTimeZone()\n   {\n     TimeZone tz = (TimeZone) _bean.getProperty(RequestContextBean.TIME_ZONE_KEY);\n@@ -277,10 +297,12 @@ public TimeZone getTimeZone()\n   /**\n    * {@inheritDoc}\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ChangeManager getChangeManager()\n   {\n     FacesContext context = __getFacesContext();\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     ChangeManager changeManager = (ChangeManager)appMap.get(_CHANGE_MANAGER_KEY);\n \n     if (changeManager == null)\n@@ -325,7 +347,7 @@ private ChangeManager _createChangeManager(\n   {\n     try\n     {\n-      Class managerClass = ClassLoaderUtils.loadClass(className);\n+      Class<?> managerClass = ClassLoaderUtils.loadClass(className);\n       return (ChangeManager)managerClass.newInstance();\n     }\n     catch (Throwable throwable)\n@@ -337,23 +359,27 @@ private ChangeManager _createChangeManager(\n   }\n \n \n+  @Override\n   public RegionManager getRegionManager()\n   {\n     FacesContext context = __getFacesContext();\n     return RegionMetadata.getRegionMetadata(context);\n   }\n \n+  @Override\n   public String getCurrencyCode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.CURRENCY_CODE_KEY);\n   }\n \n+  @Override\n   public String getOracleHelpServletUrl()\n   {\n     return (String) _bean.getProperty(\n      RequestContextBean.ORACLE_HELP_SERVLET_URL_KEY);\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     Boolean b = (Boolean) _bean.getProperty(RequestContextBean.RIGHT_TO_LEFT_KEY);\n@@ -372,7 +398,8 @@ public boolean isRightToLeft()\n   }\n \n \n-  public Map getHelpTopic()\n+  @Override\n+  public Map<String, Object> getHelpTopic()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -381,7 +408,8 @@ public Map getHelpTopic()\n     return provider.getHelpTopicMap();\n   }\n \n-  public Map getHelpSystem()\n+  @Override\n+  public Map<String, Object> getHelpSystem()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -394,6 +422,7 @@ public Map getHelpSystem()\n   // Partial Page Rendering support\n   //\n \n+  @Override\n   public void addPartialTarget(UIComponent newTarget)\n   {\n     FacesContext fContext = __getFacesContext();\n@@ -437,38 +466,38 @@ public void addPartialTarget(UIComponent newTarget)\n     }\n   }\n \n+  @Override\n   public void addPartialTriggerListeners\n     (UIComponent listener,\n      String[] triggers)\n   {\n     if ((listener == null) || (triggers == null))\n       return;\n \n-    Map pl = _getPartialListeners();\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n \n     for (int i = 0; i < triggers.length; i++)\n     {\n       String trigger = triggers[i];\n \n-      Object master;\n-\n       // Wildcards removed for now....\n       // if (\"*\".equals(trigger))\n       //   master = _GLOBAL_TRIGGER;\n       // else\n-      master = listener.getParent().findComponent(trigger);\n+      UIComponent master = listener.getParent().findComponent(trigger);\n \n       // Get the set of listeners on this trigger and add this component.\n-      Set listeners = (Set) pl.get(master);\n+      Set<UIComponent> listeners = pl.get(master);\n       if (listeners == null)\n       {\n-        listeners = new HashSet();\n+        listeners = new HashSet<UIComponent>();\n         pl.put(master, listeners);\n       }\n       listeners.add(listener);\n     }\n   }\n \n+  @Override\n   public void partialUpdateNotify(UIComponent updated)\n   {\n     if (updated != null)\n@@ -487,7 +516,7 @@ public void partialUpdateNotify(UIComponent updated)\n   /**\n    * Get the clientIds of all components that have requested partial update\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _partialTargets.iterator();\n   }\n@@ -497,21 +526,24 @@ public Iterator getPartialTargets()\n    * is listening on this component, it will add itself to the partialTargets\n    * list).\n    */\n-  public Set getPartialUpdates()\n+  public Set<String> getPartialUpdates()\n   {\n     return _partialTargets;\n   }\n \n-  public Map getColorPalette()\n+  @Override\n+  public Map<String, List<Color>> getColorPalette()\n   {\n     return ColorPaletteUtils.getColorPaletteMap();\n   }\n \n-  public Map getFormatter()\n+  @Override\n+  public Map<Object, Map<Object,String>> getFormatter()\n   {\n     return FormatterMap.sharedInstance();\n   }\n \n+  @Override\n   public int getTwoDigitYearStart()\n   {\n     Integer twoDigitYearStart  = (Integer) _bean.getProperty(\n@@ -523,6 +555,7 @@ public int getTwoDigitYearStart()\n     return 1950;\n   }\n \n+  @Override\n   public Agent getAgent()\n   {\n     if (_agent == null)\n@@ -559,17 +592,15 @@ int __getPageFlowScopeLifetime()\n \n   private void _addTargets(Object key)\n   {\n-    Map pl = _getPartialListeners();\n-    Set listeners = (Set) pl.get(key);\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n+    Set<UIComponent> listeners = pl.get(key);\n     if (listeners != null)\n     {\n       // protect from infinite recursion\n       pl.remove(key);\n \n-      Iterator iter = listeners.iterator();\n-      while (iter.hasNext())\n+      for(UIComponent listener : listeners)\n       {\n-        UIComponent listener = (UIComponent) iter.next();\n         addPartialTarget(listener);\n         // This target will be re-rendered, re-render anything that's\n         // listening on it also.\n@@ -630,19 +661,19 @@ private UIXCookie _getUIXCookie()\n     return null;\n   }\n \n-  private Map _getPartialListeners()\n+  private Map<UIComponent, Set<UIComponent>> _getPartialListeners()\n   {\n     if (_partialListeners == null)\n-      _partialListeners = new HashMap();\n+      _partialListeners = new HashMap<UIComponent, Set<UIComponent>>();\n \n     return _partialListeners;\n   }\n \n \n   private RequestContextBean _bean;\n   private HelpProvider        _provider;\n-  private Map                 _partialListeners;\n-  private Set                 _partialTargets = new HashSet();\n+  private Map<UIComponent, Set<UIComponent>> _partialListeners;\n+  private Set<String>         _partialTargets;\n   private Agent               _agent;\n \n   private DialogServiceImpl   _dialogService;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java",
                "sha": "31a54e02f67926b5252c4ad046622375b998541e",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java",
                "patch": "@@ -58,6 +58,7 @@ static public void markPostback(FacesContext context)\n     context.getExternalContext().getRequestMap().remove(_POSTBACK_KEY);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void afterPhase(PhaseEvent event)\n   {\n     if (event.getPhaseId() == PhaseId.RESTORE_VIEW)\n@@ -83,6 +84,7 @@ public void afterPhase(PhaseEvent event)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void beforePhase(PhaseEvent event)\n   {\n     // Ensure that the implicit object gets created.  In general,\n@@ -123,9 +125,10 @@ public PhaseId getPhaseId()\n   // Create the RequestContext if necessary;  ideally, this is unnecessary\n   // because our filter will have executed - but if not, deal.\n   //\n+  @SuppressWarnings(\"unchecked\")\n   static private void _createContextIfNecessary(FacesContext fContext)\n   {\n-    Map requestMap = fContext.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = fContext.getExternalContext().getRequestMap();\n     Boolean createdContext = (Boolean)\n       requestMap.get(_CREATED_CONTEXT_KEY);\n     if (createdContext == null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java",
                "sha": "f235543303f15b6ff795dcec3a37b65500b6c93a",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 15,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java",
                "patch": "@@ -15,9 +15,8 @@\n */\n package org.apache.myfaces.trinidadinternal.convert;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Calendar;\n-import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n \n@@ -27,7 +26,8 @@ public BaseConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source instanceof Calendar)\n     {\n@@ -62,25 +62,36 @@ public Object convert(Object source, Class targetType)\n       source.getClass() + \" to:\"+targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n+    ArrayList<Class<?>> list = new ArrayList<Class<?>>(1);\n     if (Date.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Calendar.class);\n+      list.add(Calendar.class);\n     }\n-    if (Calendar.class.isAssignableFrom(sourceType))\n+    else if (Calendar.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Date.class);\n+      list.add(Date.class);\n     }\n-    if (Number.class.isAssignableFrom(sourceType))\n+    else if (Number.class.isAssignableFrom(sourceType))\n     {\n-      return Arrays.asList(new Class[] {\n-        Byte.class, Double.class, Float.class, \n-        Integer.class, Long.class, Short.class,\n-        Byte.TYPE, Double.TYPE, Float.TYPE, // bug 4891181\n-        Integer.TYPE, Long.TYPE, Short.TYPE}\n-        );\n+      list.ensureCapacity(12);\n+      list.add(Byte.class);\n+      list.add(Double.class);\n+      list.add(Float.class);\n+      list.add(Integer.class);\n+      list.add(Long.class);\n+      list.add(Short.class);\n+      list.add(Byte.TYPE);\n+      list.add(Double.TYPE);\n+      list.add(Float.TYPE); // bug 4891181\n+      list.add(Integer.TYPE);\n+      list.add(Long.TYPE);\n+      list.add(Short.TYPE);\n     }\n-    return Collections.EMPTY_LIST;\n+    \n+    return list;\n   }\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java",
                "sha": "00f7bd495bd0cf50fbe8ea5aedc35b8857231cec",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java",
                "patch": "@@ -58,6 +58,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.ByteConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java",
                "sha": "ac0ceb1ecf8c305dd84c7d3c10de46267cc00678",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java",
                "patch": "@@ -17,7 +17,6 @@\n \n import java.util.Map;\n \n-import javax.faces.application.FacesMessage;\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n \n@@ -43,6 +42,7 @@ public String getLibKey(FacesContext context, UIComponent component)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -66,7 +66,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       // FIX - figure out size!!!\n       StringBuffer buff = new StringBuffer();\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n       // =-=JRF Only if Javascript...\n       if (requestMap.get(_PATTERN_WRITTEN_KEY) == null)\n       {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java",
                "sha": "e149fe1be0e1c21b762f8d801dd626068f1e034a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java",
                "patch": "@@ -17,17 +17,17 @@\n \n class ConvertException extends RuntimeException\n {\n-  public ConvertException(Object source, Class targetType, Throwable error)\n+  public ConvertException(Object source, Class<?> targetType, Throwable error)\n   {\n     super(_getMessage(source, targetType), error);\n   }\n   \n-  public ConvertException(Object source, Class targetType)\n+  public ConvertException(Object source, Class<?> targetType)\n   {\n     super(_getMessage(source, targetType));\n   }\n   \n-  private static String _getMessage(Object source, Class targetType)\n+  private static String _getMessage(Object source, Class<?> targetType)\n   {\n     return \"Could not convert instance:\"+source +\n       \" of type:\"+source.getClass()+\" into type:\"+targetType;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java",
                "sha": "b574530a171ad8d738bc5484533995764c183fd9",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java",
                "patch": "@@ -149,7 +149,7 @@ private static final Object _getLabel(\n    */\n   static public Converter createConverter(\n     FacesContext context,\n-    Class        converterType)\n+    Class<?>     converterType)\n   {\n     // Don't bother for Strings and Objects;  note that the 1.1_01 RI\n     // returns null, but the spec requires a FacesException, and MyFaces",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java",
                "sha": "3b340f73db7c2fa5d2786e77640686c5b1c1722e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java",
                "patch": "@@ -66,6 +66,7 @@ public DateTimeConverter(String pattern, String secondaryPattern)\n     super(pattern, secondaryPattern);\n   }\n \n+  @Override\n   public String getAsString(FacesContext context, UIComponent component, Object value)\n   {\n     if (value == null)\n@@ -81,6 +82,7 @@ public String getAsString(FacesContext context, UIComponent component, Object va\n   }\n \n \n+  @Override\n   public Object getAsObject(FacesContext context, UIComponent component, String value)\n   {\n     Object date = super.getAsObject(context, component, value);\n@@ -107,7 +109,7 @@ static Object __typeConvert(\n     ValueBinding binding = component.getValueBinding(\"value\");\n     if (binding != null)\n     {\n-      Class expectedType = binding.getType(context);\n+      Class<?> expectedType = binding.getType(context);\n       // Sometimes the type might be null, if it cannot be determined:\n       if ((expectedType != null) && (!expectedType.isAssignableFrom(value.getClass())))\n       {\n@@ -132,6 +134,7 @@ static Object __typeConvert(\n     return value;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -154,7 +157,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       FormRenderer.addPatternMapping( clientId,\n                                       getExample(context));\n       // =-=AEW Only if Javascript...\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n \n       // this fetch could be at the place where we append, but has been\n       // moved ahead to optimize use of StringBuffer\n@@ -305,6 +310,7 @@ public int getColumns()\n     return len;\n   }\n \n+  @Override\n   protected Date getDate(FacesContext context, UIComponent component)\n   {\n     if (false)\n@@ -339,6 +345,7 @@ protected Date getDate(FacesContext context, UIComponent component)\n    * TimeZone names of Java, since these names are not available in\n    * client side JavaScript.\n    */\n+  @Override\n   protected TimeZone getFormattingTimeZone(TimeZone tZone)\n   {\n     TimeZone zone = (TimeZone)tZone.clone();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java",
                "sha": "83421a912f46090209943e42429fd1f46751ed6b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java",
                "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.DoubleConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java",
                "sha": "9eca2711668eb449ebd5913a8846b969d1366670",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java",
                "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.FloatConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java",
                "sha": "b7fc27ba4a0fc92bcdea74ea9682607b87490c35",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java",
                "patch": "@@ -31,7 +31,7 @@\n    * targetType.\n    * @return an instance of the targetType.\n    */\n-  public abstract Object convert(Object source, Class targetType);\n+  public abstract Object convert(Object source, Class<?> targetType);\n     \n   /**\n    * Gets all the supported targetTypes for the given sourceType.\n@@ -40,5 +40,5 @@\n    * @return Each item is of type {@link Class}. An empty list must be\n    * returned if the given sourceType cannot be converted into anything.\n    */\n-  public abstract List getTargetTypes(Class sourceType);\n+  public abstract List<Class<?>> getTargetTypes(Class<?> sourceType);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java",
                "sha": "1c06a9d5f130ea05e903cb914c403303191d69d8",
                "status": "modified"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 29,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java",
                "patch": "@@ -37,7 +37,8 @@\n {\n   private GenericConverterFactory()\n   {\n-    _converters = new ArrayList(3);\n+    _cache = new HashMap<Key, GenericConverter>(16);\n+    _converters = new ArrayList<GenericConverter>(3);\n     registerConverter(new SqlConverter());\n     registerConverter(new BaseConverter());\n   }\n@@ -55,7 +56,7 @@ private GenericConverterFactory()\n    * requests for the same source and target types will be fast.\n    * @return null if there is no such converter.\n    */\n-  public GenericConverter getConverter(Class sourceType, Class targetType)\n+  public GenericConverter getConverter(Class<?> sourceType, Class<?> targetType)\n   {\n     Key key = new Key(sourceType, targetType);\n     // check the cache first:\n@@ -69,11 +70,11 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n     // can be used to perform this conversion.\n     // initial node in chain:\n     Node start = new Node(null, null, sourceType);\n-    LinkedList sourcesToBeSearched = new LinkedList();\n+    LinkedList<Node> sourcesToBeSearched = new LinkedList<Node>();\n     sourcesToBeSearched.add(start);\n     // cache to store all the classes we've tested already. This is to\n     // avoid our chains from looping indefinitely:\n-    Set cache  = new HashSet(16);\n+    Set<Class<?>> cache  = new HashSet<Class<?>>(16);\n     GenericConverter converter = _findConverter(sourcesToBeSearched, targetType, cache);\n     if (converter == null)\n     {\n@@ -98,19 +99,19 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n    * @return null if no converter was found.\n    */\n   private GenericConverter _findConverter(\n-    LinkedList sourcesToBeSearched,\n-    Class targetType, \n-    Set cache)\n+    LinkedList<Node> sourcesToBeSearched,\n+    Class<?> targetType, \n+    Set<Class<?>> cache)\n   {\n     while(!sourcesToBeSearched.isEmpty())\n     {\n-      Node source = (Node) sourcesToBeSearched.removeFirst();\n+      Node source = sourcesToBeSearched.removeFirst();\n       // loop through all the converters and see what types they can turn \n       // the current sourceType into \n       // (the current sourceType is source.targetType):\n       for(int j=0,jsz=_converters.size(); j<jsz; j++)\n       {\n-        GenericConverter conv = (GenericConverter) _converters.get(j);\n+        GenericConverter conv = _converters.get(j);\n         // loop though all the targetTypes on this converter to see\n         // if we can find the one we're looking for:\n         if (_searchTargetTypes(sourcesToBeSearched, source, conv, targetType,\n@@ -142,17 +143,17 @@ private GenericConverter _findConverter(\n    * currentSource.targetType into searchType.\n    */\n   private boolean _searchTargetTypes(\n-    List sourcesToBeSearched,\n+    List<Node> sourcesToBeSearched,\n     Node currentSource,\n     GenericConverter currentConverter,\n-    Class searchType,\n-    Set cache)\n+    Class<?> searchType,\n+    Set<Class<?>> cache)\n   {\n-    Class sourceType = currentSource.targetType;\n-    List targetTypes = currentConverter.getTargetTypes(sourceType);\n+    Class<?> sourceType = currentSource.targetType;\n+    List<Class<?>> targetTypes = currentConverter.getTargetTypes(sourceType);\n     for(int i=0,sz=targetTypes.size(); i<sz; i++)\n     {\n-      Class targetType = (Class) targetTypes.get(i);\n+      Class<?> targetType = targetTypes.get(i);\n       // check to see if we've seen this targetType before:\n       if (cache.add(targetType))\n       {\n@@ -188,7 +189,7 @@ public void registerConverter(GenericConverter converter)\n    * @param targetType the required type.\n    * @return null, if the source is null.\n    */\n-  public Object convert(Object source, Class targetType)\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return null;\n@@ -209,7 +210,7 @@ public Object convert(Object source, Class targetType)\n    * into the specified targetType\n    * @return true if conversion is possible.\n    */\n-  public boolean isConvertible(Object source, Class targetType)\n+  public boolean isConvertible(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return false; // bug 4589048\n@@ -221,13 +222,30 @@ public boolean isConvertible(Object source, Class targetType)\n     return converter != null;\n   }\n   \n-  private final Map _cache = new HashMap(16);\n-  private final List _converters;\n-  private static final Object _NULL = Node.class; // reuse an object\n+  private final Map<Key, GenericConverter> _cache;\n+  private final List<GenericConverter> _converters;\n+  // 2006-08-02: -= Simon Lessard =-\n+  //             Using a GenericConverter null value instead \n+  //             of Node.class to be typesafe\n+  private static final GenericConverter _NULL = new GenericConverter()\n+  {\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n+    {\n+      return null;\n+    }\n+    \n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n+    {\n+      return Collections.EMPTY_LIST;\n+    }\n+  };\n \n   private static final class Node\n   {\n-    public Node(Node previous, GenericConverter converter, Class targetType)\n+    public Node(Node previous, GenericConverter converter, Class<?> targetType)\n     {\n       this.previous = previous;\n       this.converter = converter;\n@@ -244,7 +262,7 @@ public Object convert(Object source)\n       return source;\n     }\n     \n-    public Class getSourceType()\n+    public Class<?> getSourceType()\n     {\n       if (previous == null)\n         return targetType;\n@@ -253,12 +271,12 @@ public Class getSourceType()\n     \n     public final Node previous;\n     public final GenericConverter converter;\n-    public final Class targetType;\n+    public final Class<?> targetType;\n   }\n   \n   private static final class Key\n   {\n-    public Key(Class source, Class target)\n+    public Key(Class<?> source, Class<?> target)\n     {\n       assert !source.equals(target);\n \n@@ -268,11 +286,13 @@ public Key(Class source, Class target)\n       _hc = source.hashCode() + target.hashCode();\n     }\n   \n+    @Override\n     public int hashCode()\n     {\n       return _hc;\n     }\n     \n+    @Override\n     public boolean equals(Object other)\n     {\n       if (this == other)\n@@ -286,18 +306,20 @@ public boolean equals(Object other)\n     }\n     \n     private final int _hc;  \n-    private final Class _source, _target;\n+    private final Class<?> _source;\n+    private final Class<?> _target;\n   }\n   \n   private static final class CompositeConverter extends GenericConverter\n   {\n-    public CompositeConverter(Node source, GenericConverter conv, Class targetType)\n+    public CompositeConverter(Node source, GenericConverter conv, Class<?> targetType)\n     {\n       assert source != null;\n       _chain = new Node(source, conv, targetType) ;\n     }\n \n-    public Object convert(Object source, Class targetType)\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n     {\n       if (targetType.isAssignableFrom(_chain.targetType))\n       {\n@@ -307,11 +329,15 @@ public Object convert(Object source, Class targetType)\n         throw new IllegalArgumentException(\"Cannot convert to:\"+targetType);\n     }\n \n-    public List getTargetTypes(Class sourceType)\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n     {\n       if (_chain.getSourceType().isAssignableFrom(sourceType))\n       {\n-        return Collections.singletonList(_chain.targetType);\n+        List<Class<?>> list = new ArrayList<Class<?>>(1);\n+        list.add(_chain.targetType);\n+        return list;\n       }\n       return Collections.EMPTY_LIST;\n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java",
                "sha": "582bd692a13dd6f9c581dc34b4f6fcf43df86f06",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java",
                "patch": "@@ -62,6 +62,7 @@\n \n \n  \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java",
                "sha": "cd8d250ace2984ffbb194697807c12fa87b85b00",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java",
                "patch": "@@ -60,6 +60,7 @@\n         \"org.apache.myfaces.trinidad.convert.LongConverter.CONVERT\";\n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java",
                "sha": "0f3ff65f45a503a94daa847888006d6c296e0d8f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java",
                "patch": "@@ -25,6 +25,7 @@ public NumberConverter()\n   {\n   }\n   \n+  @Override\n   public Object getAsObject(\n     FacesContext context,\n     UIComponent component,\n@@ -41,6 +42,7 @@ public Object getAsObject(\n     return number;\n   }\n   \n+  @Override\n   public String getAsString(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java",
                "sha": "f61815c60616481ee5bfc1a10509218253f2eacd",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java",
                "patch": "@@ -60,6 +60,7 @@\n \n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java",
                "sha": "20c15243248c7ec40f87574a8bb50752c86130d3",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 9,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java",
                "patch": "@@ -19,7 +19,7 @@\n import java.sql.Time;\n import java.sql.Timestamp;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n \n@@ -32,7 +32,8 @@ public SqlConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     java.util.Date jDate = (java.util.Date) source;\n     if (targetType.isAssignableFrom(Date.class))\n@@ -50,16 +51,17 @@ public Object convert(Object source, Class targetType)\n     throw new ConvertException(source, targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n     if (java.util.Date.class.isAssignableFrom(sourceType))\n     {\n-      Class[] types = new Class[] {\n-        Date.class,\n-        Time.class,\n-        Timestamp.class\n-      };\n-      return Arrays.asList(types);\n+      List<Class<?>> list = new ArrayList<Class<?>>(3);\n+      list.add(Date.class);\n+      list.add(Time.class);\n+      list.add(Timestamp.class);\n+      return list;\n     }\n     return Collections.EMPTY_LIST;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java",
                "sha": "a4b36465b27160b3b2d918519c9f5ebd282b4ed4",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java",
                "patch": "@@ -27,9 +27,9 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n-public class FormatterMap extends AbstractMap\n+public class FormatterMap extends AbstractMap<Object, Map<Object,String>>\n {\n-  static public Map sharedInstance()\n+  static public Map<Object, Map<Object,String>> sharedInstance()\n   {\n     return _INSTANCE;\n   }\n@@ -38,33 +38,40 @@ private FormatterMap()\n   {\n   }\n \n-  public Object get(Object key)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Map<Object,String> get(Object key)\n   {\n     if (key == null)\n       return Collections.EMPTY_MAP;\n \n     return new FunctorMap(key);\n   }\n \n-  public Set entrySet()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Set<Map.Entry<Object, Map<Object,String>>> entrySet()\n   {\n     return Collections.EMPTY_SET;\n   }\n \n-  static private final class FunctorMap extends AbstractMap\n+  static private final class FunctorMap extends AbstractMap<Object, String>\n   {\n     public FunctorMap(Object key)\n     {\n       // Assumes check against null above\n       _format = new FastMessageFormat(key.toString());\n     }\n \n-    public Object get(Object key)\n+    @Override\n+    public String get(Object key)\n     {\n       return _format.format(new Object[]{key});\n     }\n \n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<Object, String>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n@@ -73,5 +80,5 @@ public Set entrySet()\n   }\n \n   \n-  static private final Map _INSTANCE = new FormatterMap();\n+  static private final Map<Object, Map<Object,String>> _INSTANCE = new FormatterMap();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java",
                "sha": "a5ec8b83307e3454f1c63578a3d95ff92cc1eb1f",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java",
                "patch": "@@ -61,12 +61,12 @@\n {\n   public static final String FRONT_PAGE_KEY = \"frontPage\";\n \n-  public Map getHelpTopicMap()\n+  public Map<String, Object> getHelpTopicMap()\n   {\n     return _topicMap;\n   }\n \n-  public Map getHelpSystemMap()\n+  public Map<String, Object> getHelpSystemMap()\n   {\n     return _systemMap;\n   }\n@@ -99,33 +99,39 @@ public Map getHelpSystemMap()\n    */\n   protected abstract Object getHelpSystemValue(Object key);\n \n-  private class HelpTopicMap extends AbstractMap\n+  private class HelpTopicMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpTopicValue(key);\n     }\n   }\n \n-  private class HelpSystemMap extends AbstractMap\n+  private class HelpSystemMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpSystemValue(key);\n     }\n   }\n \n-  private Map _topicMap = new HelpTopicMap();\n-  private Map _systemMap = new HelpSystemMap();\n+  private Map<String, Object> _topicMap = new HelpTopicMap();\n+  private Map<String, Object> _systemMap = new HelpSystemMap();\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java",
                "sha": "df34ea7d580d115c425aeced510ad1775efef26f",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java",
                "patch": "@@ -67,7 +67,7 @@ public OracleHelpProvider(String ohwServletLocation)\n     }\n \n     _defaultOHWServletLocation = ohwServletLocation;\n-    _localeSpecificServlets = new OptimisticHashMap(13);\n+    _localeSpecificServlets = new OptimisticHashMap<Locale, String>(13);\n   }\n \n   /**\n@@ -101,6 +101,7 @@ public void registerLocaleSpecificServlet(Locale locale,\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   protected String getHelpTopicURL(Object key)\n   {\n     String helpURL = null;\n@@ -124,6 +125,7 @@ protected String getHelpTopicURL(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   protected String getHelpSystemURL(Object key)\n   {\n     if (HelpProvider.FRONT_PAGE_KEY.equals(key))\n@@ -163,7 +165,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n     //not then check language/country and lang only locales\n     if (_localeSpecificServlets.containsKey(desiredLocale))\n     {\n-      servletLocation = (String) _localeSpecificServlets.get(desiredLocale);\n+      servletLocation = _localeSpecificServlets.get(desiredLocale);\n     }\n     else\n     {\n@@ -184,7 +186,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n \n       if (matchingLocale != null)\n       {\n-        servletLocation = (String)_localeSpecificServlets.get(matchingLocale);\n+        servletLocation = _localeSpecificServlets.get(matchingLocale);\n       }\n \n       //cache the result of the search\n@@ -197,6 +199,6 @@ private String _getLocaleSpecificServlet(FacesContext context)\n   private static final String _TOPIC_PARAM = \"topic\";\n   private static final String _LOCALE_PARAM = \"locale\";\n   private String _defaultOHWServletLocation = null;\n-  private OptimisticHashMap _localeSpecificServlets = null;\n+  private OptimisticHashMap<Locale, String> _localeSpecificServlets = null;\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java",
                "sha": "5bee566cea71d4e3e4a7fb19ca3947cfa27289a4",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java",
                "patch": "@@ -43,6 +43,7 @@\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   public Object getHelpTopicValue(Object key)\n   {\n     return _wrapURL(getHelpTopicURL(key));\n@@ -55,6 +56,7 @@ public Object getHelpTopicValue(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   public Object getHelpSystemValue(Object key)\n   {\n     return _wrapURL(getHelpSystemURL(key));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java",
                "sha": "186132610e075f50d2c3f1d3c4f60c3cf0f72e67",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java",
                "patch": "@@ -22,7 +22,7 @@\n  * converts a EL expression into tokens.\n  * @author The Oracle ADF Faces Team\n  */\n-public class Tokenizer implements Iterator\n+public class Tokenizer implements Iterator<Tokenizer.Token>\n {\n   /**\n    * Creates a new Tokenizer\n@@ -44,7 +44,7 @@ public boolean hasNext()\n     return _curToken != null;\n   }\n     \n-  public Object next()\n+  public Tokenizer.Token next()\n   {\n     if (_curToken == null)\n       throw new NoSuchElementException();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java",
                "sha": "78d57574721394e8ea4278a0b9449ee596e79de5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java",
                "patch": "@@ -34,6 +34,7 @@ public TrinidadVariableResolver(VariableResolver decorated)\n     _decorated = decorated;\n   }\n \n+  @Override\n   public Object resolveVariable(FacesContext context, String name)\n   {\n     if (RequestContext.VARIABLE_NAME.equals(name))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java",
                "sha": "dce685730064797a45ca21be4c724540d557405f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java",
                "patch": "@@ -54,7 +54,7 @@ public void apply(FaceletContext faceletContext,\n       ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n       ActionSource actionSource = (ActionSource)parent;\n       ReturnActionListener listener = new ReturnActionListener();\n-      listener.setValueBinding(listener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n       actionSource.addActionListener(listener);\n     }\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java",
                "sha": "fc93767220cc13f38a712a84cecfd1880f8a6ad5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java",
                "patch": "@@ -56,9 +56,9 @@ public void apply(FaceletContext faceletContext,\n                                                             Object.class);\n       ActionSource actionSource= (ActionSource) parent;\n       SetActionListener listener = new SetActionListener();\n-      listener.setValueBinding(listener.FROM_KEY,\n+      listener.setValueBinding(SetActionListener.FROM_KEY,\n                                new LegacyValueBinding(fromExpression));\n-      listener.setValueBinding(listener.TO_KEY,\n+      listener.setValueBinding(SetActionListener.TO_KEY,\n                                new LegacyValueBinding(toExpression));\n       actionSource.addActionListener(listener);\n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java",
                "sha": "3effa214ff7ffdccbb85d4a9390e47e3206dd52a",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java",
                "patch": "@@ -45,6 +45,7 @@ public LiteralPropertyMetadata(Method method, TagAttribute attribute)\n       _attribute = attribute;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       if (_params == null)\n@@ -73,6 +74,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -98,13 +100,15 @@ public Metadata applyRule(\n     if (str == null)\n       return null;\n \n-    ArrayList list = new ArrayList();\n+    ArrayList<String> list = new ArrayList<String>();\n     StringTokenizer tokens = new StringTokenizer(str);\n     while (tokens.hasMoreTokens())\n+    {\n       list.add(tokens.nextToken());\n-    String[] strArray = new String[list.size()];\n-    return (String[]) list.toArray(strArray);\n+    }\n+    \n+    return list.toArray(new String[list.size()]);\n   }\n \n-  static private final Class _STRING_ARRAY_TYPE = (new String[0]).getClass();\n+  static private final Class<? extends String[]> _STRING_ARRAY_TYPE = (new String[0]).getClass();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java",
                "sha": "837257a74b84181946ad366d08057e31e4768646",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java",
                "patch": "@@ -57,6 +57,8 @@ public TrinidadComponentHandler(ComponentConfig config)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected MetaRuleset createMetaRuleset(Class type)\n   {\n     MetaRuleset m = super.createMetaRuleset(type);\n@@ -67,6 +69,7 @@ protected MetaRuleset createMetaRuleset(Class type)\n     return m;\n   }\n \n+  @Override\n   protected void onComponentPopulated(FaceletContext context,\n                                      UIComponent component,\n                                      UIComponent parent)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java",
                "sha": "74f75ba9301af6ba0aa4df4892fa75e37535c453",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java",
                "patch": "@@ -48,6 +48,7 @@ public ListenerPropertyMetadata(Method method, TagAttribute attribute, Class[] p\n       _paramList = paramList;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       MethodExpression expr =\n@@ -74,6 +75,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -92,17 +94,17 @@ public Metadata applyRule(\n           return null;\n \n         // It should return an array of FooListener objects\n-        Class arrayType = listeners.getPropertyType();\n+        Class<?> arrayType = listeners.getPropertyType();\n         if (!arrayType.isArray())\n           return null;\n         \n         // Ignore non-ADF types\n-        Class listenerClass = arrayType.getComponentType();\n+        Class<?> listenerClass = arrayType.getComponentType();\n         if (!listenerClass.getName().startsWith(\"org.apache.myfaces.trinidad.\"))\n           return null;\n \n         // Turn that into an Event to get the signature\n-        Class eventClass = _getEventClass(listenerClass);\n+        Class<?> eventClass = _getEventClass(listenerClass);\n         if (eventClass == null)\n           return null;\n \n@@ -114,7 +116,7 @@ public Metadata applyRule(\n     return null;\n   }\n \n-  static private Class _getEventClass(Class listenerClass)\n+  static private Class<?> _getEventClass(Class<?> listenerClass)\n   {\n     String listenerName = listenerClass.getName();\n     if (!listenerName.endsWith(\"Listener\"))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java",
                "sha": "9e4fb07b870acb8ea5e6431d065822877a57bdba",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java",
                "patch": "@@ -42,8 +42,8 @@\n    */\n   abstract public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java",
                "sha": "e1e6025632b7fb7e2067b8f8962c8a47b3a19a1b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java",
                "patch": "@@ -50,5 +50,5 @@\n    * @see ImageRenderer\n    * @see ImageConstants\n    */\n-  public Map getRenderProperties(ImageContext context);\n+  public Map<Object, Object> getRenderProperties(ImageContext context);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java",
                "sha": "ff0d73fcd47904826d211bb287cc42a50a25defe",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java",
                "patch": "@@ -38,7 +38,7 @@ private ImageProviderRequestImpl() {}\n   public ImageProviderRequestImpl(\n     String     namespaceURI,\n     String     name,\n-    Map renderProperties)\n+    Map<Object, Object> renderProperties)\n   {\n     if (namespaceURI == null) \n     {\n@@ -74,12 +74,12 @@ public String getLocalName()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n     return _properties;\n   }\n \n   private String     _namespace;\n   private String     _name;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java",
                "sha": "5f83f0a80f0a85bb7d34f4d4d2e018dce493c41a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java",
                "patch": "@@ -17,6 +17,8 @@\n package org.apache.myfaces.trinidadinternal.image;\n import java.util.Collection;\n \n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n+\n \n /**\n  * ImageProviderResponse objects are returned by the ImageProvider\n@@ -62,5 +64,5 @@\n    *\n    * @see org.apache.myfaces.trinidadinternal.image.util.MapArea\n    */\n-  public Collection getMapAreas();\n+  public Collection<MapArea> getMapAreas();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java",
                "sha": "8332c16390c2912c08aed984f3799bfba09ca2e8",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java",
                "patch": "@@ -50,7 +50,7 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java",
                "sha": "35074d92fd73acef347580268a55b60578d3c4da",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 12,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java",
                "patch": "@@ -17,8 +17,6 @@\n package org.apache.myfaces.trinidadinternal.image;\n \n import java.util.Map;\n-import java.util.Iterator;\n-\n \n import org.apache.myfaces.trinidad.util.ArrayMap;\n \n@@ -33,10 +31,11 @@\n   public ImageTypeImpl(\n     String namespaceURI,\n     String name,\n-    Map properties)\n+    Map<Object, Object> properties)\n   {\n     _namespace = namespaceURI;\n     _name = name;\n+    _properties = new ArrayMap<Object, Object>();\n \n     setProperties(properties);\n   }\n@@ -105,27 +104,24 @@ synchronized public void setProperty(Object key, Object value)\n    * This method is not defined on ImageType or MutableImageType -\n    * it is provided as a convenience for ImageTypeManager.\n    */\n-  public void setProperties(Map properties)\n+  public void setProperties(Map<Object, Object> properties)\n   {\n     if (properties == null)\n       return;\n-\n-    Iterator keys = properties.keySet().iterator();\n-    while (keys.hasNext())\n+    \n+    for(Map.Entry<Object, Object> entry : properties.entrySet())\n     {\n-      Object key = keys.next();\n-      Object value = properties.get(key);\n-\n-      setProperty(key, value);\n+      setProperty(entry.getKey(), entry.getValue());\n     }\n   }\n \n+  @Override\n   public String toString()\n   {\n     return getClass().getName() + \"[\" + _namespace + \", \" + _name + \"]\";\n   }\n \n   private String   _namespace;\n   private String   _name;\n-  private ArrayMap _properties = new ArrayMap();\n+  private ArrayMap<Object, Object> _properties;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java",
                "sha": "20c8a235925f4ba1fbfb208ba219007e9963046a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java",
                "patch": "@@ -93,7 +93,7 @@ synchronized public ImageType getImageType(String namespace, String name)\n   synchronized public ImageType registerImageType(\n     String namespace,\n     String name,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     ImageType type = getImageType(namespace, name);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java",
                "sha": "d5f44a4ea1579fc6a81a37952cfd6e391f51f3a3",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 14,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java",
                "patch": "@@ -83,10 +83,11 @@ public Painter getPainter()\n       * properties that describe what to render.  A PaintContext\n       * object is created using the given Map of properties.\n       */\n+    @Override\n     public Image renderImage(\n       ImageContext imageContext,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object, Object> requestedProperties,\n+      Map<Object, Object> responseProperties\n       )\n     {\n         if (!isRenderable(imageContext, requestedProperties))\n@@ -155,7 +156,7 @@ public Image renderImage(\n      */\n     protected Painter getPainter(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return getPainter();\n@@ -173,7 +174,7 @@ protected Painter getPainter(\n      */\n     protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return GraphicsUtils.isGraphicalEnvironment();\n@@ -183,7 +184,9 @@ protected boolean isRenderable(\n      * Returns the foreground color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintForeground(ImageContext context, Map d)\n+    protected Color getPaintForeground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(FOREGROUND_KEY);\n     }\n@@ -192,7 +195,9 @@ protected Color getPaintForeground(ImageContext context, Map d)\n      * Returns the background color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintBackground(ImageContext context, Map d)\n+    protected Color getPaintBackground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(BACKGROUND_KEY);\n     }\n@@ -201,7 +206,7 @@ protected Color getPaintBackground(ImageContext context, Map d)\n      * Returns the font color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Font getPaintFont(Map d)\n+    protected Font getPaintFont(Map<Object,Object> d)\n     {\n       Object o = d.get(FONT_KEY);\n \n@@ -211,7 +216,7 @@ protected Font getPaintFont(Map d)\n       return (Font)d.get(FONT_KEY);\n     }\n \n-    protected Object getPaintData(Object key, Map d)\n+    protected Object getPaintData(Object key, Map<Object,Object> d)\n     {\n       return d.get(key);\n     }\n@@ -223,8 +228,8 @@ protected Object getPaintData(Object key, Map d)\n     protected PaintContext createPaintContext(\n       ImageContext imageContext,\n       BufferedImage image,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object,Object> requestedProperties,\n+      Map<Object,Object> responseProperties\n       )\n     {\n       return\n@@ -250,8 +255,8 @@ protected void disposePaintContext(PaintContext context)\n         public Context(\n           ImageContext imageContext,\n           BufferedImage image,\n-          Map requestedProperties,\n-          Map responseProperties\n+          Map<Object,Object> requestedProperties,\n+          Map<Object,Object> responseProperties\n           )\n \n         {\n@@ -395,8 +400,8 @@ public int getReadingDirection()\n \n         private Graphics2D            _graphics;\n         private ImageContext          _imageContext;\n-        private Map            _requested;\n-        private Map            _response;\n+        private Map<Object,Object>    _requested;\n+        private Map<Object,Object>    _response;\n         private int                   _direction;\n \n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java",
                "sha": "05c433615a71225284dcc17b01217baa8fbe8bb8",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java",
                "patch": "@@ -46,7 +46,7 @@ public Object instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java",
                "sha": "78e5110fb9add24ce009bbfb9f83337db443250c",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java",
                "patch": "@@ -36,7 +36,7 @@\n    */\n   public AccentColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -47,11 +47,11 @@ public AccentColorizedIconKey(\n    */\n   protected AccentColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     super(context, source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -62,6 +62,7 @@ protected AccentColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #AccentColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected AccentColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -83,6 +84,7 @@ protected AccentColorizedIconKey(\n    * Returns the color key for accent colorized icons: \n    * ImageConstants.DARK_ACCENT_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_ACCENT_COLOR_KEY;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java",
                "sha": "4f45d56b5c7cb70ad23f5294b31590c896e79def",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 17,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java",
                "patch": "@@ -44,11 +44,11 @@\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n-    Class lookAndFeel = (Class)properties.get(LAF_KEY);\n+    Class<?> lookAndFeel = (Class)properties.get(LAF_KEY);\n     int direction = CacheUtils.getReadingDirection(context, properties);\n     Color color = (Color)properties.get(getColorKey());\n     Color surroundingColor = (Color)properties.get(SURROUNDING_COLOR_KEY);\n@@ -61,11 +61,11 @@ protected BaseColorizedIconKey(\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     _init(source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -75,6 +75,7 @@ protected BaseColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #BaseColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected BaseColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -111,6 +112,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -132,6 +134,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() |\n@@ -144,9 +147,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n     properties.put(getColorKey(), getColor());\n     properties.put(SURROUNDING_COLOR_KEY, _surroundingColor);\n@@ -168,7 +171,7 @@ protected String getSource()\n   /**\n    * Returns the lookAndFeel property.\n    */\n-  protected Class getLookAndFeel()\n+  protected Class<?> getLookAndFeel()\n   {\n     return _lookAndFeel;\n   }\n@@ -200,7 +203,7 @@ protected void setSource(String source)\n   /**\n    * Sets the lookAndFeel property.\n    */\n-  protected void setLookAndFeel(Class lookAndFeel)\n+  protected void setLookAndFeel(Class<?> lookAndFeel)\n   {\n     _lookAndFeel = lookAndFeel;\n   }\n@@ -223,11 +226,11 @@ protected void setColor(Color color)\n   }\n \n   private void _init(\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor\n     )\n   {\n     _lookAndFeel = lookAndFeel;\n@@ -248,7 +251,7 @@ private void _init(\n   private int         _direction;\n   private Color       _color;\n   private Color       _surroundingColor;\n-  private Class       _lookAndFeel;\n+  private Class<?>    _lookAndFeel;\n \n   // The size for the render properties ArrayMap.  We leave room for\n   // the SOURCE_INPUT_STREAM_PROVIDER_KEY property, typically provided",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java",
                "sha": "a76750f17165573e5a74edce3ca9b6b791a72665",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java",
                "patch": "@@ -37,11 +37,12 @@\n {\n   public Cache()\n   {\n+    _cache = new OptimisticHashMap<Object, CacheEntry>(_CACHE_SIZE);\n   }\n \n   public CacheEntry get(ImageContext context, Object key)\n   {\n-    CacheEntry entry = (CacheEntry)_cache.get(key);\n+    CacheEntry entry = _cache.get(key);\n     if (entry == null)\n       return null;\n \n@@ -81,7 +82,7 @@ public void put(ImageContext context, Object key, CacheEntry entry)\n     {\n       // First check to see if we have already got an entry -\n       // perhaps for some other encoding\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n       if (topEntry == null)\n       {\n         _cache.put(key, entry);\n@@ -123,7 +124,7 @@ public void remove(\n   {\n     synchronized (_cache)\n     {\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n \n       if (topEntry == entry)\n       {\n@@ -258,7 +259,7 @@ private char _getValidCharacter(char c)\n       return 0x5f;\n \n     // Convert to hexidecimal string\n-    String hex = Integer.toHexString((int)c);\n+    String hex = Integer.toHexString(c);\n \n     // To keep names short, just pick off the last character - it's the\n     // most variable digit.\n@@ -311,13 +312,17 @@ private static boolean _isMissRetryEntry(CacheEntry entry)\n   }\n \n   // Hashtable of CacheKeys to CacheEntrys\n-  private OptimisticHashMap _cache = new OptimisticHashMap(_CACHE_SIZE);\n+  private OptimisticHashMap<Object, CacheEntry> _cache;\n \n   // List of base names.\n   // =-=ags We use a Hashtable so that lookups are quick.  However,\n   // this probably should just be a sorted list and do a binary\n   // search, since we don't care about the value, just the key.\n-  private Hashtable _names = new Hashtable(_NAMES_SIZE);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtale is synchronized (thus slow). If thread safety is not \n+  //        required, HashMap would be better,\n+  private Hashtable<String, Boolean> _names = \n+    new Hashtable<String, Boolean>(_NAMES_SIZE);\n \n   private static final int _CACHE_SIZE = 101;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java",
                "sha": "fb5d1f57af9d00583df7577b12eb10f32fdbbb97",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.myfaces.trinidadinternal.image.ImageProviderResponse;\n \n import org.apache.myfaces.trinidadinternal.image.encode.ImageEncoderManager;\n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n \n /** \n  * Cache entry data structure\n@@ -84,7 +85,7 @@ public String getEncoding()\n     return _encoding;\n   }\n \n-  public Collection getMapAreas()\n+  public Collection<MapArea> getMapAreas()\n   {\n     return null;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java",
                "sha": "0cb97a6f6e0c914c8beeeab333a5ab7e43b26b06",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java",
                "patch": "@@ -45,6 +45,6 @@\n    * @param context The image context\n    * @param property The dictionary of requested image properties\n    */\n-  public Object getCacheKey(ImageContext context, Map properties);\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties);\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java",
                "sha": "8efb4c7aea54191626af383ac8811f9b855db4bb",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java",
                "patch": "@@ -50,7 +50,7 @@ private CacheUtils() {}\n \n   public static int getReadingDirection(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     LocaleContext localeContext = context.getLocaleContext();\n@@ -75,7 +75,7 @@ public static int getReadingDirection(\n \n   // Gets a Boolean value\n   public static boolean getBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean defaultValue\n     )\n@@ -89,7 +89,7 @@ public static boolean getBoolean(\n \n   // Puts a Boolean value into a dictionary\n   public static void putBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean value\n     )\n@@ -98,7 +98,7 @@ public static void putBoolean(\n   }\n \n   // Tests for TEXT_ANTIALIAS_KEY\n-  public static boolean isTextAntialiased(Map properties)\n+  public static boolean isTextAntialiased(Map<Object, Object> properties)\n   {\n     return getBoolean(properties, ImageConstants.TEXT_ANTIALIAS_KEY, false);\n   }\n@@ -123,7 +123,7 @@ public static FontProxy getSharedFont(FontProxy font)\n     if (font == null)\n       return null;\n \n-    FontProxy sharedFont = (FontProxy)_sFontProxyCache.get(font);\n+    FontProxy sharedFont = _sFontProxyCache.get(font);\n     if (sharedFont != null)\n       return sharedFont;\n \n@@ -141,7 +141,7 @@ public static FontProxy getSharedFont(FontProxy font)\n    * Convenience method for getting a shared FontProxy for a font\n    * specified in a properties dictionary.\n    */\n-  public static FontProxy getSharedFont(Map properties, Object key)\n+  public static FontProxy getSharedFont(Map<Object, Object> properties, Object key)\n   {\n     return getSharedFont((FontProxy)properties.get(key));\n   }\n@@ -167,8 +167,8 @@ public static String base64Encode(int value)\n     return buffer.toString();\n   }\n \n-  private static final Map _sFontProxyCache = \n-    Collections.synchronizedMap(new LRUCache(50));\n+  private static final Map<FontProxy, FontProxy> _sFontProxyCache = \n+    Collections.synchronizedMap(new LRUCache<FontProxy, FontProxy>(50));\n \n   // Characters for base 64 encodings\n   private static final char[] _BASE_64_CHARS =",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java",
                "sha": "d06cdc144bb3ba8338f00ddf431cafe11db0c514",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java",
                "patch": "@@ -32,7 +32,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     if (properties.get(ImageConstants.DARK_COLOR_KEY) != null)\n       return new CoreColorizedIconKey(context, properties);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java",
                "sha": "5aedd30ca6af69ff85cac09aba297ee606a126ac",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java",
                "patch": "@@ -32,7 +32,7 @@\n  */\n public class ColorizedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(ImageContext context, Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java",
                "sha": "24d6cd622d2f62ee9c7b4aede43146f8b65fa9e7",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 10,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java",
                "patch": "@@ -46,7 +46,7 @@\n    */\n   public CompositeButtonKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String lookAndFeelId = (String)properties.get(LOOK_AND_FEEL_ID_KEY);\n@@ -144,6 +144,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     if (this == o)\n@@ -172,6 +173,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     // In order to implement font name wildcarding, we don't hash on font\n@@ -197,9 +199,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(LOOK_AND_FEEL_ID_KEY, _lookAndFeelId);\n     properties.put(NAME_KEY, _name);\n     properties.put(TEXT_KEY, _text);\n@@ -251,6 +253,7 @@ protected InputStreamProvider getBottomBackgroundIcon()\n     return null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     String propertiesString =\n@@ -398,7 +401,7 @@ private void _init(\n   }\n \n   private char _getChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key\n     )\n   {\n@@ -410,7 +413,7 @@ private char _getChar(\n   }\n \n   private void _putChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     char value\n     )\n@@ -482,15 +485,15 @@ private boolean _fontEquals(FontProxy font)\n   // Returns the InputStreamProvider for the icon with\n   // the specific key.\n   private InputStreamProvider _getIcon(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     iconKey\n     )\n   {\n     return (InputStreamProvider)properties.get(iconKey);\n   }\n \n   // Put the start icon in the specified properties dictionary\n-  private void _putStartIcon(Map properties)\n+  private void _putStartIcon(Map<Object, Object> properties)\n   {\n     if (_startIcon == null)\n       _startIcon = getStartIcon();\n@@ -500,7 +503,7 @@ private void _putStartIcon(Map properties)\n   }\n \n   // Put the end icon in the specified properties dictionary\n-  private void _putEndIcon(Map properties)\n+  private void _putEndIcon(Map<Object, Object> properties)\n   {\n     if (_endIcon == null)\n       _endIcon = getEndIcon();\n@@ -510,7 +513,7 @@ private void _putEndIcon(Map properties)\n   }\n \n   // Put the top background icon in the specified properties dictionary\n-  private void _putTopBackgroundIcon(Map properties)\n+  private void _putTopBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_topBackgroundIcon == null)\n       _topBackgroundIcon = getTopBackgroundIcon();\n@@ -520,7 +523,7 @@ private void _putTopBackgroundIcon(Map properties)\n   }\n \n   // Put the bottom background icon in the specified properties dictionary\n-  private void _putBottomBackgroundIcon(Map properties)\n+  private void _putBottomBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_bottomBackgroundIcon == null)\n       _bottomBackgroundIcon = getBottomBackgroundIcon();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java",
                "sha": "d25a76804c0b4a58d2e8e9923b3aa1914dbf678f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java",
                "patch": "@@ -31,7 +31,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     return new CompositeButtonKey(context, properties);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java",
                "sha": "181184a5b76cdbde62ba10fcdcf48421c12444d7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java",
                "patch": "@@ -30,7 +30,9 @@\n public class CompositeButtonNameProvider\n   implements NameProvider, ImageConstants\n {\n-  public String getName(ImageContext context, Map requestedProperties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> requestedProperties)\n   {\n     String name = (String)requestedProperties.get(ImageConstants.NAME_KEY);\n \n@@ -65,7 +67,7 @@ public String getName(ImageContext context, Map requestedProperties)\n   // Produces a hash code based on the requested properties\n   private int _hashCode(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     Object text = properties.get(TEXT_KEY);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java",
                "sha": "62260e872b6466f79c76b3d004cecda64a885d60",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 9,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java",
                "patch": "@@ -37,9 +37,9 @@\n   /**\n    * Implementation of PropertiesFilter.filterProperties()\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return new Defaults(context, properties);\n@@ -50,19 +50,20 @@ public Map filterProperties(\n    * WrappingMap which provides default values for\n    * missing properties.\n    */\n-  static private class Defaults extends WrappingMap\n+  static private class Defaults extends WrappingMap<Object, Object>\n     implements ImageConstants\n   {\n     public Defaults(\n       ImageContext context,\n-      Map   properties\n+      Map<Object, Object> properties\n       )\n     {\n       super(properties);\n \n       _context = context;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       Object value = super.get(key);\n@@ -90,7 +91,7 @@ public Object get(Object key)\n         return value;\n       }\n \n-      Map properties = getWrappedMap();\n+      Map<Object, Object> properties = getWrappedMap();\n \n       if (key.equals(ImageConstants.FOREGROUND_KEY))\n         return _getDefaultForeground(properties);\n@@ -104,20 +105,20 @@ public Object get(Object key)\n       return null;\n     }\n \n-    private Color _getDefaultForeground(Map properties)\n+    private Color _getDefaultForeground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultForeground(_context,\n                                                 _isDisabled(properties));\n     }\n \n-    private Color _getDefaultBackground(Map properties)\n+    private Color _getDefaultBackground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBackground(_context,\n                                                 _isDisabled(properties));\n     }\n \n \n-    private boolean _isDisabled(Map properties)\n+    private boolean _isDisabled(Map<Object, Object> properties)\n     {\n       Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -127,7 +128,7 @@ private boolean _isDisabled(Map properties)\n       return disabled.booleanValue();\n     }\n \n-    private Color _getDefaultBorderColor(Map properties)\n+    private Color _getDefaultBorderColor(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBorderColor(_context,\n                                                  _isDisabled(properties));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java",
                "sha": "d813e3839223be115a76084bc34f9107d3359cab",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java",
                "patch": "@@ -36,7 +36,7 @@\n    */\n   public CoreColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -48,7 +48,7 @@ public CoreColorizedIconKey(\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n-    Class  lookAndFeel,\n+    Class<?> lookAndFeel,\n     int    direction,\n     Color  color,\n     Color  surroundingColor)\n@@ -61,6 +61,7 @@ protected CoreColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #CoreColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -75,6 +76,7 @@ protected CoreColorizedIconKey(\n    * Returns the color key for core colorized icons:\n    * ImageConstants.DARK_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_COLOR_KEY;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java",
                "sha": "07e47cf7e46f55ae4697b6cd99793663b8ee7074",
                "status": "modified"
            },
            {
                "additions": 49,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java",
                "changes": 83,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 34,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java",
                "patch": "@@ -104,7 +104,7 @@ public static ImageProvider getSharedCache(\n     // fail due to insignificant path incosistencies.\n     realPath = _getCanonicalPath(realPath);\n \n-    ImageProvider cache = (ImageProvider)_sSharedCaches.get(realPath);\n+    ImageProvider cache = _sSharedCaches.get(realPath);\n \n     // If we didn't find a shared cache, create a new cache\n     // and cache it in the shared cache cache.  :-)\n@@ -118,7 +118,7 @@ public static ImageProvider getSharedCache(\n       // _sSharedCaches.\n       synchronized (_sSharedCaches)\n       {\n-        ImageProvider tmp = (ImageProvider)_sSharedCaches.get(realPath);\n+        ImageProvider tmp = _sSharedCaches.get(realPath);\n         if (tmp != null)\n         {\n           // Stick with tmp\n@@ -156,7 +156,7 @@ protected FileSystemImageCache(String realPath)\n     // Initialize our table of per-Locale caches.  Note on table size:\n     // We don't expect a single FileSystemImageCache to be serving up images\n     // for a huge number of different locales - using a small table size.\n-     _caches = new OptimisticHashMap(19);\n+     _caches = new OptimisticHashMap<String, Cache>(19);\n   }\n \n   /**\n@@ -236,7 +236,7 @@ public ImageProviderResponse getImage(\n       // may have been generated by another FileSystemImageCache instance\n       // running in a different process.  We need the request properties\n       // to do this, in order to produce the target file name.\n-      Map properties = _getFilteredProperties(context, type, request);\n+      Map<Object, Object> properties = _getFilteredProperties(context, type, request);\n \n       // If we don't have any properties, we can't render.\n       if (properties == null)\n@@ -349,7 +349,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n     Cache cache = null;\n \n     if (localized)\n-      cache = (Cache)_caches.get(language);\n+      cache = _caches.get(language);\n     else\n       cache = _globalCache;\n \n@@ -379,7 +379,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n       }\n       else\n       {\n-        cache = (Cache)_caches.get(language);\n+        cache = _caches.get(language);\n       }\n     }\n     else\n@@ -464,7 +464,7 @@ private CacheEntry _getImageFromFileSystem(\n     ImageType            type,\n     Cache                cache,\n     Object               key,\n-    Map           properties\n+    Map<Object, Object>  properties\n     ) throws CacheException\n   {\n     // We identify potential matches on the file system by checking\n@@ -537,7 +537,7 @@ private CacheEntry _generateImage(\n     ImageProviderRequest request,\n     Cache        cache,\n     Object       key,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -550,7 +550,9 @@ private CacheEntry _generateImage(\n     // 1. WIDTH_RESPONSE_KEY\n     // 2. HEIGHT_RESPONSE_KEY\n     // 3. IMAGE_MAP_AREAS_RESPONSE_KEY\n-    ArrayMap responseProperties = new ArrayMap(3);\n+    ArrayMap<Object, Object> responseProperties = \n+      new ArrayMap<Object, Object>(3);\n+    \n     byte[] imageData = null;\n \n     try\n@@ -711,7 +713,7 @@ private Object _loadImage(\n     assert (type != null);\n \n       // Get the properties from the request\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     // Get the base name for the URI (minus the extension)\n@@ -762,8 +764,8 @@ private CacheEntry _putCachedImage(\n     Cache        cache,\n     Object       key,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Make sure that we've got a new CacheKey.  We wouldn't want to\n@@ -860,8 +862,8 @@ private void _removeImageFromFileSystem(\n   private byte[] _renderImageLocal(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     Configuration config = context.getConfiguration();\n@@ -889,7 +891,7 @@ private void _removeImageFromFileSystem(\n     }\n \n     // Before we do any rendering check for Configuration.HEADLESS\n-    if (Boolean.TRUE.equals(config.getProperty(config.HEADLESS)) ||\n+    if (Boolean.TRUE.equals(config.getProperty(Configuration.HEADLESS)) ||\n         !GraphicsUtils.isGraphicalEnvironment())\n     {\n       // We're special casing colorized icons so that we can generate\n@@ -1006,7 +1008,7 @@ private File _writeImageFile(\n     ImageType    type,\n     String       name,\n     byte[]       data,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     // Derive the full path of the image file\n@@ -1034,8 +1036,8 @@ private File _writeImageMetadataFile(\n     ImageContext context,\n     ImageType    type,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     )\n     throws CacheException\n   {\n@@ -1094,8 +1096,8 @@ private File _writeImageMetadataFile(\n   private void _writeImageProviderRequest(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws CacheException\n   {\n@@ -1204,7 +1206,7 @@ private CacheEntry _createCacheEntry(\n     ImageContext context,\n     ImageType    type,\n     String       uri,\n-    Map   properties)\n+    Map<Object, Object> properties)\n   {\n     // Get the cache entry\n     int width = _getIntSize(properties, WIDTH_RESPONSE_KEY);\n@@ -1285,7 +1287,7 @@ private CacheKeyFactory _getCacheKeyFactory(ImageType type)\n   // instance.\n   private static String _getCanonicalPath(String path)\n   {\n-    String canonicalPath = (String)_sCanonicalPaths.get(path);\n+    String canonicalPath = _sCanonicalPaths.get(path);\n     if (canonicalPath != null)\n       return canonicalPath;\n \n@@ -1310,7 +1312,7 @@ private static String _getCanonicalPath(String path)\n   private String _getFileName(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -1331,13 +1333,13 @@ private String _getFileName(\n \n   // Returns the complete set of properties needed to render/encode\n   // the requested image\n-  private Map _getFilteredProperties(\n+  private Map<Object, Object> _getFilteredProperties(\n     ImageContext context,\n     ImageType type,\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     if (properties == null)\n       return null;\n \n@@ -1360,7 +1362,7 @@ private Map _getFilteredProperties(\n   // Returns the ImageEncoder to use for the requested image\n   private ImageEncoder _getImageEncoder(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1380,7 +1382,9 @@ private ImageEncoder _getImageEncoder(\n \n   // Returns the encoding to use for images generated\n   // using the specified context\n-  private String _getImageEncoding(ImageContext context, Map properties)\n+  private String _getImageEncoding(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String encoding = (String)properties.get(ENCODING_TYPE_KEY);\n     if (encoding != null)\n@@ -1429,7 +1433,7 @@ private String _getImageEncoding(ImageContext context, Map properties)\n   // Returns the extension for the current image encoding\n   private String _getImageEncodingExtension(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1485,7 +1489,9 @@ private ImageType _getImageType(\n   }\n \n   // Returns an int from the specified Map\n-  private int _getIntSize(Map properties, Object key)\n+  private int _getIntSize(\n+      Map<Object, Object> properties, \n+      Object key)\n   {\n     Integer value = (Integer)properties.get(key);\n \n@@ -1631,8 +1637,8 @@ private boolean _isTypeLocalized(ImageType type)\n   // Reads colorized icon image data from the request properties\n   private byte[] _readColorizedIconData(\n     ImageContext context,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Only bother doing this if we're generating GIFs\n@@ -1728,15 +1734,19 @@ public boolean accept(File dir, String name)\n   // Hashtable containing caches (ie. Hashtables) hashed by Locale.\n   // Each cache stores mappings from PropertiesKeys to the \"base name\"\n   // of the image/metadata/map.\n-  private OptimisticHashMap _caches;\n+  private OptimisticHashMap<String, Cache> _caches;\n \n   // The locale-independent cache\n   private Cache _globalCache;\n \n   // Table of shared FileSystemImageCaches, hashed by path.\n   // Note on table size: We don't expect to have very many FileSystemCaches\n   // running in a single VM - table can be small.\n-  private static final Hashtable _sSharedCaches = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: The code already take care of synchronization when needed it seems,\n+  //        using a HashMap should be more performant.\n+  private static final Hashtable<String, ImageProvider> _sSharedCaches = \n+    new Hashtable<String, ImageProvider>(19);\n \n   // Extension for IMX files\n   static final String __IMX_EXTENSION = \".imx\";\n@@ -1807,6 +1817,11 @@ public boolean accept(File dir, String name)\n   // Configuration property to test whether GIF support is enabled.\n   private static final String _GIF_ENABLED = \"gifEnabled\";\n \n-  private static final Hashtable _sCanonicalPaths = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtable is synchronized and more than often inefficient\n+  //        use a HashMap instead\n+  private static final Hashtable<String, String> _sCanonicalPaths = \n+    new Hashtable<String, String>(19);\n+  \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FileSystemImageCache.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java",
                "sha": "6e0e25ca888969c0afa2820cc8c1af9c40a1bf07",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java",
                "patch": "@@ -40,7 +40,7 @@\n    * and properties.\n    */\n   public FlippedIconKey(\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n@@ -77,6 +77,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -92,6 +93,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() );\n@@ -100,9 +102,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n \n     return properties;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java",
                "sha": "4aa890788762b75737c8835fbb30a89ce338a858",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java",
                "patch": "@@ -31,7 +31,9 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     return new FlippedIconKey(properties);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java",
                "sha": "10b29c669bc83e25c98cd0f9841f5474031b1277",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java",
                "patch": "@@ -32,7 +32,9 @@\n  */\n public class FlippedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java",
                "sha": "786cd753a5a0b7323e0feca03af9f81b0e9ad937",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java",
                "patch": "@@ -30,6 +30,7 @@\n  */\n class MapCacheEntry extends CacheEntry\n {\n+  @SuppressWarnings(\"unchecked\")\n   public MapCacheEntry(\n     String uri,\n     int width,\n@@ -47,10 +48,11 @@ public MapCacheEntry(\n       _areas = Collections.unmodifiableList(Arrays.asList(areas));\n   }\n \n-  public Collection getMapAreas()\n+  @Override\n+  public Collection<MapArea> getMapAreas()\n   {\n     return _areas;\n   }\n \n-  private Collection _areas;\n+  private Collection<MapArea> _areas;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java",
                "sha": "d0337a108d9075df95ebb343856f5d44baa3246a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java",
                "patch": "@@ -44,5 +44,5 @@\n    * @param requestedProperties The client-provided properties which\n    *   describe the requested image.\n    */\n-  public String getName(ImageContext context, Map requestedProperties);\n+  public String getName(ImageContext context, Map<Object, Object> requestedProperties);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java",
                "sha": "076435579ca1b996e2db2d6b27b6838e4e3cbc39",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java",
                "patch": "@@ -49,8 +49,8 @@\n    * @param properties The dictionary of properties to filter\n    * @return The filtered dictionary of properties\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     );\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java",
                "sha": "546e9e14c6d119ed63591c1107239d8373513e0a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java",
                "patch": "@@ -48,6 +48,7 @@ public SourceCheckingCacheEntry(\n     super(uri, width, height, encoding);\n   }\n \n+  @Override\n   public boolean isValid(\n     ImageContext context,\n     ImageProviderRequest request\n@@ -82,7 +83,7 @@ private static InputStreamProvider _getInputStreamProvider(\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     InputStreamProvider provider = (InputStreamProvider)properties.get(",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java",
                "sha": "d719c6c757805b92b149f03c593df83466ab3529",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 13,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java",
                "patch": "@@ -26,9 +26,9 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/image/cache/WrappingMap.java#0 $) $Date: 10-nov-2005.19:06:16 $\n  * @author The Oracle ADF Faces Team\n  */\n-class WrappingMap implements Map\n+class WrappingMap<K, V> implements Map<K, V>\n {\n-  public WrappingMap(Map map)\n+  public WrappingMap(Map<K, V> map)\n   {\n     _wrappedMap = map;\n   }\n@@ -43,27 +43,27 @@ public boolean isEmpty()\n     return _wrappedMap.isEmpty();\n   }\n \n-  public Iterator keys()\n+  public Iterator<K> keys()\n   {\n     return _wrappedMap.keySet().iterator();\n   }\n \n-  public Set entrySet()\n+  public Set<Map.Entry<K, V>> entrySet()\n   {\n     return _wrappedMap.entrySet();\n   }\n \n-  public Set keySet()\n+  public Set<K> keySet()\n   {\n     return _wrappedMap.keySet();\n   }\n \n-  public void putAll(Map map)\n+  public void putAll(Map<? extends K, ? extends V> map)\n   {\n     throw new UnsupportedOperationException(\"putAll operation not supported for WrappingMap\");\n   }\n \n-  public Collection values()\n+  public Collection<V> values()\n   {\n     return _wrappedMap.values();\n   }\n@@ -83,30 +83,30 @@ public void clear()\n     throw new UnsupportedOperationException(\"clear operation not supported for WrappingMap\");\n   }\n \n-  public Iterator elements()\n+  public Iterator<V> elements()\n   {\n     return _wrappedMap.values().iterator();\n   }\n \n-  public Object get(Object key)\n+  public V get(Object key)\n   {\n     return _wrappedMap.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public V put(K key, V value)\n   {\n     return _wrappedMap.put(key, value);\n   }\n \n-  public Object remove(Object key)\n+  public V remove(Object key)\n   {\n     return _wrappedMap.remove(key);\n   }\n \n-  protected Map getWrappedMap()\n+  protected Map<K, V> getWrappedMap()\n   {\n     return _wrappedMap;\n   }\n \n-  private Map _wrappedMap;\n+  private Map<K, V> _wrappedMap;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java",
                "sha": "688f0521ac93a639f55ce038f93ae595cd48b231",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java",
                "patch": "@@ -45,6 +45,7 @@ public AlphaMultiplyFilter(int rgb)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java",
                "sha": "60ef53bc6648d51f3dc8a824712b4877747a1810",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java",
                "patch": "@@ -84,7 +84,11 @@ public static void encode(Image image, OutputStream stream)\n \n     // A hashtable is used to keep track of colors already in the table\n     // max. one-color entries\n-    Hashtable hsh = new Hashtable(_MAXIMUM_COLOR_TABLE_SIZE);\n+    // -= Simon Lessard =-\n+    // FIXME: JDK 1.2 was truly evil... \n+    //        HashMap would be better\n+    Hashtable<Integer, Integer> hsh = \n+      new Hashtable<Integer, Integer>(_MAXIMUM_COLOR_TABLE_SIZE);\n \n     int colorIndex = 0;           // the code values of the colors\n     int background = 0;           // the code of the background color\n@@ -126,7 +130,7 @@ else if (_isTransparent(color))\n         // color has already been added to the color table.  We use an\n         // the Integer RGB value as our hash key\n         Integer colorKey = IntegerUtils.getInteger(color & 0x00ffffff);\n-        Integer colorIndexValue = (Integer) hsh.get(colorKey);\n+        Integer colorIndexValue = hsh.get(colorKey);\n \n         if (colorIndexValue != null)\n         {\n@@ -318,7 +322,10 @@ else if (_isTransparent(color))\n     // Float is in the form a.b where a = sqnc, and b = 1/(newcol+2).\n     // Now, we use a Integer where the top 16 bits store the sequence and\n     // the bottom 16 bits store the newcol.\n-    hsh = new Hashtable(_LARGEST_CODE); // max. compression entries\n+    // -= Simon Lessard =-\n+    // FIXME: Another line of code, another Hashtable,\n+    //        Yet again HashMap would be more efficient\n+    hsh = new Hashtable<Integer, Integer>(_LARGEST_CODE); // max. compression entries\n \n     int code = (1<< codeSize)+2; // where code values start\n     int clearCode = (code++)-2; // special codes\n@@ -361,7 +368,7 @@ else if (_isTransparent(color))\n       if (sqnc > 0)\n       {\n         fsqnc_newcol = IntegerUtils.getInteger(sqnc_newcol);\n-        Integer sqnc_newcol_code = (Integer) hsh.get(fsqnc_newcol);\n+        Integer sqnc_newcol_code = hsh.get(fsqnc_newcol);\n         if (sqnc_newcol_code == null)\n         {\n           // string not in table.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java",
                "sha": "2737a58d149659b23b00e4f5e45990c9feeaa6df",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java",
                "patch": "@@ -81,7 +81,7 @@ public ImageEncoder getImageEncoder(String type)\n    */\n   public String getImageExtension(String type)\n   {\n-    return (String)_extensions.get(type);\n+    return _extensions.get(type);\n   }\n \n   /**\n@@ -156,10 +156,10 @@ static private void _registerDefaultEncodings(ImageEncoderManager manager)\n   }\n \n   // Maps mime type to ImageEncoder objects\n-  private ArrayMap _encoders = new ArrayMap();\n+  private ArrayMap<String, Object> _encoders = new ArrayMap<String, Object>();\n \n   // Maps mime type to extension\n-  private ArrayMap _extensions = new ArrayMap();\n+  private ArrayMap<String, String> _extensions = new ArrayMap<String, String>();\n \n   static private ImageEncoderManager _sDefaultInstance = \n     new ImageEncoderManager();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java",
                "sha": "3b62499e0252d9265010da226cae3d4625ba0f9e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java",
                "patch": "@@ -44,6 +44,7 @@ public OctreeFilter(Image im)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n     return _tree.mapColor(rgb);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java",
                "sha": "1629c9e9d012d29ebb72f7f2501dfcc623514015",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java",
                "patch": "@@ -212,6 +212,9 @@ private int _setColorVals(int rgb, boolean isNew)\n   private int _children;  // how many leaves are filled\n   private OctreeNode[] _leaf; // 8 children of node\n   private int _pixels; // how many pixels have passed through this node\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private OctreeNode _parent; // parent node in tree\n   private int _level; // where does this node lie in the tree?\n   private OctreeNode _next; // next node at this level",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java",
                "sha": "a135711fb9a836be6e8ff47654803ffe4f2aa421",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 9,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java",
                "patch": "@@ -86,7 +86,9 @@ public static void encode(Image image, OutputStream out)\n                                          \" x \"+height+\" image.\");\n     }\n \n-    Hashtable colors = new Hashtable();\n+    // -= Simon Lessard =-\n+    // FIXME: HashMap please if synchronization is not required...\n+    Hashtable<Color, Integer> colors = new Hashtable<Color, Integer>();\n     int   count = 0;\n     Color lastColor = null;\n     // Use -2 instead of -1 for last pixel because -1 is tranparent white\n@@ -154,7 +156,7 @@ private static void _writePaletteImage(\n     int          width,\n     int          height,\n     int[]        pixels,\n-    Map   colors,\n+    Map<Color, Integer> colors,\n     boolean      transparent,\n     OutputStream out\n     ) throws IOException\n@@ -276,20 +278,20 @@ private static void _writeHeader(\n \n   // Write out the PLTE chunk\n   private static void _writePalette(\n-    Map colors,\n+    Map<Color, Integer> colors,\n     OutputStream out\n     ) throws IOException\n   {\n     // Convert the colors Map into the palette data, sorted by index\n     int count = colors.size();\n     byte[] data = new byte[count * 3];\n \n-    Iterator e = colors.keySet().iterator();\n+    Iterator<Color> e = colors.keySet().iterator();\n \n     while (e.hasNext())\n     {\n-      Color color = (Color)e.next();\n-      int index = (((Integer)colors.get(color)).intValue() * 3);\n+      Color color = e.next();\n+      int index = colors.get(color).intValue() * 3;\n \n       int rgb = color.getRGB();\n       data[index]     = _getRed(rgb);\n@@ -388,7 +390,7 @@ private static long _getCRC(int type, byte[] data)\n     int        height,\n     int        depth,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n // =-=ags At the moment we only support 8-bit pixel depths\n@@ -431,7 +433,7 @@ private static long _getCRC(int type, byte[] data)\n     int        width,\n     int        height,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n     // Convert pixels to an array of palette indices.  Each scanline\n@@ -461,7 +463,7 @@ private static long _getCRC(int type, byte[] data)\n         else\n           color = _createColor(pixel);\n \n-        int index = ((Integer)colors.get(color)).intValue();\n+        int index = colors.get(color).intValue();\n \n         data[targetLine + j + 1] = (byte)index;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java",
                "sha": "62551e12fad0158b4d24d2d32a374f1d7b38f902",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 9,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java",
                "patch": "@@ -58,9 +58,10 @@ public ButtonImageRenderer()\n     super(new ButtonPainter());\n   }\n \n+  @Override\n   protected Painter getPainter(\n     ImageContext imageContext,\n-    Map requestedProperties\n+    Map<Object, Object> requestedProperties\n     )\n   {\n     // We use a special ButtonPainter for Dialog which dynamically\n@@ -87,9 +88,10 @@ protected Painter getPainter(\n     return super.getPainter(imageContext, requestedProperties);\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -98,11 +100,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     return new ProxyContext(super.createPaintContext(imageContext,\n@@ -115,7 +118,10 @@ protected PaintContext createPaintContext(\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -129,7 +135,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -143,7 +152,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -153,7 +163,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -166,7 +176,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -183,6 +193,7 @@ public ProxyContext(PaintContext context)\n       _context = context;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -204,6 +215,7 @@ public Object getPaintData(Object key)\n       return null;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java",
                "sha": "dd7bd93f815249de9e5e758704ebe09d0592460b",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java",
                "patch": "@@ -139,6 +139,7 @@ public static Color getDefaultBorderColor(\n   /**\n    * Returns the insets of just the ButtonPainter.\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(PaintContext context)\n   {\n     int start  = _START;\n@@ -168,6 +169,7 @@ protected ImmInsets getOwnInsets(PaintContext context)\n   /**\n    * Paint just the border of the ButtonPainter.\n    */\n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -563,7 +565,7 @@ private int _getCurveWidth(int height)\n   {\n     // The curve width is about 3/4 of the height\n \n-    return (int)(((float)height) * 0.75);\n+    return (int)(height * 0.75);\n \n   }\n \n@@ -608,6 +610,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java",
                "sha": "f713bd9d3f2f921c5f9ec8a83ca9df4ca1d8c7b9",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java",
                "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.\n@@ -152,7 +152,7 @@ private boolean _isRightToLeft(\n   // Returns the target colors for a colorization based on the\n   // specified context\n   private static int[] _getTargetColors(\n-    Map           properties\n+    Map<Object, Object> properties\n     )\n   {\n     // We derive the colors for the two color ramps based on the\n@@ -219,6 +219,7 @@ public ColorizingFilter(int[] sourceColors, int[] targetColors)\n       canFilterIndexColorModel = true;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // First, see if we can short circuit",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java",
                "sha": "aa0e6867f5149d6eab3a62776cb12b8d4ef97ad7",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java",
                "patch": "@@ -57,9 +57,10 @@ public CompositeButtonImageRenderer()\n     super(new CompositeButtonPainter());\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -68,11 +69,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     Image startImage = SourceUtils.getSourceIcon(imageContext,\n@@ -102,6 +104,7 @@ protected PaintContext createPaintContext(\n                             bottomBackgroundImage);\n   }\n \n+  @Override\n   protected void disposePaintContext(PaintContext context)\n   {\n     if (context instanceof ProxyContext)\n@@ -112,7 +115,10 @@ protected void disposePaintContext(PaintContext context)\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -126,7 +132,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -140,7 +149,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -150,7 +160,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -163,7 +173,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -190,6 +200,7 @@ public ProxyContext(\n       _bottomBackgroundImage = bottomBackgroundImage;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -238,6 +249,7 @@ public void flush()\n       }\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java",
                "sha": "a9e089c8b01a0666f7af52f84c46e5e9831fb77b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java",
                "patch": "@@ -78,6 +78,7 @@ public CompositeButtonPainter()\n         ));\n   }\n \n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )\n@@ -130,6 +131,7 @@ protected ImmInsets getOwnInsets(\n                          rightSize.width);\n   }\n \n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -359,6 +361,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java",
                "sha": "59bb955e3f55c64ec2a2e0c5247857d9b1a9a8b5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java",
                "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java",
                "sha": "25cb208bd4305aa671653529679790238007b40c",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java",
                "patch": "@@ -27,6 +27,7 @@\n  */\n class MirrorImageFilter extends ImageFilter\n {\n+  @Override\n   public void setDimensions(int width, int height) \n   {\n     if (!_done)\n@@ -39,6 +40,7 @@ public void setDimensions(int width, int height)\n     super.setDimensions(width, height);\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -67,6 +69,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -95,6 +98,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void imageComplete(int status) \n   {\n     int[] pixels = _pixels;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java",
                "sha": "d4c8959d25cc85931a5e89833929cc63e9d54674",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java",
                "patch": "@@ -41,7 +41,7 @@\n {\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return getSourceIcon(context,\n@@ -54,7 +54,7 @@ public static Image getSourceIcon(\n    */\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     key\n     )\n   {\n@@ -104,7 +104,7 @@ public static Image getSourceIcon(\n \n   // Logs a warning\n   private static void _log(\n-    Map properties,\n+    Map<Object, Object> properties,\n     String message,\n     Throwable t\n     )",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java",
                "sha": "fe1d219c1a46e9c512da9590f3691c901fc4c97f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java",
                "patch": "@@ -63,8 +63,8 @@ static public ImageRenderer sharedInstance()\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     if ((_LOG.isWarning()))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java",
                "sha": "90252e359c150bc62687f9463885aa12bd2424cd",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java",
                "patch": "@@ -86,6 +86,7 @@ public AbstractBorderPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -104,6 +105,7 @@ public Dimension getPreferredSize(\n    * <p>\n    * @return The minimum size of the Painter.\n    */\n+  @Override\n   public Dimension getMinimumSize(\n     PaintContext context\n     )\n@@ -134,6 +136,7 @@ public Dimension getMinimumSize(\n    * <p>\n    * @see #paintBorder\n    */\n+  @Override\n   public final void paint(\n     PaintContext context,\n     Graphics     g,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java",
                "sha": "2bdec37f332b2b713dbed63fe5b25b9624bc3963",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java",
                "patch": "@@ -69,6 +69,7 @@ public AbstractWrappingPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java",
                "sha": "26fc5f20975ee76944130be05953dff58da0a0e4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java",
                "patch": "@@ -85,6 +85,7 @@ public AdjustableBorderPainter(\n    * <p>\n    * @see org.apache.myfaces.trinidadinternal.image.painter.AbstractBorderPainter#getInsets\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java",
                "sha": "35d5b48cfc993ddc990e67bd09f7f1e25eabcff3",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java",
                "patch": "@@ -38,6 +38,7 @@ public ColorChange(\n   /**\n    * Paints the text at the specified coordinates.\n    */\n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java",
                "sha": "c841bacb36ac52036a75781ee561bba97f708a3c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java",
                "patch": "@@ -74,7 +74,7 @@ public static Image createFilteredImage(\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static public Image getImageResource(Class cl, String name)\n+  static public Image getImageResource(Class<?> cl, String name)\n   {\n     Image image = _getImageResource(cl, name);\n     if (image == null)\n@@ -198,7 +198,7 @@ static public boolean loadImages(Image[] images)\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static private Image _getImageResource(Class cl, String name)\n+  static private Image _getImageResource(Class<?> cl, String name)\n   {\n      //\n     // =-=  bts completely rewrite this method to use getResourceAsStream()",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java",
                "sha": "94e2cb8ac9e14b1f9b3face2df19f00c33a8e5f1",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java",
                "patch": "@@ -107,6 +107,7 @@ public Insets toInsets()\n   /**\n    * Checks whether two insets objects are equal.\n    */\n+  @Override\n   public boolean equals(Object obj)\n   {\n     if (obj instanceof ImmInsets)\n@@ -139,6 +140,7 @@ public boolean equals(Object obj)\n   /**\n    * Override of Object.hashCode()\n    */\n+  @Override\n   public int hashCode()\n   {\n     // We need to override hashCode since we override equals().\n@@ -154,6 +156,7 @@ public int hashCode()\n   /**\n    * Returns a String object representing this Inset's values.\n    */\n+  @Override\n   public String toString()\n   {\n     return getClass().getName() +\n@@ -164,6 +167,7 @@ public String toString()\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java",
                "sha": "0b4eafb5af7725d1b29709958e4cb8a4d8ea5881",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java",
                "patch": "@@ -57,6 +57,7 @@ public OffscreenWrappingPainter(Painter wrappedPainter)\n     super(wrappedPainter);\n   }\n \n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,\n@@ -135,6 +136,7 @@ public void paint(\n     buffer.flush();\n   }\n \n+  @Override\n   public Dimension getPreferredSize(PaintContext context)\n   {\n     Dimension size = null;\n@@ -274,21 +276,25 @@ public ProxyContext(PaintContext wrappedContext, Graphics offscreenG)\n       _g = offscreenG;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;\n     }\n \n+    @Override\n     public Graphics getPaintGraphics()\n     {\n       return _g;\n     }\n \n+    @Override\n     public Font getPaintFont()\n     {\n       return _g.getFont();\n     }\n \n+    @Override\n     public FontMetrics getFontMetrics(Font font)\n     {\n        return _g.getFontMetrics(font);\n@@ -321,6 +327,7 @@ public TransparencyFilter()\n       canFilterIndexColorModel = false;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // Make sure we see pixels at y=0 before any other pixels.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java",
                "sha": "fa1a08034387ecca4ab3efad2bef6286a6c6e756",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java",
                "patch": "@@ -98,6 +98,7 @@ public TextPainter(\n    * @param context Context for determining the preferred size.\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -331,6 +332,7 @@ protected String getMinimumStringData(\n   }\n \n \n+  @Override\n   protected Object getData(\n     PaintContext context\n     )\n@@ -348,6 +350,7 @@ protected Object getData(\n   }\n \n \n+  @Override\n   protected Object getDataKey()\n   {\n     return _dataKey;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java",
                "sha": "a9b5b149523e535e3985c8bb448d3b312cc8e449",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java",
                "patch": "@@ -105,8 +105,8 @@ public static void encodeImageProviderRequest(\n     String       namespaceURI,\n     String       localName,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws IllegalArgumentException\n   {\n@@ -236,7 +236,7 @@ public static ParserManager createDefaultManager()\n    * objects for elements in the specified namespace.\n    */\n   public static void registerParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace,\n     ParserFactory factory\n     )\n@@ -248,7 +248,7 @@ public static void registerParserFactory(\n    * Unregisters the ParserFactory for the specified namespace.\n    */\n   public static void unregisterParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace\n     )\n   {\n@@ -282,7 +282,7 @@ private static Object _parse(\n     ImageContext context,\n     XMLProvider  provider,\n     InputSource  source,\n-    Class        expectedClass\n+    Class<?>     expectedClass\n     ) throws IOException, SAXException\n   {\n     // Get the ParserManager\n@@ -323,5 +323,5 @@ private ImageProviderRequestUtils() {}\n \n   // We use this empty dictionary as a stub for the response properties\n   // dictionary when we encode the image properties with the XMLEncoder\n-  private static final Map _EMPTY_MAP = new ArrayMap(0);\n+  private static final Map<Object, Object> _EMPTY_MAP = new ArrayMap<Object, Object>(0);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java",
                "sha": "ad29262a9ab43d9625b509d58e63978fce82096a",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java",
                "patch": "@@ -50,8 +50,8 @@ public void encodeXML(\n     ImageContext context,\n     String       namespaceURI,\n     String       localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -69,8 +69,8 @@ public void encodeXML(\n \n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -100,8 +100,8 @@ protected void encodeAttributes(\n    */\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -340,7 +340,7 @@ else if (ch == '\"')\n \n   private final void _encodeDirectionAttribute(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java",
                "sha": "ff9ac2373a227f4fb28b933351086f9bf9fd191b",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 5,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java",
                "patch": "@@ -37,10 +37,11 @@ public ColorizedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -49,7 +50,7 @@ protected void encodeAttributes(\n     String source = (String)properties.get(SOURCE_KEY);\n     encodeAttribute(SOURCE_ATTR, source, out);\n \n-    Class laf = (Class)properties.get(LAF_KEY);\n+    Class<?> laf = (Class<?>)properties.get(LAF_KEY);\n     \n     if ( laf != null )\n     {\n@@ -61,10 +62,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java",
                "sha": "184c59703e36307eeccea3c0dea58ea53844432b",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java",
                "patch": "@@ -36,10 +36,11 @@ public CompositeButtonEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -56,10 +57,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java",
                "sha": "b6b0eff440ddbe6c0ba478480c7cbe043631bd0f",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java",
                "patch": "@@ -35,10 +35,11 @@ public FlippedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java",
                "sha": "decc5e3b557da0e27f3cf2c417f33db143c03b92",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java",
                "patch": "@@ -37,8 +37,8 @@ public void encodeXML(\n     ImageContext context,\n     String     namespaceURI,\n     String     localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     );\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java",
                "sha": "2049b552bb28b650bbaed1771d7db212eb781a1f",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java",
                "patch": "@@ -72,12 +72,13 @@\n   protected BaseImageProviderRequestParser(int capacity)\n   {\n     // Tack on an extra bucket for the encoding\n-    _properties = new ArrayMap(capacity + 1);\n+    _properties = new ArrayMap<Object, Object>(capacity + 1);\n   }\n \n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -135,6 +136,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -152,6 +154,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -177,6 +180,7 @@ else if (\"colorScheme\".equals(localName))\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -185,9 +189,9 @@ public void addCompletedChild(\n     )\n   {\n     if (isColorElement(namespaceURI, localName))\n-      setProperty(getColorKey(namespaceURI, localName), (Color)child);\n+      setProperty(getColorKey(namespaceURI, localName), child);\n     else if (isFontElement(namespaceURI, localName))\n-      setProperty(getFontKey(namespaceURI, localName), (FontProxy)child);\n+      setProperty(getFontKey(namespaceURI, localName), child);\n   }\n \n   /**\n@@ -482,7 +486,7 @@ private BaseImageProviderRequestParser() {}\n \n   private String     _namespaceURI;\n   private String     _localName;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n \n   private boolean   _error;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java",
                "sha": "e57005b1c4e5e059fd4ce380e950c7519f461da5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java",
                "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public Object getNodeValue(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java",
                "sha": "1b8ed7585215691489b689edc57cf065d9970101",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java",
                "patch": "@@ -38,6 +38,7 @@ public ColorizedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,7 +68,7 @@ public void startElement(\n     if (newLafString != null)\n       lafString = newLafString;\n \n-    Class laf = null;\n+    Class<?> laf = null;\n     try\n     {\n       laf = Class.forName(lafString);\n@@ -89,6 +90,8 @@ static private String _mapOldLaf(String lafString)\n       return \"org.apache.myfaces.trinidadinternal.ui.laf.oracle.desktop.BrowserLookAndFeel\";\n     return null;\n   }\n+  \n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if ((XMLConstants.DARK_COLOR_NAME.equals(localName)) ||\n@@ -102,6 +105,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (XMLConstants.DARK_COLOR_NAME.equals(localName))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java",
                "sha": "9d6616ee1770f72341d2397ecfdacc096ac994fb",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java",
                "patch": "@@ -37,6 +37,7 @@ public CompositeButtonParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +88,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -106,6 +108,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java",
                "sha": "6cf6efe630c4362b9bed05a8f0aff23cf337ae31",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java",
                "patch": "@@ -35,6 +35,7 @@ public DefaultsParser()\n    * Override of BaseImageProviderRequestParser.isColorElement()\n    * which adds in the borderColor element.\n    */\n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME)        ||\n@@ -53,6 +54,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.isFontElement()\n    * which adds in the selected/disabled font elements.\n    */\n+  @Override\n   protected boolean isFontElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME)  ||\n@@ -68,6 +70,7 @@ protected boolean isFontElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME))\n@@ -88,6 +91,7 @@ protected Object getColorKey(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getFontKey() for\n    * selected/disabled fonts.\n    */\n+  @Override\n   protected Object getFontKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java",
                "sha": "1cd99a457ae9f3eccf8e4e95e264b860d4c61bb7",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java",
                "patch": "@@ -35,6 +35,7 @@ public FlippedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java",
                "sha": "92cbde96d8abbdca74627348577306dda28b4b45",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java",
                "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,6 +68,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -83,6 +85,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -103,6 +106,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java",
                "sha": "61da06a50fbbcc1363e031b774cccd6becbbf433",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java",
                "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementations of NodeParser.startElement();\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -55,6 +56,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -76,6 +78,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -91,6 +94,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -101,6 +105,9 @@ public void addCompletedChild(\n     _requests.addElement((ImageProviderRequest)child);\n   }\n \n-  private Vector _requests = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! A Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<ImageProviderRequest> _requests = new Vector<ImageProviderRequest>();\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java",
                "sha": "26e324099acbd2b58401969db497e789d5a3ed4f",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java",
                "patch": "@@ -37,6 +37,7 @@\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -51,6 +52,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -78,5 +80,8 @@ public NodeParser startChildElement(\n     }\n   }\n \n-  private Vector _areas = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! Another Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<MapArea> _areas = new Vector<MapArea>();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java",
                "sha": "2d3720790cf9f32937ff49a6c3f0b3588e92dce7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java",
                "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -60,6 +61,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -72,6 +74,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +90,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java",
                "sha": "9c73581b90454af9cb484fcfdb99cbba6c934df7",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java",
                "patch": "@@ -42,6 +42,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -56,6 +57,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -98,6 +100,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -111,6 +114,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addText().\n    */\n+  @Override\n   public void addText(\n     ParseContext context,\n     char[]       text,\n@@ -128,6 +132,7 @@ public void addText(\n   /**\n    * Implemenation of NodeParser.addWhitespace().\n    */\n+  @Override\n   public void addWhitespace(\n     ParseContext context,\n     char[]       text,\n@@ -143,6 +148,10 @@ public void addWhitespace(\n \n   private String _bundleName;\n   private String _key;\n+  // -= Simon Lessard =-\n+  // FIXME: Using a StringBuilder could be MUCH more efficient\n+  //        Currently String concatenation within a loop process\n+  //        which is bad.\n   private String _text;\n \n   // Error messages",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java",
                "sha": "d7f32ca2b8fda78174938eddddf7c40a62f89419",
                "status": "modified"
            },
            {
                "additions": 34,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 27,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java",
                "patch": "@@ -17,10 +17,11 @@\n \n import java.io.IOException;\n import java.io.Writer;\n-\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Stack;\n \n import javax.faces.component.UIComponent;\n@@ -45,13 +46,14 @@\n   public DebugHtmlResponseWriter(ResponseWriter decorated)\n   {\n     super(decorated);\n-    _elementStack = new Stack();\n+    _elementStack = new Stack<String>();\n   }\n \n   /**\n    * Creates a new instance of this DebugHtmlResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     DebugHtmlResponseWriter cloned =\n@@ -62,6 +64,7 @@ public ResponseWriter cloneWithWriter(Writer writer)\n \n \n \n+  @Override\n   public void startElement(String name, UIComponent component) throws IOException\n   {\n     String lowerName = name.toLowerCase();\n@@ -79,9 +82,9 @@ public void startElement(String name, UIComponent component) throws IOException\n     // Check for elements that are not allowed inside each other\n     if (!_elementStack.empty())\n     {\n-      String parent = (String) _elementStack.peek();\n-      Collection allowedParents = (Collection) _sAllowedParents.get(lowerName);\n-      Collection allowedChildren = (Collection) _sAllowedChildren.get(parent);\n+      String parent = _elementStack.peek();\n+      Collection<String> allowedParents = _sAllowedParents.get(lowerName);\n+      Collection<String> allowedChildren = _sAllowedChildren.get(parent);\n       if (((allowedParents != null)  &&\n            !allowedParents.contains(parent)) ||\n           ((allowedChildren != null)  &&\n@@ -100,6 +103,7 @@ public void startElement(String name, UIComponent component) throws IOException\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (!_elementStack.empty())\n@@ -108,6 +112,7 @@ public void endElement(String name) throws IOException\n     super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -165,10 +170,12 @@ private void _errorWithComment(String text) throws IOException\n \n   // Yes, Stack is slow and lame.  This code is used for debugging\n   // only, so that is of little concern.\n-  private Stack        _elementStack;\n+  private Stack<String> _elementStack;\n \n-  static private final HashMap _sAllowedParents = new HashMap(13);\n-  static private final HashMap _sAllowedChildren  = new HashMap(13);\n+  static private final Map<String, List<String>> _sAllowedParents = \n+    new HashMap<String, List<String>>(13);\n+  static private final Map<String, List<String>> _sAllowedChildren  = \n+    new HashMap<String, List<String>>(13);\n \n   static\n   {\n@@ -178,70 +185,70 @@ private void _errorWithComment(String text) throws IOException\n     // but we hardcode that rule.\n     _sAllowedChildren.put(\"table\",\n        Arrays.asList(\n-          new Object[]{\"tr\", \"caption\",\n+          new String[]{\"tr\", \"caption\",\n                        \"thead\", \"tfoot\", \"tbody\", \"col\", \"colgroup\"}));\n \n     _sAllowedChildren.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"th\", \"td\"}));\n+          new String[]{\"th\", \"td\"}));\n \n     _sAllowedChildren.put(\"select\",\n        Arrays.asList(\n-          new Object[]{\"option\", \"optgroup\"}));\n+          new String[]{\"option\", \"optgroup\"}));\n \n     _sAllowedChildren.put(\"ol\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"ul\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"input\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"hr\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"br\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"area\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"link\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"img\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"col\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"frame\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"base\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"meta\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedParents.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n+          new String[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n \n     _sAllowedParents.put(\"td\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"th\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"option\",\n        Arrays.asList(\n-          new Object[]{\"select\", \"optgroup\"}));\n+          new String[]{\"select\", \"optgroup\"}));\n   }\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DebugHtmlResponseWriter.class);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java",
                "sha": "6a99c0a45f074792aa89c1ea25b4c30e85890812",
                "status": "modified"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 19,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java",
                "patch": "@@ -45,23 +45,25 @@\n    public DebugResponseWriter(ResponseWriter decorated)\n    {\n      super(decorated);\n-     _elementStack = new Stack();\n-     _idMap = new HashMap();\n-     _attributes = new HashSet();\n+     _elementStack = new Stack<String>();\n+     _idMap = new HashMap<Object, Boolean>();\n+     _attributes = new HashSet<String>();\n    }\n \n    /**\n     * Creates a new instance of this DebugResponseWriter, using a different\n     * Writer.\n     */\n-   public ResponseWriter cloneWithWriter(Writer writer)\n+   @Override\n+  public ResponseWriter cloneWithWriter(Writer writer)\n    {\n      return new DebugResponseWriter(\n        getResponseWriter().cloneWithWriter(writer));\n    }\n \n \n-   public void endDocument() throws IOException\n+   @Override\n+  public void endDocument() throws IOException\n    {\n      super.endDocument();\n      if (!_elementStack.empty())\n@@ -75,7 +77,8 @@ public void endDocument() throws IOException\n    /**\n     * Writes a comment.\n     */\n-   public void writeComment(Object text) throws IOException\n+   @Override\n+  public void writeComment(Object text) throws IOException\n    {\n      if ((text != null) && (text.toString().indexOf(\"--\") >= 0))\n        _LOG.warning(\"Comments cannot include \\\"--\\\"\");\n@@ -88,7 +91,8 @@ public void writeComment(Object text) throws IOException\n    /**\n     * Writes a String, escaped properly for this method.\n     */\n-   public void writeText(Object text, String componentPropertyName) throws IOException\n+   @Override\n+  public void writeText(Object text, String componentPropertyName) throws IOException\n    {\n      _inElement = false;\n      super.writeText(text, componentPropertyName);\n@@ -97,7 +101,8 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n    /**\n     * Writes a character array, escaped properly for this method.\n     */\n-   public void writeText(\n+   @Override\n+  public void writeText(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -110,7 +115,8 @@ public void writeText(\n    /**\n     * Writes a string, without performing any escaping.\n     */\n-   public void write(String text) throws IOException\n+   @Override\n+  public void write(String text) throws IOException\n    {\n      _inElement = false;\n      super.write(text);\n@@ -119,7 +125,8 @@ public void write(String text) throws IOException\n    /**\n     * Writes a character array, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -132,7 +139,8 @@ public void write(\n    /**\n     * Writes a character, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      int ch\n      ) throws IOException\n    {\n@@ -141,7 +149,8 @@ public void write(\n    }\n \n \n-   public void startElement(String name, UIComponent component) throws IOException\n+   @Override\n+  public void startElement(String name, UIComponent component) throws IOException\n    {\n      if ((component != null) && (_lastComponentStarted != component))\n      {\n@@ -164,7 +173,8 @@ public void startElement(String name, UIComponent component) throws IOException\n    }\n \n \n-   public void endElement(String name) throws IOException\n+   @Override\n+  public void endElement(String name) throws IOException\n    {\n      _inElement = false;\n      _lastComponentStarted = null;\n@@ -195,7 +205,8 @@ public void endElement(String name) throws IOException\n      super.endElement(name);\n    }\n \n-   public void writeAttribute(String name,\n+   @Override\n+  public void writeAttribute(String name,\n                               Object value,\n                               String componentPropertyName)\n          throws IOException\n@@ -223,7 +234,8 @@ public void writeAttribute(String name,\n      super.writeAttribute(name, value, componentPropertyName);\n    }\n \n-   public void writeURIAttribute(\n+   @Override\n+  public void writeURIAttribute(\n      String     name,\n      Object     value,\n      String     componentPropertyName) throws IOException\n@@ -300,15 +312,15 @@ private void _logDuplicateId(Object value)\n    private boolean      _inElement;\n    // Yes, Stack is slow and lame.  This code is used for debugging\n    // only, so that is of little concern.\n-   private Stack        _elementStack;\n+   private Stack<String> _elementStack;\n    // the following is used to keep track of how many time endElement is called.\n    // This is to help in debuggin. An often error is that some element was\n    // too many times or too few times. But by the time the error is detected\n    // it is too late. Now we can print out this count, and you can set the\n    // debugger to stop when the count-1 'th endElement is called:\n-   private int          _endElementCount = 0;\n-   private Map          _idMap;\n-   private Set          _attributes;\n+   private int                  _endElementCount = 0;\n+   private Map<Object, Boolean> _idMap;\n+   private Set<String>          _attributes;\n    // Last component that had a \"start\" component output;  used\n    // to avoid multiple \"start\" comments\n    private UIComponent  _lastComponentStarted;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java",
                "sha": "5902ec7ebf41b329f8792be7106fa52e20e78523",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java",
                "patch": "@@ -57,38 +57,45 @@ public HtmlResponseWriter(Writer out, String encoding)\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return HTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -120,6 +127,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -178,6 +186,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -192,7 +201,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // See what attribute we were involved in\n     String currAttr = _currAttr;\n@@ -234,6 +243,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -273,6 +283,7 @@ public void writeURIAttribute(String name,\n     out.write('\"');\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -285,6 +296,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -304,6 +316,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -318,25 +331,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -376,7 +393,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -488,7 +505,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -621,13 +638,13 @@ static private boolean _isEmptyElement(String name)\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(HtmlResponseWriter.class);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java",
                "sha": "ed06db8cf7b10b5dea4c1d5cdf29e4712ba23489",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java",
                "patch": "@@ -50,12 +50,14 @@ public IndentingResponseWriter(\n    * Creates a new instance of this DebugResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new IndentingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -74,6 +76,7 @@ public void startElement(String name,\n     super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     _depth--;\n@@ -93,6 +96,7 @@ public void endElement(String name) throws IOException\n   /**\n    * Writes a comment.\n    */\n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     // start a new line only if an element just ended and\n@@ -105,6 +109,7 @@ public void writeComment(Object comment) throws IOException\n   /**\n    * Writes a String, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -115,6 +120,7 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n   /**\n    * Writes a character array, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(\n     char[]      text, \n     int         start,\n@@ -127,6 +133,7 @@ public void writeText(\n   /**\n    * Writes a string, without performing any escaping.\n    */\n+  @Override\n   public void write(String text) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -136,6 +143,7 @@ public void write(String text) throws IOException\n   /**\n    * Writes a character array, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     char[]      text, \n     int         start,\n@@ -148,6 +156,7 @@ public void write(\n   /**\n    * Writes a character, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     int c\n     ) throws IOException\n@@ -229,7 +238,7 @@ private boolean _isWhiteSpaceSensitive(String element)\n     }\n   }\n \n-  static private final Set _HTML_TYPES = new HashSet();\n+  static private final Set<String> _HTML_TYPES = new HashSet<String>();\n   static\n   {\n     _HTML_TYPES.add(HtmlResponseWriter.HTML_CONTENT_TYPE);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java",
                "sha": "776decbd5c63377c9253bd372f143692e5b60333",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java",
                "patch": "@@ -52,12 +52,14 @@ private RepeatIdResponseWriter(ResponseWriter out)\n     super(out);\n   }\n   \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new RepeatIdResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java",
                "sha": "e6c65dc905beef31e19226cbacc3ca59d5eb8762",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java",
                "patch": "@@ -46,51 +46,60 @@ protected ResponseWriter getResponseWriter()\n     return _decorated;\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return getResponseWriter().getCharacterEncoding();\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return getResponseWriter().getContentType();\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     getResponseWriter().startDocument();\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     getResponseWriter().endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     getResponseWriter().flush();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     getResponseWriter().close();\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n     getResponseWriter().startElement(name, component);\n   }\n \n   \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     getResponseWriter().endElement(name);\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -100,6 +109,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -108,51 +118,60 @@ public void writeURIAttribute(String name,\n     getResponseWriter().writeURIAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     getResponseWriter().writeComment(comment);\n   }\n \n   \n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     getResponseWriter().writeText(text, componentPropertyName);\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n     getResponseWriter().writeText(text, off, len);\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     getResponseWriter().write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     getResponseWriter().write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     getResponseWriter().write((char) c);\n   }\n \n+  @Override\n   public void write(char[] cbuf)\n     throws IOException\n   {\n     getResponseWriter().write(cbuf);\n   }\n \n+  @Override\n   public void write(String str, int off, int len)\n     throws IOException\n   {\n     getResponseWriter().write(str, off, len);\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return getResponseWriter().cloneWithWriter(writer);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java",
                "sha": "4373ac50084bdde68f1b818b490de2ee879d06dd",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java",
                "patch": "@@ -59,38 +59,45 @@ public XhtmlResponseWriter(\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return XHTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -122,6 +129,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -167,6 +175,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -181,7 +190,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // Output Boolean values specially\n     if (valueClass == _BOOLEAN_CLASS)\n@@ -208,6 +217,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -217,6 +227,7 @@ public void writeURIAttribute(String name,\n     writeAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -229,6 +240,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -248,6 +260,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -262,25 +275,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -321,7 +338,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -427,7 +444,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -457,6 +474,9 @@ private void _pushOutputtedElement(\n   private boolean     _dontEscape;\n \n   private Writer       _out;\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private String       _contentType;\n   private String       _encoding;\n \n@@ -465,13 +485,13 @@ private void _pushOutputtedElement(\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(XhtmlResponseWriter.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java",
                "sha": "93575d5a97c480e5450a78c7d753e6696ee82979",
                "status": "modified"
            },
            {
                "additions": 44,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 22,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java",
                "patch": "@@ -51,13 +51,20 @@\n  */\n public final class RegionMetadata extends RegionManager\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  private RegionMetadata()\n+  {\n+    _map = Collections.EMPTY_MAP;\n+  }\n+  \n+  @Override\n   public RegionConfig getRegionConfig(String regionType)\n   {\n-    return (ComponentMetaData) _map.get(regionType);\n+    return _map.get(regionType);\n   }\n \n-  public Map getRegionConfigs()\n+  @Override\n+  public Map<String, RegionConfig> getRegionConfigs()\n   {\n     return Collections.unmodifiableMap(_map);\n   }\n@@ -69,10 +76,11 @@ public Map getRegionConfigs()\n    * All resources with the name \"/META-INF/region-metadata.xml\" will be searched.\n    * /WEB-INF/region-metadata.xml will also be searched.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized RegionMetadata getRegionMetadata(\n     FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     RegionMetadata bean = (RegionMetadata) appMap.get(_KEY);\n     if (bean == null)\n     {\n@@ -109,9 +117,10 @@ public static synchronized RegionMetadata getRegionMetadata(\n    * The next time {@link #getRegionMetadata} is called, it\n    * will reparse all the region-metadata.xml files.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized void invalidate(FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     appMap.remove(_KEY);\n   }\n \n@@ -126,10 +135,10 @@ private static void _readAllRegionMDFiles(\n     }\n     try\n     {\n-      Enumeration files = loader.getResources(regionMDFile);\n+      Enumeration<URL> files = loader.getResources(regionMDFile);\n       while(files.hasMoreElements())\n       {\n-        URL url = (URL)files.nextElement();\n+        URL url = files.nextElement();\n         String publicId = url.toString();\n         try\n         {\n@@ -196,20 +205,16 @@ private void _put(String componentType, ComponentMetaData comp)\n     }\n     if (_map == Collections.EMPTY_MAP)\n     {\n-      _map = new HashMap(5);\n+      _map = new HashMap<String, RegionConfig>(5);\n     }\n-    ComponentMetaData old = (ComponentMetaData) _map.put(componentType, comp);\n+    RegionConfig old = _map.put(componentType, comp);\n     if (old != null)\n     {\n       _LOG.warning(\"Replaced jspUri {0} with {1} for componentType:{2}\",\n         new Object[] {old.getJspUIDef(), comp.getJspUIDef(), componentType});\n     }\n   }\n \n-  private RegionMetadata()\n-  {\n-  }\n-\n \n   static private class Handler extends DefaultHandler\n   {\n@@ -218,6 +223,7 @@ public Handler(RegionMetadata bean)\n       _bean = bean;\n     }\n \n+    @Override\n     public InputSource resolveEntity (String publicId, String systemId)\n     \tthrows SAXException\n     {\n@@ -226,12 +232,14 @@ public InputSource resolveEntity (String publicId, String systemId)\n       return new InputSource(new StringReader(\"\"));\n     }\n \n+    @Override\n     public void setDocumentLocator(Locator locator)\n     {\n       super.setDocumentLocator(locator);\n       _loc = locator;\n     }\n \n+    @Override\n     public void startElement(String uri,\n                              String localName,\n                              String qName,\n@@ -315,6 +323,7 @@ private boolean _changeState(String localName, String tag, int newState)\n       return false;\n     }\n \n+    @Override\n     public void characters(char[] ch, int start, int length)\n     {\n       switch(_state)\n@@ -330,6 +339,7 @@ public void characters(char[] ch, int start, int length)\n       }\n     }\n \n+    @Override\n     public void endElement(String uri,\n                            String localName,\n                            String qName)\n@@ -398,7 +408,7 @@ private void _addComponentMetadata()\n       _comp._trim(); // no more attributes will be added, so trim-to-size\n     }\n \n-    private Class _getClass(String javaType)\n+    private Class<?> _getClass(String javaType)\n     {\n       String className = ConvertBoundValue.getClassName(javaType);\n       try\n@@ -477,16 +487,17 @@ private void _skip(String localName)\n \n   public static final class AttributeMetaData\n   {\n-    private String _name, _default;\n-    private Class _class;\n+    private String _default;\n+    private String _name;\n+    private Class<?> _class;\n     private boolean _required = false;\n \n     public String getAttrName()\n     {\n       return _name;\n     }\n \n-    public Class getAttrClass()\n+    public Class<?> getAttrClass()\n     {\n       return _class;\n     }\n@@ -504,30 +515,37 @@ public boolean isRequired()\n \n   public static final class ComponentMetaData extends RegionConfig\n   {\n-    private String _jsp, _regionType;\n-    private List _attrs = Collections.EMPTY_LIST;\n+    @SuppressWarnings(\"unchecked\")\n+    public ComponentMetaData()\n+    {\n+      _attrs = Collections.EMPTY_LIST;\n+    }\n \n+    @Override\n     public String getDescription()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getDisplayName()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getComponentType()\n     {\n       return _regionType;\n     }\n \n+    @Override\n     public String getJspUIDef()\n     {\n       return _jsp;\n     }\n \n-    public List getAttributes()\n+    public List<AttributeMetaData> getAttributes()\n     {\n       return _attrs;\n     }\n@@ -536,7 +554,7 @@ private void _addAttribute(AttributeMetaData attr)\n     {\n       if (_attrs == Collections.EMPTY_LIST)\n       {\n-        _attrs = new ArrayList(5);\n+        _attrs = new ArrayList<AttributeMetaData>(5);\n       }\n       _attrs.add(attr);\n     }\n@@ -546,9 +564,13 @@ public void _trim()\n       if (_attrs instanceof ArrayList)\n         ((ArrayList) _attrs).trimToSize();\n     }\n+    \n+    private String _jsp;\n+    private String _regionType;\n+    private List<AttributeMetaData> _attrs;\n   }\n \n-  private Map _map = Collections.EMPTY_MAP;\n+  private Map<String, RegionConfig> _map;\n \n   private static final int _STATE_INIT = 0;\n   private static final int _STATE_SKIP = 10;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java",
                "sha": "3ce7337697094d81a32251e5b581d8f49373dd93",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java",
                "patch": "@@ -43,7 +43,7 @@ public Renderer instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return (Renderer) classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java",
                "sha": "da87a55edb5b09abd187e90a4eae8b7516126f04",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java",
                "patch": "@@ -36,13 +36,13 @@ public CoreRenderKitFactory(RenderKitFactory factory)\n     _factory = factory;\n   }\n \n-\n+  @Override\n   public void addRenderKit(String renderKitId, RenderKit renderKit)\n   {\n     _factory.addRenderKit(renderKitId, renderKit);\n   }\n \n-\n+  @Override\n   public RenderKit getRenderKit(FacesContext context, String renderKitId)\n   {\n     if (CoreRenderKit.getId().equals(renderKitId))\n@@ -53,7 +53,9 @@ public RenderKit getRenderKit(FacesContext context, String renderKitId)\n     return _factory.getRenderKit(context, renderKitId);\n   }\n \n-  public Iterator getRenderKitIds()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Iterator<String> getRenderKitIds()\n   {\n     return _factory.getRenderKitIds();\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java",
                "sha": "54f0e76cdfe9b0b94bcc3478ecd2f5ecaa6aaca0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java",
                "patch": "@@ -55,6 +55,7 @@ public RenderKitBase()\n    * @exception NullPointerException if <code>rendererType</code> or\n    *  <code>renderer</code> is null\n    */\n+  @Override\n   public void addRenderer(\n      String family,\n      String rendererType,\n@@ -109,6 +110,7 @@ public void addRenderer(String family,\n    * @exception NullPointerException if <code>rendererType</code>\n    *  is <code>null</code>\n    */\n+  @Override\n   public Renderer getRenderer(String family, String rendererType)\n   {\n     Renderer renderer = findRenderer(family, rendererType);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java",
                "sha": "f39058aacc505e6591088906428dc5fa0cdd7d72",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java",
                "patch": "@@ -37,6 +37,7 @@\n     return Service.getService(getRenderKit(), serviceClass);\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(\n     Writer writer,\n     String contentTypeList,\n@@ -49,17 +50,17 @@ public ResponseWriter createResponseWriter(\n     return createDecoratedResponseWriter(out);\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(\n     OutputStream out)\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.createResponseStream(out);\n+    return getRenderKit().createResponseStream(out);\n   }\n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.getResponseStateManager();\n+    return getRenderKit().getResponseStateManager();\n   }\n \n   protected ResponseWriter createDecoratedResponseWriter(\n@@ -68,6 +69,7 @@ protected ResponseWriter createDecoratedResponseWriter(\n     return delegate;\n   }\n \n+  @Override\n   protected Renderer findRenderer(\n     String componentFamily,\n     String rendererType)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java",
                "sha": "b9ae330d809dcf8068b4600169a40d4e198794ac",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java",
                "patch": "@@ -16,7 +16,7 @@\n package org.apache.myfaces.trinidadinternal.renderkit;\n \n import java.io.IOException;\n-import java.util.Iterator;\n+import java.util.List;\n \n import javax.faces.component.UIComponent;\n import javax.faces.component.UIForm;\n@@ -40,6 +40,7 @@ private RenderUtils()\n   /**\n    * Encodes a component and all of its children.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void encodeRecursive(FacesContext context,\n                                      UIComponent component)\n     throws IOException\n@@ -55,9 +56,10 @@ static public void encodeRecursive(FacesContext context,\n       {\n         if (component.getChildCount() > 0)\n         {\n-          Iterator children = component.getChildren().iterator();\n-          while (children.hasNext())\n-            encodeRecursive(context, (UIComponent) children.next());\n+          for(UIComponent child : (List<UIComponent>)component.getChildren())\n+          {\n+            encodeRecursive(context, child);\n+          }\n         }\n       }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java",
                "sha": "fc4fc08fef4eadcf1fe99b17410c4d7258590297",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java",
                "patch": "@@ -39,7 +39,7 @@\n    */\n   static public RenderingContext getCurrentInstance()\n   {\n-    return (RenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   static public final Object INACCESSIBLE_MODE =\n@@ -55,7 +55,7 @@ public RenderingContext()\n   /**\n    * A map of properties specific to rendering.\n    */\n-  abstract public Map           getProperties();\n+  abstract public Map<Object, Object> getProperties();\n \n   abstract public TrinidadAgent getAgent();\n   /**\n@@ -101,8 +101,8 @@ public String getTranslatedString(String key)\n \n \n   abstract public String getStyleClass(String styleClass);\n-  abstract public void   setSkinResourceKeyMap(Map mapping);\n-  abstract public Map    getSkinResourceKeyMap();\n+  abstract public void   setSkinResourceKeyMap(Map<String, String> mapping);\n+  abstract public Map<String, String> getSkinResourceKeyMap();\n   abstract public boolean isRightToLeft();\n   abstract public String getOutputMode();\n   abstract public Object getAccessibilityMode();\n@@ -128,7 +128,7 @@ public void release()\n   {\n     Object o = _CURRENT_CONTEXT.get();\n     // Clean up first...\n-    _CURRENT_CONTEXT.set(null);\n+    _CURRENT_CONTEXT.remove();\n \n     // Then see if there's a problem, and scream if there is one\n     if (o == null)\n@@ -164,7 +164,9 @@ protected void attach()\n   }\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<RenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<RenderingContext>();\n+  \n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(RenderingContext.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java",
                "sha": "0e200af1fca081a1e119c5a220c29e7d34120f83",
                "status": "modified"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java",
                "changes": 74,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 27,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java",
                "patch": "@@ -21,7 +21,6 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n@@ -163,7 +162,9 @@ public CoreRenderKit()\n   static public void saveDialogPostbackValues(\n     String returnId)\n   {\n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     pageFlowScope.put(_RETURN_ID, returnId);\n   }\n \n@@ -172,13 +173,14 @@ static public void saveDialogPostbackValues(\n   //\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map          processParameters,\n-    boolean      useWindow,\n-    Map          windowProperties)\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties)\n   {\n     // If we're not being asked to use a separate window,\n     // just fallback on the default launchDialog() code\n@@ -194,17 +196,19 @@ public boolean launchDialog(\n     String formId = RenderUtils.getFormId(context, source);\n \n     if (windowProperties == null)\n-      windowProperties = new HashMap();\n+      windowProperties = new HashMap<String,Object>();\n \n     // Copy properties from the source component to the dialog properties\n     if (source != null)\n     {\n-      Map sourceAttrs = source.getAttributes();\n+      Map<String, Object> sourceAttrs = source.getAttributes();\n       _copyProperty(windowProperties, \"width\", sourceAttrs, \"windowWidth\");\n       _copyProperty(windowProperties, \"height\", sourceAttrs, \"windowHeight\");\n     }\n \n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     if (processParameters != null)\n       pageFlowScope.putAll(processParameters);\n \n@@ -254,12 +258,14 @@ public boolean returnFromDialog(\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   public boolean isReturning(\n     FacesContext context,\n     UIComponent  source)\n   {\n-    Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameterMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object returning = parameterMap.get(RETURN_PARAM);\n     if ((returning == null) || \"\".equals(returning))\n       return false;\n@@ -277,12 +283,14 @@ public boolean isReturning(\n   // BEGIN ExtendedRenderKitService\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean shortCircuitRenderView(\n     FacesContext context) throws IOException\n   {\n     if (PartialPageUtils.isPartialRequest(context))\n     {\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = \n+        context.getExternalContext().getRequestMap();\n \n       UIViewRoot originalRoot = (UIViewRoot) requestMap.get(\n                          TrinidadPhaseListener.INITIAL_VIEW_ROOT_KEY);\n@@ -436,17 +444,20 @@ public void encodeFinally(FacesContext context)\n   //\n \n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n     return _rsm;\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(OutputStream out)\n   {\n     // =-=AEW What to do here???\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(Writer writer,\n                                              String contentTypeList,\n                                              String characterEncoding)\n@@ -555,31 +566,40 @@ private void _addBasicHTMLRenderKit()\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private List<DialogRequest> _getDialogList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<DialogRequest> l = (List<DialogRequest>)\n-      requestMap.get(_DIALOG_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<DialogRequest> l = \n+      (List<DialogRequest>)requestMap.get(_DIALOG_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<DialogRequest>();\n       requestMap.put(_DIALOG_LIST_KEY, l);\n     }\n \n     return l;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private List<String> _getScriptList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<String> l = (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<String> l = \n+      (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<String>();\n       requestMap.put(_SCRIPT_LIST_KEY, l);\n     }\n \n@@ -640,15 +660,15 @@ private Writer _getHtmlWriter(FacesContext context) throws IOException\n   };\n \n \n-  static private void _copyProperty(\n-    Map    toMap,\n-    Object toKey,\n-    Map    fromMap,\n-    Object fromKey)\n+  static private <K1, K2, V> void _copyProperty(\n+    Map<K1, V> toMap,\n+    K1 toKey,\n+    Map<K2, ? extends V> fromMap,\n+    K2 fromKey)\n   {\n     if (!toMap.containsKey(toKey))\n     {\n-      Object o = fromMap.get(fromKey);\n+      V o = fromMap.get(fromKey);\n       if (o != null)\n         toMap.put(toKey, o);\n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java",
                "sha": "6313591bdc031c9686562038e42a09a842419112",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 26,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java",
                "patch": "@@ -145,6 +145,7 @@ static public char toChar(Object o)\n   }\n \n \n+  @Override\n   public final void encodeBegin(FacesContext context,\n                           UIComponent component) throws IOException\n   {\n@@ -159,12 +160,14 @@ public final void encodeBegin(FacesContext context,\n     }\n   }\n \n+  @Override\n   public final void encodeChildren(FacesContext context, UIComponent component)\n   {\n     // encodeChildren() is fairly useless - it's simpler to just\n     // put the output in encodeEnd(), or use the encodeAll() hook\n   }\n \n+  @Override\n   public final void encodeEnd(FacesContext context,\n                         UIComponent component) throws IOException\n   {\n@@ -232,6 +235,7 @@ protected void encodeAll(\n    * can be used if you don't need that check.)\n    * =-=AEW Ugh.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected void encodeChild(\n     FacesContext context,\n     UIComponent  child) throws IOException\n@@ -246,16 +250,18 @@ protected void encodeChild(\n     {\n       if (child.getChildCount() > 0)\n       {\n-        Iterator children = child.getChildren().iterator();\n-        while (children.hasNext())\n-          RenderUtils.encodeRecursive(context, (UIComponent) children.next());\n+        for(UIComponent subChild : (List<UIComponent>)child.getChildren())\n+        {\n+          RenderUtils.encodeRecursive(context, subChild);\n+        }\n       }\n     }\n     \n     child.encodeEnd(context);\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected final void encodeAllChildren(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -264,14 +270,12 @@ protected final void encodeAllChildren(\n     if (childCount == 0)\n       return;\n     \n-    List children   = component.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n-      if (!child.isRendered())\n-        continue;\n-\n-      encodeChild(context, child);\n+      if (child.isRendered())\n+      {\n+        encodeChild(context, child);\n+      }\n     }\n   }\n \n@@ -442,18 +446,19 @@ static public UIComponent getFacet(\n    * Returns true if the component has children and at least\n    * one has rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public boolean hasRenderedChildren(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return false;\n       \n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         return true;\n+      }\n     }\n     \n     return false;\n@@ -462,19 +467,20 @@ static public boolean hasRenderedChildren(UIComponent component)\n   /**\n    * Returns the total number of children with rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public int getRenderedChildCount(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return 0;\n       \n     int total = 0;\n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         total++;\n+      }\n     }\n     \n     return total;\n@@ -488,26 +494,20 @@ static public int getRenderedChildCount(UIComponent component)\n    * {@link #NO_CHILD_INDEX} if there is none.\n    */\n   public static int getNextRenderedChildIndex(\n-    List components,\n+    List<UIComponent> components,\n     int  afterChildIndex\n     )\n   {\n-    int childCount = components.size();\n     int childIndex = afterChildIndex + 1;\n-\n-    for (; childIndex < childCount; childIndex++)\n+    Iterator<UIComponent> iter = components.listIterator(childIndex);\n+    for(; iter.hasNext(); childIndex++)\n     {\n-      UIComponent currChild = (UIComponent)components.get(childIndex);\n-\n-      if (currChild.isRendered())\n+      if(iter.next().isRendered())\n       {\n         return childIndex;\n       }\n     }\n \n     return NO_CHILD_INDEX;\n   }\n-\n-  \n-\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java",
                "sha": "69f355b5e80d0af89270c91abfcf484fc979d5e4",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 24,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java",
                "patch": "@@ -62,6 +62,8 @@ public CoreRenderingContext()\n     FacesContext context = FacesContext.getCurrentInstance();\n     RequestContext afContext = RequestContext.getCurrentInstance();\n \n+    _properties = new HashMap<Object, Object>();\n+    \n     _outputMode = afContext.getOutputMode();\n     _agent = _initializeAgent(context, afContext.getAgent(), _outputMode);\n \n@@ -122,16 +124,19 @@ public void setLinkDisabled(boolean isDisabled)\n \n   // Implementation of AdfRenderingContext\n \n-  public Map getProperties()\n+  @Override\n+  public Map<Object, Object> getProperties()\n   {\n     return _properties;\n   }\n \n+  @Override\n   public TrinidadAgent getAgent()\n   {\n     return _agent;\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     if (_localeContext != null)\n@@ -142,12 +147,14 @@ public boolean isRightToLeft()\n     return RequestContext.getCurrentInstance().isRightToLeft();\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return _outputMode;\n   }\n \n \n+  @Override\n   public Object getAccessibilityMode()\n   {\n     return _accessibilityMode;\n@@ -156,23 +163,27 @@ public Object getAccessibilityMode()\n   /**\n    * This will create a FormData object if it's null.\n    */\n+  @Override\n   public FormData getFormData()\n   {\n     assert(_formData != null);\n     return _formData;\n   }\n \n+  @Override\n   public void setFormData(FormData formData)\n   {\n     _formData = formData;\n   }\n \n+  @Override\n   public void clearFormData()\n   {\n     _formData = null;\n   }\n \n \n+  @Override\n   public Skin getSkin()\n   {\n     return _skin;\n@@ -181,6 +192,7 @@ public Skin getSkin()\n   /**\n    * Get an interface that can be used for style lookups and generation.\n    */\n+  @Override\n   public StyleContext getStyleContext()\n   {\n     if (_styleContext == null)\n@@ -195,6 +207,7 @@ public StyleContext getStyleContext()\n   }\n \n \n+  @Override\n   public LocaleContext getLocaleContext()\n   {\n     // Initialize the locale context lazily, because we may\n@@ -209,11 +222,13 @@ public LocaleContext getLocaleContext()\n     return _localeContext;\n   }\n \n+  @Override\n   public PartialPageContext getPartialPageContext()\n   {\n     return _pprContext;\n   }\n \n+  @Override\n   public String getStyleClass(String styleClass)\n   {\n     if (styleClass == null) return null;\n@@ -222,7 +237,7 @@ public String getStyleClass(String styleClass)\n     String shortenedStyle = null;\n     if (_styleMap != null)\n     {\n-      shortenedStyle = (String) _styleMap.get(styleClass);\n+      shortenedStyle = _styleMap.get(styleClass);\n     }\n \n     if (shortenedStyle != null)\n@@ -238,7 +253,7 @@ public String getStyleClass(String styleClass)\n     return styleClass;\n   }\n \n-\n+  @Override\n   public Icon getIcon(String iconName)\n   {\n     iconName = getSkinResourceMappedKey(iconName);\n@@ -280,7 +295,7 @@ public Icon getIcon(String iconName)\n   /**\n    * Store a map that provides abbreviations of styles.\n    */\n-  public void setStyleMap(Map mapping)\n+  public void setStyleMap(Map<String, String> mapping)\n   {\n     _styleMap = mapping;\n   }\n@@ -289,7 +304,8 @@ public void setStyleMap(Map mapping)\n   /**\n    * Store a Map that maps a skin's resource keys from one key to another.\n    */\n-  public void setSkinResourceKeyMap(Map mapping)\n+  @Override\n+  public void setSkinResourceKeyMap(Map<String, String> mapping)\n   {\n     _skinResourceKeyMap = mapping;\n   }\n@@ -298,18 +314,19 @@ public void setSkinResourceKeyMap(Map mapping)\n   /**\n    * Get the _skinResourceKeyMap Map.\n    */\n-  public Map getSkinResourceKeyMap()\n+  @Override\n+  public Map<String, String> getSkinResourceKeyMap()\n   {\n     return _skinResourceKeyMap;\n   }\n \n   protected String getSkinResourceMappedKey(String key)\n   {\n-    Map keyMap = getSkinResourceKeyMap();\n+    Map<String, String> keyMap = getSkinResourceKeyMap();\n \n     if (keyMap != null)\n     {\n-      String mappedKey = (String) keyMap.get(key);\n+      String mappedKey = keyMap.get(key);\n       // if it isn't in the map, just use the key itself.\n       if (mappedKey != null)\n       {\n@@ -415,11 +432,14 @@ private void _initializePPR(\n    * Get the directory for temporary files.\n    * @todo: move into the util package?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public String getTemporaryDirectory(FacesContext fContext)\n   {\n     String path = null;\n \n-    Map applicationMap = fContext.getExternalContext().getApplicationMap();\n+    Map<String, Object> applicationMap = \n+      fContext.getExternalContext().getApplicationMap();\n+    \n     if (applicationMap != null)\n     {\n       // In general, write to the Servlet spec'd temporary directory\n@@ -482,23 +502,32 @@ private void _initializeLocaleContext(\n   }\n \n \n-  private Skin               _skin;\n-  private FormData           _formData;\n-  private TrinidadAgent      _agent;\n-  private Map                _styleMap;\n-  private Map                _skinResourceKeyMap;\n-  private String             _outputMode;\n-  private Object             _accessibilityMode;\n-  private PartialPageContext _pprContext;\n-  private LocaleContext      _localeContext;\n-  private StyleContext       _styleContext;\n-  private Map                _properties = new HashMap();\n-  private int                _linkStyleDisabledCount = 0;\n-  private boolean            _isLinkDisabled = false;\n+  private Skin                _skin;\n+  private FormData            _formData;\n+  private TrinidadAgent       _agent;\n+  private Map<String, String> _styleMap;\n+  private Map<String, String> _skinResourceKeyMap;\n+  private String              _outputMode;\n+  private Object              _accessibilityMode;\n+  private PartialPageContext  _pprContext;\n+  private LocaleContext       _localeContext;\n+  private StyleContext        _styleContext;\n+  private Map<Object, Object> _properties;\n+  private int                 _linkStyleDisabledCount = 0;\n+  private boolean             _isLinkDisabled = false;\n \n   // Maps describing the capabilities of our output modes\n-  static private final Map _PRINTABLE_CAPABILITIES = new HashMap();\n-  static private final Map _EMAIL_CAPABILITIES = new HashMap();\n+  // -= Simon Lessard =-\n+  // FIXME: Cannot use CapabilityKey in the generic definition because \n+  //        CapabilityKey is not in the public API and those map are \n+  //        used as a parameter in an API call receiving a \n+  //        Map<Object, Object> argument\n+  static private final Map<Object, Object> _PRINTABLE_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n+  static private final Map<Object, Object> _EMAIL_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n   static\n   {\n     _PRINTABLE_CAPABILITIES.put(TrinidadAgent.CAP_INTRINSIC_EVENTS,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java",
                "sha": "5a9965b81390732f6cc263eb898d0e33b50a515a",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java",
                "patch": "@@ -59,6 +59,7 @@\n    *       instead of buffering it.\n    * @todo Don't directly write out hidden input field;  use an abstraction\n    */\n+  @Override\n   public void writeState(\n     FacesContext context,\n     StateManager.SerializedView serializedView) throws IOException\n@@ -102,6 +103,7 @@ protected String encodeSerializedViewAsString(\n     return retVal;\n   }\n \n+  @Override\n   public Object getTreeStructureToRestore(FacesContext context,\n                                           String viewId)\n   {\n@@ -112,6 +114,7 @@ public Object getTreeStructureToRestore(FacesContext context,\n     return view[0];\n   }\n \n+  @Override\n   public Object getComponentStateToRestore(FacesContext context)\n   {\n     Object[] view = _restoreSerializedView(context);\n@@ -127,17 +130,20 @@ public Object getComponentStateToRestore(FacesContext context)\n    * @todo ensure that the caching never gets confused by two\n    *       different views being reconstituted in the same request?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private Object[] _restoreSerializedView(\n      FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Object[] view = (Object[]) requestMap.get(_CACHED_SERIALIZED_VIEW);\n     if (view == null)\n     {\n-      Map requestParamMap =\n+      Map<String, String> requestParamMap =\n          context.getExternalContext().getRequestParameterMap();\n \n-      String stateString = (String) requestParamMap.get(_STATE_FIELD_NAME);\n+      String stateString = requestParamMap.get(_STATE_FIELD_NAME);\n       if (stateString == null)\n         return null;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java",
                "sha": "948f9dea315f7b5c1669537793b7a22699c0ea7d",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 12,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java",
                "patch": "@@ -34,15 +34,16 @@\n  */\n class DialogRequest\n {\n+  @SuppressWarnings(\"unchecked\")\n   public DialogRequest(\n-    UIViewRoot targetRoot,\n-    String     clientId,\n-    String     formId,\n-    Map        dialogProperties\n+    UIViewRoot         targetRoot,\n+    String             clientId,\n+    String             formId,\n+    Map<String,Object> dialogProperties\n     )\n   {\n-    _clientId          = clientId;\n-    _formId             = formId;\n+    _clientId = clientId;\n+    _formId   = formId;\n \n     if (dialogProperties == null)\n       dialogProperties = Collections.EMPTY_MAP;\n@@ -54,6 +55,7 @@ public DialogRequest(\n                                   targetRoot,\n                                   CoreRenderer.toString(width),\n                                   CoreRenderer.toString(height));\n+    \n     _dialogProperties  = dialogProperties;\n   }\n \n@@ -99,10 +101,10 @@ public void renderLaunchJavascript(\n       out.writeText(_DEFAULT_HEIGHT, null);\n     }\n \n-    Iterator propertiesIter = _dialogProperties.keySet().iterator();\n+    Iterator<String> propertiesIter = _dialogProperties.keySet().iterator();\n     while (propertiesIter.hasNext())\n     {\n-      Object key = propertiesIter.next();\n+      String key = propertiesIter.next();\n       Object value = _dialogProperties.get(key);\n       // =-=AEW When to put in quotes????\n       if (value != null)\n@@ -143,10 +145,10 @@ static private synchronized String _getDialogWindowName()\n     return \"ADFDialog\" + _sCount++;\n   }\n \n-  private final String     _clientId;\n-  private final String     _formId;\n-  private final String     _url;\n-  private final Map        _dialogProperties;\n+  private final String             _clientId;\n+  private final String             _formId;\n+  private final String             _url;\n+  private final Map<String,Object> _dialogProperties;\n \n \n   // Some default widths and heights to avoid popping up huge",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java",
                "sha": "c13d641347109af82cdffa5a375f18104be8f323",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java",
                "patch": "@@ -30,9 +30,9 @@ public DesktopRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;\n   }\n-\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java",
                "sha": "9336b15177a770856af76add7eaf0f7e169223d3",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java",
                "patch": "@@ -64,6 +64,7 @@ protected DesktopTableRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,6 +82,7 @@ public DesktopTableRenderer()\n     this(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext context,\n     RenderingContext arc,\n@@ -226,6 +228,7 @@ protected final void renderControlBarLink(\n       writer.writeText(LINKS_DIVIDER_TEXT, null);\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -241,6 +244,7 @@ protected void renderSubControlBar(\n     renderSelectionLinks(context, arc, tContext, component);\n   }\n \n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     RenderingContext arc,\n@@ -504,6 +508,7 @@ private void _writeIEscrollScript(\n \n \n   // render the control bar\n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -626,6 +631,7 @@ protected void renderTableRows(\n    * renders attributes on the outermost table element.\n    * this includes width, cellpadding, cellspacing, border.\n    */\n+  @Override\n   protected void renderTableAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -815,6 +821,7 @@ private void _renderTableRows(\n     final UIComponent detail = tContext.getDetail();\n     final RenderStage renderStage = tContext.getRenderStage();\n     TableUtils.RowLoop loop = new TableUtils.RowLoop() {\n+      @Override\n       protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n         throws IOException\n       {\n@@ -939,6 +946,7 @@ protected final void renderRegularHeaders(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderRegularColumns(\n     FacesContext          context,\n     TableRenderingContext tContext,\n@@ -948,7 +956,7 @@ private void _renderRegularColumns(\n     // this renders a whole bunch of <TH>...</TH> elements.\n     // part of #1313720, base column header count on\n     // table child count\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int colCount  = children.size();\n     int[] hidden = tContext.getHiddenColumns();\n     ColumnData colData = tContext.getColumnData();\n@@ -975,6 +983,7 @@ private void _renderRegularColumns(\n   /**\n    * @todo Re-fix bug 3211593 (see below)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected final void renderFooter(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -1017,14 +1026,12 @@ protected final void renderFooter(\n         colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                0/*logicalColumnIndex*/);\n \n-        List children = component.getChildren();\n-        int count = children.size();\n-\n-        for (int i = 0; i < count; i++)\n+        for(UIComponent child : (List<UIComponent>)component.getChildren())\n         {\n-          UIComponent child = (UIComponent) children.get(i);\n           if (child.isRendered())\n+          {\n             encodeChild(context, child);\n+          }\n         }\n       }\n       writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n@@ -1058,52 +1065,61 @@ public AllDetail(boolean disclosed)\n       _disclosed = disclosed;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n        FacesBean           bean)\n     {\n     }\n \n+    @Override\n     protected boolean isTableAllDisclosure()\n     {\n       return true;\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       return \"all\";\n     }\n \n \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       return _disclosed;\n     }\n \n+    @Override\n     protected String getDisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_HIDE_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getUndisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_SHOW_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getLinkId(String rootId, boolean disclosed)\n     {\n       String suffix = (disclosed ? \"ha\" : \"sa\");\n       return XhtmlUtils.getCompositeId(rootId, suffix);\n     }\n \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java",
                "sha": "833e71d31e1e38b92e86d262d1c0352c104dbd95",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java",
                "patch": "@@ -58,9 +58,12 @@ public TrainRenderer()\n   \n   /**\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map requestMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestMap = \n+      context.getExternalContext().getRequestParameterMap();\n \n     Object event = requestMap.get(XhtmlConstants.EVENT_PARAM);\n \n@@ -135,11 +138,13 @@ public void decode(FacesContext context, UIComponent component)\n   /**\n    * @return\n    */\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext context, \n     RenderingContext arc, \n@@ -190,6 +195,7 @@ protected void encodeAll(\n    * This is how we can render both the user defined styleClass and our\n    * component style class\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext context, \n     RenderingContext arc, \n@@ -536,7 +542,7 @@ private void _renderLink(\n \n     renderStyleClass(context, arc, styleClass);\n \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -799,7 +805,8 @@ public TrainState()\n \n   // for now keep the OraLink/OraDisabledLink styles on the 'a', and\n   // append train link style class.\n-  private static final Map _RESOURCE_KEY_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP = \n+    new HashMap<String, String>();\n   private static final String _TRAIN_DISABLED_LINK = \n     XhtmlConstants.LINK_DISABLED_STYLE_CLASS + \" \" + \n     XhtmlConstants.AF_PROCESS_TRAIN_LINK_STYLE_CLASS;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java",
                "sha": "60b1c13b487ba436f60460e97f280d377b6c2c61",
                "status": "modified"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java",
                "patch": "@@ -69,6 +69,7 @@ public TreeTableRenderer()\n     super(CoreTreeTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -83,13 +84,17 @@ protected void findTypeConstants(FacesBean.Type type)\n    *  DisclosureEvent\n    * @todo deal with null and exceptions\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(\n     FacesContext context,\n     UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     if (component.getClientId(context).equals(source))\n     {\n@@ -107,6 +112,7 @@ public void decode(\n    * Creates the correct subclass of the TableRenderingContext to\n    * use for this Renderer.\n    */\n+  @Override\n   protected TableRenderingContext createRenderingContext(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -121,6 +127,7 @@ protected TableRenderingContext createRenderingContext(\n    * @return true if the table was empty, and an alternative empty\n    * version was shown, false otherwise.\n    */\n+  @Override\n   protected boolean renderTableWithoutColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -133,6 +140,7 @@ protected boolean renderTableWithoutColumns(\n   /**\n    * render all pieces of the table\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -180,6 +188,7 @@ protected boolean isImmediate(UIComponent component, FacesBean bean)\n    * Render the navigation header bars, i.e. all the bars that appear above the\n    * actual data table including the breadcrumbs at the end.\n    */\n+  @Override\n   protected void renderNavigationHeaderBars(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -191,6 +200,7 @@ protected void renderNavigationHeaderBars(\n     _renderBreadCrumbs(context, arc, tContext, component, bean);\n   }\n \n+  @Override\n   protected final void renderRangePagingControl(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -213,6 +223,7 @@ protected final void renderRangePagingControl(\n     }\n   }\n \n+  @Override\n   protected boolean hasControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -224,6 +235,7 @@ protected boolean hasControlBarLinks(\n       isExpandAllEnabled(component);\n   }\n \n+  @Override\n   protected void renderControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -269,6 +281,7 @@ protected boolean isExpandAllEnabled(UIComponent component)\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @Override\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -310,6 +323,7 @@ protected int renderSpecialColumns(\n   /**\n    * render all the table rows\n    */\n+  @Override\n   protected void renderTableRows(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -413,18 +427,20 @@ private void _renderBreadCrumbs(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderTableRows(\n     FacesContext          context,\n     final RenderingContext   arc,\n     final TreeTableRenderingContext ttrc) throws IOException\n   {\n     final UIXTreeTable treeTableBase = ttrc.getUIXTreeTable();\n     final ResponseWriter writer = context.getResponseWriter();\n-    final RowKeySet treeState = treeTableBase.getDisclosedRowKeys();\n+    final RowKeySet<Object> treeState = treeTableBase.getDisclosedRowKeys();\n     final int specialColCount = _getSpecialColCount(ttrc);\n \n     TableUtils.RowLoop loop = new TableUtils.RowLoop()\n     {\n+      @Override\n       protected void loop(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -433,6 +449,7 @@ protected void loop(FacesContext context, CollectionComponent treeTable)\n         processRow(context, treeTable);\n       }\n \n+      @Override\n       protected void processRowImpl(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -520,6 +537,7 @@ private int _getSpecialColCount(\n \n   private static final class BreadCrumbsRenderer extends org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BreadCrumbsRenderer\n   {\n+    @Override\n     protected void renderLink(\n       FacesContext context,\n       RenderingContext arc,\n@@ -547,7 +565,7 @@ protected void renderLink(\n       }\n       Object oldPath = tree.getRowKey();\n       Object focusRowKey = ttrc.getFocusRowKey();\n-      List focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n+      List<Object> focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n       Object crumbPath = (renderedCount < focusPath.size())\n         ? focusPath.get(renderedCount)\n         : focusRowKey;\n@@ -566,11 +584,13 @@ protected void renderLink(\n       out.endElement(\"a\");\n     }\n \n+    @Override\n     protected boolean hasChildren(UIComponent component)\n     {\n       return false; // do not render the columns. only the pathStamp\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n@@ -580,6 +600,7 @@ protected boolean shouldRenderId(\n       return false;\n     }\n \n+    @Override\n     protected UIComponent getStamp(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -592,10 +613,13 @@ protected UIComponent getStamp(\n     }\n   }\n \n-  protected Map createResourceKeyMap()\n+  @Override\n+  protected Map<String, String> createResourceKeyMap()\n   {\n-    Map tablemap = super.createResourceKeyMap();\n-    Map map = ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    Map<String, String> tablemap = super.createResourceKeyMap();\n+    Map<String, String> map = \n+      ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    \n     // we need a resource key map since we are using a navigationPath.\n     // and we are using table for the styles\n     map.put(XhtmlConstants.AF_NAVIGATION_PATH_SEPARATOR_ICON_NAME,\n@@ -610,6 +634,7 @@ protected Map createResourceKeyMap()\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_TOP_STYLE);\n     map.put(XhtmlConstants.AF_TABLE_CONTROL_BAR_BOTTOM_STYLE,\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_BOTTOM_STYLE);\n+    \n     return Collections.unmodifiableMap(map);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java",
                "sha": "ef0bbdfaee1c7aba06def2dab046a0a44761e9a9",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java",
                "patch": "@@ -58,6 +58,7 @@\n   /**\n    * @todo Integrate the time zone with RequestContext (somehow)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n@@ -181,16 +182,18 @@ static public void service(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static public boolean processReturnDialog(\n     FacesContext context\n     )\n   {\n-    Map requestParameters = context.getExternalContext().\n-                               getRequestParameterMap();\n-    String event = (String) requestParameters.get(XhtmlConstants.EVENT_PARAM);\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String event = requestParameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.DATE_EVENT.equals(event))\n     {\n-      String value = (String) requestParameters.get(XhtmlConstants.VALUE_PARAM);\n+      String value = requestParameters.get(XhtmlConstants.VALUE_PARAM);\n       Date date;\n       try\n       {\n@@ -216,13 +219,16 @@ else if (XhtmlConstants.CANCEL_EVENT.equals(event))\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static String __getParam(\n     FacesContext context,\n     String name\n     )\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String value = (String) requestParams.get(name);\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String value = requestParams.get(name);\n     if (value == null || value.equals(\"\"))\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java",
                "sha": "8e0bbfbf308085628e1a2c6a7cfd291aef22a85b",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java",
                "patch": "@@ -36,13 +36,15 @@\n  */\n class CalendarUtils\n {\n+  @SuppressWarnings(\"unchecked\")\n   public static CoreChooseDate createChooseDate(FacesContext context)\n   {\n     final String id = CalendarDialogJSP.__getParam(context,\n                                                    XhtmlConstants.SOURCE_PARAM);\n     \n     CoreChooseDate ccd = new CoreChooseDate()\n     {\n+      @Override\n       public String getClientId(FacesContext context)\n       {\n         return id;\n@@ -68,15 +70,15 @@ public String getClientId(FacesContext context)\n     if (selectedTimeString != null)\n     {\n       ccd.getAttributes().put(\"value\",\n-                                   parseTime(selectedTimeString));\n+                              parseTime(selectedTimeString));\n     }\n \n     String displayTimeString = CalendarDialogJSP.__getParam(context,\n                                                             \"scrolledValue\");\n     if (displayTimeString != null)\n     {\n       ccd.getAttributes().put(\"scrolledValue\",\n-                                   parseTime(displayTimeString));\n+                              parseTime(displayTimeString));\n     }\n \n     return ccd;\n@@ -140,13 +142,11 @@ private static long _adjustTimeZone(long dateValueInMs)\n     // maximum date (in ChooseDateRenderer).\n     if (tzOffset < 0)\n     {\n-      tzOffset = (long)Math.max((float)tzOffset, \n-                                (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-      tzOffset = (long)Math.min((float)tzOffset, \n-                                (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n     \n     return dateValueInMs + tzOffset;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java",
                "sha": "0380b8eaa6996b040de5be3719eee32465179d06",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java",
                "patch": "@@ -51,10 +51,12 @@\n  */\n class ColorPickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n     \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     CoreDocument doc = new CoreDocument();\n@@ -81,7 +83,7 @@ static public void service(FacesContext context)\n     sic.setOnkeypress(\"if(_getKC(event)==13){selectColor();return false}\");\n     Converter converter = _getConverter(requestParams);\n     Object value = \n-      converter.getAsObject(context, sic, (String)requestParams.get(\"value\"));\n+      converter.getAsObject(context, sic, requestParams.get(\"value\"));\n     sic.setConverter(converter);\n     sic.setValue(value);\n     sic.setChooseId(\"choose\");\n@@ -134,9 +136,9 @@ static public void service(FacesContext context)\n     doc.getChildren().add(script);\n   }\n \n-  static private Converter _getConverter(Map requestParams)\n+  static private Converter _getConverter(Map<String, String> requestParams)\n   {\n-    String pattern = (String) requestParams.get(\"pattern\");\n+    String pattern = requestParams.get(\"pattern\");\n     boolean allowsTransparent =\n       \"true\".equals(requestParams.get(\"allowsTransparent\"));\n     ColorConverter converter = new ColorConverter();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java",
                "sha": "85914d86ef2b94157ee94d35421e355d86dc11dc",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 13,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java",
                "patch": "@@ -26,7 +26,6 @@\n import javax.faces.component.UIViewRoot;\n import javax.faces.context.FacesContext;\n \n-import org.apache.myfaces.trinidad.context.RequestContext;\n import org.apache.myfaces.trinidad.component.core.CoreImportScript;\n import org.apache.myfaces.trinidad.component.core.output.CoreOutputText;\n import org.apache.myfaces.trinidad.component.html.HtmlHtml;\n@@ -35,7 +34,6 @@\n import org.apache.myfaces.trinidad.component.html.HtmlScript;\n \n import org.apache.myfaces.trinidadinternal.context.PageFlowScopeProviderImpl;\n-import org.apache.myfaces.trinidadinternal.renderkit.RenderUtils;\n import org.apache.myfaces.trinidadinternal.renderkit.core.CoreRenderKit;\n import org.apache.myfaces.trinidadinternal.share.url.EncoderUtils;\n \n@@ -94,6 +92,7 @@ static public String getRedirectURL(FacesContext context,\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static void service(FacesContext context) throws IOException\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -103,10 +102,12 @@ static void service(FacesContext context) throws IOException\n     HtmlHtml root = new HtmlHtml();\n     context.getViewRoot().getChildren().add(root);\n \n-    Map requestParameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     // Save the return ID - and do so before generating the\n     // link to the frames!\n-    String returnId = (String) requestParameters.get(_RETURN_ID_PARAM);\n+    String returnId = requestParameters.get(_RETURN_ID_PARAM);\n     if (returnId != null)\n       CoreRenderKit.saveDialogPostbackValues(returnId);\n \n@@ -148,13 +149,13 @@ static void service(FacesContext context) throws IOException\n        context.getExternalContext().getRequestParameterValuesMap());\n \n     // grab any sizing parameters\n-    String widthParam = (String) requestParameters.get(_MIN_WIDTH_PARAM);\n+    String widthParam = requestParameters.get(_MIN_WIDTH_PARAM);\n     boolean gotWidth = (widthParam != null);\n \n-    String heightParam = (String) requestParameters.get(_MIN_HEIGHT_PARAM);\n+    String heightParam = requestParameters.get(_MIN_HEIGHT_PARAM);\n     boolean gotHeight = (heightParam != null);\n \n-    String viewIdRedirect = (String) requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n+    String viewIdRedirect = requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n     if (viewIdRedirect != null)\n     {\n       ViewHandler vh =\n@@ -169,7 +170,7 @@ static void service(FacesContext context) throws IOException\n     }\n     else\n     {\n-      String internalRedirect = (String) requestParameters.get(\"_red\");\n+      String internalRedirect = requestParameters.get(\"_red\");\n       if (internalRedirect != null)\n       {\n         String path = GenericEntry.getGenericEntryURL(context,\n@@ -241,25 +242,25 @@ static void service(FacesContext context) throws IOException\n   }\n \n   static private String _getQueryString(\n-    Map                parameters) throws IOException\n+    Map<String, String[]> parameters) throws IOException\n   {\n     // Bug #3419817 support request dispatch for Portal\n     // build up the encoded query string from request parameters\n     // this will work for both direct requests and include/forward requests\n     StringBuffer buf = new StringBuffer();\n-    Iterator paramNames = parameters.keySet().iterator();\n+    Iterator<String> paramNames = parameters.keySet().iterator();\n     boolean isFirst = true;\n \n     // iterate through the request parameter names\n     while (paramNames.hasNext())\n     {\n-      String paramName = (String)paramNames.next();\n+      String paramName = paramNames.next();\n \n       // add the parameter to the query string unless skipped\n       if (!_SKIP_PARAMS.contains(paramName))\n       {\n         // the parameter might appear on the request more than once\n-        String[] paramValues = (String[]) parameters.get(paramName);\n+        String[] paramValues = parameters.get(paramName);\n \n         for (int i=0; i < paramValues.length; i++)\n         {\n@@ -297,7 +298,7 @@ static private String _getQueryString(\n   static private final String _FRAMESET_ONUNLOAD_TEXT =\n     \"_checkUnload(event)\";\n \n-  static private final Collection _SKIP_PARAMS =\n+  static private final Collection<String> _SKIP_PARAMS =\n     Arrays.asList(new String[]\n                   {\n                     GenericEntry.__ENTRY_KEY_PARAM,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java",
                "sha": "aed9daf8025fc47a1c37ecdd86c67fc0704f1a3f",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 5,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java",
                "patch": "@@ -75,16 +75,19 @@ public GenericEntry()\n   {\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -171,6 +174,7 @@ static public String getGenericEntryPath(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static private void service(FacesContext context, String name)\n     throws IOException\n   {\n@@ -184,7 +188,7 @@ static private void service(FacesContext context, String name)\n \n     if (!_isValidEntry(name))\n     {\n-      response.sendError(response.SC_BAD_REQUEST);\n+      response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n       return;\n     }\n \n@@ -207,8 +211,10 @@ static private void service(FacesContext context, String name)\n       encoding);\n     context.setResponseWriter(responseWriter);\n \n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String localeName = (String) requestParams.get(\"loc\");\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String localeName = requestParams.get(\"loc\");\n     if (localeName != null)\n     {\n       Locale locale =\n@@ -266,11 +272,11 @@ static private boolean _isValidEntry(String name)\n   // Parameter that is used to store the key for the JSP name.\n   //\n   static final String __ENTRY_KEY_PARAM = \"_t\";\n-  static private final Set _VALID_ENTRIES;\n+  static private final Set<String> _VALID_ENTRIES;\n \n   static\n   {\n-    _VALID_ENTRIES = new HashSet();\n+    _VALID_ENTRIES = new HashSet<String>();\n     _VALID_ENTRIES.add(NEW_FRAME_REDIRECT_ENTRY);\n     _VALID_ENTRIES.add(CALENDAR_DIALOG_ENTRY);\n     _VALID_ENTRIES.add(INLINE_DATE_PICKER_ENTRY);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java",
                "sha": "60fe880e286d82d3101663bd78ddbfa0cfdb9faa",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java",
                "patch": "@@ -46,14 +46,16 @@\n  */\n class InlineDatePickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     arc.getPartialPageContext().addPartialTarget(\n-              (String) requestParams.get(XhtmlConstants.SOURCE_PARAM));\n+              requestParams.get(XhtmlConstants.SOURCE_PARAM));\n \n     // Use Html and Body to avoid the cost of the stylesheet\n     HtmlHtml html = new HtmlHtml();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java",
                "sha": "a812b5f330d681809f3bd75d0b180eaa8381c05f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java",
                "patch": "@@ -30,6 +30,7 @@ public PdaRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java",
                "sha": "a098fdf264537f0fd70a20959f62168626731936",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java",
                "patch": "@@ -53,6 +53,7 @@ public PdaTableRenderer()\n     super(CoreTable.TYPE);\n   }\n   \n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -102,6 +103,7 @@ protected final void renderControlBar(\n     }\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -133,6 +135,7 @@ private void _renderEmptyCell(\n   }\n \n   // render the actual table content, with headers\n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     final RenderingContext arc,\n@@ -235,6 +238,7 @@ protected void renderTableContent(\n     {\n       TableUtils.RowLoop loop = new TableUtils.RowLoop()\n         {\n+          @Override\n           protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n             throws IOException\n           {\n@@ -289,7 +293,8 @@ protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n     //context.setDataResponseWriterUsed(false);\n   }\n   \n-     private void _renderColumnFooter(\n+     @SuppressWarnings(\"unchecked\")\n+    private void _renderColumnFooter(\n        FacesContext          context,\n        RenderingContext   arc,\n        TableRenderingContext tContext,\n@@ -331,21 +336,20 @@ private void _renderColumnFooter(\n            colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                   0/*logicalColumnIndex*/);\n \n-           List children = component.getChildren();\n-           int count = children.size();\n-\n-           for (int i = 0; i < count; i++)\n+           for(UIComponent child : (List<UIComponent>)component.getChildren())\n            {\n-             UIComponent child = (UIComponent) children.get(i);\n              if (child.isRendered())\n+             {\n                encodeChild(context, child);\n+             }\n            }\n          }\n          writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n        }\n      }\n \n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext          context,\n     RenderingContext   arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java",
                "sha": "2e9f8c636cf66fc8cb4849fa50339bb31503008a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java",
                "patch": "@@ -44,6 +44,7 @@ public TrainRenderer()\n     super(CoreTrain.TYPE);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext    arc,\n@@ -99,7 +100,7 @@ protected void encodeAll(\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java",
                "sha": "8ce59ecb0bb91a7ee38c1e159c210d9755844aba",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 9,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java",
                "patch": "@@ -37,8 +37,11 @@ public PPRResponseWriter(ResponseWriter     out,\n     super(out);\n     _pprContext = pprContext;\n     _useXMLDom = useXMLDom;\n+    _componentStack = new ArrayList<PPRTag>(50);\n+    _facesContext = FacesContext.getCurrentInstance();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new PPRResponseWriter(\n@@ -47,53 +50,60 @@ public ResponseWriter cloneWithWriter(Writer writer)\n       _useXMLDom);\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.startDocument();\n   }\n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     if (_isInsideTarget())\n       super.flush();\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeComment(text);\n   }\n \n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n-                        char[]      text,\n-                        int         start,\n-                        int         length) throws IOException\n+      char[]      text,\n+      int         start,\n+      int         length) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, start, length);\n   }\n \n-\n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n                     char[]      text,\n                     int         start,\n@@ -103,12 +113,14 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name, UIComponent component)\n      throws IOException\n   {\n@@ -137,7 +149,7 @@ public void startElement(String name, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isInsideTarget())\n@@ -148,6 +160,7 @@ public void endElement(String name) throws IOException\n     _popPartialTarget();\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException\n@@ -165,6 +178,7 @@ public void writeAttribute(String     name,\n     }\n   }\n \n+  @Override\n   public void writeURIAttribute(\n                                 String     name,\n                                 Object     value,\n@@ -230,7 +244,7 @@ else if (\"tr\".equals(element))\n   private void _popPartialTarget() throws IOException\n   {\n     int pos = _componentStack.size() - 1;\n-    PPRTag tag = (PPRTag) _componentStack.get(pos);\n+    PPRTag tag = _componentStack.get(pos);\n     _componentStack.remove(pos);\n \n     if (tag != null)\n@@ -329,6 +343,7 @@ public AddTags(String id, String[] tags)\n       _tags = tags;\n     }\n \n+    @Override\n     public void start(PartialPageContext pprContext) throws IOException\n     {\n       super.start(pprContext);\n@@ -340,6 +355,7 @@ public void start(PartialPageContext pprContext) throws IOException\n       }\n     }\n \n+    @Override\n     public void finish(PartialPageContext pprContext) throws IOException\n     {\n       // And then end them in reverse order...\n@@ -358,10 +374,9 @@ public void finish(PartialPageContext pprContext) throws IOException\n \n   private boolean _writingForm;\n   private final boolean _useXMLDom;\n-  private final List _componentStack = new ArrayList(50);\n+  private final List<PPRTag> _componentStack;\n   private final PartialPageContext _pprContext;\n-  private final FacesContext _facesContext =\n-     FacesContext.getCurrentInstance();\n+  private final FacesContext _facesContext;\n \n   static private final String[] _ADD_TABLE_AND_TR =\n      new String[]{\"table\", \"tr\"};",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java",
                "sha": "f066a9aa73f034ace1c7aa3f76ea9e7303827831",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 13,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java",
                "patch": "@@ -49,11 +49,11 @@\n {\n   PartialPageContext()\n   {\n-    _targets = new HashMap();\n-    _renderedTargets = new HashSet();\n+    _targets = new HashMap<String, Boolean>();\n+    _renderedTargets = new HashSet<String>();\n \n     // Pre-allocate the rendered stack\n-    _currentTargetStack = new Stack();\n+    _currentTargetStack = new Stack<String>();\n   }\n \n   /**\n@@ -71,7 +71,7 @@ public PartialPageContext(\n     // target list.\n     RequestContextImpl adfContext =\n       (RequestContextImpl) afContext;\n-    Iterator targetIter = adfContext.getPartialTargets();\n+    Iterator<String> targetIter = adfContext.getPartialTargets();\n     while (targetIter.hasNext())\n       _targets.put(targetIter.next(), Boolean.FALSE);\n \n@@ -85,10 +85,8 @@ public void finish()\n   {\n     if (_LOG.isWarning())\n     {\n-      Iterator entries = _targets.entrySet().iterator();\n-      while (entries.hasNext())\n+      for(Map.Entry<String, Boolean> entry : _targets.entrySet())\n       {\n-        Map.Entry entry = (Map.Entry) entries.next();\n         if (entry.getValue() == Boolean.FALSE)\n           _LOG.warning(\"PPR target {0} was not rendered.\",\n                        entry.getKey());\n@@ -100,7 +98,7 @@ public void finish()\n   /**\n    * Returns the set of partial targets for this rendering pass.\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _targets.keySet().iterator();\n   }\n@@ -165,7 +163,7 @@ public void addRenderedPartialTarget(String id)\n     _renderedTargets.add(id);\n   }\n \n-  public Iterator getRenderedPartialTargets()\n+  public Iterator<String> getRenderedPartialTargets()\n   {\n     return _renderedTargets.iterator();\n   }\n@@ -237,14 +235,16 @@ private String _getCurrentPartialTarget()\n     if (_currentTargetStack.empty())\n       return null;\n \n-    return (String)_currentTargetStack.peek();\n+    return _currentTargetStack.peek();\n   }\n \n-  private Map _targets;\n-  private Set _renderedTargets;\n+  private Map<String, Boolean> _targets;\n+  private Set<String> _renderedTargets;\n \n   // The stack of partial targets that are currently being rendered\n-  private Stack    _currentTargetStack;\n+  // -= Simon Lessard =-\n+  // FIXME: java.util.Stack... enough said... ArrayList or LinkedList please\n+  private Stack<String> _currentTargetStack;\n \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(PartialPageContext.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java",
                "sha": "3eab404e4834389420f91b7de7a6f8a2e5b9e588",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 15,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java",
                "patch": "@@ -38,13 +38,16 @@\n  */\n public class ScriptBufferingResponseWriter extends ResponseWriterDecorator\n {\n+  @SuppressWarnings(\"unchecked\")\n   public ScriptBufferingResponseWriter(\n      FacesContext   context,\n      ResponseWriter output)\n   {\n     this(output, null);\n \n-    Map requestScope = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestScope = \n+      context.getExternalContext().getRequestMap();\n+    \n     // To support multiple Partial Roots, always look for past\n     // data from a rendered partial request.\n     _data = (Data) requestScope.get(_STORED_DATA_KEY);\n@@ -96,28 +99,31 @@ public String getBufferedScripts()\n    * Returns objects representing any JavaScript libraries that\n    * have been rendered during buffering.\n    */\n-  public Iterator getBufferedLibraries()\n+  public Iterator<Object> getBufferedLibraries()\n   {\n     if (_data.libraries == null)\n       return null;\n \n     return _data.libraries.iterator();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new ScriptBufferingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer),\n       _data);\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     // Don't bother write out comments if we are buffering\n     if (!_checkBuffer())\n       super.writeComment(text);\n   }\n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_checkBuffer())\n@@ -126,6 +132,7 @@ public void writeText(Object text, String property) throws IOException\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n     char[]      text,\n     int         start,\n@@ -138,6 +145,7 @@ public void writeText(\n   }\n \n \n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_checkBuffer())\n@@ -146,6 +154,7 @@ public void write(String text) throws IOException\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n     char[]      text,\n     int         start,\n@@ -157,6 +166,7 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_checkBuffer())\n@@ -165,6 +175,7 @@ public void write(int ch) throws IOException\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -192,6 +203,7 @@ else if (_isObject(name))\n       super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isScript(name))\n@@ -204,7 +216,7 @@ public void endElement(String name) throws IOException\n       {\n         // Add the library to the our list\n         if (_data.libraries == null)\n-          _data.libraries = new ArrayList(10);\n+          _data.libraries = new ArrayList<Object>(10);\n \n         _data.libraries.add(source);\n       }\n@@ -241,6 +253,7 @@ else if (_isObject(name))\n       super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(\n     String     name,\n     Object     value,\n@@ -252,6 +265,7 @@ public void writeAttribute(\n       super.writeAttribute(name, value, property);\n   }\n \n+  @Override\n   public void writeURIAttribute(\n     String     name,\n     Object     value,\n@@ -296,12 +310,12 @@ private boolean _checkBuffer() throws IOException\n     // the script start element now.\n     super.startElement(\"script\", null);\n \n-    Iterator keys = _data.attrs.keys();\n+    Iterator<String> keys = _data.attrs.keys();\n     if (keys != null)\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeAttribute(key, _data.attrs.get(key), null);\n       }\n     }\n@@ -311,7 +325,7 @@ private boolean _checkBuffer() throws IOException\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeURIAttribute(key, _data.uriAttrs.get(key), null);\n       }\n     }\n@@ -355,17 +369,18 @@ private boolean _isObject(String name)\n   {\n     public Data()\n     {\n-      attrs = new ArrayMap(3);\n-      uriAttrs = new ArrayMap(1);\n+      attrs = new ArrayMap<String, Object>(3);\n+      uriAttrs = new ArrayMap<String, Object>(1);\n+      objectSuffix = 0;\n     }\n \n-    public boolean      inScriptStart;  // Inside a script start element?\n-    public ArrayMap     attrs;          // Attrs of the script element\n-    public ArrayMap     uriAttrs;       // URI attrs of the script element\n-    public boolean      buffering;      // Are currently buffering?\n-    public StringBuffer buffer;         // The buffer\n-    public ArrayList    libraries;      // Imported JavaScript libraries\n-    public int          objectSuffix=0; // For the object element ppr bug\n+    public boolean                  inScriptStart;        // Inside a script start element?\n+    public ArrayMap<String, Object> attrs;                // Attrs of the script element\n+    public ArrayMap<String, Object> uriAttrs;             // URI attrs of the script element\n+    public boolean                  buffering;            // Are currently buffering?\n+    public StringBuffer             buffer;               // The buffer\n+    public ArrayList<Object>        libraries;            // Imported JavaScript libraries\n+    public int                      objectSuffix;         // For the object element ppr bug\n   }\n \n   // This utility method is used to strip /**/ style comments out of",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java",
                "sha": "3d0eb3e8f08b251fa5e2c0a2586a3540b5cd8f27",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java",
                "patch": "@@ -46,6 +46,7 @@ public BaseDesktopSkin()\n    * Returns the id for the desktop implementation of the Base\n    * Look And Feel: \"base.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return BaseDesktopConstants.BASE_DESKTOP_ID;\n@@ -55,6 +56,7 @@ public String getId()\n    * Returns the family for the Base\n    * Look And Feel: \"base\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"base\";\n@@ -64,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the BaseDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */\n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;\n@@ -72,6 +75,7 @@ public String getRenderKitId()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"base-desktop.xss\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java",
                "sha": "88eebecd81506eb9f753b325e333fc52a118229c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java",
                "patch": "@@ -31,11 +31,13 @@ public BaseSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getBundleName()\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java",
                "sha": "af362f125c4ea1d315b9eeafad32e0c266f97dec",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java",
                "patch": "@@ -52,10 +52,11 @@ public MacOSSwitcherIcon(\n   /**\n    * Override of Icon.renderIcon().\n    */\n+  @Override\n   public void renderIcon(\n     FacesContext        context,\n-    RenderingContext arc,\n-    Map              attrs\n+    RenderingContext    arc,\n+    Map<String, Object> attrs\n     ) throws IOException\n   {\n     Icon icon = _getIcon(arc);\n@@ -66,6 +67,7 @@ public void renderIcon(\n   /**\n    * Override of Icon.getImageURI().\n    */\n+  @Override\n   public Object getImageURI(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -78,6 +80,7 @@ public Object getImageURI(\n   /**\n    * Override of Icon.getImageWidth().\n    */\n+  @Override\n   public Integer getImageWidth(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);\n@@ -88,6 +91,7 @@ public Integer getImageWidth(RenderingContext arc)\n   /**\n    * Override of Icon.getImageHeight().\n    */\n+  @Override\n   public Integer getImageHeight(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java",
                "sha": "1fe652404bc59574edb3a5e95e77cebb0f97ce34",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java",
                "patch": "@@ -38,6 +38,7 @@ public SimpleDesktopSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-desktop.xss\";\n@@ -46,6 +47,7 @@ public String getStyleSheetName()\n   /**\n    * Returns the id of this simple desktop Skin \"simple.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.desktop\";\n@@ -55,6 +57,7 @@ public String getId()\n    * Returns the family for the Simple\n    * Skin: \"simple\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -63,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the SimpleDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java",
                "sha": "546c9f8712712403e2a2c666396a8e76889207f8",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java",
                "patch": "@@ -28,6 +28,7 @@\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-pda.xss\";\n@@ -37,6 +38,7 @@ public String getStyleSheetName()\n    * Returns the id for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.pda\";\n@@ -46,6 +48,7 @@ public String getId()\n    * Returns the family for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -55,10 +58,9 @@ public String getFamily()\n    * Returns the renderKitId for the PDA implementation of the Simple\n    * Skin: \"org.apache.myfaces.trinidad.pda\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_PDA;\n   }\n-\n-\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java",
                "sha": "911df5682e62b7f3f93045e98478232fc36fae95",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java",
                "patch": "@@ -37,12 +37,11 @@ public TranslatedTextIcon(String key)\n   /**\n    * Returns the text to render.\n    */\n+  @Override\n   protected String getText(RenderingContext arc)\n   {\n-   return arc.getTranslatedString(_key);\n-\n+    return arc.getTranslatedString(_key);\n   }\n \n-\n   private String _key;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java",
                "sha": "e4b3a77b94815c2625f93ab116ceb7fa10f8b8ba",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java",
                "patch": "@@ -44,6 +44,7 @@ public XhtmlSkin()\n   /**\n    * @todo Move the \"BLAF\" bundle to a more generic location.\n    */\n+  @Override\n   protected String getBundleName()\n   {\n     return _BUNDLE_CLASS;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java",
                "sha": "6e2f5d587e0b3ad61044fd0a65377b981811ac85",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java",
                "patch": "@@ -50,17 +50,16 @@ public static void writeDependencies(\n    * Find all UIParameter children of a component, and\n    * return it as a JS string of \"name1:value1,name2:value2\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static String getParameters(UIComponent comp)\n   {\n     int childCount = comp.getChildCount();\n     if (childCount == 0)\n       return null;\n       \n     StringBuffer buffer = null;\n-    List children = comp.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)comp.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child instanceof UIParameter)\n       {\n         UIParameter param = (UIParameter) child;\n@@ -283,11 +282,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _AUTO_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java",
                "sha": "f6151bc23f6dbc6ed2ae9383af64064869a852ae",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java",
                "patch": "@@ -52,6 +52,7 @@ protected BodyRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -61,7 +62,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _onunloadKey = type.findKey(\"onunload\");\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -78,6 +79,7 @@ protected void encodeAll(\n     _writeVersionInformation(context, arc);\n   }\n \n+  @Override\n   protected void renderAtEnd(\n     FacesContext context,\n     RenderingContext arc) throws IOException\n@@ -87,6 +89,7 @@ protected void renderAtEnd(\n     _renderInitialFocusScript(context, arc);\n   }\n \n+  @Override\n   protected void renderPPRSupport(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -105,6 +108,7 @@ protected void renderPPRSupport(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -136,12 +140,13 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n-    String styleClass = super.getStyleClass(bean);\n-    return styleClass;\n+    return super.getStyleClass(bean);\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -399,11 +404,11 @@ static private void _writeVersionInformation(\n   {\n     String comment = _VERSION_COMMENT;\n \n-    Class implClass = BodyRenderer.class;\n+    Class<BodyRenderer> implClass = BodyRenderer.class;\n     Package implPkg = implClass.getPackage();\n \n-    Class apiClass  =  FacesBean.class;\n-    Package apiPkg  =  apiClass.getPackage();\n+    Class<FacesBean> apiClass  =  FacesBean.class;\n+    Package apiPkg = apiClass.getPackage();\n \n     String versionInfo = _getVersionInfo(apiPkg, implPkg);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java",
                "sha": "3162dd419887860a504c1536838bdbbb1baaebc4",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java",
                "patch": "@@ -45,18 +45,20 @@ public BreadCrumbsRenderer()\n     super(CoreBreadCrumbs.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _orientationKey = type.findKey(\"orientation\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n   \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +98,7 @@ protected UIComponent getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -123,7 +126,9 @@ protected void renderContent(\n       if (focusPath == null)\n         return;\n       \n-      List paths = new ArrayList(component.getAllAncestorContainerRowKeys(focusPath));\n+      List<Object> paths = \n+        new ArrayList<Object>(component.getAllAncestorContainerRowKeys(focusPath));\n+      \n       paths.add(focusPath);\n       int size = paths.size();        \n \n@@ -153,11 +158,11 @@ protected void renderContent(\n     // now render children\n     if (hasChildren(component))\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       nextVisChildIndex = getNextRenderedChildIndex(children, -1);\n       while (nextVisChildIndex != NO_CHILD_INDEX)\n       {\n-        UIComponent child = (UIComponent)children.get(nextVisChildIndex);        \n+        UIComponent child = children.get(nextVisChildIndex);        \n         nextVisChildIndex = getNextRenderedChildIndex(children, \n                                                       nextVisChildIndex);\n         isLastChild = (nextVisChildIndex == NO_CHILD_INDEX);           \n@@ -249,7 +254,7 @@ protected void renderLink(\n       isBidi = Bidi.requiresBidi(firstChar, 0, 1);\n     }\n     \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -287,6 +292,7 @@ protected boolean shouldRenderLastChild(\n    * renderStyleAttributes - use the NavigationPath style class as the default\n    * styleClass\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -401,9 +407,11 @@ private boolean _isVertical(FacesBean bean)\n   private static final int _INDENT_SPACES = 10;  \n   \n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\n       XhtmlConstants.LINK_STYLE_CLASS,\n       XhtmlConstants.AF_NAVIGATION_PATH_STEP_STYLE_CLASS);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java",
                "sha": "7584d11ff9d3c257e07d19a2c4a304e930e8891e",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 10,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java",
                "patch": "@@ -71,6 +71,7 @@ protected ChooseDateRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,18 +82,21 @@ protected void findTypeConstants(FacesBean.Type type)\n     _destinationKey = PropertyKey.createPropertyKey(\"destination\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1113,6 +1117,7 @@ private void _renderMonthAndYear(\n   }\n \n \n+  @SuppressWarnings(\"deprecation\")\n   private static long _getTimeAttr(\n     RenderingContext arc,\n     FacesBean   bean,\n@@ -1165,13 +1170,11 @@ else if (value instanceof Calendar)\n         // maximum date.\n         if (tzOffset < 0)\n         {\n-          tzOffset = (long)Math.max((float)tzOffset,\n-                              (float)Long.MIN_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n         }\n         else\n         {\n-          tzOffset = (long)Math.min((float)tzOffset,\n-                              (float)Long.MAX_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n         }\n \n         // adjust the date in ms to the adjusted time zone.\n@@ -1542,19 +1545,25 @@ public CalendarStyles(\n \n   private static final int _MILLIS_IN_DAY = 1000 * 60 * 60 * 24;\n \n-  // =-= bts\n-  // default minimum date is 1AD so we don't have to deal with years in\n-  // different eras.  Hopefully this won't be a problem in other calendars\n-  // (but I think that it will)\n-  private static final long _MIN_TIME =\n-    (new Date(-1899, 1, 1, 0, 0)).getTime();\n+  private static final long _MIN_TIME;\n \n   private static final long _MAX_TIME = Long.MAX_VALUE;\n \n   //\n   // Rendering Context cache keys\n   //\n   private static final Object _DATE_SYMBOLS_KEY = new Object();\n+  \n+  static\n+  {\n+    // =-= bts\n+    // default minimum date is 1AD so we don't have to deal with years in\n+    // different eras.  Hopefully this won't be a problem in other calendars\n+    // (but I think that it will)\n+    Calendar cal = Calendar.getInstance();\n+    cal.set(1, 1, 1, 0, 0);\n+    _MIN_TIME = cal.getTimeInMillis();\n+  }\n \n   private PropertyKey _maxValueKey;\n   private PropertyKey _minValueKey;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java",
                "sha": "585a502ec0e78fece90c1519246ae192edf12c8b",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 11,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java",
                "patch": "@@ -61,6 +61,7 @@ public ColumnGroupRenderer()\n     super(CoreColumn.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -76,7 +77,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _defaultSortOrderKey = type.findKey(\"defaultSortOrder\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -180,6 +181,7 @@ protected String getHeaderStyleClass(TableRenderingContext tContext)\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -513,7 +515,7 @@ else if (\"descending\".equals(getDefaultSortOrder(bean)))\n     String sortJS = buffer.toString();\n     if (onclick != null)\n     {\n-      sortJS = (String) XhtmlUtils.getChainedJS(onclick, sortJS, true);\n+      sortJS = XhtmlUtils.getChainedJS(onclick, sortJS, true);\n     }\n \n     return sortJS;\n@@ -632,11 +634,11 @@ protected final int getSortability(\n     // Otherwise, look at the first sort criteria\n     // =-=AEW This seems slow...\n     UIXCollection table = (UIXCollection) tContext.getTable();\n-    List criteria = table.getSortCriteria();\n+    List<SortCriterion> criteria = table.getSortCriteria();\n     // We currently only show anything for the primary sort criterion\n     if (criteria.size() > 0)\n     {\n-      SortCriterion criterion = (SortCriterion) criteria.get(0);\n+      SortCriterion criterion = criteria.get(0);\n       if (property.equals(criterion.getProperty()))\n       {\n         return criterion.isAscending() ? SORT_ASCENDING : SORT_DESCENDING;\n@@ -717,24 +719,27 @@ private void _computeMode(\n     _setParentNode(tContext, parentNode);\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderChildren(FacesContext context,\n                                UIComponent  component,\n                                NodeData     parentNode)\n     throws IOException\n   {\n-    List children = component.getChildren();\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    int i = 0;\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Tell the parent node - if there is one - which child we're rendering\n         if (parentNode != null)\n+        {\n           parentNode.currentChild = i;\n+        }\n+        \n         encodeChild(context, child);\n       }\n+      \n+      i++;\n     }\n   }\n \n@@ -790,7 +795,7 @@ private NodeList _getNodeList(TableRenderingContext tContext,\n \n   private static final class NodeList\n   {\n-    private final ArrayList _list = new ArrayList(10);\n+    private final ArrayList<NodeData> _list = new ArrayList<NodeData>(10);\n     private int _index = 0;\n \n     public NodeData currentNode = null;\n@@ -805,7 +810,7 @@ public NodeData getNext()\n       if (_index >= _list.size())\n         _index = 0;\n \n-      return (NodeData) _list.get(_index++);\n+      return _list.get(_index++);\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java",
                "sha": "f1638c9002b99b749a2569b672f5559fb81179b8",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java",
                "patch": "@@ -46,10 +46,10 @@ public ColumnRenderer()\n     super();\n   }\n \n-\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -114,9 +114,10 @@ protected void encodeAll(\n     colData.incrementColumnIndex();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private boolean _isColumnGroup(UIComponent column)\n   {\n-    Iterator kids = column.getChildren().iterator();\n+    Iterator<UIComponent> kids = column.getChildren().iterator();\n     // Special columns - nothing is a column group\n     if (!kids.hasNext())\n       return false;\n@@ -125,17 +126,15 @@ private boolean _isColumnGroup(UIComponent column)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderKids(FacesContext          context,\n-                            RenderingContext   arc,\n+                            RenderingContext      arc,\n                             TableRenderingContext trc,\n                             UIComponent           column) throws IOException\n   {\n-    List children = column.getChildren();\n     boolean renderedOne = false;\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    for(UIComponent child : (List<UIComponent>)column.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Put each component on a separate line, separated by a div",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java",
                "sha": "840870872bbc2aff08e6e89836344bbc9276792d",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java",
                "patch": "@@ -38,13 +38,16 @@ public CommandLinkRenderer()\n     super(CoreCommandLink.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _immediateKey = type.findKey(\"immediate\");\n     _partialSubmitKey = type.findKey(\"partialSubmit\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     RequestContext afContext = RequestContext.getCurrentInstance();\n@@ -56,7 +59,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n \n@@ -71,6 +76,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n   \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -99,6 +105,7 @@ protected void encodeBegin(\n     arc.setCurrentClientId(null);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +118,7 @@ public void encodeEnd(\n       fd.addNeededValue(XhtmlConstants.SOURCE_PARAM);\n   }\n \n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -119,23 +127,26 @@ protected String getClientId(\n     return RenderingContext.getCurrentInstance().getCurrentClientId();\n   }\n \n+  @Override\n   protected String getDestination(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getTargetFrame(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean hasOnclick(FacesBean bean)\n   {\n     // More efficient\n     return true;\n   }\n \n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     String onclick = super.getOnclick(bean);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java",
                "sha": "c8da0452b9e8ec817a14396a36d8bc80f0ca6a3a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java",
                "patch": "@@ -47,17 +47,20 @@ public DesktopPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chromeTypeKey = type.findKey(\"chromeType\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java",
                "sha": "b8460a6120feee91ec49991787b196462bdc7fa0",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java",
                "patch": "@@ -45,6 +45,7 @@ protected DocumentRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _body = new BodyRenderer(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -83,6 +86,7 @@ public Head(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getClientId(\n       FacesContext context,\n       UIComponent  component)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java",
                "sha": "ee7b00ef63b62c440a8724735c6b166cb7a2ba74",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java",
                "patch": "@@ -25,6 +25,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.el.ValueBinding;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -40,6 +41,7 @@ protected EditableValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n    {\n     super.findTypeConstants(type);\n@@ -54,6 +56,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // DECODING IMPLEMENTATION\n   //\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     if (skipDecode(context))\n@@ -91,6 +94,7 @@ public Object getSubmittedValue(\n    * @param component the component\n    * @param newValue the unconverted string value\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -128,6 +132,7 @@ protected boolean wasSubmitted(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -138,6 +143,7 @@ protected boolean shouldRenderId(\n   /**\n    * Override to include \"submitted value\".\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -180,7 +186,7 @@ protected void addOnSubmitConverterValidators(\n       if ( converter == null)\n         converter = getDefaultConverter(context, bean);\n \n-      Iterator validators = getValidators(bean);\n+      Iterator<Validator> validators = getValidators(bean);\n \n       if (requiredField ||\n           (converter != null) ||\n@@ -265,9 +271,10 @@ protected boolean isImmediate(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n-  protected Iterator getValidators(FacesBean bean)\n+  @SuppressWarnings(\"unchecked\")\n+  protected Iterator<Validator> getValidators(FacesBean bean)\n   {\n-    return bean.entries(_validatorsKey);\n+    return (Iterator<Validator>)bean.entries(_validatorsKey);\n   }\n \n   private PropertyKey _submittedValueKey;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java",
                "sha": "e72307ff3b739d83918280e240eebeec60150a2f",
                "status": "modified"
            },
            {
                "additions": 68,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java",
                "changes": 137,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 69,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java",
                "patch": "@@ -99,34 +99,34 @@ public void addLabel(\n     if (targetId == null || label == null)\n       return;\n \n-    Map labelMap = getLabelMap(true);\n+    Map<String, String> labelMap = getLabelMap(true);\n \n     labelMap.put(targetId, label);\n   }\n \n \n \n-  public Map getLabelMap(\n+  public Map<String, String> getLabelMap(\n     boolean  createIfNecessary\n     )\n   {\n     if ((_labelMap == null) && createIfNecessary)\n     {\n-      _labelMap = new HashMap(31);\n+      _labelMap = new HashMap<String, String>(31);\n     }\n \n     return _labelMap;\n   }\n \n \n \n-  public Map getPatternMap(\n+  public Map<String, String> getPatternMap(\n     boolean createIfNecessary\n     )\n   {\n     if ((_patternMap == null) && createIfNecessary)\n     {\n-      _patternMap = new HashMap();\n+      _patternMap = new HashMap<String, String>();\n     }\n \n     return _patternMap;\n@@ -141,7 +141,7 @@ public void addPattern(\n     if (targetId == null || pattern == null)\n       return;\n \n-    Map patternMap = getPatternMap(true);\n+    Map<String, String> patternMap = getPatternMap(true);\n \n     patternMap.put(targetId, pattern);\n   }\n@@ -162,14 +162,14 @@ public void addNeededValue(String name)\n       return;\n     }\n \n-    List neededValues = getNeededValues(true);\n+    List<String> neededValues = getNeededValues(true);\n     neededValues.add(name);\n   }\n \n \n   public void addRenderedValue(String name)\n   {\n-    Set renderedSet = getRenderedValues(true);\n+    Set<String> renderedSet = getRenderedValues(true);\n     renderedSet.add(name);\n   }\n \n@@ -192,106 +192,106 @@ public void addResetCall(\n \n     if (call != null)\n     {\n-      List resetCalls = getResetCalls(true);\n+      List<String> resetCalls = getResetCalls(true);\n \n       // add the call\n       resetCalls.add(call);\n     }\n   }\n \n \n-  public List getResetCalls(\n+  public List<String> getResetCalls(\n     boolean          createIfNecessary\n     )\n   {\n \n     if (_resetCallsList == null && createIfNecessary)\n     {\n-      _resetCallsList = new ArrayList();\n+      _resetCallsList = new ArrayList<String>();\n     }\n \n     return _resetCallsList;\n   }\n \n \n-  public List getClientDependencies(\n+  public List<String> getClientDependencies(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_clientDependencies == null) && createIfNecessary)\n     {\n-      _clientDependencies = new ArrayList(10);\n+      _clientDependencies = new ArrayList<String>(10);\n     }\n \n     return _clientDependencies;\n   }\n \n-  public List getNeededValues(\n+  public List<String> getNeededValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_neededValues == null) && createIfNecessary)\n     {\n-      _neededValues = new ArrayList(10);\n+      _neededValues = new ArrayList<String>(10);\n     }\n \n     return _neededValues;\n   }\n \n \n-  public Set getRenderedValues(\n+  public Set<String> getRenderedValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_renderedSet == null) && createIfNecessary)\n     {\n-      _renderedSet =  new HashSet(23);\n+      _renderedSet =  new HashSet<String>(23);\n     }\n \n     return _renderedSet;\n   }\n \n \n-  public Iterator getValidationIterator()\n+  public Iterator<String> getValidationIterator()\n   {\n-    Map validationMap = _getValidationMap(false);\n+    Map<String, Integer> validationMap = _getValidationMap(false);\n     if ( validationMap == null)\n       return null;\n \n     return validationMap.keySet().iterator();\n   }\n \n \n-  public Iterator getErrorFormatIterator()\n+  public Iterator<String> getErrorFormatIterator()\n   {\n-    Map errorFormatMap = _getErrorFormatMap(false);\n+    Map<String, Integer> errorFormatMap = _getErrorFormatMap(false);\n     if ( errorFormatMap == null)\n       return null;\n \n     return errorFormatMap.keySet().iterator();\n   }\n \n-  public List getFormValidatorsInfo(\n+  public List<ConvertValidate> getFormValidatorsInfo(\n     boolean createIfNecessary\n     )\n   {\n     // create the validators if they don't already exist\n     if ((_formValidatorsInfo == null) && createIfNecessary)\n     {\n-      _formValidatorsInfo = new ArrayList();\n+      _formValidatorsInfo = new ArrayList<ConvertValidate>();\n     }\n \n     return _formValidatorsInfo;\n   }\n \n \n-  public List getValidatedInputList(\n+  public List<String> getValidatedInputList(\n     boolean createIfNecessary\n     )\n   {\n     if ((_validatedInputList == null) && createIfNecessary)\n     {\n-      _validatedInputList = new ArrayList();\n+      _validatedInputList = new ArrayList<String>();\n     }\n \n     return _validatedInputList;\n@@ -302,13 +302,13 @@ public List getValidatedInputList(\n    * and this method should be killed.\n    */\n   public void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     if (clientId == null)\n@@ -362,7 +362,7 @@ public void addOnSubmitConverterValidators(\n     {\n       while (validators.hasNext())\n       {\n-        Validator validator = (Validator) validators.next();\n+        Validator validator = validators.next();\n \n         if (validator instanceof ClientValidator)\n         {\n@@ -419,7 +419,7 @@ private void _addFormValidatorInfo(\n     if (validator != null && convertValidate != null)\n     {\n       if (convertValidate.validators == null)\n-        convertValidate.validators = new ArrayList();\n+        convertValidate.validators = new ArrayList<Integer>();\n \n       // add the validator\n       convertValidate.validators.add(_addValidation(validator));\n@@ -459,16 +459,16 @@ private void _addOnSubmitConverter(\n \n     }\n \n-    Object clientDependency = submitConverter.getClientScript(fcontext,\n-                                                                component);\n+    String clientDependency = submitConverter.getClientScript(fcontext,\n+                                                              component);\n     if (clientDependency != null)\n     {\n-      List clientDependencies = getClientDependencies(true);\n+      List<String> clientDependencies = getClientDependencies(true);\n       clientDependencies.add(clientDependency);\n     }\n \n-    String converter = (String)submitConverter.getClientConversion(fcontext,\n-                                                                   component);\n+    String converter = submitConverter.getClientConversion(fcontext,\n+                                                           component);\n \n     if (converter != null)\n     {\n@@ -505,18 +505,17 @@ private void _addOnSubmitValidator(\n     }\n     else\n     {\n-      Object clientDependency = submitValidator.getClientScript(fContext,\n-                                                                  component);\n+      String clientDependency = submitValidator.getClientScript(fContext,\n+                                                                component);\n       if (clientDependency != null)\n       {\n-        List clientDependencies = getClientDependencies(true);\n+        List<String> clientDependencies = getClientDependencies(true);\n         clientDependencies.add(clientDependency);\n       }\n     }\n \n-    String validator = (String)submitValidator.getClientValidation(\n-                                                     fContext,\n-                                                     component);\n+    String validator = submitValidator.getClientValidation(fContext,\n+                                                           component);\n \n     if (validator != null)\n     {\n@@ -535,9 +534,9 @@ private Integer _addValidation(\n     )\n   {\n     //TODO - not checking for null so map always getting created\n-    Map validationMap = _getValidationMap(true);\n+    Map<String, Integer> validationMap = _getValidationMap(true);\n \n-    Integer validationIndex = (Integer)validationMap.get(validation);\n+    Integer validationIndex = validationMap.get(validation);\n \n     if (validationIndex == null)\n     {\n@@ -559,9 +558,9 @@ private Integer _addErrorFormat(\n   {\n     if (errorFormat != null)\n     {\n-      Map errorFormatMap = _getErrorFormatMap(true);\n+      Map<String, Integer> errorFormatMap = _getErrorFormatMap(true);\n \n-      Integer errorFormatIndex = (Integer)errorFormatMap.get(errorFormat);\n+      Integer errorFormatIndex = errorFormatMap.get(errorFormat);\n \n       if (errorFormatIndex == null)\n       {\n@@ -593,7 +592,7 @@ private ConvertValidate _getNewConvertValidate(\n       convertValidateInfo.clientId = clientId;\n \n       // add to list\n-      List convertValidateList = getFormValidatorsInfo(true);\n+      List<ConvertValidate> convertValidateList = getFormValidatorsInfo(true);\n       convertValidateList.add(convertValidateInfo);\n \n       return convertValidateInfo;\n@@ -618,25 +617,25 @@ private void _addValidatedInput(\n \n \n \n-  private Map _getValidationMap(\n+  private Map<String, Integer> _getValidationMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_validationMap == null) && createIfNecessary)\n     {\n-      _validationMap = new LinkedHashMap(31);\n+      _validationMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _validationMap;\n   }\n \n-  private Map _getErrorFormatMap(\n+  private Map<String, Integer> _getErrorFormatMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_errorFormatMap == null) && createIfNecessary)\n     {\n-      _errorFormatMap = new LinkedHashMap(31);\n+      _errorFormatMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _errorFormatMap;\n@@ -716,51 +715,51 @@ static private void _writeDependencies(\n   // map of unique validation string to index in map\n   // used so that each converter and validator constructor\n   // is only written out once\n-  private Map _validationMap = null;\n+  private Map<String, Integer> _validationMap = null;\n \n   // map of unique error string to index in map\n   // used so that each error string is only written out once\n-  private Map _errorFormatMap = null;\n+  private Map<String, Integer> _errorFormatMap = null;\n \n   // List of ConvertValidate objects\n-  private List _formValidatorsInfo;\n+  private List<ConvertValidate> _formValidatorsInfo;\n \n   // javascript needed for client validations\n-  private List _clientDependencies;\n+  private List<String> _clientDependencies;\n \n \n   // List of id's of input controls that need to get validated\n-  private List _validatedInputList;\n+  private List<String> _validatedInputList;\n \n \n   private boolean _useCompoundNames = false;\n \n   // List of empty hidden fields that will be filled during event generation\n-  private List _neededValues;\n+  private List<String> _neededValues;\n \n \n-  private Set _renderedSet;\n+  private Set<String> _renderedSet;\n \n   // maps labels to id's\n   // need a label map because the label is not always an attribute\n   // on the component\n-  private Map _labelMap = null;\n+  private Map<String, String> _labelMap = null;\n \n   // List of reset calls\n-  private List _resetCallsList = null;\n+  private List<String> _resetCallsList = null;\n \n   // maps patterns to id's\n-  private Map _patternMap;\n+  private Map<String, String> _patternMap;\n \n   private String _formName = null;\n \n  public static final class ConvertValidate\n   {\n-    public String    clientId;\n-    public boolean   required = false;\n-    public Integer   requiredFormatIndex;\n-    public ArrayList validators;\n-    public Object    converter;\n+    public String             clientId;\n+    public boolean            required = false;\n+    public Integer            requiredFormatIndex;\n+    public ArrayList<Integer> validators;\n+    public Object             converter;\n   }\n \n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java",
                "sha": "cdb23ef65316d878445296c1072a50318c68d2b7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java",
                "patch": "@@ -33,6 +33,7 @@ protected FormElementRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,11 +45,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,6 +143,7 @@ protected void renderNonElementContent(\n   {\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java",
                "sha": "f33af80f5c7f1ab9ce79b9e9f313cc2a98b2b3ae",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java",
                "patch": "@@ -33,6 +33,7 @@ protected FormInputRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -42,6 +43,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -90,6 +92,7 @@ protected void renderDisabledAttribute(\n    * attribute values on the 'content' piece. This is usually false.\n    * @throws IOException\n    */\n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java",
                "sha": "eb1a4411893323ed7bf099a2ac4c295e17986861",
                "status": "modified"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 38,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java",
                "patch": "@@ -28,6 +28,7 @@\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n import javax.faces.convert.Converter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.bean.FacesBean;\n@@ -46,8 +47,6 @@\n // TODO: Remove this class\n import org.apache.myfaces.trinidadinternal.share.data.ServletRequestParameters;\n \n-import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n-\n /**\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/ui/laf/base/xhtml/FormRenderer.java#0 $) $Date: 10-nov-2005.18:53:51 $\n  * @author The Oracle ADF Faces Team\n@@ -59,10 +58,14 @@ public FormRenderer()\n     super(CoreForm.TYPE);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context,\n                      UIComponent component)\n   {\n-    Map paramMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> paramMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object formName = paramMap.get(CoreResponseStateManager.FORM_FIELD_NAME);\n     boolean submitted = false;\n \n@@ -76,11 +79,13 @@ public void decode(FacesContext context,\n       ((UIXForm) component).setSubmitted(submitted);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -91,7 +96,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _targetFrameKey = type.findKey(\"targetFrame\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,7 +198,7 @@ protected void encodeBegin(\n     }\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -307,6 +312,7 @@ protected void encodeEnd(\n   /**\n    * Returns the inline Style used to render this node.\n    */\n+  @Override\n   protected String getInlineStyle(FacesBean bean)\n   {\n     String inlineStyle = super.getInlineStyle(bean);\n@@ -320,6 +326,7 @@ protected String getInlineStyle(FacesBean bean)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -334,6 +341,7 @@ protected void renderId(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -355,7 +363,7 @@ private static void _renderResetCalls(\n     // Write the array of reset calls\n     //\n     FormData fData = arc.getFormData();\n-    List resetCallList = fData.getResetCalls(false);\n+    List<String> resetCallList = fData.getResetCalls(false);\n \n     int resetCallCount = (resetCallList != null)\n                             ? resetCallList.size()\n@@ -380,7 +388,7 @@ private static void _renderResetCalls(\n \n       for (int i = 0; i < resetCallCount; i++)\n       {\n-        String currCall = (String)resetCallList.get(i);\n+        String currCall = resetCallList.get(i);\n \n         if (firstCall)\n         {\n@@ -436,7 +444,7 @@ private static void _renderValidationScripts(\n     // The dependencies may be needed - see bug\n     // 4409339 TURNING OFF CLIENT SIDE VALIDATION CAUSES\n     //                                ERRORS IN SELECTINPUTCOLOR & DATE\n-    List clientDependencies = fData.getClientDependencies( false);\n+    List<String> clientDependencies = fData.getClientDependencies( false);\n     if (clientDependencies != null)\n     {\n       for (int d = 0; d < clientDependencies.size(); d++)\n@@ -471,7 +479,7 @@ private static void _renderValidationScripts(\n     // Write the array of validation calls\n     //\n \n-    Iterator validationIterator = fData.getValidationIterator();\n+    Iterator<String> validationIterator = fData.getValidationIterator();\n \n     if (validationIterator != null)\n     {\n@@ -483,7 +491,7 @@ private static void _renderValidationScripts(\n \n       while(validationIterator.hasNext())\n       {\n-        String currValidation = (String)validationIterator.next();\n+        String currValidation = validationIterator.next();\n \n         if (firstValidation)\n         {\n@@ -514,7 +522,8 @@ private static void _renderValidationScripts(\n     writer.writeText(jsID, null);\n \n     // get the form validators\n-    List validatorInfoList = fData.getFormValidatorsInfo(false);\n+    List<FormData.ConvertValidate> validatorInfoList = \n+      fData.getFormValidatorsInfo(false);\n \n     if (validatorInfoList == null)\n     {\n@@ -540,8 +549,7 @@ private static void _renderValidationScripts(\n           writer.writeText(\"],\", null);\n         }\n \n-        FormData.ConvertValidate convertValidate =\n-          (FormData.ConvertValidate)validatorInfoList.get(j);\n+        FormData.ConvertValidate convertValidate = validatorInfoList.get(j);\n \n         writer.writeText(\"\\\"\", null);\n \n@@ -574,7 +582,7 @@ private static void _renderValidationScripts(\n \n         writer.writeText(\",[\", null);\n \n-        ArrayList validatorInfo = convertValidate.validators;\n+        ArrayList<Integer> validatorInfo = convertValidate.validators;\n \n         if (validatorInfo != null)\n         {\n@@ -615,15 +623,15 @@ private static void _renderValidationScripts(\n     //\n \n     // list of labels used for validation on this form\n-    List inputList = fData.getValidatedInputList(false);\n+    List<String> inputList = fData.getValidatedInputList(false);\n \n     int inputCount = (inputList != null)\n                          ? inputList.size()\n                          : 0;\n \n     if (inputCount > 0)\n     {\n-      Map labelMap = fData.getLabelMap(false);\n+      Map<String, String> labelMap = fData.getLabelMap(false);\n \n       if (labelMap != null)\n       {\n@@ -635,11 +643,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currLabel = (String)labelMap.remove(currID);\n+          String currLabel = labelMap.remove(currID);\n \n           if (currLabel != null)\n           {\n@@ -671,7 +679,7 @@ private static void _renderValidationScripts(\n       // =-= jrf: optimize pattern reuse?\n       // BUG 2024773\n \n-      Map patternMap = fData.getPatternMap(false);\n+      Map<String, String> patternMap = fData.getPatternMap(false);\n \n       if (patternMap != null)\n       {\n@@ -683,11 +691,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currPattern = (String)patternMap.remove(currID);\n+          String currPattern = patternMap.remove(currID);\n \n           if (currPattern != null)\n           {\n@@ -722,7 +730,7 @@ private static void _renderValidationScripts(\n     //\n \n     // list of error formats used for validation on this form\n-    Iterator errorFormatIterator = fData.getErrorFormatIterator();\n+    Iterator<String> errorFormatIterator = fData.getErrorFormatIterator();\n \n     if (errorFormatIterator != null)\n     {\n@@ -734,7 +742,7 @@ private static void _renderValidationScripts(\n \n       while(errorFormatIterator.hasNext())\n       {\n-        String currErrorFormat = (String)errorFormatIterator.next();\n+        String currErrorFormat = errorFormatIterator.next();\n \n         if (firstFormat)\n         {\n@@ -767,19 +775,21 @@ private static void _renderSubformLists(\n     ) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n-    List subforms =\n+    List<String> subforms =\n       SubformRenderer.getSubformList(context, false, false);\n+    \n     writer.writeText(\"var \", null);\n     writer.writeText(jsID, null);\n     writer.writeText(\"_SF={\", null);\n     if ((subforms != null) && !subforms.isEmpty())\n     {\n-      List defaultSubforms =\n+      List<String> defaultSubforms =\n         SubformRenderer.getSubformList(context, true, false);\n-      Iterator ids = subforms.iterator();\n+      \n+      Iterator<String> ids = subforms.iterator();\n       while (ids.hasNext())\n       {\n-        String id = (String) ids.next();\n+        String id = ids.next();\n         writer.writeText(\"\\\"\", null);\n         writer.writeText(id, null);\n         writer.writeText(\"\\\":\", null);\n@@ -836,13 +846,13 @@ public static void addResetCall(\n   }\n \n  public static void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     FormData fData = RenderingContext.getCurrentInstance().getFormData();\n@@ -1017,6 +1027,7 @@ protected String getFullOnkeypress(\n     return onKeypress;\n   }\n \n+  @Override\n   protected String getOnkeypress(FacesBean bean)\n   {\n     // Back out the default keypress, since we need more info\n@@ -1070,7 +1081,7 @@ static private void _renderNeededValues(\n     else\n     {\n       int realNeededIndex = 0;\n-      List neededValues = fData.getNeededValues(false);\n+      List<String> neededValues = fData.getNeededValues(false);\n \n       //\n       // loop over the list of needed names, creating hidden fields\n@@ -1090,11 +1101,11 @@ static private void _renderNeededValues(\n                                 ? null\n                                 : \"a\";\n \n-        Set renderedValues = fData.getRenderedValues(true);\n+        Set<String> renderedValues = fData.getRenderedValues(true);\n \n         for (int i = 0; i < neededCount; i++)\n         {\n-          Object currName = neededValues.get(i);\n+          String currName = neededValues.get(i);\n \n           // if the needed name hasn't been rendered, add it to our\n           // list of unrendered elements\n@@ -1152,6 +1163,8 @@ static private void _renderNeededValues(\n   private PropertyKey _onsubmitKey;\n   private PropertyKey _targetFrameKey;\n \n-\n+  // -= Simon Lessard =-\n+  // FIXME: Nothing in this class is logged as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FormRenderer.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java",
                "sha": "b73cf2f995cd7ac8d65e7dbc3902e4265b767d89",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java",
                "patch": "@@ -41,6 +41,7 @@ protected GoLinkRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,7 +54,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _textKey = type.findKey(\"text\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +112,7 @@ protected void encodeBegin(\n                                        \"b\");\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +126,7 @@ public void encodeEnd(\n   /**\n    * Renders the client ID as both \"id\" and \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -137,6 +140,7 @@ protected void renderId(\n     }\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -196,6 +200,7 @@ protected String getText(FacesBean bean)\n     return toString(bean.getProperty(_textKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java",
                "sha": "effabe4ea0caeb1f0b9efda8aa2d63e6f285653a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java",
                "patch": "@@ -17,14 +17,11 @@\n \n import java.io.IOException;\n \n-import java.util.List;\n-\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n \n import org.apache.myfaces.trinidad.bean.FacesBean;\n-import org.apache.myfaces.trinidad.bean.PropertyKey;\n import org.apache.myfaces.trinidad.component.core.CoreGroup;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n@@ -36,11 +33,13 @@ public GroupRenderer()\n     super(CoreGroup.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java",
                "sha": "f322e5993735a4a777e1afbb6663793abd5c380c",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java",
                "patch": "@@ -52,12 +52,14 @@ protected HeadRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -87,7 +89,7 @@ protected void encodeBegin(\n     _writeCookieScript(context, arc);\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -187,6 +189,7 @@ static private boolean _supportsUIXCookie(RenderingContext arc)\n   private CoreRenderer _styleSheetRenderer = new StyleSheetRenderer()\n   {\n     // Don't render the ID\n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java",
                "sha": "0665473ec713a74240b223a29feb34092dd62455",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java",
                "patch": "@@ -61,6 +61,7 @@ protected HtmlRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,6 +117,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -198,19 +200,15 @@ protected String getDocumentDocType(\n    * Determines whether we have a frameset component as a child\n    * for determining which doctype to return\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private boolean _hasFrameSet(UIComponent component)\n   {\n-    List children = component.getChildren();\n-    int childCount = component.getChildCount();\n-    \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent currChild = (UIComponent) children.get(i);\n-      \n-      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(currChild.getFamily()))\n+      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(child.getFamily()))\n       {\n         return true;\n-      }\n+      }     \n     }\n \n     return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java",
                "sha": "c5f7f44b26d0463fe08c82da46c462309a7396cf",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java",
                "patch": "@@ -38,12 +38,14 @@ public IconRenderer()\n     super(CoreIcon.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _nameKey = type.findKey(\"name\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +113,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,14 +127,14 @@ protected String getName(FacesBean bean)\n     return toString(bean.getProperty(_nameKey));\n   }\n \n-  private Map _getNodeAttributeMap(\n+  private Map<String, Object> _getNodeAttributeMap(\n     FacesContext        context,\n     UIComponent         comp,\n     FacesBean           bean,\n     boolean             embed)\n   {\n-    Map attrs = null;\n-    attrs = new ArrayMap(1);\n+    Map<String, Object> attrs = null;\n+    attrs = new ArrayMap<String, Object>(1);\n \n     attrs.put(Icon.SHORT_DESC_KEY, getShortDesc(bean));\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java",
                "sha": "6d4ceefe3f11d1c712fd81e5b641e59a29159806",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java",
                "patch": "@@ -35,6 +35,7 @@ public ImageRenderer()\n     super(CoreImage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -43,6 +44,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _sourceKey = type.findKey(\"source\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +59,7 @@ protected void encodeBegin(\n     rw.endElement(\"img\");\n   }\n \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -72,6 +75,7 @@ protected void renderAllAttributes(\n     _renderImageMap(bean, rw);\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -95,7 +99,6 @@ protected String getLongDescURL(FacesBean bean)\n     return toUri(bean.getProperty(_longDescURLKey));\n   }\n \n-\n   protected String getSource(FacesBean bean)\n   {\n     return toUri(bean.getProperty(_sourceKey));\n@@ -119,7 +122,6 @@ protected void renderId(\n     }\n   }\n \n-\n   private void _renderImageMap(\n     FacesBean           bean,\n     ResponseWriter      writer) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java",
                "sha": "a5f3f8c4b7ea250d0c1d178467adde678b2cd14e",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java",
                "patch": "@@ -30,16 +30,19 @@ public InputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputColor\";\n   }  \n     \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputColor;\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java",
                "sha": "c74d909f077a1269ccb52ac392595f11026cf42e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java",
                "patch": "@@ -26,11 +26,13 @@ public InputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }  \n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputDate;\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputDate\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java",
                "sha": "20da3b831e4e813eba1c84208cc92a44266e7ef4",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java",
                "patch": "@@ -34,6 +34,7 @@ public InputFileRenderer()\n     super(CoreInputFile.TYPE);\n   }\n   \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -48,11 +49,13 @@ protected final void encodeAll(\n     }\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputFile;\n@@ -63,6 +66,7 @@ protected FormInputRenderer getFormInputRenderer()\n    * @param bean\n    * @return false, since inputFile does not support the readOnly attribute\n    */\n+  @Override\n   protected boolean isReadOnly(FacesBean bean)\n   {\n     return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java",
                "sha": "1b209c3513fbcbbd7134b624264019432eeef486",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java",
                "patch": "@@ -33,18 +33,21 @@ public InputHiddenRenderer()\n     super(CoreInputHidden.TYPE);\n   }\n   \n+  @Override\n   protected boolean wasSubmitted(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java",
                "sha": "83a342e68fd3c86e09c57b47140f55172abdae3c",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java",
                "patch": "@@ -37,6 +37,7 @@ public InputLabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -45,11 +46,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _readOnlyKey   = type.findKey(\"readOnly\");\n   }  \n   \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n      getFormInputRenderer().decode(context, component);\n   }\n   \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -60,6 +63,7 @@ public Object getConvertedValue(\n                                               submittedValue);\n   }\n \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +78,7 @@ protected String getLabelFor(\n   }\n \n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,13 +121,14 @@ protected void encodeAll(\n    * If it's known that the field content is not editable, return false. \n    * Otherwise, assume it is editable and return true\n    */\n+  @Override\n   protected boolean isContentEditable(FacesBean bean)\n   {\n     return !getFormInputRenderer().getReadOnly(\n                                    FacesContext.getCurrentInstance(), bean);  \n   }\n  \n-  \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,8 +137,6 @@ protected void renderFieldCellContents(\n   {\n     delegateRenderer(context, arc, component, bean, getFormInputRenderer());\n   }\n-  \n-\n  \n   protected boolean getSimple(FacesBean bean)\n   {\n@@ -152,6 +156,7 @@ protected boolean getSimple(FacesBean bean)\n    * @param bean\n    * @throws IOException\n    */\n+  @Override\n   protected void renderRootDomElementStyles(\n    FacesContext        context,\n    RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java",
                "sha": "52af2b2345daad566534438fd211974629843f60",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java",
                "patch": "@@ -28,11 +28,13 @@ public InputListOfValuesRenderer()\n     super(CoreInputListOfValues.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   } \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputListOfValue;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java",
                "sha": "3b7bc985a2184f11022887d9cd6bce34e84a4eeb",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java",
                "patch": "@@ -27,11 +27,13 @@ public InputTextRenderer()\n     super(CoreInputText.TYPE);\n   } \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n   } \n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     if (_simpleInputText.isTextArea(bean))\n@@ -40,6 +42,7 @@ protected String getDefaultLabelValign(FacesBean bean)\n     return null;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputText;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java",
                "sha": "8d1ff3e9bb42b2b7435356751ab96180379daa2e",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java",
                "patch": "@@ -49,6 +49,7 @@ public LabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -63,6 +64,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   }\n \n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -137,6 +139,7 @@ protected void renderRootDomElementStyles(\n     // do nothing for now\n   } \n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -158,6 +161,7 @@ private boolean _isInTable()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -403,6 +407,7 @@ private void _renderMessageCellContents(\n   /**\n    * Returns the client ID.\n    */\n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -489,13 +494,15 @@ public Label(FacesBean.Type type, boolean inTable)\n       _inTable = inTable;\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -504,13 +511,15 @@ protected void renderAllAttributes(\n       // Block everything\n     }\n \n+    @Override\n     protected String getDefaultValign(FacesBean bean)\n     {\n       // get the defaultLabelValign from the form component.\n       return getDefaultLabelValign(bean);\n     }\n \n \n+    @Override\n     protected String getConvertedString(\n       FacesContext context,\n       UIComponent  component,\n@@ -526,6 +535,7 @@ protected String getConvertedString(\n      * Only display the required icon indicator if we're required\n      * or showRequired is on.\n      */\n+    @Override\n     protected boolean getShowRequired(FacesBean bean)\n     {\n       // Inside the table, never show the required icon.\n@@ -535,6 +545,7 @@ protected boolean getShowRequired(FacesBean bean)\n       return (LabelAndMessageRenderer.this.labelShowRequired(bean));\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       if (LabelAndMessageRenderer.this.showAccessKeyOnLabel(bean))\n@@ -543,6 +554,7 @@ protected char getAccessKey(FacesBean bean)\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String shortDesc = super.getShortDesc(bean);\n@@ -556,6 +568,7 @@ protected String getShortDesc(FacesBean bean)\n       return shortDesc;\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -567,6 +580,7 @@ protected String getForId(\n                          bean);\n     }\n \n+    @Override\n     protected boolean isLabelTagNeeded(\n       RenderingContext arc,\n       FacesBean           bean,\n@@ -590,30 +604,35 @@ public Message(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected boolean getIndented(FacesBean bean)\n     {\n       return LabelAndMessageRenderer.this.isIndented();\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n       FacesBean           bean) throws IOException\n     {\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -693,9 +712,9 @@ private String _getDefaultLabelStyleClass(\n     RenderingContext arc,\n     String              styleClass)  \n   {\n-    Map keyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> keyMap = arc.getSkinResourceKeyMap();\n     return (keyMap != null) ?\n-            (String) keyMap.get(styleClass) :\n+            keyMap.get(styleClass) :\n             null;\n   }\n   ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java",
                "sha": "ef448d728a46c7f2017132464370111f84692b01",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java",
                "patch": "@@ -45,6 +45,7 @@ protected MessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageKey     = type.findKey(\"message\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java",
                "sha": "5de6189dde0b8ae31d50f12ec5fd3310ced1ff53",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 17,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java",
                "patch": "@@ -47,6 +47,7 @@ public NavigationPaneRenderer()\n     super(CoreNavigationPane.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,11 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +99,7 @@ private UIComponent _getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -110,13 +114,11 @@ protected void renderContent(\n     if (nodeStamp == null)\n     {\n       // we aren't stamping, but rather have explicitly defined children:\n-      List<UIComponent> children = component.getChildren();\n-      int childrenLength = children.size();\n-      for (int i=0; i<childrenLength; i++)\n+      for(UIComponent child : (List<UIComponent>)component.getChildren())\n       {\n         try\n         {\n-          UIXCommand navItem = (UIXCommand)children.get(i);\n+          UIXCommand navItem = (UIXCommand)child;\n           if (navItem.isRendered())\n           {\n             // collect the information needed to render this nav item:\n@@ -174,7 +176,7 @@ protected void renderContent(\n       int nextActiveIndex = navItemData.getEffectiveActiveIndex() - 1;\n       for (int i=0; i<visibleItemCount; i++)\n       {\n-        Map currentItemData = navItemData.getItemData(i);\n+        Map<String, Object> currentItemData = navItemData.getItemData(i);\n         currentItemData.put(\"isFirst\", (i == 0));\n         currentItemData.put(\"isLast\", (i == lastRowIndex));\n         currentItemData.put(\"previousActive\", previousActive);\n@@ -252,6 +254,7 @@ private String _getHint(FacesBean bean)\n     return renderingHint;\n   }\n \n+  @Override\n   protected String getShortDesc(FacesBean bean)\n   {\n     return toString(bean.getProperty(_shortDescKey));\n@@ -314,7 +317,7 @@ private void _collectNavItemData(\n         isActive = false; // there can only be 1 active item\n       }\n     }\n-    HashMap itemDataMap = new HashMap();\n+    HashMap<String, Object> itemDataMap = new HashMap<String, Object>();\n     itemDataMap.put(\"accessKey\", _getCommandChildProperty(commandChild, \"accessKey\"));\n     itemDataMap.put(\"component\", commandChild);\n     itemDataMap.put(\"dataIndex\", itemDataIndex);\n@@ -378,7 +381,7 @@ private void _renderNavigationItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     String renderingHint,\n     boolean isRtl\n     ) throws IOException\n@@ -456,7 +459,7 @@ private void _appendIconAndText(\n     RenderingContext arc,\n     ResponseWriter rw,\n     String iconUri,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -501,7 +504,7 @@ private void _writeItemLink(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled\n     ) throws IOException\n   {\n@@ -658,7 +661,7 @@ private void _renderNonOverlappingItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl,\n     boolean isBar,\n     boolean isList\n@@ -845,7 +848,7 @@ private void _renderChoiceItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData\n+    Map<String, Object> itemData\n     ) throws IOException\n   {\n     // Choice items do not support icons at this time.\n@@ -1016,7 +1019,7 @@ private void _renderTabItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl\n     ) throws IOException\n   {\n@@ -1211,7 +1214,7 @@ private void _renderTabSection(\n     String topStyleClass,\n     String bottomStyleClass,\n     String bottomContentStyleClass,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -1263,7 +1266,7 @@ private void _renderTabSection(\n   {\n     NavItemData()\n     {\n-      _list = new ArrayList<Map>();\n+      _list = new ArrayList<Map<String, Object>>();\n       _effectiveActiveIndex = -1;\n     }\n \n@@ -1282,17 +1285,17 @@ int getItemCount()\n       return _list.size();\n     }\n \n-    void addItemData(Map itemData)\n+    void addItemData(Map<String, Object> itemData)\n     {\n       _list.add(itemData);\n     }\n \n-    Map getItemData(int index)\n+    Map<String, Object> getItemData(int index)\n     {\n       return _list.get(index);\n     }\n \n-    private List<Map> _list;\n+    private List<Map<String, Object>> _list;\n     private int _effectiveActiveIndex;\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java",
                "sha": "0723874223a54d51b9c42c50552100ae9fcf557d",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java",
                "patch": "@@ -37,13 +37,14 @@ public OutputFormattedRenderer()\n     super(CoreOutputFormatted.TYPE);\n   }\n   \n-  \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _styleUsageKey = type.findKey(\"styleUsage\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +58,7 @@ protected void encodeBegin(\n     renderAllAttributes(context, arc, bean);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +76,7 @@ protected String getStyleUsage(FacesBean bean)\n     return toString(bean.getProperty(_styleUsageKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);\n@@ -82,16 +85,17 @@ protected String getStyleClass(FacesBean bean)\n       String usage = getStyleUsage(bean);\n       if (usage != null)\n       {\n-        styleClass = (String) _USAGES.get(usage);\n+        styleClass = _USAGES.get(usage);\n       }\n     }\n \n     return styleClass;\n   }\n \n-  static private final Map _USAGES = new HashMap();\n+  static private final Map<String, String> _USAGES;\n   static\n   {\n+    _USAGES = new HashMap<String, String>();\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_IN_CONTEXT_BRANDING,\n                 XhtmlConstants.IN_CONTEXT_TEXT_STYLE_CLASS);\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_INSTRUCTION,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java",
                "sha": "27c5fab1c19c851c0b00acbd14c089e6801b4da9",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java",
                "patch": "@@ -48,6 +48,13 @@ protected OutputLabelRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n+  public boolean getRendersChildren()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,18 +64,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _showRequiredKey       = type.findKey(\"showRequired\");\n   }\n \n-\n-  public boolean getRendersChildren()\n-  {\n-    return true;\n-  }\n-\n   /**\n    * @todo Often, we can get by with just a single label, not\n    * a span and a label\n    * @todo If all that is set is \"required\", it seems that we\n    *  *don't* render a span, but do render the icon.  This is strange.\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -273,6 +275,7 @@ else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(type))\n   // OVERRIDES\n   //\n   \n+  @Override\n    protected void renderAllAttributes(\n      FacesContext        context,\n      RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java",
                "sha": "5cd897a86a8dc33305355c27c48814b26ec6d3ae",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java",
                "patch": "@@ -35,6 +35,7 @@ public OutputTextRenderer()\n     super(CoreOutputText.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,6 +45,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _descriptionKey = type.findKey(\"description\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,6 +62,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java",
                "sha": "eecdb15fd48590e68b52f2e4ec33933dc41a0d6e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java",
                "patch": "@@ -232,13 +232,13 @@ public static void renderIcon(\n     if (icon.isNull())\n       return;\n \n-    Map attrs = null;\n+    Map<String, Object> attrs = null;\n \n     if ((shortDesc != null)  ||\n         (align != null)      ||\n          embedded)\n     {\n-      attrs = new ArrayMap(3);\n+      attrs = new ArrayMap<String, Object>(3);\n       attrs.put(Icon.SHORT_DESC_KEY, shortDesc);\n       attrs.put(Icon.ALIGN_KEY, align);\n       attrs.put(Icon.EMBEDDED_KEY, Boolean.valueOf(embedded));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java",
                "sha": "f9b6cb460a80e9e8f3b95ab675394186a06b3c3d",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java",
                "patch": "@@ -41,6 +41,7 @@ protected PanelBoxRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -50,11 +51,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n   \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -79,6 +82,7 @@ protected void encodeAll(\n     writer.endElement(\"table\");\n   }\n   \n+  @Override\n   protected void renderAllAttributes(FacesContext context, \n     RenderingContext arc, \n     FacesBean bean) throws IOException\n@@ -87,6 +91,7 @@ protected void renderAllAttributes(FacesContext context,\n     OutputUtils.renderLayoutTableAttributes(context, arc, \"0\", null);\n   }\n   \n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java",
                "sha": "a35071d7a1b1b84fcf3fc727f3e07b21a16e0509",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java",
                "patch": "@@ -48,6 +48,7 @@ public PanelFormLayoutRenderer()\n     super(CorePanelFormLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _maxColumnsKey = type.findKey(\"maxColumns\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -67,6 +69,7 @@ public boolean getRendersChildren()\n    * This is how we can render both the user defined styleClass and our\n    * component style class.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -130,6 +133,8 @@ protected String getDefaultStyleClass()\n     return XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -197,6 +202,7 @@ protected void encodeAll(\n     rw.endElement(\"div\"); // the root element\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -208,7 +214,9 @@ private void _encodeChildren(\n   {\n     // We cannot render a nested panelForm with any more than a single column\n     // so we must monitor whether we are nested or not:\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     int nestLevel = 0;\n     if (nestLevelObject != null)\n@@ -220,7 +228,7 @@ private void _encodeChildren(\n     // Iterate through the childPeers extracting and counting the number of\n     // visible children, also count the visible children inside of visible\n     // DhtmlGroupPeers:\n-    List childComponents = component.getChildren();\n+    List<UIComponent> childComponents = component.getChildren();\n     FormItemInfo visibleFormItemInfo = _extractVisibleItems(childComponents);\n     List<FormItem> visibleFormItems = visibleFormItemInfo.getFormItems();\n     int totalFormItemCount = visibleFormItemInfo.getTotalFormItemCount();\n@@ -353,6 +361,7 @@ else if (actualColumns == 1)\n    * UIXGroups.\n    * @param \n    */\n+  @SuppressWarnings(\"unchecked\")\n   private FormItemInfo _extractVisibleItems(List<UIComponent> children)\n   {\n     FormItemInfo formItemInfo = new FormItemInfo();\n@@ -568,6 +577,7 @@ else if ( (labelWidth != null) && (fieldWidth != null) )\n       outerTableWidth);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeFormColumns(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -717,7 +727,7 @@ private void _encodeFormItem(\n       // If a peer wants to play well with panelForm, it must use the proper\n       // PanelForm wrapper APIs to ensure proper DOM structure.\n       _encodeBeforeLabelTd(context, arc, rw, startAlignedLabels);\n-      Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+      Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n       try\n       {\n         if (startAlignedLabels)\n@@ -797,12 +807,15 @@ private static void _encodeBeforeLabelTd(\n    * @param rw ResponseWriter\n    * @throws IOException\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected static void encodeBetweenLabelAndFieldCells(\n     FacesContext        context,\n     RenderingContext arc,\n     ResponseWriter      rw) throws IOException\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     if ( (nestLevelObject != null) &&\n       (nestLevelObject.intValue() > 0) ) // top-aligned (labels stacked above fields)\n@@ -942,9 +955,10 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private PropertyKey _maxColumnsKey;\n \n   // Overallocate because we basically want everything to miss\n-  private static final Set _UNSUPPORTED_RENDERER_TYPES = new HashSet(64);\n+  private static final Set<String> _UNSUPPORTED_RENDERER_TYPES;\n   static\n   {\n+    _UNSUPPORTED_RENDERER_TYPES = new HashSet<String>(64);\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Hidden\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Shuttle\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.rich.Hidden\");\n@@ -957,8 +971,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private static final int _COLUMNS_DEFAULT = 3;\n \n   // we need a  resource key map since we are using LabelAndMessageRenderer.\n-  private static final Map _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap();\n-  private static final Map _RESOURCE_KEY_STACKED_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_SIDE_BY_SIDE_MAP;\n+  private static final Map<String, String> _RESOURCE_KEY_STACKED_MAP;\n \n   static\n   {\n@@ -967,6 +981,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n     // instead of the generic prompt cell style.\n \n     // Start-aligned labels for side-by-side orientation:\n+    _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_SIDE_BY_SIDE_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_CELL_STYLE_CLASS);\n@@ -978,6 +994,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n       XhtmlConstants.AF_PANEL_FORM_MESSAGE_CELL_STYLE_CLASS);\n \n     // Stacked labels for one-over-the-other orientation:\n+    _RESOURCE_KEY_STACKED_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_STACKED_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_STACKED_CELL_STYLE_CLASS);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java",
                "sha": "3086461a24842e4963887c48cd90c01423cf0c23",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 6,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java",
                "patch": "@@ -36,18 +36,20 @@ public PanelGroupLayoutRenderer()\n     super(CorePanelGroupLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -102,6 +104,7 @@ else if (isVertical)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     UIComponent  component,\n@@ -111,16 +114,12 @@ private void _encodeChildren(\n   {\n     ResponseWriter rw = context.getResponseWriter();\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelGroupLayout.SEPARATOR_FACET);\n \n     boolean needSeparator = false;\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java",
                "sha": "186d674e700628747c0d2056b60024de75f3dc74",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java",
                "patch": "@@ -26,6 +26,7 @@\n import org.apache.myfaces.trinidad.component.core.layout.CorePanelHeader;\n \n \n+import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n \n@@ -48,6 +49,7 @@ protected PanelHeaderRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,12 +59,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageTypeKey = type.findKey(\"messageType\");\n   }\n   \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,7 +141,7 @@ protected void encodeAll(\n     // need to clear after the header or you get strange behavior\n     if ( nesting &&\n          isIE(arc) &&\n-         arc.getAgent().OS_WINDOWS == arc.getAgent().getAgentOS())\n+         TrinidadAgent.OS_WINDOWS == arc.getAgent().getAgentOS())\n     {\n       writer.startElement(\"div\", component);\n       writer.writeAttribute(\"style\",\"clear:both\", null);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java",
                "sha": "e85fbdc60f91457e3f4f2149fa3a6b2a6e4acc47",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java",
                "patch": "@@ -36,19 +36,21 @@ public PanelHorizontalLayoutRenderer()\n     super(CorePanelHorizontalLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valignKey = type.findKey(\"valign\");\n     _halignKey = type.findKey(\"halign\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -94,6 +96,7 @@ protected Object getHalign(FacesBean bean)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     RenderingContext arc,\n@@ -103,10 +106,6 @@ private void _encodeChildren(\n     ) throws IOException\n   {\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelHorizontalLayout.SEPARATOR_FACET);\n \n@@ -123,9 +122,8 @@ else if (CorePanelHorizontalLayout.HALIGN_RIGHT.equals(hAlign))\n     else\n       isEndAlignment = false;\n     \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java",
                "sha": "557026d7bfdfa2f68654b8d0d3c8af0c6e47a8a7",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java",
                "patch": "@@ -39,25 +39,28 @@ public PanelLabelAndMessageRenderer()\n     super(CorePanelLabelAndMessage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _forKey = type.findKey(\"for\");\n     _labelInlineStyleKey = type.findKey(\"labelStyle\");\n   }    \n \n+  @Override\n   protected boolean labelShowRequired(FacesBean bean)\n   {\n     // Simpler algorithm for panelLabelAndMessage\n     return getShowRequired(bean);\n-  }\n-  \n+  } \n  \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|panelLabelAndMessage\";\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -71,6 +74,7 @@ protected String getLabelFor(\n                                        forValue);\n   }\n \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +128,7 @@ protected void renderFieldCellContents(\n     rw.endElement(\"table\");\n   }\n \n+  @Override\n   protected boolean hasMessage(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,6 +143,7 @@ protected String getFor(FacesBean bean)\n     return toString(bean.getProperty(_forKey));\n   }\n \n+  @Override\n   protected String getLabelInlineStyleKey(FacesBean bean)\n   {\n     return toString(bean.getProperty(_labelInlineStyleKey));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java",
                "sha": "26cbd1dd69f213fa073ce30b89f837904ad64596",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java",
                "patch": "@@ -38,6 +38,7 @@ public PanelListRenderer()\n     super(CorePanelList.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -51,6 +52,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * We want to render the styleClass/inlineStyle attributes as well\n    * as our component styleClass.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,12 +62,13 @@ protected void renderStyleAttributes(\n                           XhtmlConstants.AF_PANEL_LIST_STYLE_CLASS);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -126,6 +129,7 @@ private void _renderListStyle(\n \n   // render without columns. Called when rows > children or when we have\n   // multiple columns, and we are rendering a single column.\n+  @SuppressWarnings(\"unchecked\")\n   private int _renderNoColumns(\n     FacesContext context,\n     RenderingContext arc,\n@@ -139,14 +143,14 @@ private int _renderNoColumns(\n     int maxChildIndex = component.getChildCount();\n     int numRendered = 0;\n     int childIndex = start;\n-    List children   = component.getChildren();\n+    List<UIComponent> children   = component.getChildren();\n \n     writer.startElement(\"ul\", null);\n     _renderListStyle(context, bean);\n \n     while ( numRendered < numToRender  && childIndex < maxChildIndex)\n     {\n-      UIComponent child = (UIComponent) children.get(childIndex);\n+      UIComponent child = children.get(childIndex);\n \n       // if visible child\n       if ( child != null && child.isRendered())",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java",
                "sha": "a777a305a1588f2b70ae33b908392130b793658e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 5,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java",
                "patch": "@@ -59,6 +59,7 @@ protected PanelPartialRootRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -73,7 +74,7 @@ protected void renderContent(\n     encodeAllChildren(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -185,7 +186,7 @@ private void _renderPartialScripts(\n     PartialPageContext pprContext = arc.getPartialPageContext();\n     if (_shouldRenderPartialScripts(pprContext))\n     {\n-      Iterator targets = pprContext.getRenderedPartialTargets();\n+      Iterator<String> targets = pprContext.getRenderedPartialTargets();\n       String scripts = scriptBufferingWriter.getBufferedScripts();\n \n       ResponseWriter writer = context.getResponseWriter();\n@@ -205,7 +206,7 @@ private void _renderPartialScripts(\n         writer.startElement(\"pprtargets\",null);\n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             writer.startElement(\"pprtarget\", null);\n@@ -240,7 +241,8 @@ private void _renderPartialScripts(\n \n         writer.endElement(\"script\");\n \n-        Iterator libraries = scriptBufferingWriter.getBufferedLibraries();\n+        Iterator<Object> libraries = \n+          scriptBufferingWriter.getBufferedLibraries();\n \n         writer.startElement(\"script\", null);\n         XhtmlRenderer.renderScriptTypeAttribute(context, arc);\n@@ -287,7 +289,7 @@ private void _renderPartialScripts(\n \n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             if (firstRenderedTarget)\n@@ -496,11 +498,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _PARTIAL_CACHE_LIBRARY_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java",
                "sha": "f6d647c3c54b514eafeeeb9e7294350a4956d72d",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java",
                "patch": "@@ -22,7 +22,6 @@\n import org.apache.myfaces.trinidad.context.RequestContext;\n \n import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n-import org.apache.myfaces.trinidadinternal.context.RequestContextBean;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.renderkit.core.ppr.PartialPageContext;\n@@ -50,9 +49,12 @@ public static boolean isPartialRequest(FacesContext context)\n    * a \"partial\" parameter.\n    * @todo This is probably unnecessary.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void forcePartialRendering(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     requestMap.put(_PARTIAL_KEY, Boolean.TRUE);\n   }\n \n@@ -125,20 +127,24 @@ public static boolean supportsBlocking(\n   /**\n    * Test if PPR is active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static boolean isPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     return Boolean.TRUE.equals(requestScope.get(_PPR_ACTIVE_FLAG_NAME));\n   }\n \n   /**\n    * Mark that PPR is in fact active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void markPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     requestScope.put(_PPR_ACTIVE_FLAG_NAME, Boolean.TRUE);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java",
                "sha": "7d08aa042ed65e6d6d3c2d4c2e59be283a047d97",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java",
                "patch": "@@ -41,11 +41,13 @@ public PdaPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java",
                "sha": "8d309ae81637196618ac4eefd286d540cf96f918",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java",
                "patch": "@@ -205,11 +205,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException\n@@ -229,11 +231,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_CHOICE_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java",
                "sha": "81f685f92803db8c9a0e35ae8f2bc3779e54cc30",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java",
                "patch": "@@ -34,8 +34,8 @@\n    * @param toComponent eg: treeTable\n    * @return A new map with the replacesment values.\n    */\n-  public static Map convertResourceKeyMap(\n-    Map original, \n+  public static Map<String, String> convertResourceKeyMap(\n+    Map<String, String> original, \n     String fromComponent, \n     String toComponent)\n   {\n@@ -44,18 +44,27 @@ public static Map convertResourceKeyMap(\n     String pattern2 = \"af|\"+fromComponent+\":\";\n     String replace2 = \"af|\"+toComponent+\":\";\n     \n-    Map result = new HashMap(original.size());\n-    Iterator entries = original.entrySet().iterator();\n-    while(entries.hasNext())\n+    Map<String, String> result = \n+      new HashMap<String, String>(original.size());\n+    \n+    Iterator<Map.Entry<String, String>> entries = \n+      original.entrySet().iterator();\n+    \n+    for(Map.Entry<String, String> entry : original.entrySet())\n     {\n-      Map.Entry en = (Map.Entry) entries.next();\n-      String value = (String) en.getValue();\n+      String value = entry.getValue();\n       if (value.startsWith(pattern1))\n+      {\n         value = _replace(value, pattern1, replace1);\n+      }\n       else if (value.startsWith(pattern2))\n+      {\n         value = _replace(value, pattern2, replace2);\n-      result.put(en.getKey(), value);\n+      }\n+      \n+      result.put(entry.getKey(), value);\n     }\n+    \n     return result;\n   }\n   ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java",
                "sha": "39afcd873688e349c73950b0f1f923382869c9ad",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java",
                "patch": "@@ -28,11 +28,13 @@ public SelectBooleanCheckboxRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanCheckbox\";\n   }\n   \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n@@ -42,6 +44,7 @@ protected boolean isIndented()\n    * Don't render <label> on the label portion if there's\n    * a \"text\" attribute set.\n    */\n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanCheckbox.getText(bean);\n@@ -52,6 +55,7 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanCheckbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java",
                "sha": "78201b80596d4b91b969bd2674e97f7622541d9d",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java",
                "patch": "@@ -27,6 +27,7 @@ public SelectBooleanRadioRenderer()\n     \n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanRadio\";\n@@ -36,6 +37,7 @@ protected String getRootStyleClass(FacesBean bean)\n    * selectBooleanRadio should not render a &lt;label&gt; on itself\n    * if \"text\" is set.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanRadio.getText(bean);\n@@ -46,11 +48,13 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n   }  \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanRadio;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java",
                "sha": "77702ed73640289543f89bcc7460c9393f1252ea",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java",
                "patch": "@@ -28,12 +28,14 @@ public SelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyCheckbox\";\n@@ -44,6 +46,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -56,16 +59,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectManyCheckbox should not render a &lt;label&gt; on itself.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyCheckbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java",
                "sha": "23693d15ac280d7bacc3f6ddda5ab59d61d9db67",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java",
                "patch": "@@ -27,16 +27,19 @@ public SelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyListbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java",
                "sha": "1c0098929c13fbd841f89831a9fb9107abaf636f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java",
                "patch": "@@ -28,11 +28,13 @@ public SelectOneChoiceRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneChoice;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java",
                "sha": "4d1d4fab467387f65cd160e1032dfcd02f525353",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java",
                "patch": "@@ -28,16 +28,19 @@ public SelectOneListboxRenderer()\n     \n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneListbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java",
                "sha": "06db36a44da4f1c7c6d32bf811658f7b61010f12",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java",
                "patch": "@@ -27,12 +27,14 @@ public SelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";\n@@ -43,6 +45,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -55,16 +58,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectOneRadio should not render a &lt;label&gt; on itself.\n    */ \n-   protected boolean hasOwnLabel(FacesBean bean)\n-   {\n-     return true;\n-   }\n+  @Override\n+  protected boolean hasOwnLabel(FacesBean bean)\n+  {\n+    return true;\n+  }\n \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneRadio;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java",
                "sha": "1ab103cb7d2db603dd031c966cdf5aa4df2d778c",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 17,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java",
                "patch": "@@ -58,6 +58,7 @@ public SelectRangeChoiceBarRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -68,9 +69,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _varKey = type.findKey(\"var\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n \n     // get the goto event parameter values and queue a RangeChangeEvent.\n@@ -153,7 +158,7 @@ private RangeChangeEvent _createRangeChangeEvent(\n                                 newStart, newEnd);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -162,6 +167,7 @@ public boolean getRendersChildren()\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -269,6 +275,7 @@ protected boolean showAllSupported()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -629,7 +636,8 @@ else if (/*(maxValue == MAX_VALUE_UNKNOWN) ||*/ !supportsScripting(arc))\n     }\n     else\n     {\n-      List items = new ArrayList((int) _MAX_VISIBLE_OPTIONS);\n+      List<SelectItem> items = \n+        new ArrayList<SelectItem>((int) _MAX_VISIBLE_OPTIONS);\n \n       int selectedIndex = _getItems(context, arc, component, items,\n                                     minValue, maxValue, currentValue,\n@@ -685,24 +693,23 @@ else if (count == 1)\n         writer.startElement(\"span\", null);\n         renderStyleClass(context, arc,\n                          XhtmlConstants.AF_FIELD_TEXT_STYLE_CLASS);\n-        writer.writeText(((SelectItem) items.get(0)).getLabel(),\n-                         null);\n+        writer.writeText(items.get(0).getLabel(), null);\n         writer.endElement(\"span\");\n       }\n     }\n   }\n \n \n   private void _writeSelectItems(\n-    FacesContext context,\n-    List         items,\n-    int          selectedIndex) throws IOException\n+    FacesContext     context,\n+    List<SelectItem> items,\n+    int              selectedIndex) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n     int count = items.size();\n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) items.get(i);\n+      SelectItem item = items.get(i);\n       writer.startElement(\"option\", null);\n       writer.writeAttribute(\"value\", item.getValue(), null);\n       if (i == selectedIndex)\n@@ -720,7 +727,7 @@ private int _getItems(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n-    List                items,\n+    List<SelectItem>    items,\n     long                minValue, long maxValue, long value,\n     int                 blockSize,\n     UIComponent         rangeLabel)\n@@ -730,8 +737,7 @@ private int _getItems(\n     boolean maxUnknown = (maxValue == XhtmlConstants.MAX_VALUE_UNKNOWN);\n \n     // Zero-indexed block index.\n-    long blockIndex = (value - minValue + ((long) blockSize) - 1L) /\n-      (long) blockSize;\n+    long blockIndex = (value - minValue + blockSize - 1L) / blockSize;\n \n     // sometimes a record set won't start on a multiple of blockSize. So\n     // remember to add any offset:\n@@ -747,8 +753,7 @@ private int _getItems(\n       maxBlockIndex = blockIndex + 1;\n     else\n     {\n-      maxBlockIndex = (maxValue - minValue - offset) /\n-                      ((long) blockSize);\n+      maxBlockIndex = (maxValue - minValue - offset) / blockSize;\n       if (offset > 0)\n         maxBlockIndex++;\n     }\n@@ -798,7 +803,7 @@ private int _getItems(\n          blockIndex <= lastBlockIndex;\n          blockIndex++)\n     {\n-      long blockStart = minValue + (blockIndex * ((long) blockSize));\n+      long blockStart = minValue + (blockIndex * blockSize);\n \n       // if there is an offset, then adjust accordingly. for example, if the\n       // offset is 7 (and the blockSize is 10), then the new blockStarts are:\n@@ -1094,6 +1099,7 @@ protected String getBlockString(\n    *   {0}-{1}\n    *  (and not bother with the \"of\" substitution)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private String _getRangeString(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1138,7 +1144,7 @@ private String _getRangeString(\n       String var = getVar(getFacesBean(component));\n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n         old = requestMap.put(var, range);\n       }\n@@ -1149,8 +1155,9 @@ private String _getRangeString(\n \n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n+        \n         if (old == null)\n           requestMap.remove(var);\n         else",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java",
                "sha": "dd8ab5e1de42ff593a7e5376fee1050b2346470d",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java",
                "patch": "@@ -37,22 +37,23 @@ public ShowDetailHeaderRenderer()\n   {\n     super(CoreShowDetailHeader.TYPE);\n   }\n-\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _detailRenderer = new DetailRenderer(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     // Delegate decoding to the showDetail renderer\n     _detailRenderer.decode(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -61,7 +62,7 @@ protected void encodeAll(\n   {\n     // map the resource value keys that are used in showDetail and header\n     // to the keys we need to use in this renderer.\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n \n@@ -75,13 +76,15 @@ protected void encodeAll(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(FacesContext context, RenderingContext arc, \n                             UIComponent component, FacesBean bean, String messageType)\n     throws IOException\n   {\n     delegateRenderer(context, arc, component, bean, _detailRenderer);\n   }\n \n+  @Override\n   protected String getMessageType(FacesBean bean)\n   {\n     // Not currently supported\n@@ -97,6 +100,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected boolean shouldRenderChildren(FacesBean bean)\n   {\n     return getDisclosed(bean);\n@@ -110,23 +114,27 @@ public DetailRenderer(FacesBean.Type type)\n       super(type);\n     }\n     \n+    @Override\n     protected void renderId(FacesContext context, UIComponent component)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected void renderAllAttributes(FacesContext context, \n                                        RenderingContext arc, \n                                        FacesBean bean)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getDisclosureText(RenderingContext arc, \n                                        FacesBean bean, boolean disclosed)\n     {\n@@ -137,9 +145,11 @@ protected String getDisclosureText(RenderingContext arc,\n   private CoreRenderer _detailRenderer;\n   private PropertyKey  _disclosedKey;\n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\"af_showDetail.DISCLOSED\" ,\n                           \"af_showDetailHeader.DISCLOSED\");\n     _RESOURCE_KEY_MAP.put(\"af_showDetail.UNDISCLOSED\" ,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java",
                "sha": "aaf1a37846ade5e3ff1ca56706abfe3d6bd5e988",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java",
                "patch": "@@ -43,15 +43,20 @@ protected ShowDetailItemRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.HIDE_EVENT.equals(event) ||\n         XhtmlConstants.SHOW_EVENT.equals(event))\n@@ -68,7 +73,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -83,6 +88,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java",
                "sha": "5eeed263ed5c0f8ba7f4f5bffc8d028c25605848",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java",
                "patch": "@@ -46,6 +46,7 @@ protected ShowDetailRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,6 +57,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,6 +195,7 @@ protected void renderDisclosureIcon(\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java",
                "sha": "1f206ed736e73ad8256ef4a85a3d7964b97e1815",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 9,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java",
                "patch": "@@ -62,13 +62,15 @@ public SimpleInputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _compactKey = type.findKey(\"compact\");\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -83,7 +85,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Color color = null;\n       try\n       {\n@@ -104,7 +106,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       RequestContext afContext = RequestContext.getCurrentInstance();\n \n       // =-=AEW Parameters?  Shouldn't we pass in the color?\n-      Map parameters = null;\n+      Map<String, Object> parameters = null;\n       afContext.launchDialog(GenericEntry.getGenericEntryViewRoot(context),\n                              parameters,\n                              component,\n@@ -117,6 +119,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -152,7 +155,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -176,6 +179,7 @@ protected void encodeAllAsElement(\n     arc.getProperties().remove(_CACHED_CHOOSE_ID);\n   }\n \n+  @Override\n   protected void renderTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -210,6 +214,7 @@ protected void renderTextField(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -228,6 +233,7 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected void renderAfterTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +255,7 @@ protected void renderAfterTextField(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -271,14 +278,15 @@ protected void renderIcon(\n   /**\n    * Return a default converter.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n   {\n     return _DEFAULT_CONVERTER;\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -310,6 +318,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -337,6 +346,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -349,8 +359,7 @@ protected String getOnblur(FacesBean bean)\n                                    onblur, false);\n   }\n \n-\n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -366,14 +375,15 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     // Not supported for selectInputColor\n     // =-=AEW We could have a good default\n     return null;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_COLOR_LAUNCH_ICON_NAME;\n@@ -393,11 +403,13 @@ protected boolean isCompact(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor::content\";\n@@ -425,6 +437,7 @@ private boolean _supportsSwatchAndChooser(RenderingContext arc)\n     return (arc.getAgent().getAgentType() != TrinidadAgent.TYPE_PDA);\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -531,6 +544,7 @@ private Color _getColorValue(FacesBean bean)\n \n   // Checks to see whether this is the first color field for\n   // a given chooseId, and if so renders a script\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderFirstColorFieldScript(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -550,12 +564,12 @@ private void _renderFirstColorFieldScript(\n     String id = getClientId(context, component);\n \n \n-    Map chooseColorIds = (Map)\n+    Map<String, Boolean> chooseColorIds = (Map<String, Boolean>)\n       arc.getProperties().get(_CHOOSE_COLOR_IDS_KEY);\n \n     if (chooseColorIds == null)\n     {\n-      chooseColorIds = new HashMap();\n+      chooseColorIds = new HashMap<String, Boolean>();\n       arc.getProperties().put(_CHOOSE_COLOR_IDS_KEY, chooseColorIds);\n     }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java",
                "sha": "85ca0ca43f2d11cf0a3bbbd46be93894e1edf31e",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 15,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java",
                "patch": "@@ -30,6 +30,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.convert.DateTimeConverter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -60,12 +61,14 @@ public SimpleInputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -80,7 +83,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Date date = null;\n       try\n       {\n@@ -110,7 +113,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       if (date == null)\n         date = new Date();\n \n-      Map parameters = new HashMap();\n+      Map<String, Object> parameters = new HashMap<String, Object>();\n       parameters.put(XhtmlConstants.VALUE_PARAM, _getDateAsString(date));\n       parameters.put(XhtmlConstants.MIN_VALUE_PARAM,\n                      dtrv == null\n@@ -133,6 +136,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -169,7 +173,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -191,6 +195,7 @@ protected void encodeAllAsElement(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -213,6 +218,7 @@ protected void renderIcon(\n    * may map to \"medium\"\n    * @todo medium / default is  what it is defaulted to in faces\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -258,6 +264,7 @@ protected Converter getDefaultConverter(\n     return converter;\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -283,6 +290,7 @@ protected String getOnblur(FacesBean bean)\n     return XhtmlUtils.getChainedJS(buffer.toString(), onblur, false);\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -317,7 +325,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -379,7 +387,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -397,7 +405,7 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_DATE_LAUNCH_ICON_NAME;\n@@ -408,6 +416,7 @@ protected String getChooseId(FacesBean bean)\n     return toString(bean.getProperty(_chooseIdKey));\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -417,12 +426,13 @@ protected String getSearchDesc(FacesBean bean)\n     return arc.getTranslatedString(_LAUNCH_PICKER_TIP_KEY);\n   }\n \n-\n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate::content\";\n@@ -447,6 +457,7 @@ private String _computeChooseId(\n   // Checks to see whether the current dateField should\n   // be active, and if so, renders a script that will activate\n   // it.\n+  @SuppressWarnings(\"unchecked\")\n   private void _checkIfActive(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -459,13 +470,12 @@ private void _checkIfActive(\n \n     String id = getClientId(context, component);\n \n-\n-    Map activeDateFields = (Map)\n+    Map<String, Boolean> activeDateFields = (Map<String, Boolean>)\n       arc.getProperties().get(_ACTIVE_DATE_FIELDS_KEY);\n \n     if (activeDateFields == null)\n     {\n-      activeDateFields = new HashMap();\n+      activeDateFields = new HashMap<String, Boolean>();\n       arc.getProperties().put(_ACTIVE_DATE_FIELDS_KEY, activeDateFields);\n     }\n \n@@ -500,7 +510,7 @@ private void _checkIfActive(\n   //\n   private DateTimeRangeValidator _findDateTimeRangeValidator(FacesBean bean)\n   {\n-    Iterator validators = getValidators(bean);\n+    Iterator<Validator> validators = getValidators(bean);\n     while (validators.hasNext())\n     {\n       Object validator = validators.next();\n@@ -563,13 +573,11 @@ private static long _adjustTimeZone(Date date)\n     // properly ie. MIN_VALUE < (longValue + tzOffset) < MAX_VALUE.\n     if (tzOffset < 0)\n     {\n-     tzOffset = (long)Math.max((float)tzOffset,\n-                               (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-     tzOffset = (long)Math.min((float)tzOffset,\n-                               (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n \n     // adjust the date in ms to the adjusted time zone.\n@@ -592,11 +600,13 @@ private DateTimeZoneOffsetScriptlet()\n     {\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _DATE_TIME_ZONE_OFFSET_KEY;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java",
                "sha": "aa95f9fffe1c431f3f12ff39c527de36a3b9f1d2",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java",
                "patch": "@@ -37,6 +37,7 @@ public SimpleInputFileRenderer()\n   //\n   // DECODE BEHAVIOR\n   // \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -59,6 +60,7 @@ public Object getSubmittedValue(\n     return result;\n   }\n \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -79,6 +81,7 @@ public Object getConvertedValue(\n   /**\n    * <inputFile> cannot show a value.\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -87,6 +90,7 @@ protected String getConvertedString(\n     return null;\n   }\n \n+  @Override\n   protected String getDefaultInputType()\n   {\n     return \"file\";\n@@ -98,44 +102,51 @@ protected String getDefaultInputType()\n   // an inputFile\n   // \n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean isAutoSubmit(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean getReadOnly(FacesContext context, FacesBean bean)\n   {\n     return false;\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputFile::content\";\n   }\n \n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java",
                "sha": "f6e0fade50f62f8ae06a5d526fc2b098ae9fde2b",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java",
                "patch": "@@ -53,6 +53,7 @@ protected SimpleInputListOfValuesRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -65,6 +66,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   // DECODE BEHAVIOR\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     super.decode(context, component);\n@@ -81,7 +84,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n       if ((source != null) && source.equals(clientId))\n@@ -125,6 +130,7 @@ protected void queueActionEvent(\n   // Encode behavior\n   //\n \n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -147,6 +153,7 @@ protected void encodeAllAsElement(\n       rw.endElement(\"span\");\n   }\n   \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -171,6 +178,7 @@ protected void encodeAllAsNonElement(\n    * the span and root dom element styles on the text field, which we \n    * don't, since we do it ourselves on our root dom element.\n    */\n+  @Override\n   protected boolean isSimpleInputText(FacesBean bean)\n   {\n     return false;\n@@ -317,12 +325,14 @@ protected String getLaunchOnclick(\n     }\n   }\n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n@@ -332,6 +342,7 @@ protected boolean getSecret(FacesBean bean)\n    * We want onclick to move from the input field to the button;\n    * @see #getButtonOnclick\n    */\n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     return null;\n@@ -360,11 +371,13 @@ protected String getIcon(\n     return toUri(bean.getProperty(_iconKey));\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputListOfValues::content\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java",
                "sha": "b5d482336e1927f5d589224405517f4d73df66c6",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 8,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java",
                "patch": "@@ -47,6 +47,7 @@ protected SimpleInputTextRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -59,7 +60,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -86,7 +87,7 @@ else if (isTextArea(bean))\n     return submitted;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -152,6 +153,7 @@ protected void encodeAllAsElement(\n \n   }    \n        \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -240,11 +242,13 @@ protected void renderAllAttributes(\n \n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n@@ -280,6 +284,7 @@ protected String getDefaultInputType()\n   /**\n    * Renders event handlers for the node.\n    */\n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -290,6 +295,7 @@ protected void renderEventHandlers(\n     rw.writeAttribute(\"onselect\", getOnselect(bean), \"onselect\");\n   }\n \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -331,6 +337,7 @@ protected void encodeAllAsNonElement(\n   /**\n    * @todo Remove if never necessary\n    */\n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -510,7 +517,7 @@ private void _writeTextLineWithBreaks(\n     }\n   }\n \n-\n+  @Override\n   protected String getOnkeypress(\n     FacesBean bean\n     )\n@@ -529,7 +536,7 @@ protected String getOnkeypress(\n     return onKeyPress;\n   }\n \n-\n+  @Override\n   protected String getOnkeydown(FacesBean bean)\n   {\n     String onKeydown = super.getOnkeydown(bean);\n@@ -546,6 +553,7 @@ protected String getOnkeydown(FacesBean bean)\n   /**\n    * @todo We have to \"getCurrentInstance()\" *twice*.  UGH!\n    */\n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -558,15 +566,16 @@ protected String getOnfocus(FacesBean bean)\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       if (!supportsReadonlyFormElements(arc))\n       {\n-        onfocus = (String) XhtmlUtils.getChainedJS(\"this.blur()\",\n-                                                   onfocus,\n-                                                   true);\n+        onfocus = XhtmlUtils.getChainedJS(\"this.blur()\",\n+                                          onfocus,\n+                                          true);\n       }\n     }\n \n     return onfocus;\n   }\n \n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -641,6 +650,9 @@ protected boolean getSecret(FacesBean bean)\n   /**\n    * @todo - Find a efficient way to identify that this is a numeric field\n    */\n+  //-= Simon Lessard =-\n+  //TODO:  This method is not even used locally\n+  @SuppressWarnings(\"unused\")\n   private boolean _isNumericField(\n //    FacesBean bean\n     )\n@@ -664,6 +676,7 @@ public boolean isTextArea(\n   /**\n    * @todo RENABLE ONFOCUS HACK\n    */\n+  @Override\n   protected boolean renderReadOnlyAsElement(\n     RenderingContext arc,\n     FacesBean           bean)\n@@ -721,7 +734,7 @@ static private String _getMaxLengthFunction(\n     if (userFunc == null)\n       return functionCall;\n \n-    return (String) XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n+    return XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java",
                "sha": "52f9824ded5012a1be1716735f67bb608eea321b",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java",
                "patch": "@@ -40,6 +40,7 @@ public SimpleSelectBooleanCheckboxRenderer(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -55,17 +56,20 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     // HTML 3.2 specification, default value for checkboxes\n     return \"t\";\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"checkbox\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -75,6 +79,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanCheckbox.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -97,7 +102,7 @@ protected String getIconName(\n     return iconName;           \n   }\n   \n-\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -115,11 +120,13 @@ else if (auto != null)\n     return onClick;\n   }  \n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java",
                "sha": "b2ed64aa9017006751a6ad6e91c70f7c4f4726fa",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java",
                "patch": "@@ -39,6 +39,7 @@ public SimpleSelectBooleanRadioRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -49,6 +50,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -71,16 +73,19 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     return arc.getCurrentClientId();\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"radio\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -90,6 +95,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanRadio.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -113,6 +119,7 @@ protected String getIconName(\n     return iconName;           \n   }\n \n+  @Override\n   protected void renderNameAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,26 +138,27 @@ protected void renderNameAttribute(\n    * Returns true if the component should render the ID as a name.\n    * By default, don't if the component is readonly.\n    */\n+  @Override\n   protected boolean shouldRenderName(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return false;\n   }\n-\n-\n+  \n+  @Override\n   protected boolean isRadio()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected String getCompositeId(String clientId)\n   {\n     return clientId + XhtmlConstants.COMPOSITE_ID_EXTENSION + \"r\";   \n   }\n   \n-\n+  @Override\n   protected void renderSpanEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -170,6 +178,7 @@ protected void renderSpanEventHandlers(\n     rw.writeAttribute(\"onmouseup\", getOnmouseup(bean),  \"onmouseup\");\n   }\n   \n+  @Override\n   protected void renderInputEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -186,11 +195,13 @@ protected String getGroup(FacesBean bean)\n     return toString(bean.getProperty(_groupKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java",
                "sha": "58bf3d767d628844714567370d9cab279f3b3680",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java",
                "patch": "@@ -37,6 +37,7 @@ public SimpleSelectBooleanRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -77,6 +78,7 @@ protected void renderNameAttribute(\n    * @TODO use new renderAllAttributes that doesn't render styleclass once\n    * Jeanne adds it.\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -172,7 +174,7 @@ protected void encodeAllAsElement(\n       writer.endElement(\"span\");      \n   }\n \n-\n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java",
                "sha": "b7b9e2f6db34cd438aa6871ed2f2e9c7352c8a90",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java",
                "patch": "@@ -44,6 +44,7 @@ public SimpleSelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,12 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -108,7 +110,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -141,7 +143,7 @@ protected void encodeSelectItems(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selected, disabled,\n@@ -237,6 +239,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderBetweenNonElements(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +252,7 @@ protected void renderBetweenNonElements(\n       super.renderBetweenNonElements(context, arc, component, bean);\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -265,6 +269,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -276,6 +281,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -328,15 +334,19 @@ protected String getLayout(FacesBean bean)\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   } \n+  \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java",
                "sha": "9c3fae31bce686f8491b78ef39426173ca9dec34",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java",
                "patch": "@@ -46,18 +46,20 @@ public SimpleSelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _sizeKey = type.findKey(\"size\");\n   }\n \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -83,7 +85,7 @@ protected void encodeElementContent(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       SimpleSelectOneRenderer.encodeOption(\n            context, arc, component, item, converter,\n            valuePassThru, i, selected);\n@@ -96,6 +98,7 @@ protected void encodeElementContent(\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -124,11 +127,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectManyListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java",
                "sha": "aeff52fbedf7e634bc2fd1db9bedfa7fd38f1057",
                "status": "modified"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java",
                "changes": 68,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 31,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java",
                "patch": "@@ -57,6 +57,7 @@ public SimpleSelectManyRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -70,6 +71,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * @todo This throws a ConverterException on the first unconvertable\n    *  value;  it should wait\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -88,7 +90,7 @@ public Object getConvertedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    Class modelClass = null;\n+    Class<?> modelClass = null;\n     ValueBinding binding = getValueBinding(bean);\n     if (binding != null)\n     {\n@@ -115,8 +117,7 @@ public Object getConvertedValue(\n     }\n   }\n \n-\n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -137,6 +138,7 @@ public Object getSubmittedValue(\n    * Override to return a Converter for the items in the value,\n    * not the value itself.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -145,13 +147,13 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     if ((type == null) || type.isAssignableFrom(List.class))\n       return null;\n \n     if (type.isArray())\n     {\n-      Class itemClass = type.getComponentType();\n+      Class<?> itemClass = type.getComponentType();\n       return ConverterUtils.createConverter(context, itemClass);\n     }\n \n@@ -165,15 +167,15 @@ static private Object _convertSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n     // Handle lists\n     if ((modelClass == null) || modelClass.isAssignableFrom(List.class))\n     {\n       if (converter == null)\n         return Arrays.asList(values);\n \n-      ArrayList newList = new ArrayList(values.length);\n+      ArrayList<Object> newList = new ArrayList<Object>(values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n         // Note - any error will result in an immediate ConverterException\n@@ -188,7 +190,7 @@ else if (modelClass.isArray())\n       if (converter == null)\n         return values;\n \n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       Object convertedArray = Array.newInstance(itemClass, values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n@@ -222,9 +224,10 @@ static private Object _convertIndexedSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n \n     // No selectItems automatically means that we failed to convert\n     if ((selectItems == null) || (selectItems.isEmpty()))\n@@ -233,7 +236,7 @@ static private Object _convertIndexedSubmittedValue(\n       _throwConversionError(context, component);\n     }\n \n-    assert (values instanceof String[]);\n+    // -= Simon Lessard =- Useless assertion: assert (values instanceof String[]);\n \n     // OK, is this a List or an array?\n     boolean isList = ((modelClass == null) ||\n@@ -247,17 +250,17 @@ static private Object _convertIndexedSubmittedValue(\n \n \n     // Create either a List or array\n-    List     objectList;\n-    Object   objectArray;\n+    List<Object> objectList;\n+    Object       objectArray;\n     if (isList)\n     {\n-      objectList = new ArrayList(values.length);\n+      objectList = new ArrayList<Object>(values.length);\n       objectArray = null;\n     }\n     else\n     {\n       objectList = null;\n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       // Use Array API instead of Object[] to support primitive types\n       objectArray = Array.newInstance(itemClass, values.length);\n     }\n@@ -273,7 +276,7 @@ static private Object _convertIndexedSubmittedValue(\n \n         if (( -1 < index) && (selectItems.size() > index))\n         {\n-          SelectItem item = (SelectItem)selectItems.get(index);\n+          SelectItem item = selectItems.get(index);\n           if (item == null)\n             continue;\n \n@@ -301,7 +304,7 @@ static private Object _convertIndexedSubmittedValue(\n       return objectArray;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -330,7 +333,7 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = SelectItemSupport.getSelectItems(component, converter);\n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -379,11 +382,12 @@ abstract protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -398,7 +402,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -414,7 +420,7 @@ protected void renderNonElementContent(\n         renderBetweenNonElements(context, arc, component, bean);\n       }\n \n-      SelectItem item = (SelectItem) selectItems.get(selectedIndices[i]);\n+      SelectItem item = selectItems.get(selectedIndices[i]);\n       rw.writeText(item.getLabel(), null);\n     }\n   }\n@@ -430,13 +436,12 @@ protected void renderBetweenNonElements(\n     rw.endElement(\"br\");\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectMany.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -451,11 +456,12 @@ protected boolean getValuePassThru(FacesBean bean)\n    * Return all the selected indices, in sorted order.  (There\n    * may be trailing -1's in case of an error)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private int[] _getSelectedIndices(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {\n@@ -495,7 +501,7 @@ protected boolean getValuePassThru(FacesBean bean)\n       else\n       {\n         String[] values = (String[]) submittedValue;\n-        List valuesList = new ArrayList(values.length);\n+        List<Object> valuesList = new ArrayList<Object>(values.length);\n         for (int i = 0; i < values.length; i++)\n         {\n           valuesList.add(converter.getAsObject(context,\n@@ -511,16 +517,16 @@ protected boolean getValuePassThru(FacesBean bean)\n       return _EMPTY_INT_ARRAY;\n \n     // Now, get the value looking like a list\n-    List valueList;\n+    List<Object> valueList;\n     if (value instanceof List)\n     {\n       // Make a copy of the list so we can mutate it safely\n-      valueList = new ArrayList((List) value);\n+      valueList = new ArrayList<Object>((List<Object>) value);\n     }\n     else if (value.getClass().isArray())\n     {\n       int length = Array.getLength(value);\n-      valueList = new ArrayList(length);\n+      valueList = new ArrayList<Object>(length);\n       for (int i = 0; i < length; i++)\n       {\n         valueList.add(Array.get(value, i));\n@@ -529,7 +535,7 @@ else if (value.getClass().isArray())\n     else\n     {\n       // Let's just take the one value as a single element\n-      valueList = new ArrayList(1);\n+      valueList = new ArrayList<Object>(1);\n       valueList.add(value);\n     }\n \n@@ -540,7 +546,7 @@ else if (value.getClass().isArray())\n     int lastEntry = 0;\n     for (int i = 0; i < itemCount; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -595,7 +601,7 @@ static private void _throwConversionError(\n \n \n   static private void _throwUnsupportedModelType(\n-    FacesContext context, Class type, UIComponent component)\n+    FacesContext context, Class<?> type, UIComponent component)\n       throws ConverterException\n   {\n     throw new ConverterException(",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java",
                "sha": "84e57b07575d1a4e81fed8dd2b6785293bd91f92",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 4,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java",
                "patch": "@@ -42,22 +42,23 @@ public SimpleSelectOneChoiceRenderer()\n     super(CoreSelectOneChoice.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _unselectedLabelKey = type.findKey(\"unselectedLabel\");\n   }\n \n-\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -79,7 +80,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -116,7 +117,7 @@ else if (unselectedLabel != null)\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n@@ -127,6 +128,7 @@ else if (unselectedLabel != null)\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean)\n   {\n@@ -155,6 +157,7 @@ protected String getOnclick(\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnblur(\n     FacesBean bean)\n   {\n@@ -175,6 +178,7 @@ protected String getOnblur(\n   /**\n    * Add autosubmit script, and autosync script.\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -207,16 +211,19 @@ protected String getOnchange(\n     return XhtmlUtils.getChainedJS(onchange, auto, true);\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneChoice::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java",
                "sha": "9a844a788413cb86b925bc4ad641e03302c45394",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java",
                "patch": "@@ -43,6 +43,7 @@ public SimpleSelectOneListboxRenderer()\n     super(CoreSelectOneListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -71,12 +72,13 @@ static public int getListSize(\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -104,14 +106,15 @@ protected void encodeElementContent(\n \n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n     \n     writer.endElement(\"select\");\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n@@ -120,6 +123,7 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -146,11 +150,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java",
                "sha": "c1afccc4a8ee66ba8907d4290f966869793daadd",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 3,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java",
                "patch": "@@ -44,6 +44,7 @@ public SimpleSelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,12 +57,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -109,7 +111,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -144,7 +146,7 @@ protected void encodeSelectItems(\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selectedIndex == i, disabled,\n@@ -240,6 +242,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -256,6 +259,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -267,6 +271,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -317,23 +322,27 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   }\n    \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java",
                "sha": "e4e9e955f72125753b64998fbffca4a7fbd5a40d",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 15,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java",
                "patch": "@@ -48,13 +48,14 @@ public SimpleSelectOneRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valuePassThruKey = type.findKey(\"valuePassThru\");\n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -160,6 +161,7 @@ static public boolean encodeOption(\n   //\n   // DECODE BEHAVIOR\n   //\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -200,13 +202,14 @@ private Object _convertIndexedSubmittedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems =\n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int index = __getIndex(submittedValue, selectItems);\n     if (index < 0)\n       return null;\n \n-    SelectItem item =\n-      (SelectItem) selectItems.get(index);\n+    SelectItem item = selectItems.get(index);\n     if (item != null)\n       return item.getValue();\n     else\n@@ -219,9 +222,10 @@ private Object _convertIndexedSubmittedValue(\n   //\n   /*\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n@@ -247,7 +251,9 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -290,11 +296,12 @@ abstract   protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -309,7 +316,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -321,7 +330,7 @@ protected void renderNonElementContent(\n     String text;\n     if (selectedIndex >= 0)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(selectedIndex);\n+      SelectItem item = selectItems.get(selectedIndex);\n       text = item.getLabel();\n     }\n     else\n@@ -332,13 +341,12 @@ protected void renderNonElementContent(\n     context.getResponseWriter().writeText(text, null);\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectOne.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -359,7 +367,9 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Convert a stringified index into an index, with range-checking.\n    */\n-  static int __getIndex(Object submittedValue, List selectItems)\n+  static int __getIndex(\n+      Object submittedValue, \n+      List<SelectItem> selectItems)\n   {\n     if (\"\".equals(submittedValue))\n       return -1;\n@@ -393,12 +403,14 @@ static int __getIndex(Object submittedValue, List selectItems)\n   //\n   // Find the selected item in the list\n   //\n-  private int _findIndex(Object value, List selectItems)\n+  private int _findIndex(\n+      Object value, \n+      List<SelectItem> selectItems)\n   {\n     int size = selectItems.size();\n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -434,7 +446,7 @@ private int _getSelectedIndex(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java",
                "sha": "37d173a7472399a08abc7a4f5c2451f73002ba76",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java",
                "patch": "@@ -34,13 +34,15 @@ public SpacerRenderer()\n     super(CoreSpacer.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _heightKey = type.findKey(\"height\");\n     _widthKey = type.findKey(\"width\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java",
                "sha": "db9da4977d2cb8b8d6d05593de6ebf0287190897",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java",
                "patch": "@@ -66,12 +66,13 @@ protected StyleSheetRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,7 +141,9 @@ protected void encodeAll(\n       {\n         if (arc instanceof CoreRenderingContext)\n         {\n-          Map shortStyles = StyleUtils.getShortStyleClasses(sContext, provider);\n+          Map<String, String> shortStyles = \n+            StyleUtils.getShortStyleClasses(sContext, provider);\n+          \n           ((CoreRenderingContext) arc).setStyleMap(shortStyles);\n         }\n       }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java",
                "sha": "13eda8d96dce9510d63bd5ad205353b49fd2f6b6",
                "status": "modified"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 18,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java",
                "patch": "@@ -67,6 +67,7 @@ public TableRenderer(FacesBean.Type type)\n     _resourceKeyMap = createResourceKeyMap();\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -75,19 +76,22 @@ protected void findTypeConstants(FacesBean.Type type)\n     _emptyTextKey  = type.findKey(\"emptyText\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n-    Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n+    Map<String, String> parameters =  \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     String id = component.getClientId(context);\n     if (!id.equals(source))\n       return;\n@@ -141,9 +145,9 @@ private static RangeChangeEvent _createRangeChangeEvent(\n   }\n    private void _decodeSort(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String property = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String property = parameters.get(XhtmlConstants.VALUE_PARAM);\n     Object state = parameters.get(XhtmlConstants.STATE_PARAM);\n     boolean sortOrder = !XhtmlConstants.SORTABLE_ASCENDING.equals(state);\n     SortCriterion criterion = new SortCriterion(property, sortOrder);\n@@ -155,9 +159,9 @@ private void _decodeSort(\n \n   private void _decodeGoto(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String value = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n       final FacesEvent event;\n@@ -190,17 +194,18 @@ private void _decodeGoto(\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private void _decodeHideShow(\n     UIXTable table,\n-    Map parameters,\n+    Map<String, String> parameters,\n     Object eventParam)\n   {\n     boolean doExpand = XhtmlConstants.SHOW_EVENT.equals(eventParam);\n     Object value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n-      RowKeySet old = table.getDisclosedRowKeys();\n-      RowKeySet newset = old.clone();\n+      RowKeySet<Object> old = table.getDisclosedRowKeys();\n+      RowKeySet<Object> newset = old.clone();\n       if (\"all\".equals(value))\n       {\n         if (doExpand)\n@@ -223,14 +228,15 @@ private void _decodeHideShow(\n     }\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n     // save current skin resource map, if any, on the local property\n-    Map oldSkinResourceMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> oldSkinResourceMap = arc.getSkinResourceKeyMap();\n \n     // store TableRenderer's skin resource map, so that called to\n     // context.getTranslatedValue will get the correct key.\n@@ -456,6 +462,7 @@ protected boolean renderTableWithoutColumns(\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -468,7 +475,7 @@ protected int renderSpecialColumns(\n     // depending on the RenderStage\n     final ColumnData colData = tContext.getColumnData();\n     int[] hidden = tContext.getHiddenColumns();\n-    List children = treeTable.getChildren();\n+    List<UIComponent> children = treeTable.getChildren();\n     int colCount  = children.size();\n     for (int i = 0;  i < colCount;  i++)\n     {\n@@ -529,7 +536,7 @@ private void _renderSelectionColumn(\n     RenderingContext   arc,\n     TableRenderingContext tContext) throws IOException\n   {\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     setSelectionResourceKeyMap(arc, tContext);\n     try\n     {\n@@ -717,7 +724,9 @@ public static void setSelectionResourceKeyMap(\n   {\n     if (tContext.hasSelection())\n     {\n-      Map selectionColumnStylesMap = new HashMap();\n+      Map<String, String> selectionColumnStylesMap = \n+        new HashMap<String, String>();\n+      \n       // if selection is multiple-selection:\n       if (tContext.hasSelectAll())\n       {\n@@ -738,20 +747,21 @@ public static void setSelectionResourceKeyMap(\n \n   }\n \n+  @Override\n   protected boolean shouldRenderId(FacesContext context, UIComponent component)\n   {\n     return true;\n   }\n \n-  protected Map createResourceKeyMap()\n+  protected Map<String, String> createResourceKeyMap()\n   {\n     // map the skin resource keys that are used in components used\n     // by the table renderer to table keys.\n     // This way the table can be customized separately from other\n     // components that it uses within it. For example, we can customize\n     // af_table.DISCLOSED translation key\n     // separately from af_showDetail.DISCLOSED.\n-    Map map = new HashMap(6);\n+    Map<String, String> map = new HashMap<String, String>(6);\n     map.put(\"af_showDetail.DISCLOSED\",\n             \"af_table.DISCLOSED\");\n     map.put(\"af_showDetail.UNDISCLOSED\",\n@@ -786,11 +796,13 @@ public NavBar(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext context, RenderingContext arc, FacesBean bean)\n     {\n     }\n \n+    @Override\n     protected boolean getShowAll(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -806,6 +818,7 @@ protected boolean getShowAll(FacesBean bean)\n     }\n \n     // For now, disable showAll except on UIXTable\n+    @Override\n     protected boolean showAllSupported()\n     {\n       TableRenderingContext tContext =\n@@ -815,6 +828,7 @@ protected boolean showAllSupported()\n       }\n \n \n+    @Override\n     protected String getSource()\n     {\n       TableRenderingContext tContext =\n@@ -825,59 +839,70 @@ protected String getSource()\n     /**\n      * @todo Deal with repeating!\n      */\n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.getTableId() + \"-nb\";\n     }\n \n+    @Override\n     protected String getVar(FacesBean bean)\n     {\n       return null;\n     }\n \n     // No support for range labels\n+    @Override\n     protected UIComponent getRangeLabel(UIComponent component)\n     {\n       return null;\n     }\n \n+    @Override\n     protected int getRowCount(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowCount();\n     }\n \n+    @Override\n     protected int getRowIndex(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowIndex();\n     }\n \n+    @Override\n     protected void setRowIndex(UIComponent component, int index)\n     {\n       ((CollectionComponent) component).setRowIndex(index);\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component)\n     {\n       return ((CollectionComponent) component).isRowAvailable();\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component, int rowIndex)\n     {\n       return ((UIXCollection) component).isRowAvailable(rowIndex);\n     }\n \n+    @Override\n     protected Object getRowData(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowData();\n     }\n \n+    @Override\n     protected int getRows(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getRows();\n     }\n \n+    @Override\n     protected int getFirst(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getFirst();\n@@ -887,7 +912,7 @@ protected int getFirst(UIComponent component, FacesBean bean)\n \n   private PropertyKey _widthKey;\n   private PropertyKey _emptyTextKey;\n-  private final Map _resourceKeyMap;\n+  private final Map<String, String> _resourceKeyMap;\n \n   // Key for RenderingContext property used to store the generated ID\n   // to use for the upper navigation bar.  (Part of fix for 2275703.)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java",
                "sha": "9e8bcfd8138c3e6b510a19c74caa31919f83d62d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java",
                "patch": "@@ -32,6 +32,7 @@ protected ValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -69,7 +70,7 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     return ConverterUtils.createConverter(context, type);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java",
                "sha": "fa8964034df5a2f126230ce54a0db2631e43c2f6",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java",
                "patch": "@@ -55,20 +55,24 @@ public FontElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n     \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n     {\n \n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n     {\n \n     }\n+    @Override\n     public void writeHRef(FacesContext context, String href)\n     {\n     \n     }  \n \n+    @Override\n     public void writeSize(FacesContext context, String fontSize)\n       throws IOException\n     {\n@@ -89,6 +93,7 @@ public XhtmlElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n       throws IOException\n     {\n@@ -102,6 +107,7 @@ public void writeInlineStyle(FacesContext context, String style)\n       }*/\n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n       throws IOException\n     {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java",
                "sha": "e2a04cc3bb79a8d4a2f89a1b4e0434b5d4071c2a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java",
                "patch": "@@ -252,6 +252,7 @@ public static boolean supportsXMLDOM(\n    * that deliver events should always return \"true\".\n    * @todo Profile and possibly optimize.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -878,7 +879,7 @@ public static void enableScriptDeferring(RenderingContext arc, boolean isEnabled\n     // since IE has problems with deferred scripts.  This property is\n     // enabled by PanelPartialRootRenderer when rendering the contents\n     // of the body.\n-    Map props = arc.getProperties();\n+    Map<Object, Object> props = arc.getProperties();\n     if (isEnabled)\n     {\n       // Turn script deferring on",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java",
                "sha": "51a3c25c277fbf512234430996091e396d53e1c2",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 5,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java",
                "patch": "@@ -123,7 +123,7 @@ static public void addLib(\n   {\n     if ((XhtmlRenderer.supportsScripting(arc)) && (libKey != null))\n     {\n-      Scriptlet scriptlet = (Scriptlet) _sScriptletTable.get(libKey);\n+      Scriptlet scriptlet = _sScriptletTable.get(libKey);\n       if (scriptlet == null)\n       {\n         if (_LOG.isWarning())\n@@ -505,17 +505,17 @@ public static String getFormattedString(String pattern, String[] parameters)\n   }\n \n   /** HashMap mapping names to their scriptlets */\n-  private static Map _sScriptletTable =\n-    Collections.synchronizedMap(new HashMap(37));\n+  private static Map<Object, Scriptlet> _sScriptletTable =\n+    Collections.synchronizedMap(new HashMap<Object, Scriptlet>(37));\n \n   // Key for storing whether we've written out the script\n   // for storing loaded libraries\n   static private final Object _PORTLET_LIB_TABLE_KEY = new Object();\n-  static private final Set\n-    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet();\n+  static private final Set<String> _NON_STRUCTURAL_COMPONENT_FAMILIES;\n \n   static\n   {\n+    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet<String>();\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXIterator.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXComponentRef.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXSubform.COMPONENT_FAMILY);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java",
                "sha": "4f3541f7e0efd61e0f975a884ace1c4b1ab79866",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java",
                "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n \n-import java.util.Iterator;\n import java.util.Enumeration;\n import java.util.HashSet;\n import java.util.Properties;\n@@ -43,17 +42,15 @@\n    */\n   static public void registerAliases()\n   {\n-    HashSet aliases = new HashSet();\n-    Enumeration names = _ALIASES.propertyNames();\n+    HashSet<String> aliases = new HashSet<String>();\n+    Enumeration<?> names = _ALIASES.propertyNames();\n     while (names.hasMoreElements())\n     {\n       aliases.add(_ALIASES.getProperty((String) names.nextElement()));\n     }\n \n-    Iterator iterator = aliases.iterator();\n-    while (iterator.hasNext())\n+    for(String libName : aliases)\n     {\n-      String libName = (String) iterator.next();\n       Scriptlet scriptlet = null;\n \n       if (\"Common\".equals(libName))\n@@ -64,6 +61,7 @@ static public void registerAliases()\n           // when it's outside of a partial page request, since the\n           // partial page library itself needs it.\n           // See comments in Scriptlet.__isOutsidePartialPage()\n+          @Override\n           boolean __isOutsidePartialPage(RenderingContext arc)\n           {\n             return false;\n@@ -97,11 +95,13 @@ public AliasedScriptlet(\n     _actualLibrary = _getAlias(name);\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _name;\n   }\n \n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -112,6 +112,7 @@ public void registerSelf()\n     }\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -125,6 +126,7 @@ protected void outputScriptletImpl(\n     outputDependency(context, arc, _actualLibrary);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -159,7 +161,7 @@ static private String _getAlias(String theLibraryName)\n     _LOG = TrinidadLogger.createTrinidadLogger(AliasedScriptlet.class);\n \n     // Load library versions\n-    Class cl = AliasedScriptlet.class;\n+    Class<AliasedScriptlet> cl = AliasedScriptlet.class;\n     InputStream in = cl.getResourceAsStream(_JAVASCRIPT_ALIAS_FILE);\n \n     if (in == null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java",
                "sha": "04b596d8a3360aeab9460e1656d66689e43ca17c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java",
                "patch": "@@ -44,6 +44,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FIELD_INFO_KEY;\n@@ -52,6 +53,7 @@ public Object getScriptletKey()\n   /**\n    * @todo Rebuild in Faces-major land\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java",
                "sha": "efac4d9c0fe9f1b8b74a215eabc2415d4f983164",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java",
                "patch": "@@ -42,6 +42,7 @@ private ColorFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FORMAT_INFO_KEY;\n@@ -50,6 +51,7 @@ public Object getScriptletKey()\n   /**\n    * @todo GET TRANSPARENT OFF OF SKIN, NOT HARDCODED BUNDLE\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java",
                "sha": "164c9cb6b8d23dd6d4daa0f0adb849ab1f028216",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java",
                "patch": "@@ -34,6 +34,7 @@ public ConfigurationScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _CONFIGURATION_SCRIPTLET_KEY;\n@@ -52,6 +53,7 @@ static public Scriptlet sharedInstance()\n   /**\n    * @todo See if truly necessary.\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java",
                "sha": "c040e473942a6af9867b006455ae2d6ac65d137e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java",
                "patch": "@@ -43,11 +43,13 @@ private DateFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DATE_FORMAT_INFO_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java",
                "sha": "c0240deab70e326a3ee5fa498c1074d78f9869d6",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java",
                "patch": "@@ -39,11 +39,13 @@ private DefaultTimeZoneScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DEFAULT_TIME_ZONE_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -52,6 +54,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java",
                "sha": "6aa6779c12887642fca8d5893b07b4ff1fcfa478",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java",
                "patch": "@@ -36,6 +36,7 @@ public GlobalVariablesScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return GLOBAL_VARIABLES_KEY;\n@@ -51,6 +52,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java",
                "sha": "575b339cb2813e54712985de60c330edd2a05f00",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java",
                "patch": "@@ -41,11 +41,13 @@ protected JspDirScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return JSP_DIR_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java",
                "sha": "3b9b4ebac06c878a5d5864341720174cd1df1ad1",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java",
                "patch": "@@ -46,7 +46,7 @@ public LibraryScriptlet(String libraryName,\n     _dependencies = dependencies;\n   }\n \n-\n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -57,7 +57,7 @@ public void registerSelf()\n     }\n   }\n \n-\n+  @Override\n   public Object getScriptletKey()\n   {\n     return _libraryName;\n@@ -81,6 +81,7 @@ public static String getLibraryNameWithVersion(\n     return libraryName;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -94,13 +95,15 @@ protected void outputScriptletImpl(\n     XhtmlUtils.writeLibImport(context, arc, _getLibraryURL(context, arc));\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n   {\n     // No-op.\n   }\n \n+  @Override\n   protected void embedInScriptTagImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java",
                "sha": "19d0506ba0c59bde70d95327f51f1df453368f99",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java",
                "patch": "@@ -56,6 +56,7 @@ public LocaleInfoScriptlet()\n    * @todo Revisit separate translation and internationalization\n    * locales.\n    */ \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -108,6 +109,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected String getLibraryName(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -163,7 +165,9 @@ private static Locale _getJSLocaleElementsLocale(\n     Locale inLocale\n     )\n   {\n-    HashMap supportedMap = LocaleList.getSupportedLocales();\n+    HashMap<Locale, Locale> supportedMap = \n+      LocaleList.getSupportedLocales();\n+    \n     Locale outLocale = inLocale;\n     if(supportedMap.containsKey(outLocale))\n     {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java",
                "sha": "64000871035ec97dbd9aebe21b8b136a642184ae",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java",
                "patch": "@@ -90,6 +90,8 @@ private XhtmlScriptletFactory()\n   static private Scriptlet _sCharSetsScriptlet;\n   static private Scriptlet _sShuttleScriptlet;\n   static private Scriptlet _sTableProxyScriptlet;\n+  // FIXME: Never read\n+  @SuppressWarnings(\"unused\")\n   static private Scriptlet _sDiagrammerScriptlet;\n   static private Scriptlet _sColorFormatScriptlet;\n   static private Scriptlet _sColorFieldFormatScriptlet;\n@@ -143,6 +145,7 @@ private XhtmlScriptletFactory()\n         // =-=AEW  The MarlinCore library needs to be rendered even\n         // when it's outside of a partial page request, since the\n         // partial page library itself needs it.\n+        @Override\n         boolean __isOutsidePartialPage(RenderingContext context)\n         {\n           return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java",
                "sha": "cd7da7f9f9760ee2f5aab374cf6d7b82402bca78",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java",
                "patch": "@@ -32,18 +32,21 @@\n   /**\n    * @param context gets the appropriate banding data from this context.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static BandingData create(TableRenderingContext context)\n   {\n     // using the variable name \"hgrid\" so that we don't forget that\n     // the table instance might infact be an hgrid:\n     UIComponent hgrid = context.getTable();\n-    Map attrs = hgrid.getAttributes();\n+    Map<String, Object> attrs = hgrid.getAttributes();\n     int row = _getInterval(attrs, CoreTable.ROW_BANDING_INTERVAL_KEY);\n     int col = _getInterval(attrs, CoreTable.COLUMN_BANDING_INTERVAL_KEY);\n     return new BandingData(col, row);\n   }\n \n-  private static int _getInterval(Map attrs, PropertyKey key)\n+  private static int _getInterval(\n+      Map<String, Object> attrs, \n+      PropertyKey key)\n   {\n     Number num = (Number) attrs.get(key.getName());\n     int interval = (num != null) ? num.intValue() : 0;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java",
                "sha": "ffbd04ac054ad68f64ddde7a692dcd72ddb52b8e",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java",
                "patch": "@@ -18,6 +18,7 @@\n import java.awt.Dimension;\n \n import java.util.ArrayList;\n+import java.util.List;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.component.UIXTreeTable;\n@@ -430,7 +431,7 @@ else if (CoreColumn.ALIGN_CENTER.equals(format))\n \n   private Data _get(int physicalIndex)\n   {\n-    Data d = (Data) _data.get(physicalIndex);\n+    Data d = _data.get(physicalIndex);\n     assert (d != null)\n         : \"no column data for physicalIndex:\" + physicalIndex;\n     return d;\n@@ -551,7 +552,7 @@ static private Object _getSpecialWidth(\n   private int _rowIndex = -1;\n \n   private final Dimension _currentSpan = new Dimension(1,1);\n-  private final ArrayList _data = new ArrayList(10);\n+  private final List<Data> _data = new ArrayList<Data>(10);\n \n   // this constants is used for assert only:\n   private boolean _assertInitMode = true;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java",
                "sha": "a89e391844e95d892f70dbf7f9063f43636457c7",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java",
                "patch": "@@ -31,6 +31,7 @@\n \n public class DetailColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -55,17 +56,20 @@ protected void encodeAll(\n     super.encodeAll(context, arc, component, bean);\n   }  \n   \n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_table.DETAIL_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -87,6 +91,7 @@ public Detail()\n       super(CoreTable.TYPE);\n     }\n     \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n@@ -107,30 +112,35 @@ protected void renderPromptStart(\n       super.renderPromptStart(context, arc, component, bean);\n     }\n     \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       UIXCollection cb = (UIXCollection) component;\n       int rowIndex = cb.getRowIndex();\n       return IntegerUtils.getString(rowIndex);\n     }\n     \n+    @Override\n     protected boolean isTableDetailDisclosure()\n     {\n       return true;\n     }\n     \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();\n       UIXTable table = (UIXTable) tContext.getCollectionComponent();\n       return (table.getDisclosedRowKeys().isContained());\n     }\n \n+    @Override\n    protected String getLinkId(String rootId, boolean disclosed)\n    {\n      return _getDetailLinkId(TableRenderingContext.getCurrentInstance());\n    }\n    \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java",
                "sha": "cac87ecaedd46e5daf9bbe703d5579e212d2f780",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java",
                "patch": "@@ -34,22 +34,26 @@\n \n public class FocusColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_treeTable.FOCUS_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;\n   }\n \n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java",
                "sha": "7a02d8070b32ad3a1c58689820df5e936db01dd0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java",
                "patch": "@@ -52,6 +52,7 @@ public int setStage(int stage)\n     return ps;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"RenderStage:\"+_stage;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java",
                "sha": "32de91799ea10fad553cffb87a11330633625a08",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java",
                "patch": "@@ -93,8 +93,14 @@ public int getCurrentRowSpan()\n   public void setCurrentRowSpan(int rowSpan)\n   {\n \n-\tboolean assertEnabled = false;\n-\tassert assertEnabled = true;\n+    // -= Simon Lessard =-\n+    //    I really dislike to see assert used like that. It's much like\n+    //    #ifdef __DEBUG, but it has a performance cost as well since \n+    //    assertEnabled get instanciated for nothing and this add one \n+    //    if to the coding path. This basically break the purpose of \n+    //    the assert to not polute the execution when not enabled.\n+    boolean assertEnabled = false;\n+    assert assertEnabled = true;\n \n     if (rowSpan < 0)\n     {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java",
                "sha": "1634db21558ee9cf5b835a1e85312606dae86901",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java",
                "patch": "@@ -27,6 +27,7 @@\n public class SelectionColumnRenderer extends SpecialColumnRenderer\n {\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,\n@@ -40,7 +41,7 @@ protected void renderKids(FacesContext          context,\n                      : _singleRenderer);\n   }\n   \n-\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -54,17 +55,19 @@ protected String getHeaderText(FacesBean bean)\n     return arc.getTranslatedString(key);\n   }  \n \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java",
                "sha": "d1de77e8e7a9c9ff9e8d51a48cc2015017fa8bb0",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java",
                "patch": "@@ -36,23 +36,25 @@ public UIComponent getSpecialColumn()\n     return _specialColumn;\n   }\n \n+  @Override\n   protected boolean getHeaderNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected boolean getSortable(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getSortProperty(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getHeaderInlineStyle(RenderingContext arc)\n   {\n     if (XhtmlRenderer.isIE(arc))\n@@ -61,6 +63,7 @@ protected String getHeaderInlineStyle(RenderingContext arc)\n     return null;\n   }\n   \n+  @Override\n   protected boolean isSpecialColumn()\n   {\n     return true;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java",
                "sha": "af5285b2c119bbbb561fd454918180f8ba660778",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 11,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java",
                "patch": "@@ -41,7 +41,7 @@\n {\n   static public TableRenderingContext getCurrentInstance()\n   {\n-    return (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   public TableRenderingContext(\n@@ -219,7 +219,8 @@ public final CollectionComponent getCollectionComponent()\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTable) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -494,14 +495,15 @@ static private Boolean _toBoolean(Object value, boolean defaultValue)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _gatherChildInformation(\n     UIComponent      parent)\n   {\n-    List children = parent.getChildren();\n+    List<UIComponent> children = parent.getChildren();\n     int count = children.size();\n     for (int index = 0; index < count; index++)\n     {\n-      UIComponent child = (UIComponent) children.get(index);\n+      UIComponent child = children.get(index);\n \n       if (!child.isRendered())\n       {\n@@ -517,8 +519,7 @@ private void _gatherChildInformation(\n \n   public static boolean isInsideContentOfTable()\n   {\n-    TableRenderingContext tContext =\n-      (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    TableRenderingContext tContext = _CURRENT_CONTEXT.get();\n \n     if (tContext == null)\n       return false;\n@@ -533,7 +534,7 @@ public static boolean isInsideContentOfTable()\n    */\n   public final Object getTableProperty(Object key)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     return (props == null) ? null : props.get(key);\n   }\n \n@@ -545,10 +546,10 @@ public final Object getTableProperty(Object key)\n    */\n   public final Object setTableProperty(Object key, Object value)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     if (props == null)\n     {\n-      props = new HashMap(5);\n+      props = new HashMap<Object, Object>(5);\n       _tableProps = props;\n     }\n     return props.put(key, value);\n@@ -590,7 +591,7 @@ public final Object setTableProperty(Object key, Object value)\n \n   // this is a map of properties that are local to this table. This is to\n   // support nested tables:\n-  private Map _tableProps = null;\n+  private Map<Object, Object> _tableProps = null;\n \n \n   // general fields\n@@ -603,5 +604,6 @@ public final Object setTableProperty(Object key, Object value)\n   public static final int DONT_KNOW = -1;\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<TableRenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<TableRenderingContext>();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java",
                "sha": "3211fe11ef0ce593059772b821fe7d9c4089eda3",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 17,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java",
                "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n \n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.Map;\n \n import javax.faces.component.NamingContainer;\n@@ -53,6 +52,8 @@ public TableSelectManyRenderer()\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -61,9 +62,10 @@ public void decode(FacesContext context, UIComponent component)\n     table.setRowIndex(-1);\n     String tableId = table.getClientId(context);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterValuesMap();\n+    Map<String, String[]> parameters = \n+      context.getExternalContext().getRequestParameterValuesMap();\n \n-    String[] unselectedBoxes = (String[])\n+    String[] unselectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+UNSELECTED_KEY);\n \n     // check to see if there were any selection boxes in the request.\n@@ -72,11 +74,11 @@ public void decode(FacesContext context, UIComponent component)\n     if ((unselectedBoxes == null) || (unselectedBoxes.length == 0))\n       return;\n \n-    String[] selectedBoxes = (String[])\n+    String[] selectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+SELECTED_KEY);\n \n     // must work with both table and hgrid:\n-    final RowKeySet selectionModel;\n+    final RowKeySet<Object> selectionModel;\n     if (table instanceof UIXTable)\n       selectionModel = ((UIXTable) table).getSelectedRowKeys();\n     else\n@@ -100,9 +102,9 @@ public void decode(FacesContext context, UIComponent component)\n //      // have clicked select-all and then deselected some rows before submitting:\n //    }\n \n-    RowKeySet selectedDelta = selectionModel.clone();\n+    RowKeySet<Object> selectedDelta = selectionModel.clone();\n     selectedDelta.clear();\n-    RowKeySet unselectedDelta = selectedDelta.clone();\n+    RowKeySet<Object> unselectedDelta = selectedDelta.clone();\n \n     _setDeltas(table, selectedBoxes, unselectedBoxes,\n                selectionModel, selectedDelta, unselectedDelta);\n@@ -117,11 +119,12 @@ public void decode(FacesContext context, UIComponent component)\n \n   private void _setDeltas(UIXCollection table,\n                           String[] selectedBoxes, String[] unselectedBoxes,\n-                          RowKeySet current,\n-                          RowKeySet selectedDelta,\n-                          RowKeySet unselectedDelta)\n+                          RowKeySet<Object> current,\n+                          RowKeySet<Object> selectedDelta,\n+                          RowKeySet<Object> unselectedDelta)\n   {\n-    Map deltas = new HashMap(unselectedBoxes.length);\n+    Map<String, Boolean> deltas = \n+      new HashMap<String, Boolean>(unselectedBoxes.length);\n     for(int i=0; i< unselectedBoxes.length; i++)\n     {\n       String currencyStr = unselectedBoxes[i];\n@@ -137,10 +140,9 @@ private void _setDeltas(UIXCollection table,\n       }\n     }\n \n-    for(Iterator entries=deltas.entrySet().iterator(); entries.hasNext();)\n+    for(Map.Entry<String, Boolean> entry : deltas.entrySet())\n     {\n-      Map.Entry entry = (Map.Entry) entries.next();\n-      String currencyStr = (String) entry.getKey();\n+      String currencyStr = entry.getKey();\n       boolean select = (Boolean.TRUE == entry.getValue());\n       table.setCurrencyString(currencyStr);\n \n@@ -164,11 +166,13 @@ else if (current.remove())\n     }\n   }\n \n+  @Override\n   protected CoreRenderer createCellRenderer(FacesBean.Type type)\n   {\n     return new Checkbox(type);\n   }\n \n+  @Override\n   protected boolean isSelectOne()\n   {\n     return false;\n@@ -204,7 +208,7 @@ public static void renderScripts(\n       arc.getFormData().addNeededValue(selectedModeName);\n   }\n \n-\n+  @Override\n   protected void renderCellContent(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -245,6 +249,7 @@ public Checkbox(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -264,20 +269,22 @@ protected void renderId(\n \n     }\n \n-\n+    @Override\n     protected Object getType()\n     {\n       return \"checkbox\";\n     }\n \n-\n+    @Override\n     protected String getDefaultShortDescKey()\n     {\n       return \"af_tableSelectMany.SELECT_COLUMN_HEADER\";\n     }\n   }\n \n   private static final Object _JS_RENDERED_KEY = new Object();\n+  // -= Simon Lessard =- nothing is logge in this class as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   private static final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(TableSelectManyRenderer.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java",
                "sha": "52b5c27256338c18325e19212e9897ee5135d23c",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 7,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java",
                "patch": "@@ -49,6 +49,7 @@ public TableSelectOneRenderer()\n     super(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -70,14 +73,16 @@ public void decode(FacesContext context, UIComponent component)\n \n       String selectionParam = __getSelectionParameterName(context, table);\n \n-      Map parameters =  context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameters =  \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       _LOG.finest(\"Params:{0}\", parameters);\n \n-      String selection = (String) parameters.get(selectionParam);\n+      String selection = parameters.get(selectionParam);\n \n       if (selection != null)\n       {\n-        final RowKeySet state;\n+        final RowKeySet<Object> state;\n         if (table instanceof UIXTable)\n           state = ((UIXTable) table).getSelectedRowKeys();\n         else\n@@ -86,14 +91,14 @@ public void decode(FacesContext context, UIComponent component)\n         table.setCurrencyString(selection);\n         if (!state.isContained())\n         {\n-          RowKeySet unselected = state.clone();\n+          RowKeySet<Object> unselected = state.clone();\n           // TODO : do not mutate the selectedRowKeys here.\n           // instead, mutate when event is broadcast:\n           state.clear();\n           state.add();\n           // clone, so that subsequent mutations of \"state\" will\n           // not affect the parameters of this event: bug 4733858:\n-          RowKeySet selected = state.clone();\n+          RowKeySet<Object> selected = state.clone();\n           FacesEvent event = new SelectionEvent(table, unselected, selected);\n           event.queue();\n         }\n@@ -109,11 +114,13 @@ public void decode(FacesContext context, UIComponent component)\n   //\n   // Encode\n   //\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -188,6 +195,7 @@ public Radio(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getCompositeId(String clientId)\n     {\n       return null;\n@@ -196,18 +204,21 @@ protected String getCompositeId(String clientId)\n     /**\n      * we do not want to render the simple span for the checkbox.\n      */\n+    @Override\n     protected boolean getRenderSimpleSpan(FacesBean bean)\n     {\n       return false;\n     }\n     /**\n      * don't render a special content style class on the radio.\n      */\n+    @Override\n     protected String getContentStyleClass(FacesBean bean)\n     {\n      return null;\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -225,6 +236,7 @@ protected void renderId(\n         writer.writeAttribute(\"id\", getClientId(context, component), null);\n     }\n \n+    @Override\n     protected Object getSubmittedValue(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -233,12 +245,13 @@ protected Object getSubmittedValue(FacesBean bean)\n         Boolean.TRUE : Boolean.FALSE;\n     }\n \n+    @Override\n     protected Object getType()\n     {\n       return \"radio\";\n     }\n \n-\n+    @Override\n     protected Object getValueAttr(RenderingContext arc)\n     {\n       TableRenderingContext tContext =\n@@ -247,7 +260,7 @@ protected Object getValueAttr(RenderingContext arc)\n                 getCurrencyString();\n     }\n \n-\n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String key = getDefaultShortDescKey();\n@@ -260,28 +273,33 @@ protected String getDefaultShortDescKey()\n       return \"af_tableSelectOne.SELECT_COLUMN_HEADER\";\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected boolean isAutoSubmit(FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean isImmediate(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.isImmediate();\n     }\n \n+    @Override\n     protected boolean getReadOnly(FacesContext context, FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean getDisabled(FacesBean bean)\n     {\n       return false;\n@@ -290,6 +308,7 @@ protected boolean getDisabled(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnblur(FacesBean bean)\n     {\n       return null;\n@@ -298,11 +317,13 @@ protected String getOnblur(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnfocus(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected String getOnchange(FacesBean bean)\n     {\n       return null;\n@@ -313,6 +334,7 @@ protected String getOnselect(FacesBean bean)\n       return null;\n     }\n \n+    @Override\n     protected String getText(FacesBean bean)\n     {\n       return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java",
                "sha": "bc09e8049857bf8fdc483d33817a01b173ebabf5",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java",
                "patch": "@@ -34,7 +34,8 @@\n \n public class TreeNodeColumnRenderer extends ColumnRenderer\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -47,7 +48,7 @@ protected void renderKids(FacesContext          context,\n     final String onclick;\n     if (hGrid.isContainer())\n     {\n-      RowKeySet treeState = hGrid.getDisclosedRowKeys();\n+      RowKeySet<Object> treeState = hGrid.getDisclosedRowKeys();\n       String jsVarName = ttrc.getJSVarName();\n       if (treeState.isContained())\n       {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java",
                "sha": "6bf5f541e1518ddc3e88434e3509a6f942750ccf",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java",
                "patch": "@@ -40,13 +40,15 @@ public TreeTableNavRenderer(boolean isTop)\n     _isTop = isTop;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     // we don't take any children. however, return true so that\n     // encodeAll is called:\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java",
                "sha": "56304447740d1dcfa0e11f55e9cc9c9a4cc8e26c",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 1,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java",
                "patch": "@@ -87,7 +87,9 @@ public TreeTableRenderingContext(\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTree) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -142,6 +144,7 @@ public boolean isFocusColumnVisible()\n    * Get the actual column count, taking selection,  focus\n    * and object-hierarchy columns into account.\n    */\n+  @Override\n   public int getSpecialColumnCount()\n   {\n     // we need to add one for the object hierarchy column and possibly another\n@@ -153,6 +156,7 @@ public int getSpecialColumnCount()\n   /**\n    * @return null. HGrids cannot have detail-disclosure.\n    */\n+  @Override\n   public UIComponent getDetail()\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java",
                "sha": "d1ce24bdd31a471a69d62b8ff3d4aa08d472105a",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 12,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java",
                "patch": "@@ -193,22 +193,23 @@ public static String callJSSelectAll(String jsVarName, boolean isSelectAll)\n     return jsVarName+\".multiSelect(\"+(isSelectAll ? \"true\" : \"false\")+\")\";\n   }\n \n-  public static void decodeGotoEvent(final Map parameters,\n+  public static void decodeGotoEvent(final Map<String, String> parameters,\n                                      UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_GOTO.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           final int newStart;\n-          String startParam = (String) parameters.get(_START_PARAM);\n+          String startParam = parameters.get(_START_PARAM);\n           if ((startParam == null) || (\"\".equals(startParam)))\n           {\n             // this must be a root level range change:\n-            startParam = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+            startParam = parameters.get(XhtmlConstants.VALUE_PARAM);\n             newStart = Integer.parseInt(startParam) - 1; // value is based at one.\n             tree.setRowKey(tree.getFocusRowKey());\n             tree.setRowIndex(newStart);\n@@ -228,14 +229,15 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeFocusEvent(final Map parameters,\n+  public static void decodeFocusEvent(final Map<String, String> parameters,\n                                       UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_FOCUS.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           _restorePathFromParam(parameters, tree);\n@@ -246,7 +248,7 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeExpandEvents(final Map parameters,\n+  public static void decodeExpandEvents(final Map<String, String> parameters,\n                                         final UIComponent tree,\n                                         final Object focusRowKey)\n   {\n@@ -267,6 +269,7 @@ else if (_SHOW.equals(event))\n \n     PreserveState preserve = new PreserveState()\n     {\n+      @Override\n       protected void process(UIXHierarchy tree)\n       {\n         final FacesEvent event;\n@@ -283,8 +286,8 @@ protected void process(UIXHierarchy tree)\n           else\n           {\n             tree.setRowKey(focusRowKey);\n-            RowKeySet old = _getExpandedRowKeys(tree);\n-            RowKeySet newset = old.clone();\n+            RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+            RowKeySet<Object> newset = old.clone();\n             if (expand)\n               newset.addAll();\n             else\n@@ -295,8 +298,8 @@ protected void process(UIXHierarchy tree)\n         else  // expand/collapse event\n         {\n           _restorePathFromParam(parameters, tree);\n-          RowKeySet old = _getExpandedRowKeys(tree);\n-          RowKeySet newset = old.clone();\n+          RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+          RowKeySet<Object> newset = old.clone();\n           newset.setContained(expand);\n           event = new RowDisclosureEvent(old, newset, tree);\n         }\n@@ -307,7 +310,8 @@ protected void process(UIXHierarchy tree)\n     preserve.run((UIXHierarchy) tree);\n   }\n \n-  private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n+  @SuppressWarnings(\"unchecked\")\n+  private static RowKeySet<Object> _getExpandedRowKeys(UIXHierarchy tree)\n   {\n     if (tree instanceof UIXTree)\n       return ((UIXTree) tree).getDisclosedRowKeys();\n@@ -318,9 +322,11 @@ private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n     throw new IllegalArgumentException(\"Don't know how to get disclosedRowKeys from:\"+tree);\n   }\n \n-  private static void _restorePathFromParam(Map parameters, UIXHierarchy tree)\n+  private static void _restorePathFromParam(\n+      Map<String, String> parameters, \n+      UIXHierarchy tree)\n   {\n-    String currencyString = (String) parameters.get(_PATH_PARAM);\n+    String currencyString = parameters.get(_PATH_PARAM);\n     tree.setCurrencyString(currencyString);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java",
                "sha": "5d355dfef005e5f04d63f03550ea01e61e6a8e5b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 0,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java",
                "patch": "@@ -22,6 +22,7 @@\n  */\n public class DontRenderChildrenRenderer extends UINodeRendererBase\n {\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java",
                "sha": "1eeab1418f414ba41a5db80bc782c7f8ac17cfed",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 5,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java",
                "patch": "@@ -55,18 +55,20 @@\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeBegin(FacesContext context, UIComponent component)\n     throws IOException\n   {\n     _LOG.finer(\"Entering CorePanelAccordionRenderer.encodeBegin()\");\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int numChildren = children.size();\n     UIComponent disclosedChild = null;\n     UIXShowDetail renderableChild = null;\n \n     for (int indxChild = 0; indxChild < numChildren ; indxChild++ )\n     {\n-      UIComponent child =  (UIComponent) children.get(indxChild);\n+      UIComponent child =  children.get(indxChild);\n       if (! (child instanceof UIXShowDetail) )\n       {\n         continue;\n@@ -125,6 +127,8 @@ public void encodeBegin(FacesContext context, UIComponent component)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeChildren(FacesContext context, UIComponent component)\n     throws IOException\n   {\n@@ -135,7 +139,7 @@ public void encodeChildren(FacesContext context, UIComponent component)\n \n     ResponseWriter out = context.getResponseWriter();\n \n-    ListIterator iter = component.getChildren().listIterator();\n+    ListIterator<UIComponent> iter = component.getChildren().listIterator();\n \n     if (iter == null)\n     {\n@@ -343,6 +347,7 @@ else if (disclosed)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @Override\n   public void encodeEnd(FacesContext context,\n                         UIComponent component)\n     throws IOException\n@@ -524,9 +529,9 @@ private boolean _isDiscloseMany(UIComponent component)\n     return discloseNone;\n   }\n \n-  private UIXShowDetail _getNextShowDetailChild(ListIterator iter)\n+  private UIXShowDetail _getNextShowDetailChild(ListIterator<UIComponent> iter)\n   {\n-    UIComponent child = (UIComponent)iter.next();\n+    UIComponent child = iter.next();\n     if (! child.isRendered() )\n     {\n       return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java",
                "sha": "ff165b82bce6a6666f9ee260f6130acf6f5918d1",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f",
                "deletions": 2,
                "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java",
                "patch": "@@ -45,6 +45,7 @@\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected void writeAdditionalJS(FacesContext context,\n                                    UIComponent component)\n     throws IOException\n@@ -108,6 +109,7 @@ protected void writeAdditionalJS(FacesContext context,\n    * @inheritDoc\n    *\n    */\n+  @Override\n   protected void renderListDisplay(FacesContext context,\n                                    UIComponent component,\n                                    String disclosedChildId)\n@@ -152,6 +154,7 @@ protected void renderListDisplay(FacesContext context,\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected String getHTMLControlID(String compId)\n   {\n     return compId + _CHOICE_SELECT_SUFFIX_ID_CONST;\n@@ -162,6 +165,7 @@ protected String getHTMLControlID(String compId)\n    *\n    *  The select control markup is contained within a TD element.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderSelectItemInTD(FacesContext context,\n                                      UIComponent component,\n                                      String disclosedChildId)\n@@ -190,10 +194,10 @@ private void _renderSelectItemInTD(FacesContext context,\n \n     URLEncoder encoder = rCtx.getURLEncoder();\n     // Render options now.\n-    ListIterator children = component.getChildren().listIterator();\n+    ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n     {\n-      UIComponent child = (UIComponent) children.next();\n+      UIComponent child = children.next();\n       if (child instanceof UIXShowDetail)\n       {\n         UIXShowDetail detailItem = (UIXShowDetail) child;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java",
                "sha": "c64f099fe175b0a9544eec5844095ee3dfa69057",
                "status": "modified"
            }
        ],
        "message": "Commit nearly all of Simon Lessard's patch for ADFFACES-72 (for impl and API);  had to revert SubKeyMap changes as it broke the SubKeyMapTest, and fix the CapabilitiesDocumentParser change as it caused an NPE when running the CoreRenderKitTest",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/d4af08aa8bb8d88ae81a9062db15fbb4d731f46c",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "FacesBeanImplTest.java",
            "RequestContextTest.java",
            "ArrayMapTest.java",
            "ColorConverterTest.java",
            "FormatterMapTest.java",
            "TokenizerTest.java",
            "HtmlResponseWriterTest.java",
            "RegionMetadataTest.java",
            "RenderUtilsTest.java",
            "CoreRenderKitTest.java",
            "OutputUtilsTest.java",
            "TableSelectOneRendererTest.java"
        ]
    },
    "myfaces-trinidad_b7fbc8f": {
        "bug_id": "myfaces-trinidad_b7fbc8f",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/b7fbc8f055c1dc561438eb898b66663e4e4c25ed",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java?ref=b7fbc8f055c1dc561438eb898b66663e4e4c25ed",
                "deletions": 3,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "patch": "@@ -18,6 +18,7 @@\n import java.util.List;\n \n import javax.faces.context.FacesContext;\n+import javax.faces.el.PropertyResolver;\n \n /**\n  * Creates a TreeModel from a List of beans.\n@@ -312,9 +313,8 @@ protected Object getChildData(Object parentData)\n     if (prop == null)\n       return null;\n     \n-    FacesContext context = FacesContext.getCurrentInstance();\n-    return \n-      context.getApplication().getPropertyResolver().getValue(parentData, prop);\n+    PropertyResolver resolver = SortableModel.__getPropertyResolver();\n+    return resolver.getValue(parentData, prop);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "sha": "7c4aaee27cfa15d35d8cf2c0abff8bc6c454242a",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java?ref=b7fbc8f055c1dc561438eb898b66663e4e4c25ed",
                "deletions": 4,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "patch": "@@ -19,6 +19,8 @@\n import java.util.Comparator;\n import java.util.List;\n \n+import javax.faces.FactoryFinder;\n+import javax.faces.application.ApplicationFactory;\n import javax.faces.context.FacesContext;\n import javax.faces.el.PropertyResolver;\n import javax.faces.model.DataModel;\n@@ -145,8 +147,7 @@ public boolean isSortable(String property)\n       Object data = _model.getRowData();\n       try\n       {\n-        FacesContext context = FacesContext.getCurrentInstance();\n-        PropertyResolver resolver = context.getApplication().getPropertyResolver();\n+        PropertyResolver resolver = __getPropertyResolver();\n         Object propertyValue = resolver.getValue(data, property);\n \n         // when the value is null, we don't know if we can sort it.\n@@ -246,9 +247,8 @@ private void _sort(String property, boolean isAscending)\n     // Make sure the model has that row 0! (It could be empty.)\n     if (_model.isRowAvailable())\n     {\n-      FacesContext context = FacesContext.getCurrentInstance();\n       Comparator<Integer> comp =\n-        new Comp(context. getApplication().getPropertyResolver(), property);\n+        new Comp(__getPropertyResolver(), property);\n       if (!isAscending)\n         comp = new Inverter<Integer>(comp);\n \n@@ -388,6 +388,22 @@ public int compare(T o1, T o2)\n     private final Comparator<T> _comp;\n   }\n \n+  static PropertyResolver __getPropertyResolver()\n+  {\n+    // First try the FacesContext, which is a faster way to\n+    // get the PropertyResolver (and the 99.9% scenario)\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    if (context != null)\n+      return context.getApplication().getPropertyResolver();\n+    \n+    // If that fails, then we're likely outside of the JSF lifecycle.\n+    // Look to the ApplicationFactory.\n+    ApplicationFactory factory = (ApplicationFactory)\n+      FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY);\n+    return factory.getApplication().getPropertyResolver();\n+    \n+  }\n+\n   private SortCriterion _sortCriterion = null;\n \n   private DataModel _model = null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "sha": "73865fed0b07d8a338e77738cd0feb5f46f5cc4e",
                "status": "modified"
            }
        ],
        "message": "ADFFACES-342: ChildPropertyTreeModel and SortableModel will throw NPE if used outside of the JSF lifecycle",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/ed533b0d22669b574688c21cee4c73db5e3507f2",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "ChildPropertyTreeModelTest.java",
            "SortableModelTest.java"
        ]
    },
    "myfaces-trinidad_bd14098": {
        "bug_id": "myfaces-trinidad_bd14098",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/bd1409866ad7925142a2a525f9f780fbb08f3add",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java",
                "patch": "@@ -150,7 +150,7 @@\n    * @todo is this iterator read-only or read-write?\n    * @exception IllegalArgumentException if the key is not a list key.\n    */\n-  public Iterator<Object> entries(PropertyKey listKey);\n+  public Iterator<? extends Object> entries(PropertyKey listKey);\n \n   /**\n    * Copies all properties, bindings, and list entries from",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java",
                "sha": "d59da3bdcd169ade2403774ca53ae3ce053813ab",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java",
                "patch": "@@ -253,7 +253,7 @@ public void addAll(FacesBean from)\n         }\n         else\n         {\n-          Iterator<Object> entries = from.entries(fromKey);\n+          Iterator<? extends Object> entries = from.entries(fromKey);\n           while (entries.hasNext())\n             addEntry(toKey, entries.next());\n         }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java",
                "sha": "a3538ab32be1724c14a0ca81a9a49f9691cd10b1",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 11,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java",
                "patch": "@@ -560,6 +560,7 @@ public Iterator getFacetsAndChildren()\n \n   // ------------------------------------------- Event processing methods\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public void broadcast(FacesEvent event)\n     throws AbortProcessingException\n@@ -578,10 +579,12 @@ public void broadcast(FacesEvent event)\n         adfContext.partialUpdateNotify(component);\n     }\n \n-    Iterator<Object> iter = getFacesBean().entries(_LISTENERS_KEY);\n+    Iterator<FacesListener> iter = \n+      (Iterator<FacesListener>)getFacesBean().entries(_LISTENERS_KEY);\n+    \n     while (iter.hasNext())\n     {\n-      FacesListener listener = (FacesListener) iter.next();\n+      FacesListener listener = iter.next();\n       if (event.isAppropriateListener(listener))\n       {\n         event.processListener(listener);\n@@ -606,8 +609,8 @@ public void decode(FacesContext context)\n       throw new NullPointerException();\n \n     // Find all the partialTriggers and save on the context\n-    // FIXME: -= Simon Lessard =-\n-    //        JSF 1.2 specify <String, Object>\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>\n     Map<Object, Object> attrs = getAttributes();\n     Object triggers = attrs.get(\"partialTriggers\");\n     if (triggers instanceof String[])\n@@ -809,8 +812,8 @@ public void processRestoreState(FacesContext context, Object state)\n   @Override\n   public void markInitialState()\n   {\n-    // FIXME: -= Simon Lessard =-\n-    //        Set to true, but never read\n+    // -= Simon Lessard =-\n+    // FIXME: Set to true, but never read\n     //_initialStateMarked = true;\n     getFacesBean().markInitialState();\n   }\n@@ -1272,15 +1275,16 @@ private void _init(\n     if (oldBean != null)\n       _facesBean.addAll(oldBean);\n \n-    // FIXME: -= Simon Lessard =- \n-    //        JSF 1.2 specify <String, Object>, but ValueMap\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>, but ValueMap\n     //        accept PropertyKey as key as well\n     _attributes = new ValueMap(_facesBean);\n   }\n \n   private FacesBean                _facesBean;\n   private List<UIComponent>        _children;\n-  // FIXME: -= Simon Lessard =- JSF 1.2 specify <String, Object>\n+  // -= Simon Lessard =-\n+  // FIXME: JSF 1.2 specify <String, Object>\n   private Map<Object, Object>      _attributes;\n   private Map<String, UIComponent> _facets;\n   private UIComponent              _parent;\n@@ -1291,8 +1295,8 @@ private void _init(\n   private transient LifecycleRenderer _cachedLifecycleRenderer =\n                                                 _UNDEFINED_LIFECYCLE_RENDERER;\n   \n-  // FIXME: -= Simon Lessard =- \n-  //        _initialStateMarked is never read \n+  // -= Simon Lessard =-\n+  // FIXME: _initialStateMarked is never read \n   //        So commented out, is that ok? If so, this attribute should be deleted\n   //private transient boolean _initialStateMarked;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java",
                "sha": "d7daea717c1bb3f10ece50ff18e2af4b0515e2ff",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java",
                "patch": "@@ -163,5 +163,5 @@\n    * <br><i>accessKeys</i>- returns a Boolean value signifying whether or not the Agent\n    * supports accessKeys.\n    */\n-  public Map<String, Object> getCapabilities();\n+  public Map<Object, Object> getCapabilities();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java",
                "sha": "28a366e61542e8a4dd08f8397a46b01cd86082af",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java",
                "patch": "@@ -119,10 +119,10 @@ public void setCurrentLaunchSource(UIComponent component)\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java",
                "sha": "81ac1a8cf160373341718ae0805fd32d0d72fa29",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java",
                "patch": "@@ -16,7 +16,6 @@\n package org.apache.myfaces.trinidad.context;\n \n import java.awt.Color;\n-import java.net.URL;\n import java.util.List;\n import java.util.Map;\n import java.util.TimeZone;\n@@ -100,7 +99,7 @@ protected RequestContext()\n   /**\n    * @deprecated use getPageFlowScope()\n    */\n-  @SuppressWarnings(\"dep-ann\")\n+  @Deprecated\n   final public Map<String, Object> getProcessScope()\n   {\n     return getPageFlowScope();\n@@ -159,10 +158,10 @@ public abstract void returnFromDialog(\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n   //\n   // General ADF Faces\n@@ -286,13 +285,13 @@ public abstract void launchDialog(\n    * Returns a Map that will accept topic names as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpTopic();\n+  public abstract Map<String, Object> getHelpTopic();\n \n   /**\n    * Returns a Map that will accept help system properties as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpSystem();\n+  public abstract Map<String, Object> getHelpSystem();\n \n   //\n   // Date formatting\n@@ -368,7 +367,7 @@ public abstract void addPartialTriggerListeners(UIComponent listener,\n    * second the first parameter into the message. (The formatter Map supports\n    * only a single parameter at this time.)\n    */\n-  public abstract Map<Object, String> getFormatter();\n+  public abstract Map<Object, Map<Object,String>> getFormatter();\n \n   /**\n    * Returns the Agent information for the current context",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java",
                "sha": "988f67e5dc3012f7c0846d8415dd64b165b358ad",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java",
                "patch": "@@ -52,8 +52,8 @@ public LaunchEvent(UIComponent source,\n   {\n     super(source);\n     _viewRoot = viewRoot;\n-    _dialogParameters = new HashMap<Object, Object>();\n-    _windowProperties  = new HashMap<Object, Object>();\n+    _dialogParameters = new HashMap<String, Object>();\n+    _windowProperties  = new HashMap<String, Object>();\n \n     // LaunchEvents should always be queued for the current phase\n     setPhaseId(PhaseId.ANY_PHASE);\n@@ -84,7 +84,7 @@ public UIViewRoot getViewRoot()\n    * A map of parameters to pass to the dialog.  All entries\n    * in the map will be added to the pageFlowScope.\n    */\n-  public Map<Object, Object> getDialogParameters()\n+  public Map<String, Object> getDialogParameters()\n   {\n     return _dialogParameters;\n   }\n@@ -96,7 +96,7 @@ public UIViewRoot getViewRoot()\n    * The map will be ignored if a dialog is not used.\n    * =-=AEW getWindowProperties or getDialogProperties or ??\n    */\n-  public Map<Object, Object> getWindowProperties()\n+  public Map<String, Object> getWindowProperties()\n   {\n     return _windowProperties;\n   }\n@@ -176,6 +176,6 @@ public String toString()\n   }\n \n   private UIViewRoot          _viewRoot;\n-  private Map<Object, Object> _dialogParameters;\n-  private Map<Object, Object> _windowProperties;\n+  private Map<String, Object> _dialogParameters;\n+  private Map<String, Object> _windowProperties;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java",
                "sha": "655deeb7fc8aa7d458d6538e34f77a2e6d3b7804",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java",
                "patch": "@@ -339,11 +339,13 @@ public static Object getMaxVisitedRowKey(\n \n       //TODO - if I change this to use pageFlowScope it doesn't work.\n       // figure out why.\n-      Map sessionMap  = externalContext.getSessionMap();\n+      // FIXME: -= Simon Lessard\n+      //        session map is <String, Object> as of JSF 1.2\n+      Map<Object,Object> sessionMap  = externalContext.getSessionMap();\n \n-      Map maxPathMap = (Map)sessionMap.get(maxPathKey);\n+      Map<Object,Object> maxPathMap = (Map<Object,Object>)sessionMap.get(maxPathKey);\n       if (maxPathMap == null)\n-        maxPathMap = new HashMap();\n+        maxPathMap = new HashMap<Object,Object>();\n \n       Object focusRowKey = model.getFocusRowKey();\n       Object parentRowKey = model.getContainerRowKey(focusRowKey);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java",
                "sha": "c50bfd8f45b501a88b74adfb0ced04daee9c3f0f",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java",
                "patch": "@@ -33,6 +33,10 @@\n  * compute. Use the {@link #getSize()} method on this class for an inexpensive size.\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// TODO: Since RowKeySet is used by so many components internally,\n+//       I believe we shouldn't parametrize it. I would rather see \n+//       public abstract class RowKeySet extends AbstractSet<Object> implements Cloneable\n public abstract class RowKeySet<E> extends AbstractSet<E> implements Cloneable\n {\n   public RowKeySet()",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java",
                "sha": "30f22fb3d293bb0164a26dfa9a9ba1f5733a66ae",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java",
                "patch": "@@ -67,12 +67,12 @@\n    *   default dialog functionality.\n    */\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map<?, ?>    processParameters,\n-    boolean      useWindow,\n-    Map<?, ?>    windowProperties);\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties);\n \n   /**\n    * Called to return from a dialog.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java",
                "sha": "8a906c06a934b6c0f25ac1913f4aee44ed7a4742",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java",
                "patch": "@@ -52,6 +52,10 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/util/ArrayMap.java#0 $) $Date: 10-nov-2005.19:08:36 $\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// FIXME: Using a single array for both the key and the value leads to many \n+//        problems, especially with type safety. Using parallel arrays or \n+//        a sigle array containing nodes would be a much cleaner/safer idea.\n public class ArrayMap<K,V> extends AbstractMap<K,V> implements Cloneable\n {\n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java",
                "sha": "626e3d7336eacaa500b5864be31ad5c19e9b1973",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java",
                "patch": "@@ -42,11 +42,12 @@ public Agent createAgent(String userAgent, String accept)\n     return agent;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public Agent createAgent(FacesContext facesContext)\n   {\n     AgentImpl agent = new AgentImpl();\n \n-    Map headerMap;\n+    Map<String, String> headerMap;\n     if (facesContext != null)\n     {\n       headerMap = facesContext.getExternalContext().getRequestHeaderMap();\n@@ -63,22 +64,25 @@ public Agent createAgent(FacesContext facesContext)\n   }\n \n \n-  private void _populateAgentImpl(Map headerMap, AgentImpl agent)\n+  private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n   {\n-    String userAgent = (String) headerMap.get(\"User-Agent\");\n+    String userAgent = headerMap.get(\"User-Agent\");\n \n     if ((userAgent != null) && userAgent.startsWith(\"PTG\"))\n     {\n       _populateIaswAgentImpl(userAgent,\n-                             (String) headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n+                             headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n       return;\n     }\n \n     // determine the agent from the headers\n-    _populateAgentImpl(userAgent, (String) headerMap.get(\"Accept\"),agent);\n+    _populateAgentImpl(userAgent, headerMap.get(\"Accept\"), agent);\n   }\n \n-  private void _populateAgentImpl(String userAgent, String accept,AgentImpl agent)\n+  private void _populateAgentImpl(\n+      String userAgent, \n+      String accept, \n+      AgentImpl agent)\n   {\n     /* for testing PocketPC */\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java",
                "sha": "25eb69c1312ab158ce56efeb8534767c1e0fb59f",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java",
                "patch": "@@ -61,37 +61,44 @@ public AgentImpl(boolean nullAgentEntry)\n     _entry = _getAgentEntry(userAgent, accept);\n   }\n   */\n+  @Override\n   public Object getType()\n   {\n     return _entry._type;\n   }\n \n+  @Override\n   public String getAgentName()\n   {\n     return _entry._agent;\n   }\n \n+  @Override\n   public String getAgentVersion()\n   {\n     return _entry._agentVersion;\n   }\n \n+  @Override\n   public String getPlatformName()\n   {\n     return _entry._platform;\n   }\n \n+  @Override\n   public String getPlatformVersion()\n   {\n     return _entry._platformVersion;\n   }\n \n+  @Override\n   public String getHardwareMakeModel()\n   {\n     return _entry._makeModel;\n   }\n \n-  public Map getCapabilities()\n+  @Override\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _requestCapabilities;\n   }\n@@ -148,12 +155,12 @@ void __addRequestCapability(CapabilityKey key,Object value)\n   {\n      if (_requestCapabilities == null)\n      {\n-       _requestCapabilities = new HashMap();\n+       _requestCapabilities = new HashMap<Object, Object>();\n      }\n     _requestCapabilities.put(key,value);\n   }\n \n-  private HashMap _requestCapabilities;\n+  private HashMap<Object, Object> _requestCapabilities;\n   private AgentEntry _entry;\n   static private final AgentEntry _NULL_AGENT_ENTRY = new AgentEntry();\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentImpl.class);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java",
                "sha": "e1a79b04dc1467444b22002aca7122f6ad7cb575",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java",
                "patch": "@@ -39,7 +39,11 @@\n    * @param platform\n    * @return\n    */\n-  public static TrinidadAgent getAgent(int type, int browser, String agentVersion, int platform)\n+  public static TrinidadAgent getAgent(\n+      int type, \n+      int browser, \n+      String agentVersion, \n+      int platform)\n   {\n     final int fType = type;\n     final int fBrowser = browser;\n@@ -49,18 +53,23 @@ public static TrinidadAgent getAgent(int type, int browser, String agentVersion,\n     Agent agent =\n             new DefaultAgent ()\n             {\n+              @Override\n               public Object getType() {\n                 return AgentNameUtil.getAgentName(fType);\n               }\n \n+              @Override\n               public String getAgentName() {\n                 return AgentNameUtil.getAgentName(fBrowser);\n               }\n \n+              @Override\n               public String getAgentVersion() {\n                 return fAgentVersion;\n               }\n \n+              // FIXME: This method is never used locally, should it be removed?\n+              @SuppressWarnings(\"unused\")\n               public String getPlatFormName() {\n                 return AgentNameUtil.getPlatformName(fPlatform);\n               }\n@@ -110,7 +119,9 @@ public static TrinidadAgent getAgent(FacesContext context)\n   //=-=AEW: I don't believe this is a repository thing:  the concept\n   //of output mode is entirely renderkit specific, and the tweaks\n   //that are made to the capabilities are also renderkit specific.\n-  public static TrinidadAgent mergeCapabilities(TrinidadAgent agent, Map capabilities)\n+  public static TrinidadAgent mergeCapabilities(\n+      TrinidadAgent agent, \n+      Map<Object, Object> capabilities)\n   {\n     if (!(agent instanceof TrinidadAgentImpl))\n       throw new IllegalArgumentException(\"mergeCapabilities() may only be \" +",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java",
                "sha": "8905122d8bf3873b16991f373327632af4380a45",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java",
                "patch": "@@ -54,10 +54,10 @@ static public CapabilitiesProvider getCapabilitiesProvider(URL capUrl)\n     //getCapabilitiesProvider\n     //--Are we really going to support multiple files??\n     CapabilitiesProvider provider = null;\n-    Map providerMap = _getProviderMap();\n+    Map<URL, CapabilitiesProvider> providerMap = _getProviderMap();\n     synchronized (providerMap)\n     {\n-      provider = (CapabilitiesProvider) providerMap.get(capUrl);\n+      provider = providerMap.get(capUrl);\n       if (provider == null)\n       {\n         provider = new CapabilitiesProvider(capUrl);\n@@ -83,7 +83,7 @@ public CapabilityMap getCapabilities(Agent agent)\n     synchronized (this) {\n       try\n       {\n-        caps = (CapabilityMap) _sCache.get(key);\n+        caps = _sCache.get(key);\n \n         //if not in cache, acquire\n         if (caps == null)\n@@ -134,7 +134,7 @@ private CapabilitiesDocument _getCapabilityDocument()\n     return _document;\n   }\n \n-  static private Map _getProviderMap()\n+  static private Map<URL, CapabilitiesProvider> _getProviderMap()\n   {\n     return _providerMap;\n   }\n@@ -175,11 +175,13 @@ static private Map _getProviderMap()\n \n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return _hashCode;\n     }\n \n+    @Override\n     public boolean equals(Object obj)\n     {\n       if (obj == this)\n@@ -216,10 +218,12 @@ public boolean equals(Object obj)\n \n   //@todo: The caches are global. Should we store in SC?\n   //@todo: Use an LRU, to limit number of entries\n-  static private HashMap _sCache = new HashMap(64);\n+  static private HashMap<CacheKey, CapabilityMap> _sCache = \n+    new HashMap<CacheKey, CapabilityMap>(64);\n \n \n-  static private Map _providerMap = new HashMap(4);\n+  static private Map<URL, CapabilitiesProvider> _providerMap = \n+    new HashMap<URL, CapabilitiesProvider>(4);\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesProvider.class);\n \n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java",
                "sha": "32e675269758e71940e7e93ff2301bdbf72cd5eb",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java",
                "patch": "@@ -106,11 +106,13 @@ public static CapabilityKey getKeyAt(int index)\n     return null;\n   }\n \n+  @Override\n   public boolean equals(Object obj)\n   {\n     return this == obj;\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _capIndex;\n@@ -126,6 +128,7 @@ synchronized private static Object _createKey(String capabilityName)\n     return key;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _capName;\n@@ -136,7 +139,8 @@ public String toString()\n \n   static final private int DEFAULT_SIZE = 50;\n \n-  static private HashMap _capKeyNames = new HashMap();\n+  static private HashMap<String, CapabilityKey> _capKeyNames = \n+    new HashMap<String, CapabilityKey>();\n   static private CapabilityKey[] _keys = new CapabilityKey[DEFAULT_SIZE];\n   private static int _count = 0;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java",
                "sha": "abd7e08a7f427cba35908887d85e8f4846853ecc",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 11,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java",
                "patch": "@@ -30,7 +30,10 @@\n  * -- Also this impl assumes that the number of keys **will** change (increase) after init.\n  *\n  */\n-public class CapabilityMap extends AbstractMap implements Cloneable\n+// FIXME -= Simon Lessard =-\n+//       This is another map that can accept both String and another type as keys.\n+//       Shouldn't we force type safety with a single key type ?\n+public class CapabilityMap extends AbstractMap<Object, Object> implements Cloneable\n {\n \n   private CapabilityMap()\n@@ -99,7 +102,7 @@ public Object getCapability(CapabilityKey capKey)\n    * @param capabilities\n    * @return  returns a new capability map that merges key/values of the provided map\n    */\n-  public CapabilityMap merge(Map capabilities)\n+  public CapabilityMap merge(Map<Object, Object> capabilities)\n   {\n     if ((capabilities == null) || (capabilities.isEmpty()))\n       return this;\n@@ -155,6 +158,7 @@ public CapabilityMap merge(Object[] capabilities)\n    * @param key\n    * @return\n    */\n+  @Override\n   public Object get(Object key)\n   {\n     if (key == null)\n@@ -171,6 +175,7 @@ public Object get(Object key)\n    * @param value\n    * @return\n    */\n+  @Override\n   public Object put(Object key, Object value)\n   {\n     return new UnsupportedOperationException();\n@@ -179,20 +184,22 @@ public Object put(Object key, Object value)\n   /**\n    * @return\n    */\n-  public Set entrySet()\n+  @Override\n+  public Set<Map.Entry<Object, Object>> entrySet()\n   {\n     if (_entrySet == null)\n       _createEntrySet();\n \n     return _entrySet;\n   }\n \n+  @Override\n   public Object clone()\n   {\n     try\n     {\n       CapabilityMap that = (CapabilityMap) super.clone();\n-      that._indexedValues = (Object[]) _indexedValues.clone();\n+      that._indexedValues = _indexedValues.clone();\n       that._entrySet = null;\n       return that;\n     }\n@@ -220,8 +227,9 @@ synchronized private void _createEntrySet()\n   {\n     if (_entrySet == null)\n     {\n-      HashSet hs = new HashSet();\n-      Iterator iter = new KeyIterator();\n+      HashSet<Map.Entry<Object, Object>> hs = \n+        new HashSet<Map.Entry<Object, Object>>();\n+      Iterator<Object> iter = new KeyIterator();\n       while (iter.hasNext())\n       {\n         CapabilityKey capKey = (CapabilityKey) iter.next();\n@@ -241,9 +249,9 @@ private int _max(int value1, int value2)\n   }\n \n \n-  private Object[] _getMapAsArray(Map capabilities)\n+  private Object[] _getMapAsArray(Map<Object, Object> capabilities)\n   {\n-    Iterator iter = capabilities.keySet().iterator();\n+    Iterator<Object> iter = capabilities.keySet().iterator();\n     Object[] caps = new Object[capabilities.size() * 2];\n     int i = 0;\n     while (iter.hasNext())\n@@ -260,7 +268,7 @@ private int _max(int value1, int value2)\n \n \n   //KeyIterator\n-  private class KeyIterator implements Iterator\n+  private class KeyIterator implements Iterator<Object>\n   {\n     public KeyIterator()\n     {\n@@ -315,7 +323,7 @@ private void _setNext()\n \n \n   //Map Entry\n-  private class CEntry implements Entry\n+  private class CEntry implements Entry<Object, Object>\n   {\n \n     private Object key;\n@@ -327,6 +335,7 @@ private void _setNext()\n       this.value = value;\n     }\n \n+    @Override\n     public boolean equals(Object o)\n     {\n       if (this == o)\n@@ -355,6 +364,7 @@ public Object setValue(Object newValue)\n       throw new UnsupportedOperationException();\n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return key.hashCode() ^ (value == null ? 0 : value.hashCode());\n@@ -363,5 +373,5 @@ public int hashCode()\n \n \n   private Object[] _indexedValues;\n-  private Set _entrySet;\n+  private Set<Map.Entry<Object, Object>> _entrySet;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java",
                "sha": "961386e34937c68f805f0b3befa66031f178b842",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java",
                "patch": "@@ -72,5 +72,5 @@ synchronized static private Object _getValue(Object value)\n     return value;\n   }\n   \n-  private static HashMap _values = new HashMap(32);\n+  private static HashMap<Object, Object> _values = new HashMap<Object, Object>(32);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java",
                "sha": "3b0f429d208a96015a1e7cb9d11b6ec24995cbeb",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java",
                "patch": "@@ -91,7 +91,7 @@ public String getHardwareMakeModel()\n    *\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities ()\n+  public Map<Object, Object> getCapabilities ()\n   {\n     return null;\n   }  ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java",
                "sha": "263d44211d835f29ed09aa0aa8f7680558d25ea0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java",
                "patch": "@@ -267,6 +267,7 @@\n    * based on it (like Netscape 6).\n    * @deprecated since 2.2.0. Use {@link #APPLICATION_GECKO}.\n    */\n+  @Deprecated\n   static public final int APPLICATION_MOZILLA   = APPLICATION_GECKO;\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java",
                "sha": "cfb2ed7e8f109332a8074327b7b933984aa4ffaf",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java",
                "patch": "@@ -121,7 +121,7 @@ public String getPlatformVersion()\n   /**\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities()\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _capMap;\n   }\n@@ -154,6 +154,7 @@ public Object getCapability(CapabilityKey key)\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try\n@@ -170,6 +171,7 @@ public Object clone()\n   }\n \n \n+  @Override\n   public String toString()\n   {\n     StringBuffer buffer = new StringBuffer(\"Agent[\");\n@@ -231,7 +233,7 @@ private void _initialize(FacesContext context)\n       _major = _getMajorVersion(getAgentVersion());\n \n     _capMap = _getCapabilityMap(context);\n-    Map requestCaps = _delegate.getCapabilities();\n+    Map<Object, Object> requestCaps = _delegate.getCapabilities();\n     if (requestCaps != null)\n     {\n       _capMap = _capMap.merge(requestCaps);\n@@ -370,7 +372,7 @@ static private int _getMajorVersion(String source)\n     return (int) version;\n   }\n \n-  void __mergeCapabilities(Map capabilities)\n+  void __mergeCapabilities(Map<Object, Object> capabilities)\n   {\n     _capMap = _capMap.merge(capabilities);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java",
                "sha": "b1973c53276d041f10ee35986098ca86815528e9",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java",
                "patch": "@@ -35,6 +35,7 @@\n   {\n     _agents = agents;\n     _devices = devices;\n+    _includeNodeBySrcCaps = new HashMap<URL, Object>();\n     _defaultAgentCapabilities = _getDefaultAgentCapabilities(_agents);\n   }\n \n@@ -174,7 +175,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       CapabilitiesNode matchNode)\n   {\n     assert (matchNode != null);\n@@ -187,7 +188,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n     //check for circular dependecy\n     if (includedByRefs == null)\n-      includedByRefs = new ArrayList();\n+      includedByRefs = new ArrayList<String>();\n \n     if (matchNode.__getId() != null)\n     {\n@@ -240,7 +241,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n     assert (capNodes != null);\n     assert (dcNode != null);\n \n-    ArrayList includedByRefs = new ArrayList();\n+    ArrayList<String> includedByRefs = new ArrayList<String>();\n \n     //process node that includes by reference\n     IncludeNode[] refIncludes = dcNode.__getIncludesByRef();\n@@ -279,7 +280,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       String refId)\n   {\n     assert (capNodes != null);\n@@ -305,15 +306,15 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[] _getCapabilities(URL srcUrl)\n   {\n-    Object o = includeNodeBySrcCaps.get(srcUrl);\n+    Object o = _includeNodeBySrcCaps.get(srcUrl);\n     if (o != null)\n       return (Object[]) o;\n \n     Object[] caps = null;\n-    synchronized (includeNodeBySrcCaps)\n+    synchronized (_includeNodeBySrcCaps)\n     {\n       caps = CapabilityDataDocumentParser.parse(srcUrl);\n-      includeNodeBySrcCaps.put(srcUrl, caps);\n+      _includeNodeBySrcCaps.put(srcUrl, caps);\n     }\n \n     return caps;\n@@ -348,7 +349,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n   private CapabilitiesNode[] _agents;\n   private DeviceNode[] _devices;\n-  private HashMap includeNodeBySrcCaps = new HashMap();\n+  private HashMap<URL, Object> _includeNodeBySrcCaps;\n   private Object[][] _defaultAgentCapabilities;\n \n   static final CapabilitiesDocument EMPTY_DOCUMENT = new CapabilitiesDocument();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java",
                "sha": "4dd5d0b5bd10d9e36cba2714881a5ebcdf0491c3",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java",
                "patch": "@@ -43,7 +43,11 @@\n         implements XMLConstants\n {\n \n-  private CapabilitiesDocumentParser() {}\n+  private CapabilitiesDocumentParser()\n+  {\n+    _capabilitiesNodes = new ArrayList<CapabilitiesNode>();\n+    _deviceNodes = new ArrayList<DeviceNode>();\n+  }\n \n   static public CapabilitiesDocument createInstance (URL capUrl)\n   {\n@@ -95,6 +99,7 @@ static public CapabilitiesDocument createInstance (URL capUrl)\n   }\n \n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -115,6 +120,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -143,6 +149,7 @@ else if (ELEMENT_DEVICE.equals(localName))\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -153,13 +160,14 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_CAPABILITIES.equals(localName))\n-      _capabilitiesNodes.add(child);\n+      _capabilitiesNodes.add((CapabilitiesNode)child);\n \n     if (ELEMENT_DEVICE.equals(localName))\n-      _deviceNodes.add(child);\n+      _deviceNodes.add((DeviceNode)child);\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -170,23 +178,23 @@ public Object endElement (ParseContext context,\n     CapabilitiesNode[] agents = null;\n     if (_capabilitiesNodes.size() > 0)\n     {\n-      agents = (CapabilitiesNode[]) _capabilitiesNodes.toArray\n+      agents = _capabilitiesNodes.toArray\n               (new CapabilitiesNode[_capabilitiesNodes.size()]);\n     }\n \n     DeviceNode[] devices = null;\n     if (_deviceNodes.size() > 0)\n     {\n-      devices = (DeviceNode[]) _deviceNodes.toArray\n+      devices = _deviceNodes.toArray\n               (new DeviceNode[_deviceNodes.size()]);\n     }\n \n     CapabilitiesDocument document = new CapabilitiesDocument(agents, devices);\n     return document;\n   }\n \n-  private List _capabilitiesNodes = new ArrayList();\n-  private List _deviceNodes = new ArrayList();\n+  private List<CapabilitiesNode> _capabilitiesNodes;\n+  private List<DeviceNode> _deviceNodes;\n \n   static final String __BASE_URL = \"baseURL\";\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java",
                "sha": "4766723ec1342e4e1080ac1cc57d139f4bcb1925",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java",
                "patch": "@@ -33,7 +33,12 @@\n  */\n class CapabilitiesNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  CapabilitiesNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -84,6 +89,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -98,6 +104,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -108,29 +115,30 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_INCLUDE.equals(localName))\n-      _includeNodes.add(child);\n+      _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_agent == null))\n       return null;\n \n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n \n     return new CapabilitiesNode(_id, _isDefault, _agent,\n@@ -143,7 +151,7 @@ public Object endElement (ParseContext context,\n   private boolean _isDefault;\n   private NameVersion _agent;\n   private NameVersion _platform;\n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesNodeParser.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java",
                "sha": "b80dcae526de680ca0f6690913788c00ab8e8ef1",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java",
                "patch": "@@ -45,6 +45,7 @@\n \n   private CapabilityDataDocumentParser()\n   {\n+    _capList = new ArrayList<Object>();\n   }\n \n   static public Object[] parse (URL srcUrl)\n@@ -92,6 +93,7 @@ private CapabilityDataDocumentParser()\n     return new Object[0];\n   }\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -105,6 +107,7 @@ public void startElement (ParseContext context,\n     }\n   }\n \n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -144,6 +147,7 @@ public NodeParser startChildElement(\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -154,7 +158,7 @@ public Object endElement (ParseContext context,\n     return null;\n   }\n \n-  private List _capList = new ArrayList();\n+  private List<Object> _capList;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilityDataDocumentParser.class);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java",
                "sha": "638c645721354c99a373f20f3b0d966f8eb048ec",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java",
                "patch": "@@ -29,7 +29,12 @@\n  */\n class ComponentNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  ComponentNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -46,6 +51,7 @@ public void startElement (ParseContext context,\n \n   }\n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -60,6 +66,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -69,30 +76,31 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _includeNodes.add(child);\n+    _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n     return new DeviceComponentNode(_type, nodesWithRef, nodesWithSrc);    \n   }\n \n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n   private String _type;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java",
                "sha": "9e83a4e4c41bc57be95a6b890c3711c1e204af42",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java",
                "patch": "@@ -47,8 +47,12 @@ public DeviceNode(String id, NameVersion makeModel,\n     return _makeModel.match(makeModel, null);\n   }\n \n+  // -= Simon Lessard =-\n+  // FIXME: _id and _extendsId are never read locally\n+  @SuppressWarnings(\"unused\")\n   private String _id;\n   private NameVersion _makeModel;\n+  @SuppressWarnings(\"unused\")\n   private String _extendsId;\n   private DeviceComponentNode[] _componentNodes;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java",
                "sha": "fdaac152a64bba267775bfb9a45b53fcc0fa404b",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java",
                "patch": "@@ -31,6 +31,12 @@\n  */\n class DeviceNodeParser extends BaseNodeParser implements XMLConstants\n {\n+  DeviceNodeParser()\n+  {\n+    _componentNodes = new ArrayList<DeviceComponentNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -71,6 +77,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -85,6 +92,7 @@ public NodeParser startChildElement(ParseContext context,\n \n   }\n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -94,17 +102,18 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _componentNodes.add(child);\n+    _componentNodes.add((DeviceComponentNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_model == null))\n       return null;\n \n-    DeviceComponentNode[] cNodes = (DeviceComponentNode[])\n+    DeviceComponentNode[] cNodes = \n             _componentNodes.toArray(\n                     new DeviceComponentNode[_componentNodes.size()]);\n     return new DeviceNode(_id, _model, _extendsId, cNodes);\n@@ -114,7 +123,7 @@ public Object endElement (ParseContext context,\n   private String _id;\n   private NameVersion _model;\n   private String _extendsId;\n-  private List _componentNodes = new ArrayList();\n+  private List<DeviceComponentNode> _componentNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DeviceNodeParser.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java",
                "sha": "890d8f7b3d2191acea6731ca5483915a8e5e1fbe",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java",
                "patch": "@@ -30,6 +30,7 @@\n class IncludeNodeParser extends BaseNodeParser implements XMLConstants\n {\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -57,6 +58,7 @@ public void startElement (ParseContext context,\n     _refId = refId;\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java",
                "sha": "e766a1e84102d841fa434b5e2ef4db5e024f1a03",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 21,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java",
                "patch": "@@ -107,7 +107,7 @@ public double match(String name, VersionId version)\n     int i = 0;\n     char ch = data[i];\n \n-    ArrayList entries = new ArrayList(5);\n+    ArrayList<Object[]> entries = new ArrayList<Object[]>(5);\n     VersionEntry vEntry = null;\n     NameEntry head, curr;\n     head = curr = new NameEntry();\n@@ -173,7 +173,9 @@ public double match(String name, VersionId version)\n           }\n           else\n           {\n-            while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            while (!Character.isWhitespace(ch) && (ch != (char) 0x1000000))\n               ch = data[++i];\n           }\n \n@@ -207,7 +209,9 @@ public double match(String name, VersionId version)\n           i++;\n           break;\n         default:\n-          if ((!inQuote) && (Character.isSpace(ch)))\n+          // 2006-08-02: -= Simon Lessard =-\n+          //if ((!inQuote) && (Character.isSpace(ch)))\n+          if ((!inQuote) && (Character.isWhitespace(ch)))\n           {\n             if (start != i)\n             {\n@@ -228,7 +232,9 @@ public double match(String name, VersionId version)\n             }\n             //Skip space\n             ch = data[++i];\n-            while (Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (Character.isSpace(ch))\n+            while (Character.isWhitespace(ch))\n               ch = data[++i];\n             start = i;\n           }\n@@ -280,7 +286,9 @@ private VersionEntry _parseVersion(String value,\n           version = value.substring(0, i);\n           for (++i; i < length; i++)\n           {\n-            if (!Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //if (!Character.isSpace(ch))\n+            if (!Character.isWhitespace(ch))\n               throw new ParseException(\"Unexpected char.\", offset + i);\n           }\n           //if the version string was simpley \"*\" or \"+\"\n@@ -370,15 +378,15 @@ private double _matchVersion(VersionEntry entry,\n \n     if (entry._type == VersionEntry.STAR_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       int matchedParts = 0;\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n         matchedParts++;\n@@ -388,7 +396,7 @@ private double _matchVersion(VersionEntry entry,\n       //parts (sub versions), then it must be .0's\n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n \n@@ -405,16 +413,16 @@ private double _matchVersion(VersionEntry entry,\n     }\n     else if (entry._type == VersionEntry.PLUS_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n         try\n         {\n-          int v1 = Integer.parseInt((String) vIterator1.next());\n-          int v2 = Integer.parseInt((String) vIterator2.next());\n+          int v1 = Integer.parseInt(vIterator1.next());\n+          int v2 = Integer.parseInt(vIterator2.next());\n           if (v1 > v2)\n             return (VERSION_GE_MATCH * (entry._versionId.getVersion() / version.getVersion()));\n           else if (v1 < v2)\n@@ -432,7 +440,7 @@ else if (v1 < v2)\n       {\n         try\n         {\n-          if (Integer.parseInt((String) vIterator2.next()) != 0)\n+          if (Integer.parseInt(vIterator2.next()) != 0)\n             return NO_MATCH;\n         }\n         catch (NumberFormatException npe)\n@@ -446,27 +454,27 @@ else if (v1 < v2)\n     else\n     {\n       //exact match\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n       }\n \n       while (vIterator1.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator1.next()))\n+        if (!\"0\".equals(vIterator1.next()))\n           return NO_MATCH;\n       }\n \n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java",
                "sha": "bfc433175c0679b2e699461a0fa4ce634a61127a",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 5,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java",
                "patch": "@@ -32,6 +32,7 @@ public VersionId(String version)\n     _version = _parseVersion(version);\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _versionString;\n@@ -53,7 +54,7 @@ public double getVersion()\n         char currChar = _versionString.charAt(currIndex);\n         if ((currChar >= '0') && (currChar <= '9'))\n         {\n-          double addValue = (double) (currChar - '0');\n+          double addValue = (currChar - '0');\n           if (hasDecimal)\n           {\n             // handle digits to right of decimal\n@@ -88,7 +89,7 @@ public double getVersion()\n   }\n \n \n-  public Iterator iterator()\n+  public Iterator<String> iterator()\n   {\n     return new VIterator();\n   }\n@@ -112,7 +113,9 @@ private Entry _parseVersion(String value)\n     while (i < length + 1)\n     {\n       //Ignore spaces. TODO: This should happen only for start and end (trim).\n-      while (Character.isSpace(ch))\n+      // 2006-08-02: -= Simon Lessard =-\n+      //while (Character.isSpace(ch))\n+      while (Character.isWhitespace(ch))\n         ch = data[++i];\n \n       switch (ch)\n@@ -151,7 +154,7 @@ private Entry _parseVersion(String value)\n     Entry next;\n   }\n \n-  private class VIterator implements Iterator\n+  private class VIterator implements Iterator<String>\n   {\n     public VIterator()\n     {\n@@ -168,7 +171,7 @@ public boolean hasNext()\n       return (null != _current);\n     }\n \n-    public Object next()\n+    public String next()\n     {\n       String part = _current.text;\n       _current = _current.next;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java",
                "sha": "74ce4437978298c4ad53e8bb2d8d6806a808d649",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java",
                "patch": "@@ -29,6 +29,7 @@ public NavigationHandlerImpl(NavigationHandler delegate)\n     _dialogPrefix = null;\n   }\n \n+  @Override\n   public void handleNavigation(\n     FacesContext context,\n     String       fromAction,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java",
                "sha": "c0e298e70a85bbae4faab71b82e02bd1f4835f6f",
                "status": "modified"
            },
            {
                "additions": 56,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java",
                "changes": 86,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 30,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java",
                "patch": "@@ -169,6 +169,8 @@ static public UIViewRoot restoreViewRoot(\n     return root;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public SerializedView saveSerializedView(FacesContext context)\n   {\n     if (!isSavingStateInClient(context))\n@@ -183,8 +185,8 @@ public SerializedView saveSerializedView(FacesContext context)\n \n     // See if we're going to use the application view cache for\n     // this request\n-    Map applicationViewCache = null;\n-    Map perSessionApplicationViewCache = null;\n+    Map<String, Object> applicationViewCache = null;\n+    Map<String, Object> perSessionApplicationViewCache = null;\n     if (_useApplicationViewCache(context))\n     {\n       // OK, we are: so find the application cache and\n@@ -225,12 +227,14 @@ public SerializedView saveSerializedView(FacesContext context)\n         assert(cache != null);\n \n         // Store bits of the session as subkeys off of the session\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n         // Sadly, we can't save just a SerializedView, because we should\n         // save a serialized object, and SerializedView is a *non*-static\n         // inner class of StateManager\n+        // -= Simon Lessard =-\n+        // FIXME: pageState is never read\n         PageState pageState = new PageState(\n             structure,\n             state,\n@@ -278,12 +282,15 @@ public SerializedView saveSerializedView(FacesContext context)\n     return view;\n   }\n \n+  @Override\n   public void writeState(FacesContext context,\n                          SerializedView state) throws IOException\n   {\n     _delegate.writeState(context, state);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId,\n                                 String renderKitId)\n   {\n@@ -312,8 +319,8 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       // Load from the application cache\n       if (_APPLICATION_CACHE_TOKEN.equals(token))\n       {\n-        Map cache = _getApplicationViewCache(context);\n-        Map perSessionCache =\n+        Map<String, Object> cache = _getApplicationViewCache(context);\n+        Map<String, Object> perSessionCache =\n           _getPerSessionApplicationViewCache(context);\n \n         // Synchronize on the application-level cache.\n@@ -336,10 +343,10 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       }\n       else\n       {\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n-        viewState = (PageState) stateMap.get((String) token);\n+        viewState = (PageState) stateMap.get(token);\n \n         // Make sure that if the view state is present, the cache still\n         // has the token, and vice versa\n@@ -380,7 +387,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n         // newRoot.getChildren().addAll(root.getChildren());\n         // because \"root\"'s child List is being mutated as the List\n         // is traversed.\n-        List temp = new ArrayList(root.getChildCount());\n+        List<UIComponent> temp = new ArrayList<UIComponent>(root.getChildCount());\n         temp.addAll(root.getChildren());\n         newRoot.getChildren().addAll(temp);\n \n@@ -448,6 +455,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n     return null;\n   }\n \n+  @Override\n   public boolean isSavingStateInClient(FacesContext context)\n   {\n     return _delegate.isSavingStateInClient(context);\n@@ -457,22 +465,26 @@ public boolean isSavingStateInClient(FacesContext context)\n   // Protected APIs: we don't want\n   //\n \n+  @Override\n   protected Object getTreeStructureToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected Object getComponentStateToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected UIViewRoot restoreTreeStructure\n     (FacesContext context, String viewId, String renderKitId)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected void restoreComponentState\n     (FacesContext context, UIViewRoot viewRoot, String renderKitId)\n   {\n@@ -530,38 +542,41 @@ private int _getCacheSize(FacesContext context)\n   // @todo Map is a bad structure\n   // @todo a static size is bad\n   //\n-  static private Map _getApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getApplicationViewCache(FacesContext context)\n   {\n     synchronized (_APPLICATION_VIEW_CACHE_LOCK)\n     {\n-      Map appMap = context.getExternalContext().getApplicationMap();\n-      Map cache = (Map) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n+      Map<String, Object> cache = (Map<String, Object>) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n-        cache = new HashMap(128);\n+        cache = new HashMap<String, Object>(128);\n         appMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n \n       return cache;\n     }\n   }\n \n-  static private Map _getPerSessionApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getPerSessionApplicationViewCache(FacesContext context)\n   {\n     ExternalContext external = context.getExternalContext();\n     Object session = external.getSession(true);\n     assert(session != null);\n \n-    Map cache;\n+    Map<String, Object> cache;\n     // Synchronize on the session object to ensure that\n     // we don't ever create two different caches\n     synchronized (session)\n     {\n-      cache = (Map) external.getSessionMap().get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> sessionMap = external.getSessionMap();\n+      cache = (Map<String, Object>) sessionMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n         cache = _createPerSessionApplicationViewCache();\n-        external.getSessionMap().put(_APPLICATION_VIEW_CACHE_KEY, cache);\n+        sessionMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n     }\n \n@@ -572,9 +587,9 @@ static private Map _getPerSessionApplicationViewCache(FacesContext context)\n   // For the per-session mirror of the application view cache,\n   // use an LRU LinkedHashMap to store the latest 16 pages.\n   //\n-  static private Map _createPerSessionApplicationViewCache()\n+  static private Map<String, Object> _createPerSessionApplicationViewCache()\n   {\n-    return new LRUCache(_MAX_PER_SESSION_APPLICATION_SIZE);\n+    return new LRUCache<String, Object>(_MAX_PER_SESSION_APPLICATION_SIZE);\n   }\n \n   static private final int _MAX_PER_SESSION_APPLICATION_SIZE = 16;\n@@ -648,34 +663,43 @@ static private ResponseStateManager _getResponseStateManager(\n     return kit.getResponseStateManager();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _removeTransientComponents(\n     UIComponent root)\n   {\n-    List components = new ArrayList();\n+    List<UIComponent> components = new ArrayList<UIComponent>();\n     _gatherTransientComponents(root, components);\n-    Iterator iter = components.iterator();\n+    Iterator<UIComponent> iter = components.iterator();\n     while (iter.hasNext())\n     {\n-      UIComponent kid = (UIComponent) iter.next();\n+      UIComponent kid = iter.next();\n       UIComponent parent = kid.getParent();\n       // First, see if its a child\n       if (parent.getChildCount() > 0)\n       {\n-        List children = parent.getChildren();\n+        List<UIComponent> children = parent.getChildren();\n         if (children.remove(kid))\n         {\n           continue;\n         }\n       }\n \n       // Nope, guess it's a facet\n-      Iterator facetNames = parent.getFacets().keySet().iterator();\n-      while (facetNames.hasNext())\n+      // 2006-08-02: -= Simon Lessard\n+      //             Not 1.5 structure and inefficient loop\n+      //             values() is more efficient as you don't have \n+      //             to do a second lookup for the value.\n+      Map<String, UIComponent> facets = parent.getFacets();\n+      for(Iterator<UIComponent> facetIter = facets.values().iterator(); \n+          facetIter.hasNext();)\n       {\n-        String name = (String) facetNames.next();\n-        if (parent.getFacet(name) == kid)\n+        if(facetIter.next() == kid)\n         {\n-          parent.getFacets().remove(name);\n+          facetIter.remove();\n+          // FIXME: -= Simon Lessard\n+          //        Is that continue need to labeled to go all the way up to \n+          //        the first while? Currently it won't cause any problem, but \n+          //        it's a performance loss.\n           continue;\n         }\n       }\n@@ -686,13 +710,14 @@ static private void _removeTransientComponents(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _gatherTransientComponents(\n-    UIComponent component, List componentsToRemove)\n+    UIComponent component, List<UIComponent> componentsToRemove)\n   {\n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n     {\n-      UIComponent kid = (UIComponent) kids.next();\n+      UIComponent kid = kids.next();\n       // UIXComponentBase doesn't mind transient components\n       // in its saved state, so don't bother with this.\n       if (!(component instanceof UIXComponentBase) &&\n@@ -715,6 +740,7 @@ private SerializedView _getCachedSerializedView(\n                  getRequestMap().get(_CACHED_SERIALIZED_VIEW);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _saveCachedSerializedView(\n     FacesContext context, SerializedView state)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java",
                "sha": "792d9b2277e7fef51b17c0db85ac3fc448c709aa",
                "status": "modified"
            },
            {
                "additions": 44,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 22,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java",
                "patch": "@@ -35,6 +35,22 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+//     Why using an ArrayList as a map again? It is not type-safe.\n+//     Using an object to store the key/value seems like a decent\n+//     compromise memory wise. Or better, I would suggest a TreeMap \n+//     to lower the complexity to O(log(n)) instead of O(n) at \n+//     minimal memory cost. If balancing is still considered too \n+//     expensive and an additional class is not wanted, then parallel\n+//     lists would also do the trick\n+// =-=Adam Winer =-=\n+//   To answer the question:  the explicit intent of this\n+//   class is entirely to produce an optimal, minimally-sized\n+//   structure for state saving.  Everything is iterated through\n+//   straight away.  Type-safety is nearly irrelevant (it's\n+//   one, self-encapsulated structure, with no relevant external API);\n+//   everything is iterated through directly (there is no O(log n) anything)\n+//   relevant.  Of overriding importance here is size and efficiency.\n final class Structure implements Externalizable\n {\n   /**\n@@ -59,33 +75,34 @@ public Structure(UIComponent component)\n   /**\n    * Re-create a component from a structure object\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public UIComponent createComponent()\n     throws ClassNotFoundException, InstantiationException,\n            IllegalAccessException\n   {\n-    Class clazz = ClassLoaderUtils.loadClass(_class);\n+    Class<?> clazz = ClassLoaderUtils.loadClass(_class);\n     UIComponent component = (UIComponent) clazz.newInstance();\n     if (_id != null)\n       component.setId(_id);\n     // Create any facets\n     if (_facets != null)\n     {\n-      Map facets = component.getFacets();\n+      Map<String, UIComponent> facets = component.getFacets();\n       for (int i = 0 ; i < _facets.size(); i += 2)\n       {\n         UIComponent facet = ((Structure) _facets.get(i + 1)).\n                                  createComponent();\n-        facets.put(_facets.get(i), facet);\n+        facets.put((String)_facets.get(i), facet);\n       }\n     }\n \n     // Create any children\n     if (_children != null)\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       for (int i = 0 ; i < _children.size(); i++)\n       {\n-        UIComponent child = ((Structure) _children.get(i)).createComponent();\n+        UIComponent child = _children.get(i).createComponent();\n         children.add(child);\n       }\n     }\n@@ -121,9 +138,14 @@ public void writeExternal(ObjectOutput out) throws IOException\n     else\n     {\n       out.writeShort(_children.size());\n+      \n+      // 2006-08-02: -= Simon Lessard =-\n+      //             get(index) is inefficient if the List ever\n+      //             become something else than ArrayList\n+      // =-=Adam Winer=-=:  yep, so we won't change it to be something else.\n       for (int i = 0; i < _children.size(); i++)\n       {\n-        ((Structure) _children.get(i)).writeExternal(out);\n+        _children.get(i).writeExternal(out);\n       }\n     }\n   }\n@@ -138,7 +160,7 @@ public void readExternal(ObjectInput in)\n     short facetCount = in.readShort();\n     if (facetCount > 0)\n     {\n-      _facets = new ArrayList(facetCount);\n+      _facets = new ArrayList<Object>(facetCount);\n       for (int i = 0; i < facetCount; i += 2)\n       {\n         _facets.add(in.readObject());\n@@ -152,7 +174,7 @@ public void readExternal(ObjectInput in)\n     short childCount = in.readShort();\n     if (childCount > 0)\n     {\n-      _children = new ArrayList(childCount);\n+      _children = new ArrayList<Structure>(childCount);\n       for (int i = 0; i < childCount; i++)\n       {\n         Structure newStruct = new Structure();\n@@ -165,18 +187,17 @@ public void readExternal(ObjectInput in)\n   /**\n    * Store the structure of all the children.\n    */\n-  private List _getChildren(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Structure> _getChildren(UIComponent component)\n   {\n     if (component.getChildCount() == 0)\n       return null;\n \n-    List children = component.getChildren();\n-    ArrayList list = new ArrayList(children.size());\n+    List<UIComponent> children = component.getChildren();\n+    ArrayList<Structure> list = new ArrayList<Structure>(children.size());\n \n-    Iterator childIterator = children.iterator();\n-    while (childIterator.hasNext())\n+    for(UIComponent child : children)\n     {\n-      UIComponent child = (UIComponent) childIterator.next();\n       if ((child != null) && !child.isTransient())\n       {\n         list.add(new Structure(child));\n@@ -193,9 +214,10 @@ private List _getChildren(UIComponent component)\n   /**\n    * Store the structure of all the facets.\n    */\n-  private List _getFacets(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Object> _getFacets(UIComponent component)\n   {\n-    Iterator facetNames;\n+    Iterator<String> facetNames;\n     if (component instanceof UIXComponentBase)\n     {\n       facetNames = ((UIXComponentBase) component).getFacetNames();\n@@ -208,12 +230,12 @@ private List _getFacets(UIComponent component)\n     if (!facetNames.hasNext())\n       return null;\n \n-    Map facets = component.getFacets();\n-    ArrayList list = new ArrayList(facets.size() * 2);\n+    Map<String, UIComponent> facets = component.getFacets();\n+    ArrayList<Object> list = new ArrayList<Object>(facets.size() * 2);\n     while (facetNames.hasNext())\n     {\n-      Object name = facetNames.next();\n-      UIComponent facet = (UIComponent) facets.get(name);\n+      String name = facetNames.next();\n+      UIComponent facet = facets.get(name);\n       if ((facet != null) && !facet.isTransient())\n       {\n         list.add(name);\n@@ -245,8 +267,8 @@ static private String _unabbreviateClass(String clazz)\n \n   private String _class;\n   private String _id;\n-  private List _facets;\n-  private List _children;\n+  private List<Object> _facets;\n+  private List<Structure> _children;\n \n \n   static private final String _COMMON_CLASS_PREFIX =",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java",
                "sha": "b12c244bdd4c29cc0b6843785e67240ef9fe3064",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 13,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java",
                "patch": "@@ -64,20 +64,23 @@ public ViewHandlerImpl(\n     ViewHandler delegate)\n   {\n     _delegate = delegate;\n-    _timestamps = new HashMap();\n+    _timestamps = new HashMap<String, Long>();\n     _loadInternalViews();\n   }\n \n+  @Override\n   public Locale calculateLocale(FacesContext context)\n   {\n     return _delegate.calculateLocale(context);\n   }\n \n+  @Override\n   public String calculateRenderKitId(FacesContext context)\n   {\n     return _delegate.calculateRenderKitId(context);\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     _initIfNeeded(context);\n@@ -98,7 +101,7 @@ else if (_checkTimestamp(context))\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long) _timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -116,6 +119,7 @@ else if (_checkTimestamp(context))\n     return _delegate.createView(context, viewId);\n   }\n \n+  @Override\n   public String getActionURL(FacesContext context, String viewId)\n   {\n     String actionURL = _delegate.getActionURL(context, viewId);\n@@ -130,6 +134,7 @@ public String getActionURL(FacesContext context, String viewId)\n     return actionURL;\n   }\n \n+  @Override\n   public String getResourceURL(\n     FacesContext context,\n     String       path)\n@@ -138,6 +143,7 @@ public String getResourceURL(\n   }\n \n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -181,6 +187,7 @@ public void renderView(\n     }\n   }\n \n+  @Override\n   public UIViewRoot restoreView(\n     FacesContext context,\n     String       viewId)\n@@ -216,7 +223,7 @@ public UIViewRoot restoreView(\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long)_timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -261,6 +268,7 @@ else if ((ts == null) ||\n     return result;\n   }\n \n+  @Override\n   public void writeState(\n     FacesContext context) throws IOException\n   {\n@@ -294,10 +302,10 @@ synchronized private void _initIfNeeded(FacesContext context)\n         try\n         {\n           ClassLoader loader = Thread.currentThread().getContextClassLoader();\n-          Class c = loader.loadClass(alternateViewHandler);\n+          Class<?> c = loader.loadClass(alternateViewHandler);\n           try\n           {\n-            Constructor constructor = c.getConstructor(\n+            Constructor<?> constructor = c.getConstructor(\n                new Class[]{ViewHandler.class});\n             viewHandlerInstance =\n                (ViewHandler) constructor.newInstance(new Object[]{_delegate});\n@@ -393,16 +401,16 @@ private Long _getLastModified(URL url) throws IOException\n   //\n   private void _loadInternalViews()\n   {\n-    _internalViews = new HashMap();\n-    List<URL> list = new ArrayList();\n+    _internalViews = new HashMap<String, InternalView>();\n+    List<URL> list = new ArrayList<URL>();\n     ClassLoader loader = _getClassLoader();\n     try\n     {\n-      Enumeration en = loader.getResources(\n+      Enumeration<URL> en = loader.getResources(\n                \"META-INF/org.apache.myfaces.trinidad.render.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n       // And, for some temporary backwards compatibility, also load\n@@ -411,7 +419,7 @@ private void _loadInternalViews()\n                \"META-INF/org.apache.myfaces.trinidad.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n \n@@ -432,11 +440,11 @@ private void _loadInternalViews()\n         _LOG.fine(\"Loading internal views from {0}\",  url);\n         properties.load(url.openStream());\n \n-        for (Map.Entry entry : properties.entrySet())\n+        for (Map.Entry<Object, Object> entry : properties.entrySet())\n         {\n           String name = (String) entry.getKey();\n           String className = (String) entry.getValue();\n-          Class clazz = loader.loadClass(className);\n+          Class<?> clazz = loader.loadClass(className);\n           InternalView view = (InternalView) clazz.newInstance();\n           _internalViews.put(name, view);\n         }\n@@ -472,7 +480,7 @@ static private ClassLoader _getClassLoader()\n   private Boolean           _checkTimestamp;\n   // Mostly final, but see _initIfNeeded()\n   private ViewHandler       _delegate;\n-  private final Map         _timestamps;\n+  private final Map<String, Long> _timestamps;\n   private boolean           _inited;\n   private Map<String, InternalView> _internalViews;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java",
                "sha": "84fd93afcb405dc2a7e7f58d95226fcfaaf95a70",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java",
                "patch": "@@ -24,6 +24,7 @@ public UIXEditableFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public void setProperty(PropertyKey key, Object value)\n   {\n     super.setProperty(key, value);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java",
                "sha": "a6a2dea362868eec7eae6ba2f5ab5c030c740c5d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java",
                "patch": "@@ -25,6 +25,7 @@ public UIXFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return _type;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java",
                "sha": "4b8b5b33d263bc30c941f4fdab907550da062e38",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java",
                "patch": "@@ -42,6 +42,7 @@ public AccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return new Character(text.charAt(accessKeyIndex + 1));\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return Character.class;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java",
                "sha": "08015b50515ba443c6e8aed8daca8c0334ea2fe1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java",
                "patch": "@@ -42,6 +42,7 @@ public StripAccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return StringUtils.stripMnemonic(text);\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return String.class;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java",
                "sha": "f0f095cb19c5de2057c356f397bae45e61ae000b",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java",
                "patch": "@@ -36,22 +36,26 @@ protected ValueBindingAdapter(ValueBinding base)\n     _base = base;\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     return _base.getValue(context);\n   }\n \n+  @Override\n   public void setValue(FacesContext context, Object value)\n   {\n     throw new PropertyNotFoundException(\"Can't set value\");\n   }\n   \n+  @Override\n   public boolean isReadOnly(FacesContext context)\n   {\n     return true;\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return _base.getType(context);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java",
                "sha": "0de21d7b24551471cb01bdcd283e64005095ee15",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 17,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java",
                "patch": "@@ -57,6 +57,7 @@\n    * @todo =-=pu : Maybe we need to allow adding Changes for specific viewId's -\n    *  BIBeans req. - external customizer dialog\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -94,6 +95,7 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addDocumentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -140,22 +142,23 @@ private void _addDocumentChangeImpl(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(\n     FacesContext facesContext,\n     UIComponent uiComponent)\n   {\n     if (uiComponent == null)\n       return null;\n \n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n       return null;\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n-    List changesList = (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changesList = componentToChangesMap.get(uniqueIdForComponent);\n     if (changesList == null)\n       return null;\n \n@@ -165,10 +168,11 @@ public Iterator getComponentChanges(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n@@ -187,7 +191,7 @@ public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected abstract Map getComponentToChangesMapForView(\n+  protected abstract Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary);\n@@ -203,18 +207,18 @@ private void _addComponentChangeImpl(\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n \n-    Map componentToChangesMap = getComponentToChangesMapForView(facesContext,\n+    Map<String, List<ComponentChange>> componentToChangesMap = getComponentToChangesMapForView(facesContext,\n                                                                 viewId,\n                                                                 true);\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n \n-    List changeListForComponent =\n-      (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changeListForComponent = \n+      componentToChangesMap.get(uniqueIdForComponent);\n \n     if (changeListForComponent == null)\n     {\n-      changeListForComponent = new LinkedList();\n+      changeListForComponent = new LinkedList<ComponentChange>();\n       componentToChangesMap.put(uniqueIdForComponent, changeListForComponent);\n     }\n \n@@ -283,11 +287,11 @@ private Node _getComponentNode(\n   {\n     if (document instanceof DocumentTraversal)\n     {\n-      List idPath = _getIdPath(component);\n+      List<String> idPath = _getIdPath(component);\n \n       if (!idPath.isEmpty())\n       {\n-        Iterator pathIds = idPath.iterator();\n+        Iterator<String> pathIds = idPath.iterator();\n \n         DocumentTraversal traversalFactory = (DocumentTraversal)document;\n         TreeWalker walker = traversalFactory.createTreeWalker(\n@@ -296,9 +300,9 @@ private Node _getComponentNode(\n                                    null,\n                                    true);\n \n-        Node currElement = (Element)walker.getCurrentNode();\n+        Node currElement = walker.getCurrentNode();\n         Node stopElement = walker.getRoot();\n-        String neededID = (String)pathIds.next();\n+        String neededID = pathIds.next();\n \n         do\n         {\n@@ -319,7 +323,7 @@ private Node _getComponentNode(\n                 return currElement;\n \n               // update the id we need\n-              neededID = (String)pathIds.next();\n+              neededID = pathIds.next();\n \n               // don't pop back up to this parent\n               stopElement = currElement;\n@@ -391,15 +395,16 @@ private Node _getNextNode(\n    * @param component\n    * @return\n    */\n-  private List _getIdPath(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<String> _getIdPath(UIComponent component)\n   {\n     String componentID = component.getId();\n \n     // we need an ID\n     if ((componentID == null) || (componentID.length() == 0))\n       return Collections.EMPTY_LIST;\n \n-    LinkedList pathList = new LinkedList();\n+    LinkedList<String> pathList = new LinkedList<String>();\n     pathList.addFirst(componentID);\n \n     UIComponent currAncestor = component.getParent();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java",
                "sha": "3a37b9f56441c2f7886c7be35ccee996a79ed453",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java",
                "patch": "@@ -34,6 +34,7 @@\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -45,7 +46,8 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(FacesContext facesContext,\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(FacesContext facesContext,\n                              UIComponent uiComponent)\n   {\n     return null;\n@@ -54,7 +56,8 @@ public Iterator getComponentChanges(FacesContext facesContext,\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     return null;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java",
                "sha": "a71972d43be8f17a2eb6873e0e41fe33b97ecc64",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java",
                "patch": "@@ -17,10 +17,12 @@\n package org.apache.myfaces.trinidadinternal.change;\n \n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n import javax.faces.context.FacesContext;\n \n+import org.apache.myfaces.trinidad.change.ComponentChange;\n import org.w3c.dom.Document;\n \n /**\n@@ -42,29 +44,32 @@\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected Map getComponentToChangesMapForView(\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  protected Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary)\n   {\n-    Map sessMap = facesContext.getExternalContext().getSessionMap();\n+    Map<String, Object> sessMap = facesContext.getExternalContext().getSessionMap();\n     //pu: Get datastructure #1 described at the end of this file.\n-    Map viewToChangesMap = (Map) sessMap.get(_CHANGE_KEY);\n+    Map<String, Map<String, List<ComponentChange>>> viewToChangesMap = \n+      (Map<String, Map<String, List<ComponentChange>>>)sessMap.get(_CHANGE_KEY);\n     if (viewToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      viewToChangesMap = new HashMap();\n+      viewToChangesMap = new HashMap<String, Map<String, List<ComponentChange>>>();\n       sessMap.put(_CHANGE_KEY, viewToChangesMap);\n     }\n     \n     //pu: Get datastructure #2 described at the end of this file.\n-    Map componentToChangesMap = (Map) viewToChangesMap.get(viewId);\n+    Map<String, List<ComponentChange>> componentToChangesMap = viewToChangesMap.get(viewId);\n     if (componentToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      componentToChangesMap = new HashMap();\n+      componentToChangesMap = new HashMap<String, List<ComponentChange>>();\n       viewToChangesMap.put(viewId, componentToChangesMap);\n     }\n     return componentToChangesMap;\n@@ -73,6 +78,7 @@ protected Map getComponentToChangesMapForView(\n   /** \n    * We don't support DocumentAspect persistence\n    */\n+  @Override\n   protected Document getDocument(FacesContext context)\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java",
                "sha": "abbb8765171284e354e68f71b4bf0ae91a3a4044",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java",
                "changes": 59,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 21,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java",
                "patch": "@@ -46,17 +46,19 @@ public DialogServiceImpl(RequestContextImpl context)\n     _context = context;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void pushView(UIViewRoot viewRoot)\n   {\n     FacesContext context = _getFacesContext();\n     Object savedOld = StateManagerImpl.saveViewRoot(context, viewRoot);\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n-      list = new ArrayList(1);\n+      list = new ArrayList<Object>(1);\n     else\n     {\n-      List tmp = new ArrayList(list.size() + 1);\n+      List<Object> tmp = new ArrayList<Object>(list.size() + 1);\n       tmp.addAll(list);\n       list = tmp;\n     }\n@@ -67,6 +69,8 @@ public void pushView(UIViewRoot viewRoot)\n     _LOG.fine(\"Pushed view {0}\", viewRoot.getViewId());\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void popView(boolean navigateToPoppedView)\n   {\n     FacesContext context = _getFacesContext();\n@@ -86,7 +90,7 @@ public void popView(boolean navigateToPoppedView)\n     }\n \n     // Make a copy of the List;  never mutate the original list\n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n     {\n       // For starters, this should only happen if we weren't navigating\n@@ -100,18 +104,20 @@ else if (list.size() == 1)\n     }\n     else\n     {\n-      list = new ArrayList(list);\n+      list = new ArrayList<Object>(list);\n       list.remove(list.size() - 1);\n       _getPageFlowScope().put(_PUSHED_VIEWS_KEY, list);\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot peekView()\n   {\n     FacesContext context = _getFacesContext();\n     Object savedRoot = null;\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list != null)\n       savedRoot = list.get(list.size() - 1);\n \n@@ -140,8 +146,10 @@ public UIViewRoot peekView()\n     return null;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean returnFromDialog(Object returnValue,\n-                                  Map returnParameters)\n+                                  Map<Object, Object> returnParameters)\n   {\n     FacesContext context = _getFacesContext();\n     context.getExternalContext().getSessionMap().\n@@ -172,7 +180,7 @@ public boolean returnFromDialog(Object returnValue,\n     // do that;  we'll mark the response as complete, because we'll need\n     // the AdfFacesFilter to re-execute the faces lifecycle with the\n     // new parameters\n-    Map launchParameters = (Map)\n+    Map<Object, Object> launchParameters = (Map<Object, Object>)\n       poppedView.getAttributes().get(RequestContextImpl.LAUNCH_PARAMETERS);\n \n     if (launchParameters != null)\n@@ -181,7 +189,7 @@ public boolean returnFromDialog(Object returnValue,\n       // AdfFacesFilterImpl and ViewHandlerImpl\n       poppedView.getAttributes().remove(RequestContextImpl.LAUNCH_PARAMETERS);\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n       requestMap.put(RequestContextImpl.LAUNCH_PARAMETERS, launchParameters);\n       requestMap.put(RequestContextImpl.LAUNCH_VIEW, poppedView);\n \n@@ -194,12 +202,14 @@ public boolean returnFromDialog(Object returnValue,\n \n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ReturnEvent getReturnEvent(UIComponent source)\n   {\n     FacesContext context = _getFacesContext();\n     if (TrinidadFilterImpl.isExecutingDialogReturn(context))\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, Object> parameterMap = context.getExternalContext().getRequestParameterMap();\n       Object returnParam = parameterMap.get(_RETURN_PARAM);\n       if (returnParam == null)\n         return null;\n@@ -225,11 +235,11 @@ public ReturnEvent getReturnEvent(UIComponent source)\n              remove(_DIALOG_RETURN_KEY);\n \n     Object returnValue = null;\n-    Map    returnParams = null;\n+    Map<Object, Object> returnParams = null;\n     if (o != null)\n     {\n       returnValue = ((Object[]) o)[0];\n-      returnParams = (Map) ((Object[]) o)[1];\n+      returnParams = (Map<Object, Object>)((Object[]) o)[1];\n     }\n \n     ReturnEvent returnEvent =\n@@ -241,6 +251,7 @@ public ReturnEvent getReturnEvent(UIComponent source)\n     return returnEvent;\n   }\n \n+  @Override\n   public void queueLaunchEvent(UIViewRoot viewRoot)\n   {\n     UIComponent source = getCurrentLaunchSource();\n@@ -254,9 +265,10 @@ public void queueLaunchEvent(UIViewRoot viewRoot)\n     }\n   }\n \n+  @Override\n   public void queueReturnEvent(\n     Object returnValue,\n-    Map    returnParams)\n+    Map<Object, Object> returnParams)\n   {\n     UIComponent source = getCurrentLaunchSource();\n     if (source == null)\n@@ -274,15 +286,17 @@ public void queueReturnEvent(\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     if (dialogParameters == null)\n-      dialogParameters = new HashMap();\n+      dialogParameters = new HashMap<String, Object>();\n \n     FacesContext context = _getFacesContext();\n \n@@ -323,7 +337,7 @@ public void launchDialog(\n       // Save the parameters used to launch the dialog so we can\n       // simulate a postback when coming back to the dialog;  and\n       // write in a \"returnId\" with the \"id\" that will be used.\n-      Map savedRequestParameters = new HashMap();\n+      Map<String, Object> savedRequestParameters = new HashMap<String, Object>();\n       savedRequestParameters.putAll(\n             context.getExternalContext().getRequestParameterValuesMap());\n       if (source != null)\n@@ -365,7 +379,8 @@ private FacesContext _getFacesContext()\n     return _context.__getFacesContext();\n   }\n \n-  private Map _getPageFlowScope()\n+  @SuppressWarnings(\"unchecked\")\n+  private Map<String, Object> _getPageFlowScope()\n   {\n     return _context.getPageFlowScope();\n   }\n@@ -374,7 +389,7 @@ static private DialogRenderKitService _getDialogRenderKitService(\n     FacesContext context)\n   {\n     RenderKit rk = context.getRenderKit();\n-    DialogRenderKitService service = (DialogRenderKitService)\n+    DialogRenderKitService service = \n        Service.getService(rk, DialogRenderKitService.class);\n \n     if (service == null)\n@@ -391,15 +406,16 @@ static private DialogRenderKitService _getDialogRenderKitService(\n    * Execute any \"binding\" attributes so that a popped view\n    * is properly set up\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _executeBindings(FacesContext context, UIComponent component)\n   {\n     ValueBinding binding = component.getValueBinding(\"binding\");\n     if (binding != null)\n       binding.setValue(context, component);\n \n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n-      _executeBindings(context, (UIComponent) kids.next());\n+      _executeBindings(context, kids.next());\n   }\n \n   private RequestContextImpl _context;\n@@ -417,6 +433,7 @@ public InternalLaunch(UIComponent source,\n       super(source, viewRoot);\n     }\n \n+    @Override\n     public void launchDialog(boolean useWindow)\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java",
                "sha": "a6533526f9044219cdc3e590fd44a6d4f87f05f8",
                "status": "modified"
            },
            {
                "additions": 46,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java",
                "patch": "@@ -35,175 +35,217 @@\n  */\n abstract public class ExternalContextDecorator extends ExternalContext\n {\n+  @Override\n   public void dispatch(String path) throws IOException\n   {\n     getExternalContext().dispatch(path);\n   }\n \n-\n+  @Override\n   public Object getContext()\n   { \n     return getExternalContext().getContext();\n   }\n   \n+  @Override\n   public Object getRequest()\n   {\n     return getExternalContext().getRequest(); \n   }\n   \n+  @Override\n   public Object getResponse()\n   {\n     return getExternalContext().getResponse();\n   }\n   \n+  @Override\n   public Object getSession(boolean create)\n   {\n     return getExternalContext().getSession(create);\n   }\n   \n+  @Override\n   public String getRequestContextPath()\n   {\n     return getExternalContext().getRequestContextPath();\n   }\n \n+  @Override\n   public String getRequestPathInfo()\n   {\n     return getExternalContext().getRequestPathInfo();\n   }\n \n+  @Override\n   public String getRequestServletPath()\n   {\n     return getExternalContext().getRequestServletPath();\n   }\n \n+  @Override\n   public String getInitParameter(String name)\n   {\n     return getExternalContext().getInitParameter(name);\n   }\n   \n+  @Override\n   public String encodeResourceURL(String url)\n   {\n     return getExternalContext().encodeResourceURL(url);\n   }\n \n+  @Override\n   public String encodeActionURL(String url)\n   {\n     return getExternalContext().encodeActionURL(url);\n   }\n \n+  @Override\n   public String encodeNamespace(String ns)\n   {\n     return getExternalContext().encodeNamespace(ns);\n   }\n \n+  @Override\n   public String getAuthType()\n   {\n     return getExternalContext().getAuthType();\n   }\n \n+  @Override\n   public String getRemoteUser()\n   {\n     return getExternalContext().getRemoteUser();\n   }\n \n+  @Override\n   public Principal getUserPrincipal()\n   {\n     return getExternalContext().getUserPrincipal();\n   }\n \n+  @Override\n   public boolean isUserInRole(String role)\n   {\n     return getExternalContext().isUserInRole(role);\n   }\n \n+  @Override\n   public URL getResource(String path) throws MalformedURLException\n   {\n     return getExternalContext().getResource(path);\n   }\n \n+  @Override\n   public InputStream getResourceAsStream(String path)\n   {\n     return getExternalContext().getResourceAsStream(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Set getResourcePaths(String path)\n   {\n     return getExternalContext().getResourcePaths(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterMap()\n   {\n     return getExternalContext().getRequestParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterValuesMap()\n   {\n     return getExternalContext().getRequestParameterValuesMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestParameterNames()\n   {\n     return getExternalContext().getRequestParameterNames();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestCookieMap()\n   {\n     return getExternalContext().getRequestCookieMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderMap()\n   {\n     return getExternalContext().getRequestHeaderMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderValuesMap()\n   {\n     return getExternalContext().getRequestHeaderValuesMap();\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getInitParameterMap()\n   {\n     return getExternalContext().getInitParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getApplicationMap()\n   {\n     return getExternalContext().getApplicationMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getSessionMap()\n   {\n     return getExternalContext().getSessionMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestMap()\n   {\n     return getExternalContext().getRequestMap();\n   }\n \n-\n+  @Override\n   public Locale getRequestLocale()\n   {\n     return getExternalContext().getRequestLocale();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestLocales()\n   {\n     return getExternalContext().getRequestLocales();\n   }\n \n-\n+  @Override\n   public void log(String message)\n   {\n     getExternalContext().log(message);\n   }\n \n+  @Override\n   public void log(String message, Throwable t)\n   {\n     getExternalContext().log(message, t);\n   }\n \n+  @Override\n   public void redirect(String url) throws IOException\n   {\n     getExternalContext().redirect(url);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java",
                "sha": "6b7c13d9091fac2a4d58da8340bb2e78bf509365",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java",
                "patch": "@@ -48,8 +48,12 @@ public FacesContextFactoryImpl(FacesContextFactory factory)\n     _factory = factory;\n   }\n \n-  public FacesContext getFacesContext(Object context, Object request,\n-                                      Object response, Lifecycle lifecycle)\n+  @Override\n+  public FacesContext getFacesContext(\n+      Object context,\n+      Object request,\n+      Object response, \n+      Lifecycle lifecycle)\n   {\n     return new CacheRenderKit(_factory.getFacesContext(context,\n                                                        request,\n@@ -66,36 +70,46 @@ public CacheRenderKit(FacesContext base)\n       setCurrentInstance(this);\n     }\n \n+    @Override\n     public Application getApplication()\n     {\n       return _base.getApplication();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getClientIdsWithMessages()\n     {\n       return _base.getClientIdsWithMessages();\n     }\n \n+    @Override\n     public ExternalContext getExternalContext()\n     {\n       return _external;\n     }\n \n+    @Override\n     public FacesMessage.Severity getMaximumSeverity()\n     {\n       return _base.getMaximumSeverity();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages()\n     {\n       return _base.getMessages();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages(String clientId)\n     {\n       return _base.getMessages(clientId);\n     }\n \n+    @Override\n     public RenderKit getRenderKit()\n     {\n       if (_kit == null)\n@@ -124,61 +138,73 @@ public RenderKit getRenderKit()\n       return _kit;\n     }\n \n+    @Override\n     public boolean getRenderResponse()\n     {\n       return _base.getRenderResponse();\n     }\n \n+    @Override\n     public boolean getResponseComplete()\n     {\n       return _base.getResponseComplete();\n     }\n \n+    @Override\n     public ResponseStream getResponseStream()\n     {\n       return _base.getResponseStream();\n     }\n \n+    @Override\n     public void setResponseStream(ResponseStream responseStream)\n     {\n       _base.setResponseStream(responseStream);\n     }\n \n+    @Override\n     public ResponseWriter getResponseWriter()\n     {\n       return _base.getResponseWriter();\n     }\n \n+    @Override\n     public void setResponseWriter(ResponseWriter responseWriter)\n     {\n       _base.setResponseWriter(responseWriter);\n     }\n \n+    @Override\n     public UIViewRoot getViewRoot()\n     {\n       return _base.getViewRoot();\n     }\n \n+    @Override\n     public void setViewRoot(UIViewRoot viewRoot)\n     {\n       _base.setViewRoot(viewRoot);\n     }\n \n+    @Override\n     public void addMessage(String clientId, FacesMessage facesMessage)\n     {\n       _base.addMessage(clientId, facesMessage);\n     }\n \n+    @Override\n     public void release()\n     {\n       _base.release();\n     }\n \n+    @Override\n     public void renderResponse()\n     {\n       _base.renderResponse();\n     }\n \n+    @Override\n     public void responseComplete()\n     {\n       _base.responseComplete();\n@@ -197,6 +223,7 @@ public OverrideDispatch(ExternalContext decorated)\n       _decorated = decorated;\n     }\n \n+    @Override\n     public void dispatch(String path) throws IOException\n     {\n       RequestContext afc = RequestContext.getCurrentInstance();\n@@ -209,6 +236,7 @@ public void dispatch(String path) throws IOException\n     }\n \n \n+    @Override\n     protected ExternalContext getExternalContext()\n     {\n       return _decorated;\n@@ -219,6 +247,9 @@ protected ExternalContext getExternalContext()\n \n   private final FacesContextFactory _factory;\n \n+  // 2006-08-02; -= Simon Lessard =-\n+  // There's nothing logged in this class at this time.\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(FacesContextFactoryImpl.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java",
                "sha": "71f30ad14fc96115dcf11e23f398e941d29c7411",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 16,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java",
                "patch": "@@ -34,7 +34,7 @@\n  *\n  * @author The Oracle ADF Faces Team\n  */\n-class PageFlowScopeMap implements Map, Serializable\n+class PageFlowScopeMap implements Map<String, Object>, Serializable\n {\n   /**\n    * Return a PageFlowScopeMap stored with a token.\n@@ -87,7 +87,7 @@ static private PageFlowScopeMap _getPageFlowScopeMap(\n       childToken = token.substring(lastSeparator + 1);\n     }\n \n-    Map storeMap = _createMapToStore(context, parentToken);\n+    Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n     return (PageFlowScopeMap) storeMap.get(childToken);\n   }\n \n@@ -101,11 +101,11 @@ public PageFlowScopeMap()\n \n   public PageFlowScopeMap(int lifetime)\n   {\n-    this(new HashMap(13), null, new SharedData(lifetime));\n+    this(new HashMap<String, Object>(13), null, new SharedData(lifetime));\n   }\n \n   private PageFlowScopeMap(\n-    HashMap map,\n+    HashMap<String, Object> map,\n     String token,\n     SharedData sharedData)\n   {\n@@ -124,7 +124,7 @@ private PageFlowScopeMap(PageFlowScopeMap parent, boolean copyParent)\n     _sharedData = new SharedData(parent._sharedData._lifetime);\n     _sharedData._parent = parent;\n \n-    _map = new HashMap();\n+    _map = new HashMap<String, Object>();\n     if (copyParent)\n       _map.putAll(parent._map);\n   }\n@@ -160,7 +160,7 @@ synchronized public String getToken(FacesContext context)\n       cache = _getRootTokenCache(context, _sharedData._lifetime);\n     }\n \n-    Map store = _createMapToStore(context, parentToken);\n+    Map<String, Object> store = _createMapToStore(context, parentToken);\n \n     String token = cache.addNewEntry(this, store);\n \n@@ -181,7 +181,8 @@ synchronized public String getToken(FacesContext context)\n     return _token;\n   }\n \n-  static private Map _createMapToStore(\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _createMapToStore(\n     FacesContext context,\n     String       parentToken)\n   {\n@@ -201,6 +202,7 @@ static private Map _createMapToStore(\n                          fullToken);\n   }\n \n+  @Override\n   public boolean equals(Object o)\n   {\n     if (o instanceof PageFlowScopeMap)\n@@ -209,6 +211,7 @@ public boolean equals(Object o)\n     return _map.equals(o);\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _map.hashCode();\n@@ -234,22 +237,22 @@ public boolean containsValue(Object value)\n     return _map.containsValue(value);\n   }\n \n-  public Collection values()\n+  public Collection<Object> values()\n   {\n     // Use an unmodifiableCollection to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableCollection(_map.values());\n   }\n \n \n-  public Set entrySet()\n+  public Set<Map.Entry<String, Object>> entrySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableSet(_map.entrySet());\n   }\n \n-  public Set keySet()\n+  public Set<String> keySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n@@ -261,7 +264,7 @@ public Object get(Object key)\n     return _map.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public Object put(String key, Object value)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -283,7 +286,7 @@ public Object remove(Object key)\n     return _map.remove(key);\n   }\n \n-  public void putAll(Map t)\n+  public void putAll(Map<? extends String, ? extends Object> t)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -332,7 +335,7 @@ public void discard()\n     // Remove ourselves\n     if (_sharedData._parent != null)\n     {\n-      Map storeMap = _createMapToStore(context, parentToken);\n+      Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n       _sharedData._parent._sharedData._children.removeOldEntry(childToken,\n                                                                storeMap);\n     }\n@@ -347,11 +350,12 @@ private void _removeAllChildren(FacesContext context, String token)\n     // this will in fact automatically recurse through all children\n     // grandchildren etc. - which is kind of a design flaw of SubKeyMap,\n     // but one we're relying on\n-    Map store = _createMapToStore(context, token);\n+    Map<String, Object> store = _createMapToStore(context, token);\n     store.clear();\n     _sharedData._children = null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"PageFlowScopeMap@\" + System.identityHashCode(this) +\n@@ -383,11 +387,12 @@ private TokenCache _getTokenCache()\n   // repeatedly during Render Response *without further\n   // mutations*.  Both of these assumptions seem very\n   // dubious!\n+  @SuppressWarnings(\"unchecked\")\n   private void _detachIfNeeded()\n   {\n     if (_token != null)\n     {\n-      _map = (HashMap) _map.clone();\n+      _map = (HashMap<String, Object>) _map.clone();\n       _token = null;\n \n       // =-=AEW When do we discard children?\n@@ -416,7 +421,7 @@ public SharedData(int lifetime)\n \n   private SharedData _sharedData;\n   private String     _token;\n-  private HashMap    _map;\n+  private HashMap<String, Object> _map;\n \n   static private final String _PAGE_FLOW_SCOPE_CACHE =\n     \"org.apache.myfaces.trinidadinternal.application.PageFlowScope\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java",
                "sha": "13cda3324c609742c7f9b228df6e69aaf2439424",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java",
                "patch": "@@ -38,7 +38,8 @@ private PageFlowScopeProviderImpl()\n   {\n   }\n \n-  public Map getPageFlowScope(FacesContext context)\n+  @Override\n+  public Map<String, Object> getPageFlowScope(FacesContext context)\n   {\n     PageFlowScopeMap pageFlowScope = _getPageFlowScope(context);\n     if (pageFlowScope == null)\n@@ -68,7 +69,8 @@ public Map getPageFlowScope(FacesContext context)\n     return pageFlowScope;\n   }\n \n-  public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n+  @Override\n+  public Map<String, Object> pushPageFlowScope(FacesContext context, boolean copyParent)\n   {\n     PageFlowScopeMap oldPageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n     if (oldPageFlowScope.getToken(context) != null)\n@@ -86,7 +88,8 @@ public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n     return oldPageFlowScope;\n   }\n \n-  public Map popPageFlowScope(FacesContext context, boolean discardScope)\n+  @Override\n+  public Map<String, Object> popPageFlowScope(FacesContext context, boolean discardScope)\n   {\n     PageFlowScopeMap oldPageFlowScope = _getPageFlowScope(context);\n \n@@ -103,6 +106,7 @@ public Map popPageFlowScope(FacesContext context, boolean discardScope)\n     return oldPageFlowScope;\n   }\n \n+  @Override\n   public String encodeCurrentPageFlowScopeURL(FacesContext context, String url)\n   {\n     PageFlowScopeMap pageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n@@ -137,6 +141,7 @@ static private PageFlowScopeMap _getPageFlowScope(FacesContext context)\n   // Store the page flow scope\n   // =-=AEW MAKE THIS PRIVATE WHNE OBSOLETE DIALOGSERVICE METHODS\n   // ARE REMOVED\n+  @SuppressWarnings(\"unchecked\")\n   static void __setPageFlowScope(FacesContext context,\n                                  PageFlowScopeMap pageFlowScope)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java",
                "sha": "0c31f4a3749020e37f0a96bba6feb2d111acfe57",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java",
                "patch": "@@ -37,6 +37,7 @@ private PageResolverDefaultImpl()\n    * @param viewId {@inheritDoc}\n    * @return {@inheritDoc}\n    */\n+  @Override\n   public String getPhysicalURI(String viewId)\n   {\n     return viewId;\n@@ -45,6 +46,7 @@ public String getPhysicalURI(String viewId)\n   /**\n    * Encodes an action URI.\n    */\n+  @Override\n   public String encodeActionURI(String actionURI)\n   {\n     return actionURI;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java",
                "sha": "6e56f68a846d93b6257d31c92e7fbab5215a26af",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java",
                "patch": "@@ -64,6 +64,7 @@\n     TYPE.lock();\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return TYPE;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java",
                "sha": "d600986a7eac2490944164494e6fc89030cd2029",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java",
                "patch": "@@ -37,6 +37,7 @@ public RequestContextFactoryImpl()\n   {\n   }\n \n+  @Override\n   public RequestContext createContext(Object context,\n                                        Object request)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java",
                "sha": "ad91a3f4033bf8d3d124eb32cad07bb919d2f9a7",
                "status": "modified"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java",
                "changes": 91,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 30,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java",
                "patch": "@@ -15,10 +15,11 @@\n  */\n package org.apache.myfaces.trinidadinternal.context;\n \n-\n+import java.awt.Color;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n@@ -82,6 +83,7 @@ public RequestContextImpl(RequestContextBean bean)\n   {\n     _bean = bean;\n     _dialogService = new DialogServiceImpl(this);\n+    _partialTargets = new HashSet<String>();\n   }\n \n   public void init(Object request)\n@@ -90,28 +92,33 @@ public void init(Object request)\n   }\n \n \n+  @Override\n   public DialogService getDialogService()\n   {\n     return _dialogService;\n   }\n \n+  @Override\n   public PageResolver getPageResolver()\n   {\n     return _pageResolver;\n   }\n \n+  @Override\n   public PageFlowScopeProvider getPageFlowScopeProvider()\n   {\n     return _pageFlowScopeProvider;\n   }\n \n-  public Map getPageFlowScope()\n+  @Override\n+  public Map<String, Object> getPageFlowScope()\n   {\n     return _pageFlowScopeProvider.getPageFlowScope(__getFacesContext());\n   }\n \n \n-  public void returnFromDialog(Object returnValue, Map returnParameters)\n+  @Override\n+  public void returnFromDialog(Object returnValue, Map<Object, Object> returnParameters)\n   {\n     boolean dialogIsInaccessible =\n       _dialogService.returnFromDialog(returnValue, returnParameters);\n@@ -125,12 +132,13 @@ public void returnFromDialog(Object returnValue, Map returnParameters)\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     _pageFlowScopeProvider.pushPageFlowScope(__getFacesContext(),\n                                              true);\n@@ -141,13 +149,15 @@ public void launchDialog(\n                                 windowProperties);\n   }\n \n+  @Override\n   public UploadedFileProcessor getUploadedFileProcessor()\n   {\n     return (UploadedFileProcessor)\n       _bean.getProperty(RequestContextBean.UPLOADED_FILE_PROCESSOR_KEY);\n   }\n \n \n+  @Override\n   public boolean isPostback()\n   {\n     FacesContext context = __getFacesContext();\n@@ -175,38 +185,44 @@ public boolean isPostback()\n     return true;\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean isPartialRequest(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n     if (Boolean.TRUE.equals(requestMap.get(XhtmlConstants.PARTIAL_PARAM)))\n       return true;\n     \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, Object> parameters = context.getExternalContext().getRequestParameterMap();\n     if (\"true\".equals(parameters.get(\"partial\")))\n       return true;\n \n     return false;\n   }\n \n \n+  @Override\n   public boolean isDebugOutput()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.DEBUG_OUTPUT_KEY));\n   }\n \n+  @Override\n   public boolean isClientValidationDisabled()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.CLIENT_VALIDATION_DISABLED_KEY));\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.OUTPUT_MODE_KEY);\n   }\n \n   // get skinFamily; default to minimal if nothing is specified.\n+  @Override\n   public String getSkinFamily()\n   {\n     String skinFamily =\n@@ -216,6 +232,7 @@ public String getSkinFamily()\n     return skinFamily;\n   }\n \n+  @Override\n   public String getAccessibilityMode()\n   {\n     String s = (String) _bean.getProperty(\n@@ -233,6 +250,7 @@ public String getAccessibilityMode()\n     return null;\n   }\n \n+  @Override\n   public char getNumberGroupingSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -243,6 +261,7 @@ public char getNumberGroupingSeparator()\n     return (char) 0;\n   }\n \n+  @Override\n   public char getDecimalSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -254,6 +273,7 @@ public char getDecimalSeparator()\n   }\n \n \n+  @Override\n   public TimeZone getTimeZone()\n   {\n     TimeZone tz = (TimeZone) _bean.getProperty(RequestContextBean.TIME_ZONE_KEY);\n@@ -277,10 +297,12 @@ public TimeZone getTimeZone()\n   /**\n    * {@inheritDoc}\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ChangeManager getChangeManager()\n   {\n     FacesContext context = __getFacesContext();\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     ChangeManager changeManager = (ChangeManager)appMap.get(_CHANGE_MANAGER_KEY);\n \n     if (changeManager == null)\n@@ -325,7 +347,7 @@ private ChangeManager _createChangeManager(\n   {\n     try\n     {\n-      Class managerClass = ClassLoaderUtils.loadClass(className);\n+      Class<?> managerClass = ClassLoaderUtils.loadClass(className);\n       return (ChangeManager)managerClass.newInstance();\n     }\n     catch (Throwable throwable)\n@@ -337,23 +359,27 @@ private ChangeManager _createChangeManager(\n   }\n \n \n+  @Override\n   public RegionManager getRegionManager()\n   {\n     FacesContext context = __getFacesContext();\n     return RegionMetadata.getRegionMetadata(context);\n   }\n \n+  @Override\n   public String getCurrencyCode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.CURRENCY_CODE_KEY);\n   }\n \n+  @Override\n   public String getOracleHelpServletUrl()\n   {\n     return (String) _bean.getProperty(\n      RequestContextBean.ORACLE_HELP_SERVLET_URL_KEY);\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     Boolean b = (Boolean) _bean.getProperty(RequestContextBean.RIGHT_TO_LEFT_KEY);\n@@ -372,7 +398,8 @@ public boolean isRightToLeft()\n   }\n \n \n-  public Map getHelpTopic()\n+  @Override\n+  public Map<String, Object> getHelpTopic()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -381,7 +408,8 @@ public Map getHelpTopic()\n     return provider.getHelpTopicMap();\n   }\n \n-  public Map getHelpSystem()\n+  @Override\n+  public Map<String, Object> getHelpSystem()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -394,6 +422,7 @@ public Map getHelpSystem()\n   // Partial Page Rendering support\n   //\n \n+  @Override\n   public void addPartialTarget(UIComponent newTarget)\n   {\n     FacesContext fContext = __getFacesContext();\n@@ -437,38 +466,38 @@ public void addPartialTarget(UIComponent newTarget)\n     }\n   }\n \n+  @Override\n   public void addPartialTriggerListeners\n     (UIComponent listener,\n      String[] triggers)\n   {\n     if ((listener == null) || (triggers == null))\n       return;\n \n-    Map pl = _getPartialListeners();\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n \n     for (int i = 0; i < triggers.length; i++)\n     {\n       String trigger = triggers[i];\n \n-      Object master;\n-\n       // Wildcards removed for now....\n       // if (\"*\".equals(trigger))\n       //   master = _GLOBAL_TRIGGER;\n       // else\n-      master = listener.getParent().findComponent(trigger);\n+      UIComponent master = listener.getParent().findComponent(trigger);\n \n       // Get the set of listeners on this trigger and add this component.\n-      Set listeners = (Set) pl.get(master);\n+      Set<UIComponent> listeners = pl.get(master);\n       if (listeners == null)\n       {\n-        listeners = new HashSet();\n+        listeners = new HashSet<UIComponent>();\n         pl.put(master, listeners);\n       }\n       listeners.add(listener);\n     }\n   }\n \n+  @Override\n   public void partialUpdateNotify(UIComponent updated)\n   {\n     if (updated != null)\n@@ -487,7 +516,7 @@ public void partialUpdateNotify(UIComponent updated)\n   /**\n    * Get the clientIds of all components that have requested partial update\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _partialTargets.iterator();\n   }\n@@ -497,21 +526,24 @@ public Iterator getPartialTargets()\n    * is listening on this component, it will add itself to the partialTargets\n    * list).\n    */\n-  public Set getPartialUpdates()\n+  public Set<String> getPartialUpdates()\n   {\n     return _partialTargets;\n   }\n \n-  public Map getColorPalette()\n+  @Override\n+  public Map<String, List<Color>> getColorPalette()\n   {\n     return ColorPaletteUtils.getColorPaletteMap();\n   }\n \n-  public Map getFormatter()\n+  @Override\n+  public Map<Object, Map<Object,String>> getFormatter()\n   {\n     return FormatterMap.sharedInstance();\n   }\n \n+  @Override\n   public int getTwoDigitYearStart()\n   {\n     Integer twoDigitYearStart  = (Integer) _bean.getProperty(\n@@ -523,6 +555,7 @@ public int getTwoDigitYearStart()\n     return 1950;\n   }\n \n+  @Override\n   public Agent getAgent()\n   {\n     if (_agent == null)\n@@ -559,17 +592,15 @@ int __getPageFlowScopeLifetime()\n \n   private void _addTargets(Object key)\n   {\n-    Map pl = _getPartialListeners();\n-    Set listeners = (Set) pl.get(key);\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n+    Set<UIComponent> listeners = pl.get(key);\n     if (listeners != null)\n     {\n       // protect from infinite recursion\n       pl.remove(key);\n \n-      Iterator iter = listeners.iterator();\n-      while (iter.hasNext())\n+      for(UIComponent listener : listeners)\n       {\n-        UIComponent listener = (UIComponent) iter.next();\n         addPartialTarget(listener);\n         // This target will be re-rendered, re-render anything that's\n         // listening on it also.\n@@ -630,19 +661,19 @@ private UIXCookie _getUIXCookie()\n     return null;\n   }\n \n-  private Map _getPartialListeners()\n+  private Map<UIComponent, Set<UIComponent>> _getPartialListeners()\n   {\n     if (_partialListeners == null)\n-      _partialListeners = new HashMap();\n+      _partialListeners = new HashMap<UIComponent, Set<UIComponent>>();\n \n     return _partialListeners;\n   }\n \n \n   private RequestContextBean _bean;\n   private HelpProvider        _provider;\n-  private Map                 _partialListeners;\n-  private Set                 _partialTargets = new HashSet();\n+  private Map<UIComponent, Set<UIComponent>> _partialListeners;\n+  private Set<String>         _partialTargets;\n   private Agent               _agent;\n \n   private DialogServiceImpl   _dialogService;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java",
                "sha": "31a54e02f67926b5252c4ad046622375b998541e",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java",
                "patch": "@@ -58,6 +58,7 @@ static public void markPostback(FacesContext context)\n     context.getExternalContext().getRequestMap().remove(_POSTBACK_KEY);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void afterPhase(PhaseEvent event)\n   {\n     if (event.getPhaseId() == PhaseId.RESTORE_VIEW)\n@@ -83,6 +84,7 @@ public void afterPhase(PhaseEvent event)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void beforePhase(PhaseEvent event)\n   {\n     // Ensure that the implicit object gets created.  In general,\n@@ -123,9 +125,10 @@ public PhaseId getPhaseId()\n   // Create the RequestContext if necessary;  ideally, this is unnecessary\n   // because our filter will have executed - but if not, deal.\n   //\n+  @SuppressWarnings(\"unchecked\")\n   static private void _createContextIfNecessary(FacesContext fContext)\n   {\n-    Map requestMap = fContext.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = fContext.getExternalContext().getRequestMap();\n     Boolean createdContext = (Boolean)\n       requestMap.get(_CREATED_CONTEXT_KEY);\n     if (createdContext == null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java",
                "sha": "f235543303f15b6ff795dcec3a37b65500b6c93a",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 15,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java",
                "patch": "@@ -15,9 +15,8 @@\n */\n package org.apache.myfaces.trinidadinternal.convert;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Calendar;\n-import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n \n@@ -27,7 +26,8 @@ public BaseConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source instanceof Calendar)\n     {\n@@ -62,25 +62,36 @@ public Object convert(Object source, Class targetType)\n       source.getClass() + \" to:\"+targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n+    ArrayList<Class<?>> list = new ArrayList<Class<?>>(1);\n     if (Date.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Calendar.class);\n+      list.add(Calendar.class);\n     }\n-    if (Calendar.class.isAssignableFrom(sourceType))\n+    else if (Calendar.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Date.class);\n+      list.add(Date.class);\n     }\n-    if (Number.class.isAssignableFrom(sourceType))\n+    else if (Number.class.isAssignableFrom(sourceType))\n     {\n-      return Arrays.asList(new Class[] {\n-        Byte.class, Double.class, Float.class, \n-        Integer.class, Long.class, Short.class,\n-        Byte.TYPE, Double.TYPE, Float.TYPE, // bug 4891181\n-        Integer.TYPE, Long.TYPE, Short.TYPE}\n-        );\n+      list.ensureCapacity(12);\n+      list.add(Byte.class);\n+      list.add(Double.class);\n+      list.add(Float.class);\n+      list.add(Integer.class);\n+      list.add(Long.class);\n+      list.add(Short.class);\n+      list.add(Byte.TYPE);\n+      list.add(Double.TYPE);\n+      list.add(Float.TYPE); // bug 4891181\n+      list.add(Integer.TYPE);\n+      list.add(Long.TYPE);\n+      list.add(Short.TYPE);\n     }\n-    return Collections.EMPTY_LIST;\n+    \n+    return list;\n   }\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java",
                "sha": "00f7bd495bd0cf50fbe8ea5aedc35b8857231cec",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java",
                "patch": "@@ -58,6 +58,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.ByteConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java",
                "sha": "ac0ceb1ecf8c305dd84c7d3c10de46267cc00678",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java",
                "patch": "@@ -17,7 +17,6 @@\n \n import java.util.Map;\n \n-import javax.faces.application.FacesMessage;\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n \n@@ -43,6 +42,7 @@ public String getLibKey(FacesContext context, UIComponent component)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -66,7 +66,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       // FIX - figure out size!!!\n       StringBuffer buff = new StringBuffer();\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n       // =-=JRF Only if Javascript...\n       if (requestMap.get(_PATTERN_WRITTEN_KEY) == null)\n       {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java",
                "sha": "e149fe1be0e1c21b762f8d801dd626068f1e034a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java",
                "patch": "@@ -17,17 +17,17 @@\n \n class ConvertException extends RuntimeException\n {\n-  public ConvertException(Object source, Class targetType, Throwable error)\n+  public ConvertException(Object source, Class<?> targetType, Throwable error)\n   {\n     super(_getMessage(source, targetType), error);\n   }\n   \n-  public ConvertException(Object source, Class targetType)\n+  public ConvertException(Object source, Class<?> targetType)\n   {\n     super(_getMessage(source, targetType));\n   }\n   \n-  private static String _getMessage(Object source, Class targetType)\n+  private static String _getMessage(Object source, Class<?> targetType)\n   {\n     return \"Could not convert instance:\"+source +\n       \" of type:\"+source.getClass()+\" into type:\"+targetType;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java",
                "sha": "b574530a171ad8d738bc5484533995764c183fd9",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java",
                "patch": "@@ -149,7 +149,7 @@ private static final Object _getLabel(\n    */\n   static public Converter createConverter(\n     FacesContext context,\n-    Class        converterType)\n+    Class<?>     converterType)\n   {\n     // Don't bother for Strings and Objects;  note that the 1.1_01 RI\n     // returns null, but the spec requires a FacesException, and MyFaces",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java",
                "sha": "3b340f73db7c2fa5d2786e77640686c5b1c1722e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java",
                "patch": "@@ -66,6 +66,7 @@ public DateTimeConverter(String pattern, String secondaryPattern)\n     super(pattern, secondaryPattern);\n   }\n \n+  @Override\n   public String getAsString(FacesContext context, UIComponent component, Object value)\n   {\n     if (value == null)\n@@ -81,6 +82,7 @@ public String getAsString(FacesContext context, UIComponent component, Object va\n   }\n \n \n+  @Override\n   public Object getAsObject(FacesContext context, UIComponent component, String value)\n   {\n     Object date = super.getAsObject(context, component, value);\n@@ -107,7 +109,7 @@ static Object __typeConvert(\n     ValueBinding binding = component.getValueBinding(\"value\");\n     if (binding != null)\n     {\n-      Class expectedType = binding.getType(context);\n+      Class<?> expectedType = binding.getType(context);\n       // Sometimes the type might be null, if it cannot be determined:\n       if ((expectedType != null) && (!expectedType.isAssignableFrom(value.getClass())))\n       {\n@@ -132,6 +134,7 @@ static Object __typeConvert(\n     return value;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -154,7 +157,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       FormRenderer.addPatternMapping( clientId,\n                                       getExample(context));\n       // =-=AEW Only if Javascript...\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n \n       // this fetch could be at the place where we append, but has been\n       // moved ahead to optimize use of StringBuffer\n@@ -305,6 +310,7 @@ public int getColumns()\n     return len;\n   }\n \n+  @Override\n   protected Date getDate(FacesContext context, UIComponent component)\n   {\n     if (false)\n@@ -339,6 +345,7 @@ protected Date getDate(FacesContext context, UIComponent component)\n    * TimeZone names of Java, since these names are not available in\n    * client side JavaScript.\n    */\n+  @Override\n   protected TimeZone getFormattingTimeZone(TimeZone tZone)\n   {\n     TimeZone zone = (TimeZone)tZone.clone();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java",
                "sha": "83421a912f46090209943e42429fd1f46751ed6b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java",
                "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.DoubleConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java",
                "sha": "9eca2711668eb449ebd5913a8846b969d1366670",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java",
                "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.FloatConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java",
                "sha": "b7fc27ba4a0fc92bcdea74ea9682607b87490c35",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java",
                "patch": "@@ -31,7 +31,7 @@\n    * targetType.\n    * @return an instance of the targetType.\n    */\n-  public abstract Object convert(Object source, Class targetType);\n+  public abstract Object convert(Object source, Class<?> targetType);\n     \n   /**\n    * Gets all the supported targetTypes for the given sourceType.\n@@ -40,5 +40,5 @@\n    * @return Each item is of type {@link Class}. An empty list must be\n    * returned if the given sourceType cannot be converted into anything.\n    */\n-  public abstract List getTargetTypes(Class sourceType);\n+  public abstract List<Class<?>> getTargetTypes(Class<?> sourceType);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java",
                "sha": "1c06a9d5f130ea05e903cb914c403303191d69d8",
                "status": "modified"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 29,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java",
                "patch": "@@ -37,7 +37,8 @@\n {\n   private GenericConverterFactory()\n   {\n-    _converters = new ArrayList(3);\n+    _cache = new HashMap<Key, GenericConverter>(16);\n+    _converters = new ArrayList<GenericConverter>(3);\n     registerConverter(new SqlConverter());\n     registerConverter(new BaseConverter());\n   }\n@@ -55,7 +56,7 @@ private GenericConverterFactory()\n    * requests for the same source and target types will be fast.\n    * @return null if there is no such converter.\n    */\n-  public GenericConverter getConverter(Class sourceType, Class targetType)\n+  public GenericConverter getConverter(Class<?> sourceType, Class<?> targetType)\n   {\n     Key key = new Key(sourceType, targetType);\n     // check the cache first:\n@@ -69,11 +70,11 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n     // can be used to perform this conversion.\n     // initial node in chain:\n     Node start = new Node(null, null, sourceType);\n-    LinkedList sourcesToBeSearched = new LinkedList();\n+    LinkedList<Node> sourcesToBeSearched = new LinkedList<Node>();\n     sourcesToBeSearched.add(start);\n     // cache to store all the classes we've tested already. This is to\n     // avoid our chains from looping indefinitely:\n-    Set cache  = new HashSet(16);\n+    Set<Class<?>> cache  = new HashSet<Class<?>>(16);\n     GenericConverter converter = _findConverter(sourcesToBeSearched, targetType, cache);\n     if (converter == null)\n     {\n@@ -98,19 +99,19 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n    * @return null if no converter was found.\n    */\n   private GenericConverter _findConverter(\n-    LinkedList sourcesToBeSearched,\n-    Class targetType, \n-    Set cache)\n+    LinkedList<Node> sourcesToBeSearched,\n+    Class<?> targetType, \n+    Set<Class<?>> cache)\n   {\n     while(!sourcesToBeSearched.isEmpty())\n     {\n-      Node source = (Node) sourcesToBeSearched.removeFirst();\n+      Node source = sourcesToBeSearched.removeFirst();\n       // loop through all the converters and see what types they can turn \n       // the current sourceType into \n       // (the current sourceType is source.targetType):\n       for(int j=0,jsz=_converters.size(); j<jsz; j++)\n       {\n-        GenericConverter conv = (GenericConverter) _converters.get(j);\n+        GenericConverter conv = _converters.get(j);\n         // loop though all the targetTypes on this converter to see\n         // if we can find the one we're looking for:\n         if (_searchTargetTypes(sourcesToBeSearched, source, conv, targetType,\n@@ -142,17 +143,17 @@ private GenericConverter _findConverter(\n    * currentSource.targetType into searchType.\n    */\n   private boolean _searchTargetTypes(\n-    List sourcesToBeSearched,\n+    List<Node> sourcesToBeSearched,\n     Node currentSource,\n     GenericConverter currentConverter,\n-    Class searchType,\n-    Set cache)\n+    Class<?> searchType,\n+    Set<Class<?>> cache)\n   {\n-    Class sourceType = currentSource.targetType;\n-    List targetTypes = currentConverter.getTargetTypes(sourceType);\n+    Class<?> sourceType = currentSource.targetType;\n+    List<Class<?>> targetTypes = currentConverter.getTargetTypes(sourceType);\n     for(int i=0,sz=targetTypes.size(); i<sz; i++)\n     {\n-      Class targetType = (Class) targetTypes.get(i);\n+      Class<?> targetType = targetTypes.get(i);\n       // check to see if we've seen this targetType before:\n       if (cache.add(targetType))\n       {\n@@ -188,7 +189,7 @@ public void registerConverter(GenericConverter converter)\n    * @param targetType the required type.\n    * @return null, if the source is null.\n    */\n-  public Object convert(Object source, Class targetType)\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return null;\n@@ -209,7 +210,7 @@ public Object convert(Object source, Class targetType)\n    * into the specified targetType\n    * @return true if conversion is possible.\n    */\n-  public boolean isConvertible(Object source, Class targetType)\n+  public boolean isConvertible(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return false; // bug 4589048\n@@ -221,13 +222,30 @@ public boolean isConvertible(Object source, Class targetType)\n     return converter != null;\n   }\n   \n-  private final Map _cache = new HashMap(16);\n-  private final List _converters;\n-  private static final Object _NULL = Node.class; // reuse an object\n+  private final Map<Key, GenericConverter> _cache;\n+  private final List<GenericConverter> _converters;\n+  // 2006-08-02: -= Simon Lessard =-\n+  //             Using a GenericConverter null value instead \n+  //             of Node.class to be typesafe\n+  private static final GenericConverter _NULL = new GenericConverter()\n+  {\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n+    {\n+      return null;\n+    }\n+    \n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n+    {\n+      return Collections.EMPTY_LIST;\n+    }\n+  };\n \n   private static final class Node\n   {\n-    public Node(Node previous, GenericConverter converter, Class targetType)\n+    public Node(Node previous, GenericConverter converter, Class<?> targetType)\n     {\n       this.previous = previous;\n       this.converter = converter;\n@@ -244,7 +262,7 @@ public Object convert(Object source)\n       return source;\n     }\n     \n-    public Class getSourceType()\n+    public Class<?> getSourceType()\n     {\n       if (previous == null)\n         return targetType;\n@@ -253,12 +271,12 @@ public Class getSourceType()\n     \n     public final Node previous;\n     public final GenericConverter converter;\n-    public final Class targetType;\n+    public final Class<?> targetType;\n   }\n   \n   private static final class Key\n   {\n-    public Key(Class source, Class target)\n+    public Key(Class<?> source, Class<?> target)\n     {\n       assert !source.equals(target);\n \n@@ -268,11 +286,13 @@ public Key(Class source, Class target)\n       _hc = source.hashCode() + target.hashCode();\n     }\n   \n+    @Override\n     public int hashCode()\n     {\n       return _hc;\n     }\n     \n+    @Override\n     public boolean equals(Object other)\n     {\n       if (this == other)\n@@ -286,18 +306,20 @@ public boolean equals(Object other)\n     }\n     \n     private final int _hc;  \n-    private final Class _source, _target;\n+    private final Class<?> _source;\n+    private final Class<?> _target;\n   }\n   \n   private static final class CompositeConverter extends GenericConverter\n   {\n-    public CompositeConverter(Node source, GenericConverter conv, Class targetType)\n+    public CompositeConverter(Node source, GenericConverter conv, Class<?> targetType)\n     {\n       assert source != null;\n       _chain = new Node(source, conv, targetType) ;\n     }\n \n-    public Object convert(Object source, Class targetType)\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n     {\n       if (targetType.isAssignableFrom(_chain.targetType))\n       {\n@@ -307,11 +329,15 @@ public Object convert(Object source, Class targetType)\n         throw new IllegalArgumentException(\"Cannot convert to:\"+targetType);\n     }\n \n-    public List getTargetTypes(Class sourceType)\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n     {\n       if (_chain.getSourceType().isAssignableFrom(sourceType))\n       {\n-        return Collections.singletonList(_chain.targetType);\n+        List<Class<?>> list = new ArrayList<Class<?>>(1);\n+        list.add(_chain.targetType);\n+        return list;\n       }\n       return Collections.EMPTY_LIST;\n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java",
                "sha": "582bd692a13dd6f9c581dc34b4f6fcf43df86f06",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java",
                "patch": "@@ -62,6 +62,7 @@\n \n \n  \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java",
                "sha": "cd8d250ace2984ffbb194697807c12fa87b85b00",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java",
                "patch": "@@ -60,6 +60,7 @@\n         \"org.apache.myfaces.trinidad.convert.LongConverter.CONVERT\";\n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java",
                "sha": "0f3ff65f45a503a94daa847888006d6c296e0d8f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java",
                "patch": "@@ -25,6 +25,7 @@ public NumberConverter()\n   {\n   }\n   \n+  @Override\n   public Object getAsObject(\n     FacesContext context,\n     UIComponent component,\n@@ -41,6 +42,7 @@ public Object getAsObject(\n     return number;\n   }\n   \n+  @Override\n   public String getAsString(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java",
                "sha": "f61815c60616481ee5bfc1a10509218253f2eacd",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java",
                "patch": "@@ -60,6 +60,7 @@\n \n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java",
                "sha": "20c15243248c7ec40f87574a8bb50752c86130d3",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 9,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java",
                "patch": "@@ -19,7 +19,7 @@\n import java.sql.Time;\n import java.sql.Timestamp;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n \n@@ -32,7 +32,8 @@ public SqlConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     java.util.Date jDate = (java.util.Date) source;\n     if (targetType.isAssignableFrom(Date.class))\n@@ -50,16 +51,17 @@ public Object convert(Object source, Class targetType)\n     throw new ConvertException(source, targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n     if (java.util.Date.class.isAssignableFrom(sourceType))\n     {\n-      Class[] types = new Class[] {\n-        Date.class,\n-        Time.class,\n-        Timestamp.class\n-      };\n-      return Arrays.asList(types);\n+      List<Class<?>> list = new ArrayList<Class<?>>(3);\n+      list.add(Date.class);\n+      list.add(Time.class);\n+      list.add(Timestamp.class);\n+      return list;\n     }\n     return Collections.EMPTY_LIST;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java",
                "sha": "a4b36465b27160b3b2d918519c9f5ebd282b4ed4",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java",
                "patch": "@@ -27,9 +27,9 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n-public class FormatterMap extends AbstractMap\n+public class FormatterMap extends AbstractMap<Object, Map<Object,String>>\n {\n-  static public Map sharedInstance()\n+  static public Map<Object, Map<Object,String>> sharedInstance()\n   {\n     return _INSTANCE;\n   }\n@@ -38,33 +38,40 @@ private FormatterMap()\n   {\n   }\n \n-  public Object get(Object key)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Map<Object,String> get(Object key)\n   {\n     if (key == null)\n       return Collections.EMPTY_MAP;\n \n     return new FunctorMap(key);\n   }\n \n-  public Set entrySet()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Set<Map.Entry<Object, Map<Object,String>>> entrySet()\n   {\n     return Collections.EMPTY_SET;\n   }\n \n-  static private final class FunctorMap extends AbstractMap\n+  static private final class FunctorMap extends AbstractMap<Object, String>\n   {\n     public FunctorMap(Object key)\n     {\n       // Assumes check against null above\n       _format = new FastMessageFormat(key.toString());\n     }\n \n-    public Object get(Object key)\n+    @Override\n+    public String get(Object key)\n     {\n       return _format.format(new Object[]{key});\n     }\n \n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<Object, String>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n@@ -73,5 +80,5 @@ public Set entrySet()\n   }\n \n   \n-  static private final Map _INSTANCE = new FormatterMap();\n+  static private final Map<Object, Map<Object,String>> _INSTANCE = new FormatterMap();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java",
                "sha": "a5ec8b83307e3454f1c63578a3d95ff92cc1eb1f",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java",
                "patch": "@@ -61,12 +61,12 @@\n {\n   public static final String FRONT_PAGE_KEY = \"frontPage\";\n \n-  public Map getHelpTopicMap()\n+  public Map<String, Object> getHelpTopicMap()\n   {\n     return _topicMap;\n   }\n \n-  public Map getHelpSystemMap()\n+  public Map<String, Object> getHelpSystemMap()\n   {\n     return _systemMap;\n   }\n@@ -99,33 +99,39 @@ public Map getHelpSystemMap()\n    */\n   protected abstract Object getHelpSystemValue(Object key);\n \n-  private class HelpTopicMap extends AbstractMap\n+  private class HelpTopicMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpTopicValue(key);\n     }\n   }\n \n-  private class HelpSystemMap extends AbstractMap\n+  private class HelpSystemMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpSystemValue(key);\n     }\n   }\n \n-  private Map _topicMap = new HelpTopicMap();\n-  private Map _systemMap = new HelpSystemMap();\n+  private Map<String, Object> _topicMap = new HelpTopicMap();\n+  private Map<String, Object> _systemMap = new HelpSystemMap();\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java",
                "sha": "df34ea7d580d115c425aeced510ad1775efef26f",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java",
                "patch": "@@ -67,7 +67,7 @@ public OracleHelpProvider(String ohwServletLocation)\n     }\n \n     _defaultOHWServletLocation = ohwServletLocation;\n-    _localeSpecificServlets = new OptimisticHashMap(13);\n+    _localeSpecificServlets = new OptimisticHashMap<Locale, String>(13);\n   }\n \n   /**\n@@ -101,6 +101,7 @@ public void registerLocaleSpecificServlet(Locale locale,\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   protected String getHelpTopicURL(Object key)\n   {\n     String helpURL = null;\n@@ -124,6 +125,7 @@ protected String getHelpTopicURL(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   protected String getHelpSystemURL(Object key)\n   {\n     if (HelpProvider.FRONT_PAGE_KEY.equals(key))\n@@ -163,7 +165,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n     //not then check language/country and lang only locales\n     if (_localeSpecificServlets.containsKey(desiredLocale))\n     {\n-      servletLocation = (String) _localeSpecificServlets.get(desiredLocale);\n+      servletLocation = _localeSpecificServlets.get(desiredLocale);\n     }\n     else\n     {\n@@ -184,7 +186,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n \n       if (matchingLocale != null)\n       {\n-        servletLocation = (String)_localeSpecificServlets.get(matchingLocale);\n+        servletLocation = _localeSpecificServlets.get(matchingLocale);\n       }\n \n       //cache the result of the search\n@@ -197,6 +199,6 @@ private String _getLocaleSpecificServlet(FacesContext context)\n   private static final String _TOPIC_PARAM = \"topic\";\n   private static final String _LOCALE_PARAM = \"locale\";\n   private String _defaultOHWServletLocation = null;\n-  private OptimisticHashMap _localeSpecificServlets = null;\n+  private OptimisticHashMap<Locale, String> _localeSpecificServlets = null;\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java",
                "sha": "5bee566cea71d4e3e4a7fb19ca3947cfa27289a4",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java",
                "patch": "@@ -43,6 +43,7 @@\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   public Object getHelpTopicValue(Object key)\n   {\n     return _wrapURL(getHelpTopicURL(key));\n@@ -55,6 +56,7 @@ public Object getHelpTopicValue(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   public Object getHelpSystemValue(Object key)\n   {\n     return _wrapURL(getHelpSystemURL(key));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java",
                "sha": "186132610e075f50d2c3f1d3c4f60c3cf0f72e67",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java",
                "patch": "@@ -22,7 +22,7 @@\n  * converts a EL expression into tokens.\n  * @author The Oracle ADF Faces Team\n  */\n-public class Tokenizer implements Iterator\n+public class Tokenizer implements Iterator<Tokenizer.Token>\n {\n   /**\n    * Creates a new Tokenizer\n@@ -44,7 +44,7 @@ public boolean hasNext()\n     return _curToken != null;\n   }\n     \n-  public Object next()\n+  public Tokenizer.Token next()\n   {\n     if (_curToken == null)\n       throw new NoSuchElementException();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java",
                "sha": "78d57574721394e8ea4278a0b9449ee596e79de5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java",
                "patch": "@@ -34,6 +34,7 @@ public TrinidadVariableResolver(VariableResolver decorated)\n     _decorated = decorated;\n   }\n \n+  @Override\n   public Object resolveVariable(FacesContext context, String name)\n   {\n     if (RequestContext.VARIABLE_NAME.equals(name))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java",
                "sha": "dce685730064797a45ca21be4c724540d557405f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java",
                "patch": "@@ -54,7 +54,7 @@ public void apply(FaceletContext faceletContext,\n       ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n       ActionSource actionSource = (ActionSource)parent;\n       ReturnActionListener listener = new ReturnActionListener();\n-      listener.setValueBinding(listener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n       actionSource.addActionListener(listener);\n     }\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java",
                "sha": "fc93767220cc13f38a712a84cecfd1880f8a6ad5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java",
                "patch": "@@ -56,9 +56,9 @@ public void apply(FaceletContext faceletContext,\n                                                             Object.class);\n       ActionSource actionSource= (ActionSource) parent;\n       SetActionListener listener = new SetActionListener();\n-      listener.setValueBinding(listener.FROM_KEY,\n+      listener.setValueBinding(SetActionListener.FROM_KEY,\n                                new LegacyValueBinding(fromExpression));\n-      listener.setValueBinding(listener.TO_KEY,\n+      listener.setValueBinding(SetActionListener.TO_KEY,\n                                new LegacyValueBinding(toExpression));\n       actionSource.addActionListener(listener);\n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java",
                "sha": "3effa214ff7ffdccbb85d4a9390e47e3206dd52a",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java",
                "patch": "@@ -45,6 +45,7 @@ public LiteralPropertyMetadata(Method method, TagAttribute attribute)\n       _attribute = attribute;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       if (_params == null)\n@@ -73,6 +74,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -98,13 +100,15 @@ public Metadata applyRule(\n     if (str == null)\n       return null;\n \n-    ArrayList list = new ArrayList();\n+    ArrayList<String> list = new ArrayList<String>();\n     StringTokenizer tokens = new StringTokenizer(str);\n     while (tokens.hasMoreTokens())\n+    {\n       list.add(tokens.nextToken());\n-    String[] strArray = new String[list.size()];\n-    return (String[]) list.toArray(strArray);\n+    }\n+    \n+    return list.toArray(new String[list.size()]);\n   }\n \n-  static private final Class _STRING_ARRAY_TYPE = (new String[0]).getClass();\n+  static private final Class<? extends String[]> _STRING_ARRAY_TYPE = (new String[0]).getClass();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java",
                "sha": "837257a74b84181946ad366d08057e31e4768646",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java",
                "patch": "@@ -57,6 +57,8 @@ public TrinidadComponentHandler(ComponentConfig config)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected MetaRuleset createMetaRuleset(Class type)\n   {\n     MetaRuleset m = super.createMetaRuleset(type);\n@@ -67,6 +69,7 @@ protected MetaRuleset createMetaRuleset(Class type)\n     return m;\n   }\n \n+  @Override\n   protected void onComponentPopulated(FaceletContext context,\n                                      UIComponent component,\n                                      UIComponent parent)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java",
                "sha": "74f75ba9301af6ba0aa4df4892fa75e37535c453",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java",
                "patch": "@@ -48,6 +48,7 @@ public ListenerPropertyMetadata(Method method, TagAttribute attribute, Class[] p\n       _paramList = paramList;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       MethodExpression expr =\n@@ -74,6 +75,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -92,17 +94,17 @@ public Metadata applyRule(\n           return null;\n \n         // It should return an array of FooListener objects\n-        Class arrayType = listeners.getPropertyType();\n+        Class<?> arrayType = listeners.getPropertyType();\n         if (!arrayType.isArray())\n           return null;\n         \n         // Ignore non-ADF types\n-        Class listenerClass = arrayType.getComponentType();\n+        Class<?> listenerClass = arrayType.getComponentType();\n         if (!listenerClass.getName().startsWith(\"org.apache.myfaces.trinidad.\"))\n           return null;\n \n         // Turn that into an Event to get the signature\n-        Class eventClass = _getEventClass(listenerClass);\n+        Class<?> eventClass = _getEventClass(listenerClass);\n         if (eventClass == null)\n           return null;\n \n@@ -114,7 +116,7 @@ public Metadata applyRule(\n     return null;\n   }\n \n-  static private Class _getEventClass(Class listenerClass)\n+  static private Class<?> _getEventClass(Class<?> listenerClass)\n   {\n     String listenerName = listenerClass.getName();\n     if (!listenerName.endsWith(\"Listener\"))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java",
                "sha": "9e4fb07b870acb8ea5e6431d065822877a57bdba",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java",
                "patch": "@@ -42,8 +42,8 @@\n    */\n   abstract public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java",
                "sha": "e1e6025632b7fb7e2067b8f8962c8a47b3a19a1b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java",
                "patch": "@@ -50,5 +50,5 @@\n    * @see ImageRenderer\n    * @see ImageConstants\n    */\n-  public Map getRenderProperties(ImageContext context);\n+  public Map<Object, Object> getRenderProperties(ImageContext context);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java",
                "sha": "ff0d73fcd47904826d211bb287cc42a50a25defe",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java",
                "patch": "@@ -38,7 +38,7 @@ private ImageProviderRequestImpl() {}\n   public ImageProviderRequestImpl(\n     String     namespaceURI,\n     String     name,\n-    Map renderProperties)\n+    Map<Object, Object> renderProperties)\n   {\n     if (namespaceURI == null) \n     {\n@@ -74,12 +74,12 @@ public String getLocalName()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n     return _properties;\n   }\n \n   private String     _namespace;\n   private String     _name;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java",
                "sha": "5f83f0a80f0a85bb7d34f4d4d2e018dce493c41a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java",
                "patch": "@@ -17,6 +17,8 @@\n package org.apache.myfaces.trinidadinternal.image;\n import java.util.Collection;\n \n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n+\n \n /**\n  * ImageProviderResponse objects are returned by the ImageProvider\n@@ -62,5 +64,5 @@\n    *\n    * @see org.apache.myfaces.trinidadinternal.image.util.MapArea\n    */\n-  public Collection getMapAreas();\n+  public Collection<MapArea> getMapAreas();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java",
                "sha": "8332c16390c2912c08aed984f3799bfba09ca2e8",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java",
                "patch": "@@ -50,7 +50,7 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java",
                "sha": "35074d92fd73acef347580268a55b60578d3c4da",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 12,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java",
                "patch": "@@ -17,8 +17,6 @@\n package org.apache.myfaces.trinidadinternal.image;\n \n import java.util.Map;\n-import java.util.Iterator;\n-\n \n import org.apache.myfaces.trinidad.util.ArrayMap;\n \n@@ -33,10 +31,11 @@\n   public ImageTypeImpl(\n     String namespaceURI,\n     String name,\n-    Map properties)\n+    Map<Object, Object> properties)\n   {\n     _namespace = namespaceURI;\n     _name = name;\n+    _properties = new ArrayMap<Object, Object>();\n \n     setProperties(properties);\n   }\n@@ -105,27 +104,24 @@ synchronized public void setProperty(Object key, Object value)\n    * This method is not defined on ImageType or MutableImageType -\n    * it is provided as a convenience for ImageTypeManager.\n    */\n-  public void setProperties(Map properties)\n+  public void setProperties(Map<Object, Object> properties)\n   {\n     if (properties == null)\n       return;\n-\n-    Iterator keys = properties.keySet().iterator();\n-    while (keys.hasNext())\n+    \n+    for(Map.Entry<Object, Object> entry : properties.entrySet())\n     {\n-      Object key = keys.next();\n-      Object value = properties.get(key);\n-\n-      setProperty(key, value);\n+      setProperty(entry.getKey(), entry.getValue());\n     }\n   }\n \n+  @Override\n   public String toString()\n   {\n     return getClass().getName() + \"[\" + _namespace + \", \" + _name + \"]\";\n   }\n \n   private String   _namespace;\n   private String   _name;\n-  private ArrayMap _properties = new ArrayMap();\n+  private ArrayMap<Object, Object> _properties;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java",
                "sha": "20c8a235925f4ba1fbfb208ba219007e9963046a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java",
                "patch": "@@ -93,7 +93,7 @@ synchronized public ImageType getImageType(String namespace, String name)\n   synchronized public ImageType registerImageType(\n     String namespace,\n     String name,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     ImageType type = getImageType(namespace, name);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java",
                "sha": "d5f44a4ea1579fc6a81a37952cfd6e391f51f3a3",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 14,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java",
                "patch": "@@ -83,10 +83,11 @@ public Painter getPainter()\n       * properties that describe what to render.  A PaintContext\n       * object is created using the given Map of properties.\n       */\n+    @Override\n     public Image renderImage(\n       ImageContext imageContext,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object, Object> requestedProperties,\n+      Map<Object, Object> responseProperties\n       )\n     {\n         if (!isRenderable(imageContext, requestedProperties))\n@@ -155,7 +156,7 @@ public Image renderImage(\n      */\n     protected Painter getPainter(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return getPainter();\n@@ -173,7 +174,7 @@ protected Painter getPainter(\n      */\n     protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return GraphicsUtils.isGraphicalEnvironment();\n@@ -183,7 +184,9 @@ protected boolean isRenderable(\n      * Returns the foreground color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintForeground(ImageContext context, Map d)\n+    protected Color getPaintForeground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(FOREGROUND_KEY);\n     }\n@@ -192,7 +195,9 @@ protected Color getPaintForeground(ImageContext context, Map d)\n      * Returns the background color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintBackground(ImageContext context, Map d)\n+    protected Color getPaintBackground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(BACKGROUND_KEY);\n     }\n@@ -201,7 +206,7 @@ protected Color getPaintBackground(ImageContext context, Map d)\n      * Returns the font color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Font getPaintFont(Map d)\n+    protected Font getPaintFont(Map<Object,Object> d)\n     {\n       Object o = d.get(FONT_KEY);\n \n@@ -211,7 +216,7 @@ protected Font getPaintFont(Map d)\n       return (Font)d.get(FONT_KEY);\n     }\n \n-    protected Object getPaintData(Object key, Map d)\n+    protected Object getPaintData(Object key, Map<Object,Object> d)\n     {\n       return d.get(key);\n     }\n@@ -223,8 +228,8 @@ protected Object getPaintData(Object key, Map d)\n     protected PaintContext createPaintContext(\n       ImageContext imageContext,\n       BufferedImage image,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object,Object> requestedProperties,\n+      Map<Object,Object> responseProperties\n       )\n     {\n       return\n@@ -250,8 +255,8 @@ protected void disposePaintContext(PaintContext context)\n         public Context(\n           ImageContext imageContext,\n           BufferedImage image,\n-          Map requestedProperties,\n-          Map responseProperties\n+          Map<Object,Object> requestedProperties,\n+          Map<Object,Object> responseProperties\n           )\n \n         {\n@@ -395,8 +400,8 @@ public int getReadingDirection()\n \n         private Graphics2D            _graphics;\n         private ImageContext          _imageContext;\n-        private Map            _requested;\n-        private Map            _response;\n+        private Map<Object,Object>    _requested;\n+        private Map<Object,Object>    _response;\n         private int                   _direction;\n \n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java",
                "sha": "05c433615a71225284dcc17b01217baa8fbe8bb8",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java",
                "patch": "@@ -46,7 +46,7 @@ public Object instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java",
                "sha": "78e5110fb9add24ce009bbfb9f83337db443250c",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java",
                "patch": "@@ -36,7 +36,7 @@\n    */\n   public AccentColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -47,11 +47,11 @@ public AccentColorizedIconKey(\n    */\n   protected AccentColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     super(context, source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -62,6 +62,7 @@ protected AccentColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #AccentColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected AccentColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -83,6 +84,7 @@ protected AccentColorizedIconKey(\n    * Returns the color key for accent colorized icons: \n    * ImageConstants.DARK_ACCENT_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_ACCENT_COLOR_KEY;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java",
                "sha": "4f45d56b5c7cb70ad23f5294b31590c896e79def",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 17,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java",
                "patch": "@@ -44,11 +44,11 @@\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n-    Class lookAndFeel = (Class)properties.get(LAF_KEY);\n+    Class<?> lookAndFeel = (Class)properties.get(LAF_KEY);\n     int direction = CacheUtils.getReadingDirection(context, properties);\n     Color color = (Color)properties.get(getColorKey());\n     Color surroundingColor = (Color)properties.get(SURROUNDING_COLOR_KEY);\n@@ -61,11 +61,11 @@ protected BaseColorizedIconKey(\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     _init(source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -75,6 +75,7 @@ protected BaseColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #BaseColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected BaseColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -111,6 +112,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -132,6 +134,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() |\n@@ -144,9 +147,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n     properties.put(getColorKey(), getColor());\n     properties.put(SURROUNDING_COLOR_KEY, _surroundingColor);\n@@ -168,7 +171,7 @@ protected String getSource()\n   /**\n    * Returns the lookAndFeel property.\n    */\n-  protected Class getLookAndFeel()\n+  protected Class<?> getLookAndFeel()\n   {\n     return _lookAndFeel;\n   }\n@@ -200,7 +203,7 @@ protected void setSource(String source)\n   /**\n    * Sets the lookAndFeel property.\n    */\n-  protected void setLookAndFeel(Class lookAndFeel)\n+  protected void setLookAndFeel(Class<?> lookAndFeel)\n   {\n     _lookAndFeel = lookAndFeel;\n   }\n@@ -223,11 +226,11 @@ protected void setColor(Color color)\n   }\n \n   private void _init(\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor\n     )\n   {\n     _lookAndFeel = lookAndFeel;\n@@ -248,7 +251,7 @@ private void _init(\n   private int         _direction;\n   private Color       _color;\n   private Color       _surroundingColor;\n-  private Class       _lookAndFeel;\n+  private Class<?>    _lookAndFeel;\n \n   // The size for the render properties ArrayMap.  We leave room for\n   // the SOURCE_INPUT_STREAM_PROVIDER_KEY property, typically provided",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java",
                "sha": "a76750f17165573e5a74edce3ca9b6b791a72665",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java",
                "patch": "@@ -37,11 +37,12 @@\n {\n   public Cache()\n   {\n+    _cache = new OptimisticHashMap<Object, CacheEntry>(_CACHE_SIZE);\n   }\n \n   public CacheEntry get(ImageContext context, Object key)\n   {\n-    CacheEntry entry = (CacheEntry)_cache.get(key);\n+    CacheEntry entry = _cache.get(key);\n     if (entry == null)\n       return null;\n \n@@ -81,7 +82,7 @@ public void put(ImageContext context, Object key, CacheEntry entry)\n     {\n       // First check to see if we have already got an entry -\n       // perhaps for some other encoding\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n       if (topEntry == null)\n       {\n         _cache.put(key, entry);\n@@ -123,7 +124,7 @@ public void remove(\n   {\n     synchronized (_cache)\n     {\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n \n       if (topEntry == entry)\n       {\n@@ -258,7 +259,7 @@ private char _getValidCharacter(char c)\n       return 0x5f;\n \n     // Convert to hexidecimal string\n-    String hex = Integer.toHexString((int)c);\n+    String hex = Integer.toHexString(c);\n \n     // To keep names short, just pick off the last character - it's the\n     // most variable digit.\n@@ -311,13 +312,17 @@ private static boolean _isMissRetryEntry(CacheEntry entry)\n   }\n \n   // Hashtable of CacheKeys to CacheEntrys\n-  private OptimisticHashMap _cache = new OptimisticHashMap(_CACHE_SIZE);\n+  private OptimisticHashMap<Object, CacheEntry> _cache;\n \n   // List of base names.\n   // =-=ags We use a Hashtable so that lookups are quick.  However,\n   // this probably should just be a sorted list and do a binary\n   // search, since we don't care about the value, just the key.\n-  private Hashtable _names = new Hashtable(_NAMES_SIZE);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtale is synchronized (thus slow). If thread safety is not \n+  //        required, HashMap would be better,\n+  private Hashtable<String, Boolean> _names = \n+    new Hashtable<String, Boolean>(_NAMES_SIZE);\n \n   private static final int _CACHE_SIZE = 101;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java",
                "sha": "fb5d1f57af9d00583df7577b12eb10f32fdbbb97",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.myfaces.trinidadinternal.image.ImageProviderResponse;\n \n import org.apache.myfaces.trinidadinternal.image.encode.ImageEncoderManager;\n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n \n /** \n  * Cache entry data structure\n@@ -84,7 +85,7 @@ public String getEncoding()\n     return _encoding;\n   }\n \n-  public Collection getMapAreas()\n+  public Collection<MapArea> getMapAreas()\n   {\n     return null;\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java",
                "sha": "0cb97a6f6e0c914c8beeeab333a5ab7e43b26b06",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java",
                "patch": "@@ -45,6 +45,6 @@\n    * @param context The image context\n    * @param property The dictionary of requested image properties\n    */\n-  public Object getCacheKey(ImageContext context, Map properties);\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties);\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java",
                "sha": "8efb4c7aea54191626af383ac8811f9b855db4bb",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java",
                "patch": "@@ -50,7 +50,7 @@ private CacheUtils() {}\n \n   public static int getReadingDirection(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     LocaleContext localeContext = context.getLocaleContext();\n@@ -75,7 +75,7 @@ public static int getReadingDirection(\n \n   // Gets a Boolean value\n   public static boolean getBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean defaultValue\n     )\n@@ -89,7 +89,7 @@ public static boolean getBoolean(\n \n   // Puts a Boolean value into a dictionary\n   public static void putBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean value\n     )\n@@ -98,7 +98,7 @@ public static void putBoolean(\n   }\n \n   // Tests for TEXT_ANTIALIAS_KEY\n-  public static boolean isTextAntialiased(Map properties)\n+  public static boolean isTextAntialiased(Map<Object, Object> properties)\n   {\n     return getBoolean(properties, ImageConstants.TEXT_ANTIALIAS_KEY, false);\n   }\n@@ -123,7 +123,7 @@ public static FontProxy getSharedFont(FontProxy font)\n     if (font == null)\n       return null;\n \n-    FontProxy sharedFont = (FontProxy)_sFontProxyCache.get(font);\n+    FontProxy sharedFont = _sFontProxyCache.get(font);\n     if (sharedFont != null)\n       return sharedFont;\n \n@@ -141,7 +141,7 @@ public static FontProxy getSharedFont(FontProxy font)\n    * Convenience method for getting a shared FontProxy for a font\n    * specified in a properties dictionary.\n    */\n-  public static FontProxy getSharedFont(Map properties, Object key)\n+  public static FontProxy getSharedFont(Map<Object, Object> properties, Object key)\n   {\n     return getSharedFont((FontProxy)properties.get(key));\n   }\n@@ -167,8 +167,8 @@ public static String base64Encode(int value)\n     return buffer.toString();\n   }\n \n-  private static final Map _sFontProxyCache = \n-    Collections.synchronizedMap(new LRUCache(50));\n+  private static final Map<FontProxy, FontProxy> _sFontProxyCache = \n+    Collections.synchronizedMap(new LRUCache<FontProxy, FontProxy>(50));\n \n   // Characters for base 64 encodings\n   private static final char[] _BASE_64_CHARS =",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java",
                "sha": "d06cdc144bb3ba8338f00ddf431cafe11db0c514",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java",
                "patch": "@@ -32,7 +32,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     if (properties.get(ImageConstants.DARK_COLOR_KEY) != null)\n       return new CoreColorizedIconKey(context, properties);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java",
                "sha": "5aedd30ca6af69ff85cac09aba297ee606a126ac",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java",
                "patch": "@@ -32,7 +32,7 @@\n  */\n public class ColorizedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(ImageContext context, Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java",
                "sha": "24d6cd622d2f62ee9c7b4aede43146f8b65fa9e7",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 10,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java",
                "patch": "@@ -46,7 +46,7 @@\n    */\n   public CompositeButtonKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String lookAndFeelId = (String)properties.get(LOOK_AND_FEEL_ID_KEY);\n@@ -144,6 +144,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     if (this == o)\n@@ -172,6 +173,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     // In order to implement font name wildcarding, we don't hash on font\n@@ -197,9 +199,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(LOOK_AND_FEEL_ID_KEY, _lookAndFeelId);\n     properties.put(NAME_KEY, _name);\n     properties.put(TEXT_KEY, _text);\n@@ -251,6 +253,7 @@ protected InputStreamProvider getBottomBackgroundIcon()\n     return null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     String propertiesString =\n@@ -398,7 +401,7 @@ private void _init(\n   }\n \n   private char _getChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key\n     )\n   {\n@@ -410,7 +413,7 @@ private char _getChar(\n   }\n \n   private void _putChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     char value\n     )\n@@ -482,15 +485,15 @@ private boolean _fontEquals(FontProxy font)\n   // Returns the InputStreamProvider for the icon with\n   // the specific key.\n   private InputStreamProvider _getIcon(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     iconKey\n     )\n   {\n     return (InputStreamProvider)properties.get(iconKey);\n   }\n \n   // Put the start icon in the specified properties dictionary\n-  private void _putStartIcon(Map properties)\n+  private void _putStartIcon(Map<Object, Object> properties)\n   {\n     if (_startIcon == null)\n       _startIcon = getStartIcon();\n@@ -500,7 +503,7 @@ private void _putStartIcon(Map properties)\n   }\n \n   // Put the end icon in the specified properties dictionary\n-  private void _putEndIcon(Map properties)\n+  private void _putEndIcon(Map<Object, Object> properties)\n   {\n     if (_endIcon == null)\n       _endIcon = getEndIcon();\n@@ -510,7 +513,7 @@ private void _putEndIcon(Map properties)\n   }\n \n   // Put the top background icon in the specified properties dictionary\n-  private void _putTopBackgroundIcon(Map properties)\n+  private void _putTopBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_topBackgroundIcon == null)\n       _topBackgroundIcon = getTopBackgroundIcon();\n@@ -520,7 +523,7 @@ private void _putTopBackgroundIcon(Map properties)\n   }\n \n   // Put the bottom background icon in the specified properties dictionary\n-  private void _putBottomBackgroundIcon(Map properties)\n+  private void _putBottomBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_bottomBackgroundIcon == null)\n       _bottomBackgroundIcon = getBottomBackgroundIcon();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java",
                "sha": "d25a76804c0b4a58d2e8e9923b3aa1914dbf678f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java",
                "patch": "@@ -31,7 +31,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     return new CompositeButtonKey(context, properties);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java",
                "sha": "181184a5b76cdbde62ba10fcdcf48421c12444d7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java",
                "patch": "@@ -30,7 +30,9 @@\n public class CompositeButtonNameProvider\n   implements NameProvider, ImageConstants\n {\n-  public String getName(ImageContext context, Map requestedProperties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> requestedProperties)\n   {\n     String name = (String)requestedProperties.get(ImageConstants.NAME_KEY);\n \n@@ -65,7 +67,7 @@ public String getName(ImageContext context, Map requestedProperties)\n   // Produces a hash code based on the requested properties\n   private int _hashCode(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     Object text = properties.get(TEXT_KEY);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java",
                "sha": "62260e872b6466f79c76b3d004cecda64a885d60",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 9,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java",
                "patch": "@@ -37,9 +37,9 @@\n   /**\n    * Implementation of PropertiesFilter.filterProperties()\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return new Defaults(context, properties);\n@@ -50,19 +50,20 @@ public Map filterProperties(\n    * WrappingMap which provides default values for\n    * missing properties.\n    */\n-  static private class Defaults extends WrappingMap\n+  static private class Defaults extends WrappingMap<Object, Object>\n     implements ImageConstants\n   {\n     public Defaults(\n       ImageContext context,\n-      Map   properties\n+      Map<Object, Object> properties\n       )\n     {\n       super(properties);\n \n       _context = context;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       Object value = super.get(key);\n@@ -90,7 +91,7 @@ public Object get(Object key)\n         return value;\n       }\n \n-      Map properties = getWrappedMap();\n+      Map<Object, Object> properties = getWrappedMap();\n \n       if (key.equals(ImageConstants.FOREGROUND_KEY))\n         return _getDefaultForeground(properties);\n@@ -104,20 +105,20 @@ public Object get(Object key)\n       return null;\n     }\n \n-    private Color _getDefaultForeground(Map properties)\n+    private Color _getDefaultForeground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultForeground(_context,\n                                                 _isDisabled(properties));\n     }\n \n-    private Color _getDefaultBackground(Map properties)\n+    private Color _getDefaultBackground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBackground(_context,\n                                                 _isDisabled(properties));\n     }\n \n \n-    private boolean _isDisabled(Map properties)\n+    private boolean _isDisabled(Map<Object, Object> properties)\n     {\n       Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -127,7 +128,7 @@ private boolean _isDisabled(Map properties)\n       return disabled.booleanValue();\n     }\n \n-    private Color _getDefaultBorderColor(Map properties)\n+    private Color _getDefaultBorderColor(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBorderColor(_context,\n                                                  _isDisabled(properties));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java",
                "sha": "d813e3839223be115a76084bc34f9107d3359cab",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java",
                "patch": "@@ -36,7 +36,7 @@\n    */\n   public CoreColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -48,7 +48,7 @@ public CoreColorizedIconKey(\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n-    Class  lookAndFeel,\n+    Class<?> lookAndFeel,\n     int    direction,\n     Color  color,\n     Color  surroundingColor)\n@@ -61,6 +61,7 @@ protected CoreColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #CoreColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -75,6 +76,7 @@ protected CoreColorizedIconKey(\n    * Returns the color key for core colorized icons:\n    * ImageConstants.DARK_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_COLOR_KEY;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java",
                "sha": "07e47cf7e46f55ae4697b6cd99793663b8ee7074",
                "status": "modified"
            },
            {
                "additions": 49,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java",
                "changes": 83,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 34,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java",
                "patch": "@@ -104,7 +104,7 @@ public static ImageProvider getSharedCache(\n     // fail due to insignificant path incosistencies.\n     realPath = _getCanonicalPath(realPath);\n \n-    ImageProvider cache = (ImageProvider)_sSharedCaches.get(realPath);\n+    ImageProvider cache = _sSharedCaches.get(realPath);\n \n     // If we didn't find a shared cache, create a new cache\n     // and cache it in the shared cache cache.  :-)\n@@ -118,7 +118,7 @@ public static ImageProvider getSharedCache(\n       // _sSharedCaches.\n       synchronized (_sSharedCaches)\n       {\n-        ImageProvider tmp = (ImageProvider)_sSharedCaches.get(realPath);\n+        ImageProvider tmp = _sSharedCaches.get(realPath);\n         if (tmp != null)\n         {\n           // Stick with tmp\n@@ -156,7 +156,7 @@ protected FileSystemImageCache(String realPath)\n     // Initialize our table of per-Locale caches.  Note on table size:\n     // We don't expect a single FileSystemImageCache to be serving up images\n     // for a huge number of different locales - using a small table size.\n-     _caches = new OptimisticHashMap(19);\n+     _caches = new OptimisticHashMap<String, Cache>(19);\n   }\n \n   /**\n@@ -236,7 +236,7 @@ public ImageProviderResponse getImage(\n       // may have been generated by another FileSystemImageCache instance\n       // running in a different process.  We need the request properties\n       // to do this, in order to produce the target file name.\n-      Map properties = _getFilteredProperties(context, type, request);\n+      Map<Object, Object> properties = _getFilteredProperties(context, type, request);\n \n       // If we don't have any properties, we can't render.\n       if (properties == null)\n@@ -349,7 +349,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n     Cache cache = null;\n \n     if (localized)\n-      cache = (Cache)_caches.get(language);\n+      cache = _caches.get(language);\n     else\n       cache = _globalCache;\n \n@@ -379,7 +379,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n       }\n       else\n       {\n-        cache = (Cache)_caches.get(language);\n+        cache = _caches.get(language);\n       }\n     }\n     else\n@@ -464,7 +464,7 @@ private CacheEntry _getImageFromFileSystem(\n     ImageType            type,\n     Cache                cache,\n     Object               key,\n-    Map           properties\n+    Map<Object, Object>  properties\n     ) throws CacheException\n   {\n     // We identify potential matches on the file system by checking\n@@ -537,7 +537,7 @@ private CacheEntry _generateImage(\n     ImageProviderRequest request,\n     Cache        cache,\n     Object       key,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -550,7 +550,9 @@ private CacheEntry _generateImage(\n     // 1. WIDTH_RESPONSE_KEY\n     // 2. HEIGHT_RESPONSE_KEY\n     // 3. IMAGE_MAP_AREAS_RESPONSE_KEY\n-    ArrayMap responseProperties = new ArrayMap(3);\n+    ArrayMap<Object, Object> responseProperties = \n+      new ArrayMap<Object, Object>(3);\n+    \n     byte[] imageData = null;\n \n     try\n@@ -711,7 +713,7 @@ private Object _loadImage(\n     assert (type != null);\n \n       // Get the properties from the request\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     // Get the base name for the URI (minus the extension)\n@@ -762,8 +764,8 @@ private CacheEntry _putCachedImage(\n     Cache        cache,\n     Object       key,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Make sure that we've got a new CacheKey.  We wouldn't want to\n@@ -860,8 +862,8 @@ private void _removeImageFromFileSystem(\n   private byte[] _renderImageLocal(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     Configuration config = context.getConfiguration();\n@@ -889,7 +891,7 @@ private void _removeImageFromFileSystem(\n     }\n \n     // Before we do any rendering check for Configuration.HEADLESS\n-    if (Boolean.TRUE.equals(config.getProperty(config.HEADLESS)) ||\n+    if (Boolean.TRUE.equals(config.getProperty(Configuration.HEADLESS)) ||\n         !GraphicsUtils.isGraphicalEnvironment())\n     {\n       // We're special casing colorized icons so that we can generate\n@@ -1006,7 +1008,7 @@ private File _writeImageFile(\n     ImageType    type,\n     String       name,\n     byte[]       data,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     // Derive the full path of the image file\n@@ -1034,8 +1036,8 @@ private File _writeImageMetadataFile(\n     ImageContext context,\n     ImageType    type,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     )\n     throws CacheException\n   {\n@@ -1094,8 +1096,8 @@ private File _writeImageMetadataFile(\n   private void _writeImageProviderRequest(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws CacheException\n   {\n@@ -1204,7 +1206,7 @@ private CacheEntry _createCacheEntry(\n     ImageContext context,\n     ImageType    type,\n     String       uri,\n-    Map   properties)\n+    Map<Object, Object> properties)\n   {\n     // Get the cache entry\n     int width = _getIntSize(properties, WIDTH_RESPONSE_KEY);\n@@ -1285,7 +1287,7 @@ private CacheKeyFactory _getCacheKeyFactory(ImageType type)\n   // instance.\n   private static String _getCanonicalPath(String path)\n   {\n-    String canonicalPath = (String)_sCanonicalPaths.get(path);\n+    String canonicalPath = _sCanonicalPaths.get(path);\n     if (canonicalPath != null)\n       return canonicalPath;\n \n@@ -1310,7 +1312,7 @@ private static String _getCanonicalPath(String path)\n   private String _getFileName(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -1331,13 +1333,13 @@ private String _getFileName(\n \n   // Returns the complete set of properties needed to render/encode\n   // the requested image\n-  private Map _getFilteredProperties(\n+  private Map<Object, Object> _getFilteredProperties(\n     ImageContext context,\n     ImageType type,\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     if (properties == null)\n       return null;\n \n@@ -1360,7 +1362,7 @@ private Map _getFilteredProperties(\n   // Returns the ImageEncoder to use for the requested image\n   private ImageEncoder _getImageEncoder(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1380,7 +1382,9 @@ private ImageEncoder _getImageEncoder(\n \n   // Returns the encoding to use for images generated\n   // using the specified context\n-  private String _getImageEncoding(ImageContext context, Map properties)\n+  private String _getImageEncoding(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String encoding = (String)properties.get(ENCODING_TYPE_KEY);\n     if (encoding != null)\n@@ -1429,7 +1433,7 @@ private String _getImageEncoding(ImageContext context, Map properties)\n   // Returns the extension for the current image encoding\n   private String _getImageEncodingExtension(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1485,7 +1489,9 @@ private ImageType _getImageType(\n   }\n \n   // Returns an int from the specified Map\n-  private int _getIntSize(Map properties, Object key)\n+  private int _getIntSize(\n+      Map<Object, Object> properties, \n+      Object key)\n   {\n     Integer value = (Integer)properties.get(key);\n \n@@ -1631,8 +1637,8 @@ private boolean _isTypeLocalized(ImageType type)\n   // Reads colorized icon image data from the request properties\n   private byte[] _readColorizedIconData(\n     ImageContext context,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Only bother doing this if we're generating GIFs\n@@ -1728,15 +1734,19 @@ public boolean accept(File dir, String name)\n   // Hashtable containing caches (ie. Hashtables) hashed by Locale.\n   // Each cache stores mappings from PropertiesKeys to the \"base name\"\n   // of the image/metadata/map.\n-  private OptimisticHashMap _caches;\n+  private OptimisticHashMap<String, Cache> _caches;\n \n   // The locale-independent cache\n   private Cache _globalCache;\n \n   // Table of shared FileSystemImageCaches, hashed by path.\n   // Note on table size: We don't expect to have very many FileSystemCaches\n   // running in a single VM - table can be small.\n-  private static final Hashtable _sSharedCaches = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: The code already take care of synchronization when needed it seems,\n+  //        using a HashMap should be more performant.\n+  private static final Hashtable<String, ImageProvider> _sSharedCaches = \n+    new Hashtable<String, ImageProvider>(19);\n \n   // Extension for IMX files\n   static final String __IMX_EXTENSION = \".imx\";\n@@ -1807,6 +1817,11 @@ public boolean accept(File dir, String name)\n   // Configuration property to test whether GIF support is enabled.\n   private static final String _GIF_ENABLED = \"gifEnabled\";\n \n-  private static final Hashtable _sCanonicalPaths = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtable is synchronized and more than often inefficient\n+  //        use a HashMap instead\n+  private static final Hashtable<String, String> _sCanonicalPaths = \n+    new Hashtable<String, String>(19);\n+  \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FileSystemImageCache.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java",
                "sha": "6e0e25ca888969c0afa2820cc8c1af9c40a1bf07",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java",
                "patch": "@@ -40,7 +40,7 @@\n    * and properties.\n    */\n   public FlippedIconKey(\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n@@ -77,6 +77,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -92,6 +93,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() );\n@@ -100,9 +102,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n \n     return properties;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java",
                "sha": "4aa890788762b75737c8835fbb30a89ce338a858",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java",
                "patch": "@@ -31,7 +31,9 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     return new FlippedIconKey(properties);\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java",
                "sha": "10b29c669bc83e25c98cd0f9841f5474031b1277",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java",
                "patch": "@@ -32,7 +32,9 @@\n  */\n public class FlippedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java",
                "sha": "786cd753a5a0b7323e0feca03af9f81b0e9ad937",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java",
                "patch": "@@ -30,6 +30,7 @@\n  */\n class MapCacheEntry extends CacheEntry\n {\n+  @SuppressWarnings(\"unchecked\")\n   public MapCacheEntry(\n     String uri,\n     int width,\n@@ -47,10 +48,11 @@ public MapCacheEntry(\n       _areas = Collections.unmodifiableList(Arrays.asList(areas));\n   }\n \n-  public Collection getMapAreas()\n+  @Override\n+  public Collection<MapArea> getMapAreas()\n   {\n     return _areas;\n   }\n \n-  private Collection _areas;\n+  private Collection<MapArea> _areas;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java",
                "sha": "d0337a108d9075df95ebb343856f5d44baa3246a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java",
                "patch": "@@ -44,5 +44,5 @@\n    * @param requestedProperties The client-provided properties which\n    *   describe the requested image.\n    */\n-  public String getName(ImageContext context, Map requestedProperties);\n+  public String getName(ImageContext context, Map<Object, Object> requestedProperties);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java",
                "sha": "076435579ca1b996e2db2d6b27b6838e4e3cbc39",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java",
                "patch": "@@ -49,8 +49,8 @@\n    * @param properties The dictionary of properties to filter\n    * @return The filtered dictionary of properties\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     );\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java",
                "sha": "546e9e14c6d119ed63591c1107239d8373513e0a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java",
                "patch": "@@ -48,6 +48,7 @@ public SourceCheckingCacheEntry(\n     super(uri, width, height, encoding);\n   }\n \n+  @Override\n   public boolean isValid(\n     ImageContext context,\n     ImageProviderRequest request\n@@ -82,7 +83,7 @@ private static InputStreamProvider _getInputStreamProvider(\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     InputStreamProvider provider = (InputStreamProvider)properties.get(",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java",
                "sha": "d719c6c757805b92b149f03c593df83466ab3529",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 13,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java",
                "patch": "@@ -26,9 +26,9 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/image/cache/WrappingMap.java#0 $) $Date: 10-nov-2005.19:06:16 $\n  * @author The Oracle ADF Faces Team\n  */\n-class WrappingMap implements Map\n+class WrappingMap<K, V> implements Map<K, V>\n {\n-  public WrappingMap(Map map)\n+  public WrappingMap(Map<K, V> map)\n   {\n     _wrappedMap = map;\n   }\n@@ -43,27 +43,27 @@ public boolean isEmpty()\n     return _wrappedMap.isEmpty();\n   }\n \n-  public Iterator keys()\n+  public Iterator<K> keys()\n   {\n     return _wrappedMap.keySet().iterator();\n   }\n \n-  public Set entrySet()\n+  public Set<Map.Entry<K, V>> entrySet()\n   {\n     return _wrappedMap.entrySet();\n   }\n \n-  public Set keySet()\n+  public Set<K> keySet()\n   {\n     return _wrappedMap.keySet();\n   }\n \n-  public void putAll(Map map)\n+  public void putAll(Map<? extends K, ? extends V> map)\n   {\n     throw new UnsupportedOperationException(\"putAll operation not supported for WrappingMap\");\n   }\n \n-  public Collection values()\n+  public Collection<V> values()\n   {\n     return _wrappedMap.values();\n   }\n@@ -83,30 +83,30 @@ public void clear()\n     throw new UnsupportedOperationException(\"clear operation not supported for WrappingMap\");\n   }\n \n-  public Iterator elements()\n+  public Iterator<V> elements()\n   {\n     return _wrappedMap.values().iterator();\n   }\n \n-  public Object get(Object key)\n+  public V get(Object key)\n   {\n     return _wrappedMap.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public V put(K key, V value)\n   {\n     return _wrappedMap.put(key, value);\n   }\n \n-  public Object remove(Object key)\n+  public V remove(Object key)\n   {\n     return _wrappedMap.remove(key);\n   }\n \n-  protected Map getWrappedMap()\n+  protected Map<K, V> getWrappedMap()\n   {\n     return _wrappedMap;\n   }\n \n-  private Map _wrappedMap;\n+  private Map<K, V> _wrappedMap;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java",
                "sha": "688f0521ac93a639f55ce038f93ae595cd48b231",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java",
                "patch": "@@ -45,6 +45,7 @@ public AlphaMultiplyFilter(int rgb)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java",
                "sha": "60ef53bc6648d51f3dc8a824712b4877747a1810",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java",
                "patch": "@@ -84,7 +84,11 @@ public static void encode(Image image, OutputStream stream)\n \n     // A hashtable is used to keep track of colors already in the table\n     // max. one-color entries\n-    Hashtable hsh = new Hashtable(_MAXIMUM_COLOR_TABLE_SIZE);\n+    // -= Simon Lessard =-\n+    // FIXME: JDK 1.2 was truly evil... \n+    //        HashMap would be better\n+    Hashtable<Integer, Integer> hsh = \n+      new Hashtable<Integer, Integer>(_MAXIMUM_COLOR_TABLE_SIZE);\n \n     int colorIndex = 0;           // the code values of the colors\n     int background = 0;           // the code of the background color\n@@ -126,7 +130,7 @@ else if (_isTransparent(color))\n         // color has already been added to the color table.  We use an\n         // the Integer RGB value as our hash key\n         Integer colorKey = IntegerUtils.getInteger(color & 0x00ffffff);\n-        Integer colorIndexValue = (Integer) hsh.get(colorKey);\n+        Integer colorIndexValue = hsh.get(colorKey);\n \n         if (colorIndexValue != null)\n         {\n@@ -318,7 +322,10 @@ else if (_isTransparent(color))\n     // Float is in the form a.b where a = sqnc, and b = 1/(newcol+2).\n     // Now, we use a Integer where the top 16 bits store the sequence and\n     // the bottom 16 bits store the newcol.\n-    hsh = new Hashtable(_LARGEST_CODE); // max. compression entries\n+    // -= Simon Lessard =-\n+    // FIXME: Another line of code, another Hashtable,\n+    //        Yet again HashMap would be more efficient\n+    hsh = new Hashtable<Integer, Integer>(_LARGEST_CODE); // max. compression entries\n \n     int code = (1<< codeSize)+2; // where code values start\n     int clearCode = (code++)-2; // special codes\n@@ -361,7 +368,7 @@ else if (_isTransparent(color))\n       if (sqnc > 0)\n       {\n         fsqnc_newcol = IntegerUtils.getInteger(sqnc_newcol);\n-        Integer sqnc_newcol_code = (Integer) hsh.get(fsqnc_newcol);\n+        Integer sqnc_newcol_code = hsh.get(fsqnc_newcol);\n         if (sqnc_newcol_code == null)\n         {\n           // string not in table.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java",
                "sha": "2737a58d149659b23b00e4f5e45990c9feeaa6df",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java",
                "patch": "@@ -81,7 +81,7 @@ public ImageEncoder getImageEncoder(String type)\n    */\n   public String getImageExtension(String type)\n   {\n-    return (String)_extensions.get(type);\n+    return _extensions.get(type);\n   }\n \n   /**\n@@ -156,10 +156,10 @@ static private void _registerDefaultEncodings(ImageEncoderManager manager)\n   }\n \n   // Maps mime type to ImageEncoder objects\n-  private ArrayMap _encoders = new ArrayMap();\n+  private ArrayMap<String, Object> _encoders = new ArrayMap<String, Object>();\n \n   // Maps mime type to extension\n-  private ArrayMap _extensions = new ArrayMap();\n+  private ArrayMap<String, String> _extensions = new ArrayMap<String, String>();\n \n   static private ImageEncoderManager _sDefaultInstance = \n     new ImageEncoderManager();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java",
                "sha": "3b62499e0252d9265010da226cae3d4625ba0f9e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java",
                "patch": "@@ -44,6 +44,7 @@ public OctreeFilter(Image im)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n     return _tree.mapColor(rgb);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java",
                "sha": "1629c9e9d012d29ebb72f7f2501dfcc623514015",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java",
                "patch": "@@ -212,6 +212,9 @@ private int _setColorVals(int rgb, boolean isNew)\n   private int _children;  // how many leaves are filled\n   private OctreeNode[] _leaf; // 8 children of node\n   private int _pixels; // how many pixels have passed through this node\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private OctreeNode _parent; // parent node in tree\n   private int _level; // where does this node lie in the tree?\n   private OctreeNode _next; // next node at this level",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java",
                "sha": "a135711fb9a836be6e8ff47654803ffe4f2aa421",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 9,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java",
                "patch": "@@ -86,7 +86,9 @@ public static void encode(Image image, OutputStream out)\n                                          \" x \"+height+\" image.\");\n     }\n \n-    Hashtable colors = new Hashtable();\n+    // -= Simon Lessard =-\n+    // FIXME: HashMap please if synchronization is not required...\n+    Hashtable<Color, Integer> colors = new Hashtable<Color, Integer>();\n     int   count = 0;\n     Color lastColor = null;\n     // Use -2 instead of -1 for last pixel because -1 is tranparent white\n@@ -154,7 +156,7 @@ private static void _writePaletteImage(\n     int          width,\n     int          height,\n     int[]        pixels,\n-    Map   colors,\n+    Map<Color, Integer> colors,\n     boolean      transparent,\n     OutputStream out\n     ) throws IOException\n@@ -276,20 +278,20 @@ private static void _writeHeader(\n \n   // Write out the PLTE chunk\n   private static void _writePalette(\n-    Map colors,\n+    Map<Color, Integer> colors,\n     OutputStream out\n     ) throws IOException\n   {\n     // Convert the colors Map into the palette data, sorted by index\n     int count = colors.size();\n     byte[] data = new byte[count * 3];\n \n-    Iterator e = colors.keySet().iterator();\n+    Iterator<Color> e = colors.keySet().iterator();\n \n     while (e.hasNext())\n     {\n-      Color color = (Color)e.next();\n-      int index = (((Integer)colors.get(color)).intValue() * 3);\n+      Color color = e.next();\n+      int index = colors.get(color).intValue() * 3;\n \n       int rgb = color.getRGB();\n       data[index]     = _getRed(rgb);\n@@ -388,7 +390,7 @@ private static long _getCRC(int type, byte[] data)\n     int        height,\n     int        depth,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n // =-=ags At the moment we only support 8-bit pixel depths\n@@ -431,7 +433,7 @@ private static long _getCRC(int type, byte[] data)\n     int        width,\n     int        height,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n     // Convert pixels to an array of palette indices.  Each scanline\n@@ -461,7 +463,7 @@ private static long _getCRC(int type, byte[] data)\n         else\n           color = _createColor(pixel);\n \n-        int index = ((Integer)colors.get(color)).intValue();\n+        int index = colors.get(color).intValue();\n \n         data[targetLine + j + 1] = (byte)index;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java",
                "sha": "62551e12fad0158b4d24d2d32a374f1d7b38f902",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 9,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java",
                "patch": "@@ -58,9 +58,10 @@ public ButtonImageRenderer()\n     super(new ButtonPainter());\n   }\n \n+  @Override\n   protected Painter getPainter(\n     ImageContext imageContext,\n-    Map requestedProperties\n+    Map<Object, Object> requestedProperties\n     )\n   {\n     // We use a special ButtonPainter for Dialog which dynamically\n@@ -87,9 +88,10 @@ protected Painter getPainter(\n     return super.getPainter(imageContext, requestedProperties);\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -98,11 +100,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     return new ProxyContext(super.createPaintContext(imageContext,\n@@ -115,7 +118,10 @@ protected PaintContext createPaintContext(\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -129,7 +135,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -143,7 +152,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -153,7 +163,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -166,7 +176,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -183,6 +193,7 @@ public ProxyContext(PaintContext context)\n       _context = context;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -204,6 +215,7 @@ public Object getPaintData(Object key)\n       return null;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java",
                "sha": "dd7bd93f815249de9e5e758704ebe09d0592460b",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java",
                "patch": "@@ -139,6 +139,7 @@ public static Color getDefaultBorderColor(\n   /**\n    * Returns the insets of just the ButtonPainter.\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(PaintContext context)\n   {\n     int start  = _START;\n@@ -168,6 +169,7 @@ protected ImmInsets getOwnInsets(PaintContext context)\n   /**\n    * Paint just the border of the ButtonPainter.\n    */\n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -563,7 +565,7 @@ private int _getCurveWidth(int height)\n   {\n     // The curve width is about 3/4 of the height\n \n-    return (int)(((float)height) * 0.75);\n+    return (int)(height * 0.75);\n \n   }\n \n@@ -608,6 +610,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java",
                "sha": "f713bd9d3f2f921c5f9ec8a83ca9df4ca1d8c7b9",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java",
                "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.\n@@ -152,7 +152,7 @@ private boolean _isRightToLeft(\n   // Returns the target colors for a colorization based on the\n   // specified context\n   private static int[] _getTargetColors(\n-    Map           properties\n+    Map<Object, Object> properties\n     )\n   {\n     // We derive the colors for the two color ramps based on the\n@@ -219,6 +219,7 @@ public ColorizingFilter(int[] sourceColors, int[] targetColors)\n       canFilterIndexColorModel = true;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // First, see if we can short circuit",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java",
                "sha": "aa0e6867f5149d6eab3a62776cb12b8d4ef97ad7",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java",
                "patch": "@@ -57,9 +57,10 @@ public CompositeButtonImageRenderer()\n     super(new CompositeButtonPainter());\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -68,11 +69,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     Image startImage = SourceUtils.getSourceIcon(imageContext,\n@@ -102,6 +104,7 @@ protected PaintContext createPaintContext(\n                             bottomBackgroundImage);\n   }\n \n+  @Override\n   protected void disposePaintContext(PaintContext context)\n   {\n     if (context instanceof ProxyContext)\n@@ -112,7 +115,10 @@ protected void disposePaintContext(PaintContext context)\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -126,7 +132,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -140,7 +149,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -150,7 +160,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -163,7 +173,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -190,6 +200,7 @@ public ProxyContext(\n       _bottomBackgroundImage = bottomBackgroundImage;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -238,6 +249,7 @@ public void flush()\n       }\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java",
                "sha": "a9e089c8b01a0666f7af52f84c46e5e9831fb77b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java",
                "patch": "@@ -78,6 +78,7 @@ public CompositeButtonPainter()\n         ));\n   }\n \n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )\n@@ -130,6 +131,7 @@ protected ImmInsets getOwnInsets(\n                          rightSize.width);\n   }\n \n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -359,6 +361,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java",
                "sha": "59bb955e3f55c64ec2a2e0c5247857d9b1a9a8b5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java",
                "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java",
                "sha": "25cb208bd4305aa671653529679790238007b40c",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java",
                "patch": "@@ -27,6 +27,7 @@\n  */\n class MirrorImageFilter extends ImageFilter\n {\n+  @Override\n   public void setDimensions(int width, int height) \n   {\n     if (!_done)\n@@ -39,6 +40,7 @@ public void setDimensions(int width, int height)\n     super.setDimensions(width, height);\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -67,6 +69,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -95,6 +98,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void imageComplete(int status) \n   {\n     int[] pixels = _pixels;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java",
                "sha": "d4c8959d25cc85931a5e89833929cc63e9d54674",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java",
                "patch": "@@ -41,7 +41,7 @@\n {\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return getSourceIcon(context,\n@@ -54,7 +54,7 @@ public static Image getSourceIcon(\n    */\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     key\n     )\n   {\n@@ -104,7 +104,7 @@ public static Image getSourceIcon(\n \n   // Logs a warning\n   private static void _log(\n-    Map properties,\n+    Map<Object, Object> properties,\n     String message,\n     Throwable t\n     )",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java",
                "sha": "fe1d219c1a46e9c512da9590f3691c901fc4c97f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java",
                "patch": "@@ -63,8 +63,8 @@ static public ImageRenderer sharedInstance()\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     if ((_LOG.isWarning()))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java",
                "sha": "90252e359c150bc62687f9463885aa12bd2424cd",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java",
                "patch": "@@ -86,6 +86,7 @@ public AbstractBorderPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -104,6 +105,7 @@ public Dimension getPreferredSize(\n    * <p>\n    * @return The minimum size of the Painter.\n    */\n+  @Override\n   public Dimension getMinimumSize(\n     PaintContext context\n     )\n@@ -134,6 +136,7 @@ public Dimension getMinimumSize(\n    * <p>\n    * @see #paintBorder\n    */\n+  @Override\n   public final void paint(\n     PaintContext context,\n     Graphics     g,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java",
                "sha": "2bdec37f332b2b713dbed63fe5b25b9624bc3963",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java",
                "patch": "@@ -69,6 +69,7 @@ public AbstractWrappingPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java",
                "sha": "26fc5f20975ee76944130be05953dff58da0a0e4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java",
                "patch": "@@ -85,6 +85,7 @@ public AdjustableBorderPainter(\n    * <p>\n    * @see org.apache.myfaces.trinidadinternal.image.painter.AbstractBorderPainter#getInsets\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java",
                "sha": "35d5b48cfc993ddc990e67bd09f7f1e25eabcff3",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java",
                "patch": "@@ -38,6 +38,7 @@ public ColorChange(\n   /**\n    * Paints the text at the specified coordinates.\n    */\n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java",
                "sha": "c841bacb36ac52036a75781ee561bba97f708a3c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java",
                "patch": "@@ -74,7 +74,7 @@ public static Image createFilteredImage(\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static public Image getImageResource(Class cl, String name)\n+  static public Image getImageResource(Class<?> cl, String name)\n   {\n     Image image = _getImageResource(cl, name);\n     if (image == null)\n@@ -198,7 +198,7 @@ static public boolean loadImages(Image[] images)\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static private Image _getImageResource(Class cl, String name)\n+  static private Image _getImageResource(Class<?> cl, String name)\n   {\n      //\n     // =-=  bts completely rewrite this method to use getResourceAsStream()",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java",
                "sha": "94e2cb8ac9e14b1f9b3face2df19f00c33a8e5f1",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java",
                "patch": "@@ -107,6 +107,7 @@ public Insets toInsets()\n   /**\n    * Checks whether two insets objects are equal.\n    */\n+  @Override\n   public boolean equals(Object obj)\n   {\n     if (obj instanceof ImmInsets)\n@@ -139,6 +140,7 @@ public boolean equals(Object obj)\n   /**\n    * Override of Object.hashCode()\n    */\n+  @Override\n   public int hashCode()\n   {\n     // We need to override hashCode since we override equals().\n@@ -154,6 +156,7 @@ public int hashCode()\n   /**\n    * Returns a String object representing this Inset's values.\n    */\n+  @Override\n   public String toString()\n   {\n     return getClass().getName() +\n@@ -164,6 +167,7 @@ public String toString()\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java",
                "sha": "0b4eafb5af7725d1b29709958e4cb8a4d8ea5881",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java",
                "patch": "@@ -57,6 +57,7 @@ public OffscreenWrappingPainter(Painter wrappedPainter)\n     super(wrappedPainter);\n   }\n \n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,\n@@ -135,6 +136,7 @@ public void paint(\n     buffer.flush();\n   }\n \n+  @Override\n   public Dimension getPreferredSize(PaintContext context)\n   {\n     Dimension size = null;\n@@ -274,21 +276,25 @@ public ProxyContext(PaintContext wrappedContext, Graphics offscreenG)\n       _g = offscreenG;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;\n     }\n \n+    @Override\n     public Graphics getPaintGraphics()\n     {\n       return _g;\n     }\n \n+    @Override\n     public Font getPaintFont()\n     {\n       return _g.getFont();\n     }\n \n+    @Override\n     public FontMetrics getFontMetrics(Font font)\n     {\n        return _g.getFontMetrics(font);\n@@ -321,6 +327,7 @@ public TransparencyFilter()\n       canFilterIndexColorModel = false;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // Make sure we see pixels at y=0 before any other pixels.",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java",
                "sha": "fa1a08034387ecca4ab3efad2bef6286a6c6e756",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java",
                "patch": "@@ -98,6 +98,7 @@ public TextPainter(\n    * @param context Context for determining the preferred size.\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -331,6 +332,7 @@ protected String getMinimumStringData(\n   }\n \n \n+  @Override\n   protected Object getData(\n     PaintContext context\n     )\n@@ -348,6 +350,7 @@ protected Object getData(\n   }\n \n \n+  @Override\n   protected Object getDataKey()\n   {\n     return _dataKey;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java",
                "sha": "a9b5b149523e535e3985c8bb448d3b312cc8e449",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java",
                "patch": "@@ -105,8 +105,8 @@ public static void encodeImageProviderRequest(\n     String       namespaceURI,\n     String       localName,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws IllegalArgumentException\n   {\n@@ -236,7 +236,7 @@ public static ParserManager createDefaultManager()\n    * objects for elements in the specified namespace.\n    */\n   public static void registerParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace,\n     ParserFactory factory\n     )\n@@ -248,7 +248,7 @@ public static void registerParserFactory(\n    * Unregisters the ParserFactory for the specified namespace.\n    */\n   public static void unregisterParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace\n     )\n   {\n@@ -282,7 +282,7 @@ private static Object _parse(\n     ImageContext context,\n     XMLProvider  provider,\n     InputSource  source,\n-    Class        expectedClass\n+    Class<?>     expectedClass\n     ) throws IOException, SAXException\n   {\n     // Get the ParserManager\n@@ -323,5 +323,5 @@ private ImageProviderRequestUtils() {}\n \n   // We use this empty dictionary as a stub for the response properties\n   // dictionary when we encode the image properties with the XMLEncoder\n-  private static final Map _EMPTY_MAP = new ArrayMap(0);\n+  private static final Map<Object, Object> _EMPTY_MAP = new ArrayMap<Object, Object>(0);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java",
                "sha": "ad29262a9ab43d9625b509d58e63978fce82096a",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java",
                "patch": "@@ -50,8 +50,8 @@ public void encodeXML(\n     ImageContext context,\n     String       namespaceURI,\n     String       localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -69,8 +69,8 @@ public void encodeXML(\n \n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -100,8 +100,8 @@ protected void encodeAttributes(\n    */\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -340,7 +340,7 @@ else if (ch == '\"')\n \n   private final void _encodeDirectionAttribute(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java",
                "sha": "ff9ac2373a227f4fb28b933351086f9bf9fd191b",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 5,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java",
                "patch": "@@ -37,10 +37,11 @@ public ColorizedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -49,7 +50,7 @@ protected void encodeAttributes(\n     String source = (String)properties.get(SOURCE_KEY);\n     encodeAttribute(SOURCE_ATTR, source, out);\n \n-    Class laf = (Class)properties.get(LAF_KEY);\n+    Class<?> laf = (Class<?>)properties.get(LAF_KEY);\n     \n     if ( laf != null )\n     {\n@@ -61,10 +62,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java",
                "sha": "184c59703e36307eeccea3c0dea58ea53844432b",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java",
                "patch": "@@ -36,10 +36,11 @@ public CompositeButtonEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -56,10 +57,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java",
                "sha": "b6b0eff440ddbe6c0ba478480c7cbe043631bd0f",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java",
                "patch": "@@ -35,10 +35,11 @@ public FlippedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java",
                "sha": "decc5e3b557da0e27f3cf2c417f33db143c03b92",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java",
                "patch": "@@ -37,8 +37,8 @@ public void encodeXML(\n     ImageContext context,\n     String     namespaceURI,\n     String     localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     );\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java",
                "sha": "2049b552bb28b650bbaed1771d7db212eb781a1f",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java",
                "patch": "@@ -72,12 +72,13 @@\n   protected BaseImageProviderRequestParser(int capacity)\n   {\n     // Tack on an extra bucket for the encoding\n-    _properties = new ArrayMap(capacity + 1);\n+    _properties = new ArrayMap<Object, Object>(capacity + 1);\n   }\n \n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -135,6 +136,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -152,6 +154,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -177,6 +180,7 @@ else if (\"colorScheme\".equals(localName))\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -185,9 +189,9 @@ public void addCompletedChild(\n     )\n   {\n     if (isColorElement(namespaceURI, localName))\n-      setProperty(getColorKey(namespaceURI, localName), (Color)child);\n+      setProperty(getColorKey(namespaceURI, localName), child);\n     else if (isFontElement(namespaceURI, localName))\n-      setProperty(getFontKey(namespaceURI, localName), (FontProxy)child);\n+      setProperty(getFontKey(namespaceURI, localName), child);\n   }\n \n   /**\n@@ -482,7 +486,7 @@ private BaseImageProviderRequestParser() {}\n \n   private String     _namespaceURI;\n   private String     _localName;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n \n   private boolean   _error;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java",
                "sha": "e57005b1c4e5e059fd4ce380e950c7519f461da5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java",
                "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public Object getNodeValue(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java",
                "sha": "1b8ed7585215691489b689edc57cf065d9970101",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java",
                "patch": "@@ -38,6 +38,7 @@ public ColorizedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,7 +68,7 @@ public void startElement(\n     if (newLafString != null)\n       lafString = newLafString;\n \n-    Class laf = null;\n+    Class<?> laf = null;\n     try\n     {\n       laf = Class.forName(lafString);\n@@ -89,6 +90,8 @@ static private String _mapOldLaf(String lafString)\n       return \"org.apache.myfaces.trinidadinternal.ui.laf.oracle.desktop.BrowserLookAndFeel\";\n     return null;\n   }\n+  \n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if ((XMLConstants.DARK_COLOR_NAME.equals(localName)) ||\n@@ -102,6 +105,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (XMLConstants.DARK_COLOR_NAME.equals(localName))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java",
                "sha": "9d6616ee1770f72341d2397ecfdacc096ac994fb",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java",
                "patch": "@@ -37,6 +37,7 @@ public CompositeButtonParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +88,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -106,6 +108,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java",
                "sha": "6cf6efe630c4362b9bed05a8f0aff23cf337ae31",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java",
                "patch": "@@ -35,6 +35,7 @@ public DefaultsParser()\n    * Override of BaseImageProviderRequestParser.isColorElement()\n    * which adds in the borderColor element.\n    */\n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME)        ||\n@@ -53,6 +54,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.isFontElement()\n    * which adds in the selected/disabled font elements.\n    */\n+  @Override\n   protected boolean isFontElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME)  ||\n@@ -68,6 +70,7 @@ protected boolean isFontElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME))\n@@ -88,6 +91,7 @@ protected Object getColorKey(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getFontKey() for\n    * selected/disabled fonts.\n    */\n+  @Override\n   protected Object getFontKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME))",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java",
                "sha": "1cd99a457ae9f3eccf8e4e95e264b860d4c61bb7",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java",
                "patch": "@@ -35,6 +35,7 @@ public FlippedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java",
                "sha": "92cbde96d8abbdca74627348577306dda28b4b45",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java",
                "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,6 +68,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -83,6 +85,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -103,6 +106,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java",
                "sha": "61da06a50fbbcc1363e031b774cccd6becbbf433",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java",
                "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementations of NodeParser.startElement();\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -55,6 +56,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -76,6 +78,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -91,6 +94,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -101,6 +105,9 @@ public void addCompletedChild(\n     _requests.addElement((ImageProviderRequest)child);\n   }\n \n-  private Vector _requests = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! A Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<ImageProviderRequest> _requests = new Vector<ImageProviderRequest>();\n }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java",
                "sha": "26e324099acbd2b58401969db497e789d5a3ed4f",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java",
                "patch": "@@ -37,6 +37,7 @@\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -51,6 +52,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -78,5 +80,8 @@ public NodeParser startChildElement(\n     }\n   }\n \n-  private Vector _areas = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! Another Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<MapArea> _areas = new Vector<MapArea>();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java",
                "sha": "2d3720790cf9f32937ff49a6c3f0b3588e92dce7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java",
                "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -60,6 +61,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -72,6 +74,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +90,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java",
                "sha": "9c73581b90454af9cb484fcfdb99cbba6c934df7",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java",
                "patch": "@@ -42,6 +42,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -56,6 +57,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -98,6 +100,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -111,6 +114,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addText().\n    */\n+  @Override\n   public void addText(\n     ParseContext context,\n     char[]       text,\n@@ -128,6 +132,7 @@ public void addText(\n   /**\n    * Implemenation of NodeParser.addWhitespace().\n    */\n+  @Override\n   public void addWhitespace(\n     ParseContext context,\n     char[]       text,\n@@ -143,6 +148,10 @@ public void addWhitespace(\n \n   private String _bundleName;\n   private String _key;\n+  // -= Simon Lessard =-\n+  // FIXME: Using a StringBuilder could be MUCH more efficient\n+  //        Currently String concatenation within a loop process\n+  //        which is bad.\n   private String _text;\n \n   // Error messages",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java",
                "sha": "d7f32ca2b8fda78174938eddddf7c40a62f89419",
                "status": "modified"
            },
            {
                "additions": 34,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 27,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java",
                "patch": "@@ -17,10 +17,11 @@\n \n import java.io.IOException;\n import java.io.Writer;\n-\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Stack;\n \n import javax.faces.component.UIComponent;\n@@ -45,13 +46,14 @@\n   public DebugHtmlResponseWriter(ResponseWriter decorated)\n   {\n     super(decorated);\n-    _elementStack = new Stack();\n+    _elementStack = new Stack<String>();\n   }\n \n   /**\n    * Creates a new instance of this DebugHtmlResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     DebugHtmlResponseWriter cloned =\n@@ -62,6 +64,7 @@ public ResponseWriter cloneWithWriter(Writer writer)\n \n \n \n+  @Override\n   public void startElement(String name, UIComponent component) throws IOException\n   {\n     String lowerName = name.toLowerCase();\n@@ -79,9 +82,9 @@ public void startElement(String name, UIComponent component) throws IOException\n     // Check for elements that are not allowed inside each other\n     if (!_elementStack.empty())\n     {\n-      String parent = (String) _elementStack.peek();\n-      Collection allowedParents = (Collection) _sAllowedParents.get(lowerName);\n-      Collection allowedChildren = (Collection) _sAllowedChildren.get(parent);\n+      String parent = _elementStack.peek();\n+      Collection<String> allowedParents = _sAllowedParents.get(lowerName);\n+      Collection<String> allowedChildren = _sAllowedChildren.get(parent);\n       if (((allowedParents != null)  &&\n            !allowedParents.contains(parent)) ||\n           ((allowedChildren != null)  &&\n@@ -100,6 +103,7 @@ public void startElement(String name, UIComponent component) throws IOException\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (!_elementStack.empty())\n@@ -108,6 +112,7 @@ public void endElement(String name) throws IOException\n     super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -165,10 +170,12 @@ private void _errorWithComment(String text) throws IOException\n \n   // Yes, Stack is slow and lame.  This code is used for debugging\n   // only, so that is of little concern.\n-  private Stack        _elementStack;\n+  private Stack<String> _elementStack;\n \n-  static private final HashMap _sAllowedParents = new HashMap(13);\n-  static private final HashMap _sAllowedChildren  = new HashMap(13);\n+  static private final Map<String, List<String>> _sAllowedParents = \n+    new HashMap<String, List<String>>(13);\n+  static private final Map<String, List<String>> _sAllowedChildren  = \n+    new HashMap<String, List<String>>(13);\n \n   static\n   {\n@@ -178,70 +185,70 @@ private void _errorWithComment(String text) throws IOException\n     // but we hardcode that rule.\n     _sAllowedChildren.put(\"table\",\n        Arrays.asList(\n-          new Object[]{\"tr\", \"caption\",\n+          new String[]{\"tr\", \"caption\",\n                        \"thead\", \"tfoot\", \"tbody\", \"col\", \"colgroup\"}));\n \n     _sAllowedChildren.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"th\", \"td\"}));\n+          new String[]{\"th\", \"td\"}));\n \n     _sAllowedChildren.put(\"select\",\n        Arrays.asList(\n-          new Object[]{\"option\", \"optgroup\"}));\n+          new String[]{\"option\", \"optgroup\"}));\n \n     _sAllowedChildren.put(\"ol\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"ul\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"input\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"hr\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"br\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"area\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"link\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"img\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"col\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"frame\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"base\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"meta\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedParents.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n+          new String[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n \n     _sAllowedParents.put(\"td\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"th\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"option\",\n        Arrays.asList(\n-          new Object[]{\"select\", \"optgroup\"}));\n+          new String[]{\"select\", \"optgroup\"}));\n   }\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DebugHtmlResponseWriter.class);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java",
                "sha": "6a99c0a45f074792aa89c1ea25b4c30e85890812",
                "status": "modified"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 19,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java",
                "patch": "@@ -45,23 +45,25 @@\n    public DebugResponseWriter(ResponseWriter decorated)\n    {\n      super(decorated);\n-     _elementStack = new Stack();\n-     _idMap = new HashMap();\n-     _attributes = new HashSet();\n+     _elementStack = new Stack<String>();\n+     _idMap = new HashMap<Object, Boolean>();\n+     _attributes = new HashSet<String>();\n    }\n \n    /**\n     * Creates a new instance of this DebugResponseWriter, using a different\n     * Writer.\n     */\n-   public ResponseWriter cloneWithWriter(Writer writer)\n+   @Override\n+  public ResponseWriter cloneWithWriter(Writer writer)\n    {\n      return new DebugResponseWriter(\n        getResponseWriter().cloneWithWriter(writer));\n    }\n \n \n-   public void endDocument() throws IOException\n+   @Override\n+  public void endDocument() throws IOException\n    {\n      super.endDocument();\n      if (!_elementStack.empty())\n@@ -75,7 +77,8 @@ public void endDocument() throws IOException\n    /**\n     * Writes a comment.\n     */\n-   public void writeComment(Object text) throws IOException\n+   @Override\n+  public void writeComment(Object text) throws IOException\n    {\n      if ((text != null) && (text.toString().indexOf(\"--\") >= 0))\n        _LOG.warning(\"Comments cannot include \\\"--\\\"\");\n@@ -88,7 +91,8 @@ public void writeComment(Object text) throws IOException\n    /**\n     * Writes a String, escaped properly for this method.\n     */\n-   public void writeText(Object text, String componentPropertyName) throws IOException\n+   @Override\n+  public void writeText(Object text, String componentPropertyName) throws IOException\n    {\n      _inElement = false;\n      super.writeText(text, componentPropertyName);\n@@ -97,7 +101,8 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n    /**\n     * Writes a character array, escaped properly for this method.\n     */\n-   public void writeText(\n+   @Override\n+  public void writeText(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -110,7 +115,8 @@ public void writeText(\n    /**\n     * Writes a string, without performing any escaping.\n     */\n-   public void write(String text) throws IOException\n+   @Override\n+  public void write(String text) throws IOException\n    {\n      _inElement = false;\n      super.write(text);\n@@ -119,7 +125,8 @@ public void write(String text) throws IOException\n    /**\n     * Writes a character array, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -132,7 +139,8 @@ public void write(\n    /**\n     * Writes a character, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      int ch\n      ) throws IOException\n    {\n@@ -141,7 +149,8 @@ public void write(\n    }\n \n \n-   public void startElement(String name, UIComponent component) throws IOException\n+   @Override\n+  public void startElement(String name, UIComponent component) throws IOException\n    {\n      if ((component != null) && (_lastComponentStarted != component))\n      {\n@@ -164,7 +173,8 @@ public void startElement(String name, UIComponent component) throws IOException\n    }\n \n \n-   public void endElement(String name) throws IOException\n+   @Override\n+  public void endElement(String name) throws IOException\n    {\n      _inElement = false;\n      _lastComponentStarted = null;\n@@ -195,7 +205,8 @@ public void endElement(String name) throws IOException\n      super.endElement(name);\n    }\n \n-   public void writeAttribute(String name,\n+   @Override\n+  public void writeAttribute(String name,\n                               Object value,\n                               String componentPropertyName)\n          throws IOException\n@@ -223,7 +234,8 @@ public void writeAttribute(String name,\n      super.writeAttribute(name, value, componentPropertyName);\n    }\n \n-   public void writeURIAttribute(\n+   @Override\n+  public void writeURIAttribute(\n      String     name,\n      Object     value,\n      String     componentPropertyName) throws IOException\n@@ -300,15 +312,15 @@ private void _logDuplicateId(Object value)\n    private boolean      _inElement;\n    // Yes, Stack is slow and lame.  This code is used for debugging\n    // only, so that is of little concern.\n-   private Stack        _elementStack;\n+   private Stack<String> _elementStack;\n    // the following is used to keep track of how many time endElement is called.\n    // This is to help in debuggin. An often error is that some element was\n    // too many times or too few times. But by the time the error is detected\n    // it is too late. Now we can print out this count, and you can set the\n    // debugger to stop when the count-1 'th endElement is called:\n-   private int          _endElementCount = 0;\n-   private Map          _idMap;\n-   private Set          _attributes;\n+   private int                  _endElementCount = 0;\n+   private Map<Object, Boolean> _idMap;\n+   private Set<String>          _attributes;\n    // Last component that had a \"start\" component output;  used\n    // to avoid multiple \"start\" comments\n    private UIComponent  _lastComponentStarted;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java",
                "sha": "5902ec7ebf41b329f8792be7106fa52e20e78523",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java",
                "patch": "@@ -57,38 +57,45 @@ public HtmlResponseWriter(Writer out, String encoding)\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return HTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -120,6 +127,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -178,6 +186,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -192,7 +201,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // See what attribute we were involved in\n     String currAttr = _currAttr;\n@@ -234,6 +243,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -273,6 +283,7 @@ public void writeURIAttribute(String name,\n     out.write('\"');\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -285,6 +296,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -304,6 +316,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -318,25 +331,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -376,7 +393,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -488,7 +505,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -621,13 +638,13 @@ static private boolean _isEmptyElement(String name)\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(HtmlResponseWriter.class);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java",
                "sha": "ed06db8cf7b10b5dea4c1d5cdf29e4712ba23489",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java",
                "patch": "@@ -50,12 +50,14 @@ public IndentingResponseWriter(\n    * Creates a new instance of this DebugResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new IndentingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -74,6 +76,7 @@ public void startElement(String name,\n     super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     _depth--;\n@@ -93,6 +96,7 @@ public void endElement(String name) throws IOException\n   /**\n    * Writes a comment.\n    */\n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     // start a new line only if an element just ended and\n@@ -105,6 +109,7 @@ public void writeComment(Object comment) throws IOException\n   /**\n    * Writes a String, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -115,6 +120,7 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n   /**\n    * Writes a character array, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(\n     char[]      text, \n     int         start,\n@@ -127,6 +133,7 @@ public void writeText(\n   /**\n    * Writes a string, without performing any escaping.\n    */\n+  @Override\n   public void write(String text) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -136,6 +143,7 @@ public void write(String text) throws IOException\n   /**\n    * Writes a character array, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     char[]      text, \n     int         start,\n@@ -148,6 +156,7 @@ public void write(\n   /**\n    * Writes a character, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     int c\n     ) throws IOException\n@@ -229,7 +238,7 @@ private boolean _isWhiteSpaceSensitive(String element)\n     }\n   }\n \n-  static private final Set _HTML_TYPES = new HashSet();\n+  static private final Set<String> _HTML_TYPES = new HashSet<String>();\n   static\n   {\n     _HTML_TYPES.add(HtmlResponseWriter.HTML_CONTENT_TYPE);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java",
                "sha": "776decbd5c63377c9253bd372f143692e5b60333",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java",
                "patch": "@@ -52,12 +52,14 @@ private RepeatIdResponseWriter(ResponseWriter out)\n     super(out);\n   }\n   \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new RepeatIdResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java",
                "sha": "e6c65dc905beef31e19226cbacc3ca59d5eb8762",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java",
                "patch": "@@ -46,51 +46,60 @@ protected ResponseWriter getResponseWriter()\n     return _decorated;\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return getResponseWriter().getCharacterEncoding();\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return getResponseWriter().getContentType();\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     getResponseWriter().startDocument();\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     getResponseWriter().endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     getResponseWriter().flush();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     getResponseWriter().close();\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n     getResponseWriter().startElement(name, component);\n   }\n \n   \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     getResponseWriter().endElement(name);\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -100,6 +109,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -108,51 +118,60 @@ public void writeURIAttribute(String name,\n     getResponseWriter().writeURIAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     getResponseWriter().writeComment(comment);\n   }\n \n   \n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     getResponseWriter().writeText(text, componentPropertyName);\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n     getResponseWriter().writeText(text, off, len);\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     getResponseWriter().write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     getResponseWriter().write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     getResponseWriter().write((char) c);\n   }\n \n+  @Override\n   public void write(char[] cbuf)\n     throws IOException\n   {\n     getResponseWriter().write(cbuf);\n   }\n \n+  @Override\n   public void write(String str, int off, int len)\n     throws IOException\n   {\n     getResponseWriter().write(str, off, len);\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return getResponseWriter().cloneWithWriter(writer);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java",
                "sha": "4373ac50084bdde68f1b818b490de2ee879d06dd",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java",
                "patch": "@@ -59,38 +59,45 @@ public XhtmlResponseWriter(\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return XHTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -122,6 +129,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -167,6 +175,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -181,7 +190,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // Output Boolean values specially\n     if (valueClass == _BOOLEAN_CLASS)\n@@ -208,6 +217,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -217,6 +227,7 @@ public void writeURIAttribute(String name,\n     writeAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -229,6 +240,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -248,6 +260,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -262,25 +275,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -321,7 +338,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -427,7 +444,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -457,6 +474,9 @@ private void _pushOutputtedElement(\n   private boolean     _dontEscape;\n \n   private Writer       _out;\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private String       _contentType;\n   private String       _encoding;\n \n@@ -465,13 +485,13 @@ private void _pushOutputtedElement(\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(XhtmlResponseWriter.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java",
                "sha": "93575d5a97c480e5450a78c7d753e6696ee82979",
                "status": "modified"
            },
            {
                "additions": 44,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 22,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java",
                "patch": "@@ -51,13 +51,20 @@\n  */\n public final class RegionMetadata extends RegionManager\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  private RegionMetadata()\n+  {\n+    _map = Collections.EMPTY_MAP;\n+  }\n+  \n+  @Override\n   public RegionConfig getRegionConfig(String regionType)\n   {\n-    return (ComponentMetaData) _map.get(regionType);\n+    return _map.get(regionType);\n   }\n \n-  public Map getRegionConfigs()\n+  @Override\n+  public Map<String, RegionConfig> getRegionConfigs()\n   {\n     return Collections.unmodifiableMap(_map);\n   }\n@@ -69,10 +76,11 @@ public Map getRegionConfigs()\n    * All resources with the name \"/META-INF/region-metadata.xml\" will be searched.\n    * /WEB-INF/region-metadata.xml will also be searched.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized RegionMetadata getRegionMetadata(\n     FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     RegionMetadata bean = (RegionMetadata) appMap.get(_KEY);\n     if (bean == null)\n     {\n@@ -109,9 +117,10 @@ public static synchronized RegionMetadata getRegionMetadata(\n    * The next time {@link #getRegionMetadata} is called, it\n    * will reparse all the region-metadata.xml files.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized void invalidate(FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     appMap.remove(_KEY);\n   }\n \n@@ -126,10 +135,10 @@ private static void _readAllRegionMDFiles(\n     }\n     try\n     {\n-      Enumeration files = loader.getResources(regionMDFile);\n+      Enumeration<URL> files = loader.getResources(regionMDFile);\n       while(files.hasMoreElements())\n       {\n-        URL url = (URL)files.nextElement();\n+        URL url = files.nextElement();\n         String publicId = url.toString();\n         try\n         {\n@@ -196,20 +205,16 @@ private void _put(String componentType, ComponentMetaData comp)\n     }\n     if (_map == Collections.EMPTY_MAP)\n     {\n-      _map = new HashMap(5);\n+      _map = new HashMap<String, RegionConfig>(5);\n     }\n-    ComponentMetaData old = (ComponentMetaData) _map.put(componentType, comp);\n+    RegionConfig old = _map.put(componentType, comp);\n     if (old != null)\n     {\n       _LOG.warning(\"Replaced jspUri {0} with {1} for componentType:{2}\",\n         new Object[] {old.getJspUIDef(), comp.getJspUIDef(), componentType});\n     }\n   }\n \n-  private RegionMetadata()\n-  {\n-  }\n-\n \n   static private class Handler extends DefaultHandler\n   {\n@@ -218,6 +223,7 @@ public Handler(RegionMetadata bean)\n       _bean = bean;\n     }\n \n+    @Override\n     public InputSource resolveEntity (String publicId, String systemId)\n     \tthrows SAXException\n     {\n@@ -226,12 +232,14 @@ public InputSource resolveEntity (String publicId, String systemId)\n       return new InputSource(new StringReader(\"\"));\n     }\n \n+    @Override\n     public void setDocumentLocator(Locator locator)\n     {\n       super.setDocumentLocator(locator);\n       _loc = locator;\n     }\n \n+    @Override\n     public void startElement(String uri,\n                              String localName,\n                              String qName,\n@@ -315,6 +323,7 @@ private boolean _changeState(String localName, String tag, int newState)\n       return false;\n     }\n \n+    @Override\n     public void characters(char[] ch, int start, int length)\n     {\n       switch(_state)\n@@ -330,6 +339,7 @@ public void characters(char[] ch, int start, int length)\n       }\n     }\n \n+    @Override\n     public void endElement(String uri,\n                            String localName,\n                            String qName)\n@@ -398,7 +408,7 @@ private void _addComponentMetadata()\n       _comp._trim(); // no more attributes will be added, so trim-to-size\n     }\n \n-    private Class _getClass(String javaType)\n+    private Class<?> _getClass(String javaType)\n     {\n       String className = ConvertBoundValue.getClassName(javaType);\n       try\n@@ -477,16 +487,17 @@ private void _skip(String localName)\n \n   public static final class AttributeMetaData\n   {\n-    private String _name, _default;\n-    private Class _class;\n+    private String _default;\n+    private String _name;\n+    private Class<?> _class;\n     private boolean _required = false;\n \n     public String getAttrName()\n     {\n       return _name;\n     }\n \n-    public Class getAttrClass()\n+    public Class<?> getAttrClass()\n     {\n       return _class;\n     }\n@@ -504,30 +515,37 @@ public boolean isRequired()\n \n   public static final class ComponentMetaData extends RegionConfig\n   {\n-    private String _jsp, _regionType;\n-    private List _attrs = Collections.EMPTY_LIST;\n+    @SuppressWarnings(\"unchecked\")\n+    public ComponentMetaData()\n+    {\n+      _attrs = Collections.EMPTY_LIST;\n+    }\n \n+    @Override\n     public String getDescription()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getDisplayName()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getComponentType()\n     {\n       return _regionType;\n     }\n \n+    @Override\n     public String getJspUIDef()\n     {\n       return _jsp;\n     }\n \n-    public List getAttributes()\n+    public List<AttributeMetaData> getAttributes()\n     {\n       return _attrs;\n     }\n@@ -536,7 +554,7 @@ private void _addAttribute(AttributeMetaData attr)\n     {\n       if (_attrs == Collections.EMPTY_LIST)\n       {\n-        _attrs = new ArrayList(5);\n+        _attrs = new ArrayList<AttributeMetaData>(5);\n       }\n       _attrs.add(attr);\n     }\n@@ -546,9 +564,13 @@ public void _trim()\n       if (_attrs instanceof ArrayList)\n         ((ArrayList) _attrs).trimToSize();\n     }\n+    \n+    private String _jsp;\n+    private String _regionType;\n+    private List<AttributeMetaData> _attrs;\n   }\n \n-  private Map _map = Collections.EMPTY_MAP;\n+  private Map<String, RegionConfig> _map;\n \n   private static final int _STATE_INIT = 0;\n   private static final int _STATE_SKIP = 10;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java",
                "sha": "3ce7337697094d81a32251e5b581d8f49373dd93",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java",
                "patch": "@@ -43,7 +43,7 @@ public Renderer instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return (Renderer) classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java",
                "sha": "da87a55edb5b09abd187e90a4eae8b7516126f04",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java",
                "patch": "@@ -36,13 +36,13 @@ public CoreRenderKitFactory(RenderKitFactory factory)\n     _factory = factory;\n   }\n \n-\n+  @Override\n   public void addRenderKit(String renderKitId, RenderKit renderKit)\n   {\n     _factory.addRenderKit(renderKitId, renderKit);\n   }\n \n-\n+  @Override\n   public RenderKit getRenderKit(FacesContext context, String renderKitId)\n   {\n     if (CoreRenderKit.getId().equals(renderKitId))\n@@ -53,7 +53,9 @@ public RenderKit getRenderKit(FacesContext context, String renderKitId)\n     return _factory.getRenderKit(context, renderKitId);\n   }\n \n-  public Iterator getRenderKitIds()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Iterator<String> getRenderKitIds()\n   {\n     return _factory.getRenderKitIds();\n   }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java",
                "sha": "54f0e76cdfe9b0b94bcc3478ecd2f5ecaa6aaca0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java",
                "patch": "@@ -55,6 +55,7 @@ public RenderKitBase()\n    * @exception NullPointerException if <code>rendererType</code> or\n    *  <code>renderer</code> is null\n    */\n+  @Override\n   public void addRenderer(\n      String family,\n      String rendererType,\n@@ -109,6 +110,7 @@ public void addRenderer(String family,\n    * @exception NullPointerException if <code>rendererType</code>\n    *  is <code>null</code>\n    */\n+  @Override\n   public Renderer getRenderer(String family, String rendererType)\n   {\n     Renderer renderer = findRenderer(family, rendererType);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java",
                "sha": "f39058aacc505e6591088906428dc5fa0cdd7d72",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java",
                "patch": "@@ -37,6 +37,7 @@\n     return Service.getService(getRenderKit(), serviceClass);\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(\n     Writer writer,\n     String contentTypeList,\n@@ -49,17 +50,17 @@ public ResponseWriter createResponseWriter(\n     return createDecoratedResponseWriter(out);\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(\n     OutputStream out)\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.createResponseStream(out);\n+    return getRenderKit().createResponseStream(out);\n   }\n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.getResponseStateManager();\n+    return getRenderKit().getResponseStateManager();\n   }\n \n   protected ResponseWriter createDecoratedResponseWriter(\n@@ -68,6 +69,7 @@ protected ResponseWriter createDecoratedResponseWriter(\n     return delegate;\n   }\n \n+  @Override\n   protected Renderer findRenderer(\n     String componentFamily,\n     String rendererType)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java",
                "sha": "b9ae330d809dcf8068b4600169a40d4e198794ac",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java",
                "patch": "@@ -16,7 +16,7 @@\n package org.apache.myfaces.trinidadinternal.renderkit;\n \n import java.io.IOException;\n-import java.util.Iterator;\n+import java.util.List;\n \n import javax.faces.component.UIComponent;\n import javax.faces.component.UIForm;\n@@ -40,6 +40,7 @@ private RenderUtils()\n   /**\n    * Encodes a component and all of its children.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void encodeRecursive(FacesContext context,\n                                      UIComponent component)\n     throws IOException\n@@ -55,9 +56,10 @@ static public void encodeRecursive(FacesContext context,\n       {\n         if (component.getChildCount() > 0)\n         {\n-          Iterator children = component.getChildren().iterator();\n-          while (children.hasNext())\n-            encodeRecursive(context, (UIComponent) children.next());\n+          for(UIComponent child : (List<UIComponent>)component.getChildren())\n+          {\n+            encodeRecursive(context, child);\n+          }\n         }\n       }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java",
                "sha": "fc4fc08fef4eadcf1fe99b17410c4d7258590297",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java",
                "patch": "@@ -39,7 +39,7 @@\n    */\n   static public RenderingContext getCurrentInstance()\n   {\n-    return (RenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   static public final Object INACCESSIBLE_MODE =\n@@ -55,7 +55,7 @@ public RenderingContext()\n   /**\n    * A map of properties specific to rendering.\n    */\n-  abstract public Map           getProperties();\n+  abstract public Map<Object, Object> getProperties();\n \n   abstract public TrinidadAgent getAgent();\n   /**\n@@ -101,8 +101,8 @@ public String getTranslatedString(String key)\n \n \n   abstract public String getStyleClass(String styleClass);\n-  abstract public void   setSkinResourceKeyMap(Map mapping);\n-  abstract public Map    getSkinResourceKeyMap();\n+  abstract public void   setSkinResourceKeyMap(Map<String, String> mapping);\n+  abstract public Map<String, String> getSkinResourceKeyMap();\n   abstract public boolean isRightToLeft();\n   abstract public String getOutputMode();\n   abstract public Object getAccessibilityMode();\n@@ -128,7 +128,7 @@ public void release()\n   {\n     Object o = _CURRENT_CONTEXT.get();\n     // Clean up first...\n-    _CURRENT_CONTEXT.set(null);\n+    _CURRENT_CONTEXT.remove();\n \n     // Then see if there's a problem, and scream if there is one\n     if (o == null)\n@@ -164,7 +164,9 @@ protected void attach()\n   }\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<RenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<RenderingContext>();\n+  \n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(RenderingContext.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java",
                "sha": "0e200af1fca081a1e119c5a220c29e7d34120f83",
                "status": "modified"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java",
                "changes": 74,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 27,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java",
                "patch": "@@ -21,7 +21,6 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n@@ -163,7 +162,9 @@ public CoreRenderKit()\n   static public void saveDialogPostbackValues(\n     String returnId)\n   {\n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     pageFlowScope.put(_RETURN_ID, returnId);\n   }\n \n@@ -172,13 +173,14 @@ static public void saveDialogPostbackValues(\n   //\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map          processParameters,\n-    boolean      useWindow,\n-    Map          windowProperties)\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties)\n   {\n     // If we're not being asked to use a separate window,\n     // just fallback on the default launchDialog() code\n@@ -194,17 +196,19 @@ public boolean launchDialog(\n     String formId = RenderUtils.getFormId(context, source);\n \n     if (windowProperties == null)\n-      windowProperties = new HashMap();\n+      windowProperties = new HashMap<String,Object>();\n \n     // Copy properties from the source component to the dialog properties\n     if (source != null)\n     {\n-      Map sourceAttrs = source.getAttributes();\n+      Map<String, Object> sourceAttrs = source.getAttributes();\n       _copyProperty(windowProperties, \"width\", sourceAttrs, \"windowWidth\");\n       _copyProperty(windowProperties, \"height\", sourceAttrs, \"windowHeight\");\n     }\n \n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     if (processParameters != null)\n       pageFlowScope.putAll(processParameters);\n \n@@ -254,12 +258,14 @@ public boolean returnFromDialog(\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   public boolean isReturning(\n     FacesContext context,\n     UIComponent  source)\n   {\n-    Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameterMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object returning = parameterMap.get(RETURN_PARAM);\n     if ((returning == null) || \"\".equals(returning))\n       return false;\n@@ -277,12 +283,14 @@ public boolean isReturning(\n   // BEGIN ExtendedRenderKitService\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean shortCircuitRenderView(\n     FacesContext context) throws IOException\n   {\n     if (PartialPageUtils.isPartialRequest(context))\n     {\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = \n+        context.getExternalContext().getRequestMap();\n \n       UIViewRoot originalRoot = (UIViewRoot) requestMap.get(\n                          TrinidadPhaseListener.INITIAL_VIEW_ROOT_KEY);\n@@ -436,17 +444,20 @@ public void encodeFinally(FacesContext context)\n   //\n \n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n     return _rsm;\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(OutputStream out)\n   {\n     // =-=AEW What to do here???\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(Writer writer,\n                                              String contentTypeList,\n                                              String characterEncoding)\n@@ -555,31 +566,40 @@ private void _addBasicHTMLRenderKit()\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private List<DialogRequest> _getDialogList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<DialogRequest> l = (List<DialogRequest>)\n-      requestMap.get(_DIALOG_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<DialogRequest> l = \n+      (List<DialogRequest>)requestMap.get(_DIALOG_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<DialogRequest>();\n       requestMap.put(_DIALOG_LIST_KEY, l);\n     }\n \n     return l;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private List<String> _getScriptList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<String> l = (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<String> l = \n+      (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<String>();\n       requestMap.put(_SCRIPT_LIST_KEY, l);\n     }\n \n@@ -640,15 +660,15 @@ private Writer _getHtmlWriter(FacesContext context) throws IOException\n   };\n \n \n-  static private void _copyProperty(\n-    Map    toMap,\n-    Object toKey,\n-    Map    fromMap,\n-    Object fromKey)\n+  static private <K1, K2, V> void _copyProperty(\n+    Map<K1, V> toMap,\n+    K1 toKey,\n+    Map<K2, ? extends V> fromMap,\n+    K2 fromKey)\n   {\n     if (!toMap.containsKey(toKey))\n     {\n-      Object o = fromMap.get(fromKey);\n+      V o = fromMap.get(fromKey);\n       if (o != null)\n         toMap.put(toKey, o);\n     }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java",
                "sha": "6313591bdc031c9686562038e42a09a842419112",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 26,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java",
                "patch": "@@ -145,6 +145,7 @@ static public char toChar(Object o)\n   }\n \n \n+  @Override\n   public final void encodeBegin(FacesContext context,\n                           UIComponent component) throws IOException\n   {\n@@ -159,12 +160,14 @@ public final void encodeBegin(FacesContext context,\n     }\n   }\n \n+  @Override\n   public final void encodeChildren(FacesContext context, UIComponent component)\n   {\n     // encodeChildren() is fairly useless - it's simpler to just\n     // put the output in encodeEnd(), or use the encodeAll() hook\n   }\n \n+  @Override\n   public final void encodeEnd(FacesContext context,\n                         UIComponent component) throws IOException\n   {\n@@ -232,6 +235,7 @@ protected void encodeAll(\n    * can be used if you don't need that check.)\n    * =-=AEW Ugh.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected void encodeChild(\n     FacesContext context,\n     UIComponent  child) throws IOException\n@@ -246,16 +250,18 @@ protected void encodeChild(\n     {\n       if (child.getChildCount() > 0)\n       {\n-        Iterator children = child.getChildren().iterator();\n-        while (children.hasNext())\n-          RenderUtils.encodeRecursive(context, (UIComponent) children.next());\n+        for(UIComponent subChild : (List<UIComponent>)child.getChildren())\n+        {\n+          RenderUtils.encodeRecursive(context, subChild);\n+        }\n       }\n     }\n     \n     child.encodeEnd(context);\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected final void encodeAllChildren(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -264,14 +270,12 @@ protected final void encodeAllChildren(\n     if (childCount == 0)\n       return;\n     \n-    List children   = component.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n-      if (!child.isRendered())\n-        continue;\n-\n-      encodeChild(context, child);\n+      if (child.isRendered())\n+      {\n+        encodeChild(context, child);\n+      }\n     }\n   }\n \n@@ -442,18 +446,19 @@ static public UIComponent getFacet(\n    * Returns true if the component has children and at least\n    * one has rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public boolean hasRenderedChildren(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return false;\n       \n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         return true;\n+      }\n     }\n     \n     return false;\n@@ -462,19 +467,20 @@ static public boolean hasRenderedChildren(UIComponent component)\n   /**\n    * Returns the total number of children with rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public int getRenderedChildCount(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return 0;\n       \n     int total = 0;\n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         total++;\n+      }\n     }\n     \n     return total;\n@@ -488,26 +494,20 @@ static public int getRenderedChildCount(UIComponent component)\n    * {@link #NO_CHILD_INDEX} if there is none.\n    */\n   public static int getNextRenderedChildIndex(\n-    List components,\n+    List<UIComponent> components,\n     int  afterChildIndex\n     )\n   {\n-    int childCount = components.size();\n     int childIndex = afterChildIndex + 1;\n-\n-    for (; childIndex < childCount; childIndex++)\n+    Iterator<UIComponent> iter = components.listIterator(childIndex);\n+    for(; iter.hasNext(); childIndex++)\n     {\n-      UIComponent currChild = (UIComponent)components.get(childIndex);\n-\n-      if (currChild.isRendered())\n+      if(iter.next().isRendered())\n       {\n         return childIndex;\n       }\n     }\n \n     return NO_CHILD_INDEX;\n   }\n-\n-  \n-\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java",
                "sha": "69f355b5e80d0af89270c91abfcf484fc979d5e4",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java",
                "changes": 77,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 24,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java",
                "patch": "@@ -62,6 +62,8 @@ public CoreRenderingContext()\n     FacesContext context = FacesContext.getCurrentInstance();\n     RequestContext afContext = RequestContext.getCurrentInstance();\n \n+    _properties = new HashMap<Object, Object>();\n+    \n     _outputMode = afContext.getOutputMode();\n     _agent = _initializeAgent(context, afContext.getAgent(), _outputMode);\n \n@@ -122,16 +124,19 @@ public void setLinkDisabled(boolean isDisabled)\n \n   // Implementation of AdfRenderingContext\n \n-  public Map getProperties()\n+  @Override\n+  public Map<Object, Object> getProperties()\n   {\n     return _properties;\n   }\n \n+  @Override\n   public TrinidadAgent getAgent()\n   {\n     return _agent;\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     if (_localeContext != null)\n@@ -142,12 +147,14 @@ public boolean isRightToLeft()\n     return RequestContext.getCurrentInstance().isRightToLeft();\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return _outputMode;\n   }\n \n \n+  @Override\n   public Object getAccessibilityMode()\n   {\n     return _accessibilityMode;\n@@ -156,23 +163,27 @@ public Object getAccessibilityMode()\n   /**\n    * This will create a FormData object if it's null.\n    */\n+  @Override\n   public FormData getFormData()\n   {\n     assert(_formData != null);\n     return _formData;\n   }\n \n+  @Override\n   public void setFormData(FormData formData)\n   {\n     _formData = formData;\n   }\n \n+  @Override\n   public void clearFormData()\n   {\n     _formData = null;\n   }\n \n \n+  @Override\n   public Skin getSkin()\n   {\n     return _skin;\n@@ -181,6 +192,7 @@ public Skin getSkin()\n   /**\n    * Get an interface that can be used for style lookups and generation.\n    */\n+  @Override\n   public StyleContext getStyleContext()\n   {\n     if (_styleContext == null)\n@@ -195,6 +207,7 @@ public StyleContext getStyleContext()\n   }\n \n \n+  @Override\n   public LocaleContext getLocaleContext()\n   {\n     // Initialize the locale context lazily, because we may\n@@ -209,11 +222,13 @@ public LocaleContext getLocaleContext()\n     return _localeContext;\n   }\n \n+  @Override\n   public PartialPageContext getPartialPageContext()\n   {\n     return _pprContext;\n   }\n \n+  @Override\n   public String getStyleClass(String styleClass)\n   {\n     if (styleClass == null) return null;\n@@ -222,7 +237,7 @@ public String getStyleClass(String styleClass)\n     String shortenedStyle = null;\n     if (_styleMap != null)\n     {\n-      shortenedStyle = (String) _styleMap.get(styleClass);\n+      shortenedStyle = _styleMap.get(styleClass);\n     }\n \n     if (shortenedStyle != null)\n@@ -238,7 +253,7 @@ public String getStyleClass(String styleClass)\n     return styleClass;\n   }\n \n-\n+  @Override\n   public Icon getIcon(String iconName)\n   {\n     iconName = getSkinResourceMappedKey(iconName);\n@@ -280,7 +295,7 @@ public Icon getIcon(String iconName)\n   /**\n    * Store a map that provides abbreviations of styles.\n    */\n-  public void setStyleMap(Map mapping)\n+  public void setStyleMap(Map<String, String> mapping)\n   {\n     _styleMap = mapping;\n   }\n@@ -289,7 +304,8 @@ public void setStyleMap(Map mapping)\n   /**\n    * Store a Map that maps a skin's resource keys from one key to another.\n    */\n-  public void setSkinResourceKeyMap(Map mapping)\n+  @Override\n+  public void setSkinResourceKeyMap(Map<String, String> mapping)\n   {\n     _skinResourceKeyMap = mapping;\n   }\n@@ -298,18 +314,19 @@ public void setSkinResourceKeyMap(Map mapping)\n   /**\n    * Get the _skinResourceKeyMap Map.\n    */\n-  public Map getSkinResourceKeyMap()\n+  @Override\n+  public Map<String, String> getSkinResourceKeyMap()\n   {\n     return _skinResourceKeyMap;\n   }\n \n   protected String getSkinResourceMappedKey(String key)\n   {\n-    Map keyMap = getSkinResourceKeyMap();\n+    Map<String, String> keyMap = getSkinResourceKeyMap();\n \n     if (keyMap != null)\n     {\n-      String mappedKey = (String) keyMap.get(key);\n+      String mappedKey = keyMap.get(key);\n       // if it isn't in the map, just use the key itself.\n       if (mappedKey != null)\n       {\n@@ -415,11 +432,14 @@ private void _initializePPR(\n    * Get the directory for temporary files.\n    * @todo: move into the util package?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public String getTemporaryDirectory(FacesContext fContext)\n   {\n     String path = null;\n \n-    Map applicationMap = fContext.getExternalContext().getApplicationMap();\n+    Map<String, Object> applicationMap = \n+      fContext.getExternalContext().getApplicationMap();\n+    \n     if (applicationMap != null)\n     {\n       // In general, write to the Servlet spec'd temporary directory\n@@ -482,23 +502,32 @@ private void _initializeLocaleContext(\n   }\n \n \n-  private Skin               _skin;\n-  private FormData           _formData;\n-  private TrinidadAgent      _agent;\n-  private Map                _styleMap;\n-  private Map                _skinResourceKeyMap;\n-  private String             _outputMode;\n-  private Object             _accessibilityMode;\n-  private PartialPageContext _pprContext;\n-  private LocaleContext      _localeContext;\n-  private StyleContext       _styleContext;\n-  private Map                _properties = new HashMap();\n-  private int                _linkStyleDisabledCount = 0;\n-  private boolean            _isLinkDisabled = false;\n+  private Skin                _skin;\n+  private FormData            _formData;\n+  private TrinidadAgent       _agent;\n+  private Map<String, String> _styleMap;\n+  private Map<String, String> _skinResourceKeyMap;\n+  private String              _outputMode;\n+  private Object              _accessibilityMode;\n+  private PartialPageContext  _pprContext;\n+  private LocaleContext       _localeContext;\n+  private StyleContext        _styleContext;\n+  private Map<Object, Object> _properties;\n+  private int                 _linkStyleDisabledCount = 0;\n+  private boolean             _isLinkDisabled = false;\n \n   // Maps describing the capabilities of our output modes\n-  static private final Map _PRINTABLE_CAPABILITIES = new HashMap();\n-  static private final Map _EMAIL_CAPABILITIES = new HashMap();\n+  // -= Simon Lessard =-\n+  // FIXME: Cannot use CapabilityKey in the generic definition because \n+  //        CapabilityKey is not in the public API and those map are \n+  //        used as a parameter in an API call receiving a \n+  //        Map<Object, Object> argument\n+  static private final Map<Object, Object> _PRINTABLE_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n+  static private final Map<Object, Object> _EMAIL_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n   static\n   {\n     _PRINTABLE_CAPABILITIES.put(TrinidadAgent.CAP_INTRINSIC_EVENTS,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java",
                "sha": "5a9965b81390732f6cc263eb898d0e33b50a515a",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java",
                "patch": "@@ -59,6 +59,7 @@\n    *       instead of buffering it.\n    * @todo Don't directly write out hidden input field;  use an abstraction\n    */\n+  @Override\n   public void writeState(\n     FacesContext context,\n     StateManager.SerializedView serializedView) throws IOException\n@@ -102,6 +103,7 @@ protected String encodeSerializedViewAsString(\n     return retVal;\n   }\n \n+  @Override\n   public Object getTreeStructureToRestore(FacesContext context,\n                                           String viewId)\n   {\n@@ -112,6 +114,7 @@ public Object getTreeStructureToRestore(FacesContext context,\n     return view[0];\n   }\n \n+  @Override\n   public Object getComponentStateToRestore(FacesContext context)\n   {\n     Object[] view = _restoreSerializedView(context);\n@@ -127,17 +130,20 @@ public Object getComponentStateToRestore(FacesContext context)\n    * @todo ensure that the caching never gets confused by two\n    *       different views being reconstituted in the same request?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private Object[] _restoreSerializedView(\n      FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Object[] view = (Object[]) requestMap.get(_CACHED_SERIALIZED_VIEW);\n     if (view == null)\n     {\n-      Map requestParamMap =\n+      Map<String, String> requestParamMap =\n          context.getExternalContext().getRequestParameterMap();\n \n-      String stateString = (String) requestParamMap.get(_STATE_FIELD_NAME);\n+      String stateString = requestParamMap.get(_STATE_FIELD_NAME);\n       if (stateString == null)\n         return null;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java",
                "sha": "948f9dea315f7b5c1669537793b7a22699c0ea7d",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 12,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java",
                "patch": "@@ -34,15 +34,16 @@\n  */\n class DialogRequest\n {\n+  @SuppressWarnings(\"unchecked\")\n   public DialogRequest(\n-    UIViewRoot targetRoot,\n-    String     clientId,\n-    String     formId,\n-    Map        dialogProperties\n+    UIViewRoot         targetRoot,\n+    String             clientId,\n+    String             formId,\n+    Map<String,Object> dialogProperties\n     )\n   {\n-    _clientId          = clientId;\n-    _formId             = formId;\n+    _clientId = clientId;\n+    _formId   = formId;\n \n     if (dialogProperties == null)\n       dialogProperties = Collections.EMPTY_MAP;\n@@ -54,6 +55,7 @@ public DialogRequest(\n                                   targetRoot,\n                                   CoreRenderer.toString(width),\n                                   CoreRenderer.toString(height));\n+    \n     _dialogProperties  = dialogProperties;\n   }\n \n@@ -99,10 +101,10 @@ public void renderLaunchJavascript(\n       out.writeText(_DEFAULT_HEIGHT, null);\n     }\n \n-    Iterator propertiesIter = _dialogProperties.keySet().iterator();\n+    Iterator<String> propertiesIter = _dialogProperties.keySet().iterator();\n     while (propertiesIter.hasNext())\n     {\n-      Object key = propertiesIter.next();\n+      String key = propertiesIter.next();\n       Object value = _dialogProperties.get(key);\n       // =-=AEW When to put in quotes????\n       if (value != null)\n@@ -143,10 +145,10 @@ static private synchronized String _getDialogWindowName()\n     return \"ADFDialog\" + _sCount++;\n   }\n \n-  private final String     _clientId;\n-  private final String     _formId;\n-  private final String     _url;\n-  private final Map        _dialogProperties;\n+  private final String             _clientId;\n+  private final String             _formId;\n+  private final String             _url;\n+  private final Map<String,Object> _dialogProperties;\n \n \n   // Some default widths and heights to avoid popping up huge",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java",
                "sha": "c13d641347109af82cdffa5a375f18104be8f323",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java",
                "patch": "@@ -30,9 +30,9 @@ public DesktopRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;\n   }\n-\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java",
                "sha": "9336b15177a770856af76add7eaf0f7e169223d3",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java",
                "patch": "@@ -64,6 +64,7 @@ protected DesktopTableRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,6 +82,7 @@ public DesktopTableRenderer()\n     this(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext context,\n     RenderingContext arc,\n@@ -226,6 +228,7 @@ protected final void renderControlBarLink(\n       writer.writeText(LINKS_DIVIDER_TEXT, null);\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -241,6 +244,7 @@ protected void renderSubControlBar(\n     renderSelectionLinks(context, arc, tContext, component);\n   }\n \n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     RenderingContext arc,\n@@ -504,6 +508,7 @@ private void _writeIEscrollScript(\n \n \n   // render the control bar\n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -626,6 +631,7 @@ protected void renderTableRows(\n    * renders attributes on the outermost table element.\n    * this includes width, cellpadding, cellspacing, border.\n    */\n+  @Override\n   protected void renderTableAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -815,6 +821,7 @@ private void _renderTableRows(\n     final UIComponent detail = tContext.getDetail();\n     final RenderStage renderStage = tContext.getRenderStage();\n     TableUtils.RowLoop loop = new TableUtils.RowLoop() {\n+      @Override\n       protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n         throws IOException\n       {\n@@ -939,6 +946,7 @@ protected final void renderRegularHeaders(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderRegularColumns(\n     FacesContext          context,\n     TableRenderingContext tContext,\n@@ -948,7 +956,7 @@ private void _renderRegularColumns(\n     // this renders a whole bunch of <TH>...</TH> elements.\n     // part of #1313720, base column header count on\n     // table child count\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int colCount  = children.size();\n     int[] hidden = tContext.getHiddenColumns();\n     ColumnData colData = tContext.getColumnData();\n@@ -975,6 +983,7 @@ private void _renderRegularColumns(\n   /**\n    * @todo Re-fix bug 3211593 (see below)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected final void renderFooter(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -1017,14 +1026,12 @@ protected final void renderFooter(\n         colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                0/*logicalColumnIndex*/);\n \n-        List children = component.getChildren();\n-        int count = children.size();\n-\n-        for (int i = 0; i < count; i++)\n+        for(UIComponent child : (List<UIComponent>)component.getChildren())\n         {\n-          UIComponent child = (UIComponent) children.get(i);\n           if (child.isRendered())\n+          {\n             encodeChild(context, child);\n+          }\n         }\n       }\n       writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n@@ -1058,52 +1065,61 @@ public AllDetail(boolean disclosed)\n       _disclosed = disclosed;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n        FacesBean           bean)\n     {\n     }\n \n+    @Override\n     protected boolean isTableAllDisclosure()\n     {\n       return true;\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       return \"all\";\n     }\n \n \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       return _disclosed;\n     }\n \n+    @Override\n     protected String getDisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_HIDE_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getUndisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_SHOW_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getLinkId(String rootId, boolean disclosed)\n     {\n       String suffix = (disclosed ? \"ha\" : \"sa\");\n       return XhtmlUtils.getCompositeId(rootId, suffix);\n     }\n \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java",
                "sha": "833e71d31e1e38b92e86d262d1c0352c104dbd95",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java",
                "patch": "@@ -58,9 +58,12 @@ public TrainRenderer()\n   \n   /**\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map requestMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestMap = \n+      context.getExternalContext().getRequestParameterMap();\n \n     Object event = requestMap.get(XhtmlConstants.EVENT_PARAM);\n \n@@ -135,11 +138,13 @@ public void decode(FacesContext context, UIComponent component)\n   /**\n    * @return\n    */\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext context, \n     RenderingContext arc, \n@@ -190,6 +195,7 @@ protected void encodeAll(\n    * This is how we can render both the user defined styleClass and our\n    * component style class\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext context, \n     RenderingContext arc, \n@@ -536,7 +542,7 @@ private void _renderLink(\n \n     renderStyleClass(context, arc, styleClass);\n \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -799,7 +805,8 @@ public TrainState()\n \n   // for now keep the OraLink/OraDisabledLink styles on the 'a', and\n   // append train link style class.\n-  private static final Map _RESOURCE_KEY_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP = \n+    new HashMap<String, String>();\n   private static final String _TRAIN_DISABLED_LINK = \n     XhtmlConstants.LINK_DISABLED_STYLE_CLASS + \" \" + \n     XhtmlConstants.AF_PROCESS_TRAIN_LINK_STYLE_CLASS;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java",
                "sha": "60b1c13b487ba436f60460e97f280d377b6c2c61",
                "status": "modified"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java",
                "patch": "@@ -69,6 +69,7 @@ public TreeTableRenderer()\n     super(CoreTreeTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -83,13 +84,17 @@ protected void findTypeConstants(FacesBean.Type type)\n    *  DisclosureEvent\n    * @todo deal with null and exceptions\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(\n     FacesContext context,\n     UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     if (component.getClientId(context).equals(source))\n     {\n@@ -107,6 +112,7 @@ public void decode(\n    * Creates the correct subclass of the TableRenderingContext to\n    * use for this Renderer.\n    */\n+  @Override\n   protected TableRenderingContext createRenderingContext(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -121,6 +127,7 @@ protected TableRenderingContext createRenderingContext(\n    * @return true if the table was empty, and an alternative empty\n    * version was shown, false otherwise.\n    */\n+  @Override\n   protected boolean renderTableWithoutColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -133,6 +140,7 @@ protected boolean renderTableWithoutColumns(\n   /**\n    * render all pieces of the table\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -180,6 +188,7 @@ protected boolean isImmediate(UIComponent component, FacesBean bean)\n    * Render the navigation header bars, i.e. all the bars that appear above the\n    * actual data table including the breadcrumbs at the end.\n    */\n+  @Override\n   protected void renderNavigationHeaderBars(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -191,6 +200,7 @@ protected void renderNavigationHeaderBars(\n     _renderBreadCrumbs(context, arc, tContext, component, bean);\n   }\n \n+  @Override\n   protected final void renderRangePagingControl(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -213,6 +223,7 @@ protected final void renderRangePagingControl(\n     }\n   }\n \n+  @Override\n   protected boolean hasControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -224,6 +235,7 @@ protected boolean hasControlBarLinks(\n       isExpandAllEnabled(component);\n   }\n \n+  @Override\n   protected void renderControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -269,6 +281,7 @@ protected boolean isExpandAllEnabled(UIComponent component)\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @Override\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -310,6 +323,7 @@ protected int renderSpecialColumns(\n   /**\n    * render all the table rows\n    */\n+  @Override\n   protected void renderTableRows(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -413,18 +427,20 @@ private void _renderBreadCrumbs(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderTableRows(\n     FacesContext          context,\n     final RenderingContext   arc,\n     final TreeTableRenderingContext ttrc) throws IOException\n   {\n     final UIXTreeTable treeTableBase = ttrc.getUIXTreeTable();\n     final ResponseWriter writer = context.getResponseWriter();\n-    final RowKeySet treeState = treeTableBase.getDisclosedRowKeys();\n+    final RowKeySet<Object> treeState = treeTableBase.getDisclosedRowKeys();\n     final int specialColCount = _getSpecialColCount(ttrc);\n \n     TableUtils.RowLoop loop = new TableUtils.RowLoop()\n     {\n+      @Override\n       protected void loop(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -433,6 +449,7 @@ protected void loop(FacesContext context, CollectionComponent treeTable)\n         processRow(context, treeTable);\n       }\n \n+      @Override\n       protected void processRowImpl(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -520,6 +537,7 @@ private int _getSpecialColCount(\n \n   private static final class BreadCrumbsRenderer extends org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BreadCrumbsRenderer\n   {\n+    @Override\n     protected void renderLink(\n       FacesContext context,\n       RenderingContext arc,\n@@ -547,7 +565,7 @@ protected void renderLink(\n       }\n       Object oldPath = tree.getRowKey();\n       Object focusRowKey = ttrc.getFocusRowKey();\n-      List focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n+      List<Object> focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n       Object crumbPath = (renderedCount < focusPath.size())\n         ? focusPath.get(renderedCount)\n         : focusRowKey;\n@@ -566,11 +584,13 @@ protected void renderLink(\n       out.endElement(\"a\");\n     }\n \n+    @Override\n     protected boolean hasChildren(UIComponent component)\n     {\n       return false; // do not render the columns. only the pathStamp\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n@@ -580,6 +600,7 @@ protected boolean shouldRenderId(\n       return false;\n     }\n \n+    @Override\n     protected UIComponent getStamp(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -592,10 +613,13 @@ protected UIComponent getStamp(\n     }\n   }\n \n-  protected Map createResourceKeyMap()\n+  @Override\n+  protected Map<String, String> createResourceKeyMap()\n   {\n-    Map tablemap = super.createResourceKeyMap();\n-    Map map = ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    Map<String, String> tablemap = super.createResourceKeyMap();\n+    Map<String, String> map = \n+      ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    \n     // we need a resource key map since we are using a navigationPath.\n     // and we are using table for the styles\n     map.put(XhtmlConstants.AF_NAVIGATION_PATH_SEPARATOR_ICON_NAME,\n@@ -610,6 +634,7 @@ protected Map createResourceKeyMap()\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_TOP_STYLE);\n     map.put(XhtmlConstants.AF_TABLE_CONTROL_BAR_BOTTOM_STYLE,\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_BOTTOM_STYLE);\n+    \n     return Collections.unmodifiableMap(map);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java",
                "sha": "ef0bbdfaee1c7aba06def2dab046a0a44761e9a9",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java",
                "patch": "@@ -58,6 +58,7 @@\n   /**\n    * @todo Integrate the time zone with RequestContext (somehow)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n@@ -181,16 +182,18 @@ static public void service(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static public boolean processReturnDialog(\n     FacesContext context\n     )\n   {\n-    Map requestParameters = context.getExternalContext().\n-                               getRequestParameterMap();\n-    String event = (String) requestParameters.get(XhtmlConstants.EVENT_PARAM);\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String event = requestParameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.DATE_EVENT.equals(event))\n     {\n-      String value = (String) requestParameters.get(XhtmlConstants.VALUE_PARAM);\n+      String value = requestParameters.get(XhtmlConstants.VALUE_PARAM);\n       Date date;\n       try\n       {\n@@ -216,13 +219,16 @@ else if (XhtmlConstants.CANCEL_EVENT.equals(event))\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static String __getParam(\n     FacesContext context,\n     String name\n     )\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String value = (String) requestParams.get(name);\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String value = requestParams.get(name);\n     if (value == null || value.equals(\"\"))\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java",
                "sha": "8e0bbfbf308085628e1a2c6a7cfd291aef22a85b",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java",
                "patch": "@@ -36,13 +36,15 @@\n  */\n class CalendarUtils\n {\n+  @SuppressWarnings(\"unchecked\")\n   public static CoreChooseDate createChooseDate(FacesContext context)\n   {\n     final String id = CalendarDialogJSP.__getParam(context,\n                                                    XhtmlConstants.SOURCE_PARAM);\n     \n     CoreChooseDate ccd = new CoreChooseDate()\n     {\n+      @Override\n       public String getClientId(FacesContext context)\n       {\n         return id;\n@@ -68,15 +70,15 @@ public String getClientId(FacesContext context)\n     if (selectedTimeString != null)\n     {\n       ccd.getAttributes().put(\"value\",\n-                                   parseTime(selectedTimeString));\n+                              parseTime(selectedTimeString));\n     }\n \n     String displayTimeString = CalendarDialogJSP.__getParam(context,\n                                                             \"scrolledValue\");\n     if (displayTimeString != null)\n     {\n       ccd.getAttributes().put(\"scrolledValue\",\n-                                   parseTime(displayTimeString));\n+                              parseTime(displayTimeString));\n     }\n \n     return ccd;\n@@ -140,13 +142,11 @@ private static long _adjustTimeZone(long dateValueInMs)\n     // maximum date (in ChooseDateRenderer).\n     if (tzOffset < 0)\n     {\n-      tzOffset = (long)Math.max((float)tzOffset, \n-                                (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-      tzOffset = (long)Math.min((float)tzOffset, \n-                                (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n     \n     return dateValueInMs + tzOffset;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java",
                "sha": "0380b8eaa6996b040de5be3719eee32465179d06",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java",
                "patch": "@@ -51,10 +51,12 @@\n  */\n class ColorPickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n     \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     CoreDocument doc = new CoreDocument();\n@@ -81,7 +83,7 @@ static public void service(FacesContext context)\n     sic.setOnkeypress(\"if(_getKC(event)==13){selectColor();return false}\");\n     Converter converter = _getConverter(requestParams);\n     Object value = \n-      converter.getAsObject(context, sic, (String)requestParams.get(\"value\"));\n+      converter.getAsObject(context, sic, requestParams.get(\"value\"));\n     sic.setConverter(converter);\n     sic.setValue(value);\n     sic.setChooseId(\"choose\");\n@@ -134,9 +136,9 @@ static public void service(FacesContext context)\n     doc.getChildren().add(script);\n   }\n \n-  static private Converter _getConverter(Map requestParams)\n+  static private Converter _getConverter(Map<String, String> requestParams)\n   {\n-    String pattern = (String) requestParams.get(\"pattern\");\n+    String pattern = requestParams.get(\"pattern\");\n     boolean allowsTransparent =\n       \"true\".equals(requestParams.get(\"allowsTransparent\"));\n     ColorConverter converter = new ColorConverter();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java",
                "sha": "85914d86ef2b94157ee94d35421e355d86dc11dc",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 13,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java",
                "patch": "@@ -26,7 +26,6 @@\n import javax.faces.component.UIViewRoot;\n import javax.faces.context.FacesContext;\n \n-import org.apache.myfaces.trinidad.context.RequestContext;\n import org.apache.myfaces.trinidad.component.core.CoreImportScript;\n import org.apache.myfaces.trinidad.component.core.output.CoreOutputText;\n import org.apache.myfaces.trinidad.component.html.HtmlHtml;\n@@ -35,7 +34,6 @@\n import org.apache.myfaces.trinidad.component.html.HtmlScript;\n \n import org.apache.myfaces.trinidadinternal.context.PageFlowScopeProviderImpl;\n-import org.apache.myfaces.trinidadinternal.renderkit.RenderUtils;\n import org.apache.myfaces.trinidadinternal.renderkit.core.CoreRenderKit;\n import org.apache.myfaces.trinidadinternal.share.url.EncoderUtils;\n \n@@ -94,6 +92,7 @@ static public String getRedirectURL(FacesContext context,\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static void service(FacesContext context) throws IOException\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -103,10 +102,12 @@ static void service(FacesContext context) throws IOException\n     HtmlHtml root = new HtmlHtml();\n     context.getViewRoot().getChildren().add(root);\n \n-    Map requestParameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     // Save the return ID - and do so before generating the\n     // link to the frames!\n-    String returnId = (String) requestParameters.get(_RETURN_ID_PARAM);\n+    String returnId = requestParameters.get(_RETURN_ID_PARAM);\n     if (returnId != null)\n       CoreRenderKit.saveDialogPostbackValues(returnId);\n \n@@ -148,13 +149,13 @@ static void service(FacesContext context) throws IOException\n        context.getExternalContext().getRequestParameterValuesMap());\n \n     // grab any sizing parameters\n-    String widthParam = (String) requestParameters.get(_MIN_WIDTH_PARAM);\n+    String widthParam = requestParameters.get(_MIN_WIDTH_PARAM);\n     boolean gotWidth = (widthParam != null);\n \n-    String heightParam = (String) requestParameters.get(_MIN_HEIGHT_PARAM);\n+    String heightParam = requestParameters.get(_MIN_HEIGHT_PARAM);\n     boolean gotHeight = (heightParam != null);\n \n-    String viewIdRedirect = (String) requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n+    String viewIdRedirect = requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n     if (viewIdRedirect != null)\n     {\n       ViewHandler vh =\n@@ -169,7 +170,7 @@ static void service(FacesContext context) throws IOException\n     }\n     else\n     {\n-      String internalRedirect = (String) requestParameters.get(\"_red\");\n+      String internalRedirect = requestParameters.get(\"_red\");\n       if (internalRedirect != null)\n       {\n         String path = GenericEntry.getGenericEntryURL(context,\n@@ -241,25 +242,25 @@ static void service(FacesContext context) throws IOException\n   }\n \n   static private String _getQueryString(\n-    Map                parameters) throws IOException\n+    Map<String, String[]> parameters) throws IOException\n   {\n     // Bug #3419817 support request dispatch for Portal\n     // build up the encoded query string from request parameters\n     // this will work for both direct requests and include/forward requests\n     StringBuffer buf = new StringBuffer();\n-    Iterator paramNames = parameters.keySet().iterator();\n+    Iterator<String> paramNames = parameters.keySet().iterator();\n     boolean isFirst = true;\n \n     // iterate through the request parameter names\n     while (paramNames.hasNext())\n     {\n-      String paramName = (String)paramNames.next();\n+      String paramName = paramNames.next();\n \n       // add the parameter to the query string unless skipped\n       if (!_SKIP_PARAMS.contains(paramName))\n       {\n         // the parameter might appear on the request more than once\n-        String[] paramValues = (String[]) parameters.get(paramName);\n+        String[] paramValues = parameters.get(paramName);\n \n         for (int i=0; i < paramValues.length; i++)\n         {\n@@ -297,7 +298,7 @@ static private String _getQueryString(\n   static private final String _FRAMESET_ONUNLOAD_TEXT =\n     \"_checkUnload(event)\";\n \n-  static private final Collection _SKIP_PARAMS =\n+  static private final Collection<String> _SKIP_PARAMS =\n     Arrays.asList(new String[]\n                   {\n                     GenericEntry.__ENTRY_KEY_PARAM,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java",
                "sha": "aed9daf8025fc47a1c37ecdd86c67fc0704f1a3f",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 5,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java",
                "patch": "@@ -75,16 +75,19 @@ public GenericEntry()\n   {\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -171,6 +174,7 @@ static public String getGenericEntryPath(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static private void service(FacesContext context, String name)\n     throws IOException\n   {\n@@ -184,7 +188,7 @@ static private void service(FacesContext context, String name)\n \n     if (!_isValidEntry(name))\n     {\n-      response.sendError(response.SC_BAD_REQUEST);\n+      response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n       return;\n     }\n \n@@ -207,8 +211,10 @@ static private void service(FacesContext context, String name)\n       encoding);\n     context.setResponseWriter(responseWriter);\n \n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String localeName = (String) requestParams.get(\"loc\");\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String localeName = requestParams.get(\"loc\");\n     if (localeName != null)\n     {\n       Locale locale =\n@@ -266,11 +272,11 @@ static private boolean _isValidEntry(String name)\n   // Parameter that is used to store the key for the JSP name.\n   //\n   static final String __ENTRY_KEY_PARAM = \"_t\";\n-  static private final Set _VALID_ENTRIES;\n+  static private final Set<String> _VALID_ENTRIES;\n \n   static\n   {\n-    _VALID_ENTRIES = new HashSet();\n+    _VALID_ENTRIES = new HashSet<String>();\n     _VALID_ENTRIES.add(NEW_FRAME_REDIRECT_ENTRY);\n     _VALID_ENTRIES.add(CALENDAR_DIALOG_ENTRY);\n     _VALID_ENTRIES.add(INLINE_DATE_PICKER_ENTRY);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java",
                "sha": "60fe880e286d82d3101663bd78ddbfa0cfdb9faa",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java",
                "patch": "@@ -46,14 +46,16 @@\n  */\n class InlineDatePickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     arc.getPartialPageContext().addPartialTarget(\n-              (String) requestParams.get(XhtmlConstants.SOURCE_PARAM));\n+              requestParams.get(XhtmlConstants.SOURCE_PARAM));\n \n     // Use Html and Body to avoid the cost of the stylesheet\n     HtmlHtml html = new HtmlHtml();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java",
                "sha": "a812b5f330d681809f3bd75d0b180eaa8381c05f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java",
                "patch": "@@ -30,6 +30,7 @@ public PdaRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java",
                "sha": "a098fdf264537f0fd70a20959f62168626731936",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java",
                "patch": "@@ -53,6 +53,7 @@ public PdaTableRenderer()\n     super(CoreTable.TYPE);\n   }\n   \n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -102,6 +103,7 @@ protected final void renderControlBar(\n     }\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -133,6 +135,7 @@ private void _renderEmptyCell(\n   }\n \n   // render the actual table content, with headers\n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     final RenderingContext arc,\n@@ -235,6 +238,7 @@ protected void renderTableContent(\n     {\n       TableUtils.RowLoop loop = new TableUtils.RowLoop()\n         {\n+          @Override\n           protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n             throws IOException\n           {\n@@ -289,7 +293,8 @@ protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n     //context.setDataResponseWriterUsed(false);\n   }\n   \n-     private void _renderColumnFooter(\n+     @SuppressWarnings(\"unchecked\")\n+    private void _renderColumnFooter(\n        FacesContext          context,\n        RenderingContext   arc,\n        TableRenderingContext tContext,\n@@ -331,21 +336,20 @@ private void _renderColumnFooter(\n            colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                   0/*logicalColumnIndex*/);\n \n-           List children = component.getChildren();\n-           int count = children.size();\n-\n-           for (int i = 0; i < count; i++)\n+           for(UIComponent child : (List<UIComponent>)component.getChildren())\n            {\n-             UIComponent child = (UIComponent) children.get(i);\n              if (child.isRendered())\n+             {\n                encodeChild(context, child);\n+             }\n            }\n          }\n          writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n        }\n      }\n \n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext          context,\n     RenderingContext   arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java",
                "sha": "2e9f8c636cf66fc8cb4849fa50339bb31503008a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java",
                "patch": "@@ -44,6 +44,7 @@ public TrainRenderer()\n     super(CoreTrain.TYPE);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext    arc,\n@@ -99,7 +100,7 @@ protected void encodeAll(\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java",
                "sha": "8ce59ecb0bb91a7ee38c1e159c210d9755844aba",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 9,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java",
                "patch": "@@ -37,8 +37,11 @@ public PPRResponseWriter(ResponseWriter     out,\n     super(out);\n     _pprContext = pprContext;\n     _useXMLDom = useXMLDom;\n+    _componentStack = new ArrayList<PPRTag>(50);\n+    _facesContext = FacesContext.getCurrentInstance();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new PPRResponseWriter(\n@@ -47,53 +50,60 @@ public ResponseWriter cloneWithWriter(Writer writer)\n       _useXMLDom);\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.startDocument();\n   }\n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     if (_isInsideTarget())\n       super.flush();\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeComment(text);\n   }\n \n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n-                        char[]      text,\n-                        int         start,\n-                        int         length) throws IOException\n+      char[]      text,\n+      int         start,\n+      int         length) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, start, length);\n   }\n \n-\n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n                     char[]      text,\n                     int         start,\n@@ -103,12 +113,14 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name, UIComponent component)\n      throws IOException\n   {\n@@ -137,7 +149,7 @@ public void startElement(String name, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isInsideTarget())\n@@ -148,6 +160,7 @@ public void endElement(String name) throws IOException\n     _popPartialTarget();\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException\n@@ -165,6 +178,7 @@ public void writeAttribute(String     name,\n     }\n   }\n \n+  @Override\n   public void writeURIAttribute(\n                                 String     name,\n                                 Object     value,\n@@ -230,7 +244,7 @@ else if (\"tr\".equals(element))\n   private void _popPartialTarget() throws IOException\n   {\n     int pos = _componentStack.size() - 1;\n-    PPRTag tag = (PPRTag) _componentStack.get(pos);\n+    PPRTag tag = _componentStack.get(pos);\n     _componentStack.remove(pos);\n \n     if (tag != null)\n@@ -329,6 +343,7 @@ public AddTags(String id, String[] tags)\n       _tags = tags;\n     }\n \n+    @Override\n     public void start(PartialPageContext pprContext) throws IOException\n     {\n       super.start(pprContext);\n@@ -340,6 +355,7 @@ public void start(PartialPageContext pprContext) throws IOException\n       }\n     }\n \n+    @Override\n     public void finish(PartialPageContext pprContext) throws IOException\n     {\n       // And then end them in reverse order...\n@@ -358,10 +374,9 @@ public void finish(PartialPageContext pprContext) throws IOException\n \n   private boolean _writingForm;\n   private final boolean _useXMLDom;\n-  private final List _componentStack = new ArrayList(50);\n+  private final List<PPRTag> _componentStack;\n   private final PartialPageContext _pprContext;\n-  private final FacesContext _facesContext =\n-     FacesContext.getCurrentInstance();\n+  private final FacesContext _facesContext;\n \n   static private final String[] _ADD_TABLE_AND_TR =\n      new String[]{\"table\", \"tr\"};",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java",
                "sha": "f066a9aa73f034ace1c7aa3f76ea9e7303827831",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 13,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java",
                "patch": "@@ -49,11 +49,11 @@\n {\n   PartialPageContext()\n   {\n-    _targets = new HashMap();\n-    _renderedTargets = new HashSet();\n+    _targets = new HashMap<String, Boolean>();\n+    _renderedTargets = new HashSet<String>();\n \n     // Pre-allocate the rendered stack\n-    _currentTargetStack = new Stack();\n+    _currentTargetStack = new Stack<String>();\n   }\n \n   /**\n@@ -71,7 +71,7 @@ public PartialPageContext(\n     // target list.\n     RequestContextImpl adfContext =\n       (RequestContextImpl) afContext;\n-    Iterator targetIter = adfContext.getPartialTargets();\n+    Iterator<String> targetIter = adfContext.getPartialTargets();\n     while (targetIter.hasNext())\n       _targets.put(targetIter.next(), Boolean.FALSE);\n \n@@ -85,10 +85,8 @@ public void finish()\n   {\n     if (_LOG.isWarning())\n     {\n-      Iterator entries = _targets.entrySet().iterator();\n-      while (entries.hasNext())\n+      for(Map.Entry<String, Boolean> entry : _targets.entrySet())\n       {\n-        Map.Entry entry = (Map.Entry) entries.next();\n         if (entry.getValue() == Boolean.FALSE)\n           _LOG.warning(\"PPR target {0} was not rendered.\",\n                        entry.getKey());\n@@ -100,7 +98,7 @@ public void finish()\n   /**\n    * Returns the set of partial targets for this rendering pass.\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _targets.keySet().iterator();\n   }\n@@ -165,7 +163,7 @@ public void addRenderedPartialTarget(String id)\n     _renderedTargets.add(id);\n   }\n \n-  public Iterator getRenderedPartialTargets()\n+  public Iterator<String> getRenderedPartialTargets()\n   {\n     return _renderedTargets.iterator();\n   }\n@@ -237,14 +235,16 @@ private String _getCurrentPartialTarget()\n     if (_currentTargetStack.empty())\n       return null;\n \n-    return (String)_currentTargetStack.peek();\n+    return _currentTargetStack.peek();\n   }\n \n-  private Map _targets;\n-  private Set _renderedTargets;\n+  private Map<String, Boolean> _targets;\n+  private Set<String> _renderedTargets;\n \n   // The stack of partial targets that are currently being rendered\n-  private Stack    _currentTargetStack;\n+  // -= Simon Lessard =-\n+  // FIXME: java.util.Stack... enough said... ArrayList or LinkedList please\n+  private Stack<String> _currentTargetStack;\n \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(PartialPageContext.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java",
                "sha": "3eab404e4834389420f91b7de7a6f8a2e5b9e588",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 15,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java",
                "patch": "@@ -38,13 +38,16 @@\n  */\n public class ScriptBufferingResponseWriter extends ResponseWriterDecorator\n {\n+  @SuppressWarnings(\"unchecked\")\n   public ScriptBufferingResponseWriter(\n      FacesContext   context,\n      ResponseWriter output)\n   {\n     this(output, null);\n \n-    Map requestScope = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestScope = \n+      context.getExternalContext().getRequestMap();\n+    \n     // To support multiple Partial Roots, always look for past\n     // data from a rendered partial request.\n     _data = (Data) requestScope.get(_STORED_DATA_KEY);\n@@ -96,28 +99,31 @@ public String getBufferedScripts()\n    * Returns objects representing any JavaScript libraries that\n    * have been rendered during buffering.\n    */\n-  public Iterator getBufferedLibraries()\n+  public Iterator<Object> getBufferedLibraries()\n   {\n     if (_data.libraries == null)\n       return null;\n \n     return _data.libraries.iterator();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new ScriptBufferingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer),\n       _data);\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     // Don't bother write out comments if we are buffering\n     if (!_checkBuffer())\n       super.writeComment(text);\n   }\n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_checkBuffer())\n@@ -126,6 +132,7 @@ public void writeText(Object text, String property) throws IOException\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n     char[]      text,\n     int         start,\n@@ -138,6 +145,7 @@ public void writeText(\n   }\n \n \n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_checkBuffer())\n@@ -146,6 +154,7 @@ public void write(String text) throws IOException\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n     char[]      text,\n     int         start,\n@@ -157,6 +166,7 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_checkBuffer())\n@@ -165,6 +175,7 @@ public void write(int ch) throws IOException\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -192,6 +203,7 @@ else if (_isObject(name))\n       super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isScript(name))\n@@ -204,7 +216,7 @@ public void endElement(String name) throws IOException\n       {\n         // Add the library to the our list\n         if (_data.libraries == null)\n-          _data.libraries = new ArrayList(10);\n+          _data.libraries = new ArrayList<Object>(10);\n \n         _data.libraries.add(source);\n       }\n@@ -241,6 +253,7 @@ else if (_isObject(name))\n       super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(\n     String     name,\n     Object     value,\n@@ -252,6 +265,7 @@ public void writeAttribute(\n       super.writeAttribute(name, value, property);\n   }\n \n+  @Override\n   public void writeURIAttribute(\n     String     name,\n     Object     value,\n@@ -296,12 +310,12 @@ private boolean _checkBuffer() throws IOException\n     // the script start element now.\n     super.startElement(\"script\", null);\n \n-    Iterator keys = _data.attrs.keys();\n+    Iterator<String> keys = _data.attrs.keys();\n     if (keys != null)\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeAttribute(key, _data.attrs.get(key), null);\n       }\n     }\n@@ -311,7 +325,7 @@ private boolean _checkBuffer() throws IOException\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeURIAttribute(key, _data.uriAttrs.get(key), null);\n       }\n     }\n@@ -355,17 +369,18 @@ private boolean _isObject(String name)\n   {\n     public Data()\n     {\n-      attrs = new ArrayMap(3);\n-      uriAttrs = new ArrayMap(1);\n+      attrs = new ArrayMap<String, Object>(3);\n+      uriAttrs = new ArrayMap<String, Object>(1);\n+      objectSuffix = 0;\n     }\n \n-    public boolean      inScriptStart;  // Inside a script start element?\n-    public ArrayMap     attrs;          // Attrs of the script element\n-    public ArrayMap     uriAttrs;       // URI attrs of the script element\n-    public boolean      buffering;      // Are currently buffering?\n-    public StringBuffer buffer;         // The buffer\n-    public ArrayList    libraries;      // Imported JavaScript libraries\n-    public int          objectSuffix=0; // For the object element ppr bug\n+    public boolean                  inScriptStart;        // Inside a script start element?\n+    public ArrayMap<String, Object> attrs;                // Attrs of the script element\n+    public ArrayMap<String, Object> uriAttrs;             // URI attrs of the script element\n+    public boolean                  buffering;            // Are currently buffering?\n+    public StringBuffer             buffer;               // The buffer\n+    public ArrayList<Object>        libraries;            // Imported JavaScript libraries\n+    public int                      objectSuffix;         // For the object element ppr bug\n   }\n \n   // This utility method is used to strip /**/ style comments out of",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java",
                "sha": "3d0eb3e8f08b251fa5e2c0a2586a3540b5cd8f27",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java",
                "patch": "@@ -46,6 +46,7 @@ public BaseDesktopSkin()\n    * Returns the id for the desktop implementation of the Base\n    * Look And Feel: \"base.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return BaseDesktopConstants.BASE_DESKTOP_ID;\n@@ -55,6 +56,7 @@ public String getId()\n    * Returns the family for the Base\n    * Look And Feel: \"base\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"base\";\n@@ -64,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the BaseDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */\n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;\n@@ -72,6 +75,7 @@ public String getRenderKitId()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"base-desktop.xss\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java",
                "sha": "88eebecd81506eb9f753b325e333fc52a118229c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java",
                "patch": "@@ -31,11 +31,13 @@ public BaseSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getBundleName()\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java",
                "sha": "af362f125c4ea1d315b9eeafad32e0c266f97dec",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java",
                "patch": "@@ -52,10 +52,11 @@ public MacOSSwitcherIcon(\n   /**\n    * Override of Icon.renderIcon().\n    */\n+  @Override\n   public void renderIcon(\n     FacesContext        context,\n-    RenderingContext arc,\n-    Map              attrs\n+    RenderingContext    arc,\n+    Map<String, Object> attrs\n     ) throws IOException\n   {\n     Icon icon = _getIcon(arc);\n@@ -66,6 +67,7 @@ public void renderIcon(\n   /**\n    * Override of Icon.getImageURI().\n    */\n+  @Override\n   public Object getImageURI(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -78,6 +80,7 @@ public Object getImageURI(\n   /**\n    * Override of Icon.getImageWidth().\n    */\n+  @Override\n   public Integer getImageWidth(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);\n@@ -88,6 +91,7 @@ public Integer getImageWidth(RenderingContext arc)\n   /**\n    * Override of Icon.getImageHeight().\n    */\n+  @Override\n   public Integer getImageHeight(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java",
                "sha": "1fe652404bc59574edb3a5e95e77cebb0f97ce34",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java",
                "patch": "@@ -38,6 +38,7 @@ public SimpleDesktopSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-desktop.xss\";\n@@ -46,6 +47,7 @@ public String getStyleSheetName()\n   /**\n    * Returns the id of this simple desktop Skin \"simple.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.desktop\";\n@@ -55,6 +57,7 @@ public String getId()\n    * Returns the family for the Simple\n    * Skin: \"simple\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -63,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the SimpleDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java",
                "sha": "546c9f8712712403e2a2c666396a8e76889207f8",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java",
                "patch": "@@ -28,6 +28,7 @@\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-pda.xss\";\n@@ -37,6 +38,7 @@ public String getStyleSheetName()\n    * Returns the id for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.pda\";\n@@ -46,6 +48,7 @@ public String getId()\n    * Returns the family for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -55,10 +58,9 @@ public String getFamily()\n    * Returns the renderKitId for the PDA implementation of the Simple\n    * Skin: \"org.apache.myfaces.trinidad.pda\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_PDA;\n   }\n-\n-\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java",
                "sha": "911df5682e62b7f3f93045e98478232fc36fae95",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java",
                "patch": "@@ -37,12 +37,11 @@ public TranslatedTextIcon(String key)\n   /**\n    * Returns the text to render.\n    */\n+  @Override\n   protected String getText(RenderingContext arc)\n   {\n-   return arc.getTranslatedString(_key);\n-\n+    return arc.getTranslatedString(_key);\n   }\n \n-\n   private String _key;\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java",
                "sha": "e4b3a77b94815c2625f93ab116ceb7fa10f8b8ba",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java",
                "patch": "@@ -44,6 +44,7 @@ public XhtmlSkin()\n   /**\n    * @todo Move the \"BLAF\" bundle to a more generic location.\n    */\n+  @Override\n   protected String getBundleName()\n   {\n     return _BUNDLE_CLASS;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java",
                "sha": "6e2f5d587e0b3ad61044fd0a65377b981811ac85",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java",
                "patch": "@@ -50,17 +50,16 @@ public static void writeDependencies(\n    * Find all UIParameter children of a component, and\n    * return it as a JS string of \"name1:value1,name2:value2\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static String getParameters(UIComponent comp)\n   {\n     int childCount = comp.getChildCount();\n     if (childCount == 0)\n       return null;\n       \n     StringBuffer buffer = null;\n-    List children = comp.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)comp.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child instanceof UIParameter)\n       {\n         UIParameter param = (UIParameter) child;\n@@ -283,11 +282,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _AUTO_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java",
                "sha": "f6151bc23f6dbc6ed2ae9383af64064869a852ae",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java",
                "patch": "@@ -52,6 +52,7 @@ protected BodyRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -61,7 +62,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _onunloadKey = type.findKey(\"onunload\");\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -78,6 +79,7 @@ protected void encodeAll(\n     _writeVersionInformation(context, arc);\n   }\n \n+  @Override\n   protected void renderAtEnd(\n     FacesContext context,\n     RenderingContext arc) throws IOException\n@@ -87,6 +89,7 @@ protected void renderAtEnd(\n     _renderInitialFocusScript(context, arc);\n   }\n \n+  @Override\n   protected void renderPPRSupport(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -105,6 +108,7 @@ protected void renderPPRSupport(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -136,12 +140,13 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n-    String styleClass = super.getStyleClass(bean);\n-    return styleClass;\n+    return super.getStyleClass(bean);\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -399,11 +404,11 @@ static private void _writeVersionInformation(\n   {\n     String comment = _VERSION_COMMENT;\n \n-    Class implClass = BodyRenderer.class;\n+    Class<BodyRenderer> implClass = BodyRenderer.class;\n     Package implPkg = implClass.getPackage();\n \n-    Class apiClass  =  FacesBean.class;\n-    Package apiPkg  =  apiClass.getPackage();\n+    Class<FacesBean> apiClass  =  FacesBean.class;\n+    Package apiPkg = apiClass.getPackage();\n \n     String versionInfo = _getVersionInfo(apiPkg, implPkg);\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java",
                "sha": "3162dd419887860a504c1536838bdbbb1baaebc4",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java",
                "patch": "@@ -45,18 +45,20 @@ public BreadCrumbsRenderer()\n     super(CoreBreadCrumbs.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _orientationKey = type.findKey(\"orientation\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n   \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +98,7 @@ protected UIComponent getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -123,7 +126,9 @@ protected void renderContent(\n       if (focusPath == null)\n         return;\n       \n-      List paths = new ArrayList(component.getAllAncestorContainerRowKeys(focusPath));\n+      List<Object> paths = \n+        new ArrayList<Object>(component.getAllAncestorContainerRowKeys(focusPath));\n+      \n       paths.add(focusPath);\n       int size = paths.size();        \n \n@@ -153,11 +158,11 @@ protected void renderContent(\n     // now render children\n     if (hasChildren(component))\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       nextVisChildIndex = getNextRenderedChildIndex(children, -1);\n       while (nextVisChildIndex != NO_CHILD_INDEX)\n       {\n-        UIComponent child = (UIComponent)children.get(nextVisChildIndex);        \n+        UIComponent child = children.get(nextVisChildIndex);        \n         nextVisChildIndex = getNextRenderedChildIndex(children, \n                                                       nextVisChildIndex);\n         isLastChild = (nextVisChildIndex == NO_CHILD_INDEX);           \n@@ -249,7 +254,7 @@ protected void renderLink(\n       isBidi = Bidi.requiresBidi(firstChar, 0, 1);\n     }\n     \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -287,6 +292,7 @@ protected boolean shouldRenderLastChild(\n    * renderStyleAttributes - use the NavigationPath style class as the default\n    * styleClass\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -401,9 +407,11 @@ private boolean _isVertical(FacesBean bean)\n   private static final int _INDENT_SPACES = 10;  \n   \n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\n       XhtmlConstants.LINK_STYLE_CLASS,\n       XhtmlConstants.AF_NAVIGATION_PATH_STEP_STYLE_CLASS);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java",
                "sha": "7584d11ff9d3c257e07d19a2c4a304e930e8891e",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 10,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java",
                "patch": "@@ -71,6 +71,7 @@ protected ChooseDateRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,18 +82,21 @@ protected void findTypeConstants(FacesBean.Type type)\n     _destinationKey = PropertyKey.createPropertyKey(\"destination\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1113,6 +1117,7 @@ private void _renderMonthAndYear(\n   }\n \n \n+  @SuppressWarnings(\"deprecation\")\n   private static long _getTimeAttr(\n     RenderingContext arc,\n     FacesBean   bean,\n@@ -1165,13 +1170,11 @@ else if (value instanceof Calendar)\n         // maximum date.\n         if (tzOffset < 0)\n         {\n-          tzOffset = (long)Math.max((float)tzOffset,\n-                              (float)Long.MIN_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n         }\n         else\n         {\n-          tzOffset = (long)Math.min((float)tzOffset,\n-                              (float)Long.MAX_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n         }\n \n         // adjust the date in ms to the adjusted time zone.\n@@ -1542,19 +1545,25 @@ public CalendarStyles(\n \n   private static final int _MILLIS_IN_DAY = 1000 * 60 * 60 * 24;\n \n-  // =-= bts\n-  // default minimum date is 1AD so we don't have to deal with years in\n-  // different eras.  Hopefully this won't be a problem in other calendars\n-  // (but I think that it will)\n-  private static final long _MIN_TIME =\n-    (new Date(-1899, 1, 1, 0, 0)).getTime();\n+  private static final long _MIN_TIME;\n \n   private static final long _MAX_TIME = Long.MAX_VALUE;\n \n   //\n   // Rendering Context cache keys\n   //\n   private static final Object _DATE_SYMBOLS_KEY = new Object();\n+  \n+  static\n+  {\n+    // =-= bts\n+    // default minimum date is 1AD so we don't have to deal with years in\n+    // different eras.  Hopefully this won't be a problem in other calendars\n+    // (but I think that it will)\n+    Calendar cal = Calendar.getInstance();\n+    cal.set(1, 1, 1, 0, 0);\n+    _MIN_TIME = cal.getTimeInMillis();\n+  }\n \n   private PropertyKey _maxValueKey;\n   private PropertyKey _minValueKey;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java",
                "sha": "585a502ec0e78fece90c1519246ae192edf12c8b",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 11,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java",
                "patch": "@@ -61,6 +61,7 @@ public ColumnGroupRenderer()\n     super(CoreColumn.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -76,7 +77,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _defaultSortOrderKey = type.findKey(\"defaultSortOrder\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -180,6 +181,7 @@ protected String getHeaderStyleClass(TableRenderingContext tContext)\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -513,7 +515,7 @@ else if (\"descending\".equals(getDefaultSortOrder(bean)))\n     String sortJS = buffer.toString();\n     if (onclick != null)\n     {\n-      sortJS = (String) XhtmlUtils.getChainedJS(onclick, sortJS, true);\n+      sortJS = XhtmlUtils.getChainedJS(onclick, sortJS, true);\n     }\n \n     return sortJS;\n@@ -632,11 +634,11 @@ protected final int getSortability(\n     // Otherwise, look at the first sort criteria\n     // =-=AEW This seems slow...\n     UIXCollection table = (UIXCollection) tContext.getTable();\n-    List criteria = table.getSortCriteria();\n+    List<SortCriterion> criteria = table.getSortCriteria();\n     // We currently only show anything for the primary sort criterion\n     if (criteria.size() > 0)\n     {\n-      SortCriterion criterion = (SortCriterion) criteria.get(0);\n+      SortCriterion criterion = criteria.get(0);\n       if (property.equals(criterion.getProperty()))\n       {\n         return criterion.isAscending() ? SORT_ASCENDING : SORT_DESCENDING;\n@@ -717,24 +719,27 @@ private void _computeMode(\n     _setParentNode(tContext, parentNode);\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderChildren(FacesContext context,\n                                UIComponent  component,\n                                NodeData     parentNode)\n     throws IOException\n   {\n-    List children = component.getChildren();\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    int i = 0;\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Tell the parent node - if there is one - which child we're rendering\n         if (parentNode != null)\n+        {\n           parentNode.currentChild = i;\n+        }\n+        \n         encodeChild(context, child);\n       }\n+      \n+      i++;\n     }\n   }\n \n@@ -790,7 +795,7 @@ private NodeList _getNodeList(TableRenderingContext tContext,\n \n   private static final class NodeList\n   {\n-    private final ArrayList _list = new ArrayList(10);\n+    private final ArrayList<NodeData> _list = new ArrayList<NodeData>(10);\n     private int _index = 0;\n \n     public NodeData currentNode = null;\n@@ -805,7 +810,7 @@ public NodeData getNext()\n       if (_index >= _list.size())\n         _index = 0;\n \n-      return (NodeData) _list.get(_index++);\n+      return _list.get(_index++);\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java",
                "sha": "f1638c9002b99b749a2569b672f5559fb81179b8",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java",
                "patch": "@@ -46,10 +46,10 @@ public ColumnRenderer()\n     super();\n   }\n \n-\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -114,9 +114,10 @@ protected void encodeAll(\n     colData.incrementColumnIndex();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private boolean _isColumnGroup(UIComponent column)\n   {\n-    Iterator kids = column.getChildren().iterator();\n+    Iterator<UIComponent> kids = column.getChildren().iterator();\n     // Special columns - nothing is a column group\n     if (!kids.hasNext())\n       return false;\n@@ -125,17 +126,15 @@ private boolean _isColumnGroup(UIComponent column)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderKids(FacesContext          context,\n-                            RenderingContext   arc,\n+                            RenderingContext      arc,\n                             TableRenderingContext trc,\n                             UIComponent           column) throws IOException\n   {\n-    List children = column.getChildren();\n     boolean renderedOne = false;\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    for(UIComponent child : (List<UIComponent>)column.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Put each component on a separate line, separated by a div",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java",
                "sha": "840870872bbc2aff08e6e89836344bbc9276792d",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java",
                "patch": "@@ -38,13 +38,16 @@ public CommandLinkRenderer()\n     super(CoreCommandLink.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _immediateKey = type.findKey(\"immediate\");\n     _partialSubmitKey = type.findKey(\"partialSubmit\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     RequestContext afContext = RequestContext.getCurrentInstance();\n@@ -56,7 +59,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n \n@@ -71,6 +76,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n   \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -99,6 +105,7 @@ protected void encodeBegin(\n     arc.setCurrentClientId(null);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +118,7 @@ public void encodeEnd(\n       fd.addNeededValue(XhtmlConstants.SOURCE_PARAM);\n   }\n \n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -119,23 +127,26 @@ protected String getClientId(\n     return RenderingContext.getCurrentInstance().getCurrentClientId();\n   }\n \n+  @Override\n   protected String getDestination(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getTargetFrame(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean hasOnclick(FacesBean bean)\n   {\n     // More efficient\n     return true;\n   }\n \n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     String onclick = super.getOnclick(bean);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java",
                "sha": "c8da0452b9e8ec817a14396a36d8bc80f0ca6a3a",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java",
                "patch": "@@ -47,17 +47,20 @@ public DesktopPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chromeTypeKey = type.findKey(\"chromeType\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java",
                "sha": "b8460a6120feee91ec49991787b196462bdc7fa0",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java",
                "patch": "@@ -45,6 +45,7 @@ protected DocumentRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _body = new BodyRenderer(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -83,6 +86,7 @@ public Head(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getClientId(\n       FacesContext context,\n       UIComponent  component)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java",
                "sha": "ee7b00ef63b62c440a8724735c6b166cb7a2ba74",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java",
                "patch": "@@ -25,6 +25,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.el.ValueBinding;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -40,6 +41,7 @@ protected EditableValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n    {\n     super.findTypeConstants(type);\n@@ -54,6 +56,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // DECODING IMPLEMENTATION\n   //\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     if (skipDecode(context))\n@@ -91,6 +94,7 @@ public Object getSubmittedValue(\n    * @param component the component\n    * @param newValue the unconverted string value\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -128,6 +132,7 @@ protected boolean wasSubmitted(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -138,6 +143,7 @@ protected boolean shouldRenderId(\n   /**\n    * Override to include \"submitted value\".\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -180,7 +186,7 @@ protected void addOnSubmitConverterValidators(\n       if ( converter == null)\n         converter = getDefaultConverter(context, bean);\n \n-      Iterator validators = getValidators(bean);\n+      Iterator<Validator> validators = getValidators(bean);\n \n       if (requiredField ||\n           (converter != null) ||\n@@ -265,9 +271,10 @@ protected boolean isImmediate(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n-  protected Iterator getValidators(FacesBean bean)\n+  @SuppressWarnings(\"unchecked\")\n+  protected Iterator<Validator> getValidators(FacesBean bean)\n   {\n-    return bean.entries(_validatorsKey);\n+    return (Iterator<Validator>)bean.entries(_validatorsKey);\n   }\n \n   private PropertyKey _submittedValueKey;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java",
                "sha": "e72307ff3b739d83918280e240eebeec60150a2f",
                "status": "modified"
            },
            {
                "additions": 68,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java",
                "changes": 137,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 69,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java",
                "patch": "@@ -99,34 +99,34 @@ public void addLabel(\n     if (targetId == null || label == null)\n       return;\n \n-    Map labelMap = getLabelMap(true);\n+    Map<String, String> labelMap = getLabelMap(true);\n \n     labelMap.put(targetId, label);\n   }\n \n \n \n-  public Map getLabelMap(\n+  public Map<String, String> getLabelMap(\n     boolean  createIfNecessary\n     )\n   {\n     if ((_labelMap == null) && createIfNecessary)\n     {\n-      _labelMap = new HashMap(31);\n+      _labelMap = new HashMap<String, String>(31);\n     }\n \n     return _labelMap;\n   }\n \n \n \n-  public Map getPatternMap(\n+  public Map<String, String> getPatternMap(\n     boolean createIfNecessary\n     )\n   {\n     if ((_patternMap == null) && createIfNecessary)\n     {\n-      _patternMap = new HashMap();\n+      _patternMap = new HashMap<String, String>();\n     }\n \n     return _patternMap;\n@@ -141,7 +141,7 @@ public void addPattern(\n     if (targetId == null || pattern == null)\n       return;\n \n-    Map patternMap = getPatternMap(true);\n+    Map<String, String> patternMap = getPatternMap(true);\n \n     patternMap.put(targetId, pattern);\n   }\n@@ -162,14 +162,14 @@ public void addNeededValue(String name)\n       return;\n     }\n \n-    List neededValues = getNeededValues(true);\n+    List<String> neededValues = getNeededValues(true);\n     neededValues.add(name);\n   }\n \n \n   public void addRenderedValue(String name)\n   {\n-    Set renderedSet = getRenderedValues(true);\n+    Set<String> renderedSet = getRenderedValues(true);\n     renderedSet.add(name);\n   }\n \n@@ -192,106 +192,106 @@ public void addResetCall(\n \n     if (call != null)\n     {\n-      List resetCalls = getResetCalls(true);\n+      List<String> resetCalls = getResetCalls(true);\n \n       // add the call\n       resetCalls.add(call);\n     }\n   }\n \n \n-  public List getResetCalls(\n+  public List<String> getResetCalls(\n     boolean          createIfNecessary\n     )\n   {\n \n     if (_resetCallsList == null && createIfNecessary)\n     {\n-      _resetCallsList = new ArrayList();\n+      _resetCallsList = new ArrayList<String>();\n     }\n \n     return _resetCallsList;\n   }\n \n \n-  public List getClientDependencies(\n+  public List<String> getClientDependencies(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_clientDependencies == null) && createIfNecessary)\n     {\n-      _clientDependencies = new ArrayList(10);\n+      _clientDependencies = new ArrayList<String>(10);\n     }\n \n     return _clientDependencies;\n   }\n \n-  public List getNeededValues(\n+  public List<String> getNeededValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_neededValues == null) && createIfNecessary)\n     {\n-      _neededValues = new ArrayList(10);\n+      _neededValues = new ArrayList<String>(10);\n     }\n \n     return _neededValues;\n   }\n \n \n-  public Set getRenderedValues(\n+  public Set<String> getRenderedValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_renderedSet == null) && createIfNecessary)\n     {\n-      _renderedSet =  new HashSet(23);\n+      _renderedSet =  new HashSet<String>(23);\n     }\n \n     return _renderedSet;\n   }\n \n \n-  public Iterator getValidationIterator()\n+  public Iterator<String> getValidationIterator()\n   {\n-    Map validationMap = _getValidationMap(false);\n+    Map<String, Integer> validationMap = _getValidationMap(false);\n     if ( validationMap == null)\n       return null;\n \n     return validationMap.keySet().iterator();\n   }\n \n \n-  public Iterator getErrorFormatIterator()\n+  public Iterator<String> getErrorFormatIterator()\n   {\n-    Map errorFormatMap = _getErrorFormatMap(false);\n+    Map<String, Integer> errorFormatMap = _getErrorFormatMap(false);\n     if ( errorFormatMap == null)\n       return null;\n \n     return errorFormatMap.keySet().iterator();\n   }\n \n-  public List getFormValidatorsInfo(\n+  public List<ConvertValidate> getFormValidatorsInfo(\n     boolean createIfNecessary\n     )\n   {\n     // create the validators if they don't already exist\n     if ((_formValidatorsInfo == null) && createIfNecessary)\n     {\n-      _formValidatorsInfo = new ArrayList();\n+      _formValidatorsInfo = new ArrayList<ConvertValidate>();\n     }\n \n     return _formValidatorsInfo;\n   }\n \n \n-  public List getValidatedInputList(\n+  public List<String> getValidatedInputList(\n     boolean createIfNecessary\n     )\n   {\n     if ((_validatedInputList == null) && createIfNecessary)\n     {\n-      _validatedInputList = new ArrayList();\n+      _validatedInputList = new ArrayList<String>();\n     }\n \n     return _validatedInputList;\n@@ -302,13 +302,13 @@ public List getValidatedInputList(\n    * and this method should be killed.\n    */\n   public void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     if (clientId == null)\n@@ -362,7 +362,7 @@ public void addOnSubmitConverterValidators(\n     {\n       while (validators.hasNext())\n       {\n-        Validator validator = (Validator) validators.next();\n+        Validator validator = validators.next();\n \n         if (validator instanceof ClientValidator)\n         {\n@@ -419,7 +419,7 @@ private void _addFormValidatorInfo(\n     if (validator != null && convertValidate != null)\n     {\n       if (convertValidate.validators == null)\n-        convertValidate.validators = new ArrayList();\n+        convertValidate.validators = new ArrayList<Integer>();\n \n       // add the validator\n       convertValidate.validators.add(_addValidation(validator));\n@@ -459,16 +459,16 @@ private void _addOnSubmitConverter(\n \n     }\n \n-    Object clientDependency = submitConverter.getClientScript(fcontext,\n-                                                                component);\n+    String clientDependency = submitConverter.getClientScript(fcontext,\n+                                                              component);\n     if (clientDependency != null)\n     {\n-      List clientDependencies = getClientDependencies(true);\n+      List<String> clientDependencies = getClientDependencies(true);\n       clientDependencies.add(clientDependency);\n     }\n \n-    String converter = (String)submitConverter.getClientConversion(fcontext,\n-                                                                   component);\n+    String converter = submitConverter.getClientConversion(fcontext,\n+                                                           component);\n \n     if (converter != null)\n     {\n@@ -505,18 +505,17 @@ private void _addOnSubmitValidator(\n     }\n     else\n     {\n-      Object clientDependency = submitValidator.getClientScript(fContext,\n-                                                                  component);\n+      String clientDependency = submitValidator.getClientScript(fContext,\n+                                                                component);\n       if (clientDependency != null)\n       {\n-        List clientDependencies = getClientDependencies(true);\n+        List<String> clientDependencies = getClientDependencies(true);\n         clientDependencies.add(clientDependency);\n       }\n     }\n \n-    String validator = (String)submitValidator.getClientValidation(\n-                                                     fContext,\n-                                                     component);\n+    String validator = submitValidator.getClientValidation(fContext,\n+                                                           component);\n \n     if (validator != null)\n     {\n@@ -535,9 +534,9 @@ private Integer _addValidation(\n     )\n   {\n     //TODO - not checking for null so map always getting created\n-    Map validationMap = _getValidationMap(true);\n+    Map<String, Integer> validationMap = _getValidationMap(true);\n \n-    Integer validationIndex = (Integer)validationMap.get(validation);\n+    Integer validationIndex = validationMap.get(validation);\n \n     if (validationIndex == null)\n     {\n@@ -559,9 +558,9 @@ private Integer _addErrorFormat(\n   {\n     if (errorFormat != null)\n     {\n-      Map errorFormatMap = _getErrorFormatMap(true);\n+      Map<String, Integer> errorFormatMap = _getErrorFormatMap(true);\n \n-      Integer errorFormatIndex = (Integer)errorFormatMap.get(errorFormat);\n+      Integer errorFormatIndex = errorFormatMap.get(errorFormat);\n \n       if (errorFormatIndex == null)\n       {\n@@ -593,7 +592,7 @@ private ConvertValidate _getNewConvertValidate(\n       convertValidateInfo.clientId = clientId;\n \n       // add to list\n-      List convertValidateList = getFormValidatorsInfo(true);\n+      List<ConvertValidate> convertValidateList = getFormValidatorsInfo(true);\n       convertValidateList.add(convertValidateInfo);\n \n       return convertValidateInfo;\n@@ -618,25 +617,25 @@ private void _addValidatedInput(\n \n \n \n-  private Map _getValidationMap(\n+  private Map<String, Integer> _getValidationMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_validationMap == null) && createIfNecessary)\n     {\n-      _validationMap = new LinkedHashMap(31);\n+      _validationMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _validationMap;\n   }\n \n-  private Map _getErrorFormatMap(\n+  private Map<String, Integer> _getErrorFormatMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_errorFormatMap == null) && createIfNecessary)\n     {\n-      _errorFormatMap = new LinkedHashMap(31);\n+      _errorFormatMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _errorFormatMap;\n@@ -716,51 +715,51 @@ static private void _writeDependencies(\n   // map of unique validation string to index in map\n   // used so that each converter and validator constructor\n   // is only written out once\n-  private Map _validationMap = null;\n+  private Map<String, Integer> _validationMap = null;\n \n   // map of unique error string to index in map\n   // used so that each error string is only written out once\n-  private Map _errorFormatMap = null;\n+  private Map<String, Integer> _errorFormatMap = null;\n \n   // List of ConvertValidate objects\n-  private List _formValidatorsInfo;\n+  private List<ConvertValidate> _formValidatorsInfo;\n \n   // javascript needed for client validations\n-  private List _clientDependencies;\n+  private List<String> _clientDependencies;\n \n \n   // List of id's of input controls that need to get validated\n-  private List _validatedInputList;\n+  private List<String> _validatedInputList;\n \n \n   private boolean _useCompoundNames = false;\n \n   // List of empty hidden fields that will be filled during event generation\n-  private List _neededValues;\n+  private List<String> _neededValues;\n \n \n-  private Set _renderedSet;\n+  private Set<String> _renderedSet;\n \n   // maps labels to id's\n   // need a label map because the label is not always an attribute\n   // on the component\n-  private Map _labelMap = null;\n+  private Map<String, String> _labelMap = null;\n \n   // List of reset calls\n-  private List _resetCallsList = null;\n+  private List<String> _resetCallsList = null;\n \n   // maps patterns to id's\n-  private Map _patternMap;\n+  private Map<String, String> _patternMap;\n \n   private String _formName = null;\n \n  public static final class ConvertValidate\n   {\n-    public String    clientId;\n-    public boolean   required = false;\n-    public Integer   requiredFormatIndex;\n-    public ArrayList validators;\n-    public Object    converter;\n+    public String             clientId;\n+    public boolean            required = false;\n+    public Integer            requiredFormatIndex;\n+    public ArrayList<Integer> validators;\n+    public Object             converter;\n   }\n \n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java",
                "sha": "cdb23ef65316d878445296c1072a50318c68d2b7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java",
                "patch": "@@ -33,6 +33,7 @@ protected FormElementRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,11 +45,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,6 +143,7 @@ protected void renderNonElementContent(\n   {\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java",
                "sha": "f33af80f5c7f1ab9ce79b9e9f313cc2a98b2b3ae",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java",
                "patch": "@@ -33,6 +33,7 @@ protected FormInputRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -42,6 +43,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -90,6 +92,7 @@ protected void renderDisabledAttribute(\n    * attribute values on the 'content' piece. This is usually false.\n    * @throws IOException\n    */\n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java",
                "sha": "eb1a4411893323ed7bf099a2ac4c295e17986861",
                "status": "modified"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java",
                "changes": 89,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 38,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java",
                "patch": "@@ -28,6 +28,7 @@\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n import javax.faces.convert.Converter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.bean.FacesBean;\n@@ -46,8 +47,6 @@\n // TODO: Remove this class\n import org.apache.myfaces.trinidadinternal.share.data.ServletRequestParameters;\n \n-import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n-\n /**\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/ui/laf/base/xhtml/FormRenderer.java#0 $) $Date: 10-nov-2005.18:53:51 $\n  * @author The Oracle ADF Faces Team\n@@ -59,10 +58,14 @@ public FormRenderer()\n     super(CoreForm.TYPE);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context,\n                      UIComponent component)\n   {\n-    Map paramMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> paramMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object formName = paramMap.get(CoreResponseStateManager.FORM_FIELD_NAME);\n     boolean submitted = false;\n \n@@ -76,11 +79,13 @@ public void decode(FacesContext context,\n       ((UIXForm) component).setSubmitted(submitted);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -91,7 +96,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _targetFrameKey = type.findKey(\"targetFrame\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,7 +198,7 @@ protected void encodeBegin(\n     }\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -307,6 +312,7 @@ protected void encodeEnd(\n   /**\n    * Returns the inline Style used to render this node.\n    */\n+  @Override\n   protected String getInlineStyle(FacesBean bean)\n   {\n     String inlineStyle = super.getInlineStyle(bean);\n@@ -320,6 +326,7 @@ protected String getInlineStyle(FacesBean bean)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -334,6 +341,7 @@ protected void renderId(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -355,7 +363,7 @@ private static void _renderResetCalls(\n     // Write the array of reset calls\n     //\n     FormData fData = arc.getFormData();\n-    List resetCallList = fData.getResetCalls(false);\n+    List<String> resetCallList = fData.getResetCalls(false);\n \n     int resetCallCount = (resetCallList != null)\n                             ? resetCallList.size()\n@@ -380,7 +388,7 @@ private static void _renderResetCalls(\n \n       for (int i = 0; i < resetCallCount; i++)\n       {\n-        String currCall = (String)resetCallList.get(i);\n+        String currCall = resetCallList.get(i);\n \n         if (firstCall)\n         {\n@@ -436,7 +444,7 @@ private static void _renderValidationScripts(\n     // The dependencies may be needed - see bug\n     // 4409339 TURNING OFF CLIENT SIDE VALIDATION CAUSES\n     //                                ERRORS IN SELECTINPUTCOLOR & DATE\n-    List clientDependencies = fData.getClientDependencies( false);\n+    List<String> clientDependencies = fData.getClientDependencies( false);\n     if (clientDependencies != null)\n     {\n       for (int d = 0; d < clientDependencies.size(); d++)\n@@ -471,7 +479,7 @@ private static void _renderValidationScripts(\n     // Write the array of validation calls\n     //\n \n-    Iterator validationIterator = fData.getValidationIterator();\n+    Iterator<String> validationIterator = fData.getValidationIterator();\n \n     if (validationIterator != null)\n     {\n@@ -483,7 +491,7 @@ private static void _renderValidationScripts(\n \n       while(validationIterator.hasNext())\n       {\n-        String currValidation = (String)validationIterator.next();\n+        String currValidation = validationIterator.next();\n \n         if (firstValidation)\n         {\n@@ -514,7 +522,8 @@ private static void _renderValidationScripts(\n     writer.writeText(jsID, null);\n \n     // get the form validators\n-    List validatorInfoList = fData.getFormValidatorsInfo(false);\n+    List<FormData.ConvertValidate> validatorInfoList = \n+      fData.getFormValidatorsInfo(false);\n \n     if (validatorInfoList == null)\n     {\n@@ -540,8 +549,7 @@ private static void _renderValidationScripts(\n           writer.writeText(\"],\", null);\n         }\n \n-        FormData.ConvertValidate convertValidate =\n-          (FormData.ConvertValidate)validatorInfoList.get(j);\n+        FormData.ConvertValidate convertValidate = validatorInfoList.get(j);\n \n         writer.writeText(\"\\\"\", null);\n \n@@ -574,7 +582,7 @@ private static void _renderValidationScripts(\n \n         writer.writeText(\",[\", null);\n \n-        ArrayList validatorInfo = convertValidate.validators;\n+        ArrayList<Integer> validatorInfo = convertValidate.validators;\n \n         if (validatorInfo != null)\n         {\n@@ -615,15 +623,15 @@ private static void _renderValidationScripts(\n     //\n \n     // list of labels used for validation on this form\n-    List inputList = fData.getValidatedInputList(false);\n+    List<String> inputList = fData.getValidatedInputList(false);\n \n     int inputCount = (inputList != null)\n                          ? inputList.size()\n                          : 0;\n \n     if (inputCount > 0)\n     {\n-      Map labelMap = fData.getLabelMap(false);\n+      Map<String, String> labelMap = fData.getLabelMap(false);\n \n       if (labelMap != null)\n       {\n@@ -635,11 +643,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currLabel = (String)labelMap.remove(currID);\n+          String currLabel = labelMap.remove(currID);\n \n           if (currLabel != null)\n           {\n@@ -671,7 +679,7 @@ private static void _renderValidationScripts(\n       // =-= jrf: optimize pattern reuse?\n       // BUG 2024773\n \n-      Map patternMap = fData.getPatternMap(false);\n+      Map<String, String> patternMap = fData.getPatternMap(false);\n \n       if (patternMap != null)\n       {\n@@ -683,11 +691,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currPattern = (String)patternMap.remove(currID);\n+          String currPattern = patternMap.remove(currID);\n \n           if (currPattern != null)\n           {\n@@ -722,7 +730,7 @@ private static void _renderValidationScripts(\n     //\n \n     // list of error formats used for validation on this form\n-    Iterator errorFormatIterator = fData.getErrorFormatIterator();\n+    Iterator<String> errorFormatIterator = fData.getErrorFormatIterator();\n \n     if (errorFormatIterator != null)\n     {\n@@ -734,7 +742,7 @@ private static void _renderValidationScripts(\n \n       while(errorFormatIterator.hasNext())\n       {\n-        String currErrorFormat = (String)errorFormatIterator.next();\n+        String currErrorFormat = errorFormatIterator.next();\n \n         if (firstFormat)\n         {\n@@ -767,19 +775,21 @@ private static void _renderSubformLists(\n     ) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n-    List subforms =\n+    List<String> subforms =\n       SubformRenderer.getSubformList(context, false, false);\n+    \n     writer.writeText(\"var \", null);\n     writer.writeText(jsID, null);\n     writer.writeText(\"_SF={\", null);\n     if ((subforms != null) && !subforms.isEmpty())\n     {\n-      List defaultSubforms =\n+      List<String> defaultSubforms =\n         SubformRenderer.getSubformList(context, true, false);\n-      Iterator ids = subforms.iterator();\n+      \n+      Iterator<String> ids = subforms.iterator();\n       while (ids.hasNext())\n       {\n-        String id = (String) ids.next();\n+        String id = ids.next();\n         writer.writeText(\"\\\"\", null);\n         writer.writeText(id, null);\n         writer.writeText(\"\\\":\", null);\n@@ -836,13 +846,13 @@ public static void addResetCall(\n   }\n \n  public static void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     FormData fData = RenderingContext.getCurrentInstance().getFormData();\n@@ -1017,6 +1027,7 @@ protected String getFullOnkeypress(\n     return onKeypress;\n   }\n \n+  @Override\n   protected String getOnkeypress(FacesBean bean)\n   {\n     // Back out the default keypress, since we need more info\n@@ -1070,7 +1081,7 @@ static private void _renderNeededValues(\n     else\n     {\n       int realNeededIndex = 0;\n-      List neededValues = fData.getNeededValues(false);\n+      List<String> neededValues = fData.getNeededValues(false);\n \n       //\n       // loop over the list of needed names, creating hidden fields\n@@ -1090,11 +1101,11 @@ static private void _renderNeededValues(\n                                 ? null\n                                 : \"a\";\n \n-        Set renderedValues = fData.getRenderedValues(true);\n+        Set<String> renderedValues = fData.getRenderedValues(true);\n \n         for (int i = 0; i < neededCount; i++)\n         {\n-          Object currName = neededValues.get(i);\n+          String currName = neededValues.get(i);\n \n           // if the needed name hasn't been rendered, add it to our\n           // list of unrendered elements\n@@ -1152,6 +1163,8 @@ static private void _renderNeededValues(\n   private PropertyKey _onsubmitKey;\n   private PropertyKey _targetFrameKey;\n \n-\n+  // -= Simon Lessard =-\n+  // FIXME: Nothing in this class is logged as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FormRenderer.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java",
                "sha": "b73cf2f995cd7ac8d65e7dbc3902e4265b767d89",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java",
                "patch": "@@ -41,6 +41,7 @@ protected GoLinkRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,7 +54,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _textKey = type.findKey(\"text\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +112,7 @@ protected void encodeBegin(\n                                        \"b\");\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +126,7 @@ public void encodeEnd(\n   /**\n    * Renders the client ID as both \"id\" and \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -137,6 +140,7 @@ protected void renderId(\n     }\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -196,6 +200,7 @@ protected String getText(FacesBean bean)\n     return toString(bean.getProperty(_textKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java",
                "sha": "effabe4ea0caeb1f0b9efda8aa2d63e6f285653a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java",
                "patch": "@@ -17,14 +17,11 @@\n \n import java.io.IOException;\n \n-import java.util.List;\n-\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n \n import org.apache.myfaces.trinidad.bean.FacesBean;\n-import org.apache.myfaces.trinidad.bean.PropertyKey;\n import org.apache.myfaces.trinidad.component.core.CoreGroup;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n@@ -36,11 +33,13 @@ public GroupRenderer()\n     super(CoreGroup.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java",
                "sha": "f322e5993735a4a777e1afbb6663793abd5c380c",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java",
                "patch": "@@ -52,12 +52,14 @@ protected HeadRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -87,7 +89,7 @@ protected void encodeBegin(\n     _writeCookieScript(context, arc);\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -187,6 +189,7 @@ static private boolean _supportsUIXCookie(RenderingContext arc)\n   private CoreRenderer _styleSheetRenderer = new StyleSheetRenderer()\n   {\n     // Don't render the ID\n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java",
                "sha": "0665473ec713a74240b223a29feb34092dd62455",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java",
                "patch": "@@ -61,6 +61,7 @@ protected HtmlRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,6 +117,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -198,19 +200,15 @@ protected String getDocumentDocType(\n    * Determines whether we have a frameset component as a child\n    * for determining which doctype to return\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private boolean _hasFrameSet(UIComponent component)\n   {\n-    List children = component.getChildren();\n-    int childCount = component.getChildCount();\n-    \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent currChild = (UIComponent) children.get(i);\n-      \n-      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(currChild.getFamily()))\n+      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(child.getFamily()))\n       {\n         return true;\n-      }\n+      }     \n     }\n \n     return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java",
                "sha": "c5f7f44b26d0463fe08c82da46c462309a7396cf",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java",
                "patch": "@@ -38,12 +38,14 @@ public IconRenderer()\n     super(CoreIcon.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _nameKey = type.findKey(\"name\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +113,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,14 +127,14 @@ protected String getName(FacesBean bean)\n     return toString(bean.getProperty(_nameKey));\n   }\n \n-  private Map _getNodeAttributeMap(\n+  private Map<String, Object> _getNodeAttributeMap(\n     FacesContext        context,\n     UIComponent         comp,\n     FacesBean           bean,\n     boolean             embed)\n   {\n-    Map attrs = null;\n-    attrs = new ArrayMap(1);\n+    Map<String, Object> attrs = null;\n+    attrs = new ArrayMap<String, Object>(1);\n \n     attrs.put(Icon.SHORT_DESC_KEY, getShortDesc(bean));\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java",
                "sha": "6d4ceefe3f11d1c712fd81e5b641e59a29159806",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java",
                "patch": "@@ -35,6 +35,7 @@ public ImageRenderer()\n     super(CoreImage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -43,6 +44,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _sourceKey = type.findKey(\"source\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +59,7 @@ protected void encodeBegin(\n     rw.endElement(\"img\");\n   }\n \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -72,6 +75,7 @@ protected void renderAllAttributes(\n     _renderImageMap(bean, rw);\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -95,7 +99,6 @@ protected String getLongDescURL(FacesBean bean)\n     return toUri(bean.getProperty(_longDescURLKey));\n   }\n \n-\n   protected String getSource(FacesBean bean)\n   {\n     return toUri(bean.getProperty(_sourceKey));\n@@ -119,7 +122,6 @@ protected void renderId(\n     }\n   }\n \n-\n   private void _renderImageMap(\n     FacesBean           bean,\n     ResponseWriter      writer) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java",
                "sha": "a5f3f8c4b7ea250d0c1d178467adde678b2cd14e",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java",
                "patch": "@@ -30,16 +30,19 @@ public InputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputColor\";\n   }  \n     \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputColor;\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java",
                "sha": "c74d909f077a1269ccb52ac392595f11026cf42e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java",
                "patch": "@@ -26,11 +26,13 @@ public InputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }  \n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputDate;\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputDate\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java",
                "sha": "20da3b831e4e813eba1c84208cc92a44266e7ef4",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java",
                "patch": "@@ -34,6 +34,7 @@ public InputFileRenderer()\n     super(CoreInputFile.TYPE);\n   }\n   \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -48,11 +49,13 @@ protected final void encodeAll(\n     }\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputFile;\n@@ -63,6 +66,7 @@ protected FormInputRenderer getFormInputRenderer()\n    * @param bean\n    * @return false, since inputFile does not support the readOnly attribute\n    */\n+  @Override\n   protected boolean isReadOnly(FacesBean bean)\n   {\n     return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java",
                "sha": "1b209c3513fbcbbd7134b624264019432eeef486",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java",
                "patch": "@@ -33,18 +33,21 @@ public InputHiddenRenderer()\n     super(CoreInputHidden.TYPE);\n   }\n   \n+  @Override\n   protected boolean wasSubmitted(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java",
                "sha": "83a342e68fd3c86e09c57b47140f55172abdae3c",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java",
                "patch": "@@ -37,6 +37,7 @@ public InputLabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -45,11 +46,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _readOnlyKey   = type.findKey(\"readOnly\");\n   }  \n   \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n      getFormInputRenderer().decode(context, component);\n   }\n   \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -60,6 +63,7 @@ public Object getConvertedValue(\n                                               submittedValue);\n   }\n \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +78,7 @@ protected String getLabelFor(\n   }\n \n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,13 +121,14 @@ protected void encodeAll(\n    * If it's known that the field content is not editable, return false. \n    * Otherwise, assume it is editable and return true\n    */\n+  @Override\n   protected boolean isContentEditable(FacesBean bean)\n   {\n     return !getFormInputRenderer().getReadOnly(\n                                    FacesContext.getCurrentInstance(), bean);  \n   }\n  \n-  \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,8 +137,6 @@ protected void renderFieldCellContents(\n   {\n     delegateRenderer(context, arc, component, bean, getFormInputRenderer());\n   }\n-  \n-\n  \n   protected boolean getSimple(FacesBean bean)\n   {\n@@ -152,6 +156,7 @@ protected boolean getSimple(FacesBean bean)\n    * @param bean\n    * @throws IOException\n    */\n+  @Override\n   protected void renderRootDomElementStyles(\n    FacesContext        context,\n    RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java",
                "sha": "52af2b2345daad566534438fd211974629843f60",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java",
                "patch": "@@ -28,11 +28,13 @@ public InputListOfValuesRenderer()\n     super(CoreInputListOfValues.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   } \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputListOfValue;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java",
                "sha": "3b7bc985a2184f11022887d9cd6bce34e84a4eeb",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java",
                "patch": "@@ -27,11 +27,13 @@ public InputTextRenderer()\n     super(CoreInputText.TYPE);\n   } \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n   } \n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     if (_simpleInputText.isTextArea(bean))\n@@ -40,6 +42,7 @@ protected String getDefaultLabelValign(FacesBean bean)\n     return null;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputText;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java",
                "sha": "8d1ff3e9bb42b2b7435356751ab96180379daa2e",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java",
                "patch": "@@ -49,6 +49,7 @@ public LabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -63,6 +64,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   }\n \n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -137,6 +139,7 @@ protected void renderRootDomElementStyles(\n     // do nothing for now\n   } \n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -158,6 +161,7 @@ private boolean _isInTable()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -403,6 +407,7 @@ private void _renderMessageCellContents(\n   /**\n    * Returns the client ID.\n    */\n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -489,13 +494,15 @@ public Label(FacesBean.Type type, boolean inTable)\n       _inTable = inTable;\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -504,13 +511,15 @@ protected void renderAllAttributes(\n       // Block everything\n     }\n \n+    @Override\n     protected String getDefaultValign(FacesBean bean)\n     {\n       // get the defaultLabelValign from the form component.\n       return getDefaultLabelValign(bean);\n     }\n \n \n+    @Override\n     protected String getConvertedString(\n       FacesContext context,\n       UIComponent  component,\n@@ -526,6 +535,7 @@ protected String getConvertedString(\n      * Only display the required icon indicator if we're required\n      * or showRequired is on.\n      */\n+    @Override\n     protected boolean getShowRequired(FacesBean bean)\n     {\n       // Inside the table, never show the required icon.\n@@ -535,6 +545,7 @@ protected boolean getShowRequired(FacesBean bean)\n       return (LabelAndMessageRenderer.this.labelShowRequired(bean));\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       if (LabelAndMessageRenderer.this.showAccessKeyOnLabel(bean))\n@@ -543,6 +554,7 @@ protected char getAccessKey(FacesBean bean)\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String shortDesc = super.getShortDesc(bean);\n@@ -556,6 +568,7 @@ protected String getShortDesc(FacesBean bean)\n       return shortDesc;\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -567,6 +580,7 @@ protected String getForId(\n                          bean);\n     }\n \n+    @Override\n     protected boolean isLabelTagNeeded(\n       RenderingContext arc,\n       FacesBean           bean,\n@@ -590,30 +604,35 @@ public Message(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected boolean getIndented(FacesBean bean)\n     {\n       return LabelAndMessageRenderer.this.isIndented();\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n       FacesBean           bean) throws IOException\n     {\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -693,9 +712,9 @@ private String _getDefaultLabelStyleClass(\n     RenderingContext arc,\n     String              styleClass)  \n   {\n-    Map keyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> keyMap = arc.getSkinResourceKeyMap();\n     return (keyMap != null) ?\n-            (String) keyMap.get(styleClass) :\n+            keyMap.get(styleClass) :\n             null;\n   }\n   ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java",
                "sha": "ef448d728a46c7f2017132464370111f84692b01",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java",
                "patch": "@@ -45,6 +45,7 @@ protected MessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageKey     = type.findKey(\"message\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java",
                "sha": "5de6189dde0b8ae31d50f12ec5fd3310ced1ff53",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 17,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java",
                "patch": "@@ -47,6 +47,7 @@ public NavigationPaneRenderer()\n     super(CoreNavigationPane.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,11 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +99,7 @@ private UIComponent _getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -110,13 +114,11 @@ protected void renderContent(\n     if (nodeStamp == null)\n     {\n       // we aren't stamping, but rather have explicitly defined children:\n-      List<UIComponent> children = component.getChildren();\n-      int childrenLength = children.size();\n-      for (int i=0; i<childrenLength; i++)\n+      for(UIComponent child : (List<UIComponent>)component.getChildren())\n       {\n         try\n         {\n-          UIXCommand navItem = (UIXCommand)children.get(i);\n+          UIXCommand navItem = (UIXCommand)child;\n           if (navItem.isRendered())\n           {\n             // collect the information needed to render this nav item:\n@@ -174,7 +176,7 @@ protected void renderContent(\n       int nextActiveIndex = navItemData.getEffectiveActiveIndex() - 1;\n       for (int i=0; i<visibleItemCount; i++)\n       {\n-        Map currentItemData = navItemData.getItemData(i);\n+        Map<String, Object> currentItemData = navItemData.getItemData(i);\n         currentItemData.put(\"isFirst\", (i == 0));\n         currentItemData.put(\"isLast\", (i == lastRowIndex));\n         currentItemData.put(\"previousActive\", previousActive);\n@@ -252,6 +254,7 @@ private String _getHint(FacesBean bean)\n     return renderingHint;\n   }\n \n+  @Override\n   protected String getShortDesc(FacesBean bean)\n   {\n     return toString(bean.getProperty(_shortDescKey));\n@@ -314,7 +317,7 @@ private void _collectNavItemData(\n         isActive = false; // there can only be 1 active item\n       }\n     }\n-    HashMap itemDataMap = new HashMap();\n+    HashMap<String, Object> itemDataMap = new HashMap<String, Object>();\n     itemDataMap.put(\"accessKey\", _getCommandChildProperty(commandChild, \"accessKey\"));\n     itemDataMap.put(\"component\", commandChild);\n     itemDataMap.put(\"dataIndex\", itemDataIndex);\n@@ -378,7 +381,7 @@ private void _renderNavigationItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     String renderingHint,\n     boolean isRtl\n     ) throws IOException\n@@ -456,7 +459,7 @@ private void _appendIconAndText(\n     RenderingContext arc,\n     ResponseWriter rw,\n     String iconUri,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -501,7 +504,7 @@ private void _writeItemLink(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled\n     ) throws IOException\n   {\n@@ -658,7 +661,7 @@ private void _renderNonOverlappingItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl,\n     boolean isBar,\n     boolean isList\n@@ -845,7 +848,7 @@ private void _renderChoiceItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData\n+    Map<String, Object> itemData\n     ) throws IOException\n   {\n     // Choice items do not support icons at this time.\n@@ -1016,7 +1019,7 @@ private void _renderTabItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl\n     ) throws IOException\n   {\n@@ -1211,7 +1214,7 @@ private void _renderTabSection(\n     String topStyleClass,\n     String bottomStyleClass,\n     String bottomContentStyleClass,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -1263,7 +1266,7 @@ private void _renderTabSection(\n   {\n     NavItemData()\n     {\n-      _list = new ArrayList<Map>();\n+      _list = new ArrayList<Map<String, Object>>();\n       _effectiveActiveIndex = -1;\n     }\n \n@@ -1282,17 +1285,17 @@ int getItemCount()\n       return _list.size();\n     }\n \n-    void addItemData(Map itemData)\n+    void addItemData(Map<String, Object> itemData)\n     {\n       _list.add(itemData);\n     }\n \n-    Map getItemData(int index)\n+    Map<String, Object> getItemData(int index)\n     {\n       return _list.get(index);\n     }\n \n-    private List<Map> _list;\n+    private List<Map<String, Object>> _list;\n     private int _effectiveActiveIndex;\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java",
                "sha": "0723874223a54d51b9c42c50552100ae9fcf557d",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java",
                "patch": "@@ -37,13 +37,14 @@ public OutputFormattedRenderer()\n     super(CoreOutputFormatted.TYPE);\n   }\n   \n-  \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _styleUsageKey = type.findKey(\"styleUsage\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +58,7 @@ protected void encodeBegin(\n     renderAllAttributes(context, arc, bean);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +76,7 @@ protected String getStyleUsage(FacesBean bean)\n     return toString(bean.getProperty(_styleUsageKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);\n@@ -82,16 +85,17 @@ protected String getStyleClass(FacesBean bean)\n       String usage = getStyleUsage(bean);\n       if (usage != null)\n       {\n-        styleClass = (String) _USAGES.get(usage);\n+        styleClass = _USAGES.get(usage);\n       }\n     }\n \n     return styleClass;\n   }\n \n-  static private final Map _USAGES = new HashMap();\n+  static private final Map<String, String> _USAGES;\n   static\n   {\n+    _USAGES = new HashMap<String, String>();\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_IN_CONTEXT_BRANDING,\n                 XhtmlConstants.IN_CONTEXT_TEXT_STYLE_CLASS);\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_INSTRUCTION,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java",
                "sha": "27c5fab1c19c851c0b00acbd14c089e6801b4da9",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java",
                "patch": "@@ -48,6 +48,13 @@ protected OutputLabelRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n+  public boolean getRendersChildren()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,18 +64,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _showRequiredKey       = type.findKey(\"showRequired\");\n   }\n \n-\n-  public boolean getRendersChildren()\n-  {\n-    return true;\n-  }\n-\n   /**\n    * @todo Often, we can get by with just a single label, not\n    * a span and a label\n    * @todo If all that is set is \"required\", it seems that we\n    *  *don't* render a span, but do render the icon.  This is strange.\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -273,6 +275,7 @@ else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(type))\n   // OVERRIDES\n   //\n   \n+  @Override\n    protected void renderAllAttributes(\n      FacesContext        context,\n      RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java",
                "sha": "5cd897a86a8dc33305355c27c48814b26ec6d3ae",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java",
                "patch": "@@ -35,6 +35,7 @@ public OutputTextRenderer()\n     super(CoreOutputText.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,6 +45,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _descriptionKey = type.findKey(\"description\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,6 +62,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java",
                "sha": "eecdb15fd48590e68b52f2e4ec33933dc41a0d6e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java",
                "patch": "@@ -232,13 +232,13 @@ public static void renderIcon(\n     if (icon.isNull())\n       return;\n \n-    Map attrs = null;\n+    Map<String, Object> attrs = null;\n \n     if ((shortDesc != null)  ||\n         (align != null)      ||\n          embedded)\n     {\n-      attrs = new ArrayMap(3);\n+      attrs = new ArrayMap<String, Object>(3);\n       attrs.put(Icon.SHORT_DESC_KEY, shortDesc);\n       attrs.put(Icon.ALIGN_KEY, align);\n       attrs.put(Icon.EMBEDDED_KEY, Boolean.valueOf(embedded));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java",
                "sha": "f9b6cb460a80e9e8f3b95ab675394186a06b3c3d",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java",
                "patch": "@@ -41,6 +41,7 @@ protected PanelBoxRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -50,11 +51,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n   \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -79,6 +82,7 @@ protected void encodeAll(\n     writer.endElement(\"table\");\n   }\n   \n+  @Override\n   protected void renderAllAttributes(FacesContext context, \n     RenderingContext arc, \n     FacesBean bean) throws IOException\n@@ -87,6 +91,7 @@ protected void renderAllAttributes(FacesContext context,\n     OutputUtils.renderLayoutTableAttributes(context, arc, \"0\", null);\n   }\n   \n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java",
                "sha": "a35071d7a1b1b84fcf3fc727f3e07b21a16e0509",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java",
                "patch": "@@ -48,6 +48,7 @@ public PanelFormLayoutRenderer()\n     super(CorePanelFormLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _maxColumnsKey = type.findKey(\"maxColumns\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -67,6 +69,7 @@ public boolean getRendersChildren()\n    * This is how we can render both the user defined styleClass and our\n    * component style class.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -130,6 +133,8 @@ protected String getDefaultStyleClass()\n     return XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -197,6 +202,7 @@ protected void encodeAll(\n     rw.endElement(\"div\"); // the root element\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -208,7 +214,9 @@ private void _encodeChildren(\n   {\n     // We cannot render a nested panelForm with any more than a single column\n     // so we must monitor whether we are nested or not:\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     int nestLevel = 0;\n     if (nestLevelObject != null)\n@@ -220,7 +228,7 @@ private void _encodeChildren(\n     // Iterate through the childPeers extracting and counting the number of\n     // visible children, also count the visible children inside of visible\n     // DhtmlGroupPeers:\n-    List childComponents = component.getChildren();\n+    List<UIComponent> childComponents = component.getChildren();\n     FormItemInfo visibleFormItemInfo = _extractVisibleItems(childComponents);\n     List<FormItem> visibleFormItems = visibleFormItemInfo.getFormItems();\n     int totalFormItemCount = visibleFormItemInfo.getTotalFormItemCount();\n@@ -353,6 +361,7 @@ else if (actualColumns == 1)\n    * UIXGroups.\n    * @param \n    */\n+  @SuppressWarnings(\"unchecked\")\n   private FormItemInfo _extractVisibleItems(List<UIComponent> children)\n   {\n     FormItemInfo formItemInfo = new FormItemInfo();\n@@ -568,6 +577,7 @@ else if ( (labelWidth != null) && (fieldWidth != null) )\n       outerTableWidth);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeFormColumns(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -717,7 +727,7 @@ private void _encodeFormItem(\n       // If a peer wants to play well with panelForm, it must use the proper\n       // PanelForm wrapper APIs to ensure proper DOM structure.\n       _encodeBeforeLabelTd(context, arc, rw, startAlignedLabels);\n-      Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+      Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n       try\n       {\n         if (startAlignedLabels)\n@@ -797,12 +807,15 @@ private static void _encodeBeforeLabelTd(\n    * @param rw ResponseWriter\n    * @throws IOException\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected static void encodeBetweenLabelAndFieldCells(\n     FacesContext        context,\n     RenderingContext arc,\n     ResponseWriter      rw) throws IOException\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     if ( (nestLevelObject != null) &&\n       (nestLevelObject.intValue() > 0) ) // top-aligned (labels stacked above fields)\n@@ -942,9 +955,10 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private PropertyKey _maxColumnsKey;\n \n   // Overallocate because we basically want everything to miss\n-  private static final Set _UNSUPPORTED_RENDERER_TYPES = new HashSet(64);\n+  private static final Set<String> _UNSUPPORTED_RENDERER_TYPES;\n   static\n   {\n+    _UNSUPPORTED_RENDERER_TYPES = new HashSet<String>(64);\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Hidden\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Shuttle\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.rich.Hidden\");\n@@ -957,8 +971,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private static final int _COLUMNS_DEFAULT = 3;\n \n   // we need a  resource key map since we are using LabelAndMessageRenderer.\n-  private static final Map _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap();\n-  private static final Map _RESOURCE_KEY_STACKED_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_SIDE_BY_SIDE_MAP;\n+  private static final Map<String, String> _RESOURCE_KEY_STACKED_MAP;\n \n   static\n   {\n@@ -967,6 +981,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n     // instead of the generic prompt cell style.\n \n     // Start-aligned labels for side-by-side orientation:\n+    _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_SIDE_BY_SIDE_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_CELL_STYLE_CLASS);\n@@ -978,6 +994,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n       XhtmlConstants.AF_PANEL_FORM_MESSAGE_CELL_STYLE_CLASS);\n \n     // Stacked labels for one-over-the-other orientation:\n+    _RESOURCE_KEY_STACKED_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_STACKED_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_STACKED_CELL_STYLE_CLASS);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java",
                "sha": "3086461a24842e4963887c48cd90c01423cf0c23",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 6,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java",
                "patch": "@@ -36,18 +36,20 @@ public PanelGroupLayoutRenderer()\n     super(CorePanelGroupLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -102,6 +104,7 @@ else if (isVertical)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     UIComponent  component,\n@@ -111,16 +114,12 @@ private void _encodeChildren(\n   {\n     ResponseWriter rw = context.getResponseWriter();\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelGroupLayout.SEPARATOR_FACET);\n \n     boolean needSeparator = false;\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java",
                "sha": "186d674e700628747c0d2056b60024de75f3dc74",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java",
                "patch": "@@ -26,6 +26,7 @@\n import org.apache.myfaces.trinidad.component.core.layout.CorePanelHeader;\n \n \n+import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n \n@@ -48,6 +49,7 @@ protected PanelHeaderRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,12 +59,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageTypeKey = type.findKey(\"messageType\");\n   }\n   \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,7 +141,7 @@ protected void encodeAll(\n     // need to clear after the header or you get strange behavior\n     if ( nesting &&\n          isIE(arc) &&\n-         arc.getAgent().OS_WINDOWS == arc.getAgent().getAgentOS())\n+         TrinidadAgent.OS_WINDOWS == arc.getAgent().getAgentOS())\n     {\n       writer.startElement(\"div\", component);\n       writer.writeAttribute(\"style\",\"clear:both\", null);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java",
                "sha": "e85fbdc60f91457e3f4f2149fa3a6b2a6e4acc47",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java",
                "patch": "@@ -36,19 +36,21 @@ public PanelHorizontalLayoutRenderer()\n     super(CorePanelHorizontalLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valignKey = type.findKey(\"valign\");\n     _halignKey = type.findKey(\"halign\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -94,6 +96,7 @@ protected Object getHalign(FacesBean bean)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     RenderingContext arc,\n@@ -103,10 +106,6 @@ private void _encodeChildren(\n     ) throws IOException\n   {\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelHorizontalLayout.SEPARATOR_FACET);\n \n@@ -123,9 +122,8 @@ else if (CorePanelHorizontalLayout.HALIGN_RIGHT.equals(hAlign))\n     else\n       isEndAlignment = false;\n     \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java",
                "sha": "557026d7bfdfa2f68654b8d0d3c8af0c6e47a8a7",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java",
                "patch": "@@ -39,25 +39,28 @@ public PanelLabelAndMessageRenderer()\n     super(CorePanelLabelAndMessage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _forKey = type.findKey(\"for\");\n     _labelInlineStyleKey = type.findKey(\"labelStyle\");\n   }    \n \n+  @Override\n   protected boolean labelShowRequired(FacesBean bean)\n   {\n     // Simpler algorithm for panelLabelAndMessage\n     return getShowRequired(bean);\n-  }\n-  \n+  } \n  \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|panelLabelAndMessage\";\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -71,6 +74,7 @@ protected String getLabelFor(\n                                        forValue);\n   }\n \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +128,7 @@ protected void renderFieldCellContents(\n     rw.endElement(\"table\");\n   }\n \n+  @Override\n   protected boolean hasMessage(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,6 +143,7 @@ protected String getFor(FacesBean bean)\n     return toString(bean.getProperty(_forKey));\n   }\n \n+  @Override\n   protected String getLabelInlineStyleKey(FacesBean bean)\n   {\n     return toString(bean.getProperty(_labelInlineStyleKey));",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java",
                "sha": "26cbd1dd69f213fa073ce30b89f837904ad64596",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java",
                "patch": "@@ -38,6 +38,7 @@ public PanelListRenderer()\n     super(CorePanelList.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -51,6 +52,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * We want to render the styleClass/inlineStyle attributes as well\n    * as our component styleClass.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,12 +62,13 @@ protected void renderStyleAttributes(\n                           XhtmlConstants.AF_PANEL_LIST_STYLE_CLASS);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -126,6 +129,7 @@ private void _renderListStyle(\n \n   // render without columns. Called when rows > children or when we have\n   // multiple columns, and we are rendering a single column.\n+  @SuppressWarnings(\"unchecked\")\n   private int _renderNoColumns(\n     FacesContext context,\n     RenderingContext arc,\n@@ -139,14 +143,14 @@ private int _renderNoColumns(\n     int maxChildIndex = component.getChildCount();\n     int numRendered = 0;\n     int childIndex = start;\n-    List children   = component.getChildren();\n+    List<UIComponent> children   = component.getChildren();\n \n     writer.startElement(\"ul\", null);\n     _renderListStyle(context, bean);\n \n     while ( numRendered < numToRender  && childIndex < maxChildIndex)\n     {\n-      UIComponent child = (UIComponent) children.get(childIndex);\n+      UIComponent child = children.get(childIndex);\n \n       // if visible child\n       if ( child != null && child.isRendered())",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java",
                "sha": "a777a305a1588f2b70ae33b908392130b793658e",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 5,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java",
                "patch": "@@ -59,6 +59,7 @@ protected PanelPartialRootRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -73,7 +74,7 @@ protected void renderContent(\n     encodeAllChildren(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -185,7 +186,7 @@ private void _renderPartialScripts(\n     PartialPageContext pprContext = arc.getPartialPageContext();\n     if (_shouldRenderPartialScripts(pprContext))\n     {\n-      Iterator targets = pprContext.getRenderedPartialTargets();\n+      Iterator<String> targets = pprContext.getRenderedPartialTargets();\n       String scripts = scriptBufferingWriter.getBufferedScripts();\n \n       ResponseWriter writer = context.getResponseWriter();\n@@ -205,7 +206,7 @@ private void _renderPartialScripts(\n         writer.startElement(\"pprtargets\",null);\n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             writer.startElement(\"pprtarget\", null);\n@@ -240,7 +241,8 @@ private void _renderPartialScripts(\n \n         writer.endElement(\"script\");\n \n-        Iterator libraries = scriptBufferingWriter.getBufferedLibraries();\n+        Iterator<Object> libraries = \n+          scriptBufferingWriter.getBufferedLibraries();\n \n         writer.startElement(\"script\", null);\n         XhtmlRenderer.renderScriptTypeAttribute(context, arc);\n@@ -287,7 +289,7 @@ private void _renderPartialScripts(\n \n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             if (firstRenderedTarget)\n@@ -496,11 +498,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _PARTIAL_CACHE_LIBRARY_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java",
                "sha": "f6d647c3c54b514eafeeeb9e7294350a4956d72d",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java",
                "patch": "@@ -22,7 +22,6 @@\n import org.apache.myfaces.trinidad.context.RequestContext;\n \n import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n-import org.apache.myfaces.trinidadinternal.context.RequestContextBean;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.renderkit.core.ppr.PartialPageContext;\n@@ -50,9 +49,12 @@ public static boolean isPartialRequest(FacesContext context)\n    * a \"partial\" parameter.\n    * @todo This is probably unnecessary.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void forcePartialRendering(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     requestMap.put(_PARTIAL_KEY, Boolean.TRUE);\n   }\n \n@@ -125,20 +127,24 @@ public static boolean supportsBlocking(\n   /**\n    * Test if PPR is active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static boolean isPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     return Boolean.TRUE.equals(requestScope.get(_PPR_ACTIVE_FLAG_NAME));\n   }\n \n   /**\n    * Mark that PPR is in fact active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void markPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     requestScope.put(_PPR_ACTIVE_FLAG_NAME, Boolean.TRUE);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java",
                "sha": "7d08aa042ed65e6d6d3c2d4c2e59be283a047d97",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java",
                "patch": "@@ -41,11 +41,13 @@ public PdaPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java",
                "sha": "8d309ae81637196618ac4eefd286d540cf96f918",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java",
                "patch": "@@ -205,11 +205,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException\n@@ -229,11 +231,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_CHOICE_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java",
                "sha": "81f685f92803db8c9a0e35ae8f2bc3779e54cc30",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java",
                "patch": "@@ -34,8 +34,8 @@\n    * @param toComponent eg: treeTable\n    * @return A new map with the replacesment values.\n    */\n-  public static Map convertResourceKeyMap(\n-    Map original, \n+  public static Map<String, String> convertResourceKeyMap(\n+    Map<String, String> original, \n     String fromComponent, \n     String toComponent)\n   {\n@@ -44,18 +44,27 @@ public static Map convertResourceKeyMap(\n     String pattern2 = \"af|\"+fromComponent+\":\";\n     String replace2 = \"af|\"+toComponent+\":\";\n     \n-    Map result = new HashMap(original.size());\n-    Iterator entries = original.entrySet().iterator();\n-    while(entries.hasNext())\n+    Map<String, String> result = \n+      new HashMap<String, String>(original.size());\n+    \n+    Iterator<Map.Entry<String, String>> entries = \n+      original.entrySet().iterator();\n+    \n+    for(Map.Entry<String, String> entry : original.entrySet())\n     {\n-      Map.Entry en = (Map.Entry) entries.next();\n-      String value = (String) en.getValue();\n+      String value = entry.getValue();\n       if (value.startsWith(pattern1))\n+      {\n         value = _replace(value, pattern1, replace1);\n+      }\n       else if (value.startsWith(pattern2))\n+      {\n         value = _replace(value, pattern2, replace2);\n-      result.put(en.getKey(), value);\n+      }\n+      \n+      result.put(entry.getKey(), value);\n     }\n+    \n     return result;\n   }\n   ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java",
                "sha": "39afcd873688e349c73950b0f1f923382869c9ad",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java",
                "patch": "@@ -28,11 +28,13 @@ public SelectBooleanCheckboxRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanCheckbox\";\n   }\n   \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n@@ -42,6 +44,7 @@ protected boolean isIndented()\n    * Don't render <label> on the label portion if there's\n    * a \"text\" attribute set.\n    */\n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanCheckbox.getText(bean);\n@@ -52,6 +55,7 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanCheckbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java",
                "sha": "78201b80596d4b91b969bd2674e97f7622541d9d",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java",
                "patch": "@@ -27,6 +27,7 @@ public SelectBooleanRadioRenderer()\n     \n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanRadio\";\n@@ -36,6 +37,7 @@ protected String getRootStyleClass(FacesBean bean)\n    * selectBooleanRadio should not render a &lt;label&gt; on itself\n    * if \"text\" is set.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanRadio.getText(bean);\n@@ -46,11 +48,13 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n   }  \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanRadio;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java",
                "sha": "77702ed73640289543f89bcc7460c9393f1252ea",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java",
                "patch": "@@ -28,12 +28,14 @@ public SelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyCheckbox\";\n@@ -44,6 +46,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -56,16 +59,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectManyCheckbox should not render a &lt;label&gt; on itself.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyCheckbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java",
                "sha": "23693d15ac280d7bacc3f6ddda5ab59d61d9db67",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java",
                "patch": "@@ -27,16 +27,19 @@ public SelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyListbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java",
                "sha": "1c0098929c13fbd841f89831a9fb9107abaf636f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java",
                "patch": "@@ -28,11 +28,13 @@ public SelectOneChoiceRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneChoice;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java",
                "sha": "4d1d4fab467387f65cd160e1032dfcd02f525353",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java",
                "patch": "@@ -28,16 +28,19 @@ public SelectOneListboxRenderer()\n     \n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneListbox;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java",
                "sha": "06db36a44da4f1c7c6d32bf811658f7b61010f12",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java",
                "patch": "@@ -27,12 +27,14 @@ public SelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";\n@@ -43,6 +45,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -55,16 +58,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectOneRadio should not render a &lt;label&gt; on itself.\n    */ \n-   protected boolean hasOwnLabel(FacesBean bean)\n-   {\n-     return true;\n-   }\n+  @Override\n+  protected boolean hasOwnLabel(FacesBean bean)\n+  {\n+    return true;\n+  }\n \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneRadio;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java",
                "sha": "1ab103cb7d2db603dd031c966cdf5aa4df2d778c",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 17,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java",
                "patch": "@@ -58,6 +58,7 @@ public SelectRangeChoiceBarRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -68,9 +69,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _varKey = type.findKey(\"var\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n \n     // get the goto event parameter values and queue a RangeChangeEvent.\n@@ -153,7 +158,7 @@ private RangeChangeEvent _createRangeChangeEvent(\n                                 newStart, newEnd);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -162,6 +167,7 @@ public boolean getRendersChildren()\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -269,6 +275,7 @@ protected boolean showAllSupported()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -629,7 +636,8 @@ else if (/*(maxValue == MAX_VALUE_UNKNOWN) ||*/ !supportsScripting(arc))\n     }\n     else\n     {\n-      List items = new ArrayList((int) _MAX_VISIBLE_OPTIONS);\n+      List<SelectItem> items = \n+        new ArrayList<SelectItem>((int) _MAX_VISIBLE_OPTIONS);\n \n       int selectedIndex = _getItems(context, arc, component, items,\n                                     minValue, maxValue, currentValue,\n@@ -685,24 +693,23 @@ else if (count == 1)\n         writer.startElement(\"span\", null);\n         renderStyleClass(context, arc,\n                          XhtmlConstants.AF_FIELD_TEXT_STYLE_CLASS);\n-        writer.writeText(((SelectItem) items.get(0)).getLabel(),\n-                         null);\n+        writer.writeText(items.get(0).getLabel(), null);\n         writer.endElement(\"span\");\n       }\n     }\n   }\n \n \n   private void _writeSelectItems(\n-    FacesContext context,\n-    List         items,\n-    int          selectedIndex) throws IOException\n+    FacesContext     context,\n+    List<SelectItem> items,\n+    int              selectedIndex) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n     int count = items.size();\n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) items.get(i);\n+      SelectItem item = items.get(i);\n       writer.startElement(\"option\", null);\n       writer.writeAttribute(\"value\", item.getValue(), null);\n       if (i == selectedIndex)\n@@ -720,7 +727,7 @@ private int _getItems(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n-    List                items,\n+    List<SelectItem>    items,\n     long                minValue, long maxValue, long value,\n     int                 blockSize,\n     UIComponent         rangeLabel)\n@@ -730,8 +737,7 @@ private int _getItems(\n     boolean maxUnknown = (maxValue == XhtmlConstants.MAX_VALUE_UNKNOWN);\n \n     // Zero-indexed block index.\n-    long blockIndex = (value - minValue + ((long) blockSize) - 1L) /\n-      (long) blockSize;\n+    long blockIndex = (value - minValue + blockSize - 1L) / blockSize;\n \n     // sometimes a record set won't start on a multiple of blockSize. So\n     // remember to add any offset:\n@@ -747,8 +753,7 @@ private int _getItems(\n       maxBlockIndex = blockIndex + 1;\n     else\n     {\n-      maxBlockIndex = (maxValue - minValue - offset) /\n-                      ((long) blockSize);\n+      maxBlockIndex = (maxValue - minValue - offset) / blockSize;\n       if (offset > 0)\n         maxBlockIndex++;\n     }\n@@ -798,7 +803,7 @@ private int _getItems(\n          blockIndex <= lastBlockIndex;\n          blockIndex++)\n     {\n-      long blockStart = minValue + (blockIndex * ((long) blockSize));\n+      long blockStart = minValue + (blockIndex * blockSize);\n \n       // if there is an offset, then adjust accordingly. for example, if the\n       // offset is 7 (and the blockSize is 10), then the new blockStarts are:\n@@ -1094,6 +1099,7 @@ protected String getBlockString(\n    *   {0}-{1}\n    *  (and not bother with the \"of\" substitution)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private String _getRangeString(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1138,7 +1144,7 @@ private String _getRangeString(\n       String var = getVar(getFacesBean(component));\n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n         old = requestMap.put(var, range);\n       }\n@@ -1149,8 +1155,9 @@ private String _getRangeString(\n \n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n+        \n         if (old == null)\n           requestMap.remove(var);\n         else",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java",
                "sha": "dd8ab5e1de42ff593a7e5376fee1050b2346470d",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java",
                "patch": "@@ -37,22 +37,23 @@ public ShowDetailHeaderRenderer()\n   {\n     super(CoreShowDetailHeader.TYPE);\n   }\n-\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _detailRenderer = new DetailRenderer(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     // Delegate decoding to the showDetail renderer\n     _detailRenderer.decode(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -61,7 +62,7 @@ protected void encodeAll(\n   {\n     // map the resource value keys that are used in showDetail and header\n     // to the keys we need to use in this renderer.\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n \n@@ -75,13 +76,15 @@ protected void encodeAll(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(FacesContext context, RenderingContext arc, \n                             UIComponent component, FacesBean bean, String messageType)\n     throws IOException\n   {\n     delegateRenderer(context, arc, component, bean, _detailRenderer);\n   }\n \n+  @Override\n   protected String getMessageType(FacesBean bean)\n   {\n     // Not currently supported\n@@ -97,6 +100,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected boolean shouldRenderChildren(FacesBean bean)\n   {\n     return getDisclosed(bean);\n@@ -110,23 +114,27 @@ public DetailRenderer(FacesBean.Type type)\n       super(type);\n     }\n     \n+    @Override\n     protected void renderId(FacesContext context, UIComponent component)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected void renderAllAttributes(FacesContext context, \n                                        RenderingContext arc, \n                                        FacesBean bean)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getDisclosureText(RenderingContext arc, \n                                        FacesBean bean, boolean disclosed)\n     {\n@@ -137,9 +145,11 @@ protected String getDisclosureText(RenderingContext arc,\n   private CoreRenderer _detailRenderer;\n   private PropertyKey  _disclosedKey;\n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\"af_showDetail.DISCLOSED\" ,\n                           \"af_showDetailHeader.DISCLOSED\");\n     _RESOURCE_KEY_MAP.put(\"af_showDetail.UNDISCLOSED\" ,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java",
                "sha": "aaf1a37846ade5e3ff1ca56706abfe3d6bd5e988",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java",
                "patch": "@@ -43,15 +43,20 @@ protected ShowDetailItemRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.HIDE_EVENT.equals(event) ||\n         XhtmlConstants.SHOW_EVENT.equals(event))\n@@ -68,7 +73,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -83,6 +88,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java",
                "sha": "5eeed263ed5c0f8ba7f4f5bffc8d028c25605848",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java",
                "patch": "@@ -46,6 +46,7 @@ protected ShowDetailRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,6 +57,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,6 +195,7 @@ protected void renderDisclosureIcon(\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java",
                "sha": "1f206ed736e73ad8256ef4a85a3d7964b97e1815",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 9,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java",
                "patch": "@@ -62,13 +62,15 @@ public SimpleInputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _compactKey = type.findKey(\"compact\");\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -83,7 +85,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Color color = null;\n       try\n       {\n@@ -104,7 +106,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       RequestContext afContext = RequestContext.getCurrentInstance();\n \n       // =-=AEW Parameters?  Shouldn't we pass in the color?\n-      Map parameters = null;\n+      Map<String, Object> parameters = null;\n       afContext.launchDialog(GenericEntry.getGenericEntryViewRoot(context),\n                              parameters,\n                              component,\n@@ -117,6 +119,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -152,7 +155,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -176,6 +179,7 @@ protected void encodeAllAsElement(\n     arc.getProperties().remove(_CACHED_CHOOSE_ID);\n   }\n \n+  @Override\n   protected void renderTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -210,6 +214,7 @@ protected void renderTextField(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -228,6 +233,7 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected void renderAfterTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +255,7 @@ protected void renderAfterTextField(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -271,14 +278,15 @@ protected void renderIcon(\n   /**\n    * Return a default converter.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n   {\n     return _DEFAULT_CONVERTER;\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -310,6 +318,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -337,6 +346,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -349,8 +359,7 @@ protected String getOnblur(FacesBean bean)\n                                    onblur, false);\n   }\n \n-\n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -366,14 +375,15 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     // Not supported for selectInputColor\n     // =-=AEW We could have a good default\n     return null;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_COLOR_LAUNCH_ICON_NAME;\n@@ -393,11 +403,13 @@ protected boolean isCompact(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor::content\";\n@@ -425,6 +437,7 @@ private boolean _supportsSwatchAndChooser(RenderingContext arc)\n     return (arc.getAgent().getAgentType() != TrinidadAgent.TYPE_PDA);\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -531,6 +544,7 @@ private Color _getColorValue(FacesBean bean)\n \n   // Checks to see whether this is the first color field for\n   // a given chooseId, and if so renders a script\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderFirstColorFieldScript(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -550,12 +564,12 @@ private void _renderFirstColorFieldScript(\n     String id = getClientId(context, component);\n \n \n-    Map chooseColorIds = (Map)\n+    Map<String, Boolean> chooseColorIds = (Map<String, Boolean>)\n       arc.getProperties().get(_CHOOSE_COLOR_IDS_KEY);\n \n     if (chooseColorIds == null)\n     {\n-      chooseColorIds = new HashMap();\n+      chooseColorIds = new HashMap<String, Boolean>();\n       arc.getProperties().put(_CHOOSE_COLOR_IDS_KEY, chooseColorIds);\n     }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java",
                "sha": "85ca0ca43f2d11cf0a3bbbd46be93894e1edf31e",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 15,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java",
                "patch": "@@ -30,6 +30,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.convert.DateTimeConverter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -60,12 +61,14 @@ public SimpleInputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -80,7 +83,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Date date = null;\n       try\n       {\n@@ -110,7 +113,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       if (date == null)\n         date = new Date();\n \n-      Map parameters = new HashMap();\n+      Map<String, Object> parameters = new HashMap<String, Object>();\n       parameters.put(XhtmlConstants.VALUE_PARAM, _getDateAsString(date));\n       parameters.put(XhtmlConstants.MIN_VALUE_PARAM,\n                      dtrv == null\n@@ -133,6 +136,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -169,7 +173,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -191,6 +195,7 @@ protected void encodeAllAsElement(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -213,6 +218,7 @@ protected void renderIcon(\n    * may map to \"medium\"\n    * @todo medium / default is  what it is defaulted to in faces\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -258,6 +264,7 @@ protected Converter getDefaultConverter(\n     return converter;\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -283,6 +290,7 @@ protected String getOnblur(FacesBean bean)\n     return XhtmlUtils.getChainedJS(buffer.toString(), onblur, false);\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -317,7 +325,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -379,7 +387,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -397,7 +405,7 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_DATE_LAUNCH_ICON_NAME;\n@@ -408,6 +416,7 @@ protected String getChooseId(FacesBean bean)\n     return toString(bean.getProperty(_chooseIdKey));\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -417,12 +426,13 @@ protected String getSearchDesc(FacesBean bean)\n     return arc.getTranslatedString(_LAUNCH_PICKER_TIP_KEY);\n   }\n \n-\n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate::content\";\n@@ -447,6 +457,7 @@ private String _computeChooseId(\n   // Checks to see whether the current dateField should\n   // be active, and if so, renders a script that will activate\n   // it.\n+  @SuppressWarnings(\"unchecked\")\n   private void _checkIfActive(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -459,13 +470,12 @@ private void _checkIfActive(\n \n     String id = getClientId(context, component);\n \n-\n-    Map activeDateFields = (Map)\n+    Map<String, Boolean> activeDateFields = (Map<String, Boolean>)\n       arc.getProperties().get(_ACTIVE_DATE_FIELDS_KEY);\n \n     if (activeDateFields == null)\n     {\n-      activeDateFields = new HashMap();\n+      activeDateFields = new HashMap<String, Boolean>();\n       arc.getProperties().put(_ACTIVE_DATE_FIELDS_KEY, activeDateFields);\n     }\n \n@@ -500,7 +510,7 @@ private void _checkIfActive(\n   //\n   private DateTimeRangeValidator _findDateTimeRangeValidator(FacesBean bean)\n   {\n-    Iterator validators = getValidators(bean);\n+    Iterator<Validator> validators = getValidators(bean);\n     while (validators.hasNext())\n     {\n       Object validator = validators.next();\n@@ -563,13 +573,11 @@ private static long _adjustTimeZone(Date date)\n     // properly ie. MIN_VALUE < (longValue + tzOffset) < MAX_VALUE.\n     if (tzOffset < 0)\n     {\n-     tzOffset = (long)Math.max((float)tzOffset,\n-                               (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-     tzOffset = (long)Math.min((float)tzOffset,\n-                               (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n \n     // adjust the date in ms to the adjusted time zone.\n@@ -592,11 +600,13 @@ private DateTimeZoneOffsetScriptlet()\n     {\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _DATE_TIME_ZONE_OFFSET_KEY;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java",
                "sha": "aa95f9fffe1c431f3f12ff39c527de36a3b9f1d2",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java",
                "patch": "@@ -37,6 +37,7 @@ public SimpleInputFileRenderer()\n   //\n   // DECODE BEHAVIOR\n   // \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -59,6 +60,7 @@ public Object getSubmittedValue(\n     return result;\n   }\n \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -79,6 +81,7 @@ public Object getConvertedValue(\n   /**\n    * <inputFile> cannot show a value.\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -87,6 +90,7 @@ protected String getConvertedString(\n     return null;\n   }\n \n+  @Override\n   protected String getDefaultInputType()\n   {\n     return \"file\";\n@@ -98,44 +102,51 @@ protected String getDefaultInputType()\n   // an inputFile\n   // \n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean isAutoSubmit(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean getReadOnly(FacesContext context, FacesBean bean)\n   {\n     return false;\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputFile::content\";\n   }\n \n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java",
                "sha": "f6e0fade50f62f8ae06a5d526fc2b098ae9fde2b",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java",
                "patch": "@@ -53,6 +53,7 @@ protected SimpleInputListOfValuesRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -65,6 +66,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   // DECODE BEHAVIOR\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     super.decode(context, component);\n@@ -81,7 +84,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n       if ((source != null) && source.equals(clientId))\n@@ -125,6 +130,7 @@ protected void queueActionEvent(\n   // Encode behavior\n   //\n \n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -147,6 +153,7 @@ protected void encodeAllAsElement(\n       rw.endElement(\"span\");\n   }\n   \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -171,6 +178,7 @@ protected void encodeAllAsNonElement(\n    * the span and root dom element styles on the text field, which we \n    * don't, since we do it ourselves on our root dom element.\n    */\n+  @Override\n   protected boolean isSimpleInputText(FacesBean bean)\n   {\n     return false;\n@@ -317,12 +325,14 @@ protected String getLaunchOnclick(\n     }\n   }\n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n@@ -332,6 +342,7 @@ protected boolean getSecret(FacesBean bean)\n    * We want onclick to move from the input field to the button;\n    * @see #getButtonOnclick\n    */\n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     return null;\n@@ -360,11 +371,13 @@ protected String getIcon(\n     return toUri(bean.getProperty(_iconKey));\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputListOfValues::content\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java",
                "sha": "b5d482336e1927f5d589224405517f4d73df66c6",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 8,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java",
                "patch": "@@ -47,6 +47,7 @@ protected SimpleInputTextRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -59,7 +60,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -86,7 +87,7 @@ else if (isTextArea(bean))\n     return submitted;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -152,6 +153,7 @@ protected void encodeAllAsElement(\n \n   }    \n        \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -240,11 +242,13 @@ protected void renderAllAttributes(\n \n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n@@ -280,6 +284,7 @@ protected String getDefaultInputType()\n   /**\n    * Renders event handlers for the node.\n    */\n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -290,6 +295,7 @@ protected void renderEventHandlers(\n     rw.writeAttribute(\"onselect\", getOnselect(bean), \"onselect\");\n   }\n \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -331,6 +337,7 @@ protected void encodeAllAsNonElement(\n   /**\n    * @todo Remove if never necessary\n    */\n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -510,7 +517,7 @@ private void _writeTextLineWithBreaks(\n     }\n   }\n \n-\n+  @Override\n   protected String getOnkeypress(\n     FacesBean bean\n     )\n@@ -529,7 +536,7 @@ protected String getOnkeypress(\n     return onKeyPress;\n   }\n \n-\n+  @Override\n   protected String getOnkeydown(FacesBean bean)\n   {\n     String onKeydown = super.getOnkeydown(bean);\n@@ -546,6 +553,7 @@ protected String getOnkeydown(FacesBean bean)\n   /**\n    * @todo We have to \"getCurrentInstance()\" *twice*.  UGH!\n    */\n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -558,15 +566,16 @@ protected String getOnfocus(FacesBean bean)\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       if (!supportsReadonlyFormElements(arc))\n       {\n-        onfocus = (String) XhtmlUtils.getChainedJS(\"this.blur()\",\n-                                                   onfocus,\n-                                                   true);\n+        onfocus = XhtmlUtils.getChainedJS(\"this.blur()\",\n+                                          onfocus,\n+                                          true);\n       }\n     }\n \n     return onfocus;\n   }\n \n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -641,6 +650,9 @@ protected boolean getSecret(FacesBean bean)\n   /**\n    * @todo - Find a efficient way to identify that this is a numeric field\n    */\n+  //-= Simon Lessard =-\n+  //TODO:  This method is not even used locally\n+  @SuppressWarnings(\"unused\")\n   private boolean _isNumericField(\n //    FacesBean bean\n     )\n@@ -664,6 +676,7 @@ public boolean isTextArea(\n   /**\n    * @todo RENABLE ONFOCUS HACK\n    */\n+  @Override\n   protected boolean renderReadOnlyAsElement(\n     RenderingContext arc,\n     FacesBean           bean)\n@@ -721,7 +734,7 @@ static private String _getMaxLengthFunction(\n     if (userFunc == null)\n       return functionCall;\n \n-    return (String) XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n+    return XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java",
                "sha": "52f9824ded5012a1be1716735f67bb608eea321b",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java",
                "patch": "@@ -40,6 +40,7 @@ public SimpleSelectBooleanCheckboxRenderer(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -55,17 +56,20 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     // HTML 3.2 specification, default value for checkboxes\n     return \"t\";\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"checkbox\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -75,6 +79,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanCheckbox.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -97,7 +102,7 @@ protected String getIconName(\n     return iconName;           \n   }\n   \n-\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -115,11 +120,13 @@ else if (auto != null)\n     return onClick;\n   }  \n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java",
                "sha": "b2ed64aa9017006751a6ad6e91c70f7c4f4726fa",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java",
                "patch": "@@ -39,6 +39,7 @@ public SimpleSelectBooleanRadioRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -49,6 +50,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -71,16 +73,19 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     return arc.getCurrentClientId();\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"radio\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -90,6 +95,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanRadio.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -113,6 +119,7 @@ protected String getIconName(\n     return iconName;           \n   }\n \n+  @Override\n   protected void renderNameAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,26 +138,27 @@ protected void renderNameAttribute(\n    * Returns true if the component should render the ID as a name.\n    * By default, don't if the component is readonly.\n    */\n+  @Override\n   protected boolean shouldRenderName(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return false;\n   }\n-\n-\n+  \n+  @Override\n   protected boolean isRadio()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected String getCompositeId(String clientId)\n   {\n     return clientId + XhtmlConstants.COMPOSITE_ID_EXTENSION + \"r\";   \n   }\n   \n-\n+  @Override\n   protected void renderSpanEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -170,6 +178,7 @@ protected void renderSpanEventHandlers(\n     rw.writeAttribute(\"onmouseup\", getOnmouseup(bean),  \"onmouseup\");\n   }\n   \n+  @Override\n   protected void renderInputEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -186,11 +195,13 @@ protected String getGroup(FacesBean bean)\n     return toString(bean.getProperty(_groupKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java",
                "sha": "58bf3d767d628844714567370d9cab279f3b3680",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java",
                "patch": "@@ -37,6 +37,7 @@ public SimpleSelectBooleanRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -77,6 +78,7 @@ protected void renderNameAttribute(\n    * @TODO use new renderAllAttributes that doesn't render styleclass once\n    * Jeanne adds it.\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -172,7 +174,7 @@ protected void encodeAllAsElement(\n       writer.endElement(\"span\");      \n   }\n \n-\n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java",
                "sha": "b7b9e2f6db34cd438aa6871ed2f2e9c7352c8a90",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java",
                "patch": "@@ -44,6 +44,7 @@ public SimpleSelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,12 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -108,7 +110,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -141,7 +143,7 @@ protected void encodeSelectItems(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selected, disabled,\n@@ -237,6 +239,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderBetweenNonElements(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +252,7 @@ protected void renderBetweenNonElements(\n       super.renderBetweenNonElements(context, arc, component, bean);\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -265,6 +269,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -276,6 +281,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -328,15 +334,19 @@ protected String getLayout(FacesBean bean)\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   } \n+  \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java",
                "sha": "9c3fae31bce686f8491b78ef39426173ca9dec34",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java",
                "patch": "@@ -46,18 +46,20 @@ public SimpleSelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _sizeKey = type.findKey(\"size\");\n   }\n \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -83,7 +85,7 @@ protected void encodeElementContent(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       SimpleSelectOneRenderer.encodeOption(\n            context, arc, component, item, converter,\n            valuePassThru, i, selected);\n@@ -96,6 +98,7 @@ protected void encodeElementContent(\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -124,11 +127,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectManyListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java",
                "sha": "aeff52fbedf7e634bc2fd1db9bedfa7fd38f1057",
                "status": "modified"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java",
                "changes": 68,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 31,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java",
                "patch": "@@ -57,6 +57,7 @@ public SimpleSelectManyRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -70,6 +71,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * @todo This throws a ConverterException on the first unconvertable\n    *  value;  it should wait\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -88,7 +90,7 @@ public Object getConvertedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    Class modelClass = null;\n+    Class<?> modelClass = null;\n     ValueBinding binding = getValueBinding(bean);\n     if (binding != null)\n     {\n@@ -115,8 +117,7 @@ public Object getConvertedValue(\n     }\n   }\n \n-\n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -137,6 +138,7 @@ public Object getSubmittedValue(\n    * Override to return a Converter for the items in the value,\n    * not the value itself.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -145,13 +147,13 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     if ((type == null) || type.isAssignableFrom(List.class))\n       return null;\n \n     if (type.isArray())\n     {\n-      Class itemClass = type.getComponentType();\n+      Class<?> itemClass = type.getComponentType();\n       return ConverterUtils.createConverter(context, itemClass);\n     }\n \n@@ -165,15 +167,15 @@ static private Object _convertSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n     // Handle lists\n     if ((modelClass == null) || modelClass.isAssignableFrom(List.class))\n     {\n       if (converter == null)\n         return Arrays.asList(values);\n \n-      ArrayList newList = new ArrayList(values.length);\n+      ArrayList<Object> newList = new ArrayList<Object>(values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n         // Note - any error will result in an immediate ConverterException\n@@ -188,7 +190,7 @@ else if (modelClass.isArray())\n       if (converter == null)\n         return values;\n \n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       Object convertedArray = Array.newInstance(itemClass, values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n@@ -222,9 +224,10 @@ static private Object _convertIndexedSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n \n     // No selectItems automatically means that we failed to convert\n     if ((selectItems == null) || (selectItems.isEmpty()))\n@@ -233,7 +236,7 @@ static private Object _convertIndexedSubmittedValue(\n       _throwConversionError(context, component);\n     }\n \n-    assert (values instanceof String[]);\n+    // -= Simon Lessard =- Useless assertion: assert (values instanceof String[]);\n \n     // OK, is this a List or an array?\n     boolean isList = ((modelClass == null) ||\n@@ -247,17 +250,17 @@ static private Object _convertIndexedSubmittedValue(\n \n \n     // Create either a List or array\n-    List     objectList;\n-    Object   objectArray;\n+    List<Object> objectList;\n+    Object       objectArray;\n     if (isList)\n     {\n-      objectList = new ArrayList(values.length);\n+      objectList = new ArrayList<Object>(values.length);\n       objectArray = null;\n     }\n     else\n     {\n       objectList = null;\n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       // Use Array API instead of Object[] to support primitive types\n       objectArray = Array.newInstance(itemClass, values.length);\n     }\n@@ -273,7 +276,7 @@ static private Object _convertIndexedSubmittedValue(\n \n         if (( -1 < index) && (selectItems.size() > index))\n         {\n-          SelectItem item = (SelectItem)selectItems.get(index);\n+          SelectItem item = selectItems.get(index);\n           if (item == null)\n             continue;\n \n@@ -301,7 +304,7 @@ static private Object _convertIndexedSubmittedValue(\n       return objectArray;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -330,7 +333,7 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = SelectItemSupport.getSelectItems(component, converter);\n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -379,11 +382,12 @@ abstract protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -398,7 +402,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -414,7 +420,7 @@ protected void renderNonElementContent(\n         renderBetweenNonElements(context, arc, component, bean);\n       }\n \n-      SelectItem item = (SelectItem) selectItems.get(selectedIndices[i]);\n+      SelectItem item = selectItems.get(selectedIndices[i]);\n       rw.writeText(item.getLabel(), null);\n     }\n   }\n@@ -430,13 +436,12 @@ protected void renderBetweenNonElements(\n     rw.endElement(\"br\");\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectMany.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -451,11 +456,12 @@ protected boolean getValuePassThru(FacesBean bean)\n    * Return all the selected indices, in sorted order.  (There\n    * may be trailing -1's in case of an error)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private int[] _getSelectedIndices(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {\n@@ -495,7 +501,7 @@ protected boolean getValuePassThru(FacesBean bean)\n       else\n       {\n         String[] values = (String[]) submittedValue;\n-        List valuesList = new ArrayList(values.length);\n+        List<Object> valuesList = new ArrayList<Object>(values.length);\n         for (int i = 0; i < values.length; i++)\n         {\n           valuesList.add(converter.getAsObject(context,\n@@ -511,16 +517,16 @@ protected boolean getValuePassThru(FacesBean bean)\n       return _EMPTY_INT_ARRAY;\n \n     // Now, get the value looking like a list\n-    List valueList;\n+    List<Object> valueList;\n     if (value instanceof List)\n     {\n       // Make a copy of the list so we can mutate it safely\n-      valueList = new ArrayList((List) value);\n+      valueList = new ArrayList<Object>((List<Object>) value);\n     }\n     else if (value.getClass().isArray())\n     {\n       int length = Array.getLength(value);\n-      valueList = new ArrayList(length);\n+      valueList = new ArrayList<Object>(length);\n       for (int i = 0; i < length; i++)\n       {\n         valueList.add(Array.get(value, i));\n@@ -529,7 +535,7 @@ else if (value.getClass().isArray())\n     else\n     {\n       // Let's just take the one value as a single element\n-      valueList = new ArrayList(1);\n+      valueList = new ArrayList<Object>(1);\n       valueList.add(value);\n     }\n \n@@ -540,7 +546,7 @@ else if (value.getClass().isArray())\n     int lastEntry = 0;\n     for (int i = 0; i < itemCount; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -595,7 +601,7 @@ static private void _throwConversionError(\n \n \n   static private void _throwUnsupportedModelType(\n-    FacesContext context, Class type, UIComponent component)\n+    FacesContext context, Class<?> type, UIComponent component)\n       throws ConverterException\n   {\n     throw new ConverterException(",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java",
                "sha": "84e57b07575d1a4e81fed8dd2b6785293bd91f92",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 4,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java",
                "patch": "@@ -42,22 +42,23 @@ public SimpleSelectOneChoiceRenderer()\n     super(CoreSelectOneChoice.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _unselectedLabelKey = type.findKey(\"unselectedLabel\");\n   }\n \n-\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -79,7 +80,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -116,7 +117,7 @@ else if (unselectedLabel != null)\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n@@ -127,6 +128,7 @@ else if (unselectedLabel != null)\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean)\n   {\n@@ -155,6 +157,7 @@ protected String getOnclick(\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnblur(\n     FacesBean bean)\n   {\n@@ -175,6 +178,7 @@ protected String getOnblur(\n   /**\n    * Add autosubmit script, and autosync script.\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -207,16 +211,19 @@ protected String getOnchange(\n     return XhtmlUtils.getChainedJS(onchange, auto, true);\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneChoice::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java",
                "sha": "9a844a788413cb86b925bc4ad641e03302c45394",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java",
                "patch": "@@ -43,6 +43,7 @@ public SimpleSelectOneListboxRenderer()\n     super(CoreSelectOneListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -71,12 +72,13 @@ static public int getListSize(\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -104,14 +106,15 @@ protected void encodeElementContent(\n \n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n     \n     writer.endElement(\"select\");\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n@@ -120,6 +123,7 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -146,11 +150,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java",
                "sha": "c1afccc4a8ee66ba8907d4290f966869793daadd",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 3,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java",
                "patch": "@@ -44,6 +44,7 @@ public SimpleSelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,12 +57,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -109,7 +111,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -144,7 +146,7 @@ protected void encodeSelectItems(\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selectedIndex == i, disabled,\n@@ -240,6 +242,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -256,6 +259,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -267,6 +271,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -317,23 +322,27 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   }\n    \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java",
                "sha": "e4e9e955f72125753b64998fbffca4a7fbd5a40d",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 15,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java",
                "patch": "@@ -48,13 +48,14 @@ public SimpleSelectOneRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valuePassThruKey = type.findKey(\"valuePassThru\");\n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -160,6 +161,7 @@ static public boolean encodeOption(\n   //\n   // DECODE BEHAVIOR\n   //\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -200,13 +202,14 @@ private Object _convertIndexedSubmittedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems =\n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int index = __getIndex(submittedValue, selectItems);\n     if (index < 0)\n       return null;\n \n-    SelectItem item =\n-      (SelectItem) selectItems.get(index);\n+    SelectItem item = selectItems.get(index);\n     if (item != null)\n       return item.getValue();\n     else\n@@ -219,9 +222,10 @@ private Object _convertIndexedSubmittedValue(\n   //\n   /*\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n@@ -247,7 +251,9 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -290,11 +296,12 @@ abstract   protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -309,7 +316,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -321,7 +330,7 @@ protected void renderNonElementContent(\n     String text;\n     if (selectedIndex >= 0)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(selectedIndex);\n+      SelectItem item = selectItems.get(selectedIndex);\n       text = item.getLabel();\n     }\n     else\n@@ -332,13 +341,12 @@ protected void renderNonElementContent(\n     context.getResponseWriter().writeText(text, null);\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectOne.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -359,7 +367,9 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Convert a stringified index into an index, with range-checking.\n    */\n-  static int __getIndex(Object submittedValue, List selectItems)\n+  static int __getIndex(\n+      Object submittedValue, \n+      List<SelectItem> selectItems)\n   {\n     if (\"\".equals(submittedValue))\n       return -1;\n@@ -393,12 +403,14 @@ static int __getIndex(Object submittedValue, List selectItems)\n   //\n   // Find the selected item in the list\n   //\n-  private int _findIndex(Object value, List selectItems)\n+  private int _findIndex(\n+      Object value, \n+      List<SelectItem> selectItems)\n   {\n     int size = selectItems.size();\n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -434,7 +446,7 @@ private int _getSelectedIndex(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java",
                "sha": "37d173a7472399a08abc7a4f5c2451f73002ba76",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java",
                "patch": "@@ -34,13 +34,15 @@ public SpacerRenderer()\n     super(CoreSpacer.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _heightKey = type.findKey(\"height\");\n     _widthKey = type.findKey(\"width\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java",
                "sha": "db9da4977d2cb8b8d6d05593de6ebf0287190897",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java",
                "patch": "@@ -66,12 +66,13 @@ protected StyleSheetRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,7 +141,9 @@ protected void encodeAll(\n       {\n         if (arc instanceof CoreRenderingContext)\n         {\n-          Map shortStyles = StyleUtils.getShortStyleClasses(sContext, provider);\n+          Map<String, String> shortStyles = \n+            StyleUtils.getShortStyleClasses(sContext, provider);\n+          \n           ((CoreRenderingContext) arc).setStyleMap(shortStyles);\n         }\n       }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java",
                "sha": "13eda8d96dce9510d63bd5ad205353b49fd2f6b6",
                "status": "modified"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 18,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java",
                "patch": "@@ -67,6 +67,7 @@ public TableRenderer(FacesBean.Type type)\n     _resourceKeyMap = createResourceKeyMap();\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -75,19 +76,22 @@ protected void findTypeConstants(FacesBean.Type type)\n     _emptyTextKey  = type.findKey(\"emptyText\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n-    Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n+    Map<String, String> parameters =  \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     String id = component.getClientId(context);\n     if (!id.equals(source))\n       return;\n@@ -141,9 +145,9 @@ private static RangeChangeEvent _createRangeChangeEvent(\n   }\n    private void _decodeSort(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String property = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String property = parameters.get(XhtmlConstants.VALUE_PARAM);\n     Object state = parameters.get(XhtmlConstants.STATE_PARAM);\n     boolean sortOrder = !XhtmlConstants.SORTABLE_ASCENDING.equals(state);\n     SortCriterion criterion = new SortCriterion(property, sortOrder);\n@@ -155,9 +159,9 @@ private void _decodeSort(\n \n   private void _decodeGoto(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String value = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n       final FacesEvent event;\n@@ -190,17 +194,18 @@ private void _decodeGoto(\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private void _decodeHideShow(\n     UIXTable table,\n-    Map parameters,\n+    Map<String, String> parameters,\n     Object eventParam)\n   {\n     boolean doExpand = XhtmlConstants.SHOW_EVENT.equals(eventParam);\n     Object value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n-      RowKeySet old = table.getDisclosedRowKeys();\n-      RowKeySet newset = old.clone();\n+      RowKeySet<Object> old = table.getDisclosedRowKeys();\n+      RowKeySet<Object> newset = old.clone();\n       if (\"all\".equals(value))\n       {\n         if (doExpand)\n@@ -223,14 +228,15 @@ private void _decodeHideShow(\n     }\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n     // save current skin resource map, if any, on the local property\n-    Map oldSkinResourceMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> oldSkinResourceMap = arc.getSkinResourceKeyMap();\n \n     // store TableRenderer's skin resource map, so that called to\n     // context.getTranslatedValue will get the correct key.\n@@ -456,6 +462,7 @@ protected boolean renderTableWithoutColumns(\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -468,7 +475,7 @@ protected int renderSpecialColumns(\n     // depending on the RenderStage\n     final ColumnData colData = tContext.getColumnData();\n     int[] hidden = tContext.getHiddenColumns();\n-    List children = treeTable.getChildren();\n+    List<UIComponent> children = treeTable.getChildren();\n     int colCount  = children.size();\n     for (int i = 0;  i < colCount;  i++)\n     {\n@@ -529,7 +536,7 @@ private void _renderSelectionColumn(\n     RenderingContext   arc,\n     TableRenderingContext tContext) throws IOException\n   {\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     setSelectionResourceKeyMap(arc, tContext);\n     try\n     {\n@@ -717,7 +724,9 @@ public static void setSelectionResourceKeyMap(\n   {\n     if (tContext.hasSelection())\n     {\n-      Map selectionColumnStylesMap = new HashMap();\n+      Map<String, String> selectionColumnStylesMap = \n+        new HashMap<String, String>();\n+      \n       // if selection is multiple-selection:\n       if (tContext.hasSelectAll())\n       {\n@@ -738,20 +747,21 @@ public static void setSelectionResourceKeyMap(\n \n   }\n \n+  @Override\n   protected boolean shouldRenderId(FacesContext context, UIComponent component)\n   {\n     return true;\n   }\n \n-  protected Map createResourceKeyMap()\n+  protected Map<String, String> createResourceKeyMap()\n   {\n     // map the skin resource keys that are used in components used\n     // by the table renderer to table keys.\n     // This way the table can be customized separately from other\n     // components that it uses within it. For example, we can customize\n     // af_table.DISCLOSED translation key\n     // separately from af_showDetail.DISCLOSED.\n-    Map map = new HashMap(6);\n+    Map<String, String> map = new HashMap<String, String>(6);\n     map.put(\"af_showDetail.DISCLOSED\",\n             \"af_table.DISCLOSED\");\n     map.put(\"af_showDetail.UNDISCLOSED\",\n@@ -786,11 +796,13 @@ public NavBar(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext context, RenderingContext arc, FacesBean bean)\n     {\n     }\n \n+    @Override\n     protected boolean getShowAll(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -806,6 +818,7 @@ protected boolean getShowAll(FacesBean bean)\n     }\n \n     // For now, disable showAll except on UIXTable\n+    @Override\n     protected boolean showAllSupported()\n     {\n       TableRenderingContext tContext =\n@@ -815,6 +828,7 @@ protected boolean showAllSupported()\n       }\n \n \n+    @Override\n     protected String getSource()\n     {\n       TableRenderingContext tContext =\n@@ -825,59 +839,70 @@ protected String getSource()\n     /**\n      * @todo Deal with repeating!\n      */\n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.getTableId() + \"-nb\";\n     }\n \n+    @Override\n     protected String getVar(FacesBean bean)\n     {\n       return null;\n     }\n \n     // No support for range labels\n+    @Override\n     protected UIComponent getRangeLabel(UIComponent component)\n     {\n       return null;\n     }\n \n+    @Override\n     protected int getRowCount(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowCount();\n     }\n \n+    @Override\n     protected int getRowIndex(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowIndex();\n     }\n \n+    @Override\n     protected void setRowIndex(UIComponent component, int index)\n     {\n       ((CollectionComponent) component).setRowIndex(index);\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component)\n     {\n       return ((CollectionComponent) component).isRowAvailable();\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component, int rowIndex)\n     {\n       return ((UIXCollection) component).isRowAvailable(rowIndex);\n     }\n \n+    @Override\n     protected Object getRowData(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowData();\n     }\n \n+    @Override\n     protected int getRows(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getRows();\n     }\n \n+    @Override\n     protected int getFirst(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getFirst();\n@@ -887,7 +912,7 @@ protected int getFirst(UIComponent component, FacesBean bean)\n \n   private PropertyKey _widthKey;\n   private PropertyKey _emptyTextKey;\n-  private final Map _resourceKeyMap;\n+  private final Map<String, String> _resourceKeyMap;\n \n   // Key for RenderingContext property used to store the generated ID\n   // to use for the upper navigation bar.  (Part of fix for 2275703.)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java",
                "sha": "9e8bcfd8138c3e6b510a19c74caa31919f83d62d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java",
                "patch": "@@ -32,6 +32,7 @@ protected ValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -69,7 +70,7 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     return ConverterUtils.createConverter(context, type);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java",
                "sha": "fa8964034df5a2f126230ce54a0db2631e43c2f6",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java",
                "patch": "@@ -55,20 +55,24 @@ public FontElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n     \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n     {\n \n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n     {\n \n     }\n+    @Override\n     public void writeHRef(FacesContext context, String href)\n     {\n     \n     }  \n \n+    @Override\n     public void writeSize(FacesContext context, String fontSize)\n       throws IOException\n     {\n@@ -89,6 +93,7 @@ public XhtmlElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n       throws IOException\n     {\n@@ -102,6 +107,7 @@ public void writeInlineStyle(FacesContext context, String style)\n       }*/\n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n       throws IOException\n     {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java",
                "sha": "e2a04cc3bb79a8d4a2f89a1b4e0434b5d4071c2a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java",
                "patch": "@@ -252,6 +252,7 @@ public static boolean supportsXMLDOM(\n    * that deliver events should always return \"true\".\n    * @todo Profile and possibly optimize.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -878,7 +879,7 @@ public static void enableScriptDeferring(RenderingContext arc, boolean isEnabled\n     // since IE has problems with deferred scripts.  This property is\n     // enabled by PanelPartialRootRenderer when rendering the contents\n     // of the body.\n-    Map props = arc.getProperties();\n+    Map<Object, Object> props = arc.getProperties();\n     if (isEnabled)\n     {\n       // Turn script deferring on",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java",
                "sha": "51a3c25c277fbf512234430996091e396d53e1c2",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 5,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java",
                "patch": "@@ -123,7 +123,7 @@ static public void addLib(\n   {\n     if ((XhtmlRenderer.supportsScripting(arc)) && (libKey != null))\n     {\n-      Scriptlet scriptlet = (Scriptlet) _sScriptletTable.get(libKey);\n+      Scriptlet scriptlet = _sScriptletTable.get(libKey);\n       if (scriptlet == null)\n       {\n         if (_LOG.isWarning())\n@@ -505,17 +505,17 @@ public static String getFormattedString(String pattern, String[] parameters)\n   }\n \n   /** HashMap mapping names to their scriptlets */\n-  private static Map _sScriptletTable =\n-    Collections.synchronizedMap(new HashMap(37));\n+  private static Map<Object, Scriptlet> _sScriptletTable =\n+    Collections.synchronizedMap(new HashMap<Object, Scriptlet>(37));\n \n   // Key for storing whether we've written out the script\n   // for storing loaded libraries\n   static private final Object _PORTLET_LIB_TABLE_KEY = new Object();\n-  static private final Set\n-    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet();\n+  static private final Set<String> _NON_STRUCTURAL_COMPONENT_FAMILIES;\n \n   static\n   {\n+    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet<String>();\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXIterator.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXComponentRef.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXSubform.COMPONENT_FAMILY);",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java",
                "sha": "4f3541f7e0efd61e0f975a884ace1c4b1ab79866",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java",
                "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n \n-import java.util.Iterator;\n import java.util.Enumeration;\n import java.util.HashSet;\n import java.util.Properties;\n@@ -43,17 +42,15 @@\n    */\n   static public void registerAliases()\n   {\n-    HashSet aliases = new HashSet();\n-    Enumeration names = _ALIASES.propertyNames();\n+    HashSet<String> aliases = new HashSet<String>();\n+    Enumeration<?> names = _ALIASES.propertyNames();\n     while (names.hasMoreElements())\n     {\n       aliases.add(_ALIASES.getProperty((String) names.nextElement()));\n     }\n \n-    Iterator iterator = aliases.iterator();\n-    while (iterator.hasNext())\n+    for(String libName : aliases)\n     {\n-      String libName = (String) iterator.next();\n       Scriptlet scriptlet = null;\n \n       if (\"Common\".equals(libName))\n@@ -64,6 +61,7 @@ static public void registerAliases()\n           // when it's outside of a partial page request, since the\n           // partial page library itself needs it.\n           // See comments in Scriptlet.__isOutsidePartialPage()\n+          @Override\n           boolean __isOutsidePartialPage(RenderingContext arc)\n           {\n             return false;\n@@ -97,11 +95,13 @@ public AliasedScriptlet(\n     _actualLibrary = _getAlias(name);\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _name;\n   }\n \n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -112,6 +112,7 @@ public void registerSelf()\n     }\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -125,6 +126,7 @@ protected void outputScriptletImpl(\n     outputDependency(context, arc, _actualLibrary);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -159,7 +161,7 @@ static private String _getAlias(String theLibraryName)\n     _LOG = TrinidadLogger.createTrinidadLogger(AliasedScriptlet.class);\n \n     // Load library versions\n-    Class cl = AliasedScriptlet.class;\n+    Class<AliasedScriptlet> cl = AliasedScriptlet.class;\n     InputStream in = cl.getResourceAsStream(_JAVASCRIPT_ALIAS_FILE);\n \n     if (in == null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java",
                "sha": "04b596d8a3360aeab9460e1656d66689e43ca17c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java",
                "patch": "@@ -44,6 +44,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FIELD_INFO_KEY;\n@@ -52,6 +53,7 @@ public Object getScriptletKey()\n   /**\n    * @todo Rebuild in Faces-major land\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java",
                "sha": "efac4d9c0fe9f1b8b74a215eabc2415d4f983164",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java",
                "patch": "@@ -42,6 +42,7 @@ private ColorFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FORMAT_INFO_KEY;\n@@ -50,6 +51,7 @@ public Object getScriptletKey()\n   /**\n    * @todo GET TRANSPARENT OFF OF SKIN, NOT HARDCODED BUNDLE\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java",
                "sha": "164c9cb6b8d23dd6d4daa0f0adb849ab1f028216",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java",
                "patch": "@@ -34,6 +34,7 @@ public ConfigurationScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _CONFIGURATION_SCRIPTLET_KEY;\n@@ -52,6 +53,7 @@ static public Scriptlet sharedInstance()\n   /**\n    * @todo See if truly necessary.\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java",
                "sha": "c040e473942a6af9867b006455ae2d6ac65d137e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java",
                "patch": "@@ -43,11 +43,13 @@ private DateFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DATE_FORMAT_INFO_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java",
                "sha": "c0240deab70e326a3ee5fa498c1074d78f9869d6",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java",
                "patch": "@@ -39,11 +39,13 @@ private DefaultTimeZoneScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DEFAULT_TIME_ZONE_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -52,6 +54,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java",
                "sha": "6aa6779c12887642fca8d5893b07b4ff1fcfa478",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java",
                "patch": "@@ -36,6 +36,7 @@ public GlobalVariablesScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return GLOBAL_VARIABLES_KEY;\n@@ -51,6 +52,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java",
                "sha": "575b339cb2813e54712985de60c330edd2a05f00",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java",
                "patch": "@@ -41,11 +41,13 @@ protected JspDirScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return JSP_DIR_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java",
                "sha": "3b9b4ebac06c878a5d5864341720174cd1df1ad1",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java",
                "patch": "@@ -46,7 +46,7 @@ public LibraryScriptlet(String libraryName,\n     _dependencies = dependencies;\n   }\n \n-\n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -57,7 +57,7 @@ public void registerSelf()\n     }\n   }\n \n-\n+  @Override\n   public Object getScriptletKey()\n   {\n     return _libraryName;\n@@ -81,6 +81,7 @@ public static String getLibraryNameWithVersion(\n     return libraryName;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -94,13 +95,15 @@ protected void outputScriptletImpl(\n     XhtmlUtils.writeLibImport(context, arc, _getLibraryURL(context, arc));\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n   {\n     // No-op.\n   }\n \n+  @Override\n   protected void embedInScriptTagImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java",
                "sha": "19d0506ba0c59bde70d95327f51f1df453368f99",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java",
                "patch": "@@ -56,6 +56,7 @@ public LocaleInfoScriptlet()\n    * @todo Revisit separate translation and internationalization\n    * locales.\n    */ \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -108,6 +109,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected String getLibraryName(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -163,7 +165,9 @@ private static Locale _getJSLocaleElementsLocale(\n     Locale inLocale\n     )\n   {\n-    HashMap supportedMap = LocaleList.getSupportedLocales();\n+    HashMap<Locale, Locale> supportedMap = \n+      LocaleList.getSupportedLocales();\n+    \n     Locale outLocale = inLocale;\n     if(supportedMap.containsKey(outLocale))\n     {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java",
                "sha": "64000871035ec97dbd9aebe21b8b136a642184ae",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java",
                "patch": "@@ -90,6 +90,8 @@ private XhtmlScriptletFactory()\n   static private Scriptlet _sCharSetsScriptlet;\n   static private Scriptlet _sShuttleScriptlet;\n   static private Scriptlet _sTableProxyScriptlet;\n+  // FIXME: Never read\n+  @SuppressWarnings(\"unused\")\n   static private Scriptlet _sDiagrammerScriptlet;\n   static private Scriptlet _sColorFormatScriptlet;\n   static private Scriptlet _sColorFieldFormatScriptlet;\n@@ -143,6 +145,7 @@ private XhtmlScriptletFactory()\n         // =-=AEW  The MarlinCore library needs to be rendered even\n         // when it's outside of a partial page request, since the\n         // partial page library itself needs it.\n+        @Override\n         boolean __isOutsidePartialPage(RenderingContext context)\n         {\n           return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java",
                "sha": "cd7da7f9f9760ee2f5aab374cf6d7b82402bca78",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java",
                "patch": "@@ -32,18 +32,21 @@\n   /**\n    * @param context gets the appropriate banding data from this context.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static BandingData create(TableRenderingContext context)\n   {\n     // using the variable name \"hgrid\" so that we don't forget that\n     // the table instance might infact be an hgrid:\n     UIComponent hgrid = context.getTable();\n-    Map attrs = hgrid.getAttributes();\n+    Map<String, Object> attrs = hgrid.getAttributes();\n     int row = _getInterval(attrs, CoreTable.ROW_BANDING_INTERVAL_KEY);\n     int col = _getInterval(attrs, CoreTable.COLUMN_BANDING_INTERVAL_KEY);\n     return new BandingData(col, row);\n   }\n \n-  private static int _getInterval(Map attrs, PropertyKey key)\n+  private static int _getInterval(\n+      Map<String, Object> attrs, \n+      PropertyKey key)\n   {\n     Number num = (Number) attrs.get(key.getName());\n     int interval = (num != null) ? num.intValue() : 0;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java",
                "sha": "ffbd04ac054ad68f64ddde7a692dcd72ddb52b8e",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java",
                "patch": "@@ -18,6 +18,7 @@\n import java.awt.Dimension;\n \n import java.util.ArrayList;\n+import java.util.List;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.component.UIXTreeTable;\n@@ -430,7 +431,7 @@ else if (CoreColumn.ALIGN_CENTER.equals(format))\n \n   private Data _get(int physicalIndex)\n   {\n-    Data d = (Data) _data.get(physicalIndex);\n+    Data d = _data.get(physicalIndex);\n     assert (d != null)\n         : \"no column data for physicalIndex:\" + physicalIndex;\n     return d;\n@@ -551,7 +552,7 @@ static private Object _getSpecialWidth(\n   private int _rowIndex = -1;\n \n   private final Dimension _currentSpan = new Dimension(1,1);\n-  private final ArrayList _data = new ArrayList(10);\n+  private final List<Data> _data = new ArrayList<Data>(10);\n \n   // this constants is used for assert only:\n   private boolean _assertInitMode = true;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java",
                "sha": "a89e391844e95d892f70dbf7f9063f43636457c7",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java",
                "patch": "@@ -31,6 +31,7 @@\n \n public class DetailColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -55,17 +56,20 @@ protected void encodeAll(\n     super.encodeAll(context, arc, component, bean);\n   }  \n   \n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_table.DETAIL_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -87,6 +91,7 @@ public Detail()\n       super(CoreTable.TYPE);\n     }\n     \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n@@ -107,30 +112,35 @@ protected void renderPromptStart(\n       super.renderPromptStart(context, arc, component, bean);\n     }\n     \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       UIXCollection cb = (UIXCollection) component;\n       int rowIndex = cb.getRowIndex();\n       return IntegerUtils.getString(rowIndex);\n     }\n     \n+    @Override\n     protected boolean isTableDetailDisclosure()\n     {\n       return true;\n     }\n     \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();\n       UIXTable table = (UIXTable) tContext.getCollectionComponent();\n       return (table.getDisclosedRowKeys().isContained());\n     }\n \n+    @Override\n    protected String getLinkId(String rootId, boolean disclosed)\n    {\n      return _getDetailLinkId(TableRenderingContext.getCurrentInstance());\n    }\n    \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java",
                "sha": "cac87ecaedd46e5daf9bbe703d5579e212d2f780",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java",
                "patch": "@@ -34,22 +34,26 @@\n \n public class FocusColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_treeTable.FOCUS_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;\n   }\n \n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java",
                "sha": "7a02d8070b32ad3a1c58689820df5e936db01dd0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java",
                "patch": "@@ -52,6 +52,7 @@ public int setStage(int stage)\n     return ps;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"RenderStage:\"+_stage;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java",
                "sha": "32de91799ea10fad553cffb87a11330633625a08",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java",
                "patch": "@@ -93,8 +93,14 @@ public int getCurrentRowSpan()\n   public void setCurrentRowSpan(int rowSpan)\n   {\n \n-\tboolean assertEnabled = false;\n-\tassert assertEnabled = true;\n+    // -= Simon Lessard =-\n+    //    I really dislike to see assert used like that. It's much like\n+    //    #ifdef __DEBUG, but it has a performance cost as well since \n+    //    assertEnabled get instanciated for nothing and this add one \n+    //    if to the coding path. This basically break the purpose of \n+    //    the assert to not polute the execution when not enabled.\n+    boolean assertEnabled = false;\n+    assert assertEnabled = true;\n \n     if (rowSpan < 0)\n     {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java",
                "sha": "1634db21558ee9cf5b835a1e85312606dae86901",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java",
                "patch": "@@ -27,6 +27,7 @@\n public class SelectionColumnRenderer extends SpecialColumnRenderer\n {\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,\n@@ -40,7 +41,7 @@ protected void renderKids(FacesContext          context,\n                      : _singleRenderer);\n   }\n   \n-\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -54,17 +55,19 @@ protected String getHeaderText(FacesBean bean)\n     return arc.getTranslatedString(key);\n   }  \n \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java",
                "sha": "d1de77e8e7a9c9ff9e8d51a48cc2015017fa8bb0",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java",
                "patch": "@@ -36,23 +36,25 @@ public UIComponent getSpecialColumn()\n     return _specialColumn;\n   }\n \n+  @Override\n   protected boolean getHeaderNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected boolean getSortable(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getSortProperty(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getHeaderInlineStyle(RenderingContext arc)\n   {\n     if (XhtmlRenderer.isIE(arc))\n@@ -61,6 +63,7 @@ protected String getHeaderInlineStyle(RenderingContext arc)\n     return null;\n   }\n   \n+  @Override\n   protected boolean isSpecialColumn()\n   {\n     return true;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java",
                "sha": "af5285b2c119bbbb561fd454918180f8ba660778",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 11,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java",
                "patch": "@@ -41,7 +41,7 @@\n {\n   static public TableRenderingContext getCurrentInstance()\n   {\n-    return (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   public TableRenderingContext(\n@@ -219,7 +219,8 @@ public final CollectionComponent getCollectionComponent()\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTable) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -494,14 +495,15 @@ static private Boolean _toBoolean(Object value, boolean defaultValue)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _gatherChildInformation(\n     UIComponent      parent)\n   {\n-    List children = parent.getChildren();\n+    List<UIComponent> children = parent.getChildren();\n     int count = children.size();\n     for (int index = 0; index < count; index++)\n     {\n-      UIComponent child = (UIComponent) children.get(index);\n+      UIComponent child = children.get(index);\n \n       if (!child.isRendered())\n       {\n@@ -517,8 +519,7 @@ private void _gatherChildInformation(\n \n   public static boolean isInsideContentOfTable()\n   {\n-    TableRenderingContext tContext =\n-      (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    TableRenderingContext tContext = _CURRENT_CONTEXT.get();\n \n     if (tContext == null)\n       return false;\n@@ -533,7 +534,7 @@ public static boolean isInsideContentOfTable()\n    */\n   public final Object getTableProperty(Object key)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     return (props == null) ? null : props.get(key);\n   }\n \n@@ -545,10 +546,10 @@ public final Object getTableProperty(Object key)\n    */\n   public final Object setTableProperty(Object key, Object value)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     if (props == null)\n     {\n-      props = new HashMap(5);\n+      props = new HashMap<Object, Object>(5);\n       _tableProps = props;\n     }\n     return props.put(key, value);\n@@ -590,7 +591,7 @@ public final Object setTableProperty(Object key, Object value)\n \n   // this is a map of properties that are local to this table. This is to\n   // support nested tables:\n-  private Map _tableProps = null;\n+  private Map<Object, Object> _tableProps = null;\n \n \n   // general fields\n@@ -603,5 +604,6 @@ public final Object setTableProperty(Object key, Object value)\n   public static final int DONT_KNOW = -1;\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<TableRenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<TableRenderingContext>();\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java",
                "sha": "3211fe11ef0ce593059772b821fe7d9c4089eda3",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 17,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java",
                "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n \n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.Map;\n \n import javax.faces.component.NamingContainer;\n@@ -53,6 +52,8 @@ public TableSelectManyRenderer()\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -61,9 +62,10 @@ public void decode(FacesContext context, UIComponent component)\n     table.setRowIndex(-1);\n     String tableId = table.getClientId(context);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterValuesMap();\n+    Map<String, String[]> parameters = \n+      context.getExternalContext().getRequestParameterValuesMap();\n \n-    String[] unselectedBoxes = (String[])\n+    String[] unselectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+UNSELECTED_KEY);\n \n     // check to see if there were any selection boxes in the request.\n@@ -72,11 +74,11 @@ public void decode(FacesContext context, UIComponent component)\n     if ((unselectedBoxes == null) || (unselectedBoxes.length == 0))\n       return;\n \n-    String[] selectedBoxes = (String[])\n+    String[] selectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+SELECTED_KEY);\n \n     // must work with both table and hgrid:\n-    final RowKeySet selectionModel;\n+    final RowKeySet<Object> selectionModel;\n     if (table instanceof UIXTable)\n       selectionModel = ((UIXTable) table).getSelectedRowKeys();\n     else\n@@ -100,9 +102,9 @@ public void decode(FacesContext context, UIComponent component)\n //      // have clicked select-all and then deselected some rows before submitting:\n //    }\n \n-    RowKeySet selectedDelta = selectionModel.clone();\n+    RowKeySet<Object> selectedDelta = selectionModel.clone();\n     selectedDelta.clear();\n-    RowKeySet unselectedDelta = selectedDelta.clone();\n+    RowKeySet<Object> unselectedDelta = selectedDelta.clone();\n \n     _setDeltas(table, selectedBoxes, unselectedBoxes,\n                selectionModel, selectedDelta, unselectedDelta);\n@@ -117,11 +119,12 @@ public void decode(FacesContext context, UIComponent component)\n \n   private void _setDeltas(UIXCollection table,\n                           String[] selectedBoxes, String[] unselectedBoxes,\n-                          RowKeySet current,\n-                          RowKeySet selectedDelta,\n-                          RowKeySet unselectedDelta)\n+                          RowKeySet<Object> current,\n+                          RowKeySet<Object> selectedDelta,\n+                          RowKeySet<Object> unselectedDelta)\n   {\n-    Map deltas = new HashMap(unselectedBoxes.length);\n+    Map<String, Boolean> deltas = \n+      new HashMap<String, Boolean>(unselectedBoxes.length);\n     for(int i=0; i< unselectedBoxes.length; i++)\n     {\n       String currencyStr = unselectedBoxes[i];\n@@ -137,10 +140,9 @@ private void _setDeltas(UIXCollection table,\n       }\n     }\n \n-    for(Iterator entries=deltas.entrySet().iterator(); entries.hasNext();)\n+    for(Map.Entry<String, Boolean> entry : deltas.entrySet())\n     {\n-      Map.Entry entry = (Map.Entry) entries.next();\n-      String currencyStr = (String) entry.getKey();\n+      String currencyStr = entry.getKey();\n       boolean select = (Boolean.TRUE == entry.getValue());\n       table.setCurrencyString(currencyStr);\n \n@@ -164,11 +166,13 @@ else if (current.remove())\n     }\n   }\n \n+  @Override\n   protected CoreRenderer createCellRenderer(FacesBean.Type type)\n   {\n     return new Checkbox(type);\n   }\n \n+  @Override\n   protected boolean isSelectOne()\n   {\n     return false;\n@@ -204,7 +208,7 @@ public static void renderScripts(\n       arc.getFormData().addNeededValue(selectedModeName);\n   }\n \n-\n+  @Override\n   protected void renderCellContent(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -245,6 +249,7 @@ public Checkbox(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -264,20 +269,22 @@ protected void renderId(\n \n     }\n \n-\n+    @Override\n     protected Object getType()\n     {\n       return \"checkbox\";\n     }\n \n-\n+    @Override\n     protected String getDefaultShortDescKey()\n     {\n       return \"af_tableSelectMany.SELECT_COLUMN_HEADER\";\n     }\n   }\n \n   private static final Object _JS_RENDERED_KEY = new Object();\n+  // -= Simon Lessard =- nothing is logge in this class as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   private static final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(TableSelectManyRenderer.class);\n }",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java",
                "sha": "52b5c27256338c18325e19212e9897ee5135d23c",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 7,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java",
                "patch": "@@ -49,6 +49,7 @@ public TableSelectOneRenderer()\n     super(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -70,14 +73,16 @@ public void decode(FacesContext context, UIComponent component)\n \n       String selectionParam = __getSelectionParameterName(context, table);\n \n-      Map parameters =  context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameters =  \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       _LOG.finest(\"Params:{0}\", parameters);\n \n-      String selection = (String) parameters.get(selectionParam);\n+      String selection = parameters.get(selectionParam);\n \n       if (selection != null)\n       {\n-        final RowKeySet state;\n+        final RowKeySet<Object> state;\n         if (table instanceof UIXTable)\n           state = ((UIXTable) table).getSelectedRowKeys();\n         else\n@@ -86,14 +91,14 @@ public void decode(FacesContext context, UIComponent component)\n         table.setCurrencyString(selection);\n         if (!state.isContained())\n         {\n-          RowKeySet unselected = state.clone();\n+          RowKeySet<Object> unselected = state.clone();\n           // TODO : do not mutate the selectedRowKeys here.\n           // instead, mutate when event is broadcast:\n           state.clear();\n           state.add();\n           // clone, so that subsequent mutations of \"state\" will\n           // not affect the parameters of this event: bug 4733858:\n-          RowKeySet selected = state.clone();\n+          RowKeySet<Object> selected = state.clone();\n           FacesEvent event = new SelectionEvent(table, unselected, selected);\n           event.queue();\n         }\n@@ -109,11 +114,13 @@ public void decode(FacesContext context, UIComponent component)\n   //\n   // Encode\n   //\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -188,6 +195,7 @@ public Radio(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getCompositeId(String clientId)\n     {\n       return null;\n@@ -196,18 +204,21 @@ protected String getCompositeId(String clientId)\n     /**\n      * we do not want to render the simple span for the checkbox.\n      */\n+    @Override\n     protected boolean getRenderSimpleSpan(FacesBean bean)\n     {\n       return false;\n     }\n     /**\n      * don't render a special content style class on the radio.\n      */\n+    @Override\n     protected String getContentStyleClass(FacesBean bean)\n     {\n      return null;\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -225,6 +236,7 @@ protected void renderId(\n         writer.writeAttribute(\"id\", getClientId(context, component), null);\n     }\n \n+    @Override\n     protected Object getSubmittedValue(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -233,12 +245,13 @@ protected Object getSubmittedValue(FacesBean bean)\n         Boolean.TRUE : Boolean.FALSE;\n     }\n \n+    @Override\n     protected Object getType()\n     {\n       return \"radio\";\n     }\n \n-\n+    @Override\n     protected Object getValueAttr(RenderingContext arc)\n     {\n       TableRenderingContext tContext =\n@@ -247,7 +260,7 @@ protected Object getValueAttr(RenderingContext arc)\n                 getCurrencyString();\n     }\n \n-\n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String key = getDefaultShortDescKey();\n@@ -260,28 +273,33 @@ protected String getDefaultShortDescKey()\n       return \"af_tableSelectOne.SELECT_COLUMN_HEADER\";\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected boolean isAutoSubmit(FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean isImmediate(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.isImmediate();\n     }\n \n+    @Override\n     protected boolean getReadOnly(FacesContext context, FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean getDisabled(FacesBean bean)\n     {\n       return false;\n@@ -290,6 +308,7 @@ protected boolean getDisabled(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnblur(FacesBean bean)\n     {\n       return null;\n@@ -298,11 +317,13 @@ protected String getOnblur(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnfocus(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected String getOnchange(FacesBean bean)\n     {\n       return null;\n@@ -313,6 +334,7 @@ protected String getOnselect(FacesBean bean)\n       return null;\n     }\n \n+    @Override\n     protected String getText(FacesBean bean)\n     {\n       return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java",
                "sha": "bc09e8049857bf8fdc483d33817a01b173ebabf5",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java",
                "patch": "@@ -34,7 +34,8 @@\n \n public class TreeNodeColumnRenderer extends ColumnRenderer\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -47,7 +48,7 @@ protected void renderKids(FacesContext          context,\n     final String onclick;\n     if (hGrid.isContainer())\n     {\n-      RowKeySet treeState = hGrid.getDisclosedRowKeys();\n+      RowKeySet<Object> treeState = hGrid.getDisclosedRowKeys();\n       String jsVarName = ttrc.getJSVarName();\n       if (treeState.isContained())\n       {",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java",
                "sha": "6bf5f541e1518ddc3e88434e3509a6f942750ccf",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java",
                "patch": "@@ -40,13 +40,15 @@ public TreeTableNavRenderer(boolean isTop)\n     _isTop = isTop;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     // we don't take any children. however, return true so that\n     // encodeAll is called:\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java",
                "sha": "56304447740d1dcfa0e11f55e9cc9c9a4cc8e26c",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 1,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java",
                "patch": "@@ -87,7 +87,9 @@ public TreeTableRenderingContext(\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTree) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -142,6 +144,7 @@ public boolean isFocusColumnVisible()\n    * Get the actual column count, taking selection,  focus\n    * and object-hierarchy columns into account.\n    */\n+  @Override\n   public int getSpecialColumnCount()\n   {\n     // we need to add one for the object hierarchy column and possibly another\n@@ -153,6 +156,7 @@ public int getSpecialColumnCount()\n   /**\n    * @return null. HGrids cannot have detail-disclosure.\n    */\n+  @Override\n   public UIComponent getDetail()\n   {\n     return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java",
                "sha": "d1ce24bdd31a471a69d62b8ff3d4aa08d472105a",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 12,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java",
                "patch": "@@ -193,22 +193,23 @@ public static String callJSSelectAll(String jsVarName, boolean isSelectAll)\n     return jsVarName+\".multiSelect(\"+(isSelectAll ? \"true\" : \"false\")+\")\";\n   }\n \n-  public static void decodeGotoEvent(final Map parameters,\n+  public static void decodeGotoEvent(final Map<String, String> parameters,\n                                      UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_GOTO.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           final int newStart;\n-          String startParam = (String) parameters.get(_START_PARAM);\n+          String startParam = parameters.get(_START_PARAM);\n           if ((startParam == null) || (\"\".equals(startParam)))\n           {\n             // this must be a root level range change:\n-            startParam = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+            startParam = parameters.get(XhtmlConstants.VALUE_PARAM);\n             newStart = Integer.parseInt(startParam) - 1; // value is based at one.\n             tree.setRowKey(tree.getFocusRowKey());\n             tree.setRowIndex(newStart);\n@@ -228,14 +229,15 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeFocusEvent(final Map parameters,\n+  public static void decodeFocusEvent(final Map<String, String> parameters,\n                                       UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_FOCUS.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           _restorePathFromParam(parameters, tree);\n@@ -246,7 +248,7 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeExpandEvents(final Map parameters,\n+  public static void decodeExpandEvents(final Map<String, String> parameters,\n                                         final UIComponent tree,\n                                         final Object focusRowKey)\n   {\n@@ -267,6 +269,7 @@ else if (_SHOW.equals(event))\n \n     PreserveState preserve = new PreserveState()\n     {\n+      @Override\n       protected void process(UIXHierarchy tree)\n       {\n         final FacesEvent event;\n@@ -283,8 +286,8 @@ protected void process(UIXHierarchy tree)\n           else\n           {\n             tree.setRowKey(focusRowKey);\n-            RowKeySet old = _getExpandedRowKeys(tree);\n-            RowKeySet newset = old.clone();\n+            RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+            RowKeySet<Object> newset = old.clone();\n             if (expand)\n               newset.addAll();\n             else\n@@ -295,8 +298,8 @@ protected void process(UIXHierarchy tree)\n         else  // expand/collapse event\n         {\n           _restorePathFromParam(parameters, tree);\n-          RowKeySet old = _getExpandedRowKeys(tree);\n-          RowKeySet newset = old.clone();\n+          RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+          RowKeySet<Object> newset = old.clone();\n           newset.setContained(expand);\n           event = new RowDisclosureEvent(old, newset, tree);\n         }\n@@ -307,7 +310,8 @@ protected void process(UIXHierarchy tree)\n     preserve.run((UIXHierarchy) tree);\n   }\n \n-  private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n+  @SuppressWarnings(\"unchecked\")\n+  private static RowKeySet<Object> _getExpandedRowKeys(UIXHierarchy tree)\n   {\n     if (tree instanceof UIXTree)\n       return ((UIXTree) tree).getDisclosedRowKeys();\n@@ -318,9 +322,11 @@ private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n     throw new IllegalArgumentException(\"Don't know how to get disclosedRowKeys from:\"+tree);\n   }\n \n-  private static void _restorePathFromParam(Map parameters, UIXHierarchy tree)\n+  private static void _restorePathFromParam(\n+      Map<String, String> parameters, \n+      UIXHierarchy tree)\n   {\n-    String currencyString = (String) parameters.get(_PATH_PARAM);\n+    String currencyString = parameters.get(_PATH_PARAM);\n     tree.setCurrencyString(currencyString);\n   }\n ",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java",
                "sha": "5d355dfef005e5f04d63f03550ea01e61e6a8e5b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 0,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java",
                "patch": "@@ -22,6 +22,7 @@\n  */\n public class DontRenderChildrenRenderer extends UINodeRendererBase\n {\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java",
                "sha": "1eeab1418f414ba41a5db80bc782c7f8ac17cfed",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 5,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java",
                "patch": "@@ -55,18 +55,20 @@\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeBegin(FacesContext context, UIComponent component)\n     throws IOException\n   {\n     _LOG.finer(\"Entering CorePanelAccordionRenderer.encodeBegin()\");\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int numChildren = children.size();\n     UIComponent disclosedChild = null;\n     UIXShowDetail renderableChild = null;\n \n     for (int indxChild = 0; indxChild < numChildren ; indxChild++ )\n     {\n-      UIComponent child =  (UIComponent) children.get(indxChild);\n+      UIComponent child =  children.get(indxChild);\n       if (! (child instanceof UIXShowDetail) )\n       {\n         continue;\n@@ -125,6 +127,8 @@ public void encodeBegin(FacesContext context, UIComponent component)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeChildren(FacesContext context, UIComponent component)\n     throws IOException\n   {\n@@ -135,7 +139,7 @@ public void encodeChildren(FacesContext context, UIComponent component)\n \n     ResponseWriter out = context.getResponseWriter();\n \n-    ListIterator iter = component.getChildren().listIterator();\n+    ListIterator<UIComponent> iter = component.getChildren().listIterator();\n \n     if (iter == null)\n     {\n@@ -343,6 +347,7 @@ else if (disclosed)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @Override\n   public void encodeEnd(FacesContext context,\n                         UIComponent component)\n     throws IOException\n@@ -524,9 +529,9 @@ private boolean _isDiscloseMany(UIComponent component)\n     return discloseNone;\n   }\n \n-  private UIXShowDetail _getNextShowDetailChild(ListIterator iter)\n+  private UIXShowDetail _getNextShowDetailChild(ListIterator<UIComponent> iter)\n   {\n-    UIComponent child = (UIComponent)iter.next();\n+    UIComponent child = iter.next();\n     if (! child.isRendered() )\n     {\n       return null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java",
                "sha": "ff165b82bce6a6666f9ee260f6130acf6f5918d1",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add",
                "deletions": 2,
                "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java",
                "patch": "@@ -45,6 +45,7 @@\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected void writeAdditionalJS(FacesContext context,\n                                    UIComponent component)\n     throws IOException\n@@ -108,6 +109,7 @@ protected void writeAdditionalJS(FacesContext context,\n    * @inheritDoc\n    *\n    */\n+  @Override\n   protected void renderListDisplay(FacesContext context,\n                                    UIComponent component,\n                                    String disclosedChildId)\n@@ -152,6 +154,7 @@ protected void renderListDisplay(FacesContext context,\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected String getHTMLControlID(String compId)\n   {\n     return compId + _CHOICE_SELECT_SUFFIX_ID_CONST;\n@@ -162,6 +165,7 @@ protected String getHTMLControlID(String compId)\n    *\n    *  The select control markup is contained within a TD element.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderSelectItemInTD(FacesContext context,\n                                      UIComponent component,\n                                      String disclosedChildId)\n@@ -190,10 +194,10 @@ private void _renderSelectItemInTD(FacesContext context,\n \n     URLEncoder encoder = rCtx.getURLEncoder();\n     // Render options now.\n-    ListIterator children = component.getChildren().listIterator();\n+    ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n     {\n-      UIComponent child = (UIComponent) children.next();\n+      UIComponent child = children.next();\n       if (child instanceof UIXShowDetail)\n       {\n         UIXShowDetail detailItem = (UIXShowDetail) child;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java",
                "sha": "c64f099fe175b0a9544eec5844095ee3dfa69057",
                "status": "modified"
            }
        ],
        "message": "Commit nearly all of Simon Lessard's patch for ADFFACES-72 (for impl and API);  had to revert SubKeyMap changes as it broke the SubKeyMapTest, and fix the CapabilitiesDocumentParser change as it caused an NPE when running the CoreRenderKitTest",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/877b8888f0776fbd953bebda3e764e0b4fef338b",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "FacesBeanImplTest.java",
            "RequestContextTest.java",
            "ArrayMapTest.java",
            "ColorConverterTest.java",
            "FormatterMapTest.java",
            "TokenizerTest.java",
            "HtmlResponseWriterTest.java",
            "RegionMetadataTest.java",
            "RenderUtilsTest.java",
            "CoreRenderKitTest.java",
            "OutputUtilsTest.java",
            "TableSelectOneRendererTest.java"
        ]
    },
    "myfaces-trinidad_cde6339": {
        "bug_id": "myfaces-trinidad_cde6339",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/cde6339b6316024723daf28b2fa361b85eea044e",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/cde6339b6316024723daf28b2fa361b85eea044e/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java?ref=cde6339b6316024723daf28b2fa361b85eea044e",
                "deletions": 1,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "patch": "@@ -281,7 +281,7 @@ public void validate(\n   {\n     if ((context == null) || (component == null))\n     {\n-      throw new NullPointerException();\n+      throw new NullPointerException(\"FacesContext or Component is null\");\n     }\n \n     if (value != null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/cde6339b6316024723daf28b2fa361b85eea044e/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "sha": "2cd1394d16695d0b81986b12b0d06ad97293226b",
                "status": "modified"
            }
        ],
        "message": "npe constructor...",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/e62ab19a03dfa3fa0e150fa4f4c7f05f7025a7c3",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "DateTimeRangeValidatorTest.java"
        ]
    }
}