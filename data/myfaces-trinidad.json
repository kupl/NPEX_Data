{
    "myfaces-trinidad_3268dd9": {
        "bug_id": "myfaces-trinidad_3268dd9",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/3268dd98e78217a47a51c39009701eb18de773c6",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/3268dd98e78217a47a51c39009701eb18de773c6/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java?ref=3268dd98e78217a47a51c39009701eb18de773c6",
                "deletions": 1,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "patch": "@@ -281,7 +281,7 @@ public void validate(\n   {\n     if ((context == null) || (component == null))\n     {\n-      throw new NullPointerException();\n+      throw new NullPointerException(\"FacesContext or Component is null\");\n     }\n \n     if (value != null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/3268dd98e78217a47a51c39009701eb18de773c6/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "sha": "2cd1394d16695d0b81986b12b0d06ad97293226b",
                "status": "modified"
            }
        ],
        "message": "npe constructor...",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/68986a9f530ed1b6a27cd31d95c493be5c0f98f5",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "DateTimeRangeValidatorTest.java"
        ]
    },
    "myfaces-trinidad_34f0778": {
        "bug_id": "myfaces-trinidad_34f0778",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/34f0778b5092ead65122826e100dde56e989c9ef",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java?ref=34f0778b5092ead65122826e100dde56e989c9ef",
                "deletions": 3,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "patch": "@@ -18,6 +18,7 @@\n import java.util.List;\n \n import javax.faces.context.FacesContext;\n+import javax.faces.el.PropertyResolver;\n \n /**\n  * Creates a TreeModel from a List of beans.\n@@ -312,9 +313,8 @@ protected Object getChildData(Object parentData)\n     if (prop == null)\n       return null;\n     \n-    FacesContext context = FacesContext.getCurrentInstance();\n-    return \n-      context.getApplication().getPropertyResolver().getValue(parentData, prop);\n+    PropertyResolver resolver = SortableModel.__getPropertyResolver();\n+    return resolver.getValue(parentData, prop);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "sha": "7c4aaee27cfa15d35d8cf2c0abff8bc6c454242a",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java?ref=34f0778b5092ead65122826e100dde56e989c9ef",
                "deletions": 4,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "patch": "@@ -19,6 +19,8 @@\n import java.util.Comparator;\n import java.util.List;\n \n+import javax.faces.FactoryFinder;\n+import javax.faces.application.ApplicationFactory;\n import javax.faces.context.FacesContext;\n import javax.faces.el.PropertyResolver;\n import javax.faces.model.DataModel;\n@@ -145,8 +147,7 @@ public boolean isSortable(String property)\n       Object data = _model.getRowData();\n       try\n       {\n-        FacesContext context = FacesContext.getCurrentInstance();\n-        PropertyResolver resolver = context.getApplication().getPropertyResolver();\n+        PropertyResolver resolver = __getPropertyResolver();\n         Object propertyValue = resolver.getValue(data, property);\n \n         // when the value is null, we don't know if we can sort it.\n@@ -246,9 +247,8 @@ private void _sort(String property, boolean isAscending)\n     // Make sure the model has that row 0! (It could be empty.)\n     if (_model.isRowAvailable())\n     {\n-      FacesContext context = FacesContext.getCurrentInstance();\n       Comparator<Integer> comp =\n-        new Comp(context. getApplication().getPropertyResolver(), property);\n+        new Comp(__getPropertyResolver(), property);\n       if (!isAscending)\n         comp = new Inverter<Integer>(comp);\n \n@@ -388,6 +388,22 @@ public int compare(T o1, T o2)\n     private final Comparator<T> _comp;\n   }\n \n+  static PropertyResolver __getPropertyResolver()\n+  {\n+    // First try the FacesContext, which is a faster way to\n+    // get the PropertyResolver (and the 99.9% scenario)\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    if (context != null)\n+      return context.getApplication().getPropertyResolver();\n+    \n+    // If that fails, then we're likely outside of the JSF lifecycle.\n+    // Look to the ApplicationFactory.\n+    ApplicationFactory factory = (ApplicationFactory)\n+      FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY);\n+    return factory.getApplication().getPropertyResolver();\n+    \n+  }\n+\n   private SortCriterion _sortCriterion = null;\n \n   private DataModel _model = null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "sha": "73865fed0b07d8a338e77738cd0feb5f46f5cc4e",
                "status": "modified"
            }
        ],
        "message": "ADFFACES-342: ChildPropertyTreeModel and SortableModel will throw NPE if used outside of the JSF lifecycle",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/7a3e2ae43a5bc14660982e6507141c8703cbda94",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "SortableModelTest.java"
        ]
    },
    "myfaces-trinidad_b7fbc8f": {
        "bug_id": "myfaces-trinidad_b7fbc8f",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/b7fbc8f055c1dc561438eb898b66663e4e4c25ed",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java?ref=b7fbc8f055c1dc561438eb898b66663e4e4c25ed",
                "deletions": 3,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "patch": "@@ -18,6 +18,7 @@\n import java.util.List;\n \n import javax.faces.context.FacesContext;\n+import javax.faces.el.PropertyResolver;\n \n /**\n  * Creates a TreeModel from a List of beans.\n@@ -312,9 +313,8 @@ protected Object getChildData(Object parentData)\n     if (prop == null)\n       return null;\n     \n-    FacesContext context = FacesContext.getCurrentInstance();\n-    return \n-      context.getApplication().getPropertyResolver().getValue(parentData, prop);\n+    PropertyResolver resolver = SortableModel.__getPropertyResolver();\n+    return resolver.getValue(parentData, prop);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java",
                "sha": "7c4aaee27cfa15d35d8cf2c0abff8bc6c454242a",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java?ref=b7fbc8f055c1dc561438eb898b66663e4e4c25ed",
                "deletions": 4,
                "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "patch": "@@ -19,6 +19,8 @@\n import java.util.Comparator;\n import java.util.List;\n \n+import javax.faces.FactoryFinder;\n+import javax.faces.application.ApplicationFactory;\n import javax.faces.context.FacesContext;\n import javax.faces.el.PropertyResolver;\n import javax.faces.model.DataModel;\n@@ -145,8 +147,7 @@ public boolean isSortable(String property)\n       Object data = _model.getRowData();\n       try\n       {\n-        FacesContext context = FacesContext.getCurrentInstance();\n-        PropertyResolver resolver = context.getApplication().getPropertyResolver();\n+        PropertyResolver resolver = __getPropertyResolver();\n         Object propertyValue = resolver.getValue(data, property);\n \n         // when the value is null, we don't know if we can sort it.\n@@ -246,9 +247,8 @@ private void _sort(String property, boolean isAscending)\n     // Make sure the model has that row 0! (It could be empty.)\n     if (_model.isRowAvailable())\n     {\n-      FacesContext context = FacesContext.getCurrentInstance();\n       Comparator<Integer> comp =\n-        new Comp(context. getApplication().getPropertyResolver(), property);\n+        new Comp(__getPropertyResolver(), property);\n       if (!isAscending)\n         comp = new Inverter<Integer>(comp);\n \n@@ -388,6 +388,22 @@ public int compare(T o1, T o2)\n     private final Comparator<T> _comp;\n   }\n \n+  static PropertyResolver __getPropertyResolver()\n+  {\n+    // First try the FacesContext, which is a faster way to\n+    // get the PropertyResolver (and the 99.9% scenario)\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    if (context != null)\n+      return context.getApplication().getPropertyResolver();\n+    \n+    // If that fails, then we're likely outside of the JSF lifecycle.\n+    // Look to the ApplicationFactory.\n+    ApplicationFactory factory = (ApplicationFactory)\n+      FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY);\n+    return factory.getApplication().getPropertyResolver();\n+    \n+  }\n+\n   private SortCriterion _sortCriterion = null;\n \n   private DataModel _model = null;",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java",
                "sha": "73865fed0b07d8a338e77738cd0feb5f46f5cc4e",
                "status": "modified"
            }
        ],
        "message": "ADFFACES-342: ChildPropertyTreeModel and SortableModel will throw NPE if used outside of the JSF lifecycle",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/ed533b0d22669b574688c21cee4c73db5e3507f2",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "SortableModelTest.java"
        ]
    },
    "myfaces-trinidad_cde6339": {
        "bug_id": "myfaces-trinidad_cde6339",
        "commit": "https://github.com/apache/myfaces-trinidad/commit/cde6339b6316024723daf28b2fa361b85eea044e",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces-trinidad/blob/cde6339b6316024723daf28b2fa361b85eea044e/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java?ref=cde6339b6316024723daf28b2fa361b85eea044e",
                "deletions": 1,
                "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "patch": "@@ -281,7 +281,7 @@ public void validate(\n   {\n     if ((context == null) || (component == null))\n     {\n-      throw new NullPointerException();\n+      throw new NullPointerException(\"FacesContext or Component is null\");\n     }\n \n     if (value != null)",
                "raw_url": "https://github.com/apache/myfaces-trinidad/raw/cde6339b6316024723daf28b2fa361b85eea044e/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java",
                "sha": "2cd1394d16695d0b81986b12b0d06ad97293226b",
                "status": "modified"
            }
        ],
        "message": "npe constructor...",
        "parent": "https://github.com/apache/myfaces-trinidad/commit/e62ab19a03dfa3fa0e150fa4f4c7f05f7025a7c3",
        "repo": "myfaces-trinidad",
        "unit_tests": [
            "DateTimeRangeValidatorTest.java"
        ]
    }
}