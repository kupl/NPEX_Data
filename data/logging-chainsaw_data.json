[{"commit": "https://github.com/apache/logging-chainsaw/commit/c74aa2fd0bdcf28cb200a8ecfdb1ab2ca7f6b3f1", "parent": "https://github.com/apache/logging-chainsaw/commit/585cc637367a81c288ef0de59d0a36b959b11b97", "message": "Prevent npes, outofbounds exceptions", "bug_id": "logging-chainsaw_1", "file": [{"additions": 6, "raw_url": "https://github.com/apache/logging-chainsaw/raw/c74aa2fd0bdcf28cb200a8ecfdb1ab2ca7f6b3f1/src/main/java/org/apache/log4j/chainsaw/LogPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/c74aa2fd0bdcf28cb200a8ecfdb1ab2ca7f6b3f1/src/main/java/org/apache/log4j/chainsaw/LogPanel.java", "sha": "5a32d66a7aab785cd085d253348a672a113d659f", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/LogPanel.java?ref=c74aa2fd0bdcf28cb200a8ecfdb1ab2ca7f6b3f1", "patch": "@@ -963,13 +963,15 @@ public void actionPerformed(ActionEvent e) {\n     clearButton.addActionListener(\n             new AbstractAction() {\n                 public void actionPerformed(ActionEvent e){\n-                    String selectedItem = filterCombo.getSelectedItem().toString();\n-                    if (e.getSource() == clearButton && !selectedItem.equals(\"\")){\n-                        if (filterExpressionVector.contains(selectedItem)){\n-                            filterExpressionVector.remove(selectedItem);\n+                \tObject selectedItem = filterCombo.getSelectedItem();\n+                    if (e.getSource() == clearButton && selectedItem != null && !selectedItem.toString().equals(\"\")){\n+                        if (filterExpressionVector.contains(selectedItem.toString())){\n+                            filterExpressionVector.remove(selectedItem.toString());\n                         }\n                         filterCombo.setSelectedIndex(-1);\n                     }\n+                    //don't just remove the entry from the store, clear the refine focus field\n+                    filterText.setText(null);\n                 }\n             }\n     );", "filename": "src/main/java/org/apache/log4j/chainsaw/LogPanel.java"}, {"additions": 2, "raw_url": "https://github.com/apache/logging-chainsaw/raw/c74aa2fd0bdcf28cb200a8ecfdb1ab2ca7f6b3f1/src/main/java/org/apache/log4j/chainsaw/LogUI.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/c74aa2fd0bdcf28cb200a8ecfdb1ab2ca7f6b3f1/src/main/java/org/apache/log4j/chainsaw/LogUI.java", "sha": "a0c22331587d83eb087394fbbbb947f3693b4286", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/LogUI.java?ref=c74aa2fd0bdcf28cb200a8ecfdb1ab2ca7f6b3f1", "patch": "@@ -2052,7 +2052,7 @@ public void run() {\n             while (true) {\n               //if this tab is active, remove the icon\n               //don't process undocked tabs\n-              if (\n+              if (getTabbedPane().indexOfTab(ident) > -1 && \n                 getTabbedPane().getSelectedIndex() == getTabbedPane()\n                                                           .indexOfTab(ident)) {\n                 getTabbedPane().setIconAt(\n@@ -2094,7 +2094,7 @@ public void eventCountChanged(int currentCount, int totalCount) {\n \n     public void stateChanged(ChangeEvent event) {\n       if (\n-        getTabbedPane().indexOfTab(ident) == getTabbedPane().getSelectedIndex()) {\n+        getTabbedPane().indexOfTab(ident) > -1 && getTabbedPane().indexOfTab(ident) == getTabbedPane().getSelectedIndex()) {\n         getTabbedPane().setIconAt(getTabbedPane().indexOfTab(ident), SELECTED);\n       }\n     }", "filename": "src/main/java/org/apache/log4j/chainsaw/LogUI.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/a86f2e920b88ecf601e40e6c8cb93621015d6fd6", "parent": "https://github.com/apache/logging-chainsaw/commit/01cdc052e1c20b6fb8b6372a6c9481a239f9d5ec", "message": "Clarify configuration options on NoReceiversWarningPanel dialog\n\nprevent NPE in multicastreceiver", "bug_id": "logging-chainsaw_2", "file": [{"additions": 17, "raw_url": "https://github.com/apache/logging-chainsaw/raw/a86f2e920b88ecf601e40e6c8cb93621015d6fd6/src/main/java/org/apache/log4j/chainsaw/NoReceiversWarningPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/a86f2e920b88ecf601e40e6c8cb93621015d6fd6/src/main/java/org/apache/log4j/chainsaw/NoReceiversWarningPanel.java", "sha": "ba81c66d20047e7d3e6da527e7afc3c0247b9798", "changes": 34, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/NoReceiversWarningPanel.java?ref=a86f2e920b88ecf601e40e6c8cb93621015d6fd6", "patch": "@@ -72,16 +72,16 @@\n     private final JComboBox previousConfigs = new JComboBox();\n \n     private final JRadioButton simpleReceiver = new JRadioButton(\n-            \"Let me use a simple Receiver:\");\n+            \"Define a Socket-based receiver\");\n \n     private final JRadioButton justLoadingFile = new JRadioButton(\n             \"I'm fine thanks, don't worry\");\n     private final JRadioButton searchOption = new JRadioButton(\n-            \"Let me search for a configuration file\");\n+            \"Use an existing receiver configuration file...\");\n     private final JRadioButton chainsawSavedConfigOption = new JRadioButton(\n-            \"Load configuration file saved by Chainsaw\");\n+            \"Use most recent configuration defined through the Receiver configuration panel\");\n     private final JRadioButton manualOption = new JRadioButton(\n-            \"Let me define Receivers manually\");\n+            \"Define receivers through the Receiver configuration panel (configuration saved on exit)\");\n     private final JButton okButton = new JButton(\"Ok\");\n     private final PanelModel model = new PanelModel();\n     final DefaultComboBoxModel configModel = new DefaultComboBoxModel();\n@@ -131,19 +131,19 @@ private void initComponents() {\n         gc.weightx = 1.0;\n         gc.weighty = 1.0;\n \n-        JTextArea label = new JTextArea(\n-                \"You will not be able to receive events from a Remote source unless you define one in the Log4J configuration file.\\n\");\n-        label.setWrapStyleWord(true);\n-        label.setLineWrap(true);\n-        label.setEditable(false);\n-        label.setOpaque(false);\n-        label.setFont(getFont());\n+        JTextArea description = new JTextArea(\"To load events into Chainsaw, a 'receiver' configuration must be provided.\\n\\n\" +\n+                \"NOTE: An example receiver configuration is available from the Welcome tab ('view example receiver configuration')\");\n+        description.setWrapStyleWord(true);\n+        description.setLineWrap(true);\n+        description.setEditable(false);\n+        description.setOpaque(false);\n+        description.setFont(getFont());\n \n-        add(label, gc);\n+        add(description, gc);\n \n         gc.weightx = 0;\n         gc.weighty = 0;\n-        gc.gridy = 2;\n+        gc.gridy = GridBagConstraints.RELATIVE;\n         add(Box.createVerticalStrut(20), gc);\n \n         JPanel optionpanel = new JPanel();\n@@ -163,8 +163,8 @@ private void initComponents() {\n         searchOption.setMnemonic('S');\n         \n         chainsawSavedConfigOption.setToolTipText(\n-             \"Allows you to load Receiver definitions saved by Chanisaw previously\");\n- \n+             \"Allows you to load Receiver definitions saved by Chainsaw previously\");\n+\n         chainsawSavedConfigOption.setMnemonic('C');\n \n \n@@ -190,7 +190,7 @@ private void initComponents() {\n \n         chainsawSavedConfigOption.setEnabled(getModel().isChinsawConfigFileExists());\n \n-        gc.gridy = 3;\n+        gc.gridy = GridBagConstraints.RELATIVE;\n \n \n         configModel.removeAllElements();\n@@ -464,7 +464,7 @@ public void actionPerformed(ActionEvent e) {\n     private URL browseForConfig() throws MalformedURLException {\n \n         JFileChooser chooser = new JFileChooser();\n-        chooser.setDialogTitle(\"Search for Log4j configuration...\");\n+        chooser.setDialogTitle(\"Use an existing receiver configuration file...\");\n         chooser.setDialogType(JFileChooser.OPEN_DIALOG);\n         chooser.setFileFilter(new FileFilter() {\n                 public boolean accept(File f) {", "filename": "src/main/java/org/apache/log4j/chainsaw/NoReceiversWarningPanel.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/496c5302b0ec829a268a581a0aaa0f423959acc5", "parent": "https://github.com/apache/logging-chainsaw/commit/7a3dfb3b6dcd9f751aec7a59ba1d2fd8f1f9638b", "message": "for some reason this fixes a NPE on linux...", "bug_id": "logging-chainsaw_3", "file": [{"additions": 1, "raw_url": "https://github.com/apache/logging-chainsaw/raw/496c5302b0ec829a268a581a0aaa0f423959acc5/src/java/org/apache/log4j/chainsaw/ApplicationPreferenceModelPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/496c5302b0ec829a268a581a0aaa0f423959acc5/src/java/org/apache/log4j/chainsaw/ApplicationPreferenceModelPanel.java", "sha": "a58f2ab60d260173d268ac54ba99f16f83a5600e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ApplicationPreferenceModelPanel.java?ref=496c5302b0ec829a268a581a0aaa0f423959acc5", "patch": "@@ -282,7 +282,7 @@ public void propertyChange(PropertyChangeEvent evt) {\n             while (enumeration.hasMoreElements()) {\n               JRadioButton button = (JRadioButton) enumeration.nextElement();\n \n-              if (button.getName().equals(lf)) {\n+              if (button.getName()!=null && button.getName().equals(lf)) {\n                 button.setSelected(true);\n \n                 break;", "filename": "src/java/org/apache/log4j/chainsaw/ApplicationPreferenceModelPanel.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/e8e45eb14b00b03ecb5f4ac4e5bd84488ca68a02", "parent": "https://github.com/apache/logging-chainsaw/commit/9acaabd49f6c0bbdbe2fac3acdf9c603eee24139", "message": "Prevent possible NPE on mouseover when the thumbnail bar has no colored entries", "bug_id": "logging-chainsaw_4", "file": [{"additions": 8, "raw_url": "https://github.com/apache/logging-chainsaw/raw/e8e45eb14b00b03ecb5f4ac4e5bd84488ca68a02/src/main/java/org/apache/log4j/chainsaw/LogPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/e8e45eb14b00b03ecb5f4ac4e5bd84488ca68a02/src/main/java/org/apache/log4j/chainsaw/LogPanel.java", "sha": "39170c6ca6e69464ee8edccabb5de4a6f866f75b", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/LogPanel.java?ref=e8e45eb14b00b03ecb5f4ac4e5bd84488ca68a02", "patch": "@@ -3199,7 +3199,9 @@ public void mouseMoved(MouseEvent e) {\n                 if (preferenceModel.isThumbnailBarToolTips()) {\n                     int yPosition = e.getPoint().y;\n                     EventWrapper event = getEventWrapperAtPosition(yPosition);\n-                    setToolTipText(getToolTipTextForEvent(event.loggingEvent));\n+                    if (event != null) {\n+                        setToolTipText(getToolTipTextForEvent(event.loggingEvent));\n+                    }\n                 } else {\n                     setToolTipText(null);\n                 }\n@@ -3315,6 +3317,11 @@ public void tableChanged(TableModelEvent e) {\n             });\n         }\n \n+        /**\n+         * Get event wrapper - may be null\n+         * @param yPosition\n+         * @return event wrapper or null\n+         */\n         private EventWrapper getEventWrapperAtPosition(int yPosition)\n         {\n             int rowCount = table.getRowCount();", "filename": "src/main/java/org/apache/log4j/chainsaw/LogPanel.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/b0992fad4f418d91066f8f066bbe58eae8ed049c", "parent": "https://github.com/apache/logging-chainsaw/commit/b8d9ac57947a70c3632952088920fe9c6a385cdc", "message": "updated release notes to include comment about xml decoder npe fix", "bug_id": "logging-chainsaw_5", "file": [{"additions": 5, "raw_url": "https://github.com/apache/logging-chainsaw/raw/b0992fad4f418d91066f8f066bbe58eae8ed049c/src/java/org/apache/log4j/chainsaw/help/release-notes.html", "blob_url": "https://github.com/apache/logging-chainsaw/blob/b0992fad4f418d91066f8f066bbe58eae8ed049c/src/java/org/apache/log4j/chainsaw/help/release-notes.html", "sha": "7a2740891bdaa6d4cb2b382e9da18feced732f83", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/help/release-notes.html?ref=b0992fad4f418d91066f8f066bbe58eae8ed049c", "patch": "@@ -9,18 +9,21 @@ <h2>Release Notes</h2>\n \n \n <h3>1.99.99 (18th May 2004 10:35 GMT+10)</h3>\n+<h2>20 May 2004</h2>\n+<ul>\n+ <li>Corrected a bug in the XML decoders which prevented XML-formatted events from being processed.</li>\n+</ul>\n+\n <h2>18 May 2004</h2>\n <ul>\n  <li>Tidied up the Logger Tree Panel's hidden logger functionality.  It's now managed by a popup dialog, freeing up space for the Logger tree itself.</li>\n </ul>\n \n-<h3>v1.99.99 (pre-log4j 1.3 Alpha)</h3>\n <h2>18 May 2004</h2>\n <ul>\n  <li>Properly included some base JavaDoc into the chainsaw jar, so that it can be accessed via Java Web Start</li>\n </ul>\n \n-<h3>v1.99.99 (pre-log4j 1.3 Alpha)</h3>\n <h2>16 May 2004</h2>\n <ul>\n  <li>Added 'cyclic buffer size' as an application property</li>", "filename": "src/java/org/apache/log4j/chainsaw/help/release-notes.html"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/e760a3f12a9405bf8a9b542fc65bcb07be6cf19f", "parent": "https://github.com/apache/logging-chainsaw/commit/acf917621d2621c55a2a61ca7d59047502e9acf7", "message": "Don't set a null configurationURL vector if one wasn't found in the existing configuration (will cause the related model to trigger an NPE on construction)", "bug_id": "logging-chainsaw_6", "file": [{"additions": 4, "raw_url": "https://github.com/apache/logging-chainsaw/raw/e760a3f12a9405bf8a9b542fc65bcb07be6cf19f/src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/e760a3f12a9405bf8a9b542fc65bcb07be6cf19f/src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java", "sha": "b60222ea72200d6d1afeed5037792c0b633ff2ac", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java?ref=e760a3f12a9405bf8a9b542fc65bcb07be6cf19f", "patch": "@@ -190,7 +190,7 @@ public void apply(ApplicationPreferenceModel model)\n       setCyclicBufferSize(model.getCyclicBufferSize());\n       Vector configurationURLs = model.getConfigurationURLs();\n       if (configurationURLs != null) {\n-        setConfigurationURLs(model.getConfigurationURLs());\n+        setConfigurationURLs(configurationURLs);\n       }\n       setConfigurationURL(model.getConfigurationURL());\n       setLastUsedVersion(model.getLastUsedVersion());\n@@ -246,7 +246,9 @@ public Vector getConfigurationURLs() {\n     }\n \n     public void setConfigurationURLs(Vector urls) {\n-        configurationURLs = urls;\n+        if (urls != null) {\n+            configurationURLs = urls;\n+        }\n     }\n \n     /**", "filename": "src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/acf917621d2621c55a2a61ca7d59047502e9acf7", "parent": "https://github.com/apache/logging-chainsaw/commit/6cde381a19cfa688ab826e74a5373b2ddb75d83e", "message": "Don't set a null configurationURL vector if one wasn't found in the existing configuration (will cause the related model to trigger an NPE on construction)", "bug_id": "logging-chainsaw_7", "file": [{"additions": 4, "raw_url": "https://github.com/apache/logging-chainsaw/raw/acf917621d2621c55a2a61ca7d59047502e9acf7/src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/acf917621d2621c55a2a61ca7d59047502e9acf7/src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java", "sha": "a191d74f21efb24584b8ce6536efc1b3e49d3f86", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java?ref=acf917621d2621c55a2a61ca7d59047502e9acf7", "patch": "@@ -188,7 +188,10 @@ public void apply(ApplicationPreferenceModel model)\n       setShowSplash(model.isShowSplash());\n       setToolTipDisplayMillis(model.getToolTipDisplayMillis());\n       setCyclicBufferSize(model.getCyclicBufferSize());\n-      setConfigurationURLs(model.getConfigurationURLs());\n+      Vector configurationURLs = model.getConfigurationURLs();\n+      if (configurationURLs != null) {\n+        setConfigurationURLs(model.getConfigurationURLs());\n+      }\n       setConfigurationURL(model.getConfigurationURL());\n       setLastUsedVersion(model.getLastUsedVersion());\n       setOkToRemoveSecurityManager(model.isOkToRemoveSecurityManager());", "filename": "src/main/java/org/apache/log4j/chainsaw/ApplicationPreferenceModel.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b", "parent": "https://github.com/apache/logging-chainsaw/commit/182662edd4dbb92693e88dc6feb622e543e3fb8d", "message": "Chainsaw bug fixes\n - when undocking a logpanel, the initial size would be incorrect\n - level icons lost when marker icon was added\n - prevent NPE in tablecolorizingrenderer\n\nAlso, changed the default chainsaw frame size to 1024x768", "bug_id": "logging-chainsaw_8", "file": [{"additions": 2, "raw_url": "https://github.com/apache/logging-chainsaw/raw/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java", "sha": "ab5a55da3fbfdff1a981edbefbeb74175eb9d0e8", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java?ref=5b2c862632d3f71f279eb7f1e5227e8dcec5e51b", "patch": "@@ -613,6 +613,7 @@ public void actionPerformed(ActionEvent arg0) {\n   private Action createCustomExpressionPanelAction() {\n     final JDialog dialog = new JDialog(logui, \"Define tab\", true);\n     dialog.getContentPane().add(getCustomExpressionPanel());\n+    dialog.setLocationRelativeTo(null);\n     dialog.pack();\n \n     Action createExpressionPanel =\n@@ -623,7 +624,7 @@ public void actionPerformed(ActionEvent arg0) {\n       };\n \n     createExpressionPanel.putValue(\n-      Action.SHORT_DESCRIPTION, \"Create custom expression LogPanel...\");\n+      Action.SHORT_DESCRIPTION, \"Create custom expression LogPanel...   \");\n \n     // TODO think of good mnemonics and HotKey for this action\n     return createExpressionPanel;", "filename": "src/main/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java"}, {"additions": 6, "raw_url": "https://github.com/apache/logging-chainsaw/raw/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/DockablePanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/DockablePanel.java", "sha": "a25925f0289e5a9c14ab174d842f993962f0642a", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/DockablePanel.java?ref=5b2c862632d3f71f279eb7f1e5227e8dcec5e51b", "patch": "@@ -17,6 +17,8 @@\n \n package org.apache.log4j.chainsaw;\n \n+import java.awt.Dimension;\n+\n import javax.swing.JPanel;\n \n \n@@ -38,4 +40,8 @@ public boolean isDocked() {\n     return isDocked;\n   }\n \n+    public Dimension getPreferredSize()\n+    {\n+        return new Dimension(1024, 768);\n+    }\n }", "filename": "src/main/java/org/apache/log4j/chainsaw/DockablePanel.java"}, {"additions": 11, "raw_url": "https://github.com/apache/logging-chainsaw/raw/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/LogPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/LogPanel.java", "sha": "303a2ab57cc284f813041ab1d1beea0895ea9b43", "changes": 14, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/LogPanel.java?ref=5b2c862632d3f71f279eb7f1e5227e8dcec5e51b", "patch": "@@ -318,7 +318,6 @@ public void actionPerformed(ActionEvent e) {\n \n     externalPanel = new DockablePanel();\n     externalPanel.setLayout(new BorderLayout());\n-    undockedFrame.getContentPane().add(externalPanel);\n \n     undockedFrame.addWindowListener(\n       new WindowAdapter() {\n@@ -329,6 +328,8 @@ public void windowClosing(WindowEvent e) {\n \n     undockedToolbar = createDockwindowToolbar();\n     externalPanel.add(undockedToolbar, BorderLayout.NORTH);\n+    undockedFrame.getContentPane().add(externalPanel);\n+    undockedFrame.setSize(new Dimension(1024, 768));\n     undockedFrame.pack();\n \n     /*\n@@ -1593,8 +1594,14 @@ public void loadSettings(LoadSettingsEvent event) {\n                 nameTreeAndMainPanelSplit.setDividerLocation(in.readInt());\n                 detailLayout.setConversionPattern(in.readObject().toString());\n                 Point p = (Point)in.readObject();\n-                undockedFrame.setLocation(p.x, p.y);\n-                undockedFrame.setSize(((Dimension)in.readObject()));\n+                Dimension d = (Dimension)in.readObject();\n+                if (p.x != 0 && p.y != 0) {\n+                    undockedFrame.setLocation(p.x, p.y);\n+                    undockedFrame.setSize(d);\n+                } else {\n+                    undockedFrame.setLocation(0, 0);\n+                    undockedFrame.setSize(new Dimension(1024, 768));\n+                }\n \n                 int versionNumber = 0;\n                 Vector savedVector;\n@@ -1806,6 +1813,7 @@ void undock() {\n     externalPanel.add(undockedToolbar, BorderLayout.NORTH);\n     externalPanel.add(nameTreeAndMainPanelSplit, BorderLayout.CENTER);\n     externalPanel.setDocked(false);\n+    undockedFrame.pack();\n \n     undockedFrame.setVisible(true);\n     dockingAction.putValue(Action.NAME, \"Dock\");", "filename": "src/main/java/org/apache/log4j/chainsaw/LogPanel.java"}, {"additions": 8, "raw_url": "https://github.com/apache/logging-chainsaw/raw/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/TableColorizingRenderer.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/java/org/apache/log4j/chainsaw/TableColorizingRenderer.java", "sha": "f60730ad35a463cc2892c743f6346a3d0d931558", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/TableColorizingRenderer.java?ref=5b2c862632d3f71f279eb7f1e5227e8dcec5e51b", "patch": "@@ -100,6 +100,10 @@ public Component getTableCellRendererComponent(\n \n     EventContainer container = (EventContainer) table.getModel();\n     LoggingEvent event = container.getRow(row);\n+    //no event, use default renderer\n+    if (event == null) {\n+        return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);\n+    }\n \n     switch (colIndex) {\n     case ChainsawColumns.INDEX_ID_COL_NAME:\n@@ -187,10 +191,12 @@ public Component getTableCellRendererComponent(\n         break;\n     }\n     //set the 'marker' icon next to the zeroth column if marker is set\n-    if (col == 0 && event.getProperty(ChainsawConstants.MARKER_PROPERTY_NAME) != null) {\n+    if (col == 0) {\n+      if (event.getProperty(ChainsawConstants.MARKER_PROPERTY_NAME) != null) {\n         c.setIcon(markerIcon);\n-    } else {\n+      } else {\n         c.setIcon(null);\n+      }\n     }\n \n     if (isSelected) {", "filename": "src/main/java/org/apache/log4j/chainsaw/TableColorizingRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/logging-chainsaw/raw/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/resources/org/apache/log4j/chainsaw/prefs/default.properties", "blob_url": "https://github.com/apache/logging-chainsaw/blob/5b2c862632d3f71f279eb7f1e5227e8dcec5e51b/src/main/resources/org/apache/log4j/chainsaw/prefs/default.properties", "sha": "a4422d7fcb131be1bc06fe003efb2c0741bf70b0", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/resources/org/apache/log4j/chainsaw/prefs/default.properties?ref=5b2c862632d3f71f279eb7f1e5227e8dcec5e51b", "patch": "@@ -4,10 +4,10 @@\n \n # These next settings define the location and dimenions of the main\n # window when it is first realized on startup\n-main.window.x=50\n-main.window.y=50\n-main.window.width=640\n-main.window.height=480\n+main.window.x=0\n+main.window.y=0\n+main.window.width=1024\n+main.window.height=768\n \n table.columns.order=ID,TIMESTAMP,LEVEL,LOGGER,MESSAGE,THROWABLE,THREAD,NDC,CLASS,METHOD,FILE,LINE\n table.columns.widths=50,150,50,100,300,100,150,150,300,150,100,100", "filename": "src/main/resources/org/apache/log4j/chainsaw/prefs/default.properties"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/3fe591eb830bce6c985db3d6e0fcba0b9e2610c5", "parent": "https://github.com/apache/logging-chainsaw/commit/1a535829617437c72be001a2b6109e9be33c02ec", "message": "Corrected xmldecoder bug - null exceptions should be assigned a single-element empty string to prevent npes\nCorrected file-load of xml formatted events to conform to responsiveness and cyclic buffer settings - both issues discovered by Stephen Pain", "bug_id": "logging-chainsaw_9", "file": [{"additions": 9, "raw_url": "https://github.com/apache/logging-chainsaw/raw/3fe591eb830bce6c985db3d6e0fcba0b9e2610c5/src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/3fe591eb830bce6c985db3d6e0fcba0b9e2610c5/src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java", "sha": "dcce47633eb113511a278262c3b959e52708b56e", "changes": 30, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java?ref=3fe591eb830bce6c985db3d6e0fcba0b9e2610c5", "patch": "@@ -16,20 +16,9 @@\n \n package org.apache.log4j.chainsaw;\n \n-import org.apache.log4j.AppenderSkeleton;\n-import org.apache.log4j.LogManager;\n-import org.apache.log4j.helpers.LogLog;\n-import org.apache.log4j.net.SocketReceiver;\n-import org.apache.log4j.rule.ExpressionRule;\n-import org.apache.log4j.rule.Rule;\n-import org.apache.log4j.spi.LoggingEvent;\n-import org.apache.log4j.spi.LoggingEventFieldResolver;\n-\n import java.beans.PropertyChangeListener;\n import java.beans.PropertyChangeSupport;\n-\n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n@@ -38,6 +27,15 @@\n \n import javax.swing.event.EventListenerList;\n \n+import org.apache.log4j.AppenderSkeleton;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.helpers.LogLog;\n+import org.apache.log4j.net.SocketReceiver;\n+import org.apache.log4j.rule.ExpressionRule;\n+import org.apache.log4j.rule.Rule;\n+import org.apache.log4j.spi.LoggingEvent;\n+import org.apache.log4j.spi.LoggingEventFieldResolver;\n+\n \n /**\n  * A handler class that either extends a particular appender hierarchy or can be bound\n@@ -100,16 +98,6 @@ public void append(LoggingEvent event) {\n     worker.enqueue(event);\n   }\n \n-  /**\n-   * Allows a Collection of events to be posted into this handler\n-   */\n-  public void appendBatch(Collection events) {\n-    for (Iterator iter = events.iterator(); iter.hasNext();) {\n-      LoggingEvent element = (LoggingEvent) iter.next();\n-      append(element);\n-    }\n-  }\n-\n   public void close() {\n   }\n ", "filename": "src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java"}, {"additions": 6, "raw_url": "https://github.com/apache/logging-chainsaw/raw/3fe591eb830bce6c985db3d6e0fcba0b9e2610c5/src/java/org/apache/log4j/chainsaw/FileLoadAction.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/3fe591eb830bce6c985db3d6e0fcba0b9e2610c5/src/java/org/apache/log4j/chainsaw/FileLoadAction.java", "sha": "4e98d1b4c6cb227ea1876a92b6d4bbfedeef286a", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/FileLoadAction.java?ref=3fe591eb830bce6c985db3d6e0fcba0b9e2610c5", "patch": "@@ -21,6 +21,7 @@\n import java.io.IOException;\n import java.net.URL;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.Map;\n import java.util.Vector;\n \n@@ -32,6 +33,7 @@\n import org.apache.log4j.Decoder;\n import org.apache.log4j.Logger;\n import org.apache.log4j.helpers.Constants;\n+import org.apache.log4j.spi.LoggingEvent;\n \n \n /**\n@@ -147,7 +149,10 @@ public String getDescription() {\n           public void run() {\n             try {\n               Vector events = decoder.decode(urlToUse);\n-              parent.handler.appendBatch(events);\n+              Iterator iter = events.iterator();\n+              while (iter.hasNext()) {\n+                  parent.handler.append((LoggingEvent)iter.next());\n+              }\n             } catch (IOException e1) {\n               // TODO Handle the error with a nice msg\n               LOG.error(e1);", "filename": "src/java/org/apache/log4j/chainsaw/FileLoadAction.java"}, {"additions": 8, "raw_url": "https://github.com/apache/logging-chainsaw/raw/3fe591eb830bce6c985db3d6e0fcba0b9e2610c5/src/java/org/apache/log4j/chainsaw/help/release-notes.html", "blob_url": "https://github.com/apache/logging-chainsaw/blob/3fe591eb830bce6c985db3d6e0fcba0b9e2610c5/src/java/org/apache/log4j/chainsaw/help/release-notes.html", "sha": "9677be0a401cb8ce97efbb0b5f32950c618802c5", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/help/release-notes.html?ref=3fe591eb830bce6c985db3d6e0fcba0b9e2610c5", "patch": "@@ -9,9 +9,16 @@ <h2>Release Notes</h2>\n \n \n <h3>1.99.99 (18th May 2004 10:35 GMT+10)</h3>\n+\n+<h2>21 May 2004</h2>\n+<ul>\n+ <li>Corrected a bug in XML decoders which caused an exceptio when rendering the exception column - discovered by Stephen Pain.</li>\n+<li>Events loaded from an XML-formatted file are now processed like other events (throttled based on responsiveness setting and conforming to cyclic buffer limits) - discovered by Stephen Pain.</li>\n+</ul>\n+\n <h2>20 May 2004</h2>\n <ul>\n- <li>Corrected a bug in the XML decoders which prevented XML-formatted events from being processed.</li>\n+ <li>Corrected a bug in the XML decoders which prevented XML-formatted events from being processed - discovered by Stephen Pain.</li>\n </ul>\n \n <h2>18 May 2004</h2>", "filename": "src/java/org/apache/log4j/chainsaw/help/release-notes.html"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/1d00d43344f02d12cc4397e474ce26cbbd7330e7", "parent": "https://github.com/apache/logging-chainsaw/commit/f5f5a1d4058ac51c439ce4aeb12e6f6cec4446a3", "message": "Chainsaw UI updates\n - increase receiver panel tree and table row heights, add scroll pane around receivers table\n - require non-blank name field when creating or editing receiver configuration\n - modify receivers jtree cell cell rendering logic so preferred size is wider\nVFSLogFilePatternReceiver \n  - if null fileURL is provided, log instead of throw NPE", "bug_id": "logging-chainsaw_10", "file": [{"additions": 6, "raw_url": "https://github.com/apache/logging-chainsaw/raw/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/receivers/PluginPropertyEditorPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/receivers/PluginPropertyEditorPanel.java", "sha": "887454a18ff484b8190a27784aee1c03b92819fa", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/receivers/PluginPropertyEditorPanel.java?ref=1d00d43344f02d12cc4397e474ce26cbbd7330e7", "patch": "@@ -84,7 +84,7 @@ public PluginPropertyEditorPanel() {\n      *\n      */\n     private void initComponents() {\n-        setPreferredSize(new Dimension(160, 120));\n+        propertyTable.setRowHeight(19);\n         setLayout(new BorderLayout());\n         scrollPane.setViewportView(propertyTable);\n \n@@ -348,6 +348,10 @@ public void setValueAt(Object aValue, int rowIndex, int columnIndex) {\n \n \n             if (columnIndex == 1) {\n+                if (descriptors[rowIndex].getName().toLowerCase().equals(\"name\") && aValue == null || aValue.toString().trim().equals(\"\")) {\n+                    logger.error(\"Name required\");\n+                    return;\n+                }\n                 aValue = translateValueIfNeeded(rowIndex, aValue);\n                 logger.debug(\n                     \"setValueAt, \" + rowIndex + \", \" + columnIndex +\n@@ -370,7 +374,7 @@ public void setValueAt(Object aValue, int rowIndex, int columnIndex) {\n         }\n \n         /**\n-         * @param columnIndex\n+         * @param row\n          * @param value\n          * @return\n          */", "filename": "src/main/java/org/apache/log4j/chainsaw/receivers/PluginPropertyEditorPanel.java"}, {"additions": 9, "raw_url": "https://github.com/apache/logging-chainsaw/raw/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/receivers/ReceiverTreeCellRenderer.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/receivers/ReceiverTreeCellRenderer.java", "sha": "cd5cbdbee73bdbb6c99583eecba16f81df7cce1f", "changes": 20, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/receivers/ReceiverTreeCellRenderer.java?ref=1d00d43344f02d12cc4397e474ce26cbbd7330e7", "patch": "@@ -17,14 +17,9 @@\n \n package org.apache.log4j.chainsaw.receivers;\n \n-import java.awt.BorderLayout;\n-import java.awt.Component;\n-\n-import javax.swing.Icon;\n-import javax.swing.ImageIcon;\n-import javax.swing.JLabel;\n-import javax.swing.JPanel;\n-import javax.swing.JTree;\n+import java.awt.*;\n+\n+import javax.swing.*;\n import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.DefaultTreeCellRenderer;\n \n@@ -48,10 +43,13 @@\n \n   public ReceiverTreeCellRenderer() {\n     super();\n+    BoxLayout layout = new BoxLayout(panel, BoxLayout.X_AXIS);\n+    panel.setLayout(layout);\n     panel.setOpaque(false);\n-    panel.setLayout(new BorderLayout());\n-    panel.add(this, BorderLayout.CENTER);\n-    panel.add(levelLabel, BorderLayout.EAST);\n+    panel.add(levelLabel);\n+    //set preferredsize to something wide\n+    setPreferredSize(new Dimension(200, 19));\n+    panel.add(this);\n   }\n \n   public Component getTreeCellRendererComponent(", "filename": "src/main/java/org/apache/log4j/chainsaw/receivers/ReceiverTreeCellRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/logging-chainsaw/raw/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/receivers/ReceiversPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/receivers/ReceiversPanel.java", "sha": "340adff92e5710b78bd344998a1774380fa88fd4", "changes": 17, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/receivers/ReceiversPanel.java?ref=1d00d43344f02d12cc4397e474ce26cbbd7330e7", "patch": "@@ -17,9 +17,7 @@\n \n package org.apache.log4j.chainsaw.receivers;\n \n-import java.awt.BorderLayout;\n-import java.awt.Component;\n-import java.awt.Container;\n+import java.awt.*;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.event.KeyEvent;\n@@ -375,6 +373,7 @@ public void run() {\n \n     receiversTree.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n     receiversTree.setCellRenderer(new ReceiverTreeCellRenderer());\n+    receiversTree.setRowHeight(19);\n \n     buttonPanel = new ReceiverToolbar();\n     receiversTree.addTreeSelectionListener(buttonPanel);\n@@ -763,11 +762,15 @@ public void actionPerformed(ActionEvent e) {\n                   panel.getOkPanel().getOkButton().addActionListener(\n                     new ActionListener() {\n                       public void actionPerformed(ActionEvent e2) {\n-                        dialog.dispose();\n                         Plugin plugin = panel.getPlugin();\n-                        pluginRegistry.addPlugin(plugin);\n-                        plugin.activateOptions();\n-                        MessageCenter.getInstance().addMessage(\"Plugin '\" + plugin.getName() + \"' started\");\n+                        if (plugin.getName() != null && !plugin.getName().trim().equals(\"\")) {\n+                            dialog.dispose();\n+                            pluginRegistry.addPlugin(plugin);\n+                            plugin.activateOptions();\n+                            MessageCenter.getInstance().addMessage(\"Plugin '\" + plugin.getName() + \"' started\");\n+                        } else {\n+                            MessageCenter.getInstance().getLogger().error(\"Name required to create receiver\");\n+                        }\n                       }\n                     });\n                   dialog.setVisible(true);", "filename": "src/main/java/org/apache/log4j/chainsaw/receivers/ReceiversPanel.java"}, {"additions": 16, "raw_url": "https://github.com/apache/logging-chainsaw/raw/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/vfs/VFSLogFilePatternReceiver.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/1d00d43344f02d12cc4397e474ce26cbbd7330e7/src/main/java/org/apache/log4j/chainsaw/vfs/VFSLogFilePatternReceiver.java", "sha": "99a5d04f750a689c5799fd2135b7f0245e80e462", "changes": 28, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/main/java/org/apache/log4j/chainsaw/vfs/VFSLogFilePatternReceiver.java?ref=1d00d43344f02d12cc4397e474ce26cbbd7330e7", "patch": "@@ -303,18 +303,22 @@ public void run() {\n     \t\t  }}).start();\n       } else {\n         String oldURL = getFileURL();\n-\t\tint index = oldURL.indexOf(\"://\");\n-\t\tString lastPart = oldURL.substring(index + \"://\".length());\n-\t\tint passEndIndex = lastPart.indexOf(\"@\");\n-\t\tif (passEndIndex > -1) { //we have a username/password\n-\t\t    int passBeginIndex = lastPart.indexOf(\":\");\n-//\t        String userName = lastPart.substring(0, passBeginIndex);\n-\t        password = lastPart.substring(passBeginIndex + 1, passEndIndex);\n-            setHost(oldURL.substring(0, index + \"://\".length()));\n-            setPath(lastPart.substring(passEndIndex + 1));\n-\t\t}\n-        vfsReader = new VFSReader();\n-   \t    new Thread(vfsReader).start();\n+        if (oldURL != null) {\n+            int index = oldURL.indexOf(\"://\");\n+            String lastPart = oldURL.substring(index + \"://\".length());\n+            int passEndIndex = lastPart.indexOf(\"@\");\n+            if (passEndIndex > -1) { //we have a username/password\n+                int passBeginIndex = lastPart.indexOf(\":\");\n+    //\t        String userName = lastPart.substring(0, passBeginIndex);\n+                password = lastPart.substring(passBeginIndex + 1, passEndIndex);\n+                setHost(oldURL.substring(0, index + \"://\".length()));\n+                setPath(lastPart.substring(passEndIndex + 1));\n+            }\n+            vfsReader = new VFSReader();\n+            new Thread(vfsReader).start();\n+        } else {\n+            getLogger().info(\"null URL - unable to parse file\");\n+        }\n       }\n    }\n ", "filename": "src/main/java/org/apache/log4j/chainsaw/vfs/VFSLogFilePatternReceiver.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/48854b6f4b8675789f21ae91240d21cee5d111e4", "parent": "https://github.com/apache/logging-chainsaw/commit/25d6e2998ffd0c83a96c5b2ffc0a23ee9e9b8024", "message": "This fixes an NPE that can occur.\n\nStephen Pain noticed that when a Receiver is restarted in Chainsaw, the GUI looks fine, but no events are displayed\nfrom that point onwards.  A real bummer.\n\nIt turns out that it is during the restart of Socket based Receivers, an LoggingEvent is sent through\ndescribing the socket close issue.  Unfortunately the event has no properties set.\n\nCurrently the LoggingEvent.getProperties() method could return null.  It might be worth changing this so that\nit return an empty Map instead, but I was not prepared to make that call right now.\n\nI might also consider checking out why the Thread that gets that NPE causes Chainsaw to become useless, it\nshould try and deal with those sort of issues in much the same way as the Swing EventDispatch thread does, it\nseems to go merrily along even after exceptions.", "bug_id": "logging-chainsaw_11", "file": [{"additions": 3, "raw_url": "https://github.com/apache/logging-chainsaw/raw/48854b6f4b8675789f21ae91240d21cee5d111e4/src/java/org/apache/log4j/chainsaw/filter/EventTypeEntryContainer.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/48854b6f4b8675789f21ae91240d21cee5d111e4/src/java/org/apache/log4j/chainsaw/filter/EventTypeEntryContainer.java", "sha": "6c616e4d449f3ddadfeef192e5f80a1283dcacfb", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/filter/EventTypeEntryContainer.java?ref=48854b6f4b8675789f21ae91240d21cee5d111e4", "patch": "@@ -148,6 +148,9 @@ void addClass(String className) {\n   }\n \n   void addProperties(Map properties) {\n+    if(properties == null) {\n+     return;   \n+    }\n         for (Iterator iter = properties.entrySet().iterator(); iter.hasNext();) {\n             Map.Entry entry = (Map.Entry)iter.next();\n             if (!(propListModel.contains(entry.getKey()))) {", "filename": "src/java/org/apache/log4j/chainsaw/filter/EventTypeEntryContainer.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/16520d48eae6867f25068b3140c5d66e8d2f6f9b", "parent": "https://github.com/apache/logging-chainsaw/commit/af54e6bdd7eeaf721a238358772c1ea8acfc5107", "message": "Changes for Bugs 30443 & 30444\n\n30443 - The FileLoadAction class ignored the user's cancel action and loaded the file anyway\n\n30444 - An XML file containing log4j events that were over 100 lines would not be imported correctly and generate an NPE.   Changed the logic\nto keep reading in lines until it reached the end of record, or end of file before attempting to decode the text.\n\nPR: 30443 30444", "bug_id": "logging-chainsaw_12", "file": [{"additions": 5, "raw_url": "https://github.com/apache/logging-chainsaw/raw/16520d48eae6867f25068b3140c5d66e8d2f6f9b/src/java/org/apache/log4j/chainsaw/FileLoadAction.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/16520d48eae6867f25068b3140c5d66e8d2f6f9b/src/java/org/apache/log4j/chainsaw/FileLoadAction.java", "sha": "4995a2374e7faee2b99f2675c40f492f663e81a4", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/FileLoadAction.java?ref=16520d48eae6867f25068b3140c5d66e8d2f6f9b", "patch": "@@ -99,10 +99,13 @@ public String getDescription() {\n           }\n         });\n \n-      chooser.showOpenDialog(parent);\n-\n+      int i = chooser.showOpenDialog(parent);\n+      if(i != JFileChooser.APPROVE_OPTION) {\n+       return; \n+      }\n       File selectedFile = chooser.getSelectedFile();\n \n+      \n       try {\n         url = selectedFile.toURL();\n         name = selectedFile.getName();", "filename": "src/java/org/apache/log4j/chainsaw/FileLoadAction.java"}, {"additions": 7, "raw_url": "https://github.com/apache/logging-chainsaw/raw/16520d48eae6867f25068b3140c5d66e8d2f6f9b/src/java/org/apache/log4j/chainsaw/help/release-notes.html", "blob_url": "https://github.com/apache/logging-chainsaw/blob/16520d48eae6867f25068b3140c5d66e8d2f6f9b/src/java/org/apache/log4j/chainsaw/help/release-notes.html", "sha": "a812159e76ed57f90dbd130b046367e1863af997", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/help/release-notes.html?ref=16520d48eae6867f25068b3140c5d66e8d2f6f9b", "patch": "@@ -8,6 +8,13 @@\n <h1>Release Notes</h2>\n \n <h1>1.99.99</h2>\n+\n+<h2>4 Aug 2004</h2>\n+<ul>\n+<li>Fixed Bug 30443 - When opening an XML file, if you hit cancel, Chainsaw opened the file anyway</li>\n+<li>Fixed Bug 30444 - NPE when trying to open an XML file where one or more events may be spread over a large (>100) number of lines.</li>\n+</ul>\n+\n <h2>31 July 2004</h2>\n <ul>\n <li>Corrected 'clear refine focus' bug.</li>", "filename": "src/java/org/apache/log4j/chainsaw/help/release-notes.html"}, {"additions": 1, "raw_url": "https://github.com/apache/logging-chainsaw/raw/16520d48eae6867f25068b3140c5d66e8d2f6f9b/src/java/org/apache/log4j/chainsaw/version/VersionManager.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/16520d48eae6867f25068b3140c5d66e8d2f6f9b/src/java/org/apache/log4j/chainsaw/version/VersionManager.java", "sha": "7fd9578e447ae558badaf812be8384b90c94ecb1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/version/VersionManager.java?ref=16520d48eae6867f25068b3140c5d66e8d2f6f9b", "patch": "@@ -10,7 +10,7 @@\n \n     private static final VersionManager instance = new VersionManager();\n     \n-    private static final String VERSION_INFO = \"1.99.99 (31 July 2004)\";\n+    private static final String VERSION_INFO = \"1.99.99 (4 Aug 2004)\";\n     \n     public static final VersionManager getInstance() {\n         return instance;", "filename": "src/java/org/apache/log4j/chainsaw/version/VersionManager.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/4a4d023ac79f7f8f3f21b419e88a2fdc470afd7a", "parent": "https://github.com/apache/logging-chainsaw/commit/74d350d3a4ccfa5d1189658389f808b2d65adec3", "message": "Fixed NPE bug found by Ulrich.Kleeberger@witt-weiden.de when\nattempting to close the welcome panel using the right click\npopup menu on the tabs.\n\nAlso reordered the position of this popup code so the L&F changes\naffected the popup menu (was staying in the Metal L&F).\n\nNow listens for tabs being removed, and disables the hide actions if the \nWelcome panel has been selected.\n\nTutorial Frame toolbar now tracks whether there are any Tutorial Generator\nReceivers running, and if not, ensures that the Start Tutorial button\ndoes not stay activated.", "bug_id": "logging-chainsaw_13", "file": [{"additions": 103, "raw_url": "https://github.com/apache/logging-chainsaw/raw/4a4d023ac79f7f8f3f21b419e88a2fdc470afd7a/src/java/org/apache/log4j/chainsaw/LogUI.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/4a4d023ac79f7f8f3f21b419e88a2fdc470afd7a/src/java/org/apache/log4j/chainsaw/LogUI.java", "sha": "3e38e7aa97c968fb30aaa8a0243334233db7e986", "changes": 171, "status": "modified", "deletions": 68, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/LogUI.java?ref=4a4d023ac79f7f8f3f21b419e88a2fdc470afd7a", "patch": "@@ -78,6 +78,8 @@\n import java.awt.Toolkit;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.ContainerListener;\n import java.awt.event.InputEvent;\n import java.awt.event.KeyEvent;\n import java.awt.event.MouseAdapter;\n@@ -326,73 +328,6 @@ private void initGUI() {\n     setJMenuBar(getToolBarAndMenus().getMenubar());\n     setTabbedPane(new ChainsawTabbedPane());\n \n-    //    getTabbedPane().addChangeListener(getToolBarAndMenus().getPanelListener());\n-    final JPopupMenu tabPopup = new JPopupMenu();\n-    Action hideCurrentTabAction =\n-      new AbstractAction(\"Hide\") {\n-        public void actionPerformed(ActionEvent e) {\n-          displayPanel(getCurrentLogPanel().getIdentifier(), false);\n-          tbms.stateChange();\n-        }\n-      };\n-\n-    Action hideOtherTabsAction =\n-      new AbstractAction(\"Hide Others\") {\n-        public void actionPerformed(ActionEvent e) {\n-          String currentName = getCurrentLogPanel().getIdentifier();\n-\n-          int count = getTabbedPane().getTabCount();\n-          int index = 0;\n-\n-          for (int i = 0; i < count; i++) {\n-            String name = getTabbedPane().getTitleAt(index);\n-\n-            if (\n-              getPanelMap().keySet().contains(name)\n-                && !name.equals(currentName)) {\n-              displayPanel(name, false);\n-              tbms.stateChange();\n-            } else {\n-              index++;\n-            }\n-          }\n-        }\n-      };\n-\n-    Action showHiddenTabsAction =\n-      new AbstractAction(\"Show All Hidden\") {\n-        public void actionPerformed(ActionEvent e) {\n-          for (Iterator iter = getPanels().keySet().iterator();\n-              iter.hasNext();) {\n-            String identifier = (String) iter.next();\n-            int count = getTabbedPane().getTabCount();\n-            boolean found = false;\n-\n-            for (int i = 0; i < count; i++) {\n-              String name = getTabbedPane().getTitleAt(i);\n-\n-              if (name.equals(identifier)) {\n-                found = true;\n-\n-                break;\n-              }\n-            }\n-\n-            if (!found) {\n-              displayPanel(identifier, true);\n-              tbms.stateChange();\n-            }\n-          }\n-        }\n-      };\n-\n-    tabPopup.add(hideCurrentTabAction);\n-    tabPopup.add(hideOtherTabsAction);\n-    tabPopup.addSeparator();\n-    tabPopup.add(showHiddenTabsAction);\n-\n-    final PopupListener tabPopupListener = new PopupListener(tabPopup);\n-    getTabbedPane().addMouseListener(tabPopupListener);\n   }\n \n   /**\n@@ -703,7 +638,94 @@ public void saveSettings(SaveSettingsEvent event) {\n       });\n \n     pack();\n+    \n+    final JPopupMenu tabPopup = new JPopupMenu();\n+    final Action hideCurrentTabAction =\n+      new AbstractAction(\"Hide\") {\n+        public void actionPerformed(ActionEvent e) {\n+          displayPanel(getCurrentLogPanel().getIdentifier(), false);\n+          tbms.stateChange();\n+        }\n+      };\n+\n+    final Action hideOtherTabsAction =\n+      new AbstractAction(\"Hide Others\") {\n+        public void actionPerformed(ActionEvent e) {\n+          String currentName = getCurrentLogPanel().getIdentifier();\n+\n+          int count = getTabbedPane().getTabCount();\n+          int index = 0;\n+\n+          for (int i = 0; i < count; i++) {\n+            String name = getTabbedPane().getTitleAt(index);\n+\n+            if (\n+              getPanelMap().keySet().contains(name)\n+                && !name.equals(currentName)) {\n+              displayPanel(name, false);\n+              tbms.stateChange();\n+            } else {\n+              index++;\n+            }\n+          }\n+        }\n+      };\n+\n+    Action showHiddenTabsAction =\n+      new AbstractAction(\"Show All Hidden\") {\n+        public void actionPerformed(ActionEvent e) {\n+          for (Iterator iter = getPanels().keySet().iterator();\n+              iter.hasNext();) {\n+            String identifier = (String) iter.next();\n+            int count = getTabbedPane().getTabCount();\n+            boolean found = false;\n+\n+            for (int i = 0; i < count; i++) {\n+              String name = getTabbedPane().getTitleAt(i);\n+\n+              if (name.equals(identifier)) {\n+                found = true;\n+\n+                break;\n+              }\n+            }\n+\n+            if (!found) {\n+              displayPanel(identifier, true);\n+              tbms.stateChange();\n+            }\n+          }\n+        }\n+      };\n \n+    tabPopup.add(hideCurrentTabAction);\n+    tabPopup.add(hideOtherTabsAction);\n+    tabPopup.addSeparator();\n+    tabPopup.add(showHiddenTabsAction);\n+\n+    final PopupListener tabPopupListener = new PopupListener(tabPopup);\n+    getTabbedPane().addMouseListener(tabPopupListener);\n+\n+    final ChangeListener actionEnabler = new ChangeListener(){\n+\n+    public void stateChanged(ChangeEvent arg0) {\n+      boolean enabled = getCurrentLogPanel()!=null;\n+      hideCurrentTabAction.setEnabled(enabled);\n+      hideOtherTabsAction.setEnabled(enabled);    \n+    }};\n+\n+    getTabbedPane().addChangeListener(actionEnabler);   \n+    \n+    getTabbedPane().addContainerListener(new ContainerListener(){\n+\n+      public void componentAdded(ContainerEvent arg0) {\n+        actionEnabler.stateChanged(null);        \n+      }\n+\n+      public void componentRemoved(ContainerEvent arg0) {\n+        actionEnabler.stateChanged(null);        \n+      }});\n+     \n     this.handler.addPropertyChangeListener(\n       \"dataRate\",\n       new PropertyChangeListener() {\n@@ -761,7 +783,7 @@ public void actionPerformed(ActionEvent e) {\n           }\n         }\n       };\n-\n+      \n     final Action stopTutorial =\n       new AbstractAction(\n         \"Stop Tutorial\", new ImageIcon(ChainsawIcons.ICON_STOP_RECEIVER)) {\n@@ -810,6 +832,19 @@ public void propertyChange(PropertyChangeEvent evt) {\n \n     startTutorial.addPropertyChangeListener(pcl);\n     stopTutorial.addPropertyChangeListener(pcl);\n+    \n+    PluginRegistry.addPluginListener(new PluginListener(){\n+\n+      public void pluginStarted(PluginEvent e) {\n+        \n+      }\n+\n+      public void pluginStopped(PluginEvent e) {\n+        List list = PluginRegistry.getPlugins(LogManager.getLoggerRepository(), Generator.class);\n+        if (list.size() == 0) {\n+          startTutorial.putValue(\"TutorialStarted\", Boolean.FALSE);\n+        }        \n+      }});\n \n     final SmallButton stopButton = new SmallButton(stopTutorial);\n ", "filename": "src/java/org/apache/log4j/chainsaw/LogUI.java"}], "repo": "logging-chainsaw"}, {"commit": "https://github.com/apache/logging-chainsaw/commit/d315605901c751338fb7880a5a9157a9333f6ad3", "parent": "https://github.com/apache/logging-chainsaw/commit/28acf88276b3b30be157449c94f117bf6281ce05", "message": "Bug fix commit\nChanges:\n\n* build.xml - copy logger.dtd into jar\n* locationinfo - non-log4j apps may only specify a subset of the locationinfo fields (the rest would be null), a check was added to prevent an NPE on each accessor\n* loggingevent - Added locationInformationExists method (getLocationInfo creates a location info if it does not exist), and added exist checks to code as needed to prevent location info construction\n* loggingevent - modified setProperty behavior, if value is null, the property is removed\n* receiverpanel - add xmlsocketreceiver support(built-in support for reception of xml-formatted log4j events via tcp socket)\n* utillogginglevel - modified intvalues so that the lowest value is greater than log4j's debug level intvalue (so the appender skeleton would forward the events correctly with threshold set to debug)\n* fileloadaction - when attempting to load an xml file, directories are displayed as well as xml files\n* modified thread code in chainsawappenderhandler in an attempt to improve performance\n* multicastappender/udpappender - removing internally specified properties (log4japp/log4jmachine name) so the rest of the appenders in the appender chain could specify these properties themselves or the default behavior of using the remote machine could be used\n* multicastappender/receiver, udpappender/receiver added encoding support (chartset) as a property.  If none set, the default system encoding is used.\n* xmlsocketreceiver/udpreceiver/multicastreceiver - added pausable support (useful in receiver panel)", "bug_id": "logging-chainsaw_14", "file": [{"additions": 38, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java", "sha": "68fa480e41b16664cf53cb4a24b39ed06573ff8c", "changes": 164, "status": "modified", "deletions": 126, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -54,20 +54,15 @@\n import org.apache.log4j.helpers.LogLog;\n import org.apache.log4j.net.SocketReceiver;\n import org.apache.log4j.plugins.PluginRegistry;\n-import org.apache.log4j.spi.LocationInfo;\n import org.apache.log4j.spi.LoggingEvent;\n \n import java.beans.PropertyChangeListener;\n import java.beans.PropertyChangeSupport;\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Date;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n import java.util.Vector;\n \n import javax.swing.event.EventListenerList;\n@@ -135,97 +130,6 @@ public boolean requiresLayout() {\n     return false;\n   }\n \n-  /**\n-   * Converts a LoggingEvent into a Vector of element (columns really).\n-   * @param event\n-   * @return\n-   *\n-   * @deprecated\n-   */\n-  public static Vector convert(LoggingEvent event) {\n-    Vector v = new Vector();\n-    LocationInfo info = event.getLocationInformation();\n-    String className = \"\";\n-    String methodName = \"\";\n-    String fileName = \"\";\n-    String lineNum = \"\";\n-\n-    if (info != null) {\n-      try {\n-        className = info.getClassName();\n-        methodName = info.getMethodName();\n-        fileName = info.getFileName();\n-        lineNum = info.getLineNumber();\n-      } catch (NullPointerException npe) {\n-      }\n-\n-      //ignore..malformed info\n-    }\n-\n-    StringBuffer MDC = new StringBuffer();\n-    Set mdc = event.getMDCKeySet();\n-    Iterator iter = mdc.iterator();\n-\n-    while (iter.hasNext()) {\n-      if (MDC.length() != 0) {\n-        MDC.append(\",\");\n-      }\n-\n-      String propName = (String) iter.next();\n-      MDC.append(propName);\n-      MDC.append(\"=\");\n-\n-      String propValue = (String) event.getMDC(propName);\n-      MDC.append(propValue);\n-    }\n-\n-    StringBuffer prop = new StringBuffer();\n-    Set properties = event.getPropertyKeySet();\n-\n-    if (properties != null) {\n-      Iterator iter2 = properties.iterator();\n-\n-      while (iter2.hasNext()) {\n-        if (prop.length() != 0) {\n-          prop.append(\",\");\n-        }\n-\n-        String propName = (String) iter2.next();\n-        prop.append(propName);\n-        prop.append(\"=\");\n-\n-        String propValue = (String) event.getProperty(propName);\n-        prop.append(propValue);\n-      }\n-    }\n-\n-    v.add(event.getLoggerName());\n-    v.add(new Date(event.timeStamp));\n-    v.add(event.getLevel().toString());\n-    v.add(event.getThreadName());\n-    v.add(event.getRenderedMessage());\n-    v.add(event.getNDC());\n-    v.add(MDC.toString());\n-\n-    StringBuffer exc = new StringBuffer();\n-    String[] excarray = event.getThrowableStrRep();\n-\n-    if (excarray != null) {\n-      for (int i = 0; i < excarray.length; i++) {\n-        exc.append(excarray[i]);\n-      }\n-    }\n-\n-    v.add(exc.toString());\n-    v.add(className);\n-    v.add(methodName);\n-    v.add(fileName);\n-    v.add(lineNum);\n-    v.add(prop.toString());\n-\n-    return v;\n-  }\n-\n   public int getQueueInterval() {\n     return sleepInterval;\n   }\n@@ -251,9 +155,10 @@ private static String getTabIdentifier(LoggingEvent e) {\n     String appname = e.getProperty(ChainsawConstants.LOG4J_APP_KEY);\n \n     if (appname != null) {\n-      if(ident.length()>0){\n-          ident.append(\"-\");\n+      if (ident.length() > 0) {\n+        ident.append(\"-\");\n       }\n+\n       ident.append(appname);\n     }\n \n@@ -378,21 +283,23 @@ public synchronized void removePropertyChangeListener(\n    */\n   class WorkQueue {\n     private final ArrayList queue = new ArrayList();\n-    private boolean stopped = false;\n+    Thread workerThread;\n \n     protected WorkQueue() {\n-      new WorkerThread().start();\n+      workerThread = new WorkerThread();\n+      workerThread.start();\n     }\n \n     public final void enqueue(LoggingEvent event) {\n       synchronized (mutex) {\n         queue.add(event);\n+        mutex.notify();\n       }\n     }\n \n     public final void stop() {\n       synchronized (mutex) {\n-        stopped = true;\n+        workerThread.interrupt();\n       }\n     }\n \n@@ -409,59 +316,64 @@ public WorkerThread() {\n       public void run() {\n         List innerList = new ArrayList();\n \n-        while (isAlive()) {\n+        while (true) {\n           long timeStart = System.currentTimeMillis();\n \n           synchronized (mutex) {\n-            if (stopped) {\n-              return;\n-            } else {\n+            try {\n+              while (queue.size() == 0) {\n+                mutex.wait();\n+              }\n+\n               if (queue.size() > 0) {\n                 innerList.addAll(queue);\n                 queue.clear();\n               }\n+            } catch (InterruptedException ie) {\n             }\n           }\n \n           int size = innerList.size();\n \n-          if (innerList.size() > 0) {\n+          if (size > 0) {\n             Iterator iter = innerList.iterator();\n-            Map identifiersEventsMap = new HashMap();\n             ChainsawEventBatch eventBatch = new ChainsawEventBatch();\n \n             while (iter.hasNext()) {\n               LoggingEvent e = (LoggingEvent) iter.next();\n-              String eventType =\n-                e.getProperty(ChainsawConstants.EVENT_TYPE_KEY);\n-\n-              if (eventType == null) {\n-                eventType = ChainsawConstants.LOG4J_EVENT_TYPE;\n+              Vector properties = new Vector();\n+              Iterator iterx = e.getPropertyKeySet().iterator();\n+              while (iterx.hasNext()) {\n+                  String thisProp = iterx.next().toString();\n+                  properties.add(thisProp +\" \" + e.getProperty(thisProp));\n               }\n-\n-              String ident = getTabIdentifier(e);\n-              eventBatch.addEvent(ident, eventType, e);\n+              eventBatch.addEvent(\n+                getTabIdentifier(e),\n+                (e.getProperty(ChainsawConstants.EVENT_TYPE_KEY) == null)\n+                ? ChainsawConstants.LOG4J_EVENT_TYPE\n+                : e.getProperty(ChainsawConstants.EVENT_TYPE_KEY), e);\n             }\n \n             dispatchEventBatch(eventBatch);\n \n             innerList.clear();\n           }\n \n-\n-\n           try {\n-            Thread.sleep(getQueueInterval());\n+            synchronized (this) {\n+              wait(getQueueInterval());\n+            }\n           } catch (InterruptedException ie) {\n           }\n-\t\t  if (size == 0) {\n-\t\t\tsetDataRate(0.0);\n-\t\t  } else {\n-\t\t\tlong timeEnd = System.currentTimeMillis();\n-\t\t\tlong diffInSeconds = (timeEnd - timeStart)/1000;\n-\t\t\tdouble rate = (((double) size) / diffInSeconds);\n-\t\t\tsetDataRate(rate);\n-\t\t  }\n+\n+          if (size == 0) {\n+            setDataRate(0.0);\n+          } else {\n+            long timeEnd = System.currentTimeMillis();\n+            long diffInSeconds = (timeEnd - timeStart) / 1000;\n+            double rate = (((double) size) / diffInSeconds);\n+            setDataRate(rate);\n+          }\n         }\n       }\n ", "filename": "src/java/org/apache/log4j/chainsaw/ChainsawAppenderHandler.java"}, {"additions": 22, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ChainsawCyclicBufferTableModel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ChainsawCyclicBufferTableModel.java", "sha": "28676159ea623d5e8b908bb89a0a2967d57b20f0", "changes": 34, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ChainsawCyclicBufferTableModel.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -90,9 +90,11 @@\n class ChainsawCyclicBufferTableModel extends AbstractTableModel\n   implements EventContainer, PropertyChangeListener {\n   private boolean cyclic = true;\n-  private final int INITIAL_CAPACITY = 5000;\n-  List unfilteredList = new CyclicBufferList(INITIAL_CAPACITY);\n-  List filteredList = new CyclicBufferList(INITIAL_CAPACITY);\n+  private final int DEFAULT_CAPACITY = 5000;\n+  private int capacity = DEFAULT_CAPACITY;\n+  private static final String PANEL_CAPACITY = \"CHAINSAW_CAPACITY\";\n+  List unfilteredList = new CyclicBufferList(capacity);\n+  List filteredList = new CyclicBufferList(capacity);\n   private boolean currentSortAscending;\n   private int currentSortColumn;\n   private EventListenerList eventListenerList = new EventListenerList();\n@@ -115,6 +117,11 @@\n \n   public ChainsawCyclicBufferTableModel() {\n     propertySupport.addPropertyChangeListener(\"cyclic\", new ModelChanger());\n+    if (System.getProperty(PANEL_CAPACITY) != null) {\n+        try {\n+            capacity = Integer.parseInt(System.getProperty(PANEL_CAPACITY));\n+        } catch (NumberFormatException nfe) {}\n+    }\n   }\n \n   /**\n@@ -330,7 +337,10 @@ public Object getValueAt(int rowIndex, int columnIndex) {\n       return null;\n     }\n \n-    LocationInfo info = event.getLocationInformation();\n+    LocationInfo info = null;\n+    if (event.locationInformationExists()) {\n+        info = event.getLocationInformation();\n+    }\n \n     if (event == null) {\n       LogLog.error(\"Invalid rowindex=\" + rowIndex);\n@@ -376,16 +386,16 @@ public Object getValueAt(int rowIndex, int columnIndex) {\n       return event.getThrowableStrRep();\n \n     case ChainsawColumns.INDEX_CLASS_COL_NAME:\n-      return (info != null) ? info.getClassName() : \"\";\n+      return (info == null) ?  \"\" : info.getClassName();\n \n     case ChainsawColumns.INDEX_FILE_COL_NAME:\n-      return (info != null) ? info.getFileName() : \"\";\n+      return (info == null) ? \"\" : info.getFileName();\n \n     case ChainsawColumns.INDEX_LINE_COL_NAME:\n-      return (info != null) ? info.getLineNumber() : \"\";\n+      return (info == null) ? \"\" : info.getLineNumber();\n \n     case ChainsawColumns.INDEX_METHOD_COL_NAME:\n-      return (info != null) ? info.getMethodName() : \"\";\n+      return (info == null) ? \"\" : info.getMethodName();\n \n     default:\n \n@@ -594,9 +604,9 @@ public synchronized void run() {\n         List newFilteredList = null;\n \n         if (isCyclic()) {\n-          newFilteredList = new CyclicBufferList(INITIAL_CAPACITY);\n+          newFilteredList = new CyclicBufferList(capacity);\n         } else {\n-          newFilteredList = new ArrayList(INITIAL_CAPACITY);\n+          newFilteredList = new ArrayList(capacity);\n         }\n \n         synchronized (unfilteredList) {\n@@ -669,9 +679,9 @@ public void run() {\n                   List newUnfilteredList = null;\n \n                   if (isCyclic()) {\n-                    newUnfilteredList = new CyclicBufferList(INITIAL_CAPACITY);\n+                    newUnfilteredList = new CyclicBufferList(capacity);\n                   } else {\n-                    newUnfilteredList = new ArrayList(INITIAL_CAPACITY);\n+                    newUnfilteredList = new ArrayList(capacity);\n                   }\n \n                   for (Iterator iter = unfilteredList.iterator();", "filename": "src/java/org/apache/log4j/chainsaw/ChainsawCyclicBufferTableModel.java"}, {"additions": 0, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ChainsawEventBatchEntry.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ChainsawEventBatchEntry.java", "sha": "c547e618f66acc410860bd09f83ae3c86adbf331", "changes": 15, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ChainsawEventBatchEntry.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -57,9 +57,6 @@\n \n import org.apache.log4j.spi.LoggingEvent;\n \n-import java.util.Vector;\n-\n-\n /**\n  * A simple container of Events, mapped to an identifier\n  * @author Paul Smith <psmith@apache.org>\n@@ -82,18 +79,6 @@ String getEventType() {\n     return eventType;\n   }\n \n-  /**\n-   * @deprecated\n-   * @return\n-   */\n-  Vector getEventVector() {\n-    return ChainsawAppenderHandler.convert(getEvent());\n-//    throw new UnsupportedOperationException(\n-//      \"Transistion to non Vector based model\");\n-\n-    //    return eventVector;\n-  }\n-\n   public LoggingEvent getEvent() {\n     return event;\n   }", "filename": "src/java/org/apache/log4j/chainsaw/ChainsawEventBatchEntry.java"}, {"additions": 6, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ColumnComparator.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ColumnComparator.java", "sha": "1dbfff8e88b3596d691f351eb9f3d53e9b218495", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ColumnComparator.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -100,8 +100,8 @@ public int compare(Object o1, Object o2) {\n       case ChainsawColumns.INDEX_METHOD_COL_NAME:\n \n         if (\n-          (e1.getLocationInformation() != null)\n-            & (e2.getLocationInformation() != null)) {\n+          (e1.locationInformationExists())\n+            & (e2.locationInformationExists())) {\n           sort =\n             e1.getLocationInformation().getMethodName().compareToIgnoreCase(\n               e2.getLocationInformation().getMethodName());\n@@ -112,8 +112,8 @@ public int compare(Object o1, Object o2) {\n       case ChainsawColumns.INDEX_CLASS_COL_NAME:\n \n         if (\n-          (e1.getLocationInformation() != null)\n-            & (e2.getLocationInformation() != null)) {\n+          (e1.locationInformationExists())\n+            & (e2.locationInformationExists())) {\n           sort =\n             e1.getLocationInformation().getClassName().compareToIgnoreCase(\n               e2.getLocationInformation().getClassName());\n@@ -124,8 +124,8 @@ public int compare(Object o1, Object o2) {\n       case ChainsawColumns.INDEX_FILE_COL_NAME:\n \n         if (\n-          (e1.getLocationInformation() != null)\n-            & (e2.getLocationInformation() != null)) {\n+          (e1.locationInformationExists())\n+            & (e2.locationInformationExists())) {\n           sort =\n             e1.getLocationInformation().getFileName().compareToIgnoreCase(\n               e2.getLocationInformation().getFileName());", "filename": "src/java/org/apache/log4j/chainsaw/ColumnComparator.java"}, {"additions": 21, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/Details_XMLSocketReceiver.html", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/Details_XMLSocketReceiver.html", "sha": "62aafa78233aa85807eecceed4be1690bbfa0d13", "changes": 21, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/Details_XMLSocketReceiver.html?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -0,0 +1,21 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n+<html>\n+<Head><link rel=\"stylesheet\" href=\"stylesheet.css\" type=\"text/css\"></head>\n+<body>\n+<B>XML Socket Receiver</b>\n+<p>XMLSocketReceiver compliments externally provided SocketAppenders. <br>\n+XMLSocketReceiver supports Log4J's log4j.dtd and Java 1.4's logger.dtd.<br>\n+However, only Log4J's log4j.dtd is currently supported when defining the receiver \n+through this panel.\n+</p>\n+\n+<p>XMLSocketReceiver listens\n+on a specified port, accepting connections from remote sockets\n+, converts the XML into logging events received from these sockets,\n+and posts them into Chainsaw's local Log4j environment allowing you \n+to view them.</p>\n+<p>Click here to see more information about XMLSocketReceiver.</p>\n+\n+<p>Click <a href=\"http://jakarta.apache.org/log4j/docs/api/org/apache/log4j/net/XMLSocketAppender.html\">here</a> to see more information about SocketAppender.</p>\n+</body>\n+</html>\n\\ No newline at end of file", "filename": "src/java/org/apache/log4j/chainsaw/Details_XMLSocketReceiver.html"}, {"additions": 1, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/FileLoadAction.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/FileLoadAction.java", "sha": "37086c8e2e93bbb0f1e7c5a11d513ec42f7af115", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/FileLoadAction.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -135,7 +135,7 @@ public void actionPerformed(ActionEvent e) {\n     chooser.setFileFilter(\n       new FileFilter() {\n         public boolean accept(File f) {\n-          return f.getName().toLowerCase().endsWith(\".xml\");\n+          return (f.getName().toLowerCase().endsWith(\".xml\")|| f.isDirectory());\n         }\n \n         public String getDescription() {", "filename": "src/java/org/apache/log4j/chainsaw/FileLoadAction.java"}, {"additions": 2, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/LogPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/LogPanel.java", "sha": "bf33ef9572dea15f1c6368cf70e49b7cd1bdb34a", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/LogPanel.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -253,7 +253,7 @@ public void propertyChange(PropertyChangeEvent evt) {\n           boolean newValue = ((Boolean) evt.getNewValue()).booleanValue();\n \n           if (newValue) {\n-            lowerPanel.setDividerLocation(150);\n+            lowerPanel.setDividerLocation(400);\n           }\n \n           detailPanel.setVisible(newValue);\n@@ -904,7 +904,7 @@ public void actionPerformed(ActionEvent e) {\n       new JSplitPane(\n         JSplitPane.VERTICAL_SPLIT, eventsAndStatusPanel, detailPanel);\n     lowerPanel.setBorder(null);\n-    lowerPanel.setDividerLocation(150);\n+    lowerPanel.setDividerLocation(400);\n     lowerPanel.setLastDividerLocation(-1);\n     lowerPanel.setOneTouchExpandable(true);\n ", "filename": "src/java/org/apache/log4j/chainsaw/LogPanel.java"}, {"additions": 9, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/LoggingEventFieldResolver.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/LoggingEventFieldResolver.java", "sha": "829a32ec4f3bde1aa9df25a207ff78689e0c24e3", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/LoggingEventFieldResolver.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -49,6 +49,7 @@\n \n package org.apache.log4j.chainsaw;\n \n+import org.apache.log4j.spi.LocationInfo;\n import org.apache.log4j.spi.LoggingEvent;\n \n import java.util.ArrayList;\n@@ -139,19 +140,22 @@ public boolean isField(String fieldName) {\n \n   public Object getValue(String fieldName, LoggingEvent event) {\n     String upperField = fieldName.toUpperCase();\n-\n+    LocationInfo info = null;\n+    if (event.locationInformationExists()) {\n+        info = event.getLocationInformation();\n+    }\n     if (LOGGER_FIELD.equals(upperField)) {\n       return event.getLoggerName();\n     } else if (LEVEL_FIELD.equals(upperField)) {\n       return event.getLevel();\n     } else if (CLASS_FIELD.equals(upperField)) {\n-      return event.getLocationInformation().getClassName();\n+      return ((info == null) ? \"\" : info.getClassName());\n     } else if (FILE_FIELD.equals(upperField)) {\n-      return event.getLocationInformation().getFileName();\n+      return ((info == null) ? \"\" : info.getFileName());\n     } else if (LINE_FIELD.equals(upperField)) {\n-      return event.getLocationInformation().getLineNumber();\n+      return ((info == null) ? \"\" : info.getLineNumber());\n     } else if (METHOD_FIELD.equals(upperField)) {\n-      return event.getLocationInformation().getMethodName();\n+      return ((info == null) ? \"\" : info.getMethodName());\n     } else if (MSG_FIELD.equals(upperField)) {\n       return event.getMessage();\n     } else if (NDC_FIELD.equals(upperField)) {", "filename": "src/java/org/apache/log4j/chainsaw/LoggingEventFieldResolver.java"}, {"additions": 11, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ReceiversPanel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ReceiversPanel.java", "sha": "babebf60856bf8c7577c3e7665515fd9f94045c4", "changes": 12, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ReceiversPanel.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -123,6 +123,7 @@\n import org.apache.log4j.net.SocketReceiver;\n import org.apache.log4j.net.UDPAppender;\n import org.apache.log4j.net.UDPReceiver;\n+import org.apache.log4j.net.XMLSocketReceiver;\n import org.apache.log4j.plugins.Pauseable;\n import org.apache.log4j.plugins.PluginRegistry;\n import org.apache.log4j.plugins.Receiver;\n@@ -664,6 +665,13 @@ private List createSortedDialogMapEntryList() throws IOException {\n           new SimplePortBasedReceiverDialogPanel(\n             UDPReceiver.class, \"UDPReceiver\", UDPAppender.DEFAULT_PORT)));\n \n+        dialogMap.put(\n+          XMLSocketReceiver.class,\n+          new CreateReceiverDialog(\n+            XMLSocketReceiver.class, \"XMLSocketReceiver\", \"XML Socket Receiver (log4j.dtd)\",\n+            new SimplePortBasedReceiverDialogPanel(\n+              XMLSocketReceiver.class, \"XMLSocketReceiver\", XMLSocketReceiver.DEFAULT_PORT)));\n+\n       List dialogMapEntryList = new ArrayList();\n \n       for (Iterator iter = dialogMap.entrySet().iterator(); iter.hasNext();) {\n@@ -715,8 +723,10 @@ public void show(Component invoker, int x, int y) {\n \n       if (userObject == getRootOfTree().getUserObject()) {\n         buildForReceiversRoot();\n-      } else {\n+      } else if (getCurrentlySelectedReceiver() != null) {\n         buildForReceiverNode();\n+      } else {\n+          return;\n       }\n \n       this.invalidate();", "filename": "src/java/org/apache/log4j/chainsaw/ReceiversPanel.java"}, {"additions": 8, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ReceiversTreeModel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/ReceiversTreeModel.java", "sha": "f88a2a78610e003f4cf243a63489d3f7be84b5e9", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/ReceiversTreeModel.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -173,16 +173,18 @@ public void pluginStopped(PluginEvent e) {\n       Receiver receiver = (Receiver) e.getPlugin();\n       DefaultMutableTreeNode node =\n         (DefaultMutableTreeNode) resolvePluginNode(receiver);\n-      int index = getRootNode().getIndex(node);\n-      getRootNode().remove(node);\n-      nodesWereRemoved(\n-        getRootNode(), new int[] { index }, new Object[] { node });\n-      pluginNodeMap.remove(receiver);\n+        if (node != null) {\n+            int index = getRootNode().getIndex(node);\n+            getRootNode().remove(node);\n+            nodesWereRemoved(\n+                getRootNode(), new int[] { index }, new Object[] { node });\n+            pluginNodeMap.remove(receiver);\n+        }\n \n       if (getRootNode().getChildCount() == 0) {\n         getRootNode().add(NoReceiversNode);\n \n-        index = getRootNode().getIndex(NoReceiversNode);\n+        int index = getRootNode().getIndex(NoReceiversNode);\n         nodesWereInserted(getRootNode(), new int[] { index });\n       }\n     }", "filename": "src/java/org/apache/log4j/chainsaw/ReceiversTreeModel.java"}, {"additions": 1, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/filter/FilterModel.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/filter/FilterModel.java", "sha": "997f8872d87531036d1551332a790715502dacb5", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/filter/FilterModel.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -77,7 +77,7 @@ public void processNewLoggingEvent(String eventType, LoggingEvent event) {\n     container.addNDC(event.getNDC());\n     container.addMDCKeys(event.getMDCKeySet());\n \n-    if (event.getLocationInformation() != null) {\n+    if (event.locationInformationExists()) {\n       LocationInfo info = event.getLocationInformation();\n       container.addClass(info.getClassName());\n       container.addMethod(info.getMethodName());", "filename": "src/java/org/apache/log4j/chainsaw/filter/FilterModel.java"}, {"additions": 4, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/layout/EventDetailLayout.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/layout/EventDetailLayout.java", "sha": "f2b0ef7a78ce45a4fa50324352a9ba574b4e274c", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/layout/EventDetailLayout.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -219,7 +219,10 @@ private static LoggingEvent copyForHTML(LoggingEvent event) {\n     String ndc = event.getNDC();\n     Hashtable mdc = formatMDC(event);\n     String[] throwableStringRep = event.getThrowableStrRep();\n-    LocationInfo li = formatLocationInfo(event);\n+    LocationInfo li = null;\n+    if (event.locationInformationExists()) {\n+        formatLocationInfo(event);\n+    }\n     Hashtable properties = formatProperties(event);\n     LoggingEvent copy =\n       new LoggingEvent(", "filename": "src/java/org/apache/log4j/chainsaw/layout/EventDetailLayout.java"}, {"additions": 1, "raw_url": "https://github.com/apache/logging-chainsaw/raw/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/rule/RuleTest.java", "blob_url": "https://github.com/apache/logging-chainsaw/blob/d315605901c751338fb7880a5a9157a9333f6ad3/src/java/org/apache/log4j/chainsaw/rule/RuleTest.java", "sha": "d644e7a47698e727994fdb5f40e4b23ed2d5c212", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/logging-chainsaw/contents/src/java/org/apache/log4j/chainsaw/rule/RuleTest.java?ref=d315605901c751338fb7880a5a9157a9333f6ad3", "patch": "@@ -233,6 +233,7 @@ public static void main(String[] args) {\n     String lastField = null;\n     JPopupMenu contextMenu = new JPopupMenu();\n     JList list = new JList();\n+ \n     JScrollPane scrollPane = new JScrollPane(list);\n     final JTextField textField;\n     private DefaultListModel fieldModel = new DefaultListModel();", "filename": "src/java/org/apache/log4j/chainsaw/rule/RuleTest.java"}], "repo": "logging-chainsaw"}]
