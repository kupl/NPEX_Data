[
    {
        "repo": "xalan-j",
        "message": "Add reference to parent Stylesheet to prevent NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@333881 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/3cfd9cacab9e2170feb91536b3db6a1d26df7462",
        "parent": "https://github.com/apache/xalan-j/commit/44b806a51e9ec0009c141c6b2e94784a72a71b92",
        "bug_id": "xalan-j_1",
        "file": [
            {
                "sha": "371978e60be43e24724cae0c23741be684b72d4b",
                "filename": "src/org/apache/xalan/processor/ProcessorNamespaceAlias.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/3cfd9cacab9e2170feb91536b3db6a1d26df7462/src/org/apache/xalan/processor/ProcessorNamespaceAlias.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/3cfd9cacab9e2170feb91536b3db6a1d26df7462/src/org/apache/xalan/processor/ProcessorNamespaceAlias.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/processor/ProcessorNamespaceAlias.java?ref=3cfd9cacab9e2170feb91536b3db6a1d26df7462",
                "patch": "@@ -119,5 +119,6 @@ public void startElement(\n     String resultNS = handler.getNamespaceForPrefix(prefix);\n     na.setResultNamespace(resultNS);\n     handler.getStylesheet().setNamespaceAlias(na);\n+    handler.getStylesheet().appendChild(na);\n   }\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "For Bugzilla 12127. Throw a TransformerException if a prefix cannot\nbe resolved to a URI insteading of throwing a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@336742 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/adad63450cdc8fb0d41a0208ed9ed482640033a2",
        "parent": "https://github.com/apache/xalan-j/commit/d31a435cd20fcd0a37a1ad420bbd9333700bd553",
        "bug_id": "xalan-j_2",
        "file": [
            {
                "sha": "48f0ab0d25eb62c46aad12b8545c61b2fc04d1e1",
                "filename": "src/org/apache/xalan/processor/XSLTAttributeDef.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/adad63450cdc8fb0d41a0208ed9ed482640033a2/src/org/apache/xalan/processor/XSLTAttributeDef.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/adad63450cdc8fb0d41a0208ed9ed482640033a2/src/org/apache/xalan/processor/XSLTAttributeDef.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/processor/XSLTAttributeDef.java?ref=adad63450cdc8fb0d41a0208ed9ed482640033a2",
                "patch": "@@ -1274,6 +1274,12 @@ StringVector processPREFIX_URLLIST(\n       String url = handler.getNamespaceForPrefix(prefix);\n \n       strings.addElement(url);\n+      \n+      if (url != null)\n+        strings.addElement(url);\n+      else\n+        throw new org.xml.sax.SAXException(XSLMessages.createMessage(XSLTErrorResources.ER_CANT_RESOLVE_NSPREFIX, new Object[] {prefix}));\n+    \n     }\n \n     return strings;",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Patch for bugzilla #9146\n\nNullPointerException when attempting to build a stylesheet from \na DOM Element instead of a Document node.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@336606 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/964b46f809b4cc573fb09bb9929203e02f4e04bd",
        "parent": "https://github.com/apache/xalan-j/commit/3f17f0fef9dc13d94bb0040bf0b1a3733ea34e98",
        "bug_id": "xalan-j_3",
        "file": [
            {
                "sha": "7eed85ddc5c1144b10026e662734df28b41af13d",
                "filename": "src/org/apache/xml/utils/TreeWalker.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/964b46f809b4cc573fb09bb9929203e02f4e04bd/src/org/apache/xml/utils/TreeWalker.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/964b46f809b4cc573fb09bb9929203e02f4e04bd/src/org/apache/xml/utils/TreeWalker.java",
                "status": "modified",
                "changes": 23,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xml/utils/TreeWalker.java?ref=964b46f809b4cc573fb09bb9929203e02f4e04bd",
                "patch": "@@ -71,6 +71,7 @@\n  * This class does a pre-order walk of the DOM tree, calling a ContentHandler\n  * interface as it goes.\n  */\n+\n public class TreeWalker\n {\n \n@@ -167,15 +168,22 @@ public TreeWalker(ContentHandler contentHandler)\n   }\n \n   /**\n-   * Perform a pre-order traversal non-recursive style.\n+   * Perform a pre-order traversal non-recursive style.  \n    *\n+   * Note that TreeWalker assumes that the subtree is intended to represent \n+   * a complete (though not necessarily well-formed) document and, during a \n+   * traversal, startDocument and endDocument will always be issued to the \n+   * SAX listener.\n+   *  \n    * @param pos Node in the tree where to start traversal\n    *\n    * @throws TransformerException\n    */\n   public void traverse(Node pos) throws org.xml.sax.SAXException\n   {\n \n+   \tthis.m_contentHandler.startDocument();\n+\n     Node top = pos;\n \n     while (null != pos)\n@@ -211,10 +219,16 @@ public void traverse(Node pos) throws org.xml.sax.SAXException\n \n       pos = nextNode;\n     }\n+    this.m_contentHandler.endDocument();\n   }\n \n   /**\n    * Perform a pre-order traversal non-recursive style.\n+\n+   * Note that TreeWalker assumes that the subtree is intended to represent \n+   * a complete (though not necessarily well-formed) document and, during a \n+   * traversal, startDocument and endDocument will always be issued to the \n+   * SAX listener.\n    *\n    * @param pos Node in the tree where to start traversal\n    * @param top Node in the tree where to end traversal\n@@ -224,6 +238,8 @@ public void traverse(Node pos) throws org.xml.sax.SAXException\n   public void traverse(Node pos, Node top) throws org.xml.sax.SAXException\n   {\n \n+\tthis.m_contentHandler.startDocument();\n+\t\n     while (null != pos)\n     {\n       startNode(pos);\n@@ -254,6 +270,7 @@ public void traverse(Node pos, Node top) throws org.xml.sax.SAXException\n \n       pos = nextNode;\n     }\n+    this.m_contentHandler.endDocument();\n   }\n \n   /** Flag indicating whether following text to be processed is raw text          */\n@@ -325,7 +342,7 @@ protected void startNode(Node node) throws org.xml.sax.SAXException\n       // ??;\n       break;\n     case Node.DOCUMENT_NODE :\n-      this.m_contentHandler.startDocument();\n+    \n       break;\n     case Node.ELEMENT_NODE :\n       NamedNodeMap atts = ((Element) node).getAttributes();\n@@ -454,8 +471,8 @@ protected void endNode(Node node) throws org.xml.sax.SAXException\n     switch (node.getNodeType())\n     {\n     case Node.DOCUMENT_NODE :\n-      this.m_contentHandler.endDocument();\n       break;\n+      \n     case Node.ELEMENT_NODE :\n       String ns = m_dh.getNamespaceOfNode(node);\n       if(null == ns)",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix for NullPointerException in SQL extension stuff. Just check for a NULL iterator...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@336355 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/e4ba54d276548a911b917da8ac8c40507bd2baed",
        "parent": "https://github.com/apache/xalan-j/commit/8b9e67b87b19bfe06ee6b88c3e0be5c4dbdef444",
        "bug_id": "xalan-j_4",
        "file": [
            {
                "sha": "e58bd3e9ce5bb508adfa839dbc4d9ff1f31d982f",
                "filename": "src/org/apache/xpath/axes/NodeSequence.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/e4ba54d276548a911b917da8ac8c40507bd2baed/src/org/apache/xpath/axes/NodeSequence.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/e4ba54d276548a911b917da8ac8c40507bd2baed/src/org/apache/xpath/axes/NodeSequence.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/axes/NodeSequence.java?ref=e4ba54d276548a911b917da8ac8c40507bd2baed",
                "patch": "@@ -314,7 +314,9 @@ else if((-1 != m_last) || (null == m_iter))\n     \t}\n     }\n     \n-        \n+  if (null == m_iter)\n+    return DTM.NULL;\n+  \n  \tint next = m_iter.nextNode();\n     if(DTM.NULL != next)\n     {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Description : Fixing a NPE related  to previous checkin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@337936 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/2e0b00b8a6934230ad868c2d870cc815a6d623b7",
        "parent": "https://github.com/apache/xalan-j/commit/d6f1cd3ec3f1f984238ea3c7336154e65870cf27",
        "bug_id": "xalan-j_5",
        "file": [
            {
                "sha": "675da23e7ad1970866cf45e5fd1b98b20556b78c",
                "filename": "src/org/apache/xml/utils/DOMBuilder.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/2e0b00b8a6934230ad868c2d870cc815a6d623b7/src/org/apache/xml/utils/DOMBuilder.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/2e0b00b8a6934230ad868c2d870cc815a6d623b7/src/org/apache/xml/utils/DOMBuilder.java",
                "status": "modified",
                "changes": 49,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xml/utils/DOMBuilder.java?ref=2e0b00b8a6934230ad868c2d870cc815a6d623b7",
                "patch": "@@ -253,7 +253,7 @@ public void endDocument() throws org.xml.sax.SAXException\n    *\n    *\n    * @param ns The namespace of the node\n-   * @param localName The local part of the qualified name \n+   * @param localName The local part of the qualified name\n    * @param name The element name.\n    * @param atts The attributes attached to the element, if any.\n    * @see #endElement\n@@ -278,22 +278,22 @@ public void startElement(\n     try\n     {\n       int nAtts = atts.getLength();\n-  \n+\n       if (0 != nAtts)\n       {\n         for (int i = 0; i < nAtts; i++)\n         {\n-  \n+\n           //System.out.println(\"type \" + atts.getType(i) + \" name \" + atts.getLocalName(i) );\n           // First handle a possible ID attribute\n           if (atts.getType(i).equalsIgnoreCase(\"ID\"))\n             setIDAttribute(atts.getValue(i), elem);\n-  \n+\n           String attrNS = atts.getURI(i);\n-          \n+\n           if(\"\".equals(attrNS))\n             attrNS = null; // DOM represents no-namespace as null\n-  \n+\n           // System.out.println(\"attrNS: \"+attrNS+\", localName: \"+atts.getQName(i)\n           //                   +\", qname: \"+atts.getQName(i)+\", value: \"+atts.getValue(i));\n           // Crimson won't let us set an xmlns: attribute on the DOM.\n@@ -307,21 +307,21 @@ public void startElement(\n           elem.setAttributeNS(attrNS,attrQName, atts.getValue(i));\n         }\n       }\n-      \n+\n       // append(elem);\n-  \n+\n       m_elemStack.push(elem);\n-  \n+\n       m_currentNode = elem;\n-      \n+\n       // append(elem);\n     }\n     catch(java.lang.Exception de)\n     {\n       // de.printStackTrace();\n       throw new org.xml.sax.SAXException(de);\n     }\n-    \n+\n   }\n \n   /**\n@@ -399,14 +399,15 @@ public void characters(char ch[], int start, int length) throws org.xml.sax.SAXE\n     }\n \n     String s = new String(ch, start, length);\n-    Node childNode = m_currentNode.getLastChild();\n-    if( childNode != null && childNode.getNodeType() == Node.TEXT_NODE ){ \n-       ((Text)childNode).appendData(s); \n-    } \n-    else{ \n-       Text text = m_doc.createTextNode(s);       \n-       append(text);       \n-    }     \n+    Node childNode;\n+    childNode =  m_currentNode != null ? m_currentNode.getLastChild(): null;\n+    if( childNode != null && childNode.getNodeType() == Node.TEXT_NODE ){\n+       ((Text)childNode).appendData(s);\n+    }\n+    else{\n+       Text text = m_doc.createTextNode(s);\n+       append(text);\n+    }\n   }\n \n   /**\n@@ -417,12 +418,12 @@ public void characters(char ch[], int start, int length) throws org.xml.sax.SAXE\n    *\n    * @param ch Array containing the characters\n    * @param start Index to start of characters in the array\n-   * @param length Number of characters in the array \n+   * @param length Number of characters in the array\n    */\n   public void charactersRaw(char ch[], int start, int length)\n           throws org.xml.sax.SAXException\n   {\n-    if(isOutsideDocElem()  \n+    if(isOutsideDocElem()\n        && org.apache.xml.utils.XMLCharacterRecognizer.isWhiteSpace(ch, start, length))\n       return;  // avoid DOM006 Hierarchy request error\n \n@@ -505,10 +506,10 @@ public void ignorableWhitespace(char ch[], int start, int length)\n \n     append(m_doc.createTextNode(s));\n   }\n-  \n+\n   /**\n    * Tell if the current node is outside the document element.\n-   * \n+   *\n    * @return true if the current node is outside the document element.\n    */\n    private boolean isOutsideDocElem()\n@@ -602,7 +603,7 @@ public void endCDATA() throws org.xml.sax.SAXException\n    */\n   public void cdata(char ch[], int start, int length) throws org.xml.sax.SAXException\n   {\n-    if(isOutsideDocElem()  \n+    if(isOutsideDocElem()\n        && org.apache.xml.utils.XMLCharacterRecognizer.isWhiteSpace(ch, start, length))\n       return;  // avoid DOM006 Hierarchy request error\n ",
                "deletions": 24
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fixed NPE bug with inline variables\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@337573 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/ee139738e2d2c8ef0d609d1eab938ae7edcb3d1c",
        "parent": "https://github.com/apache/xalan-j/commit/9508226a5616a3177002657255bd48183a6b9bb1",
        "bug_id": "xalan-j_6",
        "file": [
            {
                "sha": "8fdd271e622767aba432e7f6ad76a81c1ee927b8",
                "filename": "src/org/apache/xalan/lib/sql/SQLQueryParser.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/ee139738e2d2c8ef0d609d1eab938ae7edcb3d1c/src/org/apache/xalan/lib/sql/SQLQueryParser.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/ee139738e2d2c8ef0d609d1eab938ae7edcb3d1c/src/org/apache/xalan/lib/sql/SQLQueryParser.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/lib/sql/SQLQueryParser.java?ref=ee139738e2d2c8ef0d609d1eab938ae7edcb3d1c",
                "patch": "@@ -341,6 +341,8 @@ protected void inlineParser()\n     StringBuffer    tok = new StringBuffer();\n     boolean         firstword = true;\n \n+    if (m_Parameters == null) m_Parameters = new Vector();\n+\n     if (m_ParsedQuery == null) m_ParsedQuery = new StringBuffer();\n \n     for ( int idx = 0 ; idx < m_OrigQuery.length() ; idx++ )",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Bug 2130: Check for null data to avoid NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335478 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/cc99b893db033a14c3c69d5ce95b996cca124af7",
        "parent": "https://github.com/apache/xalan-j/commit/84cd2e7c6515d786741a16428717fb9ab6f873f0",
        "bug_id": "xalan-j_7",
        "file": [
            {
                "sha": "33b63d0782b4da0596776ca046dc74da400c4670",
                "filename": "src/org/apache/xalan/transformer/ResultTreeHandler.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/cc99b893db033a14c3c69d5ce95b996cca124af7/src/org/apache/xalan/transformer/ResultTreeHandler.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/cc99b893db033a14c3c69d5ce95b996cca124af7/src/org/apache/xalan/transformer/ResultTreeHandler.java",
                "status": "modified",
                "changes": 9,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/transformer/ResultTreeHandler.java?ref=cc99b893db033a14c3c69d5ce95b996cca124af7",
                "patch": "@@ -498,9 +498,14 @@ public void characters(org.w3c.dom.Node node)\n       m_snapshot.m_currentNode = node;\n \n     String data = node.getNodeValue();\n-    char [] ch = data.toCharArray();\n-    int length = data.length();\n+    char [] ch = null;\n+    int length = 0;\n+    if (data != null)\n+    {\n+    ch = data.toCharArray();\n+    length = data.length();\n     m_contentHandler.characters(ch, 0, length);\n+    }\n     \n     if (null != m_tracer)\n     {",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Applied patch for bug 15090 from Joanne Tong (joannet@ca.ibm.com).  Added code\nto handle the case in which a referenced function is not found by reporting an\nerror.  Previously, a NullPointerException was the result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@337629 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/fc31359235edc12e48d171440f30b93133cd5d9d",
        "parent": "https://github.com/apache/xalan-j/commit/4a9cca3568142b5953f4bc4e3682f88439d6452e",
        "bug_id": "xalan-j_8",
        "file": [
            {
                "sha": "43e7de61ad2871081e33fb8ff91de45065e27343",
                "filename": "src/org/apache/xalan/extensions/ExtensionHandlerExsltFunction.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/fc31359235edc12e48d171440f30b93133cd5d9d/src/org/apache/xalan/extensions/ExtensionHandlerExsltFunction.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/fc31359235edc12e48d171440f30b93133cd5d9d/src/org/apache/xalan/extensions/ExtensionHandlerExsltFunction.java",
                "status": "modified",
                "changes": 39,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/extensions/ExtensionHandlerExsltFunction.java?ref=fc31359235edc12e48d171440f30b93133cd5d9d",
                "patch": "@@ -61,6 +61,8 @@\n \n import javax.xml.transform.TransformerException;\n \n+import org.apache.xalan.res.XSLMessages;\n+import org.apache.xalan.res.XSLTErrorResources;\n import org.apache.xalan.templates.Constants;\n import org.apache.xalan.templates.ElemExsltFuncResult;\n import org.apache.xalan.templates.ElemExsltFunction;\n@@ -234,25 +236,32 @@ public Object callFunction(FuncExtFunction extFunction,\n       }\n       \n       ElemExsltFunction elemFunc = getFunction(extFunction.getFunctionName());\n-      XPathContext context = exprContext.getXPathContext();\n-      TransformerImpl transformer = (TransformerImpl)context.getOwnerObject();\n       \n-      // Reset the frame bottom before calling the EXSLT function.\n-      if (callerTemplate != null)\n-        elemFunc.setCallerFrameSize(callerTemplate.m_frameSize);\n-      else\n-        elemFunc.setCallerFrameSize(0);\n+      if (null != elemFunc) {\n+        XPathContext context = exprContext.getXPathContext();\n+        TransformerImpl transformer = (TransformerImpl)context.getOwnerObject();\n       \n-      elemFunc.execute(transformer, methodArgs);\n+        // Reset the frame bottom before calling the EXSLT function.\n+        if (callerTemplate != null)\n+          elemFunc.setCallerFrameSize(callerTemplate.m_frameSize);\n+        else\n+          elemFunc.setCallerFrameSize(0);\n+       \n+        elemFunc.execute(transformer, methodArgs);\n       \n-      XObject val = new XString(\"\"); // value returned if no result element.\n-      if (elemFunc.isResultSet())\n-      {\n-        val = elemFunc.getResult();\n-        elemFunc.clearResult();\n-      }\n+        XObject val = new XString(\"\"); // value returned if no result element.\n+        if (elemFunc.isResultSet())\n+        {\n+          val = elemFunc.getResult();\n+          elemFunc.clearResult();\n+        }\n               \n-      return val;\n+        return val;\n+      \n+      }\n+      else {\n+      \tthrow new TransformerException(XSLMessages.createMessage(XSLTErrorResources.ER_FUNCTION_NOT_FOUND, new Object[] {extFunction.getFunctionName()}));\n+      }\n     }\n     catch (TransformerException e)\n     {",
                "deletions": 15
            },
            {
                "sha": "ba52a90eac59b3b20229860d9d771d516996ff1b",
                "filename": "src/org/apache/xalan/res/XSLTErrorResources.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/fc31359235edc12e48d171440f30b93133cd5d9d/src/org/apache/xalan/res/XSLTErrorResources.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/fc31359235edc12e48d171440f30b93133cd5d9d/src/org/apache/xalan/res/XSLTErrorResources.java",
                "status": "modified",
                "changes": 18,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/res/XSLTErrorResources.java?ref=fc31359235edc12e48d171440f30b93133cd5d9d",
                "patch": "@@ -430,6 +430,8 @@\n   public static final String ER_TEMPLATE_NAME_MATCH = \"ER_TEMPLATE_NAME_MATCH\";\n   public static final String ER_INVALID_PREFIX = \"ER_INVALID_PREFIX\";\n   public static final String ER_NO_ATTRIB_SET = \"ER_NO_ATTRIB_SET\";\n+  public static final String ER_FUNCTION_NOT_FOUND = \n+\t \"ER_FUNCTION_NOT_FOUND\"; \n \n   public static final String WG_FOUND_CURLYBRACE = \"WG_FOUND_CURLYBRACE\";\n   public static final String WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR = \n@@ -2123,16 +2125,24 @@\n     { ER_INVALID_PREFIX,\n      \"Prefix in exclude-result-prefixes is not valid: {0}\"},\n \n-    // Note to translators:  An \"attribute set\" is a set of attributes that can be\n-    // added to an element in the output document as a group.  The message indicates\n-    // that there was a reference to an attribute set named {0} that was never\n-    // defined.\n+    // Note to translators:  An \"attribute set\" is a set of attributes that can\n+    // be added to an element in the output document as a group.  The message\n+    // indicates that there was a reference to an attribute set named {0} that\n+    // was never defined.\n     // ER_NO_ATTRIB_SET - new error message for bugzilla #782\n \n   // attribute-set named {0} does not exist\n //  public static final int ER_NO_ATTRIB_SET           = 253;\n     { ER_NO_ATTRIB_SET,\n      \"attribute-set named {0} does not exist\"},\n+     \n+    // Note to translators:  This message indicates that there was a reference\n+    // to a function named {0} for which no function definition could be found.\n+//ER_FUNCTION_NOT_FOUND\n+//  public static final int ER_FUNCTION_NOT_FOUND = 254;\n+\n+    { ER_FUNCTION_NOT_FOUND,\n+     \"The function named {0} does not exist\"},\n \n \n ",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Applied Igor Hersht's (igorh@ca.ibm.com) patch for Bugzilla bug 10900.  Fixed\nup algorithm for determining the result of the current() function to avoid\nNullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@337546 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/65369e939176e775d9778688b04917372001f5f2",
        "parent": "https://github.com/apache/xalan-j/commit/a3b67862dcb2249cbbd73a2a15c630a2a37c5714",
        "bug_id": "xalan-j_9",
        "file": [
            {
                "sha": "128e975c54ab4302b9f5edfcb0aa9f50695e7eb3",
                "filename": "src/org/apache/xpath/XPathContext.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/65369e939176e775d9778688b04917372001f5f2/src/org/apache/xpath/XPathContext.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/65369e939176e775d9778688b04917372001f5f2/src/org/apache/xpath/XPathContext.java",
                "status": "modified",
                "changes": 16,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/XPathContext.java?ref=65369e939176e775d9778688b04917372001f5f2",
                "patch": "@@ -993,20 +993,12 @@ public SubContextList getSubContextList()\n    *\n    * @return the <a href=\"http://www.w3.org/TR/xslt#dt-current-node-list\">current node list</a>.\n    */\n-  public org.apache.xpath.axes.LocPathIterator getCurrentNodeList()\n+\n+  public org.apache.xpath.axes.SubContextList getCurrentNodeList()\n   {\n-    for (int i = m_axesIteratorStack.size()-1; i >= 0; i--) \n-    {\n-      org.apache.xpath.axes.PredicatedNodeTest iter \n-       = (org.apache.xpath.axes.PredicatedNodeTest)m_axesIteratorStack.elementAt(i);\n-      org.apache.xpath.axes.LocPathIterator lpi = iter.getLocPathIterator();\n-      if(lpi.getIsTopLevel())\n-        return lpi;\n-    }\n-    return null;\n+    return m_axesIteratorStack.isEmpty()\n+           ? null : (SubContextList) m_axesIteratorStack.elementAt(0);\n   }\n-\n-\n   //==========================================================\n   // SECTION: Implementation of ExpressionContext interface\n   //==========================================================",
                "deletions": 12
            },
            {
                "sha": "0a6ab6fa49a4edc7700882c8588166bb46491695",
                "filename": "src/org/apache/xpath/functions/FuncCurrent.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/65369e939176e775d9778688b04917372001f5f2/src/org/apache/xpath/functions/FuncCurrent.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/65369e939176e775d9778688b04917372001f5f2/src/org/apache/xpath/functions/FuncCurrent.java",
                "status": "modified",
                "changes": 58,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/FuncCurrent.java?ref=65369e939176e775d9778688b04917372001f5f2",
                "patch": "@@ -63,6 +63,11 @@\n import org.apache.xpath.axes.PredicatedNodeTest;\n import org.apache.xpath.objects.XNodeSet;\n import org.apache.xpath.objects.XObject;\n+import org.apache.xpath.axes.SubContextList;\n+import org.apache.xpath.patterns.StepPattern;\n+import org.apache.xalan.res.XSLMessages;\n+import org.apache.xalan.res.XSLTErrorResources;\n+\n \n /**\n  * <meta name=\"usage\" content=\"advanced\"/>\n@@ -81,46 +86,23 @@\n    */\n   public XObject execute(XPathContext xctxt) throws javax.xml.transform.TransformerException\n   {\n-    // If we're in a predicate, then this will return non-null.\n-    Object subContextList = xctxt.getSubContextList();\n-    int currentNode;\n-\n-    // %TBD% Hack city...\n-    if (null != subContextList && subContextList instanceof PredicatedNodeTest)\n-    {\n-      // PredicatedNodeTest iter = (PredicatedNodeTest) xctxt.getSubContextList();\n-      // LocPathIterator lpi = iter.getLocPathIterator();\n-      LocPathIterator lpi = xctxt.getCurrentNodeList();\n-\n-      currentNode = lpi.getCurrentContextNode();  \n-        \n-    }\n-    else if(xctxt.getIteratorRoot() != DTM.NULL)\n-    {\n-      currentNode = xctxt.getIteratorRoot();\n-    }\n-    else\n-    {\n-      DTMIterator cnl = xctxt.getContextNodeList();\n+   \n+    SubContextList subContextList = xctxt.getCurrentNodeList();\n+    int currentNode = DTM.NULL;\n \n-      if (null != cnl)\n-      {\n-        // %REVIEW% Not so certain that this is doing the right thing?\n-        currentNode = cnl.getCurrentNode();\n-      }\n-      else\n-        currentNode = DTM.NULL;\n+    if (null != subContextList) {\n+        if (subContextList instanceof PredicatedNodeTest) {\n+            LocPathIterator iter = ((PredicatedNodeTest)subContextList)\n+                                                          .getLocPathIterator();\n+            currentNode = iter.getCurrentContextNode();\n+         } else if(subContextList instanceof StepPattern) {\n+           throw new RuntimeException(XSLMessages.createMessage(\n+              XSLTErrorResources.ER_PROCESSOR_ERROR,null));\n+         }\n+    } else {\n+        // not predicate => ContextNode == CurrentNode\n+        currentNode = xctxt.getContextNode();\n     }\n-    //  if(DTM.NULL != currentNode)\n-    //  {\n-    //    DTM dtm = xctxt.getDTM(currentNode);\n-    //    System.err.println(\"current node: \"+dtm.getNodeName(currentNode)+\"[\"+Integer.toHexString(currentNode)+\"]\");\n-    //  }\n-    //  else\n-    //  {\n-    //     System.err.println(\"current node: DTM.NULL\");\n-    //  }\n-\n     return new XNodeSet(currentNode, xctxt.getDTMManager());\n   }\n   ",
                "deletions": 38
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Use null nodetest to mean the same as \"node()\".  This fixes a bug reported\nby \"Voytenko, Dimitry\" <DVoytenko@SECTORBASE.COM>\nwhere <xsl:copy-of select=\"sql:query(...)\"/>\ncrashes with NullPointerException, i.e.\nthere are cases where we really don't want\nto set the NodeTest.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@334450 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/44f3350d2ec9a190d4154efea5cf23e0f5d580a1",
        "parent": "https://github.com/apache/xalan-j/commit/f66cd67c8a7f11e827008a39adcf49d9330f5270",
        "bug_id": "xalan-j_10",
        "file": [
            {
                "sha": "dc4940fae739f7bb56fdf903fc05ab621912e3eb",
                "filename": "src/org/apache/xalan/lib/sql/ColumnHeader.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/44f3350d2ec9a190d4154efea5cf23e0f5d580a1/src/org/apache/xalan/lib/sql/ColumnHeader.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/44f3350d2ec9a190d4154efea5cf23e0f5d580a1/src/org/apache/xalan/lib/sql/ColumnHeader.java",
                "status": "modified",
                "changes": 9,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/lib/sql/ColumnHeader.java?ref=44f3350d2ec9a190d4154efea5cf23e0f5d580a1",
                "patch": "@@ -141,9 +141,10 @@ public Node getNextSibling()\n \n     // try\n     {\n-      if (this.getNodeTest().getNamespace() == null)\n+      org.apache.xpath.patterns.NodeTest nt = this.getNodeTest();\n+      if ((null == nt) || nt.getNamespace() == null)\n       {\n-        if (this.getNodeTest().getLocalName().equals(\n+        if ((null == nt) || nt.getLocalName().equals(\n                 XStatement.S_COLUMNHEADERNAME))\n         {\n           int nextIndex = m_columnIndex + 1;\n@@ -157,6 +158,10 @@ public Node getNextSibling()\n \n             return m_parent.m_columnHeaders[nextIndex];\n           }\n+          else if(nt == null)\n+          {\n+            return new Row(getXStatement(), m_parent);\n+          }\n           else\n             return null;\n         }",
                "deletions": 2
            },
            {
                "sha": "4546edd99907d6f53638ffafd805258cf1f049f8",
                "filename": "src/org/apache/xalan/lib/sql/RowSet.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/44f3350d2ec9a190d4154efea5cf23e0f5d580a1/src/org/apache/xalan/lib/sql/RowSet.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/44f3350d2ec9a190d4154efea5cf23e0f5d580a1/src/org/apache/xalan/lib/sql/RowSet.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/lib/sql/RowSet.java?ref=44f3350d2ec9a190d4154efea5cf23e0f5d580a1",
                "patch": "@@ -116,9 +116,10 @@ public Node getFirstChild()\n \n     try\n     {\n-      if (this.getNodeTest().getNamespace() == null)\n+      org.apache.xpath.patterns.NodeTest nt = this.getNodeTest();\n+      if ((null == nt) || nt.getNamespace() == null)\n       {\n-        if (this.getNodeTest().getLocalName().equals(\n+        if ((null == nt) || nt.getLocalName().equals(\n                 XStatement.S_COLUMNHEADERNAME))\n         {\n           if (null == m_columnHeaders)\n@@ -141,7 +142,7 @@ public Node getFirstChild()\n           else\n             return m_columnHeaders[0];\n         }\n-        else if (this.getNodeTest().getLocalName().equals(\n+        else if (nt.getLocalName().equals(\n                 XStatement.S_ROWNAME))\n         {\n           if (null == m_firstrow)\n@@ -165,6 +166,7 @@ else if (this.getNodeTest().getLocalName().equals(\n     }\n   }\n \n+\n   /**\n    * getNextSibling - This always returns null.\n    *",
                "deletions": 3
            },
            {
                "sha": "7cbbe7af1d108a44ac53d962c601f35afae03630",
                "filename": "src/org/apache/xalan/lib/sql/XStatement.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/44f3350d2ec9a190d4154efea5cf23e0f5d580a1/src/org/apache/xalan/lib/sql/XStatement.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/44f3350d2ec9a190d4154efea5cf23e0f5d580a1/src/org/apache/xalan/lib/sql/XStatement.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/lib/sql/XStatement.java?ref=44f3350d2ec9a190d4154efea5cf23e0f5d580a1",
                "patch": "@@ -385,8 +385,9 @@ public Node getFirstChild()\n \n     try\n     {\n-      if ((this.getNodeTest().getNamespace() == null)\n-              && (this.getNodeTest().getLocalName().equals(S_DOCELEMENTNAME)))\n+      org.apache.xpath.patterns.NodeTest nt = this.getNodeTest();\n+      if ((nt == null) || ((nt.getNamespace() == null)\n+              && (nt.getLocalName().equals(S_DOCELEMENTNAME))))\n         return m_rowset;\n       else\n         return null;",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Check if the systemId for the stylesheet is null to avoid getting an NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@337955 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/dfe090a0435e29dfa321e2d589043330350f9484",
        "parent": "https://github.com/apache/xalan-j/commit/65134b673167e18a6590acb36421402157ad836e",
        "bug_id": "xalan-j_11",
        "file": [
            {
                "sha": "9c1c333027f5d4e6a08b7ef68f33d6dd37490f6b",
                "filename": "src/org/apache/xalan/xsltc/dom/LoadDocument.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/dfe090a0435e29dfa321e2d589043330350f9484/src/org/apache/xalan/xsltc/dom/LoadDocument.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/dfe090a0435e29dfa321e2d589043330350f9484/src/org/apache/xalan/xsltc/dom/LoadDocument.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/dom/LoadDocument.java?ref=dfe090a0435e29dfa321e2d589043330350f9484",
                "patch": "@@ -100,6 +100,9 @@ public static DTMAxisIterator documentF(Object arg, String xslURI,\n     throws TransletException {\n         try {\n             if (arg instanceof String) {\n+                if (xslURI == null )\n+                    xslURI = \"\";\n+\n                 String baseURI = xslURI;\n                 if (!SystemIDResolver.isAbsoluteURI(xslURI))\n                    baseURI = SystemIDResolver.getAbsoluteURIFromRelative(xslURI);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Wrap runtime exception in TransformerException, so we'll get line number info\nwhen NPE and the like.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@336214 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/c8fb4280e3692f65a364244c387a30550621f573",
        "parent": "https://github.com/apache/xalan-j/commit/34df847192f3e3df5227a521ed722aa58e529117",
        "bug_id": "xalan-j_12",
        "file": [
            {
                "sha": "0479ba4512ddbe2cee8d28ee3e11214e9481d683",
                "filename": "src/org/apache/xalan/transformer/TransformerImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/c8fb4280e3692f65a364244c387a30550621f573/src/org/apache/xalan/transformer/TransformerImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/c8fb4280e3692f65a364244c387a30550621f573/src/org/apache/xalan/transformer/TransformerImpl.java",
                "status": "modified",
                "changes": 139,
                "additions": 55,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/transformer/TransformerImpl.java?ref=c8fb4280e3692f65a364244c387a30550621f573",
                "patch": "@@ -57,113 +57,78 @@\n package org.apache.xalan.transformer;\n \n // Java imports\n-import java.util.Stack;\n-import java.util.Vector;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.io.UnsupportedEncodingException;\n import java.util.Enumeration;\n+import java.util.NoSuchElementException;\n import java.util.Properties;\n+import java.util.Stack;\n import java.util.StringTokenizer;\n+import java.util.Vector;\n \n-import java.io.StringWriter;\n-import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n-\n-// Xalan imports\n-import org.apache.xalan.res.XSLTErrorResources;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.transform.ErrorListener;\n+import javax.xml.transform.OutputKeys;\n+import javax.xml.transform.Result;\n+import javax.xml.transform.Source;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.URIResolver;\n+import javax.xml.transform.dom.DOMResult;\n+import javax.xml.transform.sax.SAXResult;\n+import javax.xml.transform.stream.StreamResult;\n+import org.apache.xalan.processor.TransformerFactoryImpl;\n import org.apache.xalan.res.XSLMessages;\n+import org.apache.xalan.res.XSLTErrorResources;\n+import org.apache.xalan.serialize.Method;\n+import org.apache.xalan.serialize.Serializer;\n+import org.apache.xalan.serialize.SerializerFactory;\n+import org.apache.xalan.templates.AVT;\n import org.apache.xalan.templates.Constants;\n import org.apache.xalan.templates.ElemAttributeSet;\n-import org.apache.xalan.templates.ElemTemplateElement;\n-import org.apache.xalan.templates.StylesheetComposed;\n import org.apache.xalan.templates.ElemForEach;\n-import org.apache.xalan.templates.ElemApplyTemplates;\n-import org.apache.xalan.templates.ElemUse;\n-import org.apache.xalan.templates.StylesheetRoot;\n-import org.apache.xalan.templates.Stylesheet;\n-import org.apache.xalan.templates.ElemWithParam;\n import org.apache.xalan.templates.ElemSort;\n-import org.apache.xalan.templates.AVT;\n-import org.apache.xalan.templates.ElemVariable;\n-import org.apache.xalan.templates.ElemParam;\n-import org.apache.xalan.templates.ElemCallTemplate;\n import org.apache.xalan.templates.ElemTemplate;\n+import org.apache.xalan.templates.ElemTemplateElement;\n import org.apache.xalan.templates.ElemTextLiteral;\n-import org.apache.xalan.templates.TemplateList;\n-import org.apache.xalan.templates.XUnresolvedVariable;\n+import org.apache.xalan.templates.ElemVariable;\n import org.apache.xalan.templates.OutputProperties;\n+import org.apache.xalan.templates.Stylesheet;\n+import org.apache.xalan.templates.StylesheetComposed;\n+import org.apache.xalan.templates.StylesheetRoot;\n+import org.apache.xalan.templates.WhiteSpaceInfo;\n+import org.apache.xalan.templates.XUnresolvedVariable;\n import org.apache.xalan.trace.TraceManager;\n-import org.apache.xalan.transformer.XalanProperties;\n+import org.apache.xml.dtm.DTM;\n+import org.apache.xml.dtm.DTMIterator;\n+import org.apache.xml.dtm.DTMManager;\n+import org.apache.xml.dtm.DTMWSFilter;\n+import org.apache.xml.utils.BoolStack;\n import org.apache.xml.utils.DOMBuilder;\n import org.apache.xml.utils.NodeVector;\n-import org.apache.xml.utils.BoolStack;\n-import org.apache.xml.utils.QName;\n-import org.apache.xml.utils.PrefixResolver;\n import org.apache.xml.utils.ObjectPool;\n+import org.apache.xml.utils.QName;\n import org.apache.xml.utils.SAXSourceLocator;\n-import org.apache.xpath.XPathContext;\n-import org.apache.xpath.NodeSetDTM;\n-import org.apache.xpath.objects.XObject;\n-import org.apache.xpath.objects.XNodeSet;\n-import org.apache.xpath.XPath;\n-import org.apache.xpath.objects.XString;\n-import org.apache.xpath.objects.XRTreeFrag;\n+import org.apache.xml.utils.WrappedRuntimeException;\n import org.apache.xpath.Arg;\n-import org.apache.xpath.XPathAPI;\n+import org.apache.xpath.DOMHelper;\n import org.apache.xpath.VariableStack;\n-import org.apache.xpath.SourceTreeManager;\n-import org.apache.xpath.compiler.XPathParser;\n-import org.apache.xpath.axes.ContextNodeList;\n-import org.apache.xpath.Expression;\n-\n-// Serializer Imports\n-import org.apache.xalan.serialize.Serializer;\n-import org.apache.xalan.serialize.SerializerFactory;\n-import org.apache.xalan.serialize.Method;\n-import org.apache.xml.dtm.DTM;\n-import org.apache.xml.dtm.DTMIterator;\n-import org.apache.xml.dtm.DTMManager;\n-import org.apache.xml.dtm.DTMWSFilter;\n-\n-// We have to figure out what to do about this one.\n-import org.apache.xml.dtm.ref.ExpandedNameTable;\n-\n-// SAX2 Imports\n+import org.apache.xpath.XPathContext;\n+import org.apache.xpath.objects.XObject;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.DocumentFragment;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.Text;\n import org.xml.sax.ContentHandler;\n-import org.xml.sax.helpers.XMLFilterImpl;\n-import org.xml.sax.InputSource;\n-\n-import javax.xml.transform.TransformerException;\n-\n-import org.xml.sax.XMLReader;\n import org.xml.sax.SAXException;\n-import org.xml.sax.XMLFilter;\n-import org.xml.sax.Locator;\n-import org.xml.sax.helpers.XMLReaderFactory;\n-import org.xml.sax.ext.DeclHandler;\n-import org.xml.sax.ext.LexicalHandler;\n import org.xml.sax.SAXNotRecognizedException;\n import org.xml.sax.SAXNotSupportedException;\n-\n-import javax.xml.transform.ErrorListener;\n-\n-// TRaX Imports\n-import javax.xml.transform.Source;\n-import javax.xml.transform.Result;\n-import javax.xml.transform.Transformer;\n-import javax.xml.transform.TransformerException;\n-import javax.xml.transform.TransformerException;\n-import javax.xml.transform.URIResolver;\n-import javax.xml.transform.SourceLocator;\n-import javax.xml.transform.dom.DOMSource;\n-import javax.xml.transform.dom.DOMResult;\n-import javax.xml.transform.sax.SAXSource;\n-import javax.xml.transform.sax.SAXResult;\n-import javax.xml.transform.stream.StreamResult;\n-import javax.xml.transform.OutputKeys;\n-\n-// Imported JAVA API for XML Parsing 1.0 classes\n-import javax.xml.parsers.DocumentBuilder;\n-import javax.xml.parsers.DocumentBuilderFactory;\n-import javax.xml.parsers.ParserConfigurationException;\n+import org.xml.sax.SAXParseException;\n+import org.xml.sax.ext.DeclHandler;\n+import org.xml.sax.ext.LexicalHandler;\n \n /**\n  * <meta name=\"usage\" content=\"advanced\"/>\n@@ -2292,6 +2257,12 @@ public void executeChildTemplates(\n         t.execute(this);\n       }\n     }\n+    catch(RuntimeException re)\n+    {\n+    \tTransformerException te = new TransformerException(re);\n+    \tte.setLocator(t);\n+    \tthrow te;\n+    }\n     finally\n     {\n       m_currentTemplateElementsTop--;",
                "deletions": 84
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Another fix to prevent NPE in setOutputProperty()\nPR:\nObtained from:\nSubmitted by:\tmorten@xml.apache.org\nReviewed by:\tmorten@xml.apache.org\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335612 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/267d4c58fc68830ab8560316951d139880506bec",
        "parent": "https://github.com/apache/xalan-j/commit/507d0e45044627cf116ca39dbdb3e710694a4284",
        "bug_id": "xalan-j_13",
        "file": [
            {
                "sha": "ba3120868d5b15f3006a678ecae2914af41401d4",
                "filename": "src/org/apache/xalan/xsltc/trax/TransformerImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/267d4c58fc68830ab8560316951d139880506bec/src/org/apache/xalan/xsltc/trax/TransformerImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/267d4c58fc68830ab8560316951d139880506bec/src/org/apache/xalan/xsltc/trax/TransformerImpl.java",
                "status": "modified",
                "changes": 11,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/trax/TransformerImpl.java?ref=267d4c58fc68830ab8560316951d139880506bec",
                "patch": "@@ -645,13 +645,14 @@ else if (name.equals(OutputKeys.INDENT)) {\n \t\t}\n \t    }\n \t    else if (name.equals(OutputKeys.CDATA_SECTION_ELEMENTS)) {\n-\t\ttranslet._cdata = null; // Important - clear previous setting\n-\t\tStringTokenizer e = new StringTokenizer(value);\n-\t\twhile (e.hasMoreTokens()) {\n-\t\t    translet.addCdataElement(e.nextToken());\n+\t\tif ((value != null) && (value.toLowerCase().equals(\"true\"))) {\n+\t\t    translet._cdata = null; // clear previous setting\n+\t\t    StringTokenizer e = new StringTokenizer(value);\n+\t\t    while (e.hasMoreTokens()) {\n+\t\t\ttranslet.addCdataElement(e.nextToken());\n+\t\t    }\n \t\t}\n \t    }\n-\n \t}\n     }\n ",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Add to stylesheet child list, so that element can get to it's parent.  This to\nsolve the exception:\n\njava.lang.NullPointerException\n        at org.apache.xalan.templates.ElemTemplateElement.getStylesheetComposed(\nElemTemplateElement.java:193)\n        at org.apache.xalan.templates.ElemTemplateElement.compareTo(ElemTemplate\nElement.java:1179)\n        at org.apache.xalan.templates.StylesheetRoot.QuickSort2(StylesheetRoot.j\nava:973)\n\netc.  Not sure why Gary didn't see this?\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@333870 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/4f8f4af949e2d7d21cf54d69eac8d89d18b3aacf",
        "parent": "https://github.com/apache/xalan-j/commit/5a13040690320fa3e96e683e3ccd4c3053adf489",
        "bug_id": "xalan-j_14",
        "file": [
            {
                "sha": "88236fe5090f254ce15fff757d7690ec369a680e",
                "filename": "src/org/apache/xalan/processor/ProcessorDecimalFormat.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/4f8f4af949e2d7d21cf54d69eac8d89d18b3aacf/src/org/apache/xalan/processor/ProcessorDecimalFormat.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/4f8f4af949e2d7d21cf54d69eac8d89d18b3aacf/src/org/apache/xalan/processor/ProcessorDecimalFormat.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/processor/ProcessorDecimalFormat.java?ref=4f8f4af949e2d7d21cf54d69eac8d89d18b3aacf",
                "patch": "@@ -103,5 +103,7 @@ public void startElement(\n \n     setPropertiesFromAttributes(handler, rawName, attributes, dfp);\n     handler.getStylesheet().setDecimalFormat(dfp);\n+    \n+    handler.getStylesheet().appendChild(dfp);\n   }\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fixing a NPE for when _locator is null in the XSLTC Parser.\nApplyin the patch in XALANJ-2154 from Brian Minchau, reiwed and approved by Santiago P.G.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@338198 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/55405742b3c2093aa6e8691f280414f58343df3d",
        "parent": "https://github.com/apache/xalan-j/commit/8f1440970deb1e28ba3e52ca53d53cce56adf1c6",
        "bug_id": "xalan-j_15",
        "file": [
            {
                "sha": "1a5e30191bed29213c403de03e4ebff573b18977",
                "filename": "src/org/apache/xalan/xsltc/compiler/Parser.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/55405742b3c2093aa6e8691f280414f58343df3d/src/org/apache/xalan/xsltc/compiler/Parser.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/55405742b3c2093aa6e8691f280414f58343df3d/src/org/apache/xalan/xsltc/compiler/Parser.java",
                "status": "modified",
                "changes": 28,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/compiler/Parser.java?ref=55405742b3c2093aa6e8691f280414f58343df3d",
                "patch": "@@ -273,7 +273,7 @@ private QName getQName(final String stringRep, boolean reportError,\n \t    if (prefix.equals(XMLNS_PREFIX) == false) {\n \t\tnamespace = _symbolTable.lookupNamespace(prefix);\n \t\tif (namespace == null && reportError) {\n-\t\t    final int line = _locator.getLineNumber();\n+\t\t    final int line = getLineNumber();\n \t\t    ErrorMsg err = new ErrorMsg(ErrorMsg.NAMESPACE_UNDEF_ERR,\n \t\t\t\t\t\tline, prefix);\n \t\t    reportError(ERROR, err);\n@@ -384,7 +384,7 @@ public void createAST(Stylesheet stylesheet) {\n \t\twhile (elements.hasMoreElements()) {\n \t\t    Object child = elements.nextElement();\n \t\t    if (child instanceof Text) {\n-\t\t\tfinal int l = _locator.getLineNumber();\n+\t\t\tfinal int l = getLineNumber();\n \t\t\tErrorMsg err =\n \t\t\t    new ErrorMsg(ErrorMsg.ILLEGAL_TEXT_NODE_ERR,l,null);\n \t\t\treportError(ERROR, err);\n@@ -920,7 +920,7 @@ public SyntaxTreeNode makeInstance(String uri, String prefix,\n \t\tnode.setQName(qname);\n \t\tnode.setParser(this);\n \t\tif (_locator != null) {\n-\t\t    node.setLineNumber(_locator.getLineNumber());\n+\t\t    node.setLineNumber(getLineNumber());\n \t\t}\n \t\tif (node instanceof Stylesheet) {\n \t\t    _xsltc.setStylesheet((Stylesheet)node);\n@@ -944,7 +944,7 @@ public SyntaxTreeNode makeInstance(String uri, String prefix,\n \t\t    node = new UnsupportedElement(uri, prefix, local, false);\n \t\t    UnsupportedElement element = (UnsupportedElement)node;\n \t\t    ErrorMsg msg = new ErrorMsg(ErrorMsg.UNSUPPORTED_XSL_ERR,\n-\t\t\t\t\t\t_locator.getLineNumber(),local);\n+\t\t\t\t\t\tgetLineNumber(),local);\n \t\t    element.setErrorMessage(msg);\n \t\t    if (versionIsOne) {\n \t\t    \treportError(UNSUPPORTED,msg);\n@@ -955,7 +955,7 @@ else if (uri.equals(TRANSLET_URI)) {\n \t\t    node = new UnsupportedElement(uri, prefix, local, true);\n \t\t    UnsupportedElement element = (UnsupportedElement)node;\n \t\t    ErrorMsg msg = new ErrorMsg(ErrorMsg.UNSUPPORTED_EXT_ERR,\n-\t\t\t\t\t\t_locator.getLineNumber(),local);\n+\t\t\t\t\t\tgetLineNumber(),local);\n \t\t    element.setErrorMessage(msg);\n \t\t}\n \t\t// Check if this is an extension of some other XSLT processor\n@@ -967,7 +967,7 @@ else if (uri.equals(TRANSLET_URI)) {\n \t\t\t    UnsupportedElement elem = (UnsupportedElement)node;\n \t\t\t    ErrorMsg msg =\n \t\t\t\tnew ErrorMsg(ErrorMsg.UNSUPPORTED_EXT_ERR,\n-\t\t\t\t\t     _locator.getLineNumber(),\n+\t\t\t\t\t     getLineNumber(),\n \t\t\t\t\t     prefix+\":\"+local);\n \t\t\t    elem.setErrorMessage(msg);\n \t\t\t}\n@@ -976,7 +976,7 @@ else if (uri.equals(TRANSLET_URI)) {\n \t    }\n \t    if (node == null) {\n                 node = new LiteralElement();\n-                node.setLineNumber(_locator.getLineNumber());\n+                node.setLineNumber(getLineNumber());\n             }\n \t}\n \tif ((node != null) && (node instanceof LiteralElement)) {\n@@ -1084,8 +1084,7 @@ public Pattern parsePattern(SyntaxTreeNode parent,\n      */\n     private SyntaxTreeNode parseTopLevel(SyntaxTreeNode parent, String text,\n \t\t\t\t\t String expression) {\n-\tint line = 0;\n-\tif (_locator != null) line = _locator.getLineNumber();\n+\tint line = getLineNumber();\n \n \ttry {\n \t    _xpathParser.setScanner(new XPathLexer(new StringReader(text)));\n@@ -1378,5 +1377,16 @@ public void skippedEntity(String name) { }\n     public void setDocumentLocator(Locator locator) {\n \t_locator = locator;\n     }\n+    \n+    /**\n+     * Get the line number, or zero\n+     * if there is no _locator.\n+     */\n+    private int getLineNumber() {\n+    \tint line = 0;\n+    \tif (_locator != null)\n+    \t\tline = _locator.getLineNumber();\n+    \treturn line;\n+    }\n \n }",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Committing Igor Hersht's (igorh@ca.ibm.com) patch for bugzilla #13863.\n\nNeed to reset the namespaceContext; otherwise, can get NPE if transformer\nreused.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@336940 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/8188b5dd53a087eea394f58a4d27f05244d60de5",
        "parent": "https://github.com/apache/xalan-j/commit/5fdb250f5065329e296f502e8934d7e23c2aa782",
        "bug_id": "xalan-j_16",
        "file": [
            {
                "sha": "b8923cd0880b644edca7e26b751cb51dcdc68986",
                "filename": "src/org/apache/xalan/transformer/TransformerImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/8188b5dd53a087eea394f58a4d27f05244d60de5/src/org/apache/xalan/transformer/TransformerImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/8188b5dd53a087eea394f58a4d27f05244d60de5/src/org/apache/xalan/transformer/TransformerImpl.java",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/transformer/TransformerImpl.java?ref=8188b5dd53a087eea394f58a4d27f05244d60de5",
                "patch": "@@ -620,6 +620,14 @@ public void transform(Source source, boolean shouldRelease) throws TransformerEx\n \n     try\n     {\n+        \n+      // Patch for bugzilla #13863.  If we don't reset the namespaceContext\n+      // then we will get a NullPointerException if transformer is reused \n+      // (for stylesheets that use xsl:key).  Not sure if this should go \n+      // here or in reset(). -is  \n+      if(getXPathContext().getNamespaceContext() == null){\n+         getXPathContext().setNamespaceContext(getStylesheet());\n+      }\n       String base = source.getSystemId();\n       \n       // If no systemID of the source, use the base of the stylesheet.",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "A fix for a recent regression. A no major change. Just a one-line if to\ntest for a potential NPE.\nPR:\t\tn/a\nObtained from:\tn/a\nSubmitted by:\tmorten@xml.apache.org\nReviewed by:\tmorten@xml.apache.org\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335716 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/9b6a1678b4203b47220e5559d99cfcff965f4c83",
        "parent": "https://github.com/apache/xalan-j/commit/0851693807a13f1626cdfa2f57a6975078aa31c2",
        "bug_id": "xalan-j_17",
        "file": [
            {
                "sha": "c5e9574d3e8ee37b9c1df72d9b347c661a59cdef",
                "filename": "src/org/apache/xalan/xsltc/compiler/XSLTC.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/9b6a1678b4203b47220e5559d99cfcff965f4c83/src/org/apache/xalan/xsltc/compiler/XSLTC.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/9b6a1678b4203b47220e5559d99cfcff965f4c83/src/org/apache/xalan/xsltc/compiler/XSLTC.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/compiler/XSLTC.java?ref=9b6a1678b4203b47220e5559d99cfcff965f4c83",
                "patch": "@@ -288,7 +288,7 @@ public boolean compile(InputSource input, String name) {\n \t    if (_className == null) {\n \t\tif (name != null)\n \t\t    setClassName(name);\n-\t\telse if (systemId != null)\n+\t\telse if ((systemId != null) && (!systemId.equals(\"\")))\n \t\t    setClassName(Util.baseName(systemId));\n \t\telse\n \t\t    setClassName(\"GregorSamsa\"); // default translet name",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix for a rarely occuring NPE in handling of <xsl:output> elements with\nno 'method' attribute/\nPR:\t\tn/a\nObtained from:\tn/a\nSubmitted by:\tmorten@xml.apache.org\nReviewed by:\tmorten@xml.apache.org\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335583 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/f26d93d4d31b21dc0291b62d318a20f51e4590bd",
        "parent": "https://github.com/apache/xalan-j/commit/c6f12e7ee79c09f71adb943bc5e9762008caffbe",
        "bug_id": "xalan-j_18",
        "file": [
            {
                "sha": "557773ed6f63f11d57cf49db477456a56064f959",
                "filename": "src/org/apache/xalan/xsltc/compiler/Output.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/f26d93d4d31b21dc0291b62d318a20f51e4590bd/src/org/apache/xalan/xsltc/compiler/Output.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/f26d93d4d31b21dc0291b62d318a20f51e4590bd/src/org/apache/xalan/xsltc/compiler/Output.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/compiler/Output.java?ref=f26d93d4d31b21dc0291b62d318a20f51e4590bd",
                "patch": "@@ -177,7 +177,7 @@ public void parseContents(Parser parser) {\n \tif ((attrib != null) && (!attrib.equals(EMPTYSTRING))) {\n \t    if (attrib.equals(\"yes\")) _indent = true;\n \t}\n-\telse if (_method.equals(\"html\")) {\n+\telse if ((_method != null) && (_method.equals(\"html\"))) {\n \t    _indent = true;\n \t}\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix bug 3265 (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=3265).  Using an expression in the evaluate extension function that contains a top-level variable was cause an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335436 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/8967f362489d7c11fab7a79468fabaf2c0f18c3b",
        "parent": "https://github.com/apache/xalan-j/commit/d031c203f0b1ea9368f8a08265d24f4b239de970",
        "bug_id": "xalan-j_19",
        "file": [
            {
                "sha": "1297d9b01de09aefa11d19e869d35e7cab890a83",
                "filename": "src/org/apache/xpath/VariableStack.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/8967f362489d7c11fab7a79468fabaf2c0f18c3b/src/org/apache/xpath/VariableStack.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/8967f362489d7c11fab7a79468fabaf2c0f18c3b/src/org/apache/xpath/VariableStack.java",
                "status": "modified",
                "changes": 21,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/VariableStack.java?ref=8967f362489d7c11fab7a79468fabaf2c0f18c3b",
                "patch": "@@ -444,21 +444,24 @@ public final XObject getVariableOrParam(\n       org.apache.xalan.templates.ElemTemplateElement prev =\n         (org.apache.xalan.templates.ElemTemplateElement) prefixResolver;\n \n-      while ( !(prev.getParentNode() instanceof org.apache.xalan.templates.Stylesheet) )\n+      if (!(prev instanceof org.apache.xalan.templates.Stylesheet))\n       {\n-        org.apache.xalan.templates.ElemTemplateElement savedprev = prev;\n-\n-        while (null != (prev = prev.getPreviousSiblingElem()))\n+        while ( !(prev.getParentNode() instanceof org.apache.xalan.templates.Stylesheet) )\n         {\n-          if (prev instanceof org.apache.xalan.templates.ElemVariable)\n+          org.apache.xalan.templates.ElemTemplateElement savedprev = prev;\n+\n+          while (null != (prev = prev.getPreviousSiblingElem()))\n           {\n-            vvar = (org.apache.xalan.templates.ElemVariable) prev;\n+            if (prev instanceof org.apache.xalan.templates.ElemVariable)\n+            {\n+              vvar = (org.apache.xalan.templates.ElemVariable) prev;\n \n-            if (vvar.getName().equals(qname))\n-              return getLocalVariable(xctxt, vvar.getIndex());\n+              if (vvar.getName().equals(qname))\n+                return getLocalVariable(xctxt, vvar.getIndex());\n+            }\n           }\n+          prev = savedprev.getParentElem();\n         }\n-        prev = savedprev.getParentElem();\n       }\n \n       vvar = prev.getStylesheetRoot().getVariableOrParamComposed(qname);",
                "deletions": 9
            },
            {
                "sha": "fbb68728263fc241f540a0ecee0224ad146d999a",
                "filename": "src/org/apache/xpath/operations/Variable.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/8967f362489d7c11fab7a79468fabaf2c0f18c3b/src/org/apache/xpath/operations/Variable.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/8967f362489d7c11fab7a79468fabaf2c0f18c3b/src/org/apache/xpath/operations/Variable.java",
                "status": "modified",
                "changes": 31,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/operations/Variable.java?ref=8967f362489d7c11fab7a79468fabaf2c0f18c3b",
                "patch": "@@ -206,27 +206,30 @@ public XObject execute(XPathContext xctxt) throws javax.xml.transform.Transforme\n \n           org.apache.xalan.templates.ElemTemplateElement prev = \n             (org.apache.xalan.templates.ElemTemplateElement) prefixResolver;\n-            \n-          while ( !(prev.getParentNode() instanceof org.apache.xalan.templates.Stylesheet) )\n-          {\n-            org.apache.xalan.templates.ElemTemplateElement savedprev = prev;\n \n-            while (null != (prev = prev.getPreviousSiblingElem()))\n+          if (!(prev instanceof org.apache.xalan.templates.Stylesheet))\n+          {            \n+            while ( !(prev.getParentNode() instanceof org.apache.xalan.templates.Stylesheet) )\n             {\n-              if(prev instanceof org.apache.xalan.templates.ElemVariable)\n+              org.apache.xalan.templates.ElemTemplateElement savedprev = prev;\n+\n+              while (null != (prev = prev.getPreviousSiblingElem()))\n               {\n-                vvar = (org.apache.xalan.templates.ElemVariable) prev;\n-                \n-                if (vvar.getName().equals(m_qname))\n+                if(prev instanceof org.apache.xalan.templates.ElemVariable)\n                 {\n-                  m_index = vvar.getIndex();\n-                  m_isGlobal = false;\n-                  m_fixUpWasCalled = true;\n-                  return execute(xctxt);\n+                  vvar = (org.apache.xalan.templates.ElemVariable) prev;\n+                \n+                  if (vvar.getName().equals(m_qname))\n+                  {\n+                    m_index = vvar.getIndex();\n+                    m_isGlobal = false;\n+                    m_fixUpWasCalled = true;\n+                    return execute(xctxt);\n+                  }\n                 }\n               }\n+              prev = savedprev.getParentElem();\n             }\n-            prev = savedprev.getParentElem();\n           }\n \n           vvar = prev.getStylesheetRoot().getVariableOrParamComposed(m_qname);",
                "deletions": 14
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Added small fix to prevent NPE in output handler.\nPR:\t\tn/a\nObtained from:\tn/a\nSubmitted by:\tmorten@xml.apache.org\nReviewed by:\tmorten@xml.apache.org\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335418 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/faf1937f010c57c49f048cfebb65d811246cd2be",
        "parent": "https://github.com/apache/xalan-j/commit/158228f0dc51b6b6d4ebbddb144df3a568e975fe",
        "bug_id": "xalan-j_20",
        "file": [
            {
                "sha": "a8f61685e527643f9b51e5a550846ebadafeb6a7",
                "filename": "src/org/apache/xalan/xsltc/runtime/TextOutput.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/faf1937f010c57c49f048cfebb65d811246cd2be/src/org/apache/xalan/xsltc/runtime/TextOutput.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/faf1937f010c57c49f048cfebb65d811246cd2be/src/org/apache/xalan/xsltc/runtime/TextOutput.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/runtime/TextOutput.java?ref=faf1937f010c57c49f048cfebb65d811246cd2be",
                "patch": "@@ -770,7 +770,7 @@ public String getPrefix(String uri) throws TransletException {\n \t    while (prefixes.hasMoreElements()) {\n \t\tprefix = (String)prefixes.nextElement();\n \t\ttheuri = lookupNamespace(prefix);\n-\t\tif (theuri.equals(uri)) return prefix;\n+\t\tif ((theuri != null) && (theuri.equals(uri))) return prefix;\n \t    }\n \t    prefix = generateNamespacePrefix();\n \t    pushNamespace(prefix, uri);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Implementation of id() and key() pattern - finally!\nAdded a small fix to the DOMImpl$DescendantIterator to prevent NPEs.\nPR:\t\tbugzilla 1376\nObtained from:\tn/a\nSubmitted by:\tmorten@xml.apache.org\nReviewed by:\tmorten@xml.apache.org\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335405 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/af1db24530d01b45377710411da35e8afa95b94f",
        "parent": "https://github.com/apache/xalan-j/commit/837e289ae585d5208f342d46543e9acb8b5b8d9e",
        "bug_id": "xalan-j_21",
        "file": [
            {
                "sha": "8100a7ee5c6b7600105aab07ee8b3cb5b54b3364",
                "filename": "src/org/apache/xalan/xsltc/dom/AbsoluteIterator.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/AbsoluteIterator.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/AbsoluteIterator.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/dom/AbsoluteIterator.java?ref=af1db24530d01b45377710411da35e8afa95b94f",
                "patch": "@@ -80,6 +80,7 @@ public int next() {\n     }\n \t\n     public NodeIterator setStartNode(int node) {\n+\t_startNode = DOM.ROOTNODE;\n \tif (_isRestartable) {\n \t    resetPosition();\n \t    return _source.setStartNode(_startNode = DOM.ROOTNODE);",
                "deletions": 0
            },
            {
                "sha": "a59007f4fe4d3dff8fc2dd9391a1b82c5e7fa170",
                "filename": "src/org/apache/xalan/xsltc/dom/DOMImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/DOMImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/DOMImpl.java",
                "status": "modified",
                "changes": 44,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/dom/DOMImpl.java?ref=af1db24530d01b45377710411da35e8afa95b94f",
                "patch": "@@ -131,7 +131,6 @@ public void gotoMark() {}\n     private String[]  _nsNamesArray;\n     private short[]   _namespace;\n     private Hashtable _nsIndex = new Hashtable();\n-    private int       _nsCounter = 0;\n \n     // Tracks which textnodes are whitespaces and which are not\n     private BitArray  _whitespace; // takes xml:space into acc.\n@@ -159,15 +158,6 @@ public String getDocumentURI() {\n \treturn(_documentURI);\n     }\n \n-    /**\n-     * Generates a namespace prefix for URIs that have no associated\n-     * prefix. Can happen quite frequently since we do not store\n-     * namespace prefixes in the tree (we only store the URIs).\n-     */\n-    private String generateNamespacePrefix() {\n-\treturn(new String(\"ns\"+Integer.toString(_nsCounter++)));\n-    }\n-\n     /**\n      * Returns 'true' if a specific node is an element (of any type)\n      */\n@@ -1250,6 +1240,7 @@ public int getLast() {\n \tprotected int _limit;\n \n \tpublic NodeIterator setStartNode(int node) {\n+\t    _startNode = node;\n \t    if (_isRestartable) {\n \t\t_node = _startNode = _includeSelf ? node - 1 : node;\n \t\t// no descendents if no children\n@@ -2312,9 +2303,13 @@ public void copy(final int node, TransletOutputHandler handler)\n \t\t// Copy element name - start tag\n \t\tcol = name.lastIndexOf(':');\n \t\tif (col > 0) {\n-\t\t    final String prefix = generateNamespacePrefix();\n-\t\t    handler.startElement(prefix+':'+name.substring(col+1));\n-\t\t    handler.namespace(prefix, name.substring(0,col));\n+\t\t    final String uri = name.substring(0,col);\n+\t\t    final String prefix = handler.getPrefix(uri);\n+\t\t    final String local = name.substring(col+1);\n+\t\t    if (prefix.equals(EMPTYSTRING))\n+\t\t\thandler.startElement(local);\n+\t\t    else\n+\t\t\thandler.startElement(prefix+':'+local);\n \t\t}\n \t\telse {\n \t\t    handler.startElement(name);\n@@ -2330,10 +2325,15 @@ public void copy(final int node, TransletOutputHandler handler)\n \t\t\thandler.attribute(aname,makeStringValue(attr));\n \t\t    }\n \t\t    else {\n-\t\t\tfinal String prefix = generateNamespacePrefix();\n-\t\t\thandler.namespace(prefix,aname.substring(0,col));\n-\t\t\thandler.attribute(prefix+':'+aname.substring(col+1),\n-\t\t\t\t\t  makeStringValue(attr));\n+\t\t\tfinal String uri = aname.substring(0,col);\n+\t\t\tfinal String prefix = handler.getPrefix(uri);\n+\t\t\tfinal String local = aname.substring(col+1);\n+\t\t\tfinal String value = makeStringValue(attr);\n+\t\t\tfinal String qname = prefix+':'+local;\n+\t\t\tif (prefix.equals(EMPTYSTRING))\n+\t\t\t    handler.attribute(local, value);\n+\t\t\telse\n+\t\t\t    handler.attribute(prefix+':'+local, value);\n \t\t    }\n \t\t}\n \n@@ -2403,9 +2403,13 @@ public String shallowCopy(final int node, TransletOutputHandler handler)\n \t\t// Copy element name - start tag\n \t\tint col = name.lastIndexOf(':');\n \t\tif (col > 0) {\n-\t\t    final String prefix = generateNamespacePrefix();\n-\t\t    handler.startElement(prefix+':'+name.substring(col+1));\n-\t\t    handler.namespace(prefix, name.substring(0,col));\n+\t\t    final String uri = name.substring(0,col);\n+\t\t    final String prefix = handler.getPrefix(uri);\n+\t\t    final String local = name.substring(col+1);\n+\t\t    if (prefix.equals(EMPTYSTRING))\n+\t\t\thandler.startElement(local);\n+\t\t    else\n+\t\t\thandler.startElement(prefix+':'+local);\n \t\t}\n \t\telse {\n \t\t    handler.startElement(name);",
                "deletions": 20
            },
            {
                "sha": "513e34f26c1375cea892249590fcc54069ddaf0c",
                "filename": "src/org/apache/xalan/xsltc/dom/DupFilterIterator.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/DupFilterIterator.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/DupFilterIterator.java",
                "status": "modified",
                "changes": 79,
                "additions": 65,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/dom/DupFilterIterator.java?ref=af1db24530d01b45377710411da35e8afa95b94f",
                "patch": "@@ -68,43 +68,80 @@\n public final class DupFilterIterator extends NodeIteratorBase {\n \n     private final static int INIT_DATA_SIZE = 16;\n-    private final NodeIterator _source;\n-    private int[] _data = null;\n-    private int _last = 0;\n+\n+    private final NodeIterator _source; // the source iterator\n+    private int[] _data = null;         // cached nodes from the source\n+    private int _last = 0;              // the number of nodes in this iterator\n     private int _current = 0;\n-    private int _start = -1;\n \n+    // NOTE: NodeIteratorBase has a _startNode global variable\n+    //private int _start = -1;\n+\n+    /**\n+     * Creates a new duplicate filter iterator based on an existing iterator.\n+     * This iterator should be used with union expressions and other complex\n+     * iterator combinations (like 'get me the parents of all child node in\n+     * the dom' sort of thing). The iterator is also used to cache node-sets\n+     * returned by id() and key() iterators.\n+     * @param source The iterator this iterator will get its nodes from\n+     */\n     public DupFilterIterator(NodeIterator source) {\n+\t// Save a reference to the source iterator\n \t_source = source;\n+\n+\t// THIS HERE IS WHAT WE MIGHT WANT TO DO FOR ALL ABSOLUTE ITERATORS\n+\n+\t// Cache contents of id() or key() index right away. Necessary for\n+\t// union expressions containing multiple calls to the same index, and\n+\t// correct as well since start-node is irrelevant for id()/key() exrp.\n+\tif (source instanceof KeyIndex) setStartNode(DOM.ROOTNODE);\n     }\n \n+    /**\n+     * Returns the next node in this iterator - excludes duplicates.\n+     * @return The next node in this iterator\n+     */\n     public int next() {\n \treturn _current < _last ? _data[_current++] : END;\n     }\n-\t\n+\n+    /**\n+     * Set the start node for this iterator\n+     * @param node The start node\n+     * @return A reference to this node iterator\n+     */\n     public NodeIterator setStartNode(int node) {\n-\tif ((_data == null) || (node != _start)) {\n-\t    _start = node;\n-\t    _source.setStartNode(node);\n-\t    _data = new int[INIT_DATA_SIZE];\n+\t// If the _data array is populated, and the current start node is\n+\t// equal to the new start node, we know we already have what we need.\n+\tif ((_data == null) || (node != _startNode)) {\n+\n+\t    _startNode = node;\n \t    _last = 0;\n-\t    // gather all nodes from the source iterator, eliminate dups\n+\t    _source.setStartNode(node);\n+\t\t\n+\t    if ((_data == null) || (_data.length != INIT_DATA_SIZE))\n+\t\t_data = new int[INIT_DATA_SIZE];\n+\n+\t    // Gather all nodes from the source iterator, eliminate dups\n \t    while ((node = _source.next()) != END) {\n \t\tif (_last == _data.length) {\n \t\t    int[] newArray = new int[_data.length * 2];\n \t\t    System.arraycopy(_data, 0, newArray, 0, _last);\n \t\t    _data = newArray;\n \t\t}\n-\t\tif (!isDup(node)) {\n-\t\t    _data[_last++] = node;\n-\t\t}\n+\t\tif (!isDup(node)) _data[_last++] = node;\n \t    }\n \t}\n \n \t_current = 0;  // set to beginning \n \treturn this;\n     }\n \n+    /**\n+     * Check if a node is already in the _data array. The nodes should be in\n+     * document order or reverse document order, so we may be able to use\n+     * binary search here.\n+     */\n     private boolean isDup(int node) {\n \tboolean retval = false;\n \tint size = _data.length;\n@@ -115,20 +152,34 @@ private boolean isDup(int node) {\n \t}\n \treturn retval;\n     }\n-\t\n+\n+    /**\n+     * Returns the current position of the iterator. The position is within the\n+     * node set covered by this iterator, not within the DOM.\n+     */\n     public int getPosition() {\n \treturn (_last - _current);\n     }\n \n+    /**\n+     * Returns the position of the last node in this iterator. The integer\n+     * returned is equivalent to the number of nodes in this iterator.\n+     */\n     public int getLast() {\n \treturn _last;\n     }\n \n+    /**\n+     * Saves the position of this iterator - see gotoMark()\n+     */\n     public void setMark() {\n \t_source.setMark();\n \t_markedNode = _current;\n     }\n \n+    /**\n+     * Restores the position of this iterator - see setMark()\n+     */\n     public void gotoMark() {\n \t_source.gotoMark();\n \t_current = _markedNode;",
                "deletions": 14
            },
            {
                "sha": "4d2be9a119d6d95546c77a451751fb7334c19caf",
                "filename": "src/org/apache/xalan/xsltc/dom/StepIterator.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/StepIterator.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/StepIterator.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/dom/StepIterator.java?ref=af1db24530d01b45377710411da35e8afa95b94f",
                "patch": "@@ -70,7 +70,7 @@\n public final class StepIterator extends NodeIteratorBase {\n     private NodeIterator _source;\n     private NodeIterator _iterator;\n-\t\n+\n     public StepIterator(NodeIterator source, NodeIterator iterator) {\n \t_source = source;\n \t_iterator = iterator;\n@@ -105,8 +105,10 @@ public NodeIterator setStartNode(int node) {\n     }\n \n     public NodeIterator reset() {\n+\t_source.setStartNode(_startNode);\n \t_source.reset();\n-\t_iterator.setStartNode(_source.next());\n+\tint node = _source.next();\n+\t_iterator.setStartNode(node);\n \treturn resetPosition();\n     }\n     ",
                "deletions": 2
            },
            {
                "sha": "78f65e65d28b64f5b4664b2f731d3a5748a54d98",
                "filename": "src/org/apache/xalan/xsltc/dom/UnionIterator.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/UnionIterator.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/af1db24530d01b45377710411da35e8afa95b94f/src/org/apache/xalan/xsltc/dom/UnionIterator.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/dom/UnionIterator.java?ref=af1db24530d01b45377710411da35e8afa95b94f",
                "patch": "@@ -88,7 +88,8 @@ public LookAheadIterator(NodeIterator iterator) {\n \t}\n \t\t\n \tpublic int step() {\n-\t    return node = iterator.next();\n+\t    node = iterator.next();\n+\t    return node;\n \t}\n \n \tpublic void setMark() {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Address http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2972,\nwhere it was throwing a NPE instead of reporting that the variable\nwas being accessed before it was bound (i.e. the variable was being\naccessed inside an RTF for that same variable).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335332 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/b913c9cb5e7c410fc0e0caef1a027ac41363ec6b",
        "parent": "https://github.com/apache/xalan-j/commit/dc91608b41dc91c66938eea0103bcb2089e92743",
        "bug_id": "xalan-j_22",
        "file": [
            {
                "sha": "5211d65b2f163fa2d5995f5e8499c83a0da6e6f4",
                "filename": "src/org/apache/xpath/VariableStack.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/b913c9cb5e7c410fc0e0caef1a027ac41363ec6b/src/org/apache/xpath/VariableStack.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/b913c9cb5e7c410fc0e0caef1a027ac41363ec6b/src/org/apache/xpath/VariableStack.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/VariableStack.java?ref=b913c9cb5e7c410fc0e0caef1a027ac41363ec6b",
                "patch": "@@ -299,6 +299,9 @@ public final XObject getLocalVariable(XPathContext xctxt, int index)\n     index += _cfb;\n \n     XObject val = _sf[index];\n+    \n+    if(null == val)\n+      throw new TransformerException(\"Variable accessed before it is bound!\", xctxt.getSAXLocator());\n \n     // Lazy execution of variables.\n     if (val.getType() == XObject.CLASS_UNRESOLVEDVARIABLE)",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix problem reported by Carsten Ziegeler <cziegeler@sundn.de>.  Using ApplyXPath (or doing a transformation) with DOM input was resulting in an NPE due to declareNamespaceInContext() being called before setting m_exptype which is needed by declareNamespaceInContext().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335182 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/b38fc3e834fd1c3b9715db812fe11d37c0cdc994",
        "parent": "https://github.com/apache/xalan-j/commit/6047548d5ce90f9e4d44caa4211237ea683630d6",
        "bug_id": "xalan-j_23",
        "file": [
            {
                "sha": "c53bc679c3efc5abb02396c5aff418ac335620a6",
                "filename": "src/org/apache/xml/dtm/ref/dom2dtm/DOM2DTM.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/b38fc3e834fd1c3b9715db812fe11d37c0cdc994/src/org/apache/xml/dtm/ref/dom2dtm/DOM2DTM.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/b38fc3e834fd1c3b9715db812fe11d37c0cdc994/src/org/apache/xml/dtm/ref/dom2dtm/DOM2DTM.java",
                "status": "modified",
                "changes": 55,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xml/dtm/ref/dom2dtm/DOM2DTM.java?ref=b38fc3e834fd1c3b9715db812fe11d37c0cdc994",
                "patch": "@@ -217,34 +217,6 @@ protected int addNode(Node node, int level, int parentIndex,\n     // m_level's type, or we may truncate values without warning!\n     //m_level[nodeIndex] = (byte)level;\n     m_level.addElement((byte)level); // setElementAt(level,nodeIndex)?\n-\n-    // %REVIEW% The Namespace Spec currently says that Namespaces are\n-    // processed in a non-namespace-aware manner, by matching the\n-    // QName, even though there is in fact a namespace assigned to\n-    // these nodes in the DOM. If and when that changes, we will have\n-    // to consider whether we check the namespace-for-namespaces\n-    // rather than the node name.\n-    //\n-    // %TBD% Note that the DOM does not necessarily explicitly declare\n-    // all the namespaces it uses. DOM Level 3 will introduce a\n-    // namespace-normalization operation which reconciles that, and we\n-    // can request that users invoke it or otherwise ensure that the\n-    // tree is namespace-well-formed before passing the DOM to Xalan.\n-    // But if they don't, what should we do about it? We probably\n-    // don't want to alter the source DOM (and may not be able to do\n-    // so if it's read-only). The best available answer might be to\n-    // synthesize additional DTM Namespace Nodes that don't correspond\n-    // to DOM Attr Nodes.\n-    if (Node.ATTRIBUTE_NODE == type)\n-    {\n-      String name = node.getNodeName();\n-\n-      if (name.startsWith(\"xmlns:\") || name.equals(\"xmlns\"))\n-      {\n-        type = DTM.NAMESPACE_NODE;\n-        declareNamespaceInContext(parentIndex,nodeIndex);\n-      }\n-    }\n     \n     m_firstch.setElementAt(NOTPROCESSED,nodeIndex);\n     m_nextsib.setElementAt(NOTPROCESSED,nodeIndex);\n@@ -297,6 +269,33 @@ protected int addNode(Node node, int level, int parentIndex,\n     m_exptype.setElementAt(expandedNameID,nodeIndex);\n     \n     indexNode(expandedNameID, nodeIndex);\n+    // %REVIEW% The Namespace Spec currently says that Namespaces are\n+    // processed in a non-namespace-aware manner, by matching the\n+    // QName, even though there is in fact a namespace assigned to\n+    // these nodes in the DOM. If and when that changes, we will have\n+    // to consider whether we check the namespace-for-namespaces\n+    // rather than the node name.\n+    //\n+    // %TBD% Note that the DOM does not necessarily explicitly declare\n+    // all the namespaces it uses. DOM Level 3 will introduce a\n+    // namespace-normalization operation which reconciles that, and we\n+    // can request that users invoke it or otherwise ensure that the\n+    // tree is namespace-well-formed before passing the DOM to Xalan.\n+    // But if they don't, what should we do about it? We probably\n+    // don't want to alter the source DOM (and may not be able to do\n+    // so if it's read-only). The best available answer might be to\n+    // synthesize additional DTM Namespace Nodes that don't correspond\n+    // to DOM Attr Nodes.\n+    if (Node.ATTRIBUTE_NODE == type)\n+    {\n+      String name = node.getNodeName();\n+\n+      if (name.startsWith(\"xmlns:\") || name.equals(\"xmlns\"))\n+      {\n+        type = DTM.NAMESPACE_NODE;\n+        declareNamespaceInContext(parentIndex,nodeIndex);\n+      }\n+    }\n \n     if (DTM.NULL != previousSibling)\n       m_nextsib.setElementAt(nodeIndex,previousSibling);",
                "deletions": 28
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix: if XSLTResultTarget is created with a File argument, we need\nto return the right CharacterStream - TransformerImpl calls\ngetByteStream or getCharacterStream and both are null if file\nis used ( resulting in a NPE in BaseMarkupSerializer.setOutputStream ).\n\nI also changed the fields of trax.Result to protected - it is very\nconfusing to have the same field name in XSLTResultTarget and Result (\nand it have unexpected effects ).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@333490 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/a1242c7edf347a1c4eede2e3aa9e8ff32235928c",
        "parent": "https://github.com/apache/xalan-j/commit/c3a0749f3db87f5ffe089d63bca4bfe5f6c81d3a",
        "bug_id": "xalan-j_24",
        "file": [
            {
                "sha": "adfeac46719e060eebaa24099c6dcbca0e9cb485",
                "filename": "src/org/apache/xalan/xslt/XSLTResultTarget.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/a1242c7edf347a1c4eede2e3aa9e8ff32235928c/src/org/apache/xalan/xslt/XSLTResultTarget.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/a1242c7edf347a1c4eede2e3aa9e8ff32235928c/src/org/apache/xalan/xslt/XSLTResultTarget.java",
                "status": "modified",
                "changes": 23,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xslt/XSLTResultTarget.java?ref=a1242c7edf347a1c4eede2e3aa9e8ff32235928c",
                "patch": "@@ -59,6 +59,10 @@\n import org.w3c.dom.Node;\n import java.io.OutputStream;\n import java.io.Writer;\n+import java.io.FileWriter;\n+import java.io.OutputStreamWriter;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n import org.xml.sax.DocumentHandler;\n import trax.Result;\n \n@@ -271,14 +275,27 @@ public DocumentHandler getDocumentHandler ()\n     return formatterListener;\n   }\n \n+  public Writer getCharacterStream() {\n+    if( characterStream != null ) return characterStream;\n+    if( fileName != null ) {\n+      try {\n+\tif( encoding==null ) {\n+\t  return new FileWriter( fileName );\n+\t} else {\n+\t  return new OutputStreamWriter( new FileOutputStream( fileName ), encoding);\n+\t}\n+      } catch( IOException ex ) {\n+\treturn null;\n+      }\n+    }\n+    return null;\n+  }\n+    \n   //////////////////////////////////////////////////////////////////////\n   // Internal state.\n   //////////////////////////////////////////////////////////////////////\n \n   private String fileName;\n-  private OutputStream byteStream;\n   private String encoding;\n-  private Writer characterStream;\n-  private Node node;\n   private DocumentHandler formatterListener;\n }",
                "deletions": 3
            },
            {
                "sha": "04d0ebf86771a6015f253ed1aa9ce71282eee8f7",
                "filename": "src/trax/Result.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/a1242c7edf347a1c4eede2e3aa9e8ff32235928c/src/trax/Result.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/a1242c7edf347a1c4eede2e3aa9e8ff32235928c/src/trax/Result.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/trax/Result.java?ref=a1242c7edf347a1c4eede2e3aa9e8ff32235928c",
                "patch": "@@ -183,7 +183,7 @@ public Node getNode ()\n   // Internal state.\n   //////////////////////////////////////////////////////////////////////\n \n-  private OutputStream byteStream;\n-  private Writer characterStream;\n-  private Node node;\n+  protected OutputStream byteStream;\n+  protected Writer characterStream;\n+  protected Node node;\n }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix for Jira issue XALANJ-2402.\n\nUnlike all other AST nodes, the AST nodes created for literal result elements,\nextension elements and unknown elements did not have a reference to the XSLT\nParser class.  This results in an NPE later if the processor needs to access\nthe Parser instance (or other fields through it, such as the XSLTC instance).\n\nReviewed by Christine Li (jycli () ca ! ibm ! com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@584164 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/bdcd4510e2b8fbdaee32d60d23deb26a53bd833a",
        "parent": "https://github.com/apache/xalan-j/commit/4d8d12e1772ebdf541c9227e83e165d3de69bb82",
        "bug_id": "xalan-j_25",
        "file": [
            {
                "sha": "10c3fec1f2e441f626796210bd2091d9d07e8ad8",
                "filename": "src/org/apache/xalan/xsltc/compiler/Parser.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/bdcd4510e2b8fbdaee32d60d23deb26a53bd833a/src/org/apache/xalan/xsltc/compiler/Parser.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/bdcd4510e2b8fbdaee32d60d23deb26a53bd833a/src/org/apache/xalan/xsltc/compiler/Parser.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/compiler/Parser.java?ref=bdcd4510e2b8fbdaee32d60d23deb26a53bd833a",
                "patch": "@@ -980,6 +980,7 @@ else if (uri.equals(TRANSLET_URI)) {\n                 node = new LiteralElement();\n                 node.setLineNumber(getLineNumber());\n             }\n+            node.setParser(this);\n \t}\n \tif ((node != null) && (node instanceof LiteralElement)) {\n \t    ((LiteralElement)node).setQName(qname);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix to get around problem with Crimson. Crimson does not like attribute-\nnodes to be created with 'null' or \"\" namespace URI. Added an if-test to\ninvoke setAttribute(name, value) instead of setAttributeNS(uri, name, value).\nHad to add a little test to DOMImpl$DOMBuilder.makeAttributeNode() to get\naround an internal NPE problem.\nPR:\t\tn/a\nObtained from:\tn.a\nSubmitted by:\tmorten@xml.apache.org\nReviewed by:\tmorten@xml.apache.org\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@335315 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/e1dfb22c1f4f02176e5a2f227b6b25fcfec8e61c",
        "parent": "https://github.com/apache/xalan-j/commit/df4ab5b6eedad709d8c11ad0b28bffa8b97cfcc1",
        "bug_id": "xalan-j_26",
        "file": [
            {
                "sha": "628c1341f006ab8dd20ebc9a96c5872490806793",
                "filename": "src/org/apache/xalan/xsltc/dom/DOMImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/e1dfb22c1f4f02176e5a2f227b6b25fcfec8e61c/src/org/apache/xalan/xsltc/dom/DOMImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/e1dfb22c1f4f02176e5a2f227b6b25fcfec8e61c/src/org/apache/xalan/xsltc/dom/DOMImpl.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/dom/DOMImpl.java?ref=e1dfb22c1f4f02176e5a2f227b6b25fcfec8e61c",
                "patch": "@@ -2773,7 +2773,7 @@ private int makeAttributeNode(int parent, Attributes attList, int i)\n \t    }\n \t    else {\n \t\tfinal String uri = attList.getURI(i);\n-\t\tif (!uri.equals(EMPTYSTRING)) {\n+\t\tif ((uri != null) && (!uri.equals(EMPTYSTRING))) {\n \t\t    namebuf.append(uri);\n \t\t    namebuf.append(':');\n \t\t}",
                "deletions": 1
            },
            {
                "sha": "82bcd95caf10f7c554419105574d985c2edfabc7",
                "filename": "src/org/apache/xalan/xsltc/trax/SAX2DOM.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/e1dfb22c1f4f02176e5a2f227b6b25fcfec8e61c/src/org/apache/xalan/xsltc/trax/SAX2DOM.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/e1dfb22c1f4f02176e5a2f227b6b25fcfec8e61c/src/org/apache/xalan/xsltc/trax/SAX2DOM.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xsltc/trax/SAX2DOM.java?ref=e1dfb22c1f4f02176e5a2f227b6b25fcfec8e61c",
                "patch": "@@ -121,7 +121,10 @@ public void startElement(String namespace, String localName, String qName,\n \t    String namespaceuri = attrs.getURI(i);\n \t    String value = attrs.getValue(i);\n \t    String qname = attrs.getQName(i);\n-\t    tmp.setAttributeNS(namespaceuri, qname, value);\n+\t    if ((namespaceuri == null) || (namespaceuri.equals(\"\")))\n+\t\ttmp.setAttribute(qname, value);\n+\t    else\n+\t\ttmp.setAttributeNS(namespaceuri, qname, value);\n \t}\n \t// append this new node onto current stack node\n \tNode last = (Node)_nodeStk.peek();",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Fix the fix for ErrorListener. The spec is not clear about what\nshould happen if an ErrorListener is set, and fatalError is called -\nit does mention that \"ErrorListener callbacks should be called _instead_\nof throwing exception\" ( in ErrorListener's comments ), but what happens\nwhen fatalError returns ?\n\nThe current code returns null ( since creating the object - Transformer,\netc - failed, and we can't throw exceptions ).\n\nThis fix does some extra checks for NPE, in this case. It shouldn't be\na big performance problem, constructing the transformer is a\nvery expensive operation any way.\n\nScott - please review the changes, maybe you have a better idea to deal\nwith ErrorListener.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@334357 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/cde2dfc98127d3d0a9f5d165fa8067c8efed6746",
        "parent": "https://github.com/apache/xalan-j/commit/ab3afa447adb5db8e250ded26994a45211c2db71",
        "bug_id": "xalan-j_27",
        "file": [
            {
                "sha": "3e234e33062f712603fd555ab00b658668c7b7dc",
                "filename": "src/org/apache/xalan/processor/TransformerFactoryImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/cde2dfc98127d3d0a9f5d165fa8067c8efed6746/src/org/apache/xalan/processor/TransformerFactoryImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/cde2dfc98127d3d0a9f5d165fa8067c8efed6746/src/org/apache/xalan/processor/TransformerFactoryImpl.java",
                "status": "modified",
                "changes": 14,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/processor/TransformerFactoryImpl.java?ref=cde2dfc98127d3d0a9f5d165fa8067c8efed6746",
                "patch": "@@ -483,7 +483,8 @@ public XMLFilter newXMLFilter(Source src)\n   {\n \n     Templates templates = newTemplates(src);\n-\n+    if( templates==null ) return null;\n+    \n     return newXMLFilter(templates);\n   }\n \n@@ -533,6 +534,7 @@ public TransformerHandler newTransformerHandler(Source src)\n   {\n \n     Templates templates = newTemplates(src);\n+    if( templates==null ) return null;\n     \n     return newTransformerHandler(templates);\n   }\n@@ -629,7 +631,15 @@ public Transformer newTransformer(Source source)\n           throws TransformerConfigurationException\n   {\n     try {\n-      return newTemplates(source).newTransformer();\n+      Templates tmpl=newTemplates( source );\n+      /* this can happen if an ErrorListener is present and it doesn't\n+         throw any exception in fatalError. \n+         The spec says: \"a Transformer must use this interface\n+         instead of throwing an exception\" - the newTemplates() does\n+\t that, and returns null.\n+      */\n+      if( tmpl==null ) return null;\n+      return tmpl.newTransformer();\n     } catch( TransformerConfigurationException ex ) {\n       if( m_errorListener != null ) {\n \ttry {",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Use JAXP1.1 to get  the XMLReader - there are 5 files where a new\nXMLReader is created, and now we use SAXParserFactory to get\nit.\n\nWe do check for NoSuchMethodError - that means the code will work even\nif you have an old JAXP1.0 parser ( assuming you have the old parser\nat the beginning of CLASSPATH, same for JAXP1.0 - since xalan\nincludes the latest ). Probably that will disapear when no longer needed.\n\nI tested with crimson, xerces ( latest - JAXP1.1 ), xerces ( old - JAXP1.0),\nit seems to work fine.\n\nAlso, in StylesheetHandler, add an extra check for NPE - during debug\nit happened to have an unchecked null ( and it can't hurt to check )\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@333786 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/2b194d8f46374fa9c2fa843a5269f08857af464f",
        "parent": "https://github.com/apache/xalan-j/commit/9414add53be92a712d23c25db2aabdadea3f1439",
        "bug_id": "xalan-j_28",
        "file": [
            {
                "sha": "345d0d91e2630578373a11d17f2ebcfe21035a26",
                "filename": "src/org/apache/xalan/processor/ProcessorInclude.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/processor/ProcessorInclude.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/processor/ProcessorInclude.java",
                "status": "modified",
                "changes": 16,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/processor/ProcessorInclude.java?ref=2b194d8f46374fa9c2fa843a5269f08857af464f",
                "patch": "@@ -224,6 +224,22 @@ protected void parse(\n       \n       InputSource inputSource = SAXSource.sourceToInputSource(source);\n \n+      // Use JAXP1.1 ( if possible )\n+      try {\n+\t  javax.xml.parsers.SAXParserFactory factory=\n+\t      javax.xml.parsers.SAXParserFactory.newInstance();\n+\t  factory.setNamespaceAware( true );\n+\t  javax.xml.parsers.SAXParser jaxpParser=\n+\t      factory.newSAXParser();\n+\t  reader=jaxpParser.getXMLReader();\n+\t  \n+      } catch( javax.xml.parsers.ParserConfigurationException ex ) {\n+\t  throw new org.xml.sax.SAXException( ex );\n+      } catch( javax.xml.parsers.FactoryConfigurationError ex1 ) {\n+\t  throw new org.xml.sax.SAXException( ex1.toString() );\n+      } catch( NoSuchMethodError ex2 ) {\n+      }\n+      \n       if (null == reader)\n         reader = XMLReaderFactory.createXMLReader();\n ",
                "deletions": 0
            },
            {
                "sha": "6770ecde57285a3d28cb95916b8b537581e69c23",
                "filename": "src/org/apache/xalan/processor/StylesheetHandler.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/processor/StylesheetHandler.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/processor/StylesheetHandler.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/processor/StylesheetHandler.java?ref=2b194d8f46374fa9c2fa843a5269f08857af464f",
                "patch": "@@ -396,8 +396,9 @@ XSLTElementProcessor getProcessorFor(\n     XSLTElementProcessor elemProcessor = def.getProcessorFor(uri, localName);\n \n     if (null == elemProcessor\n-        && Double.valueOf(getStylesheet().getVersion()).doubleValue()\n-           > Constants.XSLTVERSUPPORTED)\n+        && ( null==getStylesheet() \n+\t     || Double.valueOf(getStylesheet().getVersion()).doubleValue()\n+\t     > Constants.XSLTVERSUPPORTED) )\n     {\n       elemProcessor = def.getProcessorForUnknown(uri, localName);\n     }",
                "deletions": 2
            },
            {
                "sha": "5a24e4789896e6e05503d595ed3f0db2448395cd",
                "filename": "src/org/apache/xalan/processor/TransformerFactoryImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/processor/TransformerFactoryImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/processor/TransformerFactoryImpl.java",
                "status": "modified",
                "changes": 32,
                "additions": 32,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/processor/TransformerFactoryImpl.java?ref=2b194d8f46374fa9c2fa843a5269f08857af464f",
                "patch": "@@ -311,6 +311,22 @@ public Source getAssociatedStylesheet(\n       }\n       else\n       {\n+\t// Use JAXP1.1 ( if possible )\n+\ttry {\n+\t    javax.xml.parsers.SAXParserFactory factory=\n+\t\tjavax.xml.parsers.SAXParserFactory.newInstance();\n+\t    factory.setNamespaceAware( true );\n+\t    javax.xml.parsers.SAXParser jaxpParser=\n+\t\tfactory.newSAXParser();\n+\t    reader=jaxpParser.getXMLReader();\n+\t    \n+\t} catch( javax.xml.parsers.ParserConfigurationException ex ) {\n+\t    throw new org.xml.sax.SAXException( ex );\n+\t} catch( javax.xml.parsers.FactoryConfigurationError ex1 ) {\n+\t    throw new org.xml.sax.SAXException( ex1.toString() );\n+\t} catch( NoSuchMethodError ex2 ) {\n+\t}\n+\t\n         if (null == reader)\n         {\n           reader = XMLReaderFactory.createXMLReader();\n@@ -592,6 +608,22 @@ public Templates newTemplates(Source source)\n       XMLReader reader = null;\n       if (source instanceof SAXSource)\n         reader = ((SAXSource)source).getXMLReader();\n+\n+      // Use JAXP1.1 ( if possible )\n+      try {\n+\t  javax.xml.parsers.SAXParserFactory factory=\n+\t      javax.xml.parsers.SAXParserFactory.newInstance();\n+\t  factory.setNamespaceAware( true );\n+\t  javax.xml.parsers.SAXParser jaxpParser=\n+\t      factory.newSAXParser();\n+\t  reader=jaxpParser.getXMLReader();\n+\t  \n+      } catch( javax.xml.parsers.ParserConfigurationException ex ) {\n+\t  throw new org.xml.sax.SAXException( ex );\n+      } catch( javax.xml.parsers.FactoryConfigurationError ex1 ) {\n+\t  throw new org.xml.sax.SAXException( ex1.toString() );\n+      } catch( NoSuchMethodError ex2 ) {\n+      }\n       \n       if (null == reader)\n         reader = XMLReaderFactory.createXMLReader();",
                "deletions": 0
            },
            {
                "sha": "aecf2d87b9f49f316c218f04e7aea047f25b0d7b",
                "filename": "src/org/apache/xalan/transformer/TrAXFilter.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/transformer/TrAXFilter.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/transformer/TrAXFilter.java",
                "status": "modified",
                "changes": 24,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/transformer/TrAXFilter.java?ref=2b194d8f46374fa9c2fa843a5269f08857af464f",
                "patch": "@@ -82,7 +82,29 @@ public void parse (InputSource input)\n   {\n     if(null == getParent())\n     {\n-      XMLReader parent = XMLReaderFactory.createXMLReader();\n+      XMLReader reader=null;\n+\n+      // Use JAXP1.1 ( if possible )\n+      try {\n+\t  javax.xml.parsers.SAXParserFactory factory=\n+\t      javax.xml.parsers.SAXParserFactory.newInstance();\n+\t  factory.setNamespaceAware( true );\n+\t  javax.xml.parsers.SAXParser jaxpParser=\n+\t      factory.newSAXParser();\n+\t  reader=jaxpParser.getXMLReader();\n+\t  \n+      } catch( javax.xml.parsers.ParserConfigurationException ex ) {\n+\t  throw new org.xml.sax.SAXException( ex );\n+      } catch( javax.xml.parsers.FactoryConfigurationError ex1 ) {\n+\t  throw new org.xml.sax.SAXException( ex1.toString() );\n+      } catch( NoSuchMethodError ex2 ) {\n+      }\n+\n+      XMLReader parent;\n+      if( reader==null )\n+\t  parent= XMLReaderFactory.createXMLReader();\n+      else\n+\t  parent=reader;\n       try\n       {\n         parent.setFeature(\"http://xml.org/sax/features/namespace-prefixes\",",
                "deletions": 1
            },
            {
                "sha": "bd25e33f922bf80fa7e3179f5e445d4aea53e8ea",
                "filename": "src/org/apache/xalan/transformer/TransformerImpl.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/transformer/TransformerImpl.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/transformer/TransformerImpl.java",
                "status": "modified",
                "changes": 32,
                "additions": 32,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/transformer/TransformerImpl.java?ref=2b194d8f46374fa9c2fa843a5269f08857af464f",
                "patch": "@@ -473,6 +473,22 @@ public void transform(Source source)\n       if(source instanceof SAXSource)\n         reader = ((SAXSource)source).getXMLReader();\n \n+      // Use JAXP1.1 ( if possible )\n+      try {\n+\t  javax.xml.parsers.SAXParserFactory factory=\n+\t      javax.xml.parsers.SAXParserFactory.newInstance();\n+\t  factory.setNamespaceAware( true );\n+\t  javax.xml.parsers.SAXParser jaxpParser=\n+\t      factory.newSAXParser();\n+\t  reader=jaxpParser.getXMLReader();\n+\t  \n+      } catch( javax.xml.parsers.ParserConfigurationException ex ) {\n+\t  throw new org.xml.sax.SAXException( ex );\n+      } catch( javax.xml.parsers.FactoryConfigurationError ex1 ) {\n+\t  throw new org.xml.sax.SAXException( ex1.toString() );\n+      } catch( NoSuchMethodError ex2 ) {\n+      }\n+\n       if (null == reader)\n       {\n         reader = XMLReaderFactory.createXMLReader();\n@@ -889,6 +905,22 @@ public Node parseToNode(Source source) throws TransformerException\n       if(source instanceof SAXSource)\n         reader = ((SAXSource)source).getXMLReader();\n \n+      // Use JAXP1.1 ( if possible )\n+      try {\n+\t  javax.xml.parsers.SAXParserFactory factory=\n+\t      javax.xml.parsers.SAXParserFactory.newInstance();\n+\t  factory.setNamespaceAware( true );\n+\t  javax.xml.parsers.SAXParser jaxpParser=\n+\t      factory.newSAXParser();\n+\t  reader=jaxpParser.getXMLReader();\n+\t  \n+      } catch( javax.xml.parsers.ParserConfigurationException ex ) {\n+\t  throw new org.xml.sax.SAXException( ex );\n+      } catch( javax.xml.parsers.FactoryConfigurationError ex1 ) {\n+\t  throw new org.xml.sax.SAXException( ex1.toString() );\n+      } catch( NoSuchMethodError ex2 ) {\n+      }\n+\n       if (null == reader)\n       {\n         reader = XMLReaderFactory.createXMLReader();",
                "deletions": 0
            },
            {
                "sha": "35828a3cc7f70c900457254a0e535b03f7e30cec",
                "filename": "src/org/apache/xalan/xslt/Process.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/xslt/Process.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/2b194d8f46374fa9c2fa843a5269f08857af464f/src/org/apache/xalan/xslt/Process.java",
                "status": "modified",
                "changes": 11,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/xslt/Process.java?ref=2b194d8f46374fa9c2fa843a5269f08857af464f",
                "patch": "@@ -104,17 +104,6 @@\n import javax.xml.transform.OutputKeys;\n import javax.xml.transform.TransformerException;\n \n-// Needed SAX classes\n-import org.xml.sax.InputSource;\n-import org.xml.sax.XMLReader;\n-import org.xml.sax.helpers.ParserAdapter;\n-import org.xml.sax.helpers.XMLReaderFactory;\n-import org.xml.sax.ContentHandler;\n-\n-// Needed DOM classes\n-import org.w3c.dom.Node;\n-import org.w3c.dom.Document;\n-\n // Needed Serializer classes\n import org.apache.xalan.serialize.OutputFormat;\n import org.apache.xalan.serialize.Serializer;",
                "deletions": 11
            }
        ]
    },
    {
        "repo": "xalan-j",
        "message": "Patch submitted by Henry_Zongaro@us.ibm.com:\n\nTo summarize what I did, the Function class and its subclasses have two\nmethods that check the number of arguments:  setArg and\ncheckNumberArgs.  The former checks whether too many arguments are\nspecified, and the latter checks for too few (or too many, redundantly).\n\nIn the case where there are optional arguments (as in substring), the class\nfor the function (FuncSubstring, in this case) derives from a class that has a\nfixed number of arguments (Func3Arguments, in this case).  If too few\narguments are specified, the FuncSubstring.checkNumberArgs method\nreports that the function only allows 2 or 3 arguments; if too many arguments\nare specified, the Function3Arguments.setArg method reports that the\nfunction only allows 3 arguments.\n\nTo fix the problem, I added reportWrongNumberArgs() methods to the\nFunction class and to its subclasses, as appropriate, and I added code to\ncall that from checkNumberArgs and setArg - that way, the correct number\nof arguments is always reported in the error messages.\n\nAlternatively, I could have changed the setArg method in all the classes that\nhave optional arguments to report correctly the number of arguments, but I\ndidn't like the idea of having it redundantly perform the same check that the\nsetArg method of its base class was going to perform just to get a better\nmessage out.  A third possibility would be to have setArg call the\ncheckNumberArgs method when it detects too many arguments are\nspecified; that would guarantee that setArg would report the same message,\nand avoid introducing a new method, as long as checkNumberArgs always\nchecks for both too few and for too many arguments.  A fourth possibility\nwould be to report two different errors:  the minimum number of arguments\nrequired in checkNumberArgs and the maximum permitted in setArg.\n\nI also noticed that the message produced for FuncSubstring when too few\narguments are specified actually indicates that 0 or 1 arguments are required,\n so I fixed the XPATHErrorResources.properties file.\n\nI don't see the NPE that Dave Marston mentions in Bugzilla, so I assume\nthat's been fixed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xalan/java/trunk@336457 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/xalan-j/commit/08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
        "parent": "https://github.com/apache/xalan-j/commit/38e381e0ed40cb321cc898a055704382c3fcff23",
        "bug_id": "xalan-j_29",
        "file": [
            {
                "sha": "10b79e412e8f4f389f46af1915e7666d6bc7b012",
                "filename": "src/org/apache/xalan/templates/FuncDocument.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xalan/templates/FuncDocument.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xalan/templates/FuncDocument.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/templates/FuncDocument.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -480,6 +480,16 @@ public void warn(XPathContext xctxt, int msg, Object args[])\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if ((argNum < 1) || (argNum > 2))\n+      reportWrongNumberArgs();\n+  }\n+  \n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createMessage(XSLTErrorResources.ER_ONE_OR_TWO, null)); //\"1 or 2\");\n   }\n   ",
                "deletions": 0
            },
            {
                "sha": "6b33a4e93c212b75f91350c1262fe22ef762120c",
                "filename": "src/org/apache/xalan/templates/FuncFormatNumb.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xalan/templates/FuncFormatNumb.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xalan/templates/FuncFormatNumb.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xalan/templates/FuncFormatNumb.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -215,6 +215,16 @@ public void warn(XPathContext xctxt, int msg, Object args[])\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if ((argNum > 3) || (argNum < 2))\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createMessage(XSLTErrorResources.ER_TWO_OR_THREE, null)); //\"2 or 3\");\n   }\n }",
                "deletions": 0
            },
            {
                "sha": "8ceffc995aa82a5ee1198dd1a353c5845ea18ccf",
                "filename": "src/org/apache/xpath/functions/FuncConcat.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FuncConcat.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FuncConcat.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/FuncConcat.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -113,6 +113,16 @@ public XObject execute(XPathContext xctxt) throws javax.xml.transform.Transforme\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if (argNum < 2)\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"gtone\", null));\n   }\n }",
                "deletions": 0
            },
            {
                "sha": "1d9aba903b75911cbf9eea9bda3a4dd4124c5f27",
                "filename": "src/org/apache/xpath/functions/FuncExtFunction.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FuncExtFunction.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FuncExtFunction.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/FuncExtFunction.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -72,6 +72,8 @@\n \n import org.apache.xml.dtm.*;\n import org.apache.xpath.axes.*;\n+import org.apache.xpath.res.XPATHErrorResources;\n+import org.apache.xalan.res.XSLMessages;\n \n /**\n  * <meta name=\"usage\" content=\"advanced\"/>\n@@ -231,4 +233,19 @@ public void setArg(Expression arg, int argNum)\n    * @throws WrongNumberArgsException\n    */\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException{}\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.  This class supports an arbitrary\n+   * number of arguments, so this method must never be called.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n+    String fMsg = XSLMessages.createXPATHMessage(\n+        XPATHErrorResources.ER_INCORRECT_PROGRAMMER_ASSERTION,\n+        new Object[]{ \"Programmer's assertion:  the method FunctionMultiArgs.reportWrongNumberArgs() should never be called.\" });\n+\n+    throw new RuntimeException(fMsg);\n+  }\n }",
                "deletions": 0
            },
            {
                "sha": "592036e39865a0af55ac69400319b32888ee889e",
                "filename": "src/org/apache/xpath/functions/FuncSubstring.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FuncSubstring.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FuncSubstring.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/FuncSubstring.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -149,6 +149,16 @@ else if (end > lenOfS1)\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if (argNum < 2)\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(XPATHErrorResources.ER_TWO_OR_THREE, null)); //\"2 or 3\");\n   }\n }",
                "deletions": 0
            },
            {
                "sha": "b2e22e47f8ad308995f381006a4237859b707095",
                "filename": "src/org/apache/xpath/functions/Function.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/Function.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/Function.java",
                "status": "modified",
                "changes": 14,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/Function.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -93,7 +93,8 @@\n   public void setArg(Expression arg, int argNum)\n           throws WrongNumberArgsException\n   {\n-    throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"zero\", null));\n+\t\t\t// throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"zero\", null));\n+      reportWrongNumberArgs();\n   }\n \n   /**\n@@ -109,6 +110,17 @@ public void setArg(Expression arg, int argNum)\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if (argNum != 0)\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.  This method is meant to be overloaded\n+   * by derived classes so that the message will be as specific as possible.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"zero\", null));\n   }\n ",
                "deletions": 1
            },
            {
                "sha": "c99a102935c5eae737317fe42cd54db2bc5b16d2",
                "filename": "src/org/apache/xpath/functions/Function2Args.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/Function2Args.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/Function2Args.java",
                "status": "modified",
                "changes": 12,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/Function2Args.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -125,7 +125,7 @@ else if (1 == argNum)\n       arg.exprSetParent(this);\n     }\n     else\n-      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"two\", null));\n+\t\t  reportWrongNumberArgs();\n   }\n \n   /**\n@@ -139,6 +139,16 @@ else if (1 == argNum)\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if (argNum != 2)\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"two\", null));\n   }\n   ",
                "deletions": 1
            },
            {
                "sha": "ccb63b357862e250b2df5fa59c7f86000d5f5cee",
                "filename": "src/org/apache/xpath/functions/Function3Args.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/Function3Args.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/Function3Args.java",
                "status": "modified",
                "changes": 12,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/Function3Args.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -123,7 +123,7 @@ else if (2 == argNum)\n       arg.exprSetParent(this);\n     }\n     else\n-      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"three\", null));\n+\t\t  reportWrongNumberArgs();\n   }\n \n   /**\n@@ -137,6 +137,16 @@ else if (2 == argNum)\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if (argNum != 3)\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"three\", null));\n   }\n   ",
                "deletions": 1
            },
            {
                "sha": "32dab0f87c001573ee8ba46673eef83958b3ff2b",
                "filename": "src/org/apache/xpath/functions/FunctionDef1Arg.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FunctionDef1Arg.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FunctionDef1Arg.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/FunctionDef1Arg.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -182,6 +182,16 @@ protected double getArg0AsNumber(XPathContext xctxt)\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if (argNum > 1)\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(XPATHErrorResources.ER_ZERO_OR_ONE, null)); //\"0 or 1\");\n   }\n ",
                "deletions": 0
            },
            {
                "sha": "46b299a2864b00d3464b381f93f1b4508958da6a",
                "filename": "src/org/apache/xpath/functions/FunctionMultiArgs.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FunctionMultiArgs.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FunctionMultiArgs.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/FunctionMultiArgs.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -62,6 +62,8 @@\n import org.apache.xpath.ExpressionOwner;\n import org.apache.xpath.XPathVisitor;\n import org.apache.xpath.functions.Function3Args.Arg2Owner;\n+import org.apache.xpath.res.XPATHErrorResources;\n+import org.apache.xalan.res.XSLMessages;\n \n /**\n  * <meta name=\"usage\" content=\"advanced\"/>\n@@ -145,6 +147,21 @@ public void fixupVariables(java.util.Vector vars, int globalsSize)\n    */\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException{}\n \n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.  This class supports an arbitrary\n+   * number of arguments, so this method must never be called.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n+    String fMsg = XSLMessages.createXPATHMessage(\n+        XPATHErrorResources.ER_INCORRECT_PROGRAMMER_ASSERTION,\n+        new Object[]{ \"Programmer's assertion:  the method FunctionMultiArgs.reportWrongNumberArgs() should never be called.\" });\n+\n+    throw new RuntimeException(fMsg);\n+  }\n+\n   /**\n    * Tell if this expression or it's subexpressions can traverse outside\n    * the current subtree.",
                "deletions": 0
            },
            {
                "sha": "92c55327f8cc33ebc745b46fbc7a339d5c436429",
                "filename": "src/org/apache/xpath/functions/FunctionOneArg.java",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FunctionOneArg.java",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/functions/FunctionOneArg.java",
                "status": "modified",
                "changes": 12,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/functions/FunctionOneArg.java?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -104,7 +104,7 @@ public void setArg(Expression arg, int argNum)\n       arg.exprSetParent(this);\n     }\n     else\n-      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"one\", null));\n+      reportWrongNumberArgs();\n   }\n \n   /**\n@@ -118,6 +118,16 @@ public void setArg(Expression arg, int argNum)\n   public void checkNumberArgs(int argNum) throws WrongNumberArgsException\n   {\n     if (argNum != 1)\n+      reportWrongNumberArgs();\n+  }\n+\n+  /**\n+   * Constructs and throws a WrongNumberArgException with the appropriate\n+   * message for this function object.\n+   *\n+   * @throws WrongNumberArgsException\n+   */\n+  protected void reportWrongNumberArgs() throws WrongNumberArgsException {\n       throw new WrongNumberArgsException(XSLMessages.createXPATHMessage(\"one\", null));\n   }\n   ",
                "deletions": 1
            },
            {
                "sha": "b749e7ad210020bbaa1cadbe5d4058cf5ea6f7f5",
                "filename": "src/org/apache/xpath/res/XPATHErrorResources.properties",
                "blob_url": "https://github.com/apache/xalan-j/blob/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/res/XPATHErrorResources.properties",
                "raw_url": "https://github.com/apache/xalan-j/raw/08c1848cf4da06ad8b2825917f0e42ba4a32e60d/src/org/apache/xpath/res/XPATHErrorResources.properties",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/xalan-j/contents/src/org/apache/xpath/res/XPATHErrorResources.properties?ref=08c1848cf4da06ad8b2825917f0e42ba4a32e60d",
                "patch": "@@ -173,7 +173,7 @@ ER0082=XStringForChars can not take a string for an argument\n # ER_FASTSTRINGBUFFER_CANNOT_BE_NULL\n ER0083=The FastStringBuffer argument can not be null\n # ER_TWO_OR_THREE\n-ER0084=0 or 1\n+ER0084=2 or 3\n # ER_VARIABLE_ACCESSED_BEFORE_BIND\n ER0085=Variable accessed before it is bound!\n ",
                "deletions": 1
            }
        ]
    }
]