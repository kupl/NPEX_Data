[
    {
        "repo": "olingo-odata4",
        "commit": "https://github.com/apache/olingo-odata4/commit/17e4a3aeffb892667e670b71f303ea2b5522bd06",
        "bug_id": "olingo-odata4_17e4a3a",
        "message": "[OLINGO-784] Prevent NPE in combination with typeinfo objects",
        "parent": "https://github.com/apache/olingo-odata4/commit/46cad03fed25184cb72fcb72b92446e6f0cd219a",
        "patched_files": [
            "CsdlParameter.java",
            "EdmReturnTypeImpl.java",
            "CsdlReturnType.java",
            "EdmPropertyImpl.java",
            "ContainerProvider.java",
            "EdmSchemaImpl.java",
            "EdmTermImpl.java",
            "AbstractEdm.java",
            "EdmParameterImpl.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java",
                "deletions": 8,
                "sha": "089acc3a1d4917acab7b9697d44ea0f9719bc2b4",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java",
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -33,7 +33,7 @@\n \n   private String name;\n \n-  private FullQualifiedName type;\n+  private String type;\n \n   private boolean isCollection;\n \n@@ -74,7 +74,7 @@ public CsdlParameter setName(final String name) {\n    * @return the type\n    */\n   public String getType() {\n-    return type.getFullQualifiedNameAsString();\n+    return type;\n   }\n \n   /**\n@@ -83,7 +83,7 @@ public String getType() {\n    * @return the type fQN\n    */\n   public FullQualifiedName getTypeFQN() {\n-    return type;\n+    return new FullQualifiedName(type);\n   }\n \n   /**\n@@ -93,7 +93,7 @@ public FullQualifiedName getTypeFQN() {\n    * @return the type\n    */\n   public CsdlParameter setType(final String type) {\n-    this.type = new FullQualifiedName(type);\n+    this.type = type;\n     return this;\n   }\n \n@@ -104,7 +104,7 @@ public CsdlParameter setType(final String type) {\n    * @return the type\n    */\n   public CsdlParameter setType(final FullQualifiedName type) {\n-    this.type = type;\n+    this.type = type.getFullQualifiedNameAsString();\n     return this;\n   }\n \n@@ -232,7 +232,7 @@ public CsdlParameter setSrid(final SRID srid) {\n   public List<CsdlAnnotation> getAnnotations() {\n     return annotations;\n   }\n-  \n+\n   /**\n    * Sets a list of annotations\n    * @param annotations list of annotations",
                "changes": 16
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java",
                "deletions": 5,
                "sha": "7d1b02d05481417f333997b01a23e3357a1a6a87",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java",
                "patch": "@@ -28,7 +28,7 @@\n \n   private static final long serialVersionUID = 4816954124986010965L;\n \n-  private FullQualifiedName type;\n+  private String type;\n \n   private boolean isCollection;\n \n@@ -49,7 +49,7 @@\n    * @return the type\n    */\n   public String getType() {\n-    return type.getFullQualifiedNameAsString();\n+    return type;\n   }\n \n   /**\n@@ -58,7 +58,7 @@ public String getType() {\n    * @return the type fQN\n    */\n   public FullQualifiedName getTypeFQN() {\n-    return type;\n+    return new FullQualifiedName(type);\n   }\n \n   /**\n@@ -68,7 +68,7 @@ public FullQualifiedName getTypeFQN() {\n    * @return the type\n    */\n   public CsdlReturnType setType(final String type) {\n-    this.type = new FullQualifiedName(type);\n+    this.type = type;\n     return this;\n   }\n \n@@ -79,7 +79,7 @@ public CsdlReturnType setType(final String type) {\n    * @return the type\n    */\n   public CsdlReturnType setType(final FullQualifiedName type) {\n-    this.type = type;\n+    this.type = type.getFullQualifiedNameAsString();\n     return this;\n   }\n ",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 11,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java",
                "deletions": 11,
                "sha": "b31b8277a333fcb025d1de28c67a6b7b9311a968",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java",
                "patch": "@@ -40,7 +40,6 @@\n public abstract class AbstractEdm implements Edm {\n \n   protected Map<String, EdmSchema> schemas;\n-\n   protected List<EdmSchema> schemaList;\n \n   private final Map<FullQualifiedName, EdmEntityContainer> entityContainers =\n@@ -79,8 +78,7 @@\n   private final Map<TargetQualifierMapKey, EdmAnnotations> annotationGroups =\n       Collections.synchronizedMap(new HashMap<TargetQualifierMapKey, EdmAnnotations>());\n \n-  private Map<String, String> aliasToNamespaceInfo = Collections.synchronizedMap(new HashMap<String, String>());\n-  private boolean aliasToNamespaceInfoCreated = false;\n+  private Map<String, String> aliasToNamespaceInfo = null;\n \n   @Override\n   public List<EdmSchema> getSchemas() {\n@@ -98,25 +96,27 @@ public EdmSchema getSchema(final String namespace) {\n \n     EdmSchema schema = schemas.get(namespace);\n     if (schema == null) {\n-      if (!aliasToNamespaceInfoCreated) {\n-        aliasToNamespaceInfo = createAliasToNamespaceInfo();\n-      }\n       schema = schemas.get(aliasToNamespaceInfo.get(namespace));\n     }\n-\n     return schema;\n   }\n \n   private void initSchemas() {\n-    schemas = createSchemas();\n-    aliasToNamespaceInfoCreated = true;\n+    loadAliasToNamespaceInfo();\n+    Map<String, EdmSchema> localSchemas = createSchemas();\n+    schemas = Collections.synchronizedMap(localSchemas);\n \n     if (schemas == null) {\n       schemas = Collections.emptyMap();\n     }\n     schemaList = Collections.unmodifiableList(new ArrayList<EdmSchema>(schemas.values()));\n   }\n \n+  private void loadAliasToNamespaceInfo() {\n+    Map<String, String> localAliasToNamespaceInfo = createAliasToNamespaceInfo();\n+    aliasToNamespaceInfo = Collections.synchronizedMap(localAliasToNamespaceInfo);\n+  }\n+\n   @Override\n   public EdmEntityContainer getEntityContainer() {\n     return getEntityContainer(null);\n@@ -311,8 +311,8 @@ public EdmAnnotations getAnnotationGroup(final FullQualifiedName targetName, Str\n   }\n \n   private FullQualifiedName resolvePossibleAlias(final FullQualifiedName namespaceOrAliasFQN) {\n-    if (!aliasToNamespaceInfoCreated) {\n-      aliasToNamespaceInfo = createAliasToNamespaceInfo();\n+    if (aliasToNamespaceInfo == null) {\n+      loadAliasToNamespaceInfo();\n     }\n     FullQualifiedName finalFQN = null;\n     if (namespaceOrAliasFQN != null) {",
                "changes": 22
            },
            {
                "status": "modified",
                "additions": 7,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java",
                "deletions": 6,
                "sha": "69af130be1712b49c3a8b8eb6e12e1a0a8d16f2d",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java",
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -30,13 +30,11 @@\n public class EdmParameterImpl extends AbstractEdmNamed implements EdmParameter, EdmElement {\n \n   private final CsdlParameter parameter;\n-  private final EdmTypeInfo typeInfo;\n   private EdmType typeImpl;\n \n   public EdmParameterImpl(final Edm edm, final CsdlParameter parameter) {\n     super(edm, parameter.getName(), parameter);\n     this.parameter = parameter;\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(parameter.getType()).build();\n   }\n \n   @Override\n@@ -77,9 +75,12 @@ public SRID getSrid() {\n   @Override\n   public EdmType getType() {\n     if (typeImpl == null) {\n-      typeImpl = typeInfo.getType();\n+      if (parameter.getType() == null) {\n+        throw new EdmException(\"Parameter \" + parameter.getName() + \" must hava a full qualified type.\");\n+      }\n+      typeImpl = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(parameter.getType()).build().getType();\n       if (typeImpl == null) {\n-        throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n+        throw new EdmException(\"Cannot find type with name: \" + parameter.getTypeFQN());\n       }\n     }\n ",
                "changes": 13
            },
            {
                "status": "modified",
                "additions": 17,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java",
                "deletions": 4,
                "sha": "5385d8a502951e0c7a7e774a56459b1b144b8c3d",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java",
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -30,19 +30,22 @@\n public class EdmPropertyImpl extends AbstractEdmNamed implements EdmProperty, EdmElement {\n \n   private final CsdlProperty property;\n-  private final EdmTypeInfo typeInfo;\n+  private EdmTypeInfo typeInfo;\n   private EdmType propertyType;\n \n   public EdmPropertyImpl(final Edm edm, final CsdlProperty property) {\n     super(edm, property.getName(), property);\n \n     this.property = property;\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(property.getType().toString()).build();\n+\n   }\n \n   @Override\n   public EdmType getType() {\n     if (propertyType == null) {\n+      if (typeInfo == null) {\n+        buildTypeInfo();\n+      }\n       propertyType = typeInfo.getType();\n       if (propertyType == null) {\n         throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n@@ -52,6 +55,13 @@ public EdmType getType() {\n     return propertyType;\n   }\n \n+  private void buildTypeInfo() {\n+    if (property.getType() == null) {\n+      throw new EdmException(\"Property \" + property.getName() + \" must hava a full qualified type.\");\n+    }\n+    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(property.getType().toString()).build();\n+  }\n+\n   @Override\n   public boolean isCollection() {\n     return property.isCollection();\n@@ -104,6 +114,9 @@ public String getDefaultValue() {\n \n   @Override\n   public boolean isPrimitive() {\n+    if (typeInfo == null) {\n+      buildTypeInfo();\n+    }\n     return typeInfo.isPrimitiveType();\n   }\n }",
                "changes": 21
            },
            {
                "status": "modified",
                "additions": 9,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java",
                "deletions": 6,
                "sha": "a3e98dac458c98b053fdc0394b7e5f0f339f7f3c",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java",
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License. You may obtain a copy of the License at\n- *\n+ * \n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -28,12 +28,12 @@\n public class EdmReturnTypeImpl implements EdmReturnType {\n \n   private final CsdlReturnType returnType;\n-  private final EdmTypeInfo typeInfo;\n+  private final Edm edm;\n   private EdmType typeImpl;\n \n   public EdmReturnTypeImpl(final Edm edm, final CsdlReturnType returnType) {\n+    this.edm = edm;\n     this.returnType = returnType;\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(returnType.getType()).build();\n   }\n \n   @Override\n@@ -69,9 +69,12 @@ public SRID getSrid() {\n   @Override\n   public EdmType getType() {\n     if (typeImpl == null) {\n-      typeImpl = typeInfo.getType();\n+      if (returnType.getType() == null) {\n+        throw new EdmException(\"Return types must hava a full qualified type.\");\n+      }\n+      typeImpl = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(returnType.getType()).build().getType();\n       if (typeImpl == null) {\n-        throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n+        throw new EdmException(\"Cannot find type with name: \" + returnType.getType());\n       }\n     }\n ",
                "changes": 15
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java",
                "deletions": 17,
                "sha": "f585bbcfb829761193ef81a34cc3b8ee17c55ff0",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java",
                "patch": "@@ -30,23 +30,19 @@\n import org.apache.olingo.commons.api.edm.TargetType;\n import org.apache.olingo.commons.api.edm.geo.SRID;\n import org.apache.olingo.commons.api.edm.provider.CsdlTerm;\n-import org.apache.olingo.commons.core.edm.primitivetype.EdmPrimitiveTypeFactory;\n \n public class EdmTermImpl extends AbstractEdmNamed implements EdmTerm {\n \n   private final CsdlTerm term;\n   private final FullQualifiedName fqn;\n-  private final EdmTypeInfo typeInfo;\n   private EdmType termType;\n   private EdmTerm baseTerm;\n   private List<TargetType> appliesTo;\n \n   public EdmTermImpl(final Edm edm, final String namespace, final CsdlTerm term) {\n     super(edm, term.getName(), term);\n-\n     this.term = term;\n     fqn = new FullQualifiedName(namespace, term.getName());\n-    typeInfo = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(term.getType()).build();\n   }\n \n   @Override\n@@ -57,22 +53,14 @@ public FullQualifiedName getFullQualifiedName() {\n   @Override\n   public EdmType getType() {\n     if (termType == null) {\n-      termType = typeInfo.isPrimitiveType()\n-          ? EdmPrimitiveTypeFactory.getInstance(typeInfo.getPrimitiveTypeKind())\n-          : typeInfo.isTypeDefinition()\n-              ? typeInfo.getTypeDefinition()\n-              : typeInfo.isEnumType()\n-                  ? typeInfo.getEnumType()\n-                  : typeInfo.isComplexType()\n-                      ? typeInfo.getComplexType()\n-                      : typeInfo.isEntityType()\n-                          ? typeInfo.getEntityType()\n-                          : null;\n+      if (term.getType() == null) {\n+        throw new EdmException(\"Terms must hava a full qualified type.\");\n+      }\n+      termType = new EdmTypeInfo.Builder().setEdm(edm).setTypeExpression(term.getType()).build().getType();\n       if (termType == null) {\n-        throw new EdmException(\"Cannot find type with name: \" + typeInfo.getFullQualifiedName());\n+        throw new EdmException(\"Cannot find type with name: \" + term.getType());\n       }\n     }\n-\n     return termType;\n   }\n ",
                "changes": 22
            },
            {
                "status": "modified",
                "additions": 27,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java",
                "deletions": 0,
                "sha": "c174bf2612bfeba7ef8f391698a5f9728dd68304",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java",
                "patch": "@@ -20,10 +20,14 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import org.apache.olingo.commons.api.edm.Edm;\n import org.apache.olingo.commons.api.edm.EdmException;\n import org.apache.olingo.commons.api.edm.EdmParameter;\n import org.apache.olingo.commons.api.edm.EdmPrimitiveType;\n@@ -42,6 +46,29 @@\n \n public class EdmParameterImplTest {\n \n+  @Test\n+  public void initialParameter() {\n+    EdmParameterImpl parameter = new EdmParameterImpl(mock(Edm.class), new CsdlParameter());\n+\n+    assertTrue(parameter.isNullable());\n+    assertFalse(parameter.isCollection());\n+    assertNull(parameter.getName());\n+    assertNull(parameter.getMapping());\n+    assertNull(parameter.getMaxLength());\n+    assertNull(parameter.getPrecision());\n+    assertNull(parameter.getScale());\n+    assertNull(parameter.getSrid());\n+    assertNotNull(parameter.getAnnotations());\n+    assertTrue(parameter.getAnnotations().isEmpty());\n+\n+    try {\n+      parameter.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Parameter null must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+\n   @Test\n   public void getTypeReturnsPrimitiveType() {\n     EdmProviderImpl edm = new EdmProviderImpl(mock(CsdlEdmProvider.class));",
                "changes": 27
            },
            {
                "status": "modified",
                "additions": 32,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java",
                "deletions": 0,
                "sha": "ef45af5b19e1996bd0c045236bbf3733616c750f",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmPropertyImplTest.java",
                "patch": "@@ -20,12 +20,14 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import org.apache.olingo.commons.api.edm.Edm;\n import org.apache.olingo.commons.api.edm.EdmException;\n import org.apache.olingo.commons.api.edm.EdmPrimitiveType;\n import org.apache.olingo.commons.api.edm.EdmPrimitiveTypeKind;\n@@ -44,6 +46,36 @@\n \n public class EdmPropertyImplTest {\n \n+  @Test\n+  public void initialProperty() {\n+    EdmProperty property = new EdmPropertyImpl(mock(Edm.class), new CsdlProperty());\n+\n+    assertTrue(property.isNullable());\n+    assertFalse(property.isCollection());\n+    assertNull(property.getName());\n+    assertNull(property.getMapping());\n+    assertNull(property.getMaxLength());\n+    assertNull(property.getPrecision());\n+    assertNull(property.getScale());\n+    assertNull(property.getSrid());\n+    assertNotNull(property.getAnnotations());\n+    assertTrue(property.getAnnotations().isEmpty());\n+\n+    try {\n+      property.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Property null must hava a full qualified type.\", e.getMessage());\n+    }\n+   \n+    try {\n+      property.isPrimitive();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Property null must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+  \n   @Test\n   public void getTypeReturnsPrimitiveType() {\n     EdmProviderImpl edm = new EdmProviderImpl(mock(CsdlEdmProvider.class));",
                "changes": 32
            },
            {
                "status": "modified",
                "additions": 20,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java",
                "deletions": 0,
                "sha": "bc7b62eb3bd9bc127bc2aa929ab9af81e93f9a99",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmReturnTypeImplTest.java",
                "patch": "@@ -22,9 +22,11 @@\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import org.apache.olingo.commons.api.edm.Edm;\n import org.apache.olingo.commons.api.edm.EdmComplexType;\n import org.apache.olingo.commons.api.edm.EdmEntityType;\n import org.apache.olingo.commons.api.edm.EdmEnumType;\n@@ -42,6 +44,24 @@\n \n public class EdmReturnTypeImplTest {\n \n+  @Test\n+  public void initialReturnType() {\n+    EdmReturnType returnType = new EdmReturnTypeImpl(mock(Edm.class), new CsdlReturnType());\n+\n+    assertTrue(returnType.isNullable());\n+    assertNull(returnType.getMaxLength());\n+    assertNull(returnType.getPrecision());\n+    assertNull(returnType.getScale());\n+    assertNull(returnType.getSrid());\n+\n+    try {\n+      returnType.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Return types must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+  \n   @Test\n   public void primitiveReturnType() {\n     CsdlReturnType providerType = new CsdlReturnType().setType(new FullQualifiedName(\"Edm\", \"String\"));",
                "changes": 20
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java",
                "deletions": 6,
                "sha": "e6502af1cb00fbc770fe08968d477fd08cc745fc",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmSchemaImplTest.java",
                "patch": "@@ -25,6 +25,7 @@\n import static org.mockito.Mockito.when;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n \n import org.apache.olingo.commons.api.edm.Edm;\n@@ -173,7 +174,7 @@ public void getFunctions() {\n     for (EdmFunction function : functions) {\n       FullQualifiedName functionName = new FullQualifiedName(NAMESPACE, function.getName());\n       assertTrue(function == edm.getUnboundFunction(functionName, null));\n-      \n+\n       functionName = new FullQualifiedName(ALIAS, function.getName());\n       assertTrue(function == edm.getUnboundFunction(functionName, null));\n     }\n@@ -193,7 +194,6 @@ public void getAnnotationGroups() {\n     }\n   }\n \n-  \n   @Test\n   public void getContainer() {\n     EdmEntityContainer container = schema.getEntityContainer();\n@@ -301,7 +301,7 @@ public CsdlEntityContainerInfo getEntityContainerInfo(final FullQualifiedName en\n \n     @Override\n     public List<CsdlAliasInfo> getAliasInfos() throws ODataException {\n-      throw new RuntimeException(\"Provider must not be called in the schema case\");\n+      return Collections.emptyList();\n     }\n \n     @Override\n@@ -373,17 +373,17 @@ public CsdlEntityContainerInfo getEntityContainerInfo(final FullQualifiedName en\n       functions.add(new CsdlFunction().setName(\"function1\"));\n       functions.add(new CsdlFunction().setName(\"function2\"));\n       providerSchema.setFunctions(functions);\n-      \n+\n       List<CsdlAnnotations> annotationGroups = new ArrayList<CsdlAnnotations>();\n       annotationGroups.add(new CsdlAnnotations().setTarget(NAMESPACE + \".entityType1\"));\n       annotationGroups.add(new CsdlAnnotations().setTarget(NAMESPACE + \".entityType2\"));\n       providerSchema.setAnnotationsGroup(annotationGroups);\n-      \n+\n       List<CsdlTerm> terms = new ArrayList<CsdlTerm>();\n       terms.add(new CsdlTerm().setName(\"term1\").setType(\"Edm.String\"));\n       terms.add(new CsdlTerm().setName(\"term2\").setType(\"Edm.String\"));\n       providerSchema.setTerms(terms);\n-      \n+\n       ArrayList<CsdlSchema> schemas = new ArrayList<CsdlSchema>();\n       schemas.add(providerSchema);\n       return schemas;",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 22,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java",
                "deletions": 0,
                "sha": "80d1fb5d28dc6a7c56879f2b1327ca47e67b4bb8",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmTermImplTest.java",
                "patch": "@@ -54,6 +54,28 @@\n   private EdmTerm initialTerm;\n   private EdmTerm derivedTerm;\n \n+  @Test\n+  public void initialTerm() {\n+    EdmTerm term = new EdmTermImpl(mock(Edm.class), \"namespace\", new CsdlTerm());\n+\n+    assertTrue(term.isNullable());\n+    assertNull(term.getName());\n+    assertNull(term.getMaxLength());\n+    assertNull(term.getPrecision());\n+    assertNull(term.getScale());\n+    assertNull(term.getSrid());\n+    assertNotNull(term.getAnnotations());\n+    assertTrue(term.getAnnotations().isEmpty());\n+\n+    assertNotNull(term.getFullQualifiedName());\n+    try {\n+      term.getType();\n+      fail(\"EdmException expected\");\n+    } catch (EdmException e) {\n+      assertEquals(\"Terms must hava a full qualified type.\", e.getMessage());\n+    }\n+  }\n+\n   @Before\n   public void setupTypes() throws Exception {\n     CsdlEdmProvider provider = mock(CsdlEdmProvider.class);",
                "changes": 22
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/olingo-odata4/raw/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java",
                "contents_url": "https://api.github.com/repos/apache/olingo-odata4/contents/lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java?ref=17e4a3aeffb892667e670b71f303ea2b5522bd06",
                "filename": "lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java",
                "deletions": 3,
                "sha": "f5fb038dee2f85c313f047d08d705f5ff452d44c",
                "blob_url": "https://github.com/apache/olingo-odata4/blob/17e4a3aeffb892667e670b71f303ea2b5522bd06/lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java",
                "patch": "@@ -190,19 +190,19 @@ public CsdlEntitySet getEntitySet(final FullQualifiedName entityContainer, final\n                 Arrays\n                     .asList(\n                         new CsdlAnnotation()\n-                            .setTerm(\"Core.Description\")\n+                            .setTerm(\"Org.OData.Core.V1.Description\")\n                             .setExpression(\n                                 new CsdlConstantExpression(CsdlConstantExpression.ConstantExpressionType.String)\n                                     .setValue(\"Contains entities with collection of each primitive type\")),\n                         new CsdlAnnotation()\n-                            .setTerm(\"Core.LongDescription\")\n+                            .setTerm(\"Org.OData.Core.V1.LongDescription\")\n                             .setQualifier(\"EnabledForEntitySet\")\n                             .setExpression(\n                                 new CsdlConstantExpression(CsdlConstantExpression.ConstantExpressionType.String)\n                                     .setValue(\"System Query Options: $filter, $count, $orderby, \"\n                                         + \"$skip, $top, $expand, $select, $format; Operations: Create, Read\")),\n                         new CsdlAnnotation()\n-                            .setTerm(\"Core.LongDescription\")\n+                            .setTerm(\"Org.OData.Core.V1.LongDescription\")\n                             .setQualifier(\"EnabledForEntity\")\n                             .setExpression(\n                                 new CsdlConstantExpression(CsdlConstantExpression.ConstantExpressionType.String)",
                "changes": 6
            }
        ],
        "unit_tests": [
            "EdmParameterImplTest.java",
            "EdmTermImplTest.java",
            "EdmSchemaImplTest.java",
            "EdmPropertyImplTest.java",
            "EdmReturnTypeImplTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "lib/commons-core/src/test/java/org/apache/olingo/server/core/edm/provider/EdmParameterImplTest.java",
        "buggy_files": [
            "lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlParameter.java",
            "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmReturnTypeImpl.java",
            "lib/commons-api/src/main/java/org/apache/olingo/commons/api/edm/provider/CsdlReturnType.java",
            "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmPropertyImpl.java",
            "lib/server-tecsvc/src/main/java/org/apache/olingo/server/tecsvc/provider/ContainerProvider.java",
            "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmSchemaImpl.java",
            "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmTermImpl.java",
            "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/AbstractEdm.java",
            "lib/commons-core/src/main/java/org/apache/olingo/commons/core/edm/EdmParameterImpl.java"
        ],
        "fixed": true
    }
]