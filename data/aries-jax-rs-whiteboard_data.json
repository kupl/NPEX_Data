[
    {
        "repo": "aries-jax-rs-whiteboard",
        "message": "[ARIES-1892] Avoid NPE",
        "commit": "https://github.com/apache/aries-jax-rs-whiteboard/commit/5300d165cc1af72c008d9e2db2c3f52dbf824e82",
        "parent": "https://github.com/apache/aries-jax-rs-whiteboard/commit/e9e646f4b12abac01da7f7120690509d3b8ad324",
        "bug_id": "aries-jax-rs-whiteboard_1",
        "file": [
            {
                "sha": "a7a34f1f5d6d623394559157ba8a9c6b44a5281e",
                "filename": "jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java",
                "blob_url": "https://github.com/apache/aries-jax-rs-whiteboard/blob/5300d165cc1af72c008d9e2db2c3f52dbf824e82/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java",
                "raw_url": "https://github.com/apache/aries-jax-rs-whiteboard/raw/5300d165cc1af72c008d9e2db2c3f52dbf824e82/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/aries-jax-rs-whiteboard/contents/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java?ref=5300d165cc1af72c008d9e2db2c3f52dbf824e82",
                "patch": "@@ -158,6 +158,10 @@ public Bus getBus() {\n         ArrayList<Class<?>> classes = new ArrayList<>();\n \n         for (ClassResourceInfo resourceInfo : classResourceInfo) {\n+            if (resourceInfo == null) {\n+                continue;\n+            }\n+\n             ResourceProvider resourceProvider =\n                 resourceInfo.getResourceProvider();\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries-jax-rs-whiteboard",
        "message": "[ARIES-1892] Avoid NPE",
        "commit": "https://github.com/apache/aries-jax-rs-whiteboard/commit/e9e646f4b12abac01da7f7120690509d3b8ad324",
        "parent": "https://github.com/apache/aries-jax-rs-whiteboard/commit/7aaeb8267c72e0d464abd7f80b86cb8b036389bc",
        "bug_id": "aries-jax-rs-whiteboard_2",
        "file": [
            {
                "sha": "0f8b14fc75c731486cbae09a06bb3af958fd85a1",
                "filename": "jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java",
                "blob_url": "https://github.com/apache/aries-jax-rs-whiteboard/blob/e9e646f4b12abac01da7f7120690509d3b8ad324/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java",
                "raw_url": "https://github.com/apache/aries-jax-rs-whiteboard/raw/e9e646f4b12abac01da7f7120690509d3b8ad324/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries-jax-rs-whiteboard/contents/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/cxf/CxfJaxrsServiceRegistrator.java?ref=e9e646f4b12abac01da7f7120690509d3b8ad324",
                "patch": "@@ -158,8 +158,12 @@ public Bus getBus() {\n         ArrayList<Class<?>> classes = new ArrayList<>();\n \n         for (ClassResourceInfo resourceInfo : classResourceInfo) {\n-            if (!ServiceReferenceResourceProvider.class.isAssignableFrom(\n-                resourceInfo.getResourceProvider().getClass())) {\n+            ResourceProvider resourceProvider =\n+                resourceInfo.getResourceProvider();\n+\n+            if (resourceProvider == null ||\n+                !ServiceReferenceResourceProvider.class.isAssignableFrom(\n+                    resourceProvider.getClass())) {\n \n                 classes.add(resourceInfo.getResourceClass());\n             }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries-jax-rs-whiteboard",
        "message": "test avoid a NPE when a method return type is void",
        "commit": "https://github.com/apache/aries-jax-rs-whiteboard/commit/50d7e9dfdc6c0224a86f347f0508a020d23f76e1",
        "parent": "https://github.com/apache/aries-jax-rs-whiteboard/commit/16f3c9f9c3f494e7fc930294866291d863f7a750",
        "bug_id": "aries-jax-rs-whiteboard_3",
        "file": [
            {
                "sha": "679dd6d1bde6fcbc2b0467e920d85dad46870927",
                "filename": "jax-rs.itests/src/main/java/test/JaxrsTest.java",
                "blob_url": "https://github.com/apache/aries-jax-rs-whiteboard/blob/50d7e9dfdc6c0224a86f347f0508a020d23f76e1/jax-rs.itests/src/main/java/test/JaxrsTest.java",
                "raw_url": "https://github.com/apache/aries-jax-rs-whiteboard/raw/50d7e9dfdc6c0224a86f347f0508a020d23f76e1/jax-rs.itests/src/main/java/test/JaxrsTest.java",
                "status": "modified",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries-jax-rs-whiteboard/contents/jax-rs.itests/src/main/java/test/JaxrsTest.java?ref=50d7e9dfdc6c0224a86f347f0508a020d23f76e1",
                "patch": "@@ -17,6 +17,7 @@\n \n package test;\n \n+import static javax.ws.rs.core.MediaType.TEXT_PLAIN_TYPE;\n import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n@@ -83,6 +84,7 @@\n import test.types.TestFilter;\n import test.types.TestHelper;\n import test.types.TestSSEApplication;\n+import test.types.TestVoidResource;\n \n import javax.ws.rs.GET;\n import javax.ws.rs.HttpMethod;\n@@ -2350,6 +2352,13 @@ public void testCxfExtension() {\n \n     }\n \n+    @Test\n+    public void testVoidResource() {\n+        registerAddon(new TestVoidResource());\n+        Response response = createDefaultTarget().path(\"returntype/void\").request(TEXT_PLAIN_TYPE).head();\n+        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n+    }\n+\n     private static Function<RuntimeDTO, FailedApplicationDTO[]>\n         FAILED_APPLICATIONS = r -> r.failedApplicationDTOs;\n ",
                "deletions": 0
            },
            {
                "sha": "9b895c5d1fc0721a38a8389137fc6a3e4a806ecf",
                "filename": "jax-rs.itests/src/main/java/test/types/TestVoidResource.java",
                "blob_url": "https://github.com/apache/aries-jax-rs-whiteboard/blob/50d7e9dfdc6c0224a86f347f0508a020d23f76e1/jax-rs.itests/src/main/java/test/types/TestVoidResource.java",
                "raw_url": "https://github.com/apache/aries-jax-rs-whiteboard/raw/50d7e9dfdc6c0224a86f347f0508a020d23f76e1/jax-rs.itests/src/main/java/test/types/TestVoidResource.java",
                "status": "added",
                "changes": 34,
                "additions": 34,
                "contents_url": "https://api.github.com/repos/apache/aries-jax-rs-whiteboard/contents/jax-rs.itests/src/main/java/test/types/TestVoidResource.java?ref=50d7e9dfdc6c0224a86f347f0508a020d23f76e1",
                "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package test.types;\n+\n+import static javax.ws.rs.core.MediaType.TEXT_PLAIN;\n+\n+import javax.ws.rs.HEAD;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+\n+@Path(\"returntype\")\n+public class TestVoidResource {\n+    @HEAD\n+    @Path(\"void\")\n+    @Produces(TEXT_PLAIN)\n+    public void touch() {\n+        // no returned value -> 204\n+    }\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries-jax-rs-whiteboard",
        "message": "Fix extensions without name cause NPE\n\nwhen requesting the DTO",
        "commit": "https://github.com/apache/aries-jax-rs-whiteboard/commit/9b7afe5ec3a7c8a4f8d52ed4167471cc441c5a62",
        "parent": "https://github.com/apache/aries-jax-rs-whiteboard/commit/b8248259c028ea63555aa50399477ee6c4264a44",
        "bug_id": "aries-jax-rs-whiteboard_4",
        "file": [
            {
                "sha": "1cdee145008c80a8cda3de91369406ac0583ada4",
                "filename": "jax-rs.itests/src/main/java/test/JaxrsTest.java",
                "blob_url": "https://github.com/apache/aries-jax-rs-whiteboard/blob/9b7afe5ec3a7c8a4f8d52ed4167471cc441c5a62/jax-rs.itests/src/main/java/test/JaxrsTest.java",
                "raw_url": "https://github.com/apache/aries-jax-rs-whiteboard/raw/9b7afe5ec3a7c8a4f8d52ed4167471cc441c5a62/jax-rs.itests/src/main/java/test/JaxrsTest.java",
                "status": "modified",
                "changes": 23,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/aries-jax-rs-whiteboard/contents/jax-rs.itests/src/main/java/test/JaxrsTest.java?ref=9b7afe5ec3a7c8a4f8d52ed4167471cc441c5a62",
                "patch": "@@ -782,6 +782,29 @@ public void testExtensionRegisterOnlySignalledInterfaces()\n         filterRegistration.unregister();\n     }\n \n+    @Test\n+    public void testExtensionWithoutAName() {\n+        Dictionary<String, Object> properties = new Hashtable<>();\n+\n+        properties.put(JAX_RS_EXTENSION, true);\n+\n+        ServiceRegistration<ContainerResponseFilter> registration =\n+            bundleContext.registerService(\n+                ContainerResponseFilter.class, new TestFilter(), properties);\n+\n+        try {\n+            RuntimeDTO runtimeDTO = _runtime.getRuntimeDTO();\n+\n+            assertEquals(\n+                (long)registration.getReference().getProperty(\"service.id\"),\n+                runtimeDTO.defaultApplication.extensionDTOs[0].serviceId);\n+        }\n+        finally {\n+            registration.unregister();\n+        }\n+\n+    }\n+\n     @Ignore\n     @Test\n     public void testFeatureExtension() {",
                "deletions": 0
            },
            {
                "sha": "b8a0e5a77038802d7a4102a8f36aa79bc95663d6",
                "filename": "jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/AriesJaxRSServiceRuntime.java",
                "blob_url": "https://github.com/apache/aries-jax-rs-whiteboard/blob/9b7afe5ec3a7c8a4f8d52ed4167471cc441c5a62/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/AriesJaxRSServiceRuntime.java",
                "raw_url": "https://github.com/apache/aries-jax-rs-whiteboard/raw/9b7afe5ec3a7c8a4f8d52ed4167471cc441c5a62/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/AriesJaxRSServiceRuntime.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries-jax-rs-whiteboard/contents/jax-rs.whiteboard/src/main/java/org/apache/aries/jax/rs/whiteboard/internal/AriesJaxRSServiceRuntime.java?ref=9b7afe5ec3a7c8a4f8d52ed4167471cc441c5a62",
                "patch": "@@ -551,8 +551,7 @@ private static FailedApplicationDTO buildFailedApplicationDTO(\n     private static ExtensionDTO populateExtensionDTO(\n         ExtensionDTO extensionDTO, CachingServiceReference<?> serviceReference) {\n \n-        extensionDTO.name = serviceReference.getProperty(JAX_RS_NAME).\n-            toString();\n+        extensionDTO.name = getApplicationName(serviceReference::getProperty);\n         extensionDTO.serviceId = (Long)serviceReference.getProperty(\n             \"service.id\");\n         extensionDTO.extensionTypes =",
                "deletions": 2
            }
        ]
    }
]