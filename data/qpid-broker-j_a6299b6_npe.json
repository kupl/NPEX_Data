[
    {
        "repo": "qpid-broker-j",
        "commit": "https://github.com/apache/qpid-broker-j/commit/a6299b644733aedc951b342697f5b17f9158a0b6",
        "bug_id": "qpid-broker-j_a6299b6",
        "message": "QPID-6686: Fix NPE thrown when accessing FileLogger#logFiles when FileLogger is in ERRORED state due to attribute value resolution errors",
        "parent": "https://github.com/apache/qpid-broker-j/commit/a776ace41aa0b5f571159888ef52f9fc2124325a",
        "patched_files": [
            "BrokerFileLoggerImpl.java",
            "VirtualHostFileLogger.java",
            "BrokerFileLogger.java",
            "VirtualHostFileLoggerImpl.java",
            "VirtualHostLogger.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/main/java/org/apache/qpid/server/logging/BrokerFileLoggerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/logging/BrokerFileLoggerImpl.java?ref=a6299b644733aedc951b342697f5b17f9158a0b6",
                "filename": "broker-core/src/main/java/org/apache/qpid/server/logging/BrokerFileLoggerImpl.java",
                "deletions": 4,
                "sha": "551d2e738c21680b02eeba3efa863a838cc40e8c",
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/main/java/org/apache/qpid/server/logging/BrokerFileLoggerImpl.java",
                "patch": "@@ -24,6 +24,7 @@\n import java.io.IOError;\n import java.io.IOException;\n import java.security.AccessControlException;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n@@ -151,7 +152,7 @@ public String getLayout()\n     @Override\n     public List<LogFileDetails> getLogFiles()\n     {\n-        return _rolloverWatcher.getLogFileDetails();\n+        return _rolloverWatcher == null ? Collections.<LogFileDetails>emptyList() :_rolloverWatcher.getLogFileDetails();\n     }\n \n     @Override\n@@ -162,7 +163,7 @@ public Content getFile(final String fileName)\n             throw new AccessControlException(\"Permission denied to access log content\");\n         }\n \n-        return _rolloverWatcher.getFileContent(fileName);\n+        return _rolloverWatcher == null ? null : _rolloverWatcher.getFileContent(fileName);\n     }\n \n     @Override\n@@ -173,7 +174,7 @@ public Content getFiles(@Param(name = \"fileName\") Set<String> fileName)\n             throw new AccessControlException(\"Permission denied to access log content\");\n         }\n \n-        return _rolloverWatcher.getFilesAsZippedContent(fileName);\n+        return _rolloverWatcher == null ? null :_rolloverWatcher.getFilesAsZippedContent(fileName);\n     }\n \n     @Override\n@@ -184,7 +185,7 @@ public Content getAllFiles()\n             throw new AccessControlException(\"Permission denied to access log content\");\n         }\n \n-        return _rolloverWatcher.getAllFilesAsZippedContent();\n+        return _rolloverWatcher == null ? null : _rolloverWatcher.getAllFilesAsZippedContent();\n     }\n \n     @Override",
                "changes": 9
            },
            {
                "status": "modified",
                "additions": 0,
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLogger.java",
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLogger.java?ref=a6299b644733aedc951b342697f5b17f9158a0b6",
                "filename": "broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLogger.java",
                "deletions": 1,
                "sha": "6bc4af36a08d0977b350f7763a862c271f18e79f",
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLogger.java",
                "patch": "@@ -21,7 +21,6 @@\n package org.apache.qpid.server.logging;\n \n \n-import java.util.Collection;\n import java.util.List;\n import java.util.Set;\n ",
                "changes": 1
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLoggerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLoggerImpl.java?ref=a6299b644733aedc951b342697f5b17f9158a0b6",
                "filename": "broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLoggerImpl.java",
                "deletions": 4,
                "sha": "cf38983f05a15bbce13ab5fa794fc47fdc913aa6",
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLoggerImpl.java",
                "patch": "@@ -22,6 +22,7 @@\n \n import java.io.File;\n import java.security.AccessControlException;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n@@ -140,7 +141,7 @@ public String getLayout()\n     @Override\n     public List<LogFileDetails> getLogFiles()\n     {\n-        return _rolloverWatcher.getLogFileDetails();\n+        return _rolloverWatcher == null ? Collections.<LogFileDetails>emptyList() : _rolloverWatcher.getLogFileDetails();\n     }\n \n     @Override\n@@ -151,7 +152,7 @@ public Content getFile(final String fileName)\n             throw new AccessControlException(\"Permission denied to access log content\");\n         }\n \n-        return _rolloverWatcher.getFileContent(fileName);\n+        return _rolloverWatcher == null ? null : _rolloverWatcher.getFileContent(fileName);\n     }\n \n     @Override\n@@ -162,7 +163,7 @@ public Content getFiles(@Param(name = \"fileName\") Set<String> fileName)\n             throw new AccessControlException(\"Permission denied to access log content\");\n         }\n \n-        return _rolloverWatcher.getFilesAsZippedContent(fileName);\n+        return _rolloverWatcher == null ? null : _rolloverWatcher.getFilesAsZippedContent(fileName);\n     }\n \n \n@@ -174,7 +175,7 @@ public Content getAllFiles()\n             throw new AccessControlException(\"Permission denied to access log content\");\n         }\n \n-        return _rolloverWatcher.getAllFilesAsZippedContent();\n+        return _rolloverWatcher == null ? null : _rolloverWatcher.getAllFilesAsZippedContent();\n     }\n \n     @Override",
                "changes": 9
            },
            {
                "status": "added",
                "additions": 120,
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/test/java/org/apache/qpid/server/logging/BrokerFileLoggerTest.java",
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/test/java/org/apache/qpid/server/logging/BrokerFileLoggerTest.java?ref=a6299b644733aedc951b342697f5b17f9158a0b6",
                "filename": "broker-core/src/test/java/org/apache/qpid/server/logging/BrokerFileLoggerTest.java",
                "deletions": 0,
                "sha": "e5b80368ca828fd912584cfe24e602591c12c23e",
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/test/java/org/apache/qpid/server/logging/BrokerFileLoggerTest.java",
                "patch": "@@ -0,0 +1,120 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+package org.apache.qpid.server.logging;\n+\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.File;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.qpid.server.configuration.updater.TaskExecutor;\n+import org.apache.qpid.server.configuration.updater.TaskExecutorImpl;\n+import org.apache.qpid.server.model.Broker;\n+import org.apache.qpid.server.model.BrokerLogger;\n+import org.apache.qpid.server.model.BrokerModel;\n+import org.apache.qpid.server.model.ConfiguredObject;\n+import org.apache.qpid.server.model.Model;\n+import org.apache.qpid.server.model.State;\n+import org.apache.qpid.server.model.SystemConfig;\n+import org.apache.qpid.server.security.SecurityManager;\n+import org.apache.qpid.test.utils.QpidTestCase;\n+import org.apache.qpid.util.FileUtils;\n+\n+public class BrokerFileLoggerTest extends QpidTestCase\n+{\n+    private TaskExecutor _taskExecutor;\n+    private File _baseFolder;\n+    private File _logFile;\n+    private Broker _broker;\n+\n+    @Override\n+    public void setUp() throws Exception\n+    {\n+        super.setUp();\n+        _taskExecutor = new TaskExecutorImpl();\n+        _taskExecutor.start();\n+\n+        Model model = BrokerModel.getInstance();\n+\n+        org.apache.qpid.server.security.SecurityManager securityManager = mock(SecurityManager.class);\n+        EventLogger eventLogger = mock(EventLogger.class);\n+\n+        SystemConfig<?> systemConfig = mock(SystemConfig.class);\n+        when(systemConfig.getModel()).thenReturn(model);\n+        when(systemConfig.getChildExecutor()).thenReturn(_taskExecutor);\n+        when(systemConfig.getEventLogger()).thenReturn(eventLogger);\n+        doReturn(SystemConfig.class).when(systemConfig).getCategoryClass();\n+\n+        _broker = mock(Broker.class);\n+        when(_broker.getSecurityManager()).thenReturn(securityManager);\n+        when(_broker.getModel()).thenReturn(model);\n+        when(_broker.getChildExecutor()).thenReturn(_taskExecutor);\n+        when(_broker.getParent(SystemConfig.class)).thenReturn(systemConfig);\n+        doReturn(Broker.class).when(_broker).getCategoryClass();\n+\n+        _baseFolder = new File(TMP_FOLDER, \"test-sub-folder\");\n+        _logFile = new File(_baseFolder, \"tmp-broker-host.log.\" + System.currentTimeMillis());\n+        if (_baseFolder.exists())\n+        {\n+            FileUtils.delete(_baseFolder, true);\n+        }\n+    }\n+\n+    @Override\n+    public void tearDown() throws Exception\n+    {\n+        try\n+        {\n+            _broker.close();\n+            _taskExecutor.stopImmediately();\n+            if (_baseFolder != null && _baseFolder.exists())\n+            {\n+                FileUtils.delete(_baseFolder, true);\n+            }\n+        }\n+        finally\n+        {\n+            super.tearDown();\n+        }\n+    }\n+\n+    public void testGetLogFilesOnResolutionErrors()\n+    {\n+        Map<String, Object> attributes = new HashMap<>();\n+        attributes.put(BrokerLogger.NAME, getTestName());\n+        attributes.put(ConfiguredObject.TYPE, BrokerFileLogger.TYPE);\n+        attributes.put(BrokerFileLogger.FILE_NAME, _logFile.getPath());\n+        attributes.put(BrokerFileLogger.MAX_FILE_SIZE, \"invalid\");\n+\n+        BrokerFileLogger logger = new BrokerFileLoggerImpl(attributes, _broker);\n+        logger.open();\n+\n+        assertEquals(\"Unexpected state\", State.ERRORED, logger.getState());\n+\n+        Collection<LogFileDetails> logFileDetails = logger.getLogFiles();\n+        assertTrue(\"File details should be empty\", logFileDetails.isEmpty());\n+    }\n+\n+}",
                "changes": 120
            },
            {
                "status": "modified",
                "additions": 17,
                "raw_url": "https://github.com/apache/qpid-broker-j/raw/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/test/java/org/apache/qpid/server/logging/VirtualHostLoggerTest.java",
                "contents_url": "https://api.github.com/repos/apache/qpid-broker-j/contents/broker-core/src/test/java/org/apache/qpid/server/logging/VirtualHostLoggerTest.java?ref=a6299b644733aedc951b342697f5b17f9158a0b6",
                "filename": "broker-core/src/test/java/org/apache/qpid/server/logging/VirtualHostLoggerTest.java",
                "deletions": 0,
                "sha": "0e3330b22fcf34528acbb8a27bdd3853c8482ace",
                "blob_url": "https://github.com/apache/qpid-broker-j/blob/a6299b644733aedc951b342697f5b17f9158a0b6/broker-core/src/test/java/org/apache/qpid/server/logging/VirtualHostLoggerTest.java",
                "patch": "@@ -203,6 +203,23 @@ public void testGetLogFiles()\n         }\n     }\n \n+    public void testGetLogFilesOnResolutionErrors()\n+    {\n+        Map<String, Object> attributes = new HashMap<>();\n+        attributes.put(VirtualHostLogger.NAME, getTestName());\n+        attributes.put(ConfiguredObject.TYPE, VirtualHostFileLogger.TYPE);\n+        attributes.put(VirtualHostFileLogger.FILE_NAME, _logFile.getPath());\n+        attributes.put(VirtualHostFileLogger.MAX_FILE_SIZE, \"invalid\");\n+\n+        VirtualHostFileLogger logger = new VirtualHostFileLoggerImpl(attributes, _virtualHost);\n+        logger.open();\n+\n+        assertEquals(\"Unexpected state\", State.ERRORED, logger.getState());\n+\n+        Collection<LogFileDetails> logFileDetails = logger.getLogFiles();\n+        assertTrue(\"File details should be empty\", logFileDetails.isEmpty());\n+    }\n+\n     private VirtualHostLogger createVirtualHostLogger()\n     {\n         return createVirtualHostLogger(Collections.<String,Object>emptyMap());",
                "changes": 17
            }
        ],
        "unit_tests": [
            "BrokerFileLoggerTest.java",
            "VirtualHostLoggerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "broker-core/src/test/java/org/apache/qpid/server/logging/BrokerFileLoggerTest.java",
        "buggy_files": [
            "broker-core/src/main/java/org/apache/qpid/server/logging/BrokerFileLoggerImpl.java",
            "broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLogger.java",
            "broker-core/src/main/java/org/apache/qpid/server/logging/BrokerFileLogger.java",
            "broker-core/src/main/java/org/apache/qpid/server/logging/VirtualHostFileLoggerImpl.java",
            "broker-core/src/main/java/org/apache/qpid/server/model/VirtualHostLogger.java"
        ],
        "fixed": true
    }
]