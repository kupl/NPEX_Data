[{"commit": "https://github.com/apache/james-mime4j/commit/d0d17ec02579e07e4ae7264f0afce507ec65d461", "parent": "https://github.com/apache/james-mime4j/commit/96700349bd451c706a7feec2250ece668e368979", "message": "MIME4J-235: Content-Type fields containing RFC 2231 formatted boundary attribute cause NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/mime4j/trunk@1556608 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "james-mime4j_1", "file": [{"additions": 2, "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java", "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java", "sha": "2f0863a7fefa6b8e66eb95adc2b225bcd14e5583", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461", "patch": "@@ -184,9 +184,8 @@ private void parseContentType(Field field) throws MimeException {\n         }\n         String b = params.get(\"boundary\");\n \n-        if (main != null\n-                && ((main.startsWith(\"multipart/\") && b != null)\n-                        || !main.startsWith(\"multipart/\"))) {\n+        boolean multipart = main != null && main.startsWith(\"multipart/\");\n+        if (multipart && b != null || !multipart) {\n             mimeType = main;\n             mediaType = type;\n             subType = subtype;", "filename": "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java"}, {"additions": 3, "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java", "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java", "sha": "08de6ebb63429f07562aa805969a30f0374ec394", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461", "patch": "@@ -362,6 +362,9 @@ public EntityStateMachine advance() throws IOException, MimeException {\n \n     private void createMimePartStream() throws MimeException, IOException {\n         String boundary = body.getBoundary();\n+        if (boundary == null) {\n+            throw new MimeException(\"Multipart body does not have a valid boundary\");\n+        }\n         try {\n             currentMimePartStream = new MimeBoundaryInputStream(inbuffer, boundary,\n                     config.isStrictParsing());", "filename": "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java"}, {"additions": 7, "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java", "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java", "sha": "5aab29298773d24a14288a8a3862d94b501aca76", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461", "patch": "@@ -134,6 +134,13 @@ public void testParameters() throws Exception {\n \n     }\n \n+    public void testMultipartNoBoundary() throws Exception {\n+        BodyDescriptorBuilder builder = new FallbackBodyDescriptorBuilder();\n+        builder.addField(new RawField(\"Content-Type\", \"multipart/yada; \"));\n+        BodyDescriptor bd = builder.build();\n+        assertEquals(\"text/plain\", bd.getMimeType());\n+    }\n+\n     public void testGetContentLength() throws Exception {\n         BodyDescriptorBuilder builder = new FallbackBodyDescriptorBuilder();\n         BodyDescriptor bd = builder.build();", "filename": "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java"}, {"additions": 7, "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java", "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java", "sha": "e3d5e7eaaad8e7fecb83dfd5771f98fb755e8de6", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461", "patch": "@@ -108,6 +108,13 @@ public BodyDescriptor build() {\n             actualSubType = contentTypeField.getSubType();\n             actualCharset = contentTypeField.getCharset();\n             actualBoundary = contentTypeField.getBoundary();\n+\n+            boolean multipart = actualMediaType != null && actualMediaType.equalsIgnoreCase(\"multipart\");\n+            if (multipart && actualBoundary == null) {\n+                actualMimeType = null;\n+                actualMediaType = null;\n+                actualSubType = null;\n+            }\n         }\n         if (actualMimeType == null) {\n             if (MimeUtil.isSameMimeType(\"multipart/digest\", parentMimeType)) {", "filename": "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java"}, {"additions": 8, "raw_url": "https://github.com/apache/james-mime4j/raw/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java", "blob_url": "https://github.com/apache/james-mime4j/blob/d0d17ec02579e07e4ae7264f0afce507ec65d461/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java", "sha": "76ffa7acdbc153e093d14c602ef8df13af3f90e3", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java?ref=d0d17ec02579e07e4ae7264f0afce507ec65d461", "patch": "@@ -176,6 +176,14 @@ public void testGetContentLength() throws Exception {\n         Assert.assertEquals(9901, bd.getContentLength());\n     }\n \n+    @Test\n+    public void testMultipartNoBoundary() throws Exception {\n+        BodyDescriptorBuilder builder = new DefaultBodyDescriptorBuilder();\n+        builder.addField(new RawField(\"Content-Type\", \"multipart/yada; \"));\n+        BodyDescriptor bd = builder.build();\n+        assertEquals(\"text/plain\", bd.getMimeType());\n+    }\n+\n     @Test\n     public void testDoDefaultToUsAsciiWhenUntyped() throws Exception {\n         BodyDescriptorBuilder builder = new DefaultBodyDescriptorBuilder();", "filename": "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java"}], "repo": "james-mime4j"}, {"commit": "https://github.com/apache/james-mime4j/commit/442ce56ca2e1a3fdfbaca6385d245bbe91912cd7", "parent": "https://github.com/apache/james-mime4j/commit/39e1f495d5b77d92a6dfd8bee12cff593a0948cb", "message": "Made DEFAULT_PARSER static final to prevent NPE in certain conditions, should fix MIME4J-139.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/mime4j/trunk@836402 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "james-mime4j_2", "file": [{"additions": 5, "raw_url": "https://github.com/apache/james-mime4j/raw/442ce56ca2e1a3fdfbaca6385d245bbe91912cd7/core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java", "blob_url": "https://github.com/apache/james-mime4j/blob/442ce56ca2e1a3fdfbaca6385d245bbe91912cd7/core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java", "sha": "c61a693ce8b1433c1fdb34057faa2e41df7e594a", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java?ref=442ce56ca2e1a3fdfbaca6385d245bbe91912cd7", "patch": "@@ -25,10 +25,10 @@\n import org.apache.james.mime4j.util.ByteSequence;\n \n public class DelegatingFieldParser implements FieldParser {\n-    \n+    private static final FieldParser DEFAULT_PARSER = UnstructuredField.PARSER;\n+\n     private Map<String, FieldParser> parsers = new HashMap<String, FieldParser>();\n-    private FieldParser defaultParser = UnstructuredField.PARSER;\n-    \n+\n     /**\n      * Sets the parser used for the field named <code>name</code>.\n      * @param name the name of the field\n@@ -40,8 +40,8 @@ public void setFieldParser(final String name, final FieldParser parser) {\n     \n     public FieldParser getParser(final String name) {\n         final FieldParser field = parsers.get(name.toLowerCase());\n-        if(field==null) {\n-            return defaultParser;\n+        if (field == null) {\n+            return DEFAULT_PARSER;\n         }\n         return field;\n     }", "filename": "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java"}], "repo": "james-mime4j"}, {"commit": "https://github.com/apache/james-mime4j/commit/939de012376e28634e1d301e581a1f72ab0b8008", "parent": "https://github.com/apache/james-mime4j/commit/d1f79405f63a72e47f4d06bf52b9e953e5049683", "message": "Fixed NPE MIME4J-28. Fix suggested by Ron Lissack in https://issues.apache.org/jira/browse/MIME4J-28.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/mime4j/trunk@577431 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "james-mime4j_3", "file": [{"additions": 10, "raw_url": "https://github.com/apache/james-mime4j/raw/939de012376e28634e1d301e581a1f72ab0b8008/src/main/java/org/apache/james/mime4j/message/Header.java", "blob_url": "https://github.com/apache/james-mime4j/blob/939de012376e28634e1d301e581a1f72ab0b8008/src/main/java/org/apache/james/mime4j/message/Header.java", "sha": "07c48f023b03a93527f88a210e5f5349f392c230", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/src/main/java/org/apache/james/mime4j/message/Header.java?ref=939de012376e28634e1d301e581a1f72ab0b8008", "patch": "@@ -125,9 +125,16 @@ public Field getField(String name) {\n      * @param name the field name (e.g. From, Subject).\r\n      * @return the list of fields.\r\n      */\r\n-    public List getFields(String name) {\r\n-        List l = (List) fieldMap.get(name.toLowerCase());\r\n-        return Collections.unmodifiableList(l);\r\n+    public List getFields(final String name) {\r\n+        final String lowerCaseName = name.toLowerCase();\r\n+        final List l = (List) fieldMap.get(lowerCaseName);\r\n+        final List results;\r\n+        if (l == null || l.isEmpty()) {\r\n+            results = Collections.EMPTY_LIST;\r\n+        } else {\r\n+            results = Collections.unmodifiableList(l);\r\n+        }\r\n+        return results;\r\n     }\r\n     \r\n     /**\r", "filename": "src/main/java/org/apache/james/mime4j/message/Header.java"}], "repo": "james-mime4j"}, {"commit": "https://github.com/apache/james-mime4j/commit/14052507d24ccd294eaeeac33bc2032408779593", "parent": "https://github.com/apache/james-mime4j/commit/9ecd1fd2deafab86eb6bb354679b9f15d2cd4c26", "message": "Fix possible NPE in MailboxList. When null was passed as parameter to constructor it was not correctly initialized. (found writing coverage unit tests).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/mime4j/trunk@533087 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "james-mime4j_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/james-mime4j/raw/14052507d24ccd294eaeeac33bc2032408779593/src/main/java/org/apache/james/mime4j/field/address/MailboxList.java", "blob_url": "https://github.com/apache/james-mime4j/blob/14052507d24ccd294eaeeac33bc2032408779593/src/main/java/org/apache/james/mime4j/field/address/MailboxList.java", "sha": "b25264da3e0c706c61949a4acc40d6e8e44eb164", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/james-mime4j/contents/src/main/java/org/apache/james/mime4j/field/address/MailboxList.java?ref=14052507d24ccd294eaeeac33bc2032408779593", "patch": "@@ -38,7 +38,7 @@ public MailboxList(ArrayList mailboxes, boolean dontCopy) {\n \t\tif (mailboxes != null)\r\n \t\t\tthis.mailboxes = (dontCopy ? mailboxes : (ArrayList) mailboxes.clone());\r\n \t\telse\r\n-\t\t\tmailboxes = new ArrayList(0);\r\n+\t\t\tthis.mailboxes = new ArrayList(0);\r\n \t}\r\n \t\r\n \t/**\r", "filename": "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java"}], "repo": "james-mime4j"}]
