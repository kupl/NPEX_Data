[
    {
        "commit": "https://github.com/apache/ant-easyant-core/commit/ddee2cb07d3c6bf0f30817023d26b8fc02f391c4",
        "repo": "ant-easyant-core",
        "parent": "https://github.com/apache/ant-easyant-core/commit/44864da021897304cb73ae1564f8208efe35ab8b",
        "message": "Fix potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/easyant/core/trunk@1531688 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant-easyant-core_1",
        "file": [
            {
                "sha": "dade8d8dfdf8b49b7c753c6e1bbf09f07cd67641",
                "filename": "src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/ddee2cb07d3c6bf0f30817023d26b8fc02f391c4/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/ddee2cb07d3c6bf0f30817023d26b8fc02f391c4/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/core/parser/DefaultEasyAntXmlModuleDescriptorParser.java?ref=ddee2cb07d3c6bf0f30817023d26b8fc02f391c4",
                "patch": "@@ -307,19 +307,19 @@ private PluginDescriptor handleCommonPluginDescriptorAttributes(Attributes attri\n                 }\n                 pluginDescriptor.setMrid(mrid);\n             } else {\n+                String module = getSettings().substitute(attributes.getValue(\"module\"));\n                 String org = attributes.getValue(\"org\") != null ? attributes.getValue(\"org\") : attributes\n                         .getValue(\"organisation\");\n                 org = getSettings().substitute(org);\n                 if (org == null) {\n                     if (pluginType == PluginType.BUILDTYPE) {\n-                        Message.debug(\"No organisation specified for buildtype \" + mrid + \" using the default one\");\n+                        Message.debug(\"No organisation specified for buildtype \" + module + \" using the default one\");\n                         org = EasyAntConstants.EASYANT_BUILDTYPES_ORGANISATION;\n                     } else {\n-                        Message.debug(\"No organisation specified for plugin \" + mrid + \" using the default one\");\n+                        Message.debug(\"No organisation specified for plugin \" + module + \" using the default one\");\n                         org = EasyAntConstants.EASYANT_PLUGIN_ORGANISATION;\n                     }\n                 }\n-                String module = getSettings().substitute(attributes.getValue(\"module\"));\n                 String revision = attributes.getValue(\"rev\") != null ? attributes.getValue(\"rev\") : attributes\n                         .getValue(\"revision\");\n                 revision = getSettings().substitute(revision);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant-easyant-core/commit/bf0ef9c687880a6c41b1d93c7ebe029da0d0b330",
        "repo": "ant-easyant-core",
        "parent": "https://github.com/apache/ant-easyant-core/commit/b1f54b4a775aaa05be8868a217f7b741b84bef5e",
        "message": "Avoid catching NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/easyant/core/trunk@1515945 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant-easyant-core_2",
        "file": [
            {
                "sha": "438106e31184b296a0b91f0962d28e96506f60c3",
                "filename": "src/main/java/org/apache/easyant/core/EasyAntEngine.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/bf0ef9c687880a6c41b1d93c7ebe029da0d0b330/src/main/java/org/apache/easyant/core/EasyAntEngine.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/bf0ef9c687880a6c41b1d93c7ebe029da0d0b330/src/main/java/org/apache/easyant/core/EasyAntEngine.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/core/EasyAntEngine.java?ref=bf0ef9c687880a6c41b1d93c7ebe029da0d0b330",
                "patch": "@@ -717,6 +717,10 @@ public static String getEasyAntVersion() {\n             try {\n                 Properties props = new Properties();\n                 in = Main.class.getResourceAsStream(\"/META-INF/version.properties\");\n+                if (in == null) {\n+                    throw new BuildException(\"Could not load the version information.\");\n+\n+                }\n                 props.load(in);\n \n                 StringBuffer msg = new StringBuffer();\n@@ -727,8 +731,6 @@ public static String getEasyAntVersion() {\n                 easyantVersion = msg.toString();\n             } catch (IOException ioe) {\n                 throw new BuildException(\"Could not load the version information:\" + ioe.getMessage());\n-            } catch (NullPointerException npe) {\n-                throw new BuildException(\"Could not load the version information.\");\n             } finally {\n                 if (in != null) {\n                     try {"
            },
            {
                "sha": "22f14db20cd995edadedfb9e5e76de20210b4df1",
                "filename": "src/main/java/org/apache/easyant/core/EasyAntMain.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/bf0ef9c687880a6c41b1d93c7ebe029da0d0b330/src/main/java/org/apache/easyant/core/EasyAntMain.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/bf0ef9c687880a6c41b1d93c7ebe029da0d0b330/src/main/java/org/apache/easyant/core/EasyAntMain.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/core/EasyAntMain.java?ref=bf0ef9c687880a6c41b1d93c7ebe029da0d0b330",
                "patch": "@@ -737,6 +737,9 @@ public static synchronized String getAntVersion() throws BuildException {\n             try {\n                 Properties props = new Properties();\n                 in = Main.class.getResourceAsStream(\"/org/apache/tools/ant/version.txt\");\n+                if (in == null) {\n+                    throw new BuildException(\"Could not load the version information.\");\n+                }\n                 props.load(in);\n \n                 StringBuffer msg = new StringBuffer();\n@@ -747,8 +750,6 @@ public static synchronized String getAntVersion() throws BuildException {\n                 antVersion = msg.toString();\n             } catch (IOException ioe) {\n                 throw new BuildException(\"Could not load the version information:\" + ioe.getMessage());\n-            } catch (NullPointerException npe) {\n-                throw new BuildException(\"Could not load the version information.\");\n             } finally {\n                 if (in != null) {\n                     try {"
            },
            {
                "sha": "c3c49c708ab2fc307eb5925499db6faf3279a996",
                "filename": "src/main/java/org/apache/easyant/tasks/CoreRevisionCheckerTask.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/bf0ef9c687880a6c41b1d93c7ebe029da0d0b330/src/main/java/org/apache/easyant/tasks/CoreRevisionCheckerTask.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/bf0ef9c687880a6c41b1d93c7ebe029da0d0b330/src/main/java/org/apache/easyant/tasks/CoreRevisionCheckerTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/tasks/CoreRevisionCheckerTask.java?ref=bf0ef9c687880a6c41b1d93c7ebe029da0d0b330",
                "patch": "@@ -95,12 +95,13 @@ public static synchronized String getEasyAntSpecVersion() throws BuildException\n             try {\n                 Properties props = new Properties();\n                 in = CoreRevisionCheckerTask.class.getResourceAsStream(\"/META-INF/version.properties\");\n+                if (in == null) {\n+                    throw new BuildException(\"Could not load the version information.\");\n+                }\n                 props.load(in);\n                 easyantSpecVersion = props.getProperty(\"SPEC-VERSION\");\n             } catch (IOException ioe) {\n                 throw new BuildException(\"Could not load the version information:\" + ioe.getMessage());\n-            } catch (NullPointerException npe) {\n-                throw new BuildException(\"Could not load the version information.\");\n             } finally {\n                 if (in != null) {\n                     try {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant-easyant-core/commit/a3d7199e62783dede2289be9b28d1505dd679660",
        "repo": "ant-easyant-core",
        "parent": "https://github.com/apache/ant-easyant-core/commit/92dbbfb6e19523b385fed354b05347d7008a345b",
        "message": "Fix NPE when importing a plugin with missing artifacts\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/easyant/core/trunk@1395270 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant-easyant-core_3",
        "file": [
            {
                "sha": "4313ddfaf4c1763c5b6c10695e093d00df61fb3f",
                "filename": "src/main/java/org/apache/easyant/tasks/AbstractImport.java",
                "status": "modified",
                "additions": 20,
                "deletions": 15,
                "changes": 35,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/a3d7199e62783dede2289be9b28d1505dd679660/src/main/java/org/apache/easyant/tasks/AbstractImport.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/a3d7199e62783dede2289be9b28d1505dd679660/src/main/java/org/apache/easyant/tasks/AbstractImport.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/tasks/AbstractImport.java?ref=a3d7199e62783dede2289be9b28d1505dd679660",
                "patch": "@@ -117,23 +117,28 @@ protected void doEffectiveImport(File antFile) {\n      */\n     protected void handleOtherResourceFile(ModuleRevisionId moduleRevisionId, String artifactName,\n             String artifactExtension, File localResourceFile) {\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(moduleRevisionId.getOrganisation());\n-        sb.append(\"#\");\n-        sb.append(moduleRevisionId.getName());\n-        sb.append(\".\");\n-        if (!moduleRevisionId.getName().equals(artifactName)) {\n-            sb.append(artifactName);\n+        if (localResourceFile == null) {\n+            getProject().log(\n+                    \"Can't find artifact \" + artifactName + \" ext\" + artifactExtension\n+                            + \". See resolution report to have details\");\n+        } else {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(moduleRevisionId.getOrganisation());\n+            sb.append(\"#\");\n+            sb.append(moduleRevisionId.getName());\n             sb.append(\".\");\n-        }\n-        sb.append(artifactExtension);\n-        sb.append(\".file\");\n-\n-        getProject().log(\n-                \"registering location of artifact \" + artifactName + \" ext\" + artifactExtension + \" on \"\n-                        + sb.toString(), Project.MSG_DEBUG);\n+            if (!moduleRevisionId.getName().equals(artifactName)) {\n+                sb.append(artifactName);\n+                sb.append(\".\");\n+            }\n+            sb.append(artifactExtension);\n+            sb.append(\".file\");\n \n-        getProject().setNewProperty(sb.toString(), localResourceFile.getAbsolutePath());\n+            getProject().log(\n+                    \"registering location of artifact \" + artifactName + \" ext\" + artifactExtension + \" on \"\n+                            + sb.toString(), Project.MSG_DEBUG);\n+            getProject().setNewProperty(sb.toString(), localResourceFile.getAbsolutePath());\n+        }\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant-easyant-core/commit/7aa6775233ed78c50bd0a0579f9ede78376c7b1c",
        "repo": "ant-easyant-core",
        "parent": "https://github.com/apache/ant-easyant-core/commit/03ab87fbb4d05376e2486ed6c9a289ea350d7a75",
        "message": "EEASYANT-9: Defensive check to prevent a NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/easyant/core/trunk@1091668 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant-easyant-core_4",
        "file": [
            {
                "sha": "60e79273b75891fba0ff35d8c46c3b0fbbef0eff",
                "filename": "src/main/java/org/apache/easyant/core/ant/MetaBuildExecutor.java",
                "status": "modified",
                "additions": 13,
                "deletions": 10,
                "changes": 23,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/7aa6775233ed78c50bd0a0579f9ede78376c7b1c/src/main/java/org/apache/easyant/core/ant/MetaBuildExecutor.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/7aa6775233ed78c50bd0a0579f9ede78376c7b1c/src/main/java/org/apache/easyant/core/ant/MetaBuildExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/core/ant/MetaBuildExecutor.java?ref=7aa6775233ed78c50bd0a0579f9ede78376c7b1c",
                "patch": "@@ -54,7 +54,7 @@\n public class MetaBuildExecutor extends DefaultExecutor {\n \n     private static final String DEMARKER = \"======================================================================\";\n-    \n+\n     @Override\n     public void executeTargets(Project project, String[] targets)\n             throws BuildException {\n@@ -202,14 +202,17 @@ private void printSubBuildsInOrder(Project project) {\n     private void printExecutionSubBuildsExecutionTimes(Project project) {\n         List<ExecutionResult> allSubBuildResults = (List<ExecutionResult>) project\n                 .getReference(SubBuildExecutionTimer.EXECUTION_TIMER_SUBBUILD_RESULTS);\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(StringUtils.LINE_SEP).append(DEMARKER).append(\n-                StringUtils.LINE_SEP);\n-        sb.append(\"Project Sub-modules Summary: \").append(StringUtils.LINE_SEP).append(\n-                DEMARKER);\n-        sb.append(StringUtils.LINE_SEP).append(\n-                BuildExecutionTimer.formatExecutionResults(allSubBuildResults));\n-        sb.append(StringUtils.LINE_SEP).append(DEMARKER);\n-        project.log(sb.toString());\n+        if (allSubBuildResults != null && allSubBuildResults.size() > 0) {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(StringUtils.LINE_SEP).append(DEMARKER).append(\n+                    StringUtils.LINE_SEP);\n+            sb.append(\"Project Sub-modules Summary: \").append(\n+                    StringUtils.LINE_SEP).append(DEMARKER);\n+            sb.append(StringUtils.LINE_SEP).append(\n+                    BuildExecutionTimer\n+                            .formatExecutionResults(allSubBuildResults));\n+            sb.append(StringUtils.LINE_SEP).append(DEMARKER);\n+            project.log(sb.toString());\n+        }\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant-easyant-core/commit/009c28be6f4fea489e039f4fe2dbc439bf2bffd5",
        "repo": "ant-easyant-core",
        "parent": "https://github.com/apache/ant-easyant-core/commit/47a277c1b5ecd6051b613763301aa39087fd86d4",
        "message": "Fix potential NPE on submodules if buildtype isn't properly loaded\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/easyant/core/trunk@1503123 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant-easyant-core_5",
        "file": [
            {
                "sha": "b08adc527ba266b37b4e058137c4ff078f16139c",
                "filename": "src/main/java/org/apache/easyant/tasks/SubModule.java",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/009c28be6f4fea489e039f4fe2dbc439bf2bffd5/src/main/java/org/apache/easyant/tasks/SubModule.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/009c28be6f4fea489e039f4fe2dbc439bf2bffd5/src/main/java/org/apache/easyant/tasks/SubModule.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/tasks/SubModule.java?ref=009c28be6f4fea489e039f4fe2dbc439bf2bffd5",
                "patch": "@@ -31,9 +31,9 @@\n import org.apache.easyant.core.EasyAntConstants;\n import org.apache.easyant.core.EasyAntMagicNames;\n import org.apache.easyant.core.ant.ProjectUtils;\n+import org.apache.easyant.core.ant.listerners.BuildExecutionTimer.ExecutionResult;\n import org.apache.easyant.core.ant.listerners.MultiModuleLogger;\n import org.apache.easyant.core.ant.listerners.SubBuildExecutionTimer;\n-import org.apache.easyant.core.ant.listerners.BuildExecutionTimer.ExecutionResult;\n import org.apache.easyant.core.ivy.IvyInstanceHelper;\n import org.apache.ivy.ant.IvyPublish;\n import org.apache.ivy.ant.IvyResolve;\n@@ -203,7 +203,11 @@ private void execute(File file, File directory) throws BuildException {\n                 subModule.setNewProperty(EasyAntMagicNames.PROJECT_EXECUTED_TARGETS, targetsToRun);\n                 subModule.executeTargets(new TargetList(targetsToRun));\n                 if (useBuildRepository) {\n-                    File artifactsDir = subModule.resolveFile(subModule.getProperty(\"target.artifacts\"));\n+                    String targetArtifacts = subModule.getProperty(\"target.artifacts\");\n+                    if (targetArtifacts == null) {\n+                        targetArtifacts = \"target/artifacts\";\n+                    }\n+                    File artifactsDir = subModule.resolveFile(targetArtifacts);\n                     if (artifactsDir.isDirectory()) {\n                         IvyResolve ivyResolve = new IvyResolve();\n                         ivyResolve.setFile(file);\n@@ -298,8 +302,8 @@ private Project configureSubModule(File file, File directory) {\n         addReferences(subModule);\n \n         getEasyAntEngine().configureEasyAntIvyInstance(subModule);\n-        subModule.addReference(EasyAntMagicNames.PLUGIN_SERVICE_INSTANCE, getProject().getReference(\n-                EasyAntMagicNames.PLUGIN_SERVICE_INSTANCE));\n+        subModule.addReference(EasyAntMagicNames.PLUGIN_SERVICE_INSTANCE,\n+                getProject().getReference(EasyAntMagicNames.PLUGIN_SERVICE_INSTANCE));\n \n         subModule.setName(file.getName());\n         subModule.setBaseDir(directory);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant-easyant-core/commit/0189998041abcacf22ff6bdd8ea3a65db0b41c5c",
        "repo": "ant-easyant-core",
        "parent": "https://github.com/apache/ant-easyant-core/commit/7c2f0126505b02251fae0bd7860894123c29347d",
        "message": "Fixes NPE on GoOffline task when used from antunit easyant.file wasn't set\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/easyant/core/trunk@1373014 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant-easyant-core_6",
        "file": [
            {
                "sha": "5f54e6b2864b089bff9267055bedb1395b02ab74",
                "filename": "src/main/java/org/apache/easyant/tasks/GoOffline.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/0189998041abcacf22ff6bdd8ea3a65db0b41c5c/src/main/java/org/apache/easyant/tasks/GoOffline.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/0189998041abcacf22ff6bdd8ea3a65db0b41c5c/src/main/java/org/apache/easyant/tasks/GoOffline.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/tasks/GoOffline.java?ref=0189998041abcacf22ff6bdd8ea3a65db0b41c5c",
                "patch": "@@ -44,7 +44,7 @@\n \n     @Override\n     public void execute() throws BuildException {\n-        if (moduleIvy == null) {\n+        if (moduleIvy == null && getProject().getProperty(EasyAntMagicNames.EASYANT_FILE) != null) {\n             moduleIvy = new File(getProject().getProperty(EasyAntMagicNames.EASYANT_FILE));\n         }\n         if (moduleIvy == null || !moduleIvy.exists()) {\n@@ -100,7 +100,9 @@ private void installProjectDependencies(EasyAntReport easyAntReport) {\n \n     /**\n      * Install easyant plugins and buildtypes used by a project\n-     * @param easyAntReport {@link EasyAntReport} where plugin / buildtypes is described\n+     * \n+     * @param easyAntReport\n+     *            {@link EasyAntReport} where plugin / buildtypes is described\n      */\n     private void installBuildTypeAndPlugins(EasyAntReport easyAntReport) {\n         for (ImportedModuleReport importedModule : easyAntReport.getImportedModuleReports()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant-easyant-core/commit/7debe5e5553d489de510795feec2dbd401122ee4",
        "repo": "ant-easyant-core",
        "parent": "https://github.com/apache/ant-easyant-core/commit/e069efdcef48dbb64e1781adaef85b262bb1043c",
        "message": "Avoid NPE on SearchModule task when errors appears when resolved metadata are not in cache\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/easyant/core/trunk@1141090 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant-easyant-core_7",
        "file": [
            {
                "sha": "1dac7ee5f8bdf4aa7e03e621d013803d965d47a3",
                "filename": "src/main/java/org/apache/easyant/tasks/SearchModule.java",
                "status": "modified",
                "additions": 168,
                "deletions": 159,
                "changes": 327,
                "blob_url": "https://github.com/apache/ant-easyant-core/blob/7debe5e5553d489de510795feec2dbd401122ee4/src/main/java/org/apache/easyant/tasks/SearchModule.java",
                "raw_url": "https://github.com/apache/ant-easyant-core/raw/7debe5e5553d489de510795feec2dbd401122ee4/src/main/java/org/apache/easyant/tasks/SearchModule.java",
                "contents_url": "https://api.github.com/repos/apache/ant-easyant-core/contents/src/main/java/org/apache/easyant/tasks/SearchModule.java?ref=7debe5e5553d489de510795feec2dbd401122ee4",
                "patch": "@@ -28,170 +28,179 @@\n import org.apache.ivy.plugins.matcher.PatternMatcher;\n import org.apache.ivy.plugins.resolver.DependencyResolver;\n import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.Project;\n import org.apache.tools.ant.input.InputHandler;\n import org.apache.tools.ant.input.InputRequest;\n import org.apache.tools.ant.input.MultipleChoiceInputRequest;\n \n public class SearchModule extends IvyTask {\n \n-    private String organisation;\n-\n-    private String module;\n-\n-    private String branch = PatternMatcher.ANY_EXPRESSION;\n-\n-    private String revision;\n-\n-    private String matcher = PatternMatcher.EXACT_OR_REGEXP;\n-\n-    private String propertyPrefix;\n-    private String resolver;\n-\n-    public void doExecute() throws BuildException {\n-        if (getOrganisation() == null) {\n-            throw new BuildException(\n-                    \"no organisation provided for SearchModule task\");\n-        }\n-        if (getModule() == null) {\n-            throw new BuildException(\n-                    \"no module name provided for SearchModule task\");\n-        }\n-        if (getRevision() == null) {\n-            throw new BuildException(\n-                    \"no revision provided for SearchModule task\");\n-        }\n-\n-        if (getPropertyPrefix() == null) {\n-            throw new BuildException(\n-                    \"no property prefix provided provided for SearchModule task\");\n-        }\n-        Ivy ivy = getIvyInstance();\n-        IvySettings settings = ivy.getSettings();\n-\n-        // search all modules revision matching the requested criteria\n-        DependencyResolver resolverToCheck;\n-        if (getResolver() != null) {\n-            resolverToCheck = settings.getResolver(getResolver());\n-        } else {\n-            resolverToCheck = settings.getDefaultResolver();\n-        }\n-        ModuleRevisionId mridToSearch = ModuleRevisionId.newInstance(\n-                getOrganisation(), getModule(), getBranch(), getRevision());\n-        ModuleRevisionId[] mrids = ivy.getSearchEngine().listModules(\n-                resolverToCheck, mridToSearch, settings.getMatcher(matcher));\n-\n-        // diplay the list\n-        Vector<String> choices = new Vector<String>();\n-        for (int i = 0; i < mrids.length; i++) {\n-            choices.add(String.valueOf(i));\n-            StringBuilder sb = new StringBuilder();\n-            sb.append(i).append(\": \");\n-            sb.append(mrids[i].getName());\n-            sb.append(\" v\").append(mrids[i].getRevision());\n-            // hide organization if its the default one\n-            if (!EasyAntConstants.EASYANT_SKELETONS_ORGANISATION\n-                    .equals(mrids[i].getOrganisation())) {\n-                sb.append(\" by \").append(mrids[i].getOrganisation());\n-            }\n-            // Get the description\n-            ResolvedModuleRevision rmr = ivy.findModule(mrids[i]);\n-            if (rmr.getDescriptor().getDescription() != null\n-                    && !rmr.getDescriptor().getDescription().equals(\"\")) {\n-                sb.append(\" (\").append(rmr.getDescriptor().getDescription())\n-                        .append(\")\");\n-            }\n-            log(sb.toString());\n-\n-        }\n-\n-        // ask end user to select a module\n-        // TODO handle a default value\n-        Integer value = new Integer(getInput(\"Choose a number:\", null, choices));\n-        ModuleRevisionId moduleToRetrieve = mrids[value];\n-\n-        // set final properties\n-        getProject().setProperty(getPropertyPrefix() + \".org\",\n-                moduleToRetrieve.getOrganisation());\n-        getProject().setProperty(getPropertyPrefix() + \".module\",\n-                moduleToRetrieve.getName());\n-        getProject().setProperty(getPropertyPrefix() + \".rev\",\n-                moduleToRetrieve.getRevision());\n-\n-    }\n-\n-    protected String getInput(String message, String defaultvalue,\n-            Vector<String> choices) {\n-        InputRequest request = null;\n-        request = new MultipleChoiceInputRequest(message, choices);\n-        request.setDefaultValue(defaultvalue);\n-\n-        InputHandler h = getProject().getInputHandler();\n-\n-        h.handleInput(request);\n-\n-        String value = request.getInput();\n-        if ((value == null || value.trim().length() == 0)\n-                && defaultvalue != null) {\n-            value = defaultvalue;\n-        }\n-        return value;\n-\n-    }\n-\n-    public String getMatcher() {\n-        return matcher;\n-    }\n-\n-    public void setMatcher(String matcher) {\n-        this.matcher = matcher;\n-    }\n-\n-    public String getModule() {\n-        return module;\n-    }\n-\n-    public void setModule(String module) {\n-        this.module = module;\n-    }\n-\n-    public String getOrganisation() {\n-        return organisation;\n-    }\n-\n-    public void setOrganisation(String organisation) {\n-        this.organisation = organisation;\n-    }\n-\n-    public String getRevision() {\n-        return revision;\n-    }\n-\n-    public void setRevision(String revision) {\n-        this.revision = revision;\n-    }\n-\n-    public String getBranch() {\n-        return branch;\n-    }\n-\n-    public void setBranch(String branch) {\n-        this.branch = branch;\n-    }\n-\n-    public String getPropertyPrefix() {\n-        return propertyPrefix;\n-    }\n-\n-    public void setPropertyPrefix(String propertyPrefix) {\n-        this.propertyPrefix = propertyPrefix;\n-    }\n-\n-    public String getResolver() {\n-        return resolver;\n-    }\n-\n-    public void setResolver(String resolver) {\n-        this.resolver = resolver;\n-    }\n+\tprivate String organisation;\n+\n+\tprivate String module;\n+\n+\tprivate String branch = PatternMatcher.ANY_EXPRESSION;\n+\n+\tprivate String revision;\n+\n+\tprivate String matcher = PatternMatcher.EXACT_OR_REGEXP;\n+\n+\tprivate String propertyPrefix;\n+\tprivate String resolver;\n+\n+\tpublic void doExecute() throws BuildException {\n+\t\tif (getOrganisation() == null) {\n+\t\t\tthrow new BuildException(\n+\t\t\t\t\t\"no organisation provided for SearchModule task\");\n+\t\t}\n+\t\tif (getModule() == null) {\n+\t\t\tthrow new BuildException(\n+\t\t\t\t\t\"no module name provided for SearchModule task\");\n+\t\t}\n+\t\tif (getRevision() == null) {\n+\t\t\tthrow new BuildException(\n+\t\t\t\t\t\"no revision provided for SearchModule task\");\n+\t\t}\n+\n+\t\tif (getPropertyPrefix() == null) {\n+\t\t\tthrow new BuildException(\n+\t\t\t\t\t\"no property prefix provided provided for SearchModule task\");\n+\t\t}\n+\t\tIvy ivy = getIvyInstance();\n+\t\tIvySettings settings = ivy.getSettings();\n+\n+\t\t// search all modules revision matching the requested criteria\n+\t\tDependencyResolver resolverToCheck;\n+\t\tif (getResolver() != null) {\n+\t\t\tresolverToCheck = settings.getResolver(getResolver());\n+\t\t} else {\n+\t\t\tresolverToCheck = settings.getDefaultResolver();\n+\t\t}\n+\t\tModuleRevisionId mridToSearch = ModuleRevisionId.newInstance(\n+\t\t\t\tgetOrganisation(), getModule(), getBranch(), getRevision());\n+\t\tModuleRevisionId[] mrids = ivy.getSearchEngine().listModules(\n+\t\t\t\tresolverToCheck, mridToSearch, settings.getMatcher(matcher));\n+\n+\t\t// diplay the list\n+\t\tVector<String> choices = new Vector<String>();\n+\t\tfor (int i = 0; i < mrids.length; i++) {\n+\t\t\tResolvedModuleRevision rmr = ivy.findModule(mrids[i]);\n+\t\t\tif (rmr == null) {\n+\t\t\t\tlog(\"Can't retrieve \" + mrids[i].toString(),Project.MSG_WARN);\n+\t\t\t} else {\n+\n+\t\t\t\tchoices.add(String.valueOf(i));\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\tsb.append(i).append(\": \");\n+\t\t\t\tsb.append(mrids[i].getName());\n+\t\t\t\tsb.append(\" v\").append(mrids[i].getRevision());\n+\t\t\t\t// hide organization if its the default one\n+\t\t\t\tif (!EasyAntConstants.EASYANT_SKELETONS_ORGANISATION\n+\t\t\t\t\t\t.equals(mrids[i].getOrganisation())) {\n+\t\t\t\t\tsb.append(\" by \").append(mrids[i].getOrganisation());\n+\t\t\t\t}\n+\t\t\t\t// Get the description\n+\t\t\t\tif (rmr.getDescriptor().getDescription() != null\n+\t\t\t\t\t\t&& !rmr.getDescriptor().getDescription().equals(\"\")) {\n+\t\t\t\t\tsb.append(\" (\")\n+\t\t\t\t\t\t\t.append(rmr.getDescriptor().getDescription())\n+\t\t\t\t\t\t\t.append(\")\");\n+\t\t\t\t}\n+\t\t\t\tlog(sb.toString());\n+\t\t\t}\n+\t\t}\n+\t\tif (choices.size() == 0) {\n+\t\t\tthrow new BuildException(\"No matching module were found !\");\n+\t\t}\n+\n+\t\t// ask end user to select a module\n+\t\t// TODO handle a default value\n+\t\tInteger value = new Integer(getInput(\"Choose a number:\", null, choices));\n+\t\tModuleRevisionId moduleToRetrieve = mrids[value];\n+\n+\t\t// set final properties\n+\t\tgetProject().setProperty(getPropertyPrefix() + \".org\",\n+\t\t\t\tmoduleToRetrieve.getOrganisation());\n+\t\tgetProject().setProperty(getPropertyPrefix() + \".module\",\n+\t\t\t\tmoduleToRetrieve.getName());\n+\t\tgetProject().setProperty(getPropertyPrefix() + \".rev\",\n+\t\t\t\tmoduleToRetrieve.getRevision());\n+\n+\t}\n+\n+\tprotected String getInput(String message, String defaultvalue,\n+\t\t\tVector<String> choices) {\n+\t\tInputRequest request = null;\n+\t\trequest = new MultipleChoiceInputRequest(message, choices);\n+\t\trequest.setDefaultValue(defaultvalue);\n+\n+\t\tInputHandler h = getProject().getInputHandler();\n+\n+\t\th.handleInput(request);\n+\n+\t\tString value = request.getInput();\n+\t\tif ((value == null || value.trim().length() == 0)\n+\t\t\t\t&& defaultvalue != null) {\n+\t\t\tvalue = defaultvalue;\n+\t\t}\n+\t\treturn value;\n+\n+\t}\n+\n+\tpublic String getMatcher() {\n+\t\treturn matcher;\n+\t}\n+\n+\tpublic void setMatcher(String matcher) {\n+\t\tthis.matcher = matcher;\n+\t}\n+\n+\tpublic String getModule() {\n+\t\treturn module;\n+\t}\n+\n+\tpublic void setModule(String module) {\n+\t\tthis.module = module;\n+\t}\n+\n+\tpublic String getOrganisation() {\n+\t\treturn organisation;\n+\t}\n+\n+\tpublic void setOrganisation(String organisation) {\n+\t\tthis.organisation = organisation;\n+\t}\n+\n+\tpublic String getRevision() {\n+\t\treturn revision;\n+\t}\n+\n+\tpublic void setRevision(String revision) {\n+\t\tthis.revision = revision;\n+\t}\n+\n+\tpublic String getBranch() {\n+\t\treturn branch;\n+\t}\n+\n+\tpublic void setBranch(String branch) {\n+\t\tthis.branch = branch;\n+\t}\n+\n+\tpublic String getPropertyPrefix() {\n+\t\treturn propertyPrefix;\n+\t}\n+\n+\tpublic void setPropertyPrefix(String propertyPrefix) {\n+\t\tthis.propertyPrefix = propertyPrefix;\n+\t}\n+\n+\tpublic String getResolver() {\n+\t\treturn resolver;\n+\t}\n+\n+\tpublic void setResolver(String resolver) {\n+\t\tthis.resolver = resolver;\n+\t}\n \n }"
            }
        ]
    }
]
