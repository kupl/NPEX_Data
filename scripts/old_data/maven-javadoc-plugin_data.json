[
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/79a6b4b69383d3bf5c342c12dc483bc3d4b82336",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/087a3de98eb939957f57813a9d0f0b232b0a0a87",
        "message": "[MJAVADOC-504] NullPointerException in JavadocUtil.getJavaHome() when JAVA_HOME isn't set",
        "bug_id": "maven-javadoc-plugin_1",
        "file": [
            {
                "sha": "f5754550be5573a743f590c2208f0740009beac0",
                "filename": "src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java",
                "status": "modified",
                "additions": 15,
                "deletions": 13,
                "changes": 28,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/79a6b4b69383d3bf5c342c12dc483bc3d4b82336/src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/79a6b4b69383d3bf5c342c12dc483bc3d4b82336/src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java?ref=79a6b4b69383d3bf5c342c12dc483bc3d4b82336",
                "patch": "@@ -1278,10 +1278,22 @@ private static String getMavenOpts( Log log )\n     private static File getJavaHome( Log log )\r\n     {\r\n         File javaHome = null;\r\n+        \r\n+        String javaHomeValue = null;\r\n+        try\r\n+        {\r\n+            javaHomeValue = CommandLineUtils.getSystemEnvVars().getProperty( \"JAVA_HOME\" );\r\n+        }\r\n+        catch ( IOException e )\r\n+        {\r\n+            if ( log != null && log.isDebugEnabled() )\r\n+            {\r\n+                log.debug( \"IOException: \" + e.getMessage() );\r\n+            }\r\n+        }\r\n \r\n         // if maven.home is set, we can assume JAVA_HOME must be used for testing\r\n-        \r\n-        if ( System.getProperty( \"maven.home\" ) == null )\r\n+        if ( System.getProperty( \"maven.home\" ) == null || javaHomeValue == null )\r\n         {\r\n             // JEP220 (Java9) restructured the JRE/JDK runtime image\r\n             if ( ( SystemUtils.IS_OS_MAC_OSX\r\n@@ -1297,17 +1309,7 @@ private static File getJavaHome( Log log )\n \r\n         if ( javaHome == null || !javaHome.exists() )\r\n         {\r\n-            try\r\n-            {\r\n-                javaHome = new File( CommandLineUtils.getSystemEnvVars().getProperty( \"JAVA_HOME\" ) );\r\n-            }\r\n-            catch ( IOException e )\r\n-            {\r\n-                if ( log != null && log.isDebugEnabled() )\r\n-                {\r\n-                    log.debug( \"IOException: \" + e.getMessage() );\r\n-                }\r\n-            }\r\n+            javaHome = new File( javaHomeValue );\r\n         }\r\n \r\n         if ( javaHome == null || !javaHome.exists() )\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/c922342ed87805c236d68ccbf545efb17af0f965",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/0ade0576e8a294459153161a3d5071814e588dcd",
        "message": "[MJAVADOC-517] NPE under Java 10 RC\nReplace JavadocVersion with JavaVersion from plexus-java\nExtract parts from commons-lang3 SystemUtils, which should not be used anymore; it uses enums for java versions, which means an update is required for every new Java version.",
        "bug_id": "maven-javadoc-plugin_2",
        "file": [
            {
                "sha": "e646e70c3b46dc05792772c5125aee04b6314167",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/pom.xml",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/pom.xml?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -234,7 +234,7 @@ under the License.\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-java</artifactId>\n-      <version>0.9.5</version>\n+      <version>0.9.6</version>\n     </dependency>\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>"
            },
            {
                "sha": "24ea1b9bef7edf33fcbdd172ade800f8adb6d9d7",
                "filename": "src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java",
                "status": "modified",
                "additions": 18,
                "deletions": 20,
                "changes": 38,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -20,8 +20,6 @@\n  */\r\n \r\n import org.apache.commons.lang3.ClassUtils;\r\n-import org.apache.commons.lang3.JavaVersion;\r\n-import org.apache.commons.lang3.SystemUtils;\r\n import org.apache.maven.artifact.Artifact;\r\n import org.apache.maven.artifact.ArtifactUtils;\r\n import org.apache.maven.artifact.handler.ArtifactHandler;\r\n@@ -86,6 +84,7 @@\n import org.codehaus.plexus.languages.java.jpms.LocationManager;\r\n import org.codehaus.plexus.languages.java.jpms.ResolvePathsRequest;\r\n import org.codehaus.plexus.languages.java.jpms.ResolvePathsResult;\r\n+import org.codehaus.plexus.languages.java.version.JavaVersion;\r\n import org.codehaus.plexus.util.DirectoryScanner;\r\n import org.codehaus.plexus.util.FileUtils;\r\n import org.codehaus.plexus.util.IOUtil;\r\n@@ -256,7 +255,7 @@\n      *\r\n      * @since 2.1\r\n      */\r\n-    private static final JavadocVersion SINCE_JAVADOC_1_4 = JavadocVersion.parse( \"1.4\" );\r\n+    private static final JavaVersion SINCE_JAVADOC_1_4 = JavaVersion.parse( \"1.4\" );\r\n \r\n     /**\r\n      * For Javadoc options appears since Java 1.4.2.\r\n@@ -266,7 +265,7 @@\n      *\r\n      * @since 2.1\r\n      */\r\n-    private static final JavadocVersion SINCE_JAVADOC_1_4_2 = JavadocVersion.parse( \"1.4.2\" );\r\n+    private static final JavaVersion SINCE_JAVADOC_1_4_2 = JavaVersion.parse( \"1.4.2\" );\r\n \r\n     /**\r\n      * For Javadoc options appears since Java 5.0.\r\n@@ -276,7 +275,7 @@\n      *\r\n      * @since 2.1\r\n      */\r\n-    private static final JavadocVersion SINCE_JAVADOC_1_5 = JavadocVersion.parse( \"1.5\" );\r\n+    private static final JavaVersion SINCE_JAVADOC_1_5 = JavaVersion.parse( \"1.5\" );\r\n \r\n     /**\r\n      * For Javadoc options appears since Java 6.0.\r\n@@ -285,7 +284,7 @@\n      *\r\n      * @since 2.4\r\n      */\r\n-    private static final JavadocVersion SINCE_JAVADOC_1_6 = JavadocVersion.parse( \"1.6\" );\r\n+    private static final JavaVersion SINCE_JAVADOC_1_6 = JavaVersion.parse( \"1.6\" );\r\n \r\n     /**\r\n      * For Javadoc options appears since Java 8.0.\r\n@@ -294,13 +293,12 @@\n      *\r\n      * @since 3.0.0\r\n      */\r\n-    private static final JavadocVersion SINCE_JAVADOC_1_8 = JavadocVersion.parse( \"1.8\" );\r\n+    private static final JavaVersion SINCE_JAVADOC_1_8 = JavaVersion.parse( \"1.8\" );\r\n \r\n     /**\r\n      * \r\n      */\r\n-    // JAVA_VERSION can have -ea suffix, which is not supported (yet)\r\n-    private static final JavadocVersion JAVA_VERSION = JavadocVersion.parse( SystemUtils.JAVA_SPECIFICATION_VERSION );\r\n+    private static final JavaVersion JAVA_VERSION = JavaVersion.JAVA_SPECIFICATION_VERSION;\r\n \r\n     // ----------------------------------------------------------------------\r\n     // Mojo components\r\n@@ -490,7 +488,7 @@\n     /**\r\n      * Version of the Javadoc Tool executable to use.\r\n      */\r\n-    private JavadocVersion javadocRuntimeVersion;\r\n+    private JavaVersion javadocRuntimeVersion;\r\n \r\n     /**\r\n      * Specifies whether the Javadoc generation should be skipped.\r\n@@ -3689,7 +3687,7 @@ private String getJavadocExecutable()\n         }\r\n         // For Apple's JDK 1.6.x (and older?) on Mac OSX\r\n         // CHECKSTYLE_OFF: MagicNumber\r\n-        else if ( SystemUtils.IS_OS_MAC_OSX && !SystemUtils.isJavaVersionAtLeast( JavaVersion.JAVA_1_7 ) )\r\n+        else if ( SystemUtils.IS_OS_MAC_OSX && !JavaVersion.JAVA_SPECIFICATION_VERSION.isAtLeast( \"1.7\" ) )\r\n         // CHECKSTYLE_ON: MagicNumber\r\n         {\r\n             javadocExe = new File( SystemUtils.getJavaHome() + File.separator + \"bin\", javadocCommand );\r\n@@ -3740,7 +3738,7 @@ else if ( SystemUtils.IS_OS_MAC_OSX && !SystemUtils.isJavaVersionAtLeast( JavaVe\n     private void setFJavadocVersion( File jExecutable )\r\n         throws MavenReportException\r\n     {\r\n-        JavadocVersion jVersion;\r\n+        JavaVersion jVersion;\r\n         try\r\n         {\r\n             jVersion = JavadocUtil.getJavadocVersion( jExecutable );\r\n@@ -3777,7 +3775,7 @@ private void setFJavadocVersion( File jExecutable )\n         {\r\n             try\r\n             {\r\n-                javadocRuntimeVersion = JavadocVersion.parse( javadocVersion );\r\n+                javadocRuntimeVersion = JavaVersion.parse( javadocVersion );\r\n             }\r\n             catch ( NumberFormatException e )\r\n             {\r\n@@ -3802,7 +3800,7 @@ private void setFJavadocVersion( File jExecutable )\n      * @return <code>true</code> if the javadoc version is equal or greater than the\r\n      *         required version\r\n      */\r\n-    private boolean isJavaDocVersionAtLeast( JavadocVersion requiredVersion )\r\n+    private boolean isJavaDocVersionAtLeast( JavaVersion requiredVersion )\r\n     {\r\n         return JAVA_VERSION.compareTo( requiredVersion ) >= 0;\r\n     }\r\n@@ -3834,7 +3832,7 @@ private void addArgIf( List<String> arguments, boolean b, String value )\n      * @see #addArgIf(java.util.List, boolean, String)\r\n      * @see #isJavaDocVersionAtLeast(float)\r\n      */\r\n-    private void addArgIf( List<String> arguments, boolean b, String value, JavadocVersion requiredJavaVersion )\r\n+    private void addArgIf( List<String> arguments, boolean b, String value, JavaVersion requiredJavaVersion )\r\n     {\r\n         if ( b )\r\n         {\r\n@@ -3885,7 +3883,7 @@ private void addArgIfNotEmpty( List<String> arguments, String key, String value\n      * @see #isJavaDocVersionAtLeast(float)\r\n      */\r\n     private void addArgIfNotEmpty( List<String> arguments, String key, String value, boolean repeatKey,\r\n-                                   boolean splitValue, JavadocVersion requiredJavaVersion )\r\n+                                   boolean splitValue, JavaVersion requiredJavaVersion )\r\n     {\r\n         if ( StringUtils.isNotEmpty( value ) )\r\n         {\r\n@@ -3978,7 +3976,7 @@ private void addArgIfNotEmpty( List<String> arguments, String key, String value,\n      * @see #addArgIfNotEmpty(java.util.List, String, String, float, boolean)\r\n      */\r\n     private void addArgIfNotEmpty( List<String> arguments, String key, String value,\r\n-                                   JavadocVersion requiredJavaVersion )\r\n+                                   JavaVersion requiredJavaVersion )\r\n     {\r\n         addArgIfNotEmpty( arguments, key, value, requiredJavaVersion, false );\r\n     }\r\n@@ -3995,7 +3993,7 @@ private void addArgIfNotEmpty( List<String> arguments, String key, String value,\n      * @see #addArgIfNotEmpty(java.util.List, String, String)\r\n      * @see #isJavaDocVersionAtLeast(float)\r\n      */\r\n-    private void addArgIfNotEmpty( List<String> arguments, String key, String value, JavadocVersion requiredJavaVersion,\r\n+    private void addArgIfNotEmpty( List<String> arguments, String key, String value, JavaVersion requiredJavaVersion,\r\n                                    boolean repeatKey )\r\n     {\r\n         if ( StringUtils.isNotEmpty( value ) )\r\n@@ -5753,13 +5751,13 @@ private OfflineLink getDefaultJavadocApiLink()\n         }\r\n \r\n         final String pluginId = \"org.apache.maven.plugins:maven-compiler-plugin\";\r\n-        JavadocVersion sourceVersion = javadocRuntimeVersion;\r\n+        JavaVersion sourceVersion = javadocRuntimeVersion;\r\n         String sourceConfigured = getPluginParameter( project, pluginId, \"source\" );\r\n         if ( sourceConfigured != null )\r\n         {\r\n             try\r\n             {\r\n-                sourceVersion = JavadocVersion.parse( sourceConfigured );\r\n+                sourceVersion = JavaVersion.parse( sourceConfigured );\r\n             }\r\n             catch ( NumberFormatException e )\r\n             {\r"
            },
            {
                "sha": "ec1a4f708ccac52c214ec2233194e66e1e0098eb",
                "filename": "src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java",
                "status": "modified",
                "additions": 5,
                "deletions": 6,
                "changes": 11,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugins/javadoc/JavadocUtil.java?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -19,7 +19,6 @@\n  * under the License.\r\n  */\r\n \r\n-import org.apache.commons.lang3.SystemUtils;\r\n import org.apache.http.HttpHost;\r\n import org.apache.http.HttpResponse;\r\n import org.apache.http.HttpStatus;\r\n@@ -49,6 +48,7 @@\n import org.apache.maven.shared.invoker.PrintStreamHandler;\r\n import org.apache.maven.wagon.proxy.ProxyInfo;\r\n import org.apache.maven.wagon.proxy.ProxyUtils;\r\n+import org.codehaus.plexus.languages.java.version.JavaVersion;\r\n import org.codehaus.plexus.util.DirectoryScanner;\r\n import org.codehaus.plexus.util.FileUtils;\r\n import org.codehaus.plexus.util.IOUtil;\r\n@@ -514,7 +514,7 @@ protected static void addFilesFromSource( List<String> files, File sourceDirecto\n      * @throws PatternSyntaxException if the output contains a syntax error in the regular-expression pattern.\r\n      * @see #extractJavadocVersion(String)\r\n      */\r\n-    protected static JavadocVersion getJavadocVersion( File javadocExe )\r\n+    protected static JavaVersion getJavadocVersion( File javadocExe )\r\n         throws IOException, CommandLineException, IllegalArgumentException\r\n     {\r\n         if ( ( javadocExe == null ) || ( !javadocExe.exists() ) || ( !javadocExe.isFile() ) )\r\n@@ -542,11 +542,11 @@ protected static JavadocVersion getJavadocVersion( File javadocExe )\n \r\n         if ( StringUtils.isNotEmpty( err.getOutput() ) )\r\n         {\r\n-            return JavadocVersion.parse( extractJavadocVersion( err.getOutput() ) );\r\n+            return JavaVersion.parse( extractJavadocVersion( err.getOutput() ) );\r\n         }\r\n         else if ( StringUtils.isNotEmpty( out.getOutput() ) )\r\n         {\r\n-            return JavadocVersion.parse( extractJavadocVersion( out.getOutput() ) );\r\n+            return JavaVersion.parse( extractJavadocVersion( out.getOutput() ) );\r\n         }\r\n \r\n         throw new IllegalArgumentException( \"No output found from the command line 'javadoc -J-version'\" );\r\n@@ -1298,8 +1298,7 @@ private static File getJavaHome( Log log )\n         if ( System.getProperty( \"maven.home\" ) == null || javaHomeValue == null )\r\n         {\r\n             // JEP220 (Java9) restructured the JRE/JDK runtime image\r\n-            if ( ( SystemUtils.IS_OS_MAC_OSX\r\n-                || JavadocVersion.parse( SystemUtils.JAVA_VERSION ).compareTo( JavadocVersion.parse( \"9\" ) ) >= 0 ) )\r\n+            if ( SystemUtils.IS_OS_MAC_OSX || JavaVersion.JAVA_VERSION.isAtLeast( \"9\" ) )\r\n             {\r\n                 javaHome = SystemUtils.getJavaHome();\r\n             }\r"
            },
            {
                "sha": "27661b90b4f8d43ba6e9bfd2582c1c1c86c2d383",
                "filename": "src/main/java/org/apache/maven/plugins/javadoc/JavadocVersion.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/JavadocVersion.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/JavadocVersion.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugins/javadoc/JavadocVersion.java?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -30,7 +30,9 @@\n  * \r\n  * @author Robert Scholte\r\n  * @since 3.0.0\r\n+ * @deprecated Use {@link org.codehaus.plexus.languages.java.version.JavaVersion} instead\r\n  */\r\n+@Deprecated\r\n public class JavadocVersion implements Comparable<JavadocVersion>\r\n {\r\n     private String rawVersion;\r"
            },
            {
                "sha": "84675b34537d3e3ee0814d353a77e36f3eaf983b",
                "filename": "src/main/java/org/apache/maven/plugins/javadoc/SystemUtils.java",
                "status": "added",
                "additions": 181,
                "deletions": 0,
                "changes": 181,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/SystemUtils.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/src/main/java/org/apache/maven/plugins/javadoc/SystemUtils.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugins/javadoc/SystemUtils.java?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -0,0 +1,181 @@\n+package org.apache.maven.plugins.javadoc;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.File;\n+\n+/**\n+ * Contains several OS-specific methods from Commons-Lang3's SystemUtils. We don't want to use that class because it\n+ * uses enums for Java versions, which implies that with every new Java version a new commons-lang3 is required.\n+ * \n+ * @author Robert Scholte\n+ * @since 3.0.1\n+ */\n+class SystemUtils\n+{\n+    /**\n+     * <p>\n+     * The {@code os.name} System Property. Operating system name.\n+     * </p>\n+     * <p>\n+     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n+     * not exist.\n+     * </p>\n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n+     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n+     * sync with that System property.\n+     * </p>\n+     *\n+     * @since Java 1.1\n+     */\n+    public static final String OS_NAME = getSystemProperty( \"os.name\" );\n+\n+    /**\n+     * The prefix String for all Windows OS.\n+     */\n+    private static final String OS_NAME_WINDOWS_PREFIX = \"Windows\";\n+\n+    /**\n+     * <p>\n+     * Is {@code true} if this is AIX.\n+     * </p>\n+     * <p>\n+     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n+     * </p>\n+     */\n+    public static final boolean IS_OS_AIX = getOSMatchesName( \"AIX\" );\n+\n+    /**\n+     * <p>\n+     * Is {@code true} if this is Mac.\n+     * </p>\n+     * <p>\n+     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n+     * </p>\n+     */\n+    public static final boolean IS_OS_MAC_OSX = getOSMatchesName( \"Mac OS X\" );\n+\n+    /**\n+     * <p>\n+     * Is {@code true} if this is Windows.\n+     * </p>\n+     * <p>\n+     * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n+     * </p>\n+     */\n+    public static final boolean IS_OS_WINDOWS = getOSMatchesName( OS_NAME_WINDOWS_PREFIX );\n+\n+    /**\n+     * The System property key for the Java home directory.\n+     */\n+    private static final String JAVA_HOME_KEY = \"java.home\";\n+\n+    /**\n+     * <p>\n+     * The {@code line.separator} System Property. Line separator (<code>&quot;\\n&quot;</code> on UNIX).\n+     * </p>\n+     * <p>\n+     * Defaults to {@code null} if the runtime does not have security access to read this property or the property does\n+     * not exist.\n+     * </p>\n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)} or\n+     * {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value will be out of\n+     * sync with that System property.\n+     * </p>\n+     *\n+     * @since Java 1.1\n+     */\n+    public static final String LINE_SEPARATOR = getSystemProperty( \"line.separator\" );\n+\n+    /**\n+     * Decides if the operating system matches.\n+     *\n+     * @param osNamePrefix the prefix for the os name\n+     * @return true if matches, or false if not or can't determine\n+     */\n+    private static boolean getOSMatchesName( final String osNamePrefix )\n+    {\n+        return isOSNameMatch( OS_NAME, osNamePrefix );\n+    }\n+\n+    /**\n+     * Decides if the operating system matches.\n+     * <p>\n+     * This method is package private instead of private to support unit test invocation.\n+     * </p>\n+     *\n+     * @param osName the actual OS name\n+     * @param osNamePrefix the prefix for the expected OS name\n+     * @return true if matches, or false if not or can't determine\n+     */\n+    static boolean isOSNameMatch( final String osName, final String osNamePrefix )\n+    {\n+        if ( osName == null )\n+        {\n+            return false;\n+        }\n+        return osName.startsWith( osNamePrefix );\n+    }\n+\n+    /**\n+     * <p>\n+     * Gets the Java home directory as a {@code File}.\n+     * </p>\n+     *\n+     * @return a directory\n+     * @throws SecurityException if a security manager exists and its {@code checkPropertyAccess} method doesn't allow\n+     *             access to the specified system property.\n+     * @see System#getProperty(String)\n+     * @since 2.1\n+     */\n+    public static File getJavaHome()\n+    {\n+        return new File( System.getProperty( JAVA_HOME_KEY ) );\n+    }\n+\n+    /**\n+     * <p>\n+     * Gets a System property, defaulting to {@code null} if the property cannot be read.\n+     * </p>\n+     * <p>\n+     * If a {@code SecurityException} is caught, the return value is {@code null} and a message is written to\n+     * {@code System.err}.\n+     * </p>\n+     *\n+     * @param property the system property name\n+     * @return the system property value or {@code null} if a security problem occurs\n+     */\n+    private static String getSystemProperty( final String property )\n+    {\n+        try\n+        {\n+            return System.getProperty( property );\n+        }\n+        catch ( final SecurityException ex )\n+        {\n+            // we are not allowed to look at this property\n+            System.err.println( \"Caught a SecurityException reading the system property '\" + property\n+                + \"'; the SystemUtils property value will default to null.\" );\n+            return null;\n+        }\n+    }\n+}"
            },
            {
                "sha": "94a814228c8918710775ed3ad9fdc3eb5c3f3843",
                "filename": "src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 5,
                "changes": 8,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/test/java/org/apache/maven/plugins/javadoc/FixJavadocMojoTest.java?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -28,12 +28,12 @@\n import java.util.List;\r\n import java.util.Properties;\r\n \r\n-import org.apache.commons.lang3.SystemUtils;\r\n import org.apache.maven.plugin.logging.Log;\r\n import org.apache.maven.plugin.testing.AbstractMojoTestCase;\r\n import org.apache.maven.plugin.testing.stubs.MavenProjectStub;\r\n import org.apache.maven.plugins.javadoc.AbstractFixJavadocMojo.JavaEntityTags;\r\n import org.apache.maven.shared.invoker.MavenInvocationException;\r\n+import org.codehaus.plexus.languages.java.version.JavaVersion;\r\n import org.codehaus.plexus.util.FileUtils;\r\n import org.codehaus.plexus.util.IOUtil;\r\n import org.codehaus.plexus.util.ReaderFactory;\r\n@@ -150,7 +150,7 @@ public void testFixJdk5()\n     {\r\n         // Should be an assumption, but not supported by TestCase\r\n         // Java 5 not supported by Java9 anymore\r\n-        if ( JavadocVersion.parse( SystemUtils.JAVA_SPECIFICATION_VERSION ).compareTo( JavadocVersion.parse( \"9\" ) ) >= 0 )\r\n+        if ( JavaVersion.JAVA_SPECIFICATION_VERSION.isAtLeast( \"9\" ) )\r\n         {\r\n             return;\r\n         }\r\n@@ -649,11 +649,9 @@ private void invokeCompileGoal( File testPom, Log log )\n         invokerDir.mkdirs();\r\n         File invokerLogFile = FileUtils.createTempFile( \"FixJavadocMojoTest\", \".txt\", invokerDir );\r\n         \r\n-        JavadocVersion JAVA_9 = JavadocVersion.parse( SystemUtils.JAVA_SPECIFICATION_VERSION );\r\n-        \r\n         Properties properties = new Properties();\r\n         \r\n-        if( JavadocVersion.parse( SystemUtils.JAVA_SPECIFICATION_VERSION ).compareTo( JAVA_9 ) >= 0 )\r\n+        if( JavaVersion.JAVA_SPECIFICATION_VERSION.isAtLeast( \"9\" ) )\r\n         {\r\n             properties.put( \"maven.compiler.source\", \"1.6\" );\r\n             properties.put( \"maven.compiler.target\", \"1.6\" );\r"
            },
            {
                "sha": "18e71cc05e4f184b62f1e53d95c0c54bedb66f2f",
                "filename": "src/test/java/org/apache/maven/plugins/javadoc/JavadocJarTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 6,
                "changes": 10,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/src/test/java/org/apache/maven/plugins/javadoc/JavadocJarTest.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/src/test/java/org/apache/maven/plugins/javadoc/JavadocJarTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/test/java/org/apache/maven/plugins/javadoc/JavadocJarTest.java?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -33,10 +33,8 @@\n import org.apache.maven.plugin.MojoExecution;\r\n import org.apache.maven.plugin.testing.AbstractMojoTestCase;\r\n import org.apache.maven.plugin.testing.stubs.MavenProjectStub;\r\n-import org.apache.maven.plugins.javadoc.AbstractJavadocMojo;\r\n-import org.apache.maven.plugins.javadoc.JavadocJar;\r\n-import org.apache.maven.plugins.javadoc.JavadocVersion;\r\n import org.apache.maven.project.MavenProject;\r\n+import org.codehaus.plexus.languages.java.version.JavaVersion;\r\n import org.codehaus.plexus.util.FileUtils;\r\n \r\n /**\r\n@@ -96,12 +94,12 @@ public void testDefaultConfig()\n         }\r\n \r\n         assertTrue( set.contains( \"stylesheet.css\" ) );\r\n-        JavadocVersion javadocVersion = (JavadocVersion) getVariableValueFromObject( mojo, \"javadocRuntimeVersion\" );\r\n-        if ( javadocVersion.compareTo( JavadocVersion.parse( \"1.7\" ) ) < 0 )\r\n+        JavaVersion javadocVersion = (JavaVersion) getVariableValueFromObject( mojo, \"javadocRuntimeVersion\" );\r\n+        if ( javadocVersion.isBefore( \"1.7\" ) )\r\n         {\r\n             assertTrue( set.contains( \"resources/inherit.gif\" ) );\r\n         }\r\n-        else if ( javadocVersion.compareTo( JavadocVersion.parse( \"1.8\" ) ) < 0 )\r\n+        else if ( javadocVersion.isBefore( \"1.8\" ) )\r\n         {\r\n             assertTrue( set.contains( \"resources/background.gif\" ) /* JDK7 */);\r\n         }\r"
            },
            {
                "sha": "f21e0638f88d973ae714cd34a40fdfaff997e52b",
                "filename": "src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c922342ed87805c236d68ccbf545efb17af0f965/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c922342ed87805c236d68ccbf545efb17af0f965/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/test/java/org/apache/maven/plugins/javadoc/JavadocReportTest.java?ref=c922342ed87805c236d68ccbf545efb17af0f965",
                "patch": "@@ -33,7 +33,6 @@\n import java.util.List;\r\n import java.util.Map;\r\n \r\n-import org.apache.commons.lang3.SystemUtils;\r\n import org.apache.maven.execution.MavenSession;\r\n import org.apache.maven.model.Plugin;\r\n import org.apache.maven.plugin.LegacySupport;\r\n@@ -47,6 +46,7 @@\n import org.apache.maven.repository.internal.MavenRepositorySystemSession;\r\n import org.apache.maven.settings.Proxy;\r\n import org.apache.maven.settings.Settings;\r\n+import org.codehaus.plexus.languages.java.version.JavaVersion;\r\n import org.codehaus.plexus.util.FileUtils;\r\n import org.codehaus.plexus.util.IOUtil;\r\n import org.codehaus.plexus.util.ReaderFactory;\r\n@@ -315,7 +315,7 @@ public void testDocfiles()\n     {\r\n         // Should be an assumption, but not supported by TestCase\r\n         // Seems like a bug in Javadoc 9\r\n-        if ( JavadocVersion.parse( SystemUtils.JAVA_SPECIFICATION_VERSION ).compareTo( JavadocVersion.parse( \"9\" ) ) == 0 )\r\n+        if ( JavaVersion.JAVA_SPECIFICATION_VERSION.compareTo( JavaVersion.parse( \"9\" ) ) == 0 )\r\n         {\r\n             return;\r\n         }\r\n@@ -578,7 +578,7 @@ public void testJdk5()\n     {\r\n         // Should be an assumption, but not supported by TestCase\r\n         // Java 5 not supported by Java9 anymore\r\n-        if ( JavadocVersion.parse( SystemUtils.JAVA_SPECIFICATION_VERSION ).compareTo( JavadocVersion.parse( \"9\" ) ) >= 0 )\r\n+        if ( JavaVersion.JAVA_SPECIFICATION_VERSION.isAtLeast( \"9\" ) )\r\n         {\r\n             return;\r\n         }\r\n@@ -660,8 +660,8 @@ public void testJavadocResources()\n         content = readFile( app );\r\n         assertTrue( content.contains( \"<img src=\\\"doc-files/maven-feather.png\\\" alt=\\\"Maven\\\">\" ) );\r\n \r\n-        JavadocVersion javadocVersion = (JavadocVersion) getVariableValueFromObject( mojo, \"javadocRuntimeVersion\" );\r\n-        if( javadocVersion.compareTo( JavadocVersion.parse( \"1.8\" ) ) >= 0  && javadocVersion.compareTo( JavadocVersion.parse( \"10\" ) ) < 0)\r\n+        JavaVersion javadocVersion = (JavaVersion) getVariableValueFromObject( mojo, \"javadocRuntimeVersion\" );\r\n+        if( javadocVersion.isAtLeast( \"1.8\" ) && javadocVersion.isBefore( \"10\" ) )\r\n         {\r\n             // https://bugs.openjdk.java.net/browse/JDK-8032205\r\n             assertTrue( \"Javadoc runtime version: \" + javadocVersion\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/e60358876e77f6a4d0d1cedc9e1ef17ed8351277",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/4ebb5bab48a1013e9326ec54122a5a1b65948d4f",
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@367807 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "maven-javadoc-plugin_3",
        "file": [
            {
                "sha": "836bd75c0500a2b507f2d06343b4f42976f6ec5c",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "status": "modified",
                "additions": 10,
                "deletions": 6,
                "changes": 16,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/e60358876e77f6a4d0d1cedc9e1ef17ed8351277/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/e60358876e77f6a4d0d1cedc9e1ef17ed8351277/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=e60358876e77f6a4d0d1cedc9e1ef17ed8351277",
                "patch": "@@ -816,13 +816,17 @@ else if ( \"private\".equalsIgnoreCase( show ) )\n             String year = String.valueOf( actualYear );\n \n             bottom = StringUtils.replace( bottom, \"{currentYear}\", year );\n-            if ( model.getInceptionYear().equals( year ) )\n-            {\n-                bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );                \n-            }\n-            else\n+\n+            if ( model != null  && model.getInceptionYear() != null )\n             {\n-                bottom = StringUtils.replace( bottom, \"{inceptionYear}\", model.getInceptionYear() );                \n+                if ( model.getInceptionYear().equals( year ) )\n+                {\n+                    bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );                \n+                }\n+                else\n+                {\n+                    bottom = StringUtils.replace( bottom, \"{inceptionYear}\", model.getInceptionYear() );                \n+                }\n             }\n \n             if ( StringUtils.isEmpty( stylesheetfile ) )"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/f0035265a99c96570c1e1c1596fa4e3043cb7f8c",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/29a8b037de0ca3ce5409ed9d88b233e3eaf29c40",
        "message": "prevent potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@911264 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "maven-javadoc-plugin_4",
        "file": [
            {
                "sha": "176b331229a8b7c6c798005f17fdceddd4d1e9a2",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/f0035265a99c96570c1e1c1596fa4e3043cb7f8c/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/f0035265a99c96570c1e1c1596fa4e3043cb7f8c/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=f0035265a99c96570c1e1c1596fa4e3043cb7f8c",
                "patch": "@@ -4759,7 +4759,7 @@ private List getDependenciesLinks()\n         {\n             Artifact artifact = (Artifact) it.next();\n \n-            if ( artifact != null && artifact.getFile().exists() )\n+            if ( artifact != null && artifact.getFile() != null && artifact.getFile().exists() )\n             {\n                 try\n                 {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/ba99d616eb396a65680d366ff1a757b1412a89ff",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/7545f804d4c9ac57a03a64f872e50c5305e8316b",
        "message": "o fixed a possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@554202 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "maven-javadoc-plugin_5",
        "file": [
            {
                "sha": "b78a39df703d1471f552c0257fc294a92c9b4605",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/ba99d616eb396a65680d366ff1a757b1412a89ff/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/ba99d616eb396a65680d366ff1a757b1412a89ff/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=ba99d616eb396a65680d366ff1a757b1412a89ff",
                "patch": "@@ -1517,7 +1517,10 @@ protected List getSourcePaths()\n         else\n         {\n             sourcePaths = new ArrayList( Arrays.asList( sourcepath.split( \"[;]\" ) ) );\n-            sourcePaths.add( getJavadocDirectory().getAbsolutePath() );\n+            if ( getJavadocDirectory() != null )\n+            {\n+                sourcePaths.add( getJavadocDirectory().getAbsolutePath() );\n+            }\n             sourcePaths = pruneSourceDirs( sourcePaths );\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/32c2dc1fb9ee3669df1fef9fa21b0458ab65f15b",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/7cd0d767b3c5a1be827c938521355d88c8a592e5",
        "message": "[MJAVADOC-251] Configuration of javadoc:javadoc fails with NPE upon disadvantageous order of config injection\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@800618 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "maven-javadoc-plugin_6",
        "file": [
            {
                "sha": "562c3d42a40f9324004dfe38dfb8a74c34982bba",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "status": "modified",
                "additions": 13,
                "deletions": 1,
                "changes": 14,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/32c2dc1fb9ee3669df1fef9fa21b0458ab65f15b/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/32c2dc1fb9ee3669df1fef9fa21b0458ab65f15b/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=32c2dc1fb9ee3669df1fef9fa21b0458ab65f15b",
                "patch": "@@ -237,7 +237,19 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) ) )\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    public void setDestDir( String destDir )\n+    {\n+        this.destDir = destDir;\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    private void updateReportOutputDirectory( File reportOutputDirectory, String destDir )\n+    {\n+        if ( reportOutputDirectory != null && destDir != null\n+             && !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) )\n         {\n             this.reportOutputDirectory = new File( reportOutputDirectory, destDir );\n         }"
            },
            {
                "sha": "b161d778618a969c1008d31a51e87ab88e5867e0",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java",
                "status": "modified",
                "additions": 13,
                "deletions": 1,
                "changes": 14,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/32c2dc1fb9ee3669df1fef9fa21b0458ab65f15b/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/32c2dc1fb9ee3669df1fef9fa21b0458ab65f15b/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java?ref=32c2dc1fb9ee3669df1fef9fa21b0458ab65f15b",
                "patch": "@@ -195,7 +195,19 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) ) )\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    public void setDestDir( String destDir )\n+    {\n+        this.destDir = destDir;\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    private void updateReportOutputDirectory( File reportOutputDirectory, String destDir )\n+    {\n+        if ( reportOutputDirectory != null && destDir != null\n+             && !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) )\n         {\n             this.reportOutputDirectory = new File( reportOutputDirectory, destDir );\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/a66d1322fd6b7bbba35a1bfecb86a6766d74d052",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/99b8d6aa84e862b7c4ac22152d1cc03b380ea7dc",
        "message": "MJAVADOC-139: NPE out of AbstractJavadocMojo::getSourcePaths() on multimodule project using aggregate\n\no as suggested, added subProject.getExecutionProject() != null condition\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@562710 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "maven-javadoc-plugin_7",
        "file": [
            {
                "sha": "3cd10b01d600c0d3514c39fa017ac2374be16f01",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/a66d1322fd6b7bbba35a1bfecb86a6766d74d052/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/a66d1322fd6b7bbba35a1bfecb86a6766d74d052/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=a66d1322fd6b7bbba35a1bfecb86a6766d74d052",
                "patch": "@@ -1502,11 +1502,14 @@ protected List getSourcePaths()\n                             sourcePaths.addAll( sourceRoots );\n                         }\n \n-                        String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n-                        File javadocDir = new File( subProject.getExecutionProject().getBasedir(), javadocDirRelative );\n-                        if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                        if ( subProject.getExecutionProject() != null )\n                         {\n-                            sourcePaths.add( javadocDir.getAbsolutePath() );\n+                            String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n+                            File javadocDir = new File( subProject.getExecutionProject().getBasedir(), javadocDirRelative );\n+                            if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                            {\n+                                sourcePaths.add( javadocDir.getAbsolutePath() );\n+                            }\n                         }\n                     }\n                 }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/b6e84b26f9158085972deaeeefb6d062482a7f70",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/15709f9acad2e6ffa7aabf7ba511373dcb0447c5",
        "message": "MJAVADOC-342: An incomplete fix for the NPE bugs in AbstractJavadocMojo.java\no protect all the calls to getJavadocDirectory\no update to threadsafe version of maven-shade-plugin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1385200 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "maven-javadoc-plugin_8",
        "file": [
            {
                "sha": "cbc53febb39922cb2a7eebad94cd9b23dd7d9964",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/b6e84b26f9158085972deaeeefb6d062482a7f70/pom.xml",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/b6e84b26f9158085972deaeeefb6d062482a7f70/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/pom.xml?ref=b6e84b26f9158085972deaeeefb6d062482a7f70",
                "patch": "@@ -266,7 +266,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-shade-plugin</artifactId>\n-          <version>1.2.1</version>\n+          <version>2.0</version>\n         </plugin>\n       </plugins>\n     </pluginManagement>"
            },
            {
                "sha": "b61be0e648339bcec02b2aa35fbd6058192cc407",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "status": "modified",
                "additions": 17,
                "deletions": 55,
                "changes": 72,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/b6e84b26f9158085972deaeeefb6d062482a7f70/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/b6e84b26f9158085972deaeeefb6d062482a7f70/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=b6e84b26f9158085972deaeeefb6d062482a7f70",
                "patch": "@@ -26,11 +26,7 @@\n import org.apache.maven.artifact.handler.ArtifactHandler;\n import org.apache.maven.artifact.metadata.ArtifactMetadataSource;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n-import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n-import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n-import org.apache.maven.artifact.resolver.ArtifactResolutionResult;\n-import org.apache.maven.artifact.resolver.ArtifactResolver;\n-import org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException;\n+import org.apache.maven.artifact.resolver.*;\n import org.apache.maven.artifact.resolver.filter.AndArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter;\n@@ -42,16 +38,7 @@\n import org.apache.maven.model.Resource;\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugin.MojoExecutionException;\n-import org.apache.maven.plugin.javadoc.options.BootclasspathArtifact;\n-import org.apache.maven.plugin.javadoc.options.DocletArtifact;\n-import org.apache.maven.plugin.javadoc.options.Group;\n-import org.apache.maven.plugin.javadoc.options.JavadocOptions;\n-import org.apache.maven.plugin.javadoc.options.JavadocPathArtifact;\n-import org.apache.maven.plugin.javadoc.options.OfflineLink;\n-import org.apache.maven.plugin.javadoc.options.ResourcesArtifact;\n-import org.apache.maven.plugin.javadoc.options.Tag;\n-import org.apache.maven.plugin.javadoc.options.Taglet;\n-import org.apache.maven.plugin.javadoc.options.TagletArtifact;\n+import org.apache.maven.plugin.javadoc.options.*;\n import org.apache.maven.plugin.javadoc.options.io.xpp3.JavadocOptionsXpp3Writer;\n import org.apache.maven.plugin.javadoc.resolver.JavadocBundle;\n import org.apache.maven.plugin.javadoc.resolver.ResourceResolver;\n@@ -76,43 +63,15 @@\n import org.codehaus.plexus.archiver.manager.ArchiverManager;\n import org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\n import org.codehaus.plexus.components.io.fileselectors.IncludeExcludeFileSelector;\n-import org.codehaus.plexus.util.FileUtils;\n-import org.codehaus.plexus.util.IOUtil;\n-import org.codehaus.plexus.util.ReaderFactory;\n-import org.codehaus.plexus.util.StringUtils;\n-import org.codehaus.plexus.util.WriterFactory;\n+import org.codehaus.plexus.util.*;\n import org.codehaus.plexus.util.cli.CommandLineException;\n import org.codehaus.plexus.util.cli.CommandLineUtils;\n import org.codehaus.plexus.util.cli.Commandline;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.FileWriter;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.Writer;\n-import java.net.MalformedURLException;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Calendar;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.LinkedHashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.Set;\n-import java.util.StringTokenizer;\n+import java.io.*;\n+import java.net.*;\n+import java.util.*;\n \n import static org.apache.maven.plugin.javadoc.JavadocUtil.*;\n import static org.codehaus.plexus.util.IOUtil.close;\n@@ -2102,14 +2061,17 @@ protected void executeReport( Locale unusedLocale )\n                             sourcePaths.addAll( JavadocUtil.pruneDirs( subProject, sourceRoots ) );\n                         }\n \n-                        String javadocDirRelative =\n-                            PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n-                        File javadocDir = new File( subProject.getBasedir(), javadocDirRelative );\n-                        if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                        if ( getJavadocDirectory() != null )\n                         {\n-                            List<String> l = JavadocUtil.pruneDirs( subProject, Collections.singletonList(\n-                                javadocDir.getAbsolutePath() ) );\n-                            sourcePaths.addAll( l );\n+                            String javadocDirRelative =\n+                                    PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n+                            File javadocDir = new File( subProject.getBasedir(), javadocDirRelative );\n+                            if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                            {\n+                                List<String> l = JavadocUtil.pruneDirs( subProject, Collections.singletonList(\n+                                        javadocDir.getAbsolutePath() ) );\n+                                sourcePaths.addAll( l );\n+                            }\n                         }\n                     }\n                 }\n@@ -4026,7 +3988,7 @@ private void copyJavadocResources( File anOutputDirectory )\n         {\n             for ( MavenProject subProject : reactorProjects )\n             {\n-                if ( subProject != project )\n+                if ( subProject != project && getJavadocDirectory() != null )\n                 {\n                     String javadocDirRelative =\n                         PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/maven-javadoc-plugin/commit/c3cf6bf65dba183e7ed2ee39b9aa9a19509f3f5c",
        "repo": "maven-javadoc-plugin",
        "parent": "https://github.com/apache/maven-javadoc-plugin/commit/0cb9ae58569645056349d12cbc38cb31098f7223",
        "message": "MSITE-138: site:stage does not create xref\n\no replaced all annotations for outputdirectory in Mojo Reports: ${project.build.directory}/site =>  ${project.reporting.outputDirectory}\no setReportOutputDirectory() in all Mojo reports (if required).\no handle outputdirectory for external reports in SiteRunMojo and in DoxiaFilter\no handle NPE for dependencies when site:run is called (due to MPIR-55)\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@433277 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "maven-javadoc-plugin_9",
        "file": [
            {
                "sha": "d0d452df78a6d48c516f4321c02a5df4a9ce9021",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c3cf6bf65dba183e7ed2ee39b9aa9a19509f3f5c/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c3cf6bf65dba183e7ed2ee39b9aa9a19509f3f5c/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=c3cf6bf65dba183e7ed2ee39b9aa9a19509f3f5c",
                "patch": "@@ -86,7 +86,7 @@\n      * Specifies the destination directory where javadoc saves the generated HTML files.\n      * See <a href=\"http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/javadoc.html#d\">d</a>.\n      *\n-     * @parameter expression=\"${destDir}\" alias=\"destDir\" default-value=\"${project.build.directory}/site/apidocs\"\n+     * @parameter expression=\"${destDir}\" alias=\"destDir\" default-value=\"${project.build.directory}/apidocs\"\n      * @required\n      */\n     protected File outputDirectory;\n@@ -1124,7 +1124,7 @@ private String getBottomText( String inceptionYear )\n         }\n         else\n         {\n-\t\tbottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );\n+            bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );\n         }\n         return bottom;\n     }"
            },
            {
                "sha": "1da68824e5e1db25329b9ea650f96c78be47a19d",
                "filename": "src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "status": "modified",
                "additions": 27,
                "deletions": 14,
                "changes": 41,
                "blob_url": "https://github.com/apache/maven-javadoc-plugin/blob/c3cf6bf65dba183e7ed2ee39b9aa9a19509f3f5c/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "raw_url": "https://github.com/apache/maven-javadoc-plugin/raw/c3cf6bf65dba183e7ed2ee39b9aa9a19509f3f5c/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "contents_url": "https://api.github.com/repos/apache/maven-javadoc-plugin/contents/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=c3cf6bf65dba183e7ed2ee39b9aa9a19509f3f5c",
                "patch": "@@ -32,8 +32,8 @@\n import java.util.Locale;\n \n /**\n- * Generates documentation for the Java code in the project using the standard\n- * <a href=\"http://java.sun.com/j2se/javadoc/\">Javadoc Tool</a> tool.\n+ * Generates documentation for the Java code in the project using the standard <a\n+ * href=\"http://java.sun.com/j2se/javadoc/\">Javadoc Tool</a> tool.\n  *\n  * @author <a href=\"mailto:evenisse@apache.org\">Emmanuel Venisse</a>\n  * @author <a href=\"mailto:vincent.siveton@gmail.com\">Vincent Siveton</a>\n@@ -58,6 +58,12 @@\n      */\n     private Renderer siteRenderer;\n \n+    /**\n+     * Specifies the destination directory where javadoc saves the generated HTML files.\n+     *\n+     * @parameter expression=\"${project.reporting.outputDirectory}/apidocs\"\n+     * @required\n+     */\n     private File reportOutputDirectory;\n \n     // ----------------------------------------------------------------------\n@@ -103,6 +109,7 @@ protected Renderer getSiteRenderer()\n     public void generate( Sink sink, Locale locale )\n         throws MavenReportException\n     {\n+        outputDirectory = getReportOutputDirectory();\n         executeReport( locale );\n     }\n \n@@ -142,7 +149,7 @@ public boolean canGenerateReport()\n         }\n         return canGenerate;\n     }\n-    \n+\n     /**\n      * @see org.apache.maven.reporting.MavenReport#getCategoryName()\n      */\n@@ -158,8 +165,9 @@ public File getReportOutputDirectory()\n     {\n         if ( reportOutputDirectory == null )\n         {\n-            reportOutputDirectory = new File( getOutputDirectory() );\n+            return outputDirectory;\n         }\n+\n         return reportOutputDirectory;\n     }\n \n@@ -170,7 +178,14 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        this.reportOutputDirectory = reportOutputDirectory;\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"apidocs\" ) ) )\n+        {\n+            this.reportOutputDirectory = new File( reportOutputDirectory, \"apidocs\" );\n+        }\n+        else\n+        {\n+            this.reportOutputDirectory = reportOutputDirectory;\n+        }\n     }\n \n     /**\n@@ -181,26 +196,24 @@ public void execute()\n     {\n         try\n         {\n-            String outputDirectory = getOutputDirectory();\n-\n-            SiteRendererSink sink = siteRenderer.createSink( new File( outputDirectory ), getOutputName() + \".html\" );\n+            SiteRendererSink sink = siteRenderer.createSink( getReportOutputDirectory(), getOutputName() + \".html\" );\n \n             generate( sink, Locale.getDefault() );\n         }\n         catch ( RendererException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n         catch ( IOException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n         catch ( MavenReportException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n     }\n }"
            }
        ]
    }
]
