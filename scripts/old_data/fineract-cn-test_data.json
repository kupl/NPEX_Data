[
    {
        "commit": "https://github.com/apache/fineract-cn-test/commit/ffe5cacce4630cba8f0d79edaf8918cb10b45695",
        "repo": "fineract-cn-test",
        "parent": "https://github.com/apache/fineract-cn-test/commit/91590c3cc1e689e0ee37f3563670254347266516",
        "message": "Fixed NPE, removed code warning.",
        "bug_id": "fineract-cn-test_1",
        "file": [
            {
                "sha": "711a8738f8767169d9c25e4ddac8f4649540fbc4",
                "filename": "src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/fineract-cn-test/blob/ffe5cacce4630cba8f0d79edaf8918cb10b45695/src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java",
                "raw_url": "https://github.com/apache/fineract-cn-test/raw/ffe5cacce4630cba8f0d79edaf8918cb10b45695/src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java",
                "contents_url": "https://api.github.com/repos/apache/fineract-cn-test/contents/src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java?ref=ffe5cacce4630cba8f0d79edaf8918cb10b45695",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.fineract.cn.test.listener;\n \n import com.google.gson.Gson;\n+import java.util.Objects;\n import org.apache.fineract.cn.lang.TenantContextHolder;\n import org.slf4j.Logger;\n \n@@ -49,10 +50,10 @@\n \n   @Override\n   public <T> boolean wait(final String operation, final T payloadMatcher) throws InterruptedException {\n-    return waitForMatch(operation, new Function() {\n+    return waitForMatch(operation, new Function<T, Boolean>() {\n       @Override\n-      public Object apply(Object x) {\n-        return x.equals(payloadMatcher);\n+      public Boolean apply(Object x) {\n+        return Objects.equals(x,payloadMatcher);\n       }\n \n       @Override"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/fineract-cn-test/commit/4d6c77ba9dc7a0269ead4e0d4380b1b48cde9fe7",
        "repo": "fineract-cn-test",
        "parent": "https://github.com/apache/fineract-cn-test/commit/1529275dedaa2d4ef10fa2d61c722bac62f0dada",
        "message": "Merge pull request #6 from myrle-krantz/develop\n\nFixed NPE, removed code warning.",
        "bug_id": "fineract-cn-test_2",
        "file": [
            {
                "sha": "711a8738f8767169d9c25e4ddac8f4649540fbc4",
                "filename": "src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/fineract-cn-test/blob/4d6c77ba9dc7a0269ead4e0d4380b1b48cde9fe7/src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java",
                "raw_url": "https://github.com/apache/fineract-cn-test/raw/4d6c77ba9dc7a0269ead4e0d4380b1b48cde9fe7/src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java",
                "contents_url": "https://api.github.com/repos/apache/fineract-cn-test/contents/src/main/java/org/apache/fineract/cn/test/listener/InMemoryEventRecorder.java?ref=4d6c77ba9dc7a0269ead4e0d4380b1b48cde9fe7",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.fineract.cn.test.listener;\n \n import com.google.gson.Gson;\n+import java.util.Objects;\n import org.apache.fineract.cn.lang.TenantContextHolder;\n import org.slf4j.Logger;\n \n@@ -49,10 +50,10 @@\n \n   @Override\n   public <T> boolean wait(final String operation, final T payloadMatcher) throws InterruptedException {\n-    return waitForMatch(operation, new Function() {\n+    return waitForMatch(operation, new Function<T, Boolean>() {\n       @Override\n-      public Object apply(Object x) {\n-        return x.equals(payloadMatcher);\n+      public Boolean apply(Object x) {\n+        return Objects.equals(x,payloadMatcher);\n       }\n \n       @Override"
            }
        ]
    }
]
