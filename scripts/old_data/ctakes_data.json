[
    {
        "commit": "https://github.com/apache/ctakes/commit/fe2d320f3f1bcc70cc12b5aa24fb38e4a4e80e1e",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/4362286291a9a720f63bf28bf547118dd965e552",
        "message": "Prevent npe on close if the reader never initialized\n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1856349 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_1",
        "file": [
            {
                "sha": "8c7d5dfb268a9a898b0164d527e559e5364fcc6a",
                "filename": "ctakes-core/src/main/java/org/apache/ctakes/core/cr/jdbc/JdbcNotesReader.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ctakes/blob/fe2d320f3f1bcc70cc12b5aa24fb38e4a4e80e1e/ctakes-core/src/main/java/org/apache/ctakes/core/cr/jdbc/JdbcNotesReader.java",
                "raw_url": "https://github.com/apache/ctakes/raw/fe2d320f3f1bcc70cc12b5aa24fb38e4a4e80e1e/ctakes-core/src/main/java/org/apache/ctakes/core/cr/jdbc/JdbcNotesReader.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-core/src/main/java/org/apache/ctakes/core/cr/jdbc/JdbcNotesReader.java?ref=fe2d320f3f1bcc70cc12b5aa24fb38e4a4e80e1e",
                "patch": "@@ -417,11 +417,11 @@ public void close() throws IOException {\n       LOGGER.info( getClass().getName() + \" read \" + _totalRowCount + \" documents in \"\n                    + days + \" days, \" + hours + \" hours, \" + minutes + \" minutes and \" + seconds + \" seconds\" );\n       try {\n-         if ( !_resultSet.isClosed() ) {\n+         if ( _resultSet != null && !_resultSet.isClosed() ) {\n             // Some jdbc drivers may not close the ResultSet when the PreparedStatement is closed\n             _resultSet.close();\n          }\n-         if ( !_preparedStatement.isClosed() ) {\n+         if ( _preparedStatement != null && !_preparedStatement.isClosed() ) {\n             _preparedStatement.close();\n          }\n       } catch ( SQLException sqlE ) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ctakes/commit/9be35924903230757b7c1b84374f33653c9bcf36",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/2fecd07acc7fd5d34caa114333824f8158efe182",
        "message": "CTAKES-481: NullPointerException might be thrown as \"object\" might be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1815629 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_2",
        "file": [
            {
                "sha": "b656c66c18aa4b5b8ed95557871ace3578959ebe",
                "filename": "ctakes-assertion/src/main/java/org/apache/ctakes/assertion/cr/RelationInfo.java",
                "status": "modified",
                "additions": 10,
                "deletions": 9,
                "changes": 19,
                "blob_url": "https://github.com/apache/ctakes/blob/9be35924903230757b7c1b84374f33653c9bcf36/ctakes-assertion/src/main/java/org/apache/ctakes/assertion/cr/RelationInfo.java",
                "raw_url": "https://github.com/apache/ctakes/raw/9be35924903230757b7c1b84374f33653c9bcf36/ctakes-assertion/src/main/java/org/apache/ctakes/assertion/cr/RelationInfo.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-assertion/src/main/java/org/apache/ctakes/assertion/cr/RelationInfo.java?ref=9be35924903230757b7c1b84374f33653c9bcf36",
                "patch": "@@ -55,15 +55,16 @@ public String toString() {\n    */\n   @Override\n   public boolean equals(Object object) {\n-  \t\n-  \tboolean isEqual = false;\n-  \t\t\t\n-  \tif(this.getClass() == object.getClass()) {\n-  \t\tRelationInfo relationInfo = (RelationInfo) object;\n-  \t\tisEqual = (this.id1.equals(relationInfo.id1) && this.id2.equals(relationInfo.id2));\n-  \t}\n-  \t\n-  \treturn isEqual;\n+  \tif (this == object) {\n+  \t\treturn true;\n+    }\n+    if (object == null || getClass() != object.getClass()) {\n+  \t\treturn false;\n+    }\n+\n+    final RelationInfo that = (RelationInfo) object;\n+  \treturn this.id1.equals(that.id1) &&\n+\t\t   this.id2.equals(that.id2);\n   }\n   \n   /*"
            },
            {
                "sha": "2a713c0f25a09964a0c115ef1a7605b1b746815e",
                "filename": "ctakes-assertion/src/main/java/org/apache/ctakes/assertion/eval/AnnotationStatisticsCompact.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/apache/ctakes/blob/9be35924903230757b7c1b84374f33653c9bcf36/ctakes-assertion/src/main/java/org/apache/ctakes/assertion/eval/AnnotationStatisticsCompact.java",
                "raw_url": "https://github.com/apache/ctakes/raw/9be35924903230757b7c1b84374f33653c9bcf36/ctakes-assertion/src/main/java/org/apache/ctakes/assertion/eval/AnnotationStatisticsCompact.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-assertion/src/main/java/org/apache/ctakes/assertion/eval/AnnotationStatisticsCompact.java?ref=9be35924903230757b7c1b84374f33653c9bcf36",
                "patch": "@@ -469,13 +469,19 @@ public int hashCode() {\n       return Objects.hashCode(this.begin, this.end);\n     }\n \n+    // TODO: use consistent naming convention (obj vs o vs object) in equals\n     @Override\n     public boolean equals(Object obj) {\n-      if (!this.getClass().equals(obj.getClass())) {\n+      if (this == obj) {\n+        return true;\n+      }\n+      if (obj == null || getClass() != obj.getClass()) {\n         return false;\n       }\n-      Span that = (Span) obj;\n-      return this.begin == that.begin && this.end == that.end;\n+\n+      final Span that = (Span) obj;\n+      return  this.begin == that.begin &&\n+              this.end == that.end;\n     }\n \n     @Override"
            },
            {
                "sha": "5302f488c3b30278265c63d8a11aafb2c089fabe",
                "filename": "ctakes-relation-extractor/src/main/java/org/apache/ctakes/relationextractor/knowtator/RelationInfo.java",
                "status": "modified",
                "additions": 10,
                "deletions": 9,
                "changes": 19,
                "blob_url": "https://github.com/apache/ctakes/blob/9be35924903230757b7c1b84374f33653c9bcf36/ctakes-relation-extractor/src/main/java/org/apache/ctakes/relationextractor/knowtator/RelationInfo.java",
                "raw_url": "https://github.com/apache/ctakes/raw/9be35924903230757b7c1b84374f33653c9bcf36/ctakes-relation-extractor/src/main/java/org/apache/ctakes/relationextractor/knowtator/RelationInfo.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-relation-extractor/src/main/java/org/apache/ctakes/relationextractor/knowtator/RelationInfo.java?ref=9be35924903230757b7c1b84374f33653c9bcf36",
                "patch": "@@ -55,15 +55,16 @@ public String toString() {\n    */\n   @Override\n   public boolean equals(Object object) {\n-  \t\n-  \tboolean isEqual = false;\n-  \t\t\t\n-  \tif(this.getClass() == object.getClass()) {\n-  \t\tRelationInfo relationInfo = (RelationInfo) object;\n-  \t\tisEqual = (this.id1.equals(relationInfo.id1) && this.id2.equals(relationInfo.id2));\n-  \t}\n-  \t\n-  \treturn isEqual;\n+\tif (this == object) {\n+\t  return true;\n+\t}\n+\tif (object == null || getClass() != object.getClass()) {\n+\t  return false;\n+\t}\n+\n+\tfinal RelationInfo that = (RelationInfo) object;\n+  \treturn  this.id1.equals(that.id1) &&\n+\t\t    this.id2.equals(that.id2);\n   }\n   \n   /*"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ctakes/commit/4aec230cc68aef69b9f0a27bdf64373dec3e19b4",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/3fdacd5e37e01f3f0353f8871d732837293981cd",
        "message": "Fix Possible NPE in headnode resolution\n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1827434 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_3",
        "file": [
            {
                "sha": "aa6c0b594f461bdf822de4ebe5df55fbcc7059d6",
                "filename": "ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java",
                "status": "modified",
                "additions": 11,
                "deletions": 13,
                "changes": 24,
                "blob_url": "https://github.com/apache/ctakes/blob/4aec230cc68aef69b9f0a27bdf64373dec3e19b4/ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java",
                "raw_url": "https://github.com/apache/ctakes/raw/4aec230cc68aef69b9f0a27bdf64373dec3e19b4/ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java?ref=4aec230cc68aef69b9f0a27bdf64373dec3e19b4",
                "patch": "@@ -135,17 +135,17 @@ public static ConllDependencyNode getNominalHeadNode(\n \t\tfor (int id1=0; id1<anodes.size(); id1++) {\n \t\t\tfor (int id2=0; id2<anodes.size(); id2++) {\n \t\t\t\t// no head-dependency relationship between id1 and id2\n-//\t\t\t\tmatrixofheads[ id2 ][ id1 ]\n-//\t\t\t\t\t\t= id1 != id2\n-//\t\t\t\t\t\t  && anodes.get( id2 ).getHead() != null\n-//\t\t\t\t\t\t  && anodes.get( id1 ).getId() == anodes.get( id2 ).getHead().getId();\n-\t\t\t\tif (id1==id2 || anodes.get(id1).getId()!=anodes.get(id2).getHead().getId()) {\n-\t\t\t\t\tmatrixofheads[id2][id1]=false;\n-\t\t\t\t}\n-\t\t\t\t// a match\n-\t\t\t\telse {\n-\t\t\t\t\tmatrixofheads[id2][id1]=true;\n-\t\t\t\t}\n+\t\t\t\tmatrixofheads[ id2 ][ id1 ]\n+\t\t\t\t\t\t= id1 != id2\n+\t\t\t\t\t\t  && anodes.get( id2 ).getHead() != null\n+\t\t\t\t\t\t  && anodes.get( id1 ).getId() == anodes.get( id2 ).getHead().getId();\n+//\t\t\t\tif (id1==id2 || anodes.get(id1).getId()!=anodes.get(id2).getHead().getId()) {\n+//\t\t\t\t\tmatrixofheads[id2][id1]=false;\n+//\t\t\t\t}\n+//\t\t\t\t// a match\n+//\t\t\t\telse {\n+//\t\t\t\t\tmatrixofheads[id2][id1]=true;\n+//\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\t\t\n@@ -176,7 +176,6 @@ public static ConllDependencyNode getNominalHeadNode(\n \t\t\tfor (int i=0; i<anodes.size(); i++) {\n \t\t\t\tif ( anodes.get( i ) != null && anodes.get( i ).getPostag() != null\n \t\t\t\t\t  && N_DOT_PATTERN.matcher( anodes.get( i ).getPostag() ).matches() ) {\n-//\t\t\t\t\tif (Pattern.matches(\"N..?\", anodes.get(i).getPostag())) {\n \t\t\t\t\treturn anodes.get(i);\n \t\t\t\t}\n \t\t\t}\n@@ -189,7 +188,6 @@ public static ConllDependencyNode getNominalHeadNode(\n \t\t\tfor (int i=0; i<outnodes.size(); i++) {\n \t\t\t\tif ( outnodes.get( i ) != null && outnodes.get( i ).getPostag() != null\n \t\t\t\t\t  && N_DOT_PATTERN.matcher( outnodes.get( i ).getPostag() ).matches() ) {\n-//\t\t\t\tif (Pattern.matches(\"N..?\", outnodes.get(i).getPostag())) {\n \t\t\t\t\treturn outnodes.get(i);\n \t\t\t\t}\n \t\t\t}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ctakes/commit/3fdacd5e37e01f3f0353f8871d732837293981cd",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/bbb79feb065bf53e0c873aecf80cf300bbfa815c",
        "message": "Fix Possible NPE in headnode resolution\n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1827347 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_4",
        "file": [
            {
                "sha": "ab43e6c11ca6af134fb6a854aa23073e67315f76",
                "filename": "ctakes-core/src/main/java/org/apache/ctakes/core/util/EssentialAnnotationUtil.java",
                "status": "modified",
                "additions": 10,
                "deletions": 14,
                "changes": 24,
                "blob_url": "https://github.com/apache/ctakes/blob/3fdacd5e37e01f3f0353f8871d732837293981cd/ctakes-core/src/main/java/org/apache/ctakes/core/util/EssentialAnnotationUtil.java",
                "raw_url": "https://github.com/apache/ctakes/raw/3fdacd5e37e01f3f0353f8871d732837293981cd/ctakes-core/src/main/java/org/apache/ctakes/core/util/EssentialAnnotationUtil.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-core/src/main/java/org/apache/ctakes/core/util/EssentialAnnotationUtil.java?ref=3fdacd5e37e01f3f0353f8871d732837293981cd",
                "patch": "@@ -31,6 +31,8 @@\n    private EssentialAnnotationUtil() {\n    }\n \n+   static private final Pattern N_DOT_PATTERN = Pattern.compile( \"N..?\" );\n+\n    static private final java.util.function.Predicate<Annotation> ESSENTIALS\n          = a -> EventMention.class.isInstance( a )\n          || TimeMention.class.isInstance( a )\n@@ -205,16 +207,10 @@ static public ConllDependencyNode getNominalHeadNode( final List<ConllDependency\n       for ( int id1 = 0; id1 < anodes.size(); id1++ ) {\n          for ( int id2 = 0; id2 < anodes.size(); id2++ ) {\n             // no head-dependency relationship between id1 and id2\n-            if ( id1 == id2 || anodes.get( id1 )\n-                  .getId() != anodes.get( id2 )\n-                  .getHead()\n-                  .getId() ) {\n-               matrixofheads[ id2 ][ id1 ] = false;\n-            }\n-            // a match\n-            else {\n-               matrixofheads[ id2 ][ id1 ] = true;\n-            }\n+            matrixofheads[ id2 ][ id1 ]\n+                  = id1 != id2\n+                    && anodes.get( id2 ).getHead() != null\n+                    && anodes.get( id1 ).getId() == anodes.get( id2 ).getHead().getId();\n          }\n       }\n \n@@ -243,8 +239,8 @@ static public ConllDependencyNode getNominalHeadNode( final List<ConllDependency\n       if ( outnodes.isEmpty() ) {\n          // pick a noun from the left, if there is one\n          for ( int i = 0; i < anodes.size(); i++ ) {\n-            if ( Pattern.matches( \"N..?\", anodes.get( i )\n-                  .getPostag() ) ) {\n+            if ( anodes.get( i ) != null && anodes.get( i ).getPostag() != null\n+                 && N_DOT_PATTERN.matcher( anodes.get( i ).getPostag() ).matches() ) {\n                return anodes.get( i );\n             }\n          }\n@@ -255,8 +251,8 @@ static public ConllDependencyNode getNominalHeadNode( final List<ConllDependency\n       else {\n          // pick a noun from the left, if there is one\n          for ( int i = 0; i < outnodes.size(); i++ ) {\n-            if ( Pattern.matches( \"N..?\", outnodes.get( i )\n-                  .getPostag() ) ) {\n+            if ( outnodes.get( i ) != null && outnodes.get( i ).getPostag() != null\n+                 && N_DOT_PATTERN.matcher( outnodes.get( i ).getPostag() ).matches() ) {\n                return outnodes.get( i );\n             }\n          }"
            },
            {
                "sha": "c9619f4189db331c37b13ddcc661a6d82e5db643",
                "filename": "ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java",
                "status": "modified",
                "additions": 13,
                "deletions": 3,
                "changes": 16,
                "blob_url": "https://github.com/apache/ctakes/blob/3fdacd5e37e01f3f0353f8871d732837293981cd/ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java",
                "raw_url": "https://github.com/apache/ctakes/raw/3fdacd5e37e01f3f0353f8871d732837293981cd/ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-dependency-parser/src/main/java/org/apache/ctakes/dependency/parser/util/DependencyUtility.java?ref=3fdacd5e37e01f3f0353f8871d732837293981cd",
                "patch": "@@ -39,6 +39,8 @@\n \n \tpublic static Logger logger = Logger.getLogger(\"org.apache.ctakes.dependency.parser.util.DependencyUtility\");\n \n+\tstatic private final Pattern N_DOT_PATTERN = Pattern.compile( \"N..?\" );\n+\n \tpublic static void addToIndexes( JCas jcas, ArrayList<ConllDependencyNode> nodes ) {\n \t\tfor (int i=0; i<nodes.size(); i++) {\n \t\t\t// Enter UIMA nodes into index\n@@ -133,9 +135,13 @@ public static ConllDependencyNode getNominalHeadNode(\n \t\tfor (int id1=0; id1<anodes.size(); id1++) {\n \t\t\tfor (int id2=0; id2<anodes.size(); id2++) {\n \t\t\t\t// no head-dependency relationship between id1 and id2\n+//\t\t\t\tmatrixofheads[ id2 ][ id1 ]\n+//\t\t\t\t\t\t= id1 != id2\n+//\t\t\t\t\t\t  && anodes.get( id2 ).getHead() != null\n+//\t\t\t\t\t\t  && anodes.get( id1 ).getId() == anodes.get( id2 ).getHead().getId();\n \t\t\t\tif (id1==id2 || anodes.get(id1).getId()!=anodes.get(id2).getHead().getId()) {\n \t\t\t\t\tmatrixofheads[id2][id1]=false;\n-\t\t\t\t} \n+\t\t\t\t}\n \t\t\t\t// a match\n \t\t\t\telse {\n \t\t\t\t\tmatrixofheads[id2][id1]=true;\n@@ -168,7 +174,9 @@ public static ConllDependencyNode getNominalHeadNode(\n \t\tif (outnodes.isEmpty()) {\n \t\t\t// pick a noun from the left, if there is one\n \t\t\tfor (int i=0; i<anodes.size(); i++) {\n-\t\t\t\tif (Pattern.matches(\"N..?\", anodes.get(i).getPostag())) {\n+\t\t\t\tif ( anodes.get( i ) != null && anodes.get( i ).getPostag() != null\n+\t\t\t\t\t  && N_DOT_PATTERN.matcher( anodes.get( i ).getPostag() ).matches() ) {\n+//\t\t\t\t\tif (Pattern.matches(\"N..?\", anodes.get(i).getPostag())) {\n \t\t\t\t\treturn anodes.get(i);\n \t\t\t\t}\n \t\t\t}\n@@ -179,7 +187,9 @@ public static ConllDependencyNode getNominalHeadNode(\n \t\telse {\n \t\t\t// pick a noun from the left, if there is one\n \t\t\tfor (int i=0; i<outnodes.size(); i++) {\n-\t\t\t\tif (Pattern.matches(\"N..?\", outnodes.get(i).getPostag())) {\n+\t\t\t\tif ( outnodes.get( i ) != null && outnodes.get( i ).getPostag() != null\n+\t\t\t\t\t  && N_DOT_PATTERN.matcher( outnodes.get( i ).getPostag() ).matches() ) {\n+//\t\t\t\tif (Pattern.matches(\"N..?\", outnodes.get(i).getPostag())) {\n \t\t\t\t\treturn outnodes.get(i);\n \t\t\t\t}\n \t\t\t}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ctakes/commit/d211b4478ac0fdddf640dd08da0315e2a466855a",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/98d7c2d0681417519effb71f190e15ea4896ce46",
        "message": "ctakes-442 : npe in synth lnf\n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1793295 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_5",
        "file": [
            {
                "sha": "de880692901f499327fc9752e85e95a5d86ef7f8",
                "filename": "ctakes-gui/src/main/java/org/apache/ctakes/gui/pipeline/MainPanel2.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ctakes/blob/d211b4478ac0fdddf640dd08da0315e2a466855a/ctakes-gui/src/main/java/org/apache/ctakes/gui/pipeline/MainPanel2.java",
                "raw_url": "https://github.com/apache/ctakes/raw/d211b4478ac0fdddf640dd08da0315e2a466855a/ctakes-gui/src/main/java/org/apache/ctakes/gui/pipeline/MainPanel2.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-gui/src/main/java/org/apache/ctakes/gui/pipeline/MainPanel2.java?ref=d211b4478ac0fdddf640dd08da0315e2a466855a",
                "patch": "@@ -91,7 +91,7 @@\n    private JComponent createWestPanel() {\n       final JTable fakeTable = new JTable();\n       final JTableHeader fakeHeader = fakeTable.getTableHeader();\n-      final Component header = fakeHeader.getDefaultRenderer().getTableCellRendererComponent( null,\n+      final Component header = fakeHeader.getDefaultRenderer().getTableCellRendererComponent( fakeTable,\n             \"Available Pipe Bits\", false, false, -1, -1 );\n       ((JLabel)header).setHorizontalAlignment( SwingConstants.CENTER );\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ctakes/commit/8259ff8bb3858db2ca98077d7d6dd3d58efa497f",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/dae678673130d8c09c0653d6aacf2ba85cf650df",
        "message": "Fixing NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1765525 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_6",
        "file": [
            {
                "sha": "f783305892a5a92718818d06f08311784334fb2c",
                "filename": "ctakes-coreference/src/main/java/org/apache/ctakes/coreference/ae/pairing/cluster/ClusterMentionPairer_ImplBase.java",
                "status": "modified",
                "additions": 10,
                "deletions": 10,
                "changes": 20,
                "blob_url": "https://github.com/apache/ctakes/blob/8259ff8bb3858db2ca98077d7d6dd3d58efa497f/ctakes-coreference/src/main/java/org/apache/ctakes/coreference/ae/pairing/cluster/ClusterMentionPairer_ImplBase.java",
                "raw_url": "https://github.com/apache/ctakes/raw/8259ff8bb3858db2ca98077d7d6dd3d58efa497f/ctakes-coreference/src/main/java/org/apache/ctakes/coreference/ae/pairing/cluster/ClusterMentionPairer_ImplBase.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-coreference/src/main/java/org/apache/ctakes/coreference/ae/pairing/cluster/ClusterMentionPairer_ImplBase.java?ref=8259ff8bb3858db2ca98077d7d6dd3d58efa497f",
                "patch": "@@ -1,16 +1,7 @@\n package org.apache.ctakes.coreference.ae.pairing.cluster;\n \n-import static org.apache.ctakes.coreference.ae.MarkableHeadTreeCreator.getKey;\n-\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n import org.apache.ctakes.coreference.ae.MentionClusterCoreferenceAnnotator.CollectionTextRelationIdentifiedAnnotationPair;\n import org.apache.ctakes.coreference.ae.pairing.AnnotationPairer;\n-//import org.apache.ctakes.dependency.parser.util.DependencyUtility;\n import org.apache.ctakes.typesystem.type.relation.CollectionTextRelation;\n import org.apache.ctakes.typesystem.type.syntax.ConllDependencyNode;\n import org.apache.ctakes.typesystem.type.textsem.IdentifiedAnnotation;\n@@ -20,6 +11,12 @@\n import org.apache.uima.jcas.JCas;\n import org.apache.uima.jcas.tcas.Annotation;\n \n+import java.util.*;\n+\n+import static org.apache.ctakes.coreference.ae.MarkableHeadTreeCreator.getKey;\n+\n+//import org.apache.ctakes.dependency.parser.util.DependencyUtility;\n+\n public abstract class ClusterMentionPairer_ImplBase implements AnnotationPairer<Markable, CollectionTextRelationIdentifiedAnnotationPair> {\n   public abstract List<CollectionTextRelationIdentifiedAnnotationPair> getPairs(JCas jcas, Markable m);\n   private Map<ConllDependencyNode,Collection<IdentifiedAnnotation>> nodeEntMap = null;\n@@ -42,7 +39,10 @@ public void reset(JCas jcas){\n     IdentifiedAnnotation bestEnt = null;\n     Set<IdentifiedAnnotation> otherBestEnts = new HashSet<>();\n     ConllDependencyNode head = MapFactory.get(getKey(jcas), markable);\n-    \n+    if ( head == null ) {\n+      return Collections.emptySet();\n+    }\n+\n     Collection<IdentifiedAnnotation> coveringEnts = nodeEntMap.get(head);\n     for(IdentifiedAnnotation ent : coveringEnts){\n       if(ent.getOntologyConceptArr() == null) continue; // skip non-umls entities."
            },
            {
                "sha": "40924051890fe602e93b7f06730b59f1f4139ecd",
                "filename": "ctakes-utils/src/main/java/org/apache/ctakes/utils/struct/MapFactory.java",
                "status": "modified",
                "additions": 6,
                "deletions": 3,
                "changes": 9,
                "blob_url": "https://github.com/apache/ctakes/blob/8259ff8bb3858db2ca98077d7d6dd3d58efa497f/ctakes-utils/src/main/java/org/apache/ctakes/utils/struct/MapFactory.java",
                "raw_url": "https://github.com/apache/ctakes/raw/8259ff8bb3858db2ca98077d7d6dd3d58efa497f/ctakes-utils/src/main/java/org/apache/ctakes/utils/struct/MapFactory.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-utils/src/main/java/org/apache/ctakes/utils/struct/MapFactory.java?ref=8259ff8bb3858db2ca98077d7d6dd3d58efa497f",
                "patch": "@@ -1,16 +1,19 @@\n package org.apache.ctakes.utils.struct;\n \n+import org.apache.uima.jcas.cas.TOP;\n+\n import java.util.HashMap;\n import java.util.Map;\n \n-import org.apache.uima.jcas.cas.TOP;\n-\n public class MapFactory {\n   private static Map<String, Map<?,?>> mapIndex = new HashMap<>();\n \n   public static <K extends TOP,V extends TOP> V get(String mapId, K key){\n     Map<?,?> map = mapIndex.get(mapId);\n-    return (V) map.get(key);\n+    if ( map != null ) {\n+      return (V)map.get( key );\n+    }\n+    return null;\n   }\n   \n   public static <K extends TOP,V extends TOP> void put(String mapId, K key, V value){"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ctakes/commit/2738d9a34300cc4b1ed84e57f9836020c90cb2d0",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/d8fbe9b53d59516382b28edeb391a42a696da5ef",
        "message": "CTAKES-275 method declares throws IOException, so throw that if get NPE for can't find parent dir because file not found\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1789840 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_7",
        "file": [
            {
                "sha": "23474a514fa34baca58fa91b036cc0485dfb1c82",
                "filename": "ctakes-core/src/main/java/org/apache/ctakes/core/ae/SentenceDetector.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/ctakes/blob/2738d9a34300cc4b1ed84e57f9836020c90cb2d0/ctakes-core/src/main/java/org/apache/ctakes/core/ae/SentenceDetector.java",
                "raw_url": "https://github.com/apache/ctakes/raw/2738d9a34300cc4b1ed84e57f9836020c90cb2d0/ctakes-core/src/main/java/org/apache/ctakes/core/ae/SentenceDetector.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-core/src/main/java/org/apache/ctakes/core/ae/SentenceDetector.java?ref=2738d9a34300cc4b1ed84e57f9836020c90cb2d0",
                "patch": "@@ -349,7 +349,12 @@ public static File getReadableFile(String fn) throws IOException {\n \n \tpublic static File getFileInExistingDir(String fn) throws IOException {\n \t\tFile f = new File(fn);\n-\t\tif (!f.getParentFile().isDirectory()) {\n+\t\tFile parent = f.getParentFile();\n+\t\tif (parent == null) {\n+\t\t\tthrow new IOException(\"Parent of directory not found: \"\n+\t\t\t\t\t+ f.getAbsolutePath());\n+\t\t}\n+\t\tif (!parent.isDirectory()) {\n \t\t\tthrow new IOException(\"Directory not found: \"\n \t\t\t\t\t+ f.getParentFile().getAbsolutePath());\n \t\t}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ctakes/commit/9f20bf17a4fe8b1fc1837aef55400815623f07b2",
        "repo": "ctakes",
        "parent": "https://github.com/apache/ctakes/commit/da29b207602b74298f83d444c9a1c1e35cc10b0a",
        "message": "CTAKES-253 - YTEX ctakes patches port. Thanks Vijay Garla.\n* ctakes-context-tokenizer\\src\\main\\java\\org\\apache\\ctakes\\contexttokenizer\\ae\\ContextDependentTokenizerAnnotator.java \nadd null check: changed to avoid NPE in case BaseToken is null. Also ignore newline tokens (they should be treated as whitespace). \n* ctakes-core\\src\\main\\java\\org\\apache\\ctakes\\core\\fsm\\adapters\\NumberTokenAdapter.java \nadd null check: ignore empty numbertokens \n* ctakes-core\\src\\main\\java\\org\\apache\\ctakes\\core\\fsm\\machine\\DateFSM.java \nModified to include years in dates \n\ngit-svn-id: https://svn.apache.org/repos/asf/ctakes/trunk@1538670 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ctakes_8",
        "file": [
            {
                "sha": "a906fd7f04f5e6d20fd580d9dba64efc1a7b1745",
                "filename": "ctakes-context-tokenizer/src/main/java/org/apache/ctakes/contexttokenizer/ae/ContextDependentTokenizerAnnotator.java",
                "status": "modified",
                "additions": 34,
                "deletions": 30,
                "changes": 64,
                "blob_url": "https://github.com/apache/ctakes/blob/9f20bf17a4fe8b1fc1837aef55400815623f07b2/ctakes-context-tokenizer/src/main/java/org/apache/ctakes/contexttokenizer/ae/ContextDependentTokenizerAnnotator.java",
                "raw_url": "https://github.com/apache/ctakes/raw/9f20bf17a4fe8b1fc1837aef55400815623f07b2/ctakes-context-tokenizer/src/main/java/org/apache/ctakes/contexttokenizer/ae/ContextDependentTokenizerAnnotator.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-context-tokenizer/src/main/java/org/apache/ctakes/contexttokenizer/ae/ContextDependentTokenizerAnnotator.java?ref=9f20bf17a4fe8b1fc1837aef55400815623f07b2",
                "patch": "@@ -18,21 +18,21 @@\n  */\r\n package org.apache.ctakes.contexttokenizer.ae;\r\n \r\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Set;\n-\n-import org.apache.log4j.Logger;\n-import org.apache.uima.UimaContext;\n-import org.apache.uima.analysis_component.JCasAnnotator_ImplBase;\n-import org.apache.uima.analysis_engine.AnalysisEngineProcessException;\n-import org.apache.uima.cas.FSIterator;\n-import org.apache.uima.cas.text.AnnotationIndex;\n-import org.apache.uima.jcas.JCas;\n-import org.apache.uima.jcas.JFSIndexRepository;\n-import org.apache.uima.resource.ResourceInitializationException;\n-\n+import java.util.ArrayList;\r\n+import java.util.Iterator;\r\n+import java.util.List;\r\n+import java.util.Set;\r\n+\r\n+import org.apache.log4j.Logger;\r\n+import org.apache.uima.UimaContext;\r\n+import org.apache.uima.analysis_component.JCasAnnotator_ImplBase;\r\n+import org.apache.uima.analysis_engine.AnalysisEngineProcessException;\r\n+import org.apache.uima.cas.FSIterator;\r\n+import org.apache.uima.cas.text.AnnotationIndex;\r\n+import org.apache.uima.jcas.JCas;\r\n+import org.apache.uima.jcas.JFSIndexRepository;\r\n+import org.apache.uima.resource.ResourceInitializationException;\r\n+\r\n \r\n import org.apache.ctakes.core.ae.TokenizerAnnotator;\r\n import org.apache.ctakes.core.fsm.adapters.ContractionTokenAdapter;\r\n@@ -57,20 +57,21 @@\n import org.apache.ctakes.core.fsm.output.RomanNumeralToken;\r\n import org.apache.ctakes.core.fsm.output.TimeToken;\r\n import org.apache.ctakes.core.fsm.token.BaseToken;\r\n-import org.apache.ctakes.typesystem.type.syntax.ContractionToken;\n-import org.apache.ctakes.typesystem.type.syntax.NewlineToken;\n-import org.apache.ctakes.typesystem.type.syntax.NumToken;\n-import org.apache.ctakes.typesystem.type.syntax.PunctuationToken;\n-import org.apache.ctakes.typesystem.type.syntax.SymbolToken;\n-import org.apache.ctakes.typesystem.type.syntax.WordToken;\n-import org.apache.ctakes.typesystem.type.textsem.DateAnnotation;\n-import org.apache.ctakes.typesystem.type.textsem.FractionAnnotation;\n-import org.apache.ctakes.typesystem.type.textsem.MeasurementAnnotation;\n-import org.apache.ctakes.typesystem.type.textsem.PersonTitleAnnotation;\n-import org.apache.ctakes.typesystem.type.textsem.RangeAnnotation;\n-import org.apache.ctakes.typesystem.type.textsem.RomanNumeralAnnotation;\n-import org.apache.ctakes.typesystem.type.textsem.TimeAnnotation;\n-import org.apache.ctakes.typesystem.type.textspan.Sentence;\n+import org.apache.ctakes.core.fsm.token.EolToken;\r\n+import org.apache.ctakes.typesystem.type.syntax.ContractionToken;\r\n+import org.apache.ctakes.typesystem.type.syntax.NewlineToken;\r\n+import org.apache.ctakes.typesystem.type.syntax.NumToken;\r\n+import org.apache.ctakes.typesystem.type.syntax.PunctuationToken;\r\n+import org.apache.ctakes.typesystem.type.syntax.SymbolToken;\r\n+import org.apache.ctakes.typesystem.type.syntax.WordToken;\r\n+import org.apache.ctakes.typesystem.type.textsem.DateAnnotation;\r\n+import org.apache.ctakes.typesystem.type.textsem.FractionAnnotation;\r\n+import org.apache.ctakes.typesystem.type.textsem.MeasurementAnnotation;\r\n+import org.apache.ctakes.typesystem.type.textsem.PersonTitleAnnotation;\r\n+import org.apache.ctakes.typesystem.type.textsem.RangeAnnotation;\r\n+import org.apache.ctakes.typesystem.type.textsem.RomanNumeralAnnotation;\r\n+import org.apache.ctakes.typesystem.type.textsem.TimeAnnotation;\r\n+import org.apache.ctakes.typesystem.type.textspan.Sentence;\r\n \r\n /**\r\n  * Finds tokens based on context.\r\n@@ -123,7 +124,10 @@ public void process(JCas jcas) throws AnalysisEngineProcessException {\n \t\t\t\twhile (btaItr.hasNext()) {\r\n \t\t\t\t\torg.apache.ctakes.typesystem.type.syntax.BaseToken bta = (org.apache.ctakes.typesystem.type.syntax.BaseToken) btaItr\r\n \t\t\t\t\t\t\t.next();\r\n-\t\t\t\t\tbaseTokenList.add(adaptToBaseToken(bta));\r\n+\t\t\t\t\t// ignore newlines, avoid null tokens\r\n+\t\t\t\t\tBaseToken bt = adaptToBaseToken(bta);\r\n+\t\t\t\t\tif(bt != null && !(bt instanceof EolToken))\r\n+\t\t\t\t\t\tbaseTokenList.add(bt);\r\n \t\t\t\t}\r\n \r\n \t\t\t\t// execute FSM logic\r"
            },
            {
                "sha": "776d266dc8668a606f8ae009ba896f10a296f7ac",
                "filename": "ctakes-core/src/main/java/org/apache/ctakes/core/fsm/adapters/NumberTokenAdapter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ctakes/blob/9f20bf17a4fe8b1fc1837aef55400815623f07b2/ctakes-core/src/main/java/org/apache/ctakes/core/fsm/adapters/NumberTokenAdapter.java",
                "raw_url": "https://github.com/apache/ctakes/raw/9f20bf17a4fe8b1fc1837aef55400815623f07b2/ctakes-core/src/main/java/org/apache/ctakes/core/fsm/adapters/NumberTokenAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-core/src/main/java/org/apache/ctakes/core/fsm/adapters/NumberTokenAdapter.java?ref=9f20bf17a4fe8b1fc1837aef55400815623f07b2",
                "patch": "@@ -21,6 +21,8 @@\n import org.apache.ctakes.core.fsm.token.NumberToken;\r\n import org.apache.ctakes.typesystem.type.syntax.NumToken;\r\n \r\n+import com.google.common.base.Strings;\r\n+\r\n /**\r\n  * Adapts JCas token annotation to interface expected by the Context Dependent\r\n  * Tokenizer.\r\n@@ -36,7 +38,7 @@ public NumberTokenAdapter(NumToken nta)\n \t{\r\n \t\tsuper(nta);\r\n \t\t\r\n-\t\tif (nta.getCoveredText().length() > 0 && nta.getCoveredText().charAt(0) == '-')\r\n+\t\tif (!Strings.isNullOrEmpty(nta.getCoveredText()) && nta.getCoveredText().length() > 0 && nta.getCoveredText().charAt(0) == '-')\r\n \t\t{\r\n \t\t\tiv_isPositive = false;\r\n \t\t}\t\t\r"
            },
            {
                "sha": "726e4923924f3d8996944a3b38cb623490a3bcbf",
                "filename": "ctakes-core/src/main/java/org/apache/ctakes/core/fsm/machine/DateFSM.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/ctakes/blob/9f20bf17a4fe8b1fc1837aef55400815623f07b2/ctakes-core/src/main/java/org/apache/ctakes/core/fsm/machine/DateFSM.java",
                "raw_url": "https://github.com/apache/ctakes/raw/9f20bf17a4fe8b1fc1837aef55400815623f07b2/ctakes-core/src/main/java/org/apache/ctakes/core/fsm/machine/DateFSM.java",
                "contents_url": "https://api.github.com/repos/apache/ctakes/contents/ctakes-core/src/main/java/org/apache/ctakes/core/fsm/machine/DateFSM.java?ref=9f20bf17a4fe8b1fc1837aef55400815623f07b2",
                "patch": "@@ -220,16 +220,16 @@ private Machine getTextualDateMachine() {\n \t\tstartState.addTransition(new AnyCondition(), startState);\r\n \r\n \t\tmonthFullTextState.addTransition(dayNumCondition, dayNumState);\r\n-\t\tmonthFullTextState.addTransition(yearNotDayNumCondition, ntEndState);\r\n+\t\tmonthFullTextState.addTransition(yearNotDayNumCondition, endState);\r\n \t\tmonthFullTextState.addTransition(new AnyCondition(), startState);\r\n \r\n \t\tmonthShortTextState.addTransition(dayNumCondition, dayNumState);\r\n \t\tmonthShortTextState.addTransition(periodCondition, periodState);\r\n-\t\tmonthShortTextState.addTransition(yearNotDayNumCondition, ntEndState);\r\n+\t\tmonthShortTextState.addTransition(yearNotDayNumCondition, endState);\r\n \t\tmonthShortTextState.addTransition(new AnyCondition(), startState);\r\n \r\n \t\tperiodState.addTransition(dayNumCondition, dayNumState);\r\n-\t\tperiodState.addTransition(yearNotDayNumCondition, ntEndState);\r\n+\t\tperiodState.addTransition(yearNotDayNumCondition, endState);\r\n \t\tperiodState.addTransition(new AnyCondition(), startState);\r\n \r\n \t\tdayNumState.addTransition(yearNumCondition, endState);\r"
            }
        ]
    }
]
