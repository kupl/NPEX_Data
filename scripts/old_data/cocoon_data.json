[
    {
        "commit": "https://github.com/apache/cocoon/commit/28615d29589b576cc5d78cfe0b65baf1b4934f0e",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2405a12dc9b303dfac83a42f1d7727c4fb231971",
        "message": "Fix NullPointerException.\nRemove some overcomponentization: NOPVariableResolver and PreparedVariableResolver\nnever meant to be components.\nCleanup.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@579032 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_1",
        "file": [
            {
                "sha": "628251ff90cca521d71d7f08f2506da01396df41",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySitemapStringTemplateParser.java",
                "status": "modified",
                "additions": 7,
                "deletions": 11,
                "changes": 18,
                "blob_url": "https://github.com/apache/cocoon/blob/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySitemapStringTemplateParser.java",
                "raw_url": "https://github.com/apache/cocoon/raw/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySitemapStringTemplateParser.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySitemapStringTemplateParser.java?ref=28615d29589b576cc5d78cfe0b65baf1b4934f0e",
                "patch": "@@ -23,7 +23,6 @@\n import java.util.List;\n import java.util.Map;\n \n-import org.apache.avalon.framework.service.ServiceException;\n import org.apache.avalon.framework.service.ServiceManager;\n import org.apache.cocoon.components.treeprocessor.InvokeContext;\n import org.apache.cocoon.el.objectmodel.ObjectModel;\n@@ -32,10 +31,13 @@\n import org.apache.cocoon.template.expression.AbstractStringTemplateParser;\n import org.apache.commons.io.IOUtils;\n \n+/**\n+ * @version $Id$\n+ */\n public class LegacySitemapStringTemplateParser extends AbstractStringTemplateParser {\n     \n     private ServiceManager serviceManager;\n-    \n+\n     public ServiceManager getServiceManager() {\n         return serviceManager;\n     }\n@@ -53,17 +55,12 @@ public List parseSubstitutions(Reader in) throws Exception {\n         return substitutions;\n     }\n     \n-public final class SitemapExpressionSubstitution implements Subst {\n+    public final class SitemapExpressionSubstitution implements Subst {\n         \n         private PreparedVariableResolver resolver;\n         \n-        public SitemapExpressionSubstitution(String expression, ServiceManager serviceManager) throws PatternException {\n-            try {\n-                this.resolver = (PreparedVariableResolver)serviceManager.lookup(PreparedVariableResolver.ROLE);\n-                this.resolver.setExpression(expression);\n-            } catch (ServiceException e) {\n-                throw new PatternException(\"Could not obtain PreparedVariableResolver\", e);\n-            }\n+        private SitemapExpressionSubstitution(String expression, ServiceManager manager) throws PatternException {\n+            this.resolver = new PreparedVariableResolver(expression, manager);\n         }\n \n         public Boolean getBooleanValue(ObjectModel objectModel) throws Exception {\n@@ -110,5 +107,4 @@ public void setLenient(Boolean lenient) {\n             //ignore\n         }   \n     }\n-\n }"
            },
            {
                "sha": "8208d3b9592461fd3c8d78c06e16fcc3e353b86c",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySubstitutions.java",
                "status": "modified",
                "additions": 17,
                "deletions": 9,
                "changes": 26,
                "blob_url": "https://github.com/apache/cocoon/blob/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySubstitutions.java",
                "raw_url": "https://github.com/apache/cocoon/raw/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySubstitutions.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/LegacySubstitutions.java?ref=28615d29589b576cc5d78cfe0b65baf1b4934f0e",
                "patch": "@@ -27,33 +27,41 @@\n import org.xml.sax.SAXException;\n import org.xml.sax.SAXParseException;\n \n+/**\n+ * @version $Id$\n+ */\n public class LegacySubstitutions extends Substitutions {\n-    \n+\n     public LegacySubstitutions(LegacySitemapStringTemplateParser stringTemplateParser, Locator location, String stringTemplate) throws SAXException {\n         super(stringTemplateParser, location, stringTemplate);\n     }\n-    \n+\n     public String toString(Locator location, ObjectModel objectModel) throws SAXException {\n         throw new UnsupportedOperationException();\n     }\n-    \n+\n     public String toString(Locator location, ObjectModel objectModel, InvokeContext context, Map oldObjectModel) throws SAXParseException {\n         StringBuffer buf = new StringBuffer();\n-        Iterator iterSubst = iterator();\n-        while (iterSubst.hasNext()) {\n-            Subst subst = (Subst) iterSubst.next();\n+\n+        Iterator i = iterator();\n+        while (i.hasNext()) {\n+            Subst subst = (Subst) i.next();\n+\n             Object val;\n             try {\n                 if (subst instanceof LegacySitemapStringTemplateParser.SitemapExpressionSubstitution)\n-                    val = ((LegacySitemapStringTemplateParser.SitemapExpressionSubstitution)subst).getStringValue(context, oldObjectModel);\n+                    val = ((LegacySitemapStringTemplateParser.SitemapExpressionSubstitution) subst).getStringValue(context, oldObjectModel);\n                 else\n                     val = subst.getValue(objectModel);\n             } catch (Exception e) {\n                 throw new SAXParseException(e.getMessage(), location, e);\n             }\n-            buf.append(val != null ? val.toString() : \"\");\n+\n+            if (val != null) {\n+                buf.append(val.toString());\n+            }\n         }\n+        \n         return buf.toString();\n     }\n-\n }"
            },
            {
                "sha": "c0bfaafccf2a7cc48e6e96c898766ac4cfa57c2f",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/NOPVariableResolver.java",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/apache/cocoon/blob/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/NOPVariableResolver.java",
                "raw_url": "https://github.com/apache/cocoon/raw/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/NOPVariableResolver.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/NOPVariableResolver.java?ref=28615d29589b576cc5d78cfe0b65baf1b4934f0e",
                "patch": "@@ -27,15 +27,19 @@\n  */\n public class NOPVariableResolver extends VariableResolver {\n     \n-    public final static String ROLE = NOPVariableResolver.class.getName();\n+    private String expression;\n+\n \n-    private String expression = null;\n-    \n     public NOPVariableResolver() {\n-        super(\"\");\n+        super();\n+    }\n+\n+    public NOPVariableResolver(String expression) {\n+        super();\n+        setExpression(expression);\n     }\n \n-    public void  setExpression(String expression) {\n+    public void setExpression(String expression) {\n         this.originalExpr = expression;\n         if (expression != null) {\n             this.expression = VariableResolverFactory.unescape(expression);\n@@ -45,8 +49,4 @@ public void  setExpression(String expression) {\n     public final String resolve(InvokeContext context, Map objectModel) {\n         return this.expression;\n     }\n-    \n-    public final void release() {\n-        // Nothing to do\n-    }\n }"
            },
            {
                "sha": "abadd319916af4d947351507368f16a9936186f2",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolver.java",
                "status": "modified",
                "additions": 21,
                "deletions": 17,
                "changes": 38,
                "blob_url": "https://github.com/apache/cocoon/blob/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolver.java",
                "raw_url": "https://github.com/apache/cocoon/raw/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolver.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolver.java?ref=28615d29589b576cc5d78cfe0b65baf1b4934f0e",
                "patch": "@@ -40,14 +40,11 @@\n  *\n  * @version $Id$\n  */\n-final public class PreparedVariableResolver extends VariableResolver implements Disposable {\n+final public class PreparedVariableResolver extends VariableResolver\n+                                            implements Disposable {\n     \n-    public static final String ROLE = PreparedVariableResolver.class.getName();\n-\n-    private ServiceManager manager;\n-    protected List tokens;\n-    protected boolean needsMapStack;\n-\n+    private static final int ROOT_SITEMAP_VARIABLE = 0;\n+    private static final int ANCHOR_VAR = -1;\n     private static final int OPEN = -2;\n     private static final int CLOSE = -3;\n     private static final int COLON = -4;\n@@ -56,25 +53,33 @@\n     private static final int SITEMAP_VAR = -9;\n     private static final int THREADSAFE_MODULE = -10;\n     private static final int STATEFUL_MODULE = -11;\n-    private static final int ROOT_SITEMAP_VARIABLE = 0;\n-    private static final int ANCHOR_VAR = -1;\n \n     protected static final Token COLON_TOKEN = new Token(COLON);\n     protected static final Token OPEN_TOKEN = new Token(OPEN);\n     protected static final Token CLOSE_TOKEN = new Token(CLOSE);\n     protected static final Token EMPTY_TOKEN = new Token(EXPR);\n     \n+    private ServiceManager manager;\n+    protected List tokens;\n+    protected boolean needsMapStack;\n+\n+\n+    public PreparedVariableResolver() {\n+        super();\n+    }\n+\n+    public PreparedVariableResolver(String expression, ServiceManager manager) throws PatternException {\n+        setManager(manager);\n+        setExpression(expression);\n+    }\n+\n     public ServiceManager getManager() {\n         return manager;\n     }\n \n     public void setManager(ServiceManager manager) {\n         this.manager = manager;\n     }\n-    \n-    public PreparedVariableResolver() {\n-        super(\"\");\n-    }\n \n     public void setExpression(String expr) throws PatternException {\n         this.originalExpr = expr;\n@@ -399,7 +404,7 @@ public int getType() {\n \n         public String getStringValue() {\n             if (value instanceof String) {\n-                return (String)this.value;\n+                return (String) this.value;\n             }\n             return null;\n         }\n@@ -410,7 +415,7 @@ public boolean hasType(int type){\n \n         public boolean equals(Object o) {\n             if (o instanceof Token) {\n-                return ((Token)o).hasType(this.type);\n+                return ((Token) o).hasType(this.type);\n             }\n             return false;\n         }\n@@ -421,10 +426,9 @@ public void merge(Token newToken) {\n \n         public InputModule getModule() {\n             if (value instanceof InputModule) {\n-                return (InputModule)value;\n+                return (InputModule) value;\n             }\n             return null;\n         }\n     }\n-    \n }"
            },
            {
                "sha": "b53cf21b40ea302aaa26e8b9ce717d8c3bf40418",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/StringTemplateParserVariableResolver.java",
                "status": "modified",
                "additions": 8,
                "deletions": 7,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/StringTemplateParserVariableResolver.java",
                "raw_url": "https://github.com/apache/cocoon/raw/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/StringTemplateParserVariableResolver.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/StringTemplateParserVariableResolver.java?ref=28615d29589b576cc5d78cfe0b65baf1b4934f0e",
                "patch": "@@ -30,18 +30,20 @@\n  *\n  * @version $Id$\n  */\n-public final class StringTemplateParserVariableResolver extends VariableResolver implements Disposable {\n+public final class StringTemplateParserVariableResolver extends VariableResolver\n+                                                        implements Disposable {\n     \n     public final static String ROLE = StringTemplateParserVariableResolver.class.getName();\n     \n     private StringTemplateParser stringTemplateParser;\n     private ObjectModel objectModel;\n     \n     private Substitutions substitutions;\n-    \n+\n+\n     public StringTemplateParserVariableResolver() {\n-        super(\"\");\n-    };\n+        super();\n+    }\n     \n     public StringTemplateParser getStringTemplateParser() {\n         return stringTemplateParser;\n@@ -63,7 +65,7 @@ public void setExpression(String expression) throws PatternException {\n         this.originalExpr = expression;\n         try {\n             if (stringTemplateParser instanceof LegacySitemapStringTemplateParser)\n-                this.substitutions = new LegacySubstitutions((LegacySitemapStringTemplateParser)stringTemplateParser, null, expression);\n+                this.substitutions = new LegacySubstitutions((LegacySitemapStringTemplateParser) stringTemplateParser, null, expression);\n             else \n                 this.substitutions = new Substitutions(stringTemplateParser, null, expression);\n         } catch (Exception e) {\n@@ -74,7 +76,7 @@ public void setExpression(String expression) throws PatternException {\n     public String resolve(InvokeContext context, Map objectModel) throws PatternException {\n         try {\n             if (this.substitutions instanceof LegacySubstitutions)\n-                return ((LegacySubstitutions)substitutions).toString(null, this.objectModel, context, objectModel);\n+                return ((LegacySubstitutions) substitutions).toString(null, this.objectModel, context, objectModel);\n             else\n                 return substitutions.toString(null, this.objectModel);\n         } catch (Exception e) {\n@@ -85,5 +87,4 @@ public String resolve(InvokeContext context, Map objectModel) throws PatternExce\n     public void dispose() {\n         //nothing to do\n     }\n-\n }"
            },
            {
                "sha": "42f66a51ee6567c9a54e8f0f9a576bf6c2ac0972",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolver.java",
                "status": "modified",
                "additions": 21,
                "deletions": 31,
                "changes": 52,
                "blob_url": "https://github.com/apache/cocoon/blob/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolver.java",
                "raw_url": "https://github.com/apache/cocoon/raw/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolver.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolver.java?ref=28615d29589b576cc5d78cfe0b65baf1b4934f0e",
                "patch": "@@ -28,21 +28,25 @@\n import org.apache.cocoon.util.location.Locatable;\n import org.apache.cocoon.util.location.Location;\n \n+import org.apache.commons.lang.ObjectUtils;\n+\n /**\n  * Utility class for handling {...} pattern substitutions in sitemap statements.\n  *\n  * @version $Id$\n  */\n public abstract class VariableResolver {\n \n-    public static final Map EMPTY_MAP = Collections.unmodifiableMap(new java.util.HashMap(0));\n-\n     protected String originalExpr;\n+\n+\n+    protected VariableResolver() {\n+    }\n     \n     protected VariableResolver(String expr) {\n         this.originalExpr = expr;\n     }\n-    \n+\n     public abstract void setExpression(String expression) throws PatternException;\n \n     public final String toString() {\n@@ -53,13 +57,12 @@ public final String toString() {\n      * Compare two VariableResolvers\n      */\n     public boolean equals(Object object) {\n-        if (object instanceof VariableResolver) {\n-            VariableResolver other = (VariableResolver)object;\n-            return (this.originalExpr == null && other.originalExpr == null) ||\n-                   (this.originalExpr.equals(other.originalExpr));\n-        } else {\n+        //noinspection SimplifiableIfStatement\n+        if (!(object instanceof VariableResolver)) {\n             return false;\n         }\n+\n+        return ObjectUtils.equals(this.originalExpr, ((VariableResolver) object).originalExpr);\n     }\n \n     /**\n@@ -91,23 +94,22 @@ public String resolve(Map objectModel) throws PatternException {\n     public static Parameters buildParameters(Map expressions, InvokeContext context, Map objectModel) throws PatternException {\n         Location location;\n         if (expressions instanceof Locatable) {\n-            location = ((Locatable)expressions).getLocation();\n+            location = ((Locatable) expressions).getLocation();\n         } else {\n             location = Location.UNKNOWN;\n         }\n-        \n-        if ((expressions == null || expressions.size() == 0) && location.equals(Location.UNKNOWN)) {\n+        if (expressions == null || expressions.size() == 0 && location.equals(Location.UNKNOWN)) {\n             return Parameters.EMPTY_PARAMETERS;\n         }\n \n         SitemapParameters result = new SitemapParameters(location);\n \n         Iterator iter = expressions.entrySet().iterator();\n         while (iter.hasNext()) {\n-            Map.Entry entry = (Map.Entry)iter.next();\n+            Map.Entry entry = (Map.Entry) iter.next();\n             result.setParameter(\n-                ((VariableResolver)entry.getKey()).resolve(context, objectModel),\n-                ((VariableResolver)entry.getValue()).resolve(context, objectModel)\n+                    ((VariableResolver) entry.getKey()).resolve(context, objectModel),\n+                    ((VariableResolver) entry.getValue()).resolve(context, objectModel)\n             );\n         }\n \n@@ -123,12 +125,12 @@ public static Parameters buildParameters(Map expressions, InvokeContext context,\n     public static Map buildMap(Map expressions, InvokeContext context, Map objectModel) throws PatternException {\n         int size;\n         if (expressions == null || (size = expressions.size()) == 0) {\n-            return EMPTY_MAP;\n+            return Collections.EMPTY_MAP;\n         }\n \n         Map result;\n-        if ( expressions instanceof Locatable ) {\n-            result = new SitemapParameters.LocatedHashMap(((Locatable)expressions).getLocation(), size);   \n+        if (expressions instanceof Locatable) {\n+            result = new SitemapParameters.LocatedHashMap(((Locatable) expressions).getLocation(), size);\n         } else {\n             result = new HashMap(size);\n         }\n@@ -137,23 +139,11 @@ public static Map buildMap(Map expressions, InvokeContext context, Map objectMod\n         while (iter.hasNext()) {\n             Map.Entry entry = (Map.Entry)iter.next();\n             result.put(\n-                ((VariableResolver)entry.getKey()).resolve(context, objectModel),\n-                ((VariableResolver)entry.getValue()).resolve(context, objectModel)\n+                    ((VariableResolver) entry.getKey()).resolve(context, objectModel),\n+                    ((VariableResolver) entry.getValue()).resolve(context, objectModel)\n             );\n         }\n \n         return result;\n     }\n-\n-//    /**\n-//     * Release a <code>Map</code> of expressions.\n-//     */\n-//    public static void release(Map expressions) {\n-//        Iterator iter = expressions.entrySet().iterator();\n-//        while (iter.hasNext()) {\n-//            Map.Entry entry = (Map.Entry)iter.next();\n-//            ((VariableResolver)entry.getKey()).release();\n-//            ((VariableResolver)entry.getValue()).release();\n-//        }\n-//    }\n }"
            },
            {
                "sha": "7424f7266b9f134b50b10415042653d6a34d450c",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolverFactory.java",
                "status": "modified",
                "additions": 7,
                "deletions": 12,
                "changes": 19,
                "blob_url": "https://github.com/apache/cocoon/blob/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolverFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/28615d29589b576cc5d78cfe0b65baf1b4934f0e/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolverFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/variables/VariableResolverFactory.java?ref=28615d29589b576cc5d78cfe0b65baf1b4934f0e",
                "patch": "@@ -24,7 +24,6 @@\n import java.util.List;\n \n /**\n- *\n  * @version $Id$\n  */\n public class VariableResolverFactory {\n@@ -105,25 +104,21 @@ public static VariableResolver getResolver(String expression, ServiceManager man\n         if (needsResolve(expression)) {\n             VariableResolver resolver;\n             try {\n-                resolver = (VariableResolver)manager.lookup(StringTemplateParserVariableResolver.ROLE);\n+                resolver = (VariableResolver) manager.lookup(StringTemplateParserVariableResolver.ROLE);\n                 resolver.setExpression(expression);\n             } catch (ServiceException e) {\n                 throw new PatternException(\"Couldn't obtain VariableResolver.\", e);\n             }\n-            List collector = (List)disposableCollector.get();\n-            if (collector != null)\n+\n+            List collector = (List) disposableCollector.get();\n+            if (collector != null) {\n                 collector.add(resolver);\n+            }\n \n             return resolver;\n \n         }\n-        VariableResolver resolver;\n-        try {\n-            resolver = (VariableResolver)manager.lookup(NOPVariableResolver.ROLE);\n-        } catch (ServiceException e) {\n-            throw new PatternException(\"Couldn't obtain VariableResolver.\", e);\n-        }\n-        resolver.setExpression(expression);\n-        return resolver;\n+\n+        return new NOPVariableResolver(expression);\n     }\n }"
            },
            {
                "sha": "d4f9202c40de9fcbf88a8fd31c09f8aba43ba490",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/NOPVariableResolver.xml",
                "status": "removed",
                "additions": 0,
                "deletions": 26,
                "changes": 26,
                "blob_url": "https://github.com/apache/cocoon/blob/2405a12dc9b303dfac83a42f1d7727c4fb231971/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/NOPVariableResolver.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/2405a12dc9b303dfac83a42f1d7727c4fb231971/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/NOPVariableResolver.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/NOPVariableResolver.xml?ref=2405a12dc9b303dfac83a42f1d7727c4fb231971",
                "patch": "@@ -1,26 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-  \n-  http://www.apache.org/licenses/LICENSE-2.0\n-  \n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- SVN $Id$ -->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\">\n-\n-  <bean name=\"org.apache.cocoon.components.treeprocessor.variables.NOPVariableResolver\"\n-        class=\"org.apache.cocoon.components.treeprocessor.variables.NOPVariableResolver\" scope=\"prototype\"/>\n-\n-</beans>\n\\ No newline at end of file"
            },
            {
                "sha": "c03ef81df6dddc98b18bfa41c4fcc7cf93d3df48",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/PreparedVariableResolver.xml",
                "status": "removed",
                "additions": 0,
                "deletions": 28,
                "changes": 28,
                "blob_url": "https://github.com/apache/cocoon/blob/2405a12dc9b303dfac83a42f1d7727c4fb231971/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/PreparedVariableResolver.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/2405a12dc9b303dfac83a42f1d7727c4fb231971/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/PreparedVariableResolver.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/resources/META-INF/cocoon/spring/PreparedVariableResolver.xml?ref=2405a12dc9b303dfac83a42f1d7727c4fb231971",
                "patch": "@@ -1,28 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one or more\n-  contributor license agreements.  See the NOTICE file distributed with\n-  this work for additional information regarding copyright ownership.\n-  The ASF licenses this file to You under the Apache License, Version 2.0\n-  (the \"License\"); you may not use this file except in compliance with\n-  the License.  You may obtain a copy of the License at\n-  \n-  http://www.apache.org/licenses/LICENSE-2.0\n-  \n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<!-- SVN $Id$ -->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\">\n-  \n-  <bean name=\"org.apache.cocoon.components.treeprocessor.variables.PreparedVariableResolver\"\n-        class=\"org.apache.cocoon.components.treeprocessor.variables.PreparedVariableResolver\" scope=\"prototype\">\n-    <property name=\"manager\" ref=\"org.apache.avalon.framework.service.ServiceManager\"/>\n-  </bean>\n-  \n-</beans>\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/a3b40728f8261d61fdde1622bc2e7ca5af9c35f6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/bb4ec8469d225cd9698840dda6f8e3091e13314e",
        "message": "Fix COCOON-1744 NullPointerException in template block. Thanks to Tim Williams (williamstw@gmail.com).\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@410220 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_2",
        "file": [
            {
                "sha": "e2fe8fbee2d7890881b048aecff1691e25ca6175",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/a3b40728f8261d61fdde1622bc2e7ca5af9c35f6/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java",
                "raw_url": "https://github.com/apache/cocoon/raw/a3b40728f8261d61fdde1622bc2e7ca5af9c35f6/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java?ref=a3b40728f8261d61fdde1622bc2e7ca5af9c35f6",
                "patch": "@@ -61,9 +61,9 @@ public void service(ServiceManager manager) throws ServiceException {\n         }\n \n         public void dispose() {\n-            setParsingContext( null );\n             this.manager.release(this.parsingContext.getInstructionFactory());\n             this.manager.release(this.parsingContext.getStringTemplateParser());\n+            setParsingContext(null);\n         }\n \n         public void endDocument() throws SAXException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5c38f239552fa5db9499c9986f58a0b019de87a6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/efbc8ba07ac2d2fbdaec9ec02e2bbc18e1096282",
        "message": "Fixed NullPointerException in HTMLGenerator in case the parsed HTML file contained an XML declaration. (bugzilla 23648)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25959 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_3",
        "file": [
            {
                "sha": "ca1e9580926d689b6ab62d641cf0c13f013faafc",
                "filename": "src/blocks/html/java/org/apache/cocoon/generation/HTMLGenerator.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/5c38f239552fa5db9499c9986f58a0b019de87a6/src/blocks/html/java/org/apache/cocoon/generation/HTMLGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5c38f239552fa5db9499c9986f58a0b019de87a6/src/blocks/html/java/org/apache/cocoon/generation/HTMLGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/html/java/org/apache/cocoon/generation/HTMLGenerator.java?ref=5c38f239552fa5db9499c9986f58a0b019de87a6",
                "patch": "@@ -93,7 +93,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:barozzi@nicolaken.com\">Nicola Ken Barozzi</a>\n  * @author <a href=\"mailto:gianugo@apache.org\">Gianugo Rabellino</a>\n  *\n- * @version CVS $Id: HTMLGenerator.java,v 1.8 2003/09/04 09:38:39 cziegeler Exp $\n+ * @version CVS $Id: HTMLGenerator.java,v 1.9 2003/10/10 12:06:22 bruno Exp $\n  */\n public class HTMLGenerator extends ServiceableGenerator\n implements Configurable, CacheableProcessingComponent, Disposable {\n@@ -330,7 +330,12 @@ public void generate()\n                 contentHandler.endDocument();\n             } else {\n                 DOMStreamer streamer = new DOMStreamer(this.contentHandler,this.lexicalHandler);\n-                streamer.stream(doc);\n+                // If the HTML document contained a <?xml ... declaration, tidy would have recognized\n+                // this as a processing instruction (with a 'null' target), giving problems further\n+                // on in the pipeline. Therefore we only serialize the document element.\n+                this.contentHandler.startDocument();\n+                streamer.stream(doc.getDocumentElement());\n+                this.contentHandler.endDocument();\n             }\n         } catch (IOException e){\n             throw new ResourceNotFoundException(\"Could not get resource \""
            },
            {
                "sha": "f324a824cd941b335090f696bd893b94b5f8eec5",
                "filename": "status.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/5c38f239552fa5db9499c9986f58a0b019de87a6/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/5c38f239552fa5db9499c9986f58a0b019de87a6/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=5c38f239552fa5db9499c9986f58a0b019de87a6",
                "patch": "@@ -40,7 +40,7 @@\n <!ENTITY uuml             \"&#x000FC;\">\n ]>\n \n-<!-- CVS $Id: status.xml,v 1.172 2003/10/09 12:01:07 ugo Exp $:-->\n+<!-- CVS $Id: status.xml,v 1.173 2003/10/10 12:06:22 bruno Exp $:-->\n \n <status>\n  <developers>\n@@ -192,6 +192,9 @@\n   <changes>\n \n  <release version=\"@version@\" date=\"@date@\">\n+   <action dev=\"BRD\" type=\"fix\" fixes-bug=\"23648\" due-to=\"Alfred Fuchs\" due-to-email=\"email@alfred-fuchs.de\">\n+     HTMLGenerator: fixed NullPointerException in case the \"HTML\" file contained an XML declaration.\n+   </action>\n    <action dev=\"UC\" type=\"fix\">\n     Fixed ResolverImplTestCase so that the \"test\" build target does not fail (it still depends on the\n     deprecated block, though)."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/42bb4831041b16753bde7b9603e342aa60d4333d",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/ea9ce8f7ef776ab2f21f2c229c87b8674ed9f54c",
        "message": "fixing NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@597440 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_4",
        "file": [
            {
                "sha": "2a5520f7fd289553c399aa05561becf0ee9d7924",
                "filename": "core/cocoon-configuration/cocoon-configuration-api/src/main/java/org/apache/cocoon/configuration/PropertyHelper.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/42bb4831041b16753bde7b9603e342aa60d4333d/core/cocoon-configuration/cocoon-configuration-api/src/main/java/org/apache/cocoon/configuration/PropertyHelper.java",
                "raw_url": "https://github.com/apache/cocoon/raw/42bb4831041b16753bde7b9603e342aa60d4333d/core/cocoon-configuration/cocoon-configuration-api/src/main/java/org/apache/cocoon/configuration/PropertyHelper.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-configuration/cocoon-configuration-api/src/main/java/org/apache/cocoon/configuration/PropertyHelper.java?ref=42bb4831041b16753bde7b9603e342aa60d4333d",
                "patch": "@@ -159,8 +159,10 @@ public static void replaceAll(Properties props, Settings settings) {\n            String value = props.getProperty(key);\n            // replace\n            value = replace(value, props, settings);\n-           // and put back\n-           props.put(key, value);\n+           // and put back but prevent NPE because of null value ?!?!?\n+           // TODO: How to handle value==null situations?\n+           if (value != null)\n+               props.put(key, value);\n        }\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4b85cd3672d1d97fea514425cf045f404293d1cf",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/e461f0b0c54109d7ba29565ed5db0a1d7f5a5402",
        "message": "fix potential npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@583697 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_5",
        "file": [
            {
                "sha": "8c7b0f9547a8de0b890ba020853397d03a80f21c",
                "filename": "tools/cocoon-maven-docs-cleaner-plugin/src/main/java/org/apache/cocoon/maven/docscleaner/DocsCleanerMojo.java",
                "status": "modified",
                "additions": 13,
                "deletions": 11,
                "changes": 24,
                "blob_url": "https://github.com/apache/cocoon/blob/4b85cd3672d1d97fea514425cf045f404293d1cf/tools/cocoon-maven-docs-cleaner-plugin/src/main/java/org/apache/cocoon/maven/docscleaner/DocsCleanerMojo.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4b85cd3672d1d97fea514425cf045f404293d1cf/tools/cocoon-maven-docs-cleaner-plugin/src/main/java/org/apache/cocoon/maven/docscleaner/DocsCleanerMojo.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/tools/cocoon-maven-docs-cleaner-plugin/src/main/java/org/apache/cocoon/maven/docscleaner/DocsCleanerMojo.java?ref=4b85cd3672d1d97fea514425cf045f404293d1cf",
                "patch": "@@ -31,18 +31,20 @@\n \n     public void execute() throws MojoExecutionException, MojoFailureException {\n         File[] files = this.siteOutputDirectory.listFiles();\n-        for (int i = 0; i < files.length; i++) {\n-            File f = files[i];\n-            if(deleteFile(f)) {\n-                this.getLog().info(\"[delete] \" + f.getAbsolutePath());\n-                if(f.isDirectory()) {\n-                    try {\n-                        FileUtils.deleteDirectory(f);\n-                    } catch (IOException e) {\n-                        throw new MojoExecutionException(\"Can't delete directory \" + f.getAbsolutePath());\n+        if (null != files) {\n+            for (int i = 0; i < files.length; i++) {\n+                File f = files[i];\n+                if (deleteFile(f)) {\n+                    this.getLog().info(\"[delete] \" + f.getAbsolutePath());\n+                    if (f.isDirectory()) {\n+                        try {\n+                            FileUtils.deleteDirectory(f);\n+                        } catch (IOException e) {\n+                            throw new MojoExecutionException(\"Can't delete directory \" + f.getAbsolutePath());\n+                        }\n+                    } else {\n+                        f.delete();\n                     }\n-                } else {\n-                    f.delete();\n                 }\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/3763721d57c84408bf1ba576d972f9f449e778ef",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/8983c9c2ebe981ab7ca21567f13defafae90d63d",
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@568842 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_6",
        "file": [
            {
                "sha": "e5c2cfe479120bf78dda4743c10e7c5b107fc077",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/ForEach.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/3763721d57c84408bf1ba576d972f9f449e778ef/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/ForEach.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3763721d57c84408bf1ba576d972f9f449e778ef/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/ForEach.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/ForEach.java?ref=3763721d57c84408bf1ba576d972f9f449e778ef",
                "patch": "@@ -132,7 +132,7 @@ public Event execute(final XMLConsumer consumer,\n             objectModel.put(varStatus, status);\n         }\n         int skipCounter, count = 1;\n-        while (i <= end && iter.hasNext()) {\n+        while (i <= end && iter != null && iter.hasNext()) {\n             objectModel.markLocalContext();\n             Object value = iter.next();\n             objectModel.put(ObjectModel.CONTEXTBEAN, value);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/fee87280a796ecb9cc1ed65e1af3278d56450942",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/87f34c349def3f91868fb1588a27f78505fa402e",
        "message": "Prevent NPE :)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@490499 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_7",
        "file": [
            {
                "sha": "e246d3b9ac79fea2f1d3cfff65dce71c1dc5a628",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/PoolableProxyHandler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/fee87280a796ecb9cc1ed65e1af3278d56450942/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/PoolableProxyHandler.java",
                "raw_url": "https://github.com/apache/cocoon/raw/fee87280a796ecb9cc1ed65e1af3278d56450942/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/PoolableProxyHandler.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/PoolableProxyHandler.java?ref=fee87280a796ecb9cc1ed65e1af3278d56450942",
                "patch": "@@ -47,15 +47,15 @@ public Object invoke(Object proxy, Method method, Object[] args)\n     throws Throwable {\n         if ( method.getName().equals(\"putBackIntoAvalonPool\") ) {\n             this.run();\n-            RequestContextHolder.getRequestAttributes().removeAttribute(this.attributeName, RequestAttributes.SCOPE_REQUEST);\n+            RequestContextHolder.currentRequestAttributes().removeAttribute(this.attributeName, RequestAttributes.SCOPE_REQUEST);\n             return null;\n         }\n         if ( method.getName().equals(\"hashCode\") && args == null ) {\n             return new Integer(this.hashCode());\n         }\n         if ( this.componentHolder.get() == null ) {\n             this.componentHolder.set(this.handler.getFromPool());\n-            RequestContextHolder.getRequestAttributes().registerDestructionCallback(this.attributeName, this, RequestAttributes.SCOPE_REQUEST);\n+            RequestContextHolder.currentRequestAttributes().registerDestructionCallback(this.attributeName, this, RequestAttributes.SCOPE_REQUEST);\n         }\n         try {\n             return method.invoke(this.componentHolder.get(), args);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/b6138a013c69c9b9eb4817ee22867ee9ab067672",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/9e119bc2c6060427da46b133adc8cb542b967197",
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@452357 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_8",
        "file": [
            {
                "sha": "c42fd3039d7109d9c72abd506d5cb88b7688e814",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/Container.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/b6138a013c69c9b9eb4817ee22867ee9ab067672/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/Container.java",
                "raw_url": "https://github.com/apache/cocoon/raw/b6138a013c69c9b9eb4817ee22867ee9ab067672/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/Container.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/Container.java?ref=b6138a013c69c9b9eb4817ee22867ee9ab067672",
                "patch": "@@ -57,9 +57,11 @@ public Container(BeanFactory beanFactory, ClassLoader classLoader) {\n      */\n     public static Container getCurrentContainer(ServletContext servletContext,\n                                                 RequestAttributes attributes) {\n-        if (attributes.getAttribute(CONTAINER_REQUEST_ATTRIBUTE, RequestAttributes.SCOPE_REQUEST) != null) {\n-            return (Container) attributes\n-                    .getAttribute(CONTAINER_REQUEST_ATTRIBUTE, RequestAttributes.SCOPE_REQUEST);\n+        if ( attributes != null ) {\n+            if (attributes.getAttribute(CONTAINER_REQUEST_ATTRIBUTE, RequestAttributes.SCOPE_REQUEST) != null) {\n+                return (Container) attributes\n+                        .getAttribute(CONTAINER_REQUEST_ATTRIBUTE, RequestAttributes.SCOPE_REQUEST);\n+            }\n         }\n         if ( ROOT_CONTAINER == null ) {\n             final WebApplicationContext parentContext = WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/42f5080402b3c39d683712b685cd02e0ce39278f",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/9abc11bcb570b55e862af88b7507c5a118707ebf",
        "message": "Quickfix for NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@406710 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_9",
        "file": [
            {
                "sha": "d9be0e2ad145a9575ac5bba5a7ed4f63580fa9b5",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/environment/internal/EnvironmentHelper.java",
                "status": "modified",
                "additions": 12,
                "deletions": 1,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/42f5080402b3c39d683712b685cd02e0ce39278f/core/cocoon-core/src/main/java/org/apache/cocoon/environment/internal/EnvironmentHelper.java",
                "raw_url": "https://github.com/apache/cocoon/raw/42f5080402b3c39d683712b685cd02e0ce39278f/core/cocoon-core/src/main/java/org/apache/cocoon/environment/internal/EnvironmentHelper.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/environment/internal/EnvironmentHelper.java?ref=42f5080402b3c39d683712b685cd02e0ce39278f",
                "patch": "@@ -34,6 +34,7 @@\n import org.apache.cocoon.environment.SourceResolver;\n import org.apache.cocoon.xml.XMLConsumer;\n import org.apache.excalibur.source.Source;\n+import org.springframework.beans.factory.BeanFactory;\n \n /**\n  * Helper class for maintaining the environment stack.\n@@ -391,7 +392,17 @@ static public ServiceManager getSitemapServiceManager() {\n         final EnvironmentStack stack = (EnvironmentStack)environmentStack.get();\n         if ( stack != null && !stack.isEmpty()) {\n             EnvironmentInfo info = stack.getCurrentInfo();\n-            return (ServiceManager) info.processor.getBeanFactory().getBean(ProcessingUtil.SERVICE_MANAGER_ROLE);\n+            Processor processor = info.processor;\n+            BeanFactory factory = info.processor.getBeanFactory();\n+            while ( factory == null && processor != null ) {\n+                processor = processor.getParent();\n+                if ( processor != null ) {\n+                    factory = processor.getBeanFactory();\n+                }\n+            }\n+            if ( factory != null ) {\n+                return (ServiceManager) factory.getBean(ProcessingUtil.SERVICE_MANAGER_ROLE);\n+            }\n         }\n         return null;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4acf378921685e2afbda51af5c1c71b1cc8f4128",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/620a3ea7ddb6fae9f00962e21a6450d25a077a75",
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@390859 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_10",
        "file": [
            {
                "sha": "de98f604bea260561807393e8812deda74f596a4",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/BeanFactoryUtil.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/4acf378921685e2afbda51af5c1c71b1cc8f4128/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/BeanFactoryUtil.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4acf378921685e2afbda51af5c1c71b1cc8f4128/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/BeanFactoryUtil.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/BeanFactoryUtil.java?ref=4acf378921685e2afbda51af5c1c71b1cc8f4128",
                "patch": "@@ -183,7 +183,7 @@ protected static Logger initLogger(ServletContext servletContext,\n \n         // Configure the log4j manager\n         String loggerConfig = settings.getLoggingConfiguration();\n-        if ( !loggerConfig.startsWith(\"/\") ) {\n+        if ( loggerConfig != null && !loggerConfig.startsWith(\"/\") ) {\n             loggerConfig = '/' + loggerConfig;\n         }\n         if ( loggerConfig != null ) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5546f7c5d1ef1997f26f4fda2a0225f3496d1c89",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/1423b6911fea8ecb5f7f94d295e6fcb57fb46e71",
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@386871 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_11",
        "file": [
            {
                "sha": "af5d3d1a88641fb46379c97cbe4c5e7262eb1393",
                "filename": "cocoon-core/src/main/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "status": "modified",
                "additions": 8,
                "deletions": 1,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/5546f7c5d1ef1997f26f4fda2a0225f3496d1c89/cocoon-core/src/main/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5546f7c5d1ef1997f26f4fda2a0225f3496d1c89/cocoon-core/src/main/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/cocoon-core/src/main/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java?ref=5546f7c5d1ef1997f26f4fda2a0225f3496d1c89",
                "patch": "@@ -145,6 +145,7 @@ protected TreeProcessor(TreeProcessor parent,\n         ContainerUtil.service(this.environmentHelper, this.manager);\n         this.environmentHelper.changeContext(sitemapSource, prefix);\n         this.sitemapExecutor = parent.sitemapExecutor;\n+        this.beanFactory = parent.beanFactory;\n     }\n \n     /**\n@@ -409,8 +410,14 @@ private synchronized void buildConcreteProcessor(Environment env) throws Excepti\n                 treeBuilder.setProcessor(newProcessor);\n \n                 ProcessingNode root = treeBuilder.build(sitemapProgram);\n+                ConfigurableListableBeanFactory factory = treeBuilder.getBeanFactory();\n+                if ( factory == null ) {\n+                    factory = this.beanFactory;\n+                } else {\n+                    this.beanFactory = factory;\n+                }\n                 newProcessor.setProcessorData(\n-                        treeBuilder.getBeanFactory(),\n+                        factory,\n                         treeBuilder.getServiceManager(),\n                         root,\n                         treeBuilder.getDisposableNodes(),"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e44a6f01b3085c9e4c65eee477489e31bb0079ec",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/eb3b1a2a5d8db496913de485b93d2215a2ddf88a",
        "message": "Fix NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@367987 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_12",
        "file": [
            {
                "sha": "15f6759abe3cdae840e92d0f3e16a883fe866073",
                "filename": "cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/adapter/PortletAdapter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/e44a6f01b3085c9e4c65eee477489e31bb0079ec/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/adapter/PortletAdapter.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e44a6f01b3085c9e4c65eee477489e31bb0079ec/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/adapter/PortletAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/adapter/PortletAdapter.java?ref=e44a6f01b3085c9e4c65eee477489e31bb0079ec",
                "patch": "@@ -145,7 +145,7 @@ public void login(CopletInstanceData coplet) {\n             if ( req == null ) {\n                 final HttpServletResponse res = (HttpServletResponse) objectModel.get(HttpEnvironment.HTTP_RESPONSE_OBJECT);\n                 objectModel.put(\"portlet-response\",  new ServletResponseImpl(res));\n-                req = new ServletRequestImpl((HttpServletRequest) objectModel.get(HttpEnvironment.HTTP_REQUEST_OBJECT), null);\n+                req = new ServletRequestImpl((HttpServletRequest) objectModel.get(HttpEnvironment.HTTP_REQUEST_OBJECT), null, portletWindow);\n                 objectModel.put(\"portlet-request\",  req);                \n             }\n             final HttpServletResponse res = (HttpServletResponse) objectModel.get(\"portlet-response\");\n@@ -306,7 +306,7 @@ public void initContainer() throws Exception {\n      */\n     public void inform(PortletURLProviderImpl event, PortalService service) {\n         final Map objectModel = ContextHelper.getObjectModel(this.context);\n-        final ServletRequestImpl req = new ServletRequestImpl((HttpServletRequest) objectModel.get(HttpEnvironment.HTTP_REQUEST_OBJECT), event);\n+        final ServletRequestImpl req = new ServletRequestImpl((HttpServletRequest) objectModel.get(HttpEnvironment.HTTP_REQUEST_OBJECT), event, event.getPortletWindow());\n         final HttpServletResponse res = new ServletResponseImpl((HttpServletResponse) objectModel.get(HttpEnvironment.HTTP_RESPONSE_OBJECT));\n         if ( !service.getProfileManager().getUser().isAnonymous() ) {\n             req.setAttribute(PortletRequest.USER_INFO,\n@@ -366,7 +366,7 @@ public void prepare(PortalManagerAspectPrepareContext aspectContext,\n         } else if ( objectModel.get(\"portlet-response\") == null ) {\n             final HttpServletResponse res = (HttpServletResponse) objectModel.get(HttpEnvironment.HTTP_RESPONSE_OBJECT);\n             objectModel.put(\"portlet-response\",  new ServletResponseImpl(res));\n-            final ServletRequestImpl req = new ServletRequestImpl((HttpServletRequest) objectModel.get(HttpEnvironment.HTTP_REQUEST_OBJECT), null);\n+            final ServletRequestImpl req = new ServletRequestImpl((HttpServletRequest) objectModel.get(HttpEnvironment.HTTP_REQUEST_OBJECT), null, null);\n             objectModel.put(\"portlet-request\",  req);\n             if ( !service.getProfileManager().getUser().isAnonymous() ) {\n                 req.setAttribute(PortletRequest.USER_INFO,"
            },
            {
                "sha": "0472ee118460179502aa2407b438150dd610ca59",
                "filename": "cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/servlet/ServletRequestImpl.java",
                "status": "modified",
                "additions": 6,
                "deletions": 10,
                "changes": 16,
                "blob_url": "https://github.com/apache/cocoon/blob/e44a6f01b3085c9e4c65eee477489e31bb0079ec/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/servlet/ServletRequestImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e44a6f01b3085c9e4c65eee477489e31bb0079ec/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/servlet/ServletRequestImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/pluto/servlet/ServletRequestImpl.java?ref=e44a6f01b3085c9e4c65eee477489e31bb0079ec",
                "patch": "@@ -48,14 +48,7 @@\n \n     final protected PortletURLProviderImpl provider;\n \n-    protected PortletWindow window;\n-\n-    public ServletRequestImpl(HttpServletRequest request,\n-                              PortletURLProviderImpl provider) {\n-        super(request);\n-        this.provider = provider;\n-        this.originalRequest = request;\n-    }\n+    final protected PortletWindow window;\n \n     public ServletRequestImpl(HttpServletRequest request,\n                               PortletURLProviderImpl provider,\n@@ -153,8 +146,11 @@ public Map getParameterMap() {\n                 }\n             } else {\n                 // provider is null or different window, use stored render parameters\n-                final CopletInstanceData cid = ((PortletWindowImpl)this.window).getLayout().getCopletInstanceData();\n-                this.portletParameterMap = (Map)cid.getTemporaryAttribute(\"render-parameters\");\n+                // check for NP - FIXME we should ensure that the layout is always set\n+                if ( window != null && ((PortletWindowImpl)this.window).getLayout() != null) {\n+                    final CopletInstanceData cid = ((PortletWindowImpl)this.window).getLayout().getCopletInstanceData();\n+                    this.portletParameterMap = (Map)cid.getTemporaryAttribute(\"render-parameters\");\n+                }\n             }\n             if ( this.portletParameterMap == null ) {\n                 this.portletParameterMap = Collections.EMPTY_MAP;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/a9292f14a9625e559bbd8350b6c66985d082cfa1",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/27d01b575c130a2e10b537d1ad53c81285c47724",
        "message": "fix npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@225722 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_13",
        "file": [
            {
                "sha": "99432a03d6a22724153e92dc8ad39377f92d5e2b",
                "filename": "src/java/org/apache/cocoon/core/CoreUtil.java",
                "status": "modified",
                "additions": 13,
                "deletions": 3,
                "changes": 16,
                "blob_url": "https://github.com/apache/cocoon/blob/a9292f14a9625e559bbd8350b6c66985d082cfa1/src/java/org/apache/cocoon/core/CoreUtil.java",
                "raw_url": "https://github.com/apache/cocoon/raw/a9292f14a9625e559bbd8350b6c66985d082cfa1/src/java/org/apache/cocoon/core/CoreUtil.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/CoreUtil.java?ref=a9292f14a9625e559bbd8350b6c66985d082cfa1",
                "patch": "@@ -758,9 +758,19 @@ protected void forceProperty() {\n      * of this class (eg. Cocoon Context).\n      */\n     protected void updateEnvironment() throws Exception {\n-        StringBuffer buffer = new StringBuffer(this.env.getClassPath(this.settings));\n-        buffer.append(File.pathSeparatorChar).append(this.getExtraClassPath());\n-\n+        // concatenate the class path and the extra class path\n+        String classPath = this.env.getClassPath(this.settings);\n+        StringBuffer buffer = new StringBuffer();\n+        if ( classPath != null && classPath.length() > 0 ) {\n+            buffer.append(classPath);\n+        }\n+        classPath = this.getExtraClassPath();\n+        if ( classPath != null && classPath.length() > 0 ) {\n+            if ( buffer.length() > 0 ) {\n+                buffer.append(File.pathSeparatorChar);\n+            }\n+            buffer.append(classPath);\n+        }\n         this.appContext.put(Constants.CONTEXT_CLASSPATH, buffer.toString());\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e69924ee39451ccb7b1009fbb5b1140b7e35d295",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/91572430aad3fb113cbda696bdcdba9caeb9f1ff",
        "message": "Fix NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@164454 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_14",
        "file": [
            {
                "sha": "c2148cf24d4437aff8e2f85382bfe7b08e2a710c",
                "filename": "src/java/org/apache/cocoon/core/CoreUtil.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/e69924ee39451ccb7b1009fbb5b1140b7e35d295/src/java/org/apache/cocoon/core/CoreUtil.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e69924ee39451ccb7b1009fbb5b1140b7e35d295/src/java/org/apache/cocoon/core/CoreUtil.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/CoreUtil.java?ref=e69924ee39451ccb7b1009fbb5b1140b7e35d295",
                "patch": "@@ -47,6 +47,7 @@\n import org.apache.cocoon.Cocoon;\n import org.apache.cocoon.Constants;\n import org.apache.cocoon.components.ContextHelper;\n+import org.apache.cocoon.components.container.ComponentContext;\n import org.apache.cocoon.configuration.ConfigurationBuilder;\n import org.apache.cocoon.core.source.SimpleSourceResolver;\n import org.apache.cocoon.matching.helpers.WildcardHelper;\n@@ -76,7 +77,7 @@\n     protected final BootstrapEnvironment env;\n \n     /** \"legacy\" support: create an avalon context. */\n-    protected final DefaultContext appContext = new DefaultContext();\n+    protected final DefaultContext appContext = new ComponentContext();\n \n     /** The settings. */\n     protected Settings settings;"
            },
            {
                "sha": "92eb1c091841861fd990650eb1c051edf16cc4d9",
                "filename": "src/java/org/apache/cocoon/core/container/ComponentEnvironment.java",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/e69924ee39451ccb7b1009fbb5b1140b7e35d295/src/java/org/apache/cocoon/core/container/ComponentEnvironment.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e69924ee39451ccb7b1009fbb5b1140b7e35d295/src/java/org/apache/cocoon/core/container/ComponentEnvironment.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/container/ComponentEnvironment.java?ref=e69924ee39451ccb7b1009fbb5b1140b7e35d295",
                "patch": "@@ -62,10 +62,13 @@ public ComponentEnvironment(ClassLoader classLoader, Logger logger, RoleManager\n         this.loggerManager = loggerManager;\n         this.context = context;\n         this.serviceManager = serviceManager;\n-        try {\n-            this.core = (Core)this.context.get(Core.ROLE);\n-        } catch (ContextException ignore) {\n-            // this can never happen\n+        // FIXME - we should ensure that the context is never null!\n+        if ( this.context != null ) {\n+            try {\n+                this.core = (Core)this.context.get(Core.ROLE);\n+            } catch (ContextException ignore) {\n+                // this can never happen\n+            }\n         }\n     }\n \n@@ -80,7 +83,7 @@ public ComponentInfo loadComponentInfo(String name)\n         ComponentInfo ci = null;\n         final InputStream is = this.classLoader.getResourceAsStream(bu.toString());\n         if ( is != null ) {\n-            final Settings settings = this.core.getSettings();\n+            final Settings settings = (this.core == null ? null : this.core.getSettings());\n             final ConfigurationBuilder cb = new ConfigurationBuilder(settings);\n             final Configuration conf = cb.build(is);\n             ci = new ComponentInfo();"
            },
            {
                "sha": "5e6e71fa6b176bac0405e19aa523f1f4b469caa8",
                "filename": "src/java/org/apache/cocoon/core/container/ComponentFactory.java",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/e69924ee39451ccb7b1009fbb5b1140b7e35d295/src/java/org/apache/cocoon/core/container/ComponentFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e69924ee39451ccb7b1009fbb5b1140b7e35d295/src/java/org/apache/cocoon/core/container/ComponentFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/container/ComponentFactory.java?ref=e69924ee39451ccb7b1009fbb5b1140b7e35d295",
                "patch": "@@ -66,10 +66,13 @@\n     public ComponentFactory( final ComponentEnvironment environment,\n                              final ComponentInfo info) \n     throws Exception {\n-        try {\n-            this.core = (Core)environment.context.get(Core.ROLE);\n-        } catch (ContextException ignore) {\n-            // this can never happen\n+        // FIXME - we should ensure that the context is never null!\n+        if ( environment.context != null ) {\n+            try {\n+                this.core = (Core)environment.context.get(Core.ROLE);\n+            } catch (ContextException ignore) {\n+                // this can never happen\n+            }\n         }\n         this.environment = environment;\n         this.serviceInfo = info;\n@@ -152,7 +155,7 @@ protected void setupInstance(Object component) throws Exception {\n         ContainerUtil.enableLogging(component, this.componentLogger);\n         ContainerUtil.contextualize( component, this.environment.context );\n         ContainerUtil.service( component, this.environment.serviceManager );\n-        if ( this.configureSettingsMethod != null ) {\n+        if ( this.configureSettingsMethod != null && this.core != null) {\n             this.configureSettingsMethod.invoke( component, new Object[] {this.core.getSettings()});\n         }\n         ContainerUtil.configure( component, this.serviceInfo.getConfiguration() );"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/b8322a215f64d1b5aab5a8b3646c5d71a33c0078",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/460a4cb942951b0de1a57d9f2fcc97e842f5113e",
        "message": "fix npe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@159597 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_15",
        "file": [
            {
                "sha": "57f1e9576b507530bd609a79d2298b768f9c05f8",
                "filename": "src/java/org/apache/cocoon/generation/StatusGenerator.java",
                "status": "modified",
                "additions": 43,
                "deletions": 35,
                "changes": 78,
                "blob_url": "https://github.com/apache/cocoon/blob/b8322a215f64d1b5aab5a8b3646c5d71a33c0078/src/java/org/apache/cocoon/generation/StatusGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/b8322a215f64d1b5aab5a8b3646c5d71a33c0078/src/java/org/apache/cocoon/generation/StatusGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/generation/StatusGenerator.java?ref=b8322a215f64d1b5aab5a8b3646c5d71a33c0078",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -45,13 +45,13 @@\n /**\n  * @cocoon.sitemap.component.documentation\n  * Generates an XML representation of the current status of Cocoon.\n- * \n+ *\n  * @cocoon.sitemap.component.name   status\n  * @cocoon.sitemap.component.label  content\n  * @cocoon.sitemap.component.logger sitemap.generator.status\n- * \n+ *\n  * @cocoon.sitemap.component.pooling.max  16\n- * \n+ *\n  * Potted DTD:\n  *\n  * <code>\n@@ -80,7 +80,7 @@\n  * @author <a href=\"mailto:stefano@apache.org\">Stefano Mazzocchi</a>\n  * @author <a href=\"mailto:skoechlin@ivision.fr\">S&eacute;bastien K&oelig;chlin</a> (iVision)\n  * @author <a href=\"mailto:g-froehlich@gmx.de\">Gerhard Froehlich</a>\n- * @version CVS $Id$\n+ * @version $Id$\n  */\n public class StatusGenerator \n     extends ServiceableGenerator \n@@ -137,7 +137,7 @@ public void service(ServiceManager manager) throws ServiceException {\n             getLogger().info(\"Persistent Store is not available. Sorry no cache statistics about it.\");\n         }\n     }\n-    \n+\n     /* (non-Javadoc)\n      * @see org.apache.avalon.framework.activity.Disposable#dispose()\n      */\n@@ -236,18 +236,20 @@ private void genVMStatus() throws SAXException {\n         // END operating system\n \n         String classpath = SystemUtils.JAVA_CLASS_PATH;\n-        List paths = new ArrayList();\n-        StringTokenizer tokenizer = new StringTokenizer(classpath, SystemUtils.PATH_SEPARATOR);\n-        while (tokenizer.hasMoreTokens()) {\n-            paths.add(tokenizer.nextToken());\n+        if (classpath != null) {\n+            List paths = new ArrayList();\n+            StringTokenizer tokenizer = new StringTokenizer(classpath, SystemUtils.PATH_SEPARATOR);\n+            while (tokenizer.hasMoreTokens()) {\n+                paths.add(tokenizer.nextToken());\n+            }\n+            addMultilineValue(\"classpath\", paths);\n         }\n-        addMultilineValue(\"classpath\", paths);\n         // END ClassPath\n \n         // BEGIN Cache\n-        if ( this.storejanitor != null ) {\n+        if (this.storejanitor != null) {\n             startGroup(\"Store-Janitor\");\n-    \n+\n             // For each element in StoreJanitor\n             Iterator i = this.storejanitor.iterator();\n             while (i.hasNext()) {\n@@ -258,13 +260,13 @@ private void genVMStatus() throws SAXException {\n                 atts.clear();\n                 atts.addAttribute(namespace, \"name\", \"name\", \"CDATA\", \"cached\");\n                 this.xmlConsumer.startElement(namespace, \"value\", \"value\", atts);\n-                // For each element in Store\n-                Enumeration e = store.keys();\n+\n                 atts.clear();\n-                while(e.hasMoreElements()) {\n+                Enumeration e = store.keys();\n+                while (e.hasMoreElements()) {\n                     size++;\n-                    Object key  = e.nextElement();\n-                    Object val  = store.get( key );\n+                    Object key = e.nextElement();\n+                    Object val = store.get(key);\n                     String line = null;\n                     if (val == null) {\n                         empty++;\n@@ -282,31 +284,32 @@ private void genVMStatus() throws SAXException {\n                     this.xmlConsumer.endElement(namespace, \"line\", \"line\");\n                 }\n                 this.xmlConsumer.endElement(namespace, \"value\", \"value\");\n-    \n+\n                 addValue(\"size\", String.valueOf(size) + \" items in cache (\" + empty + \" are empty)\");\n                 endGroup();\n             }\n             endGroup();        \n         }\n-        \n+\n         if (this.store_persistent != null) {\n-            startGroup( store_persistent.getClass().getName()+\" (hash = 0x\"+Integer.toHexString(store_persistent.hashCode())+\")\");\n+            startGroup(store_persistent.getClass().getName() + \" (hash = 0x\" + Integer.toHexString(store_persistent.hashCode()) + \")\");\n             int size = 0;\n             int empty = 0;\n             atts.clear();\n             atts.addAttribute(namespace, \"name\", \"name\", \"CDATA\", \"cached\");\n             this.xmlConsumer.startElement(namespace, \"value\", \"value\", atts);\n-            Enumeration enumer = this.store_persistent.keys();\n-            while (enumer.hasMoreElements()) {\n+\n+            atts.clear();\n+            Enumeration e = this.store_persistent.keys();\n+            while (e.hasMoreElements()) {\n                 size++;\n-    \n-                Object key  = enumer.nextElement();\n-                Object val  = store_persistent.get(key);\n+                Object key = e.nextElement();\n+                Object val = store_persistent.get(key);\n                 String line = null;\n                 if (val == null) {\n                     empty++;\n                 } else {\n-                    line = key + \" (class: \" + val.getClass().getName() +  \")\";\n+                    line = key + \" (class: \" + val.getClass().getName() + \")\";\n                     this.xmlConsumer.startElement(namespace, \"line\", \"line\", atts);\n                     this.xmlConsumer.characters(line.toCharArray(), 0, line.length());\n                     this.xmlConsumer.endElement(namespace, \"line\", \"line\");\n@@ -320,7 +323,7 @@ private void genVMStatus() throws SAXException {\n             }\n             this.xmlConsumer.endElement(namespace, \"value\", \"value\");\n \n-            addValue(\"size\", String.valueOf(size) + \" items in cache (\" + empty + \" are empty)\");\n+            addValue(\"size\", size + \" items in cache (\" + empty + \" are empty)\");\n             endGroup();\n         }\n         // END Cache\n@@ -380,7 +383,8 @@ private void startGroup(String name) throws SAXException {\n     }\n \n     /** Utility function to begin a <code>group</code> tag pair with added attributes. */\n-    private void startGroup(String name, Attributes atts) throws SAXException {\n+    private void startGroup(String name, Attributes atts)\n+    throws SAXException {\n         AttributesImpl ai = (atts == null) ? new AttributesImpl() : new AttributesImpl(atts); \n         ai.addAttribute(namespace, \"name\", \"name\", \"CDATA\", name);\n         this.xmlConsumer.startElement(namespace, \"group\", \"group\", ai);\n@@ -392,7 +396,8 @@ private void endGroup() throws SAXException {\n     }\n \n     /** Utility function to begin and end a <code>value</code> tag pair. */\n-    private void addValue(String name, String value) throws SAXException {\n+    private void addValue(String name, String value)\n+    throws SAXException {\n         addValue(name, value, null);\n     }\n \n@@ -449,7 +454,8 @@ private void addValue(String name, Map value) throws SAXException {\n     }\n \n     /** Utility function to begin and end a <code>value</code> tag pair with added attributes. */\n-    private void addValue(String name, String value, Attributes atts) throws SAXException {\n+    private void addValue(String name, String value, Attributes atts)\n+    throws SAXException {\n         AttributesImpl ai = (atts == null) ? new AttributesImpl() : new AttributesImpl(atts);\n         ai.addAttribute(namespace, \"name\", \"name\", \"CDATA\", name);\n         this.xmlConsumer.startElement(namespace, \"value\", \"value\", ai);\n@@ -464,12 +470,14 @@ private void addValue(String name, String value, Attributes atts) throws SAXExce\n     }\n \n     /** Utility function to begin and end a <code>value</code> tag pair. */\n-    private void addMultilineValue(String name, List values) throws SAXException {\n+    private void addMultilineValue(String name, List values)\n+    throws SAXException {\n         addMultilineValue(name, values, null);\n     }\n \n     /** Utility function to begin and end a <code>value</code> tag pair with added attributes. */\n-    private void addMultilineValue(String name, List values, Attributes atts) throws SAXException {\n+    private void addMultilineValue(String name, List values, Attributes atts)\n+    throws SAXException {\n         AttributesImpl ai = (atts == null) ? new AttributesImpl() : new AttributesImpl(atts);\n         ai.addAttribute(namespace, \"name\", \"name\", \"CDATA\", name);\n         this.xmlConsumer.startElement(namespace, \"value\", \"value\", ai);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/fab339243f5b5aea5590f4f58ac3764778996ad7",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2420fc89b4bf728f7f2a14e932bb07b3fa85dbe4",
        "message": "fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@106910 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_16",
        "file": [
            {
                "sha": "e48c6c19d81c16e0a8a243b3484d93c687dd6f25",
                "filename": "src/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/fab339243f5b5aea5590f4f58ac3764778996ad7/src/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/fab339243f5b5aea5590f4f58ac3764778996ad7/src/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java?ref=fab339243f5b5aea5590f4f58ac3764778996ad7",
                "patch": "@@ -167,7 +167,9 @@ public WebContinuation lookupWebContinuation(String id, String interpreterId) {\n         // REVISIT: Is the following check needed to avoid threading issues:\n         // return wk only if !(wk.hasExpired) ?\n         WebContinuation kont = (WebContinuation) idToWebCont.get(id);\n-        return (kont.interpreterMatches(interpreterId)) ? kont : null;\n+        if ( kont != null )\n+        \treturn (kont.interpreterMatches(interpreterId)) ? kont : null;\n+        return null;\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/c990b9c92fd53478381f50e12a28d28412250633",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/6fc91f0cfb1f31dd3513189a13842330c87b09cc",
        "message": "fixed possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@106296 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_17",
        "file": [
            {
                "sha": "80f82205e39db9bfc4eb19ccdc8d5e307dd2d200",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/datatype/DefaultSelectionListBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/c990b9c92fd53478381f50e12a28d28412250633/src/blocks/forms/java/org/apache/cocoon/forms/datatype/DefaultSelectionListBuilder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c990b9c92fd53478381f50e12a28d28412250633/src/blocks/forms/java/org/apache/cocoon/forms/datatype/DefaultSelectionListBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/datatype/DefaultSelectionListBuilder.java?ref=c990b9c92fd53478381f50e12a28d28412250633",
                "patch": "@@ -137,10 +137,10 @@ private Element readSelectionList(String src) throws Exception {\n \n             return selectionListElement;\n         } finally {\n-            if (source != null) {\n-                resolver.release(source);\n-            }\n             if (resolver != null) {\n+                if (source != null) {\n+                    resolver.release(source);\n+                }\n                 serviceManager.release(resolver);\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/185efc252e38760c08cae3a00e3c0e762d26183b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/f0108cf9dffc0d9040ac3c56621457b4c670aa84",
        "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@76037 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_18",
        "file": [
            {
                "sha": "65859fbe4138039733b44effa56cc656b5220c16",
                "filename": "src/java/org/apache/cocoon/components/pipeline/impl/AbstractCachingProcessingPipeline.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/185efc252e38760c08cae3a00e3c0e762d26183b/src/java/org/apache/cocoon/components/pipeline/impl/AbstractCachingProcessingPipeline.java",
                "raw_url": "https://github.com/apache/cocoon/raw/185efc252e38760c08cae3a00e3c0e762d26183b/src/java/org/apache/cocoon/components/pipeline/impl/AbstractCachingProcessingPipeline.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/pipeline/impl/AbstractCachingProcessingPipeline.java?ref=185efc252e38760c08cae3a00e3c0e762d26183b",
                "patch": "@@ -781,7 +781,7 @@ protected boolean processReader(Environment  environment)\n      * Otherwise return <code>null</code>\n      */\n     public SourceValidity getValidityForEventPipeline() {\n-        if (this.cachedResponse != null) {\n+        if (this.cachedResponse != null && this.toCacheSourceValidities != null) {\n             final AggregatedValidity validity = new AggregatedValidity();\n             for (int i=0; i < this.toCacheSourceValidities.length; i++) {\n                 validity.add(this.toCacheSourceValidities[i]);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/a1bcd1188a45c414752837ffc1225c536d1c7a50",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/d8d7c03e84290a935e16eed02d83483bdf5c22bd",
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@47151 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_19",
        "file": [
            {
                "sha": "e51ce3add437be32bee55097130be9f7f1b8434f",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractUserProfileManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/a1bcd1188a45c414752837ffc1225c536d1c7a50/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractUserProfileManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/a1bcd1188a45c414752837ffc1225c536d1c7a50/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractUserProfileManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractUserProfileManager.java?ref=a1bcd1188a45c414752837ffc1225c536d1c7a50",
                "patch": "@@ -64,9 +64,9 @@ public void logout() {\n         PortalService service = null;\n         ServiceSelector adapterSelector = null;\n         try {\n-            final String layoutKey = service.getDefaultLayoutKey();\n             adapterSelector = (ServiceSelector)this.manager.lookup(CopletAdapter.ROLE+\"Selector\");\n             service = (PortalService)this.manager.lookup(PortalService.ROLE);\n+            final String layoutKey = service.getDefaultLayoutKey();\n \n             CopletInstanceDataManager copletInstanceDataManager = (CopletInstanceDataManager)service.getAttribute(\"CopletInstanceData:\"+layoutKey);\n             if ( copletInstanceDataManager != null ) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/05745fc9ef5a81554c35889af2840490d145c571",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/9325352630eaf115bffa9f18fb57bed828226e44",
        "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@36607 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_20",
        "file": [
            {
                "sha": "cd2d92048e5671a779200daf6af8887d5f84afaf",
                "filename": "src/blocks/scratchpad/java/org/apache/cocoon/components/source/impl/InspectableTraversableCachingSource.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/05745fc9ef5a81554c35889af2840490d145c571/src/blocks/scratchpad/java/org/apache/cocoon/components/source/impl/InspectableTraversableCachingSource.java",
                "raw_url": "https://github.com/apache/cocoon/raw/05745fc9ef5a81554c35889af2840490d145c571/src/blocks/scratchpad/java/org/apache/cocoon/components/source/impl/InspectableTraversableCachingSource.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/scratchpad/java/org/apache/cocoon/components/source/impl/InspectableTraversableCachingSource.java?ref=05745fc9ef5a81554c35889af2840490d145c571",
                "patch": "@@ -126,7 +126,7 @@ protected SourceMeta createMeta() {\n \n     protected void initMeta(SourceMeta meta, Source source) throws IOException {\n         super.initMeta(meta, source);\n-        final InspectableSourceMeta imeta = ((InspectableSourceMeta) super.response.getExtra());\n+        final InspectableSourceMeta imeta = ((InspectableSourceMeta) meta);\n         imeta.setSourceProperties(isource.getSourceProperties());\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/107e87be75d2c3d485c88402fc86ad9b5215bd3b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/cb69aab0f69fe8ad74f270b1c5e33c3381cf2b53",
        "message": "Catch also NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28044 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_21",
        "file": [
            {
                "sha": "4488fc463dd215dbfa385e77f750fd9219c0c8ad",
                "filename": "src/blocks/javaflow/java/org/apache/cocoon/samples/flow/java/CalculatorFlow.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/107e87be75d2c3d485c88402fc86ad9b5215bd3b/src/blocks/javaflow/java/org/apache/cocoon/samples/flow/java/CalculatorFlow.java",
                "raw_url": "https://github.com/apache/cocoon/raw/107e87be75d2c3d485c88402fc86ad9b5215bd3b/src/blocks/javaflow/java/org/apache/cocoon/samples/flow/java/CalculatorFlow.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/javaflow/java/org/apache/cocoon/samples/flow/java/CalculatorFlow.java?ref=107e87be75d2c3d485c88402fc86ad9b5215bd3b",
                "patch": "@@ -51,7 +51,7 @@ private float getNumber(String name, float a, float b) {\n         float value = 0f;\n         try {\n             value = Float.parseFloat(getRequest().getParameter(name));\n-        } catch (NumberFormatException nfe) {\n+        } catch (Exception e) {\n             sendMessage(\"Error: \\\"\"+getRequest().getParameter(name)+\"\\\" is not a correct number!\");\n         }\n         return value;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4585d5c0d5163f4a6a4805a85fddcf2c236b7a46",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/3fb3d37c02b2ce585e4041a28c408fc8227c2cd6",
        "message": "prevent NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27883 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_22",
        "file": [
            {
                "sha": "b63506193515a0b02faa5ecf47a58ab8d3fbb54d",
                "filename": "src/blocks/repository/java/org/apache/cocoon/generation/TraversableGenerator.java",
                "status": "modified",
                "additions": 9,
                "deletions": 5,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/4585d5c0d5163f4a6a4805a85fddcf2c236b7a46/src/blocks/repository/java/org/apache/cocoon/generation/TraversableGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4585d5c0d5163f4a6a4805a85fddcf2c236b7a46/src/blocks/repository/java/org/apache/cocoon/generation/TraversableGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/repository/java/org/apache/cocoon/generation/TraversableGenerator.java?ref=4585d5c0d5163f4a6a4805a85fddcf2c236b7a46",
                "patch": "@@ -100,7 +100,7 @@\n  *         (SMB GmbH) for Virbus AG\n  * @author <a href=\"d.madama@pro-netics.com\">Daniele Madama</a>\n  * @author <a href=\"gianugo@apache.org\">Gianugo Rabellino</a>\n- * @version CVS $Id: TraversableGenerator.java,v 1.11 2004/03/22 13:49:04 unico Exp $\n+ * @version CVS $Id: TraversableGenerator.java,v 1.12 2004/03/25 13:21:14 unico Exp $\n  */\n public class TraversableGenerator extends ServiceableGenerator implements CacheableProcessingComponent {\n \n@@ -316,10 +316,14 @@ public void generate() throws SAXException, ProcessingException {\n             throw new ResourceNotFoundException(\"Could not read collection \"\n                                                 + this.source, ioe);\n         } finally {\n-            this.resolver.release(src);\n-            Enumeration enum = ancestors.elements();\n-            while (enum.hasMoreElements()) {\n-                resolver.release((Source) enum.nextElement());\n+            if (src != null) {\n+                this.resolver.release(src);\n+            }\n+            if (ancestors != null) {\n+                Enumeration enum = ancestors.elements();\n+                while (enum.hasMoreElements()) {\n+                    resolver.release((Source) enum.nextElement());\n+                }\n             }\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/1b15c64cd86d6e9e5e640cc040f73c84f3f51c6a",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/8da3cbac7cfa5c09d5828bd6b15f7de7f64a2ff7",
        "message": "avoid NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27730 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_23",
        "file": [
            {
                "sha": "ddb805bc9563b57a9e4400a93c4da598d2e671e7",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/binding/RepeaterJXPathBinding.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/1b15c64cd86d6e9e5e640cc040f73c84f3f51c6a/src/blocks/forms/java/org/apache/cocoon/forms/binding/RepeaterJXPathBinding.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1b15c64cd86d6e9e5e640cc040f73c84f3f51c6a/src/blocks/forms/java/org/apache/cocoon/forms/binding/RepeaterJXPathBinding.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/binding/RepeaterJXPathBinding.java?ref=1b15c64cd86d6e9e5e640cc040f73c84f3f51c6a",
                "patch": "@@ -33,7 +33,7 @@\n  * that allows for bidirectional binding of a repeater-widget to/from\n  * repeating structures in the back-end object model.\n  *\n- * @version CVS $Id: RepeaterJXPathBinding.java,v 1.2 2004/03/12 03:31:39 joerg Exp $\n+ * @version CVS $Id: RepeaterJXPathBinding.java,v 1.3 2004/03/15 21:57:26 joerg Exp $\n  */\n public class RepeaterJXPathBinding extends JXPathBindingBase {\n \n@@ -95,6 +95,10 @@ public void doLoad(Widget frmModel, JXPathContext jxpc)\n             throws BindingException {\n         // Find the repeater\n         Repeater repeater = (Repeater) frmModel.getWidget(this.repeaterId);\n+        if (repeater == null) {\n+            throw new BindingException(\"The repeater with the ID [\" + this.repeaterId\n+                    + \"] referenced in the binding does not exist in the form definition.\");\n+        }\n         repeater.removeRows();\n         int initialSize = repeater.getSize();\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4287f78d7dacfe4bf1a11a7cfc1799a4702ea247",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b71b1788b7bdd21e598434bcf16024abc451cc9e",
        "message": "Avoid NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27423 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_24",
        "file": [
            {
                "sha": "fa32678f1767358e5340f8274e7508df9c5ad488",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/4287f78d7dacfe4bf1a11a7cfc1799a4702ea247/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4287f78d7dacfe4bf1a11a7cfc1799a4702ea247/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java?ref=4287f78d7dacfe4bf1a11a7cfc1799a4702ea247",
                "patch": "@@ -71,6 +71,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.cocoon.portal.util.DeltaApplicableReferencesAdjustable;\n import org.apache.cocoon.portal.util.ProfileException;\n import org.apache.cocoon.webapps.authentication.AuthenticationManager;\n+import org.apache.cocoon.webapps.authentication.configuration.ApplicationConfiguration;\n import org.apache.cocoon.webapps.authentication.user.RequestState;\n import org.apache.cocoon.webapps.authentication.user.UserHandler;\n import org.apache.commons.collections.map.LinkedMap;\n@@ -84,7 +85,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj&ouml;rn L&uuml;tkemeier</a>\n  * \n- * @version CVS $Id: AuthenticationProfileManager.java,v 1.16 2004/01/27 14:58:05 cziegeler Exp $\n+ * @version CVS $Id: AuthenticationProfileManager.java,v 1.17 2004/02/23 15:24:54 cziegeler Exp $\n  */\n public class AuthenticationProfileManager \n     extends AbstractUserProfileManager { \n@@ -121,7 +122,11 @@ protected Layout loadProfile(String layoutKey,\n     throws Exception {\n         final RequestState state = this.getRequestState();\n         final UserHandler handler = state.getHandler();\n-        final Configuration appConf = state.getApplicationConfiguration().getConfiguration(\"portal\");\n+        final ApplicationConfiguration ac = state.getApplicationConfiguration();        \n+        if ( ac == null ) {\n+            throw new ProcessingException(\"Configuration for portal not found in application configuration.\");\n+        }\n+        final Configuration appConf = ac.getConfiguration(\"portal\");\n         if ( appConf == null ) {\n             throw new ProcessingException(\"Configuration for portal not found in application configuration.\");\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/9631c8ee3b4b5eda853f791c4eff57fee0a94745",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/96bd57d4541d1b03227934456c7f5f7b29e339d1",
        "message": "Avoid NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27017 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_25",
        "file": [
            {
                "sha": "0f2b9d9526cb88d28c0b3d43a03f38262f5fccc4",
                "filename": "src/java/org/apache/cocoon/components/ComponentContext.java",
                "status": "modified",
                "additions": 12,
                "deletions": 3,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/9631c8ee3b4b5eda853f791c4eff57fee0a94745/src/java/org/apache/cocoon/components/ComponentContext.java",
                "raw_url": "https://github.com/apache/cocoon/raw/9631c8ee3b4b5eda853f791c4eff57fee0a94745/src/java/org/apache/cocoon/components/ComponentContext.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/ComponentContext.java?ref=9631c8ee3b4b5eda853f791c4eff57fee0a94745",
                "patch": "@@ -55,14 +55,15 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.avalon.framework.context.Context;\n import org.apache.avalon.framework.context.ContextException;\n import org.apache.avalon.framework.context.DefaultContext;\n+import org.apache.cocoon.environment.Environment;\n \n /**\n  * This is the {@link Context} implementation for Cocoon components.\n  * It extends the {@link DefaultContext} by a special handling for\n  * getting objects from the object model.\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: ComponentContext.java,v 1.2 2003/05/23 12:14:04 cziegeler Exp $\n+ * @version CVS $Id: ComponentContext.java,v 1.3 2004/01/19 10:33:23 cziegeler Exp $\n  */\n \n public class ComponentContext \n@@ -116,12 +117,20 @@ public ComponentContext() {\n     public Object get( final Object key )\n     throws ContextException {\n         if ( key.equals(ContextHelper.CONTEXT_OBJECT_MODEL)) {\n-            return CocoonComponentManager.getCurrentEnvironment().getObjectModel();\n+            final Environment env = CocoonComponentManager.getCurrentEnvironment();\n+            if ( env == null ) {\n+                throw new ContextException(\"Unable to locate \" + key + \" (No environment available)\");\n+            }\n+            return env.getObjectModel();\n         }\n         if ( key instanceof String ) {\n             String stringKey = (String)key;\n             if ( stringKey.startsWith(OBJECT_MODEL_KEY_PREFIX) ) {\n-                final Map objectModel = CocoonComponentManager.getCurrentEnvironment().getObjectModel();\n+                final Environment env = CocoonComponentManager.getCurrentEnvironment();\n+                if ( env == null ) {\n+                    throw new ContextException(\"Unable to locate \" + key + \" (No environment available)\");\n+                }\n+                final Map objectModel = env.getObjectModel();\n                 String objectKey = stringKey.substring(OBJECT_MODEL_KEY_PREFIX.length());\n                 \n                 Object o = objectModel.get( objectKey );"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d836ef8cf704245a7881ee83960b0affd5b44a57",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/41fa2a54b95931b92b5194d4285c022eaff16fdc",
        "message": "Fixing NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26034 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_26",
        "file": [
            {
                "sha": "5fc3d951d883d6f508489f4f5af44c788105ab33",
                "filename": "src/java/org/apache/cocoon/servlet/CocoonServlet.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/d836ef8cf704245a7881ee83960b0affd5b44a57/src/java/org/apache/cocoon/servlet/CocoonServlet.java",
                "raw_url": "https://github.com/apache/cocoon/raw/d836ef8cf704245a7881ee83960b0affd5b44a57/src/java/org/apache/cocoon/servlet/CocoonServlet.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/servlet/CocoonServlet.java?ref=d836ef8cf704245a7881ee83960b0affd5b44a57",
                "patch": "@@ -130,7 +130,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:leo.sutic@inspireinfrastructure.com\">Leo Sutic</a>\n- * @version CVS $Id: CocoonServlet.java,v 1.17 2003/10/19 17:53:03 cziegeler Exp $\n+ * @version CVS $Id: CocoonServlet.java,v 1.18 2003/10/20 08:41:26 cziegeler Exp $\n  */\n public class CocoonServlet extends HttpServlet {\n \n@@ -1352,7 +1352,10 @@ private synchronized void createCocoon()\n             ContainerUtil.enableLogging(c, getCocoonLogger() );\n             c.setLoggerManager( getLoggerManager() );\n             ContainerUtil.contextualize(c, this.appContext);\n-            ContainerUtil.compose(c, getParentComponentManager());\n+            final ComponentManager parent = this.getParentComponentManager();\n+            if ( parent != null ) {\n+                ContainerUtil.compose(c, parent);\n+            }\n             if (this.enableInstrumentation) {\n                 c.setInstrumentManager(getInstrumentManager());\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/6c7f9c4b09553eab9e67f307edc1fbdb37cf146d",
        "message": "Fixing NPE, refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24563 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_27",
        "file": [
            {
                "sha": "4cbe6c908ca109c49129bc38ee27d9f6d2966ddf",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -80,7 +80,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: URICopletAdapter.java,v 1.8 2003/05/26 10:34:52 cziegeler Exp $\n+ * @version CVS $Id: URICopletAdapter.java,v 1.9 2003/05/26 12:49:14 cziegeler Exp $\n  */\n public class URICopletAdapter \n     extends AbstractCopletAdapter\n@@ -194,7 +194,7 @@ public void inform(Event e) {\n             if ( list == null ) {\n                 list = new ArrayList();\n             }\n-            list.add(event.getCopletInstanceData());\n+            list.add(event.getTarget());\n             service.setTemporaryAttribute(URICopletAdapter.class.getName(), list);\n         } catch (ComponentException ignore ) {            \n         } finally {"
            },
            {
                "sha": "7b76228174b1c9057788e7949a3f5f5828cd72e2",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/ActionEvent.java",
                "status": "modified",
                "additions": 3,
                "deletions": 4,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/ActionEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/ActionEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/ActionEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -51,16 +51,15 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n package org.apache.cocoon.portal.event;\n \n /**\n- *\n+ * This event is performed \"on\" a target\n+ * \n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: ActionEvent.java,v 1.1 2003/05/07 06:22:26 cziegeler Exp $\n+ * @version CVS $Id: ActionEvent.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public interface ActionEvent extends Event {\n \n     Object getTarget();\n     \n-    int getAction();\n-    \n }"
            },
            {
                "sha": "49df244a4894a425373c11411c922a82042280c7",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/CopletInstanceEvent.java",
                "status": "modified",
                "additions": 2,
                "deletions": 5,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/CopletInstanceEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/CopletInstanceEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/CopletInstanceEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -50,18 +50,15 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n */\n package org.apache.cocoon.portal.event;\n \n-import org.apache.cocoon.portal.coplet.CopletInstanceData;\n \n /**\n  * This interface marks an event as an event for a coplet instance.\n  *\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * \n- * @version CVS $Id: CopletInstanceEvent.java,v 1.1 2003/05/26 10:34:53 cziegeler Exp $\n+ * @version CVS $Id: CopletInstanceEvent.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public interface CopletInstanceEvent \n-    extends Event {\n+    extends ActionEvent {\n         \n-    CopletInstanceData getCopletInstanceData();\n-\n }"
            },
            {
                "sha": "ff4e6780a24b0103dcd4fb09b5463d38f0a68859",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/LayoutEvent.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/LayoutEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/LayoutEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/LayoutEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -51,11 +51,13 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n package org.apache.cocoon.portal.event;\n \n /**\n- *\n+ * This interface marks an {@link ActionEvent} as targetted at a {@link Layout}\n+ * object\n+ * \n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: LayoutEvent.java,v 1.1 2003/05/07 06:22:26 cziegeler Exp $\n+ * @version CVS $Id: LayoutEvent.java,v 1.2 2003/05/26 12:49:14 cziegeler Exp $\n  */\n public interface LayoutEvent extends ActionEvent {\n     "
            },
            {
                "sha": "f3c9010f8e47ab77433ffbdac1bde287b39778c5",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/impl/AbstractActionEvent.java",
                "status": "modified",
                "additions": 6,
                "deletions": 15,
                "changes": 21,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/AbstractActionEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/AbstractActionEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/AbstractActionEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -53,35 +53,26 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.cocoon.portal.event.ActionEvent;\n \n /**\n- *\n+ * This event is performed on a target\n+ * \n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: AbstractActionEvent.java,v 1.1 2003/05/07 06:22:23 cziegeler Exp $\n+ * @version CVS $Id: AbstractActionEvent.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public abstract class AbstractActionEvent implements ActionEvent {\n \n-    final protected Object target;\n-    \n-    final protected int action;\n+    protected Object target;\n     \n-    public AbstractActionEvent(Object target, int action) {\n+    public AbstractActionEvent(Object target) {\n         this.target = target;\n-        this.action = action;\n     }\n     \n-    /**\n-     * @return int\n-     */\n-    public int getAction() {\n-        return action;\n-    }\n-\n     /**\n      * @return Object\n      */\n     public Object getTarget() {\n-        return target;\n+        return this.target;\n     }\n \n }"
            },
            {
                "sha": "b1674c9c8086c0e64909fb87caf3da24dac7d092",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeAspectDataEvent.java",
                "status": "modified",
                "additions": 13,
                "deletions": 10,
                "changes": 23,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeAspectDataEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeAspectDataEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeAspectDataEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -51,26 +51,25 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n package org.apache.cocoon.portal.event.impl;\n \n import org.apache.cocoon.portal.aspect.Aspectalizable;\n-import org.apache.cocoon.portal.event.Event;\n+import org.apache.cocoon.portal.event.ActionEvent;\n \n /**\n  * This events set the aspect data for an {@link Aspectalizable} object\n  *\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * \n- * @version CVS $Id: ChangeAspectDataEvent.java,v 1.2 2003/05/26 10:34:52 cziegeler Exp $\n+ * @version CVS $Id: ChangeAspectDataEvent.java,v 1.3 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public class ChangeAspectDataEvent\n-    implements Event {\n+    extends AbstractActionEvent\n+    implements ActionEvent {\n \n-    protected Aspectalizable target;\n-    \n     protected String aspectName;\n     \n     protected Object data;\n     \n     public ChangeAspectDataEvent(Aspectalizable target, String aspectName, Object data) {\n-        this.target = target;\n+        super(target);\n         this.aspectName = aspectName;\n         this.data = data;\n     }\n@@ -79,21 +78,25 @@ public ChangeAspectDataEvent(Aspectalizable target, String aspectName, Object da\n      * @return\n      */\n     public String getAspectName() {\n-        return aspectName;\n+        return this.aspectName;\n     }\n \n     /**\n      * @return\n      */\n     public Object getData() {\n-        return data;\n+        return this.data;\n     }\n \n     /**\n      * @return\n      */\n-    public Aspectalizable getTarget() {\n-        return target;\n+    public Object getTarget() {\n+        return this.target;\n     }\n \n+\n+    public Aspectalizable getAspectalizable() {\n+        return (Aspectalizable)this.target;\n+    }\n }"
            },
            {
                "sha": "97be4ce1ebe7e52522ef01fca7be0c46f4598853",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeCopletInstanceAspectDataEvent.java",
                "status": "modified",
                "additions": 1,
                "deletions": 5,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeCopletInstanceAspectDataEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeCopletInstanceAspectDataEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/ChangeCopletInstanceAspectDataEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -58,7 +58,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * \n- * @version CVS $Id: ChangeCopletInstanceAspectDataEvent.java,v 1.1 2003/05/26 10:34:52 cziegeler Exp $\n+ * @version CVS $Id: ChangeCopletInstanceAspectDataEvent.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public class ChangeCopletInstanceAspectDataEvent\n     extends ChangeAspectDataEvent\n@@ -68,8 +68,4 @@ public ChangeCopletInstanceAspectDataEvent(CopletInstanceData target, String asp\n         super( target, aspectName, data );\n     }\n \n-    public CopletInstanceData getCopletInstanceData() {\n-        return (CopletInstanceData)this.getTarget();\n-    }\n-\n }"
            },
            {
                "sha": "bd9b5bc09a7fc40af113dcbe697d118e79e3c0ad",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/impl/DefaultEventManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/DefaultEventManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/DefaultEventManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/DefaultEventManager.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -80,15 +80,14 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.cocoon.portal.event.Subscriber;\n import org.apache.cocoon.portal.event.aspect.EventAspect;\n import org.apache.cocoon.portal.event.subscriber.impl.DefaultChangeAspectDataEventSubscriber;\n-import org.apache.cocoon.portal.event.subscriber.impl.DefaultLayoutEventSubscriber;\n import org.apache.cocoon.portal.event.subscriber.impl.SizingEventSubscriber;\n \n /**\n  *\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: DefaultEventManager.java,v 1.7 2003/05/26 09:53:00 cziegeler Exp $\n+ * @version CVS $Id: DefaultEventManager.java,v 1.8 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public class DefaultEventManager \n     extends AbstractLogEnabled\n@@ -155,7 +154,6 @@ public void initialize()\n         }\n \n         // FIXME (CZ,HIGH) : Make this configurable\n-        this.subscribe(new DefaultLayoutEventSubscriber(this.manager));\n         this.subscribe(new DefaultChangeAspectDataEventSubscriber(this.manager));\n         this.subscribe(new SizingEventSubscriber(this.manager));\n     }"
            },
            {
                "sha": "fbdd4c07d3a8c17eb65cd5150492f1b77329501a",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LayoutRemoveEvent.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LayoutRemoveEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LayoutRemoveEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LayoutRemoveEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -57,7 +57,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: LayoutRemoveEvent.java,v 1.1 2003/05/07 06:22:23 cziegeler Exp $\n+ * @version CVS $Id: LayoutRemoveEvent.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public class LayoutRemoveEvent\n     extends AbstractActionEvent\n@@ -67,8 +67,8 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n      * @param target\n      * @param action\n      */\n-    public LayoutRemoveEvent(Object target, int action) {\n-        super(target, action);\n+    public LayoutRemoveEvent(Object target) {\n+        super(target);\n     }\n \n }"
            },
            {
                "sha": "f0a2d359cbe809dbb58f5b954bea3438bdbcf41b",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LinkEvent.java",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LinkEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LinkEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/impl/LinkEvent.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -50,27 +50,30 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n */\n package org.apache.cocoon.portal.event.impl;\n \n-import org.apache.cocoon.portal.event.Event;\n+import org.apache.cocoon.portal.coplet.CopletInstanceData;\n+import org.apache.cocoon.portal.event.CopletInstanceEvent;\n \n /**\n  * This class realizes a link event created by the EventLinkTransformer.\n  *  \n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj\ufffdrn L\ufffdtkemeier</a>\n  * \n- * @version CVS $Id: LinkEvent.java,v 1.1 2003/05/08 11:54:00 cziegeler Exp $\n+ * @version CVS $Id: LinkEvent.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public class LinkEvent\n-implements Event {\n+extends AbstractActionEvent\n+implements CopletInstanceEvent {\n     \n     /**\n      * The link to be handled by this event.\n      */\n-    private String link;\n+    protected String link;\n     \n     /**\n      * Creates a new LinkEvent.\n      */\n-    public LinkEvent(String link) {\n+    public LinkEvent(CopletInstanceData target, String link) {\n+        super(target);\n         this.link = link;\n     }\n     "
            },
            {
                "sha": "12d7bc62004bce4b1e49ab7323efd6b9f7789fe7",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/subscriber/impl/DefaultChangeAspectDataEventSubscriber.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/subscriber/impl/DefaultChangeAspectDataEventSubscriber.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/event/subscriber/impl/DefaultChangeAspectDataEventSubscriber.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/event/subscriber/impl/DefaultChangeAspectDataEventSubscriber.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -61,7 +61,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * \n- * @version CVS $Id: DefaultChangeAspectDataEventSubscriber.java,v 1.1 2003/05/23 14:20:09 cziegeler Exp $\n+ * @version CVS $Id: DefaultChangeAspectDataEventSubscriber.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public final class DefaultChangeAspectDataEventSubscriber \n     implements Subscriber {\n@@ -91,7 +91,7 @@ public Filter getFilter() {\n      */\n     public void inform(Event e) {\n         final ChangeAspectDataEvent event = (ChangeAspectDataEvent)e;\n-        final Aspectalizable target = event.getTarget();\n+        final Aspectalizable target = event.getAspectalizable();\n         target.setAspectData(event.getAspectName(), event.getData());\n     }\n "
            },
            {
                "sha": "0ceafc5d4afe0715de77df1878d6230eaf1d39de",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/layout/CompositeLayout.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/layout/CompositeLayout.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/layout/CompositeLayout.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/layout/CompositeLayout.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -62,7 +62,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * \n  * TODO Make an interface out of this\n  * \n- * @version CVS $Id: CompositeLayout.java,v 1.4 2003/05/26 09:52:58 cziegeler Exp $\n+ * @version CVS $Id: CompositeLayout.java,v 1.5 2003/05/26 12:49:12 cziegeler Exp $\n  */\n public class CompositeLayout extends AbstractLayout {\n \n@@ -80,6 +80,7 @@ public CompositeLayout() {}\n \t */\n \tpublic final void addItem(int index, Item item) {\n \t\titems.add(index, item);\n+        item.setParent(this);\n \t}\n \n \t/**"
            },
            {
                "sha": "a0aa8142b4302c322291e73e16e2b32a56bfa847",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/AbstractActionAspect.java",
                "status": "renamed",
                "additions": 35,
                "deletions": 29,
                "changes": 64,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/AbstractActionAspect.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/AbstractActionAspect.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/AbstractActionAspect.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -48,54 +48,60 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  Software Foundation, please see <http://www.apache.org/>.\n \n */\n-package org.apache.cocoon.portal.event.subscriber.impl;\n+package org.apache.cocoon.portal.layout.renderer.aspect.impl;\n \n-import org.apache.avalon.framework.component.ComponentManager;\n-import org.apache.cocoon.portal.event.Event;\n+import org.apache.avalon.framework.activity.Disposable;\n+import org.apache.avalon.framework.activity.Initializable;\n+import org.apache.cocoon.portal.event.EventManager;\n import org.apache.cocoon.portal.event.Filter;\n-import org.apache.cocoon.portal.event.LayoutEvent;\n import org.apache.cocoon.portal.event.Subscriber;\n-import org.apache.cocoon.portal.event.impl.LayoutRemoveEvent;\n-import org.apache.cocoon.portal.layout.Layout;\n \n /**\n- *\n+ * This aspect creates an event and subscribes to it as well\n+ * \n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n- * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: DefaultLayoutEventSubscriber.java,v 1.4 2003/05/19 14:10:12 cziegeler Exp $\n+ * @version CVS $Id: AbstractActionAspect.java,v 1.1 2003/05/26 12:49:13 cziegeler Exp $\n  */\n-public final class DefaultLayoutEventSubscriber \n-    implements Subscriber {\n-\n-    private ComponentManager componentManager;\n-\n-    public DefaultLayoutEventSubscriber(ComponentManager manager) {\n-        this.componentManager = manager;\n-    }\n+public abstract class AbstractActionAspect\n+    extends AbstractAspect\n+    implements Subscriber, Disposable, Initializable {\n \n     /* (non-Javadoc)\n-     * @see org.apache.cocoon.portal.event.Subscriber#getEventType()\n+     * @see org.apache.cocoon.portal.event.Subscriber#getFilter()\n      */\n-    public Class getEventType() {\n-        return LayoutEvent.class;\n+    public Filter getFilter() {\n+        return null;\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.cocoon.portal.event.Subscriber#getFilter()\n+     * @see org.apache.avalon.framework.activity.Disposable#dispose()\n      */\n-    public Filter getFilter() {\n-        return null;\n+    public void dispose() {\n+        if ( this.manager != null ) {\n+            EventManager eventManager = null;\n+            try { \n+                eventManager = (EventManager)this.manager.lookup(EventManager.ROLE);\n+                eventManager.getRegister().unsubscribe( this );\n+            } catch (Exception ignore) {\n+            } finally {\n+                this.manager.release( eventManager ); \n+            }\n+            \n+            this.manager = null;\n+        }\n     }\n \n     /* (non-Javadoc)\n-     * @see org.apache.cocoon.portal.event.Subscriber#inform(org.apache.cocoon.portal.event.Event)\n+     * @see org.apache.avalon.framework.activity.Initializable#initialize()\n      */\n-    public void inform(Event event) {\n-        if (event instanceof LayoutRemoveEvent) { \n-            LayoutRemoveEvent removeEvent = (LayoutRemoveEvent)event;\n-            Layout layout = (Layout)removeEvent.getTarget();\n-            layout.getParent().getParent().removeItem(layout.getParent());\n+    public void initialize() throws Exception {\n+        EventManager eventManager = null;\n+        try { \n+            eventManager = (EventManager)this.manager.lookup(EventManager.ROLE);\n+            eventManager.getRegister().subscribe( this );\n+        } finally {\n+            this.manager.release( eventManager );\n         }\n     }\n ",
                "previous_filename": "src/blocks/portal/java/org/apache/cocoon/portal/event/subscriber/impl/DefaultLayoutEventSubscriber.java"
            },
            {
                "sha": "c3d550bc5d9fa4683aa34abdc852985d341a351f",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/RemovableAspect.java",
                "status": "modified",
                "additions": 23,
                "deletions": 3,
                "changes": 26,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/RemovableAspect.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/RemovableAspect.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/RemovableAspect.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -52,6 +52,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n \n import org.apache.cocoon.portal.PortalService;\n import org.apache.cocoon.portal.coplet.CopletInstanceData;\n+import org.apache.cocoon.portal.event.Event;\n import org.apache.cocoon.portal.event.impl.LayoutRemoveEvent;\n import org.apache.cocoon.portal.layout.Layout;\n import org.apache.cocoon.portal.layout.impl.CopletLayout;\n@@ -65,9 +66,10 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: RemovableAspect.java,v 1.2 2003/05/22 12:32:46 cziegeler Exp $\n+ * @version CVS $Id: RemovableAspect.java,v 1.3 2003/05/26 12:49:13 cziegeler Exp $\n  */\n-public class RemovableAspect extends AbstractAspect {\n+public class RemovableAspect \n+    extends AbstractActionAspect {\n \n \t/* (non-Javadoc)\n \t * @see org.apache.cocoon.portal.layout.renderer.RendererAspect#toSAX(org.apache.cocoon.portal.layout.renderer.RendererAspectContext, org.apache.cocoon.portal.layout.Layout, org.apache.cocoon.portal.PortalService, org.xml.sax.ContentHandler)\n@@ -82,10 +84,28 @@ public void toSAX(RendererAspectContext context,\n \n         Boolean mandatory = (Boolean)cid.getCopletData().getAspectData(\"mandatory\");\n         if ( !mandatory.booleanValue() ) {\n-            LayoutRemoveEvent lre = new LayoutRemoveEvent(layout, 0);\n+            LayoutRemoveEvent lre = new LayoutRemoveEvent(layout);\n             XMLUtils.createElement(handler, \"remove-uri\", service.getLinkService().getLinkURI(lre));\n         }\n         context.invokeNext(layout, service, handler);\n \t}\n \n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.portal.event.Subscriber#getEventType()\n+     */\n+    public Class getEventType() {\n+        return LayoutRemoveEvent.class;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.portal.event.Subscriber#inform(org.apache.cocoon.portal.event.Event)\n+     */\n+    public void inform(Event e) {\n+        // TODO - place this subscriber at a more strategic place\n+        // TODO - if this is a coplet layout remove coplet instance data\n+        // TODO - if this is a composite layout, recursive remove\n+        LayoutRemoveEvent event = (LayoutRemoveEvent)e;\n+        Layout layout = (Layout)event.getTarget();\n+        layout.getParent().getParent().removeItem(layout.getParent());\n+    }\n }"
            },
            {
                "sha": "638640f6128ef9ece37b3c5122c1f421b755ce0b",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/transformation/AbstractCopletTransformer.java",
                "status": "added",
                "additions": 129,
                "deletions": 0,
                "changes": 129,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/transformation/AbstractCopletTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/transformation/AbstractCopletTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/transformation/AbstractCopletTransformer.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -0,0 +1,129 @@\n+/*\n+\n+ ============================================================================\n+                   The Apache Software License, Version 1.1\n+ ============================================================================\n+\n+ Copyright (C) 1999-2002 The Apache Software Foundation. All rights reserved.\n+\n+ Redistribution and use in source and binary forms, with or without modifica-\n+ tion, are permitted provided that the following conditions are met:\n+\n+ 1. Redistributions of  source code must  retain the above copyright  notice,\n+    this list of conditions and the following disclaimer.\n+\n+ 2. Redistributions in binary form must reproduce the above copyright notice,\n+    this list of conditions and the following disclaimer in the documentation\n+    and/or other materials provided with the distribution.\n+\n+ 3. The end-user documentation included with the redistribution, if any, must\n+    include  the following  acknowledgment:  \"This product includes  software\n+    developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n+    Alternately, this  acknowledgment may  appear in the software itself,  if\n+    and wherever such third-party acknowledgments normally appear.\n+\n+ 4. The names \"Apache Cocoon\" and  \"Apache Software Foundation\" must  not  be\n+    used to  endorse or promote  products derived from  this software without\n+    prior written permission. For written permission, please contact\n+    apache@apache.org.\n+\n+ 5. Products  derived from this software may not  be called \"Apache\", nor may\n+    \"Apache\" appear  in their name,  without prior written permission  of the\n+    Apache Software Foundation.\n+\n+ THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n+ INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ FITNESS  FOR A PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN NO  EVENT SHALL  THE\n+ APACHE SOFTWARE  FOUNDATION  OR ITS CONTRIBUTORS  BE LIABLE FOR  ANY DIRECT,\n+ INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLU-\n+ DING, BUT NOT LIMITED TO, PROCUREMENT  OF SUBSTITUTE GOODS OR SERVICES; LOSS\n+ OF USE, DATA, OR  PROFITS; OR BUSINESS  INTERRUPTION)  HOWEVER CAUSED AND ON\n+ ANY  THEORY OF LIABILITY,  WHETHER  IN CONTRACT,  STRICT LIABILITY,  OR TORT\n+ (INCLUDING  NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT OF THE  USE OF\n+ THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+ This software  consists of voluntary contributions made  by many individuals\n+ on  behalf of the Apache Software  Foundation and was  originally created by\n+ Stefano Mazzocchi  <stefano@apache.org>. For more  information on the Apache\n+ Software Foundation, please see <http://www.apache.org/>.\n+\n+*/\n+package org.apache.cocoon.portal.transformation;\n+\n+import java.util.Map;\n+\n+import org.apache.avalon.framework.component.ComponentException;\n+import org.apache.avalon.framework.parameters.ParameterException;\n+import org.apache.cocoon.environment.ObjectModelHelper;\n+import org.apache.cocoon.portal.Constants;\n+import org.apache.cocoon.portal.PortalService;\n+import org.apache.cocoon.portal.coplet.CopletInstanceData;\n+import org.apache.cocoon.portal.profile.ProfileManager;\n+import org.apache.cocoon.transformation.AbstractSAXTransformer;\n+import org.xml.sax.SAXException;\n+\n+/**\n+ * Abstract transformer implementation\n+ *\n+ * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n+ * @version CVS $Id: AbstractCopletTransformer.java,v 1.1 2003/05/26 12:49:13 cziegeler Exp $\n+ */\n+public abstract class AbstractCopletTransformer \n+extends AbstractSAXTransformer {\n+\n+    /**\n+     * Parameter name.\n+     */\n+    public static final String COPLET_ID_PARAM = \"copletId\";\n+\n+    /**\n+     * Parameter name.\n+     */\n+    public static final String PORTAL_NAME_PARAM = \"portalName\";\n+\n+    protected CopletInstanceData getCopletInstanceData() \n+    throws SAXException {\n+        ProfileManager profileManager = null;\n+        try {\n+            profileManager = (ProfileManager)this.manager.lookup(ProfileManager.ROLE);\n+\n+            // determine coplet id\n+            String copletId = null;            \n+            Map context = (Map)objectModel.get(ObjectModelHelper.PARENT_CONTEXT);\n+            if (context != null) {\n+                copletId = (String)context.get(Constants.COPLET_ID_KEY);\n+            } else {\n+                try {\n+                    copletId = this.parameters.getParameter(COPLET_ID_PARAM);\n+                        \n+                    // set portal name\n+                    PortalService portalService = null;\n+                    try {\n+                        portalService = (PortalService)this.manager.lookup(PortalService.ROLE);\n+                        portalService.setPortalName(this.parameters.getParameter(PORTAL_NAME_PARAM));\n+                    } finally {\n+                        this.manager.release(portalService);\n+                    }\n+                } catch (ParameterException e) {\n+                    throw new SAXException(\"copletId and portalName must be passed as parameter or in the object model within the parent context.\");\n+                }\n+            }\n+            if (copletId == null) {\n+                throw new SAXException(\"copletId must be passed as parameter or in the object model within the parent context.\");\n+            }\n+\n+\n+            CopletInstanceData object = profileManager.getCopletInstanceData( copletId );\n+                \n+            if (object == null) {\n+                throw new SAXException(\"Could not find coplet instance data for \" + copletId);\n+            }\n+                \n+            return object;\n+        } catch (ComponentException e) {\n+            throw new SAXException(\"Error getting profile manager.\", e);\n+        } finally {\n+            this.manager.release(profileManager);\n+        }\n+    }\n+}"
            },
            {
                "sha": "c12dd09a7b93454091b0e31f7d97a9f7df36284e",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/transformation/CopletTransformer.java",
                "status": "modified",
                "additions": 11,
                "deletions": 62,
                "changes": 73,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/transformation/CopletTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/transformation/CopletTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/transformation/CopletTransformer.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -51,16 +51,9 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n package org.apache.cocoon.portal.transformation;\n \n import java.io.IOException;\n-import java.util.Map;\n \n-import org.apache.avalon.framework.component.ComponentException;\n-import org.apache.avalon.framework.parameters.ParameterException;\n import org.apache.cocoon.ProcessingException;\n-import org.apache.cocoon.environment.ObjectModelHelper;\n-import org.apache.cocoon.portal.Constants;\n-import org.apache.cocoon.portal.PortalService;\n-import org.apache.cocoon.portal.profile.ProfileManager;\n-import org.apache.cocoon.transformation.AbstractSAXTransformer;\n+import org.apache.cocoon.portal.coplet.CopletInstanceData;\n import org.apache.commons.jxpath.JXPathContext;\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n@@ -69,10 +62,10 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * Includes coplet instance data by using JXPath expressions.\n  *\n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj\ufffdrn L\ufffdtkemeier</a>\n- * @version CVS $Id: CopletTransformer.java,v 1.1 2003/05/08 11:54:00 cziegeler Exp $\n+ * @version CVS $Id: CopletTransformer.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public class CopletTransformer \n-extends AbstractSAXTransformer {\n+extends AbstractCopletTransformer {\n \n     /**\n      * The namespace URI to listen for.\n@@ -89,16 +82,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n      */\n     public static final String SELECT_ATTR = \"select\";\n \n-    /**\n-     * Parameter name.\n-     */\n-    public static final String COPLET_ID_PARAM = \"copletId\";\n-    \n-    /**\n-     * Parameter name.\n-     */\n-    public static final String PORTAL_NAME_PARAM = \"portalName\";\n-    \n+        \n     /**\n      * Creates new CopletTransformer.\n      */\n@@ -117,50 +101,15 @@ public void startTransformingElement(String uri, String name, String raw, Attrib\n                 throw new ProcessingException(\"Attribute \"+SELECT_ATTR+\" must be spcified.\");\n             }\n                 \n-            ProfileManager profileManager = null;\n-            try {\n-                profileManager = (ProfileManager)this.manager.lookup(ProfileManager.ROLE);\n-\n-                // determine coplet id\n-                String copletId = null;            \n-                Map context = (Map)objectModel.get(ObjectModelHelper.PARENT_CONTEXT);\n-                if (context != null) {\n-                    copletId = (String)context.get(Constants.COPLET_ID_KEY);\n-                    if (copletId == null) {\n-                        throw new ProcessingException(\"copletId must be passed as parameter or in the object model within the parent context.\");\n-                    }\n-                } else {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tcopletId = this.parameters.getParameter(COPLET_ID_PARAM);\n-\t\t\t\t\t\t\n-\t\t\t\t\t\t// set portal name\n-\t\t\t\t\t\tPortalService portalService = null;\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t    portalService = (PortalService)this.manager.lookup(PortalService.ROLE);\n-\t\t\t\t\t\t    portalService.setPortalName(this.parameters.getParameter(PORTAL_NAME_PARAM));\n-\t\t\t\t\t\t} finally {\n-\t\t\t\t\t\t    this.manager.release(portalService);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t} catch (ParameterException e) {\n-                        throw new ProcessingException(\"copletId and portalName must be passed as parameter or in the object model within the parent context.\");\n-\t\t\t\t\t}\n-                }\n-\n-                JXPathContext jxpathContext = JXPathContext.newContext(profileManager.getCopletInstanceData(copletId));\n-                Object object = jxpathContext.getValue(expression);\n-                \n-                if (object == null) {\n-                    throw new ProcessingException(\"Could not find value for expression \"+expression);\n-                }\n+            CopletInstanceData cid = this.getCopletInstanceData();\n+            \n+            JXPathContext jxpathContext = JXPathContext.newContext( cid );\n+            Object object = jxpathContext.getValue(expression);\n                 \n-                String value = object.toString();\n-                super.characters(value.toCharArray(), 0, value.length());\n-            } catch (ComponentException e) {\n-                throw new ProcessingException(\"Error getting profile manager.\", e);\n-            } finally {\n-                this.manager.release(profileManager);\n+            if (object == null) {\n+                throw new ProcessingException(\"Could not find value for expression \"+expression);\n             }\n-            \n+                \n         } else {\n             super.startTransformingElement(uri, name, raw, attr);\n         }"
            },
            {
                "sha": "eaa6475a754c369bafc296df248b0d6c3907cd49",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/transformation/EventLinkTransformer.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/transformation/EventLinkTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1922b6f03be19c2bc7301c1c2e1a4914a27549c2/src/blocks/portal/java/org/apache/cocoon/portal/transformation/EventLinkTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/transformation/EventLinkTransformer.java?ref=1922b6f03be19c2bc7301c1c2e1a4914a27549c2",
                "patch": "@@ -54,8 +54,8 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n \n import org.apache.avalon.framework.component.ComponentException;\n import org.apache.cocoon.portal.LinkService;\n+import org.apache.cocoon.portal.coplet.CopletInstanceData;\n import org.apache.cocoon.portal.event.impl.LinkEvent;\n-import org.apache.cocoon.transformation.AbstractSAXTransformer;\n import org.w3c.dom.DocumentFragment;\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n@@ -68,10 +68,10 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *  \n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj\ufffdrn L\ufffdtkemeier</a>\n  * \n- * @version CVS $Id: EventLinkTransformer.java,v 1.1 2003/05/08 11:54:00 cziegeler Exp $\n+ * @version CVS $Id: EventLinkTransformer.java,v 1.2 2003/05/26 12:49:13 cziegeler Exp $\n  */\n public class EventLinkTransformer \n-extends AbstractSAXTransformer {\n+extends AbstractCopletTransformer {\n     \n     /**\n      * The namespace URI to listen for.\n@@ -186,12 +186,13 @@ public void endElement(String uri, String name, String raw)\n \n                     // if attribute found that contains a link\n                     if (link != null) {\n+                        CopletInstanceData cid = this.getCopletInstanceData();                       \n                         LinkService linkService = null;\n                         try {\n                             linkService = (LinkService)this.manager.lookup(LinkService.ROLE);\n         \n                             // create event link\n-                            LinkEvent event = new LinkEvent(link);\n+                            LinkEvent event = new LinkEvent(cid, link);\n                             String eventLink = linkService.getLinkURI(event);\n         \n                             // insert event link\n@@ -211,12 +212,13 @@ public void endElement(String uri, String name, String raw)\n                 if (this.elementName != null && name.equals(this.elementName)) {\n                     String link = this.endTextRecording();\n \n+                    CopletInstanceData cid = this.getCopletInstanceData();                       \n                     LinkService linkService = null;\n                     try {\n                         linkService = (LinkService)this.manager.lookup(LinkService.ROLE);\n         \n                         // create event link\n-                        LinkEvent event = new LinkEvent(link);\n+                        LinkEvent event = new LinkEvent(cid, link);\n                         eventLink = linkService.getLinkURI(event);\n                     } catch (ComponentException e) {\n                         throw new SAXException(e);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/3c57aaa598cd9c66c3b0491285698bd763b7ba9c",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/fafc0887bd5aaccfa98aa0d21497be95dcba5c0e",
        "message": "Possibly fixing NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24515 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_28",
        "file": [
            {
                "sha": "126ffa48ba5c6d2c4dc71f477468210890f20f56",
                "filename": "src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/3c57aaa598cd9c66c3b0491285698bd763b7ba9c/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3c57aaa598cd9c66c3b0491285698bd763b7ba9c/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java?ref=3c57aaa598cd9c66c3b0491285698bd763b7ba9c",
                "patch": "@@ -86,7 +86,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * This is the basis authentication component.\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: DefaultAuthenticationManager.java,v 1.8 2003/05/04 20:19:40 cziegeler Exp $\n+ * @version CVS $Id: DefaultAuthenticationManager.java,v 1.9 2003/05/22 14:09:34 cziegeler Exp $\n */\n public final class DefaultAuthenticationManager\n extends AbstractLogEnabled\n@@ -226,7 +226,6 @@ public UserHandler login(String handlerName,\n         \n             // update RequestState\n             RequestState state = new RequestState( handler, applicationName, this.resolver );\n-            RequestState.setState( state );\n             \n         }\n         \n@@ -263,7 +262,6 @@ public boolean checkAuthentication(Redirector redirector,\n         } else {\n             // update state\n             RequestState state = new RequestState( handler, applicationName, this.resolver );\n-            RequestState.setState( state );\n         }\n         \n \t\treturn authenticated;"
            },
            {
                "sha": "c53ff93899d2404ce9f85e879e87e23b633dce18",
                "filename": "src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/user/RequestState.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/3c57aaa598cd9c66c3b0491285698bd763b7ba9c/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/user/RequestState.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3c57aaa598cd9c66c3b0491285698bd763b7ba9c/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/user/RequestState.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/user/RequestState.java?ref=3c57aaa598cd9c66c3b0491285698bd763b7ba9c",
                "patch": "@@ -65,7 +65,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * is currently used for this request.\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: RequestState.java,v 1.3 2003/05/04 20:19:39 cziegeler Exp $\n+ * @version CVS $Id: RequestState.java,v 1.4 2003/05/22 14:09:34 cziegeler Exp $\n */\n public final class RequestState\n implements java.io.Serializable {\n@@ -83,7 +83,7 @@ public static RequestState getState() {\n         return (RequestState)objectModel.get(KEY);\n     }\n     \n-    public static void setState(RequestState status) {\n+    protected static void setState(RequestState status) {\n         final Map objectModel = CocoonComponentManager.getCurrentEnvironment().getObjectModel();\n         if ( status != null ) {\n             objectModel.put( KEY, status);\n@@ -99,6 +99,7 @@ public RequestState(UserHandler handler, String app, SourceResolver resolver)\n     throws ProcessingException {\n         this.handler = handler;\n         this.application = app;\n+        setState(this);\n         if ( this.application != null && !this.handler.getApplicationsLoaded()) {\n             ApplicationConfiguration conf = (ApplicationConfiguration) this.handler.getHandlerConfiguration().getApplications().get(this.application);\n             if ( !this.handler.isApplicationLoaded( conf ) ) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/b8f52eb41467f56de1bc55b6078fa34523a8ad46",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/7b68b694e1ee46a534c43fa41615189503e6ca16",
        "message": "NPE check\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24454 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_29",
        "file": [
            {
                "sha": "6520de020866e1ae1cb02851d63602d25d77baa9",
                "filename": "src/java/org/apache/cocoon/components/modules/input/XMLFileModule.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/b8f52eb41467f56de1bc55b6078fa34523a8ad46/src/java/org/apache/cocoon/components/modules/input/XMLFileModule.java",
                "raw_url": "https://github.com/apache/cocoon/raw/b8f52eb41467f56de1bc55b6078fa34523a8ad46/src/java/org/apache/cocoon/components/modules/input/XMLFileModule.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/modules/input/XMLFileModule.java?ref=b8f52eb41467f56de1bc55b6078fa34523a8ad46",
                "patch": "@@ -86,7 +86,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:jefft@apache.org\">Jeff Turner</a>\n  * @author <a href=\"mailto:haul@apache.org\">Christian Haul</a>\n- * @version CVS $Id: XMLFileModule.java,v 1.7 2003/05/18 14:00:43 jefft Exp $\n+ * @version CVS $Id: XMLFileModule.java,v 1.8 2003/05/19 00:25:51 jefft Exp $\n  */\n public class XMLFileModule extends AbstractJXPathModule\n     implements Composable, ThreadSafe {\n@@ -280,7 +280,7 @@ protected Object getContextObject(Configuration modeConf,\n             hasDynamicConf = true;\n         }\n \n-        if (hasDynamicConf) {\n+        if (hasDynamicConf && fileConf != null) {\n             src = fileConf.getAttribute(\"src\");\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/46c84ee11431960df7a47e6b88bec7eb99537590",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/769ec95d71c99c32264879a37e01bdde06727a45",
        "message": "Fix NPE caused by calling resetBuffer() method.\n\nAdded comment explaining why ServletServiceResponse does not buffer anything and why it has no real implementation for resetBuffer() method.\nAdded very simple test-case covering NPE situation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@687704 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_30",
        "file": [
            {
                "sha": "70b5705c411d2a628cea11c41f78e52576d1397a",
                "filename": "subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/46c84ee11431960df7a47e6b88bec7eb99537590/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/46c84ee11431960df7a47e6b88bec7eb99537590/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml?ref=46c84ee11431960df7a47e6b88bec7eb99537590",
                "patch": "@@ -26,7 +26,7 @@\n   <body>\n     <release version=\"1.2.0-SNAPSHOT\" date=\"2008-??-??\" description=\"unreleased\">\n       <action dev=\"gkossakowski\" type=\"fix\">\n-        Fixed NPE thrown by HttpServletResponseBufferingWrapper after resetBuffer() method was called.\n+        Fixed NPE thrown by HttpServletResponseBufferingWrapper and ServletServiceResponse after resetBuffer() method was called.\n       </action>\n       <action dev=\"gkossakowski\" type=\"update\">\n         Java 5 as minimum requirement."
            },
            {
                "sha": "7861e3ffdb874664af92cbb70bd657f31b91cb65",
                "filename": "subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/util/ServletServiceResponse.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/46c84ee11431960df7a47e6b88bec7eb99537590/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/util/ServletServiceResponse.java",
                "raw_url": "https://github.com/apache/cocoon/raw/46c84ee11431960df7a47e6b88bec7eb99537590/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/util/ServletServiceResponse.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/util/ServletServiceResponse.java?ref=46c84ee11431960df7a47e6b88bec7eb99537590",
                "patch": "@@ -133,6 +133,7 @@ public void flush() throws IOException {\n \n                 public void write(int b) throws IOException {\n                     ServletServiceResponse.this.outputStream.write(b);\n+                    ServletServiceResponse.this.committed = true;\n                 }\n \n                 /*\n@@ -173,13 +174,12 @@ public void reset() {\n     }\n \n     public void resetBuffer() {\n+        //this class does not buffer anything so if first byte is written to output stream\n+        //there is no way to reset anything\n+        //Servlet Service Framework uses for buffering a wrapper called HttpServletResponseBufferingWrapper\n         if (this.committed) {\n             throw new IllegalStateException(\"May not resetBuffer after response is committed\");\n         }\n-\n-        this.outputStream = null;\n-        this.servletStream = null;\n-        this.writer = null;\n     }\n \n     public void sendError(int sc) throws IOException {"
            },
            {
                "sha": "5bb105b1ef6fbdf62c98f4a0413bb6e1091f85ed",
                "filename": "subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/test/java/org/apache/cocoon/servletservice/util/ServletServiceResponseTestCase.java",
                "status": "added",
                "additions": 45,
                "deletions": 0,
                "changes": 45,
                "blob_url": "https://github.com/apache/cocoon/blob/46c84ee11431960df7a47e6b88bec7eb99537590/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/test/java/org/apache/cocoon/servletservice/util/ServletServiceResponseTestCase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/46c84ee11431960df7a47e6b88bec7eb99537590/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/test/java/org/apache/cocoon/servletservice/util/ServletServiceResponseTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/test/java/org/apache/cocoon/servletservice/util/ServletServiceResponseTestCase.java?ref=46c84ee11431960df7a47e6b88bec7eb99537590",
                "patch": "@@ -0,0 +1,45 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*     http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+package org.apache.cocoon.servletservice.util;\n+\n+import org.apache.commons.io.output.ByteArrayOutputStream;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * @version $Id$\n+ */\n+public class ServletServiceResponseTestCase extends TestCase {\n+    \n+    /**\n+     * Tests if its possible to write to outputStream after\n+     * calling resetBuffer() method.\n+     * @throws Exception\n+     */\n+    public void testResetBuffer() throws Exception {\n+        ServletServiceResponse response = new ServletServiceResponse();\n+        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+        response.setOutputStream(outputStream);\n+\n+        response.getOutputStream();\n+        response.resetBuffer();\n+        response.getOutputStream().write(0);\n+        \n+        assertEquals(1, outputStream.size());\n+    }\n+    \n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2e40a6e5e7c43d55944470d5479b48fb99d1046e",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2fb3941d5f23a421cdf047c42469b4b43bcc2fd8",
        "message": "COCOON-2277\nfix potential NPE \n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@1054829 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_31",
        "file": [
            {
                "sha": "e9f930521676055afcedb882aa9658bf11c7ba64",
                "filename": "subprojects/cocoon-jnet/src/changes/changes.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/2e40a6e5e7c43d55944470d5479b48fb99d1046e/subprojects/cocoon-jnet/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/2e40a6e5e7c43d55944470d5479b48fb99d1046e/subprojects/cocoon-jnet/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/subprojects/cocoon-jnet/src/changes/changes.xml?ref=2e40a6e5e7c43d55944470d5479b48fb99d1046e",
                "patch": "@@ -28,6 +28,9 @@\n   </properties>\n   <body>\n     <release version=\"1.2.0-SNAPSHOT\" date=\"2009-00-00\" description=\"unreleased\">\n+      <action dev=\"reinhard\" type=\"update\" issue=\"COCOON-2277\">\n+        Fix potential NPE in DynamicURLStreamHandlerFactory.\n+      </action>\n       <action dev=\"reinhard\" type=\"update\">\n         Use Java 5 language features throughout the codebase.\n       </action>"
            },
            {
                "sha": "26fbe994922a8556eb3141f5fdc42297b357f587",
                "filename": "subprojects/cocoon-jnet/src/main/java/org/apache/cocoon/jnet/DynamicURLStreamHandlerFactory.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/2e40a6e5e7c43d55944470d5479b48fb99d1046e/subprojects/cocoon-jnet/src/main/java/org/apache/cocoon/jnet/DynamicURLStreamHandlerFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/2e40a6e5e7c43d55944470d5479b48fb99d1046e/subprojects/cocoon-jnet/src/main/java/org/apache/cocoon/jnet/DynamicURLStreamHandlerFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/subprojects/cocoon-jnet/src/main/java/org/apache/cocoon/jnet/DynamicURLStreamHandlerFactory.java?ref=2e40a6e5e7c43d55944470d5479b48fb99d1046e",
                "patch": "@@ -18,6 +18,7 @@\n \n import java.net.URLStreamHandler;\n import java.net.URLStreamHandlerFactory;\n+import java.util.Collections;\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n@@ -38,7 +39,7 @@ public static void push(URLStreamHandlerFactory factory) {\n         List<URLStreamHandlerFactory> list = FACTORIES.get();\n \n         if (list == null) {\n-            list = new LinkedList<URLStreamHandlerFactory>();\n+            list = Collections.synchronizedList(new LinkedList<URLStreamHandlerFactory>());\n             FACTORIES.set(list);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/39200fbf6a284841c24928fc824ac6364d322ec6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/7f97264a66000ac0af8b8541a975f143cf3d776c",
        "message": "Add information about NPE fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@687066 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_32",
        "file": [
            {
                "sha": "932eb9db4901034d39513353d641c4fd91374da2",
                "filename": "subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/39200fbf6a284841c24928fc824ac6364d322ec6/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/39200fbf6a284841c24928fc824ac6364d322ec6/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/subprojects/cocoon-servlet-service/cocoon-servlet-service-impl/src/changes/changes.xml?ref=39200fbf6a284841c24928fc824ac6364d322ec6",
                "patch": "@@ -25,6 +25,9 @@\n <document>\n   <body>\n     <release version=\"1.2.0-SNAPSHOT\" date=\"2008-??-??\" description=\"unreleased\">\n+      <action dev=\"gkossakowski\" type=\"fix\">\n+        Fixed NPE thrown by HttpServletResponseBufferingWrapper after resetBuffer() method was called.\n+      </action>\n       <action dev=\"gkossakowski\" type=\"update\">\n         Java 5 as minimum requirement.\n       </action>    "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/f1bf3697efe2c32ea50df60b23392816acd75d1b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/dd3a90219b2a0b34668ce5b7e831c2cf60a2e5ae",
        "message": "Avoid NPE in maven when running tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@661806 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_33",
        "file": [
            {
                "sha": "fb46df1422448b3ba1cdf175d92fb0ea4d575b6e",
                "filename": "blocks/cocoon-databases/cocoon-databases-bridge/pom.xml",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/f1bf3697efe2c32ea50df60b23392816acd75d1b/blocks/cocoon-databases/cocoon-databases-bridge/pom.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/f1bf3697efe2c32ea50df60b23392816acd75d1b/blocks/cocoon-databases/cocoon-databases-bridge/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-databases/cocoon-databases-bridge/pom.xml?ref=f1bf3697efe2c32ea50df60b23392816acd75d1b",
                "patch": "@@ -66,6 +66,11 @@\n       <artifactId>spring-dao</artifactId>\n       <version>2.0.6</version>\n     </dependency>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n   \n   <profiles>"
            },
            {
                "sha": "bcef67d4a7b537a59641b4ec9f00883676418e60",
                "filename": "blocks/cocoon-databases/cocoon-databases-mocks/pom.xml",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/f1bf3697efe2c32ea50df60b23392816acd75d1b/blocks/cocoon-databases/cocoon-databases-mocks/pom.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/f1bf3697efe2c32ea50df60b23392816acd75d1b/blocks/cocoon-databases/cocoon-databases-mocks/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-databases/cocoon-databases-mocks/pom.xml?ref=f1bf3697efe2c32ea50df60b23392816acd75d1b",
                "patch": "@@ -31,4 +31,12 @@\n   <artifactId>cocoon-databases-mocks</artifactId>\n   <version>1.1.0-SNAPSHOT</version>\n   <name>Cocoon Database Block Mocks</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n </project>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/838a3dc34394fbc3eccd957d4d00648940e2a155",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/392965fcbcc5a6347a63171b95a9f52330f35c8c",
        "message": "Avoid NPE or ClassCastException\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@595986 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_34",
        "file": [
            {
                "sha": "c5343797cb31409b15136d8965592e2143cca355",
                "filename": "blocks/cocoon-core-sample/cocoon-core-main-sample/src/main/java/org/apache/cocoon/samples/flow/prefs/User.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/838a3dc34394fbc3eccd957d4d00648940e2a155/blocks/cocoon-core-sample/cocoon-core-main-sample/src/main/java/org/apache/cocoon/samples/flow/prefs/User.java",
                "raw_url": "https://github.com/apache/cocoon/raw/838a3dc34394fbc3eccd957d4d00648940e2a155/blocks/cocoon-core-sample/cocoon-core-main-sample/src/main/java/org/apache/cocoon/samples/flow/prefs/User.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-core-sample/cocoon-core-main-sample/src/main/java/org/apache/cocoon/samples/flow/prefs/User.java?ref=838a3dc34394fbc3eccd957d4d00648940e2a155",
                "patch": "@@ -54,6 +54,9 @@ public int hashCode()\n \n   public boolean equals(Object obj)\n   {\n+    if (!(obj instanceof User)) {\n+        return false;\n+    }\n     User anotherUser = (User)obj;\n     return anotherUser.login.equals(login);\n   }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/c6f31ee9f92ee602809f238814261953cfb74abd",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/34eea8af7ce53e298c941cede2dc07686980521c",
        "message": "fix NPE in the dispose\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@587725 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_35",
        "file": [
            {
                "sha": "d84fc95f43d555b5e8e11fa9e6fd4dd07e7a967a",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/InvokeContext.java",
                "status": "modified",
                "additions": 13,
                "deletions": 4,
                "changes": 17,
                "blob_url": "https://github.com/apache/cocoon/blob/c6f31ee9f92ee602809f238814261953cfb74abd/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/InvokeContext.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c6f31ee9f92ee602809f238814261953cfb74abd/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/InvokeContext.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/InvokeContext.java?ref=c6f31ee9f92ee602809f238814261953cfb74abd",
                "patch": "@@ -127,7 +127,7 @@ public void service(ServiceManager manager) throws ServiceException {\n         if (this.processingPipeline != null) {\n             this.processingPipeline.setProcessorManager(manager);\n         }\n-        this.newObjectModel = (ObjectModel)manager.lookup(ObjectModel.ROLE);\n+        this.newObjectModel = (ObjectModel) manager.lookup(ObjectModel.ROLE);\n     }\n \n     /**\n@@ -187,13 +187,14 @@ public void setInternalPipelineDescription(Processor.InternalPipelineDescription\n      * Get the pipeline description\n      */\n     public Processor.InternalPipelineDescription getInternalPipelineDescription(Environment env) {\n-        if ( this.internalPipelineDescription == null ) {\n+        if (this.internalPipelineDescription == null) {\n             this.internalPipelineDescription = new Processor.InternalPipelineDescription(\n                     this.processingPipeline, this.pipelineSelector, this.pipelinesManager);\n             this.internalPipelineDescription.lastProcessor = this.lastProcessor;\n             this.internalPipelineDescription.prefix = env.getURIPrefix();\n             this.internalPipelineDescription.uri = env.getURI();\n         }\n+\n         return this.internalPipelineDescription;\n     }\n \n@@ -329,9 +330,11 @@ public Redirector getRedirector() {\n      */\n     public void dispose() {\n         if (this.internalPipelineDescription == null && this.pipelinesManager != null) {\n-            if (this.pipelineSelector != null) {\n+            if (this.processingPipeline != null) {\n                 this.pipelineSelector.release(this.processingPipeline);\n                 this.processingPipeline = null;\n+            }\n+            if (this.pipelineSelector != null) {\n                 this.pipelinesManager.release(this.pipelineSelector);\n                 this.pipelineSelector = null;\n             }\n@@ -341,7 +344,13 @@ public void dispose() {\n             this.processingPipelineParameters = null;\n             this.processingPipelineObjectModel = null;\n         }\n-        this.currentManager.release(this.newObjectModel);\n+\n+        if (this.newObjectModel != null) {\n+            this.currentManager.release(this.newObjectModel);\n+            this.newObjectModel = null;\n+        }\n+\n+        this.currentManager = null;\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/87cb957cfd93fe01e5a717f530bff16e0ba4f709",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a5cb950b212675c9441a241a15202846ac4dd9a9",
        "message": "Set default (200) status code for response object. Fixes various NPEs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@572142 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_36",
        "file": [
            {
                "sha": "307c5c82e98f5eed94057ea7b76cf3f7ba372ee2",
                "filename": "core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletServiceContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/87cb957cfd93fe01e5a717f530bff16e0ba4f709/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletServiceContext.java",
                "raw_url": "https://github.com/apache/cocoon/raw/87cb957cfd93fe01e5a717f530bff16e0ba4f709/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletServiceContext.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletServiceContext.java?ref=87cb957cfd93fe01e5a717f530bff16e0ba4f709",
                "patch": "@@ -548,6 +548,8 @@ protected void forward(ServletRequest request, ServletResponse response, boolean\n         throws ServletException, IOException {\n             try {\n                 StatusRetrievableWrappedResponse wrappedResponse = new StatusRetrievableWrappedResponse((HttpServletResponse)response);\n+                //FIXME: I think that Cocoon should always set status code on its own\n+                wrappedResponse.setStatus(HttpServletResponse.SC_OK);\n                 if (!superCall) {\n                     // It is important to set the current context each time\n                     // a new context is entered, this is used for the servlet"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/cebc323ce9635655a1186536668eab08eb03d163",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/75b9954fd891a7ddad0afcc38bfa6e5da743b2f6",
        "message": "Avoid NPE in case of unset workerThreadPools property\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@523278 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_37",
        "file": [
            {
                "sha": "17e4578f450ed0c28683a3cb5a4a634f6ffcfc8b",
                "filename": "core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/cebc323ce9635655a1186536668eab08eb03d163/core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cebc323ce9635655a1186536668eab08eb03d163/core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java?ref=cebc323ce9635655a1186536668eab08eb03d163",
                "patch": "@@ -87,12 +87,14 @@ public void setLogger(Log l) {\n          * Initialize\n          */\n     public void afterPropertiesSet() throws Exception {\n-\tfinal Iterator iter = workerThreadPools.keySet().iterator();\n-\twhile (iter.hasNext()) {\n-\t    final String key = (String) iter.next();\n-\t    final ThreadPool pool = (ThreadPool) workerThreadPools.get(key);\n-\t    synchronized (pools) {\n-\t\tpools.put(pool.getName(), pool);\n+\tif (workerThreadPools != null) {\n+\t    final Iterator iter = workerThreadPools.keySet().iterator();\n+\t    while (iter.hasNext()) {\n+\t\tfinal String key = (String) iter.next();\n+\t\tfinal ThreadPool pool = (ThreadPool) workerThreadPools.get(key);\n+\t\tsynchronized (pools) {\n+\t\t    pools.put(pool.getName(), pool);\n+\t\t}\n \t    }\n \t}\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/558d6f042d149b4b8dec0623dde95a8a8bd32c51",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2cd12bca2a3a3ca8fb67aaef4f84bf58268c7d70",
        "message": "COCOON-2021: prevent NPE in case session is not available\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@515651 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_38",
        "file": [
            {
                "sha": "e6f297723e96767ff4a9504365f6fc0c58ab6b6c",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/WriteDOMSessionTransformer.java",
                "status": "modified",
                "additions": 14,
                "deletions": 10,
                "changes": 24,
                "blob_url": "https://github.com/apache/cocoon/blob/558d6f042d149b4b8dec0623dde95a8a8bd32c51/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/WriteDOMSessionTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/558d6f042d149b4b8dec0623dde95a8a8bd32c51/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/WriteDOMSessionTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/WriteDOMSessionTransformer.java?ref=558d6f042d149b4b8dec0623dde95a8a8bd32c51",
                "patch": "@@ -58,7 +58,10 @@\n     public static final String DOM_ROOT_ELEMENT = \"dom-root-element\";\n \n     private boolean buildDom = false;\n-    private boolean sessionAvailable = false;\n+    /**\n+     * component was correctly setup\n+     */\n+    private boolean setup = false;\n \n     private Session session;\n     private DOMBuilder builder;\n@@ -75,7 +78,7 @@ public void recycle() {\n         this.session = null;\n         this.builder = null;\n         this.buildDom = false;\n-        this.sessionAvailable = false;\n+        this.setup = false;\n     }\n \n     /* BEGIN SitemapComponent methods */\n@@ -90,11 +93,11 @@ public void setup(SourceResolver resolver, Map objectModel,\n             DOMName = parameters.getParameter(WriteDOMSessionTransformer.DOM_NAME, null);\n             rootElement = parameters.getParameter(WriteDOMSessionTransformer.DOM_ROOT_ELEMENT, null);\n             if (DOMName != null && rootElement != null) {\n-                // only now we know it is usefull to store something in the session\n+                // only now we know it is useful to store something in the session\n                 getLogger().debug(\"WriteSessionTransformer: \" + WriteDOMSessionTransformer.DOM_NAME + \"=\" +\n                                   DOMName + \"; \" + WriteDOMSessionTransformer.DOM_ROOT_ELEMENT + \"=\" +\n                                   rootElement);\n-                sessionAvailable = true;\n+                setup = true;\n                 storedPrefixMap = new HashMap();\n             } else {\n                 getLogger().error(\"WriteSessionTransformer: need \" + WriteDOMSessionTransformer.DOM_NAME +\n@@ -114,15 +117,15 @@ public void startPrefixMapping(String prefix, String uri)\n         super.startPrefixMapping(prefix, uri);\n         if (buildDom) {\n             builder.startPrefixMapping(prefix, uri);\n-        } else {\n+        } else if (setup) {\n             storePrefixMapping(prefix, uri);\n         }\n     }\n \n     public void startElement(String uri, String name, String raw, Attributes attributes)\n     throws SAXException {\n         // only build the DOM tree if session is available\n-        if (name.equalsIgnoreCase(rootElement) && sessionAvailable) {\n+        if (setup && name.equalsIgnoreCase(rootElement)) {\n             getLogger().debug(\"WriteSessionTransformer: start building DOM tree\");\n             buildDom = true;\n             builder = new DOMBuilder();\n@@ -137,7 +140,7 @@ public void startElement(String uri, String name, String raw, Attributes attribu\n \n     public void endElement(String uri, String name, String raw)\n             throws SAXException {\n-        if (name.equalsIgnoreCase(rootElement) && sessionAvailable) {\n+        if (setup && name.equalsIgnoreCase(rootElement)) {\n             buildDom = false;\n             builder.endElement(uri, name, raw);\n             builder.endDocument();\n@@ -178,10 +181,11 @@ protected void storePrefixMapping(String prefix, String uri) {\n     }\n \n     protected void launchStoredMappings() throws SAXException {\n-        Iterator it = storedPrefixMap.keySet().iterator();\n+        Iterator it = storedPrefixMap.entrySet().iterator();\n         while (it.hasNext()) {\n-            String pre = (String) it.next();\n-            String uri = (String) storedPrefixMap.get(pre);\n+            Map.Entry entry = (Map.Entry) it.next();\n+            String pre = (String) entry.getKey();\n+            String uri = (String) entry.getValue();\n             getLogger().debug(\"WriteSessionTransformer: launching prefix mapping[ pre: \" + pre + \" uri: \" + uri + \" ]\");\n             builder.startPrefixMapping(pre, uri);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/89e22b3421c71a61c41ac0e45b8ad02000ef1e0d",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/87c3b0e97500d0d955e9f90b95dff84aa1117b81",
        "message": "Fix renderer configuration and NPE during initialization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@509480 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_39",
        "file": [
            {
                "sha": "e8120d0ba01f69e74d93dc81c99aeb9c53bf8e91",
                "filename": "blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/support/RendererAspectChain.java",
                "status": "modified",
                "additions": 13,
                "deletions": 1,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/89e22b3421c71a61c41ac0e45b8ad02000ef1e0d/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/support/RendererAspectChain.java",
                "raw_url": "https://github.com/apache/cocoon/raw/89e22b3421c71a61c41ac0e45b8ad02000ef1e0d/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/support/RendererAspectChain.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/support/RendererAspectChain.java?ref=89e22b3421c71a61c41ac0e45b8ad02000ef1e0d",
                "patch": "@@ -44,13 +44,22 @@\n public final class RendererAspectChain extends AspectChain {\n \n     /** The list of the configuration objects for each renderer aspects. */\n-    protected final List configs = new ArrayList(3);\n+    protected List configs;\n \n     public RendererAspectChain(Class aClass, List aspects, List properties)\n     throws PortalException {\n+        // we can't initialize configs before we call super\n+        // so we have to check in the addAspects method and here\n+        // if configs is initialized!\n         super(aClass, aspects, properties);\n+        if ( this.configs == null ) {\n+            this.configs = new ArrayList();            \n+        }\n     }\n \n+    /**\n+     * @return The iterator for the prepared configurations.\n+     */\n     public Iterator getConfigurationIterator() {\n         return this.configs.iterator();\n     }\n@@ -59,6 +68,9 @@ public Iterator getConfigurationIterator() {\n      * @see org.apache.cocoon.portal.services.aspects.support.AspectChain#addAspect(java.lang.Object, java.util.Properties, int)\n      */\n     public void addAspect(Object aspect, Properties config, int index) throws PortalException {\n+        if ( configs == null ) {\n+            this.configs = new ArrayList();\n+        }\n         super.addAspect(aspect, config, index);\n         final RendererAspect rendererAspect = (RendererAspect)aspect;\n         final Properties props = (config == null ? EMPTY_PROPERTIES : config);"
            },
            {
                "sha": "21fd87f022450f828c864e256c08870ae3fe5771",
                "filename": "blocks/cocoon-portal/cocoon-portal-impl/src/main/resources/org/apache/cocoon/portal/cocoon-portal-components.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/89e22b3421c71a61c41ac0e45b8ad02000ef1e0d/blocks/cocoon-portal/cocoon-portal-impl/src/main/resources/org/apache/cocoon/portal/cocoon-portal-components.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/89e22b3421c71a61c41ac0e45b8ad02000ef1e0d/blocks/cocoon-portal/cocoon-portal-impl/src/main/resources/org/apache/cocoon/portal/cocoon-portal-components.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-portal/cocoon-portal-impl/src/main/resources/org/apache/cocoon/portal/cocoon-portal-components.xml?ref=89e22b3421c71a61c41ac0e45b8ad02000ef1e0d",
                "patch": "@@ -87,7 +87,7 @@\n       <property name=\"sourceResolver\" ref=\"org.apache.excalibur.source.SourceResolver\"/>\n     </bean>\n \n-    <bean name=\"org.apache.cocoon.portal.layout.renderer.aspect.RendererAspect-parameter\"\n+    <bean name=\"org.apache.cocoon.portal.layout.renderer.aspect.RendererAspect.parameter\"\n           class=\"org.apache.cocoon.portal.layout.renderer.aspect.impl.ParameterAspect\"\n           parent=\"org.apache.cocoon.portal.util.AbstractBean\" scope=\"singleton\"/>\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/3f10eee1fc5e2c173a13da83ba49bbdae87bc24e",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/73bd0fb0f99f0341fe8aef84dd93848916ef6742",
        "message": "prevent NPE in debug statement\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@498489 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_40",
        "file": [
            {
                "sha": "cebf9b311f184879eeed8f068c7aaa833f2ad127",
                "filename": "core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/3f10eee1fc5e2c173a13da83ba49bbdae87bc24e/core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3f10eee1fc5e2c173a13da83ba49bbdae87bc24e/core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-thread/cocoon-thread-impl/src/main/java/org/apache/cocoon/components/thread/DefaultRunnableManager.java?ref=3f10eee1fc5e2c173a13da83ba49bbdae87bc24e",
                "patch": "@@ -318,8 +318,8 @@ public void execute( final String threadPoolName,\n         }\n \n         if( getLogger().isDebugEnabled() ) {\n-            getLogger().debug( \"Command entered: \" + command.toString() +\n-                               \", pool=\" + pool.getName() + \", delay=\" +\n+            getLogger().debug( \"Command entered: \" + command +\n+                               \", pool=\" + (null == pool ? \"null\" : pool.getName()) + \", delay=\" +\n                                delay + \", interval=\" + interval );\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/8b6f9c811643521fe7253fe11394b16f0482d4a2",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/4955e39dfe769146fa2a1b827c4b5e3ae72a82b4",
        "message": "COCOON-1976: Prevent NPE in ElementProcessorSerializer on characters before first startElement.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@492298 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_41",
        "file": [
            {
                "sha": "8ea9aa29b81b3f9e49707eaf089727ad8b4ef83e",
                "filename": "blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/components/elementprocessor/NoOpElementProcessor.java",
                "status": "added",
                "additions": 36,
                "deletions": 0,
                "changes": 36,
                "blob_url": "https://github.com/apache/cocoon/blob/8b6f9c811643521fe7253fe11394b16f0482d4a2/blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/components/elementprocessor/NoOpElementProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/8b6f9c811643521fe7253fe11394b16f0482d4a2/blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/components/elementprocessor/NoOpElementProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/components/elementprocessor/NoOpElementProcessor.java?ref=8b6f9c811643521fe7253fe11394b16f0482d4a2",
                "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.cocoon.components.elementprocessor;\n+\n+import java.io.IOException;\n+\n+import org.apache.cocoon.components.elementprocessor.types.Attribute;\n+\n+/**\n+ * @version $ID$\n+ */\n+public class NoOpElementProcessor implements ElementProcessor {\n+\n+    public void initialize(Attribute[] attributes, ElementProcessor parent) throws IOException { }\n+\n+    public void acceptCharacters(char[] data) { }\n+\n+    public void acceptWhitespaceCharacters(char[] data) { }\n+\n+    public void endProcessing() throws IOException { }\n+\n+}"
            },
            {
                "sha": "ce49f4e8a25185f6dfb476328b215c156811fc68",
                "filename": "blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/serialization/ElementProcessorSerializer.java",
                "status": "modified",
                "additions": 9,
                "deletions": 4,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/8b6f9c811643521fe7253fe11394b16f0482d4a2/blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/serialization/ElementProcessorSerializer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/8b6f9c811643521fe7253fe11394b16f0482d4a2/blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/serialization/ElementProcessorSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-poi/cocoon-poi-impl/src/main/java/org/apache/cocoon/serialization/ElementProcessorSerializer.java?ref=8b6f9c811643521fe7253fe11394b16f0482d4a2",
                "patch": "@@ -27,6 +27,7 @@\n import org.apache.cocoon.components.elementprocessor.CannotCreateElementProcessorException;\n import org.apache.cocoon.components.elementprocessor.ElementProcessor;\n import org.apache.cocoon.components.elementprocessor.ElementProcessorFactory;\n+import org.apache.cocoon.components.elementprocessor.NoOpElementProcessor;\n import org.apache.cocoon.components.elementprocessor.types.Attribute;\n \n import org.xml.sax.Attributes;\n@@ -51,16 +52,20 @@\n public abstract class ElementProcessorSerializer\n     extends AbstractLogEnabled implements Serializer, Serviceable {\n \n-    private OutputStream outputStream;\n-    private Stack openElements;\n-    private Locator locator;\n+    private final Stack openElements;\n+    private final ElementProcessor noOpElementProcessor;\n+    \n     protected ServiceManager manager;\n \n+    private OutputStream outputStream;\n+    private Locator locator;\n+    \n     /**\n      * Constructor\n      */\n     public ElementProcessorSerializer() {\n         this.openElements = new Stack();\n+        this.noOpElementProcessor = new NoOpElementProcessor();\n     }\n \n     public void service(ServiceManager manager) {\n@@ -135,7 +140,7 @@ protected SAXException SAXExceptionFactory(final String message) {\n     }\n \n     private ElementProcessor getCurrentElementProcessor() {\n-        return this.openElements.empty() ? null\n+        return this.openElements.empty() ? this.noOpElementProcessor\n                                          : (ElementProcessor)this.openElements.peek();\n     }\n "
            },
            {
                "sha": "e72083771804778545031acca21314cae062ca0a",
                "filename": "blocks/cocoon-poi/cocoon-poi-impl/status.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/8b6f9c811643521fe7253fe11394b16f0482d4a2/blocks/cocoon-poi/cocoon-poi-impl/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/8b6f9c811643521fe7253fe11394b16f0482d4a2/blocks/cocoon-poi/cocoon-poi-impl/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-poi/cocoon-poi-impl/status.xml?ref=8b6f9c811643521fe7253fe11394b16f0482d4a2",
                "patch": "@@ -16,7 +16,7 @@\n   limitations under the License.\n -->\n <!DOCTYPE status [\n-<!ELEMENT status (developers, todo, changes)>\n+<!ELEMENT status (developers?, todo?, changes)>\n <!ELEMENT developers (person+)>\n <!ELEMENT person EMPTY>\n <!ATTLIST person\n@@ -66,6 +66,9 @@\n  <!-- The following list contains the changes since the latest 2.1.x version. -->\n  <changes>\n   <release version=\"@version@\" date=\"@date@\">\n+    <action dev=\"JH\" type=\"fix\" fixes-bug=\"COCOON-1976\" due-to=\"Rob Berens\">\n+      Prevent NPE in ElementProcessorSerializer on characters before first startElement.\n+    </action>\n   </release>\n  </changes>\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d6a24104e8a348d2acf0d637727d6246686dbec0",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b4c2407e7be52c9d6a9d7480925ed7eca27940f7",
        "message": "Avoid NPE in non Maven context (e.g. Eclipse).\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@491411 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_42",
        "file": [
            {
                "sha": "be222920d47b9b4ef3d0c6dbbcb8858db36ef779",
                "filename": "core/cocoon-configuration/cocoon-spring-configurator/src/main/java/org/apache/cocoon/spring/configurator/ResourceUtils.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/d6a24104e8a348d2acf0d637727d6246686dbec0/core/cocoon-configuration/cocoon-spring-configurator/src/main/java/org/apache/cocoon/spring/configurator/ResourceUtils.java",
                "raw_url": "https://github.com/apache/cocoon/raw/d6a24104e8a348d2acf0d637727d6246686dbec0/core/cocoon-configuration/cocoon-spring-configurator/src/main/java/org/apache/cocoon/spring/configurator/ResourceUtils.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-configuration/cocoon-spring-configurator/src/main/java/org/apache/cocoon/spring/configurator/ResourceUtils.java?ref=d6a24104e8a348d2acf0d637727d6246686dbec0",
                "patch": "@@ -203,7 +203,10 @@ public static Properties getPOMProperties(String groupId, String versionId) {\n         final String resourceName = \"META-INF/maven/\" + groupId + \"/\" + versionId + \"/pom.properties\";\n         try {\n             final Properties p = new Properties();\n-            p.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName));\n+            final InputStream resourceAsStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);\n+            if (resourceAsStream == null)\n+                return null;\n+            p.load(resourceAsStream);\n             return p;\n         } catch (IOException ignore) {\n             return null;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/cf0f504eaa27fb9f64ebc047267b376b0de962d7",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/ab5d5c43ff11b5edb14e8da1ce56541acf44da08",
        "message": "Prevent from potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@490999 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_43",
        "file": [
            {
                "sha": "2f3cc3acdc03e5f16551df1189d09e30c14e18da",
                "filename": "blocks/cocoon-eventcache/cocoon-eventcache-impl/src/main/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java",
                "status": "modified",
                "additions": 13,
                "deletions": 15,
                "changes": 28,
                "blob_url": "https://github.com/apache/cocoon/blob/cf0f504eaa27fb9f64ebc047267b376b0de962d7/blocks/cocoon-eventcache/cocoon-eventcache-impl/src/main/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cf0f504eaa27fb9f64ebc047267b376b0de962d7/blocks/cocoon-eventcache/cocoon-eventcache-impl/src/main/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-eventcache/cocoon-eventcache-impl/src/main/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java?ref=cf0f504eaa27fb9f64ebc047267b376b0de962d7",
                "patch": "@@ -41,17 +41,15 @@\n public class EventAwareCacheImpl extends CacheImpl implements Initializable,\n                                                               EventAware {\n     \n-    private ServiceManager m_manager;\n-\n-\tprivate EventRegistry m_eventRegistry;\n+\tprivate EventRegistry eventRegistry;\n \n \t/** \n      * Clears the entire Cache, including all registered event-pipeline key \n      * mappings..\n \t */\n \tpublic void clear() {\n \t\tsuper.clear();\n-        m_eventRegistry.clear();\n+        this.eventRegistry.clear();\n \t}\n     \n \t/** \n@@ -86,9 +84,8 @@ public void store(Serializable key, CachedResponse response)\n      * Look up the EventRegistry \n      */\n \tpublic void service(ServiceManager manager) throws ServiceException {\n-\t\tthis.m_manager = manager;\n         super.service(manager);\n-        this.m_eventRegistry = (EventRegistry)manager.lookup(EventRegistry.ROLE);\n+        this.eventRegistry = (EventRegistry)this.manager.lookup(EventRegistry.ROLE);\n \t}\n \n \t/**\n@@ -97,7 +94,7 @@ public void service(ServiceManager manager) throws ServiceException {\n \t */\n \tpublic void remove(Serializable key) {\n \t\tsuper.remove(key);\n-        m_eventRegistry.removeKey(key);\n+        this.eventRegistry.removeKey(key);\n \t}\n     \n     /**\n@@ -108,7 +105,7 @@ public void remove(Serializable key) {\n      */\n     public void processEvent(Event e) {\n         if (e == null) return;\n-        Serializable[] keys = m_eventRegistry.keysForEvent(e);\n+        Serializable[] keys = this.eventRegistry.keysForEvent(e);\n         if (keys == null) return;\n         for (int i=0;i<keys.length; i++) {\n             if (keys[i] != null) {\n@@ -130,7 +127,7 @@ public void processEvent(Event e) {\n      * orphaned Event/PipelineKey mappings.\n      */\n \tpublic void initialize() throws Exception {\n-\t\tif (!m_eventRegistry.wasRecoverySuccessful()) {\n+\t\tif (!this.eventRegistry.wasRecoverySuccessful()) {\n             super.clear();\n         } else {\n             // Not sure if we want this overhead here, but where else?\n@@ -147,11 +144,11 @@ public void initialize() throws Exception {\n      * removed abnormally or is not configured with persistence.\n      */\n     public void veryifyEventCache() {\n-        Serializable[] keys = m_eventRegistry.allKeys();\n+        Serializable[] keys = this.eventRegistry.allKeys();\n         if (keys == null) return;\n         for (int i=0; i<keys.length; i++) {\n             if (!this.containsKey(keys[i])) {\n-                m_eventRegistry.removeKey(keys[i]);\n+                this.eventRegistry.removeKey(keys[i]);\n                 if (getLogger().isDebugEnabled()) {\n                     getLogger().debug(\"Cache key no longer valid: \" + \n                             keys[i]);\n@@ -164,10 +161,11 @@ public void veryifyEventCache() {\n      * Release resources\n      */\n \tpublic void dispose() {\n-        m_manager.release(m_eventRegistry);\n+        if ( this.manager != null ) {\n+            this.manager.release(this.eventRegistry);\n+            this.eventRegistry = null;\n+        }\n \t\tsuper.dispose();\n-        m_manager = null;\n-        m_eventRegistry = null;\n \t}\n \n     private void examineValidity(SourceValidity val, Serializable key) {\n@@ -196,7 +194,7 @@ private void handleEventValidity(EventValidity val, Serializable key) {\n         if (getLogger().isDebugEnabled()) {\n             getLogger().debug(\"Found EventValidity: \" + val.toString());\n         }\n-        m_eventRegistry.register(val.getEvent(),key); \n+        this.eventRegistry.register(val.getEvent(),key); \n     }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/ab5d5c43ff11b5edb14e8da1ce56541acf44da08",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/1d1f60bd95ae8d0b0e40b0ece4c63b59804c4837",
        "message": "Prevent from potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@490998 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_44",
        "file": [
            {
                "sha": "fd1723cfc7e65e7dfe6a8e5e2984810ca8d8ee2c",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/caching/impl/CacheImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/ab5d5c43ff11b5edb14e8da1ce56541acf44da08/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/caching/impl/CacheImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/ab5d5c43ff11b5edb14e8da1ce56541acf44da08/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/caching/impl/CacheImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/caching/impl/CacheImpl.java?ref=ab5d5c43ff11b5edb14e8da1ce56541acf44da08",
                "patch": "@@ -63,9 +63,11 @@ public void service (ServiceManager manager) throws ServiceException {\n      * Disposable Interface\n      */\n     public void dispose() {\n-        this.manager.release(this.store);\n-        this.store = null;\n-        this.manager = null;\n+        if ( this.manager != null ) {\n+            this.manager.release(this.store);\n+            this.store = null;\n+            this.manager = null;\n+        }\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5503afc8e84c16809275b00a84586277ec4f111b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/c2c0ed33fe290106ecf3225998034b3fbf773e75",
        "message": "seems JCI needs a store anyway to prevent it from NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@472032 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_45",
        "file": [
            {
                "sha": "0d5eab90cfc9795bef1028f7c05f5abe6fabe49f",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/AvalonUtils.java",
                "status": "modified",
                "additions": 8,
                "deletions": 7,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/5503afc8e84c16809275b00a84586277ec4f111b/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/AvalonUtils.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5503afc8e84c16809275b00a84586277ec4f111b/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/AvalonUtils.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/core/container/spring/avalon/AvalonUtils.java?ref=5503afc8e84c16809275b00a84586277ec4f111b",
                "patch": "@@ -142,17 +142,18 @@ public static ReloadingClassLoaderConfiguration createConfiguration(SourceResolv\n     \n     /**\n      * If a store node is configured in the class-dir/src-dir configuration, \n-     * let's configure the store; the default one is the JCI MemoryStore\n+     * let's configure the store; if no store node is configured add a default;\n+     * the default one is the JCI MemoryStore\n      */\n     private static void configureStore(ReloadingClassLoaderConfiguration configBean,\n                                        String                            dirUri,\n                                        Configuration                     storeConfig)\n     throws Exception {\n-        if (storeConfig != null) {\n-            final String storeClassName = storeConfig.getAttribute(\"class\",\"org.apache.commons.jci.stores.MemoryResourceStore\");\n-            final ResourceStore store = (ResourceStore)Class.forName(storeClassName).newInstance();\n-            final URL url = new URL(dirUri);\n-            configBean.addStore(url.getFile(),store);\n-        }\n+        final String storeClassName = (storeConfig != null \n+            ? storeConfig.getAttribute(\"class\",\"org.apache.commons.jci.stores.MemoryResourceStore\")\n+                : \"org.apache.commons.jci.stores.MemoryResourceStore\");\n+        final ResourceStore store = (ResourceStore)Class.forName(storeClassName).newInstance();\n+        final URL url = new URL(dirUri);\n+        configBean.addStore(url.getFile(),store);\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d347a14a73bd69524b971d6d4a0160b786cf8931",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/26893923fc0b054b0e884b1d53306a7f811be6de",
        "message": "set logger to prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@464911 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_46",
        "file": [
            {
                "sha": "6483e74662a95b6af4ccaab4c4d16568bd25e92b",
                "filename": "tools/cocoon-block-deployer/cocoon-deployer-plugin/src/main/java/org/apache/cocoon/maven/deployer/monolithic/MonolithicCocoonDeployer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/cocoon/blob/d347a14a73bd69524b971d6d4a0160b786cf8931/tools/cocoon-block-deployer/cocoon-deployer-plugin/src/main/java/org/apache/cocoon/maven/deployer/monolithic/MonolithicCocoonDeployer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/d347a14a73bd69524b971d6d4a0160b786cf8931/tools/cocoon-block-deployer/cocoon-deployer-plugin/src/main/java/org/apache/cocoon/maven/deployer/monolithic/MonolithicCocoonDeployer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/tools/cocoon-block-deployer/cocoon-deployer-plugin/src/main/java/org/apache/cocoon/maven/deployer/monolithic/MonolithicCocoonDeployer.java?ref=d347a14a73bd69524b971d6d4a0160b786cf8931",
                "patch": "@@ -61,6 +61,7 @@ public void deploy(final Map libraries, final File basedir, final String blocksd\n             final DevelopmentBlock[] developmentBlocks, DevelopmentProperty[] developmentProperties)\n             throws DeploymentException {\n \n+        xwebPatcher.setLogger( logger );\n         // iterate over all blocks that need to be installed into a J2EE web\n         // application\n         for (Iterator it = libraries.entrySet().iterator(); it.hasNext();) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5cbcffe4e98d967f3e9eb6838ddfac7720593f8c",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/46ceba6809b0a1f2f70d5d37ea778571c7775f3f",
        "message": "XSP block: Using document('') in logicsheet caused NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@440023 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_47",
        "file": [
            {
                "sha": "fee3c4a22bff2d5dc3766e8d4fd53ca7a296b3a9",
                "filename": "blocks/cocoon-xsp/cocoon-xsp-sample/src/main/resources/COB-INF/logicsheets/interpolation.xsl",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/5cbcffe4e98d967f3e9eb6838ddfac7720593f8c/blocks/cocoon-xsp/cocoon-xsp-sample/src/main/resources/COB-INF/logicsheets/interpolation.xsl",
                "raw_url": "https://github.com/apache/cocoon/raw/5cbcffe4e98d967f3e9eb6838ddfac7720593f8c/blocks/cocoon-xsp/cocoon-xsp-sample/src/main/resources/COB-INF/logicsheets/interpolation.xsl",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-xsp/cocoon-xsp-sample/src/main/resources/COB-INF/logicsheets/interpolation.xsl?ref=5cbcffe4e98d967f3e9eb6838ddfac7720593f8c",
                "patch": "@@ -30,8 +30,14 @@\n   <xsl:template match=\"xsp-interpolation:greeting\">\n     <!-- Using attribute and text interpolation. -->\n     <center style=\"color:{#color}\">Hello logicsheet {#world}!</center>\n+    <!-- Testcase for document('') in logicsheet. -->\n+    <center style=\"color:{#color}\">\n+      <xsl:copy-of select=\"document('')/*/xsp-interpolation:hello\"/> {#world}!\n+    </center>\n   </xsl:template>\n- \n+\n+  <xsp-interpolation:hello>Hello document </xsp-interpolation:hello>\n+  \n   <xsl:template match=\"@*|*|text()|processing-instruction()\">\n     <xsl:copy>\n       <xsl:apply-templates select=\"@*|*|text()|processing-instruction()\"/>"
            },
            {
                "sha": "24e437540fb545828e519ead84826eeac243fb54",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/components/xslt/TraxProcessor.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/5cbcffe4e98d967f3e9eb6838ddfac7720593f8c/core/cocoon-core/src/main/java/org/apache/cocoon/components/xslt/TraxProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5cbcffe4e98d967f3e9eb6838ddfac7720593f8c/core/cocoon-core/src/main/java/org/apache/cocoon/components/xslt/TraxProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/components/xslt/TraxProcessor.java?ref=5cbcffe4e98d967f3e9eb6838ddfac7720593f8c",
                "patch": "@@ -19,6 +19,7 @@\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -245,6 +246,14 @@ public TransformerHandlerAndValidity getTransformerHandlerAndValidity(Source sty\n                     throw new XSLTProcessorException(\"Unable to create templates for stylesheet: \" + stylesheet.getURI());\n                 }\n \n+                // Must set base for Xalan stylesheet.\n+                // Otherwise document('') in logicsheet causes NPE.\n+                Class clazz = template.getClass();\n+                if (clazz.getName().equals(\"org.apache.xalan.templates.StylesheetRoot\")) {\n+                    Method method = clazz.getMethod(\"setHref\", new Class[]{String.class});\n+                    method.invoke(template, new Object[]{id});\n+                }\n+\n                 putTemplates(template, stylesheet, id);\n \n                 // Create transformer handler"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2f7fc084cf5008fc9cd9382da7f3a2dc95fb3adb",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a9d875a7748c133b7835ffccbee2e2b6bc3acfb2",
        "message": "looks like potential NPE to me\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@433980 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_48",
        "file": [
            {
                "sha": "5a4d13e624605c4cd964d7e7bc0d7037c48c0eb8",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/environment/TemplateObjectModelHelper.java",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/2f7fc084cf5008fc9cd9382da7f3a2dc95fb3adb/core/cocoon-core/src/main/java/org/apache/cocoon/environment/TemplateObjectModelHelper.java",
                "raw_url": "https://github.com/apache/cocoon/raw/2f7fc084cf5008fc9cd9382da7f3a2dc95fb3adb/core/cocoon-core/src/main/java/org/apache/cocoon/environment/TemplateObjectModelHelper.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/environment/TemplateObjectModelHelper.java?ref=2f7fc084cf5008fc9cd9382da7f3a2dc95fb3adb",
                "patch": "@@ -25,7 +25,10 @@\n \n import org.apache.avalon.framework.parameters.ParameterException;\n import org.apache.avalon.framework.parameters.Parameters;\n+import org.apache.cocoon.Processor;\n import org.apache.cocoon.components.flow.FlowHelper;\n+import org.apache.cocoon.configuration.Settings;\n+import org.apache.cocoon.environment.internal.EnvironmentHelper;\n import org.apache.commons.jxpath.DynamicPropertyHandler;\n import org.apache.commons.jxpath.JXPathBeanInfo;\n import org.apache.commons.jxpath.JXPathIntrospector;\n@@ -115,12 +118,12 @@ public static Map getTemplateObjectModel(final Map objectModel,\n \n         // cocoon.continuation\n         final Object cont = FlowHelper.getWebContinuation(objectModel);\n-        if ( cont != null ) {\n+        if (cont != null) {\n             cocoon.put(\"continuation\", cont);\n         }\n             \n         // cocoon.parameters\n-        if ( parameters != null ) {\n+        if (parameters != null) {\n             cocoon.put(\"parameters\", new ParametersMap(parameters));\n         }\n \n@@ -137,7 +140,7 @@ public static Map getTemplateObjectModel(final Map objectModel,\n         \n         return map;\n     }\n-\n+    \n     protected static final class ParametersMap extends Parameters implements Map {\n \n         protected final Parameters wrappedParameters;\n@@ -246,11 +249,11 @@ public boolean containsKey(Object arg0) {\n         }\n \n         public boolean containsValue(Object arg0) {\n-            return this.map.containsValue(arg0);\n+            return this.getMap().containsValue(arg0);\n         }\n \n         public Set entrySet() {\n-            return this.map.entrySet();\n+            return this.getMap().entrySet();\n         }\n \n         public Object get(Object arg0) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/125e477b1b76befd8653513e8bd4251c8bcbcf03",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b2f5247fab7d90fd186258392bcf66fe36fcbfbb",
        "message": "Clean up code and fix for some possible NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@415287 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_49",
        "file": [
            {
                "sha": "558b0e01dac6c3edced3ce0384694ee0d4511466",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/Accessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/Accessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/Accessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/Accessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * Licnsed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -16,10 +16,11 @@\n package org.apache.cocoon.components.accessor;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public interface Accessor {\n-    public String ROLE = Accessor.class.getName();\n \n-    public Object getObject();\n+    String ROLE = Accessor.class.getName();\n+\n+    Object getObject();\n }"
            },
            {
                "sha": "a31192f78a5665455f8f7b7beca0da069461e3bd",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContextAccessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContextAccessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContextAccessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContextAccessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -18,10 +18,13 @@\n import org.apache.cocoon.environment.ObjectModelHelper;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class ContextAccessor extends ObjectModelAccessor {\n \n+    /**\n+     * @see org.apache.cocoon.components.accessor.ObjectModelAccessor#getObject()\n+     */\n     public Object getObject() {\n         return ObjectModelHelper.getContext(getObjectModel());\n     }"
            },
            {
                "sha": "8f8b319bfd285030f8a40ee26fb9a77b802206c1",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContinuationAccessor.java",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContinuationAccessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContinuationAccessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ContinuationAccessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -18,11 +18,14 @@\n import org.apache.cocoon.components.flow.FlowHelper;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class ContinuationAccessor extends ObjectModelAccessor {\n \n+    /**\n+     * @see org.apache.cocoon.components.accessor.ObjectModelAccessor#getObject()\n+     */\n     public Object getObject() {\n-\treturn FlowHelper.getWebContinuation(getObjectModel());\n+\t    return FlowHelper.getWebContinuation(getObjectModel());\n     }\n }"
            },
            {
                "sha": "d92a092be2633ba49e167bb4d583331234a77eb7",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/FlowAttributeAccessor.java",
                "status": "modified",
                "additions": 9,
                "deletions": 6,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/FlowAttributeAccessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/FlowAttributeAccessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/FlowAttributeAccessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -22,20 +22,23 @@\n import org.apache.cocoon.environment.TemplateObjectModelHelper;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class FlowAttributeAccessor extends ObjectModelAccessor {\n \n+    /**\n+     * @see org.apache.cocoon.components.accessor.ObjectModelAccessor#getObject()\n+     */\n     public Object getObject() {\n         Map map = new HashMap();\n-\tObject contextObject = FlowHelper.getContextObject(getObjectModel());\n+\t    Object contextObject = FlowHelper.getContextObject(getObjectModel());\n \n         if (contextObject instanceof Map) {\n             map.putAll((Map)contextObject);\n         } else if (contextObject != null) {\n             TemplateObjectModelHelper.fillContext(contextObject, map);\n         }\n-        \n+\n         return map;\n     }\n }"
            },
            {
                "sha": "75cf15ab46e6a8f6e7edf7fef3ff25061c77a8e3",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/MapAccessor.java",
                "status": "modified",
                "additions": 14,
                "deletions": 14,
                "changes": 28,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/MapAccessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/MapAccessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/MapAccessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -30,12 +30,12 @@\n \n /**\n  * An accessor that handles a <code>Map</code> of accessors.\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class MapAccessor implements Accessor, Configurable, Serviceable, ThreadSafe  {\n \n     /** Reference to the accessors */\n-    private Map accessors = null;\n+    private Map accessors;\n \n     /** The service manager instance */\n     private ServiceManager manager;\n@@ -44,9 +44,11 @@\n      * The accessors that should be part of the map are configured\n      * through <code>&lt;element name=\"the key that will be used in\n      * the map\" accessor=\"the name of the accessor\"/&gt;</code>.\n+     *\n+     * @see org.apache.avalon.framework.configuration.Configurable#configure(org.apache.avalon.framework.configuration.Configuration)\n      */\n     public void configure(Configuration config) throws ConfigurationException {\n-        HashMap accessors = new HashMap();\n+        Map accessors = new HashMap();\n         Configuration[] children = config.getChildren(\"element\");\n         for (int i = 0; i < children.length; i++) {\n             String accessor = children[i].getAttribute(\"accessor\");\n@@ -60,20 +62,15 @@ public void configure(Configuration config) throws ConfigurationException {\n     /**\n      * Set the current <code>ServiceManager</code> instance used by this\n      * <code>Serviceable</code>.\n+     * @see org.apache.avalon.framework.service.Serviceable#service(org.apache.avalon.framework.service.ServiceManager)\n      */\n     public void service(ServiceManager manager) throws ServiceException {\n         this.manager = manager;\n     }\n \n-    /**\n-     * Release all resources.\n-     */\n-    public void dispose() {\n-        this.manager = null;\n-    }\n-\n     /**\n      * Get the map of accessors\n+     * @see org.apache.cocoon.components.accessor.Accessor#getObject()\n      */\n     public Object getObject() {\n         return this.accessors;\n@@ -82,7 +79,7 @@ public Object getObject() {\n     /**\n      * Map that finds the accessor at access time.\n      */\n-    public class AccessorMap extends HashMap {\n+    public static class AccessorMap extends HashMap {\n \n         private ServiceManager manager;\n \n@@ -117,12 +114,15 @@ public Object get(Object key) {\n         public void clear() {\n             throw new UnsupportedOperationException(\"AccessorMap is read only\");\n         }\n+\n         public Object put(Object key, Object value) {\n             throw new UnsupportedOperationException(\"AccessorMap is read only\");\n         }\n+\n         public void putAll(Map m) {\n             throw new UnsupportedOperationException(\"AccessorMap is read only\");\n         }\n+\n         public Object remove(Object key) {\n             throw new UnsupportedOperationException(\"AccessorMap is read only\");\n         }"
            },
            {
                "sha": "f8d0388ae3d866844d3d29d07d641aef1caa0ed2",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ObjectModelAccessor.java",
                "status": "modified",
                "additions": 10,
                "deletions": 4,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ObjectModelAccessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ObjectModelAccessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/ObjectModelAccessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -23,12 +23,15 @@\n import org.apache.cocoon.components.ContextHelper;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class ObjectModelAccessor implements Accessor, Contextualizable {\n \n     private Context context;\n \n+    /**\n+     * @see org.apache.avalon.framework.context.Contextualizable#contextualize(org.apache.avalon.framework.context.Context)\n+     */\n     public void contextualize(Context context)\n     throws ContextException{\n         this.context = context;\n@@ -38,6 +41,9 @@ protected Map getObjectModel() {\n         return ContextHelper.getObjectModel(this.context);\n     }\n  \n+    /**\n+     * @see org.apache.cocoon.components.accessor.Accessor#getObject()\n+     */\n     public Object getObject() {\n         return getObjectModel();\n     }"
            },
            {
                "sha": "5295a48ead16ed10926047bc1dd21ae7aa4f2656",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/RequestAccessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/RequestAccessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/RequestAccessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/RequestAccessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -18,10 +18,13 @@\n import org.apache.cocoon.environment.ObjectModelHelper;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class RequestAccessor extends ObjectModelAccessor {\n \n+    /**\n+     * @see org.apache.cocoon.components.accessor.ObjectModelAccessor#getObject()\n+     */\n     public Object getObject() {\n         return ObjectModelHelper.getRequest(getObjectModel());\n     }"
            },
            {
                "sha": "bf7ff59ee7a26bf8b68bb544db835cbaf3746254",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/SessionAccessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/SessionAccessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/SessionAccessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/accessor/SessionAccessor.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -20,10 +20,13 @@\n import org.apache.cocoon.environment.Session;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class SessionAccessor extends ObjectModelAccessor {\n \n+    /**\n+     * @see org.apache.cocoon.components.accessor.ObjectModelAccessor#getObject()\n+     */\n     public Object getObject() {\n         Request request = ObjectModelHelper.getRequest(getObjectModel());\n         Session session = request.getSession(false);"
            },
            {
                "sha": "8f7886cbb2d09feb8e16087efac1fa6eef859f64",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/AbstractExpression.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/AbstractExpression.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/AbstractExpression.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/AbstractExpression.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,6 +21,7 @@\n  * @version $Id$\n  */\n public abstract class AbstractExpression implements Expression {\n+\n     private String language;\n     private String expression;\n "
            },
            {
                "sha": "9da734cc520748b12f4ed5354983c980f44e87b9",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/DefaultExpressionFactory.java",
                "status": "modified",
                "additions": 15,
                "deletions": 6,
                "changes": 21,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/DefaultExpressionFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/DefaultExpressionFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/DefaultExpressionFactory.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -24,9 +24,12 @@\n import org.apache.avalon.framework.thread.ThreadSafe;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n-public class DefaultExpressionFactory extends AbstractLogEnabled implements Disposable, Serviceable, ThreadSafe, ExpressionFactory {\n+public class DefaultExpressionFactory\n+    extends AbstractLogEnabled\n+    implements Disposable, Serviceable, ThreadSafe, ExpressionFactory {\n+\n     public static String DEFAULT_EXPRESSION_LANGUAGE = \"default\";\n \n     /** The component manager */\n@@ -35,16 +38,22 @@\n     /** The Expression compiler selector */\n     protected ServiceSelector compilerSelector;\n \n+    /**\n+     * @see org.apache.avalon.framework.service.Serviceable#service(org.apache.avalon.framework.service.ServiceManager)\n+     */\n     public void service(final ServiceManager manager) throws ServiceException {\n         this.manager = manager;\n-\n         this.compilerSelector = (ServiceSelector) this.manager.lookup(ExpressionCompiler.ROLE + \"Selector\");\n     }\n \n+    /**\n+     * @see org.apache.avalon.framework.activity.Disposable#dispose()\n+     */\n     public void dispose() {\n         if (null != this.manager) {\n             this.manager.release(this.compilerSelector);\n             this.compilerSelector = null;\n+            this.manager = null;\n         }\n     }\n "
            },
            {
                "sha": "8def035b3f1f7d87080266287ffff4f9a6902650",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/Expression.java",
                "status": "modified",
                "additions": 12,
                "deletions": 11,
                "changes": 23,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/Expression.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/Expression.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/Expression.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -18,21 +18,22 @@\n import java.util.Iterator;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public interface Expression {\n-    public Object evaluate(ExpressionContext context)\n+\n+    Object evaluate(ExpressionContext context)\n             throws ExpressionException;\n \n-    public Iterator iterate(ExpressionContext context)\n+    Iterator iterate(ExpressionContext context)\n             throws ExpressionException;\n \n-    public void assign(ExpressionContext context, Object value)\n+    void assign(ExpressionContext context, Object value)\n             throws ExpressionException;\n \n-    public String getExpression();\n+    String getExpression();\n \n-    public String getLanguage();\n+    String getLanguage();\n \n     /*\n      * This method is added to handle that JXPath have two access methods\n@@ -41,7 +42,7 @@ public void assign(ExpressionContext context, Object value)\n      * get rid of the getNode method, but have not yet figured out how to get\n      * work in JXTG\n      */\n-    public Object getNode(ExpressionContext context) throws ExpressionException;\n+    Object getNode(ExpressionContext context) throws ExpressionException;\n \n-    public void setProperty(String property, Object value);\n+    void setProperty(String property, Object value);\n }"
            },
            {
                "sha": "713e00de596a3e0bf4382f17a7250c223bdc81e2",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionCompiler.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionCompiler.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionCompiler.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionCompiler.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -16,11 +16,12 @@\n package org.apache.cocoon.components.expression;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public interface ExpressionCompiler {\n-    public String ROLE = ExpressionCompiler.class.getName();\n \n-    public Expression compile(String language, String expression)\n+    String ROLE = ExpressionCompiler.class.getName();\n+\n+    Expression compile(String language, String expression)\n             throws ExpressionException;\n }"
            },
            {
                "sha": "01b562809a92a2278f5c496a60caa7275cb86440",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionContext.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionContext.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionContext.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionContext.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,11 +21,12 @@\n import org.apache.cocoon.xml.NamespacesTable;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class ExpressionContext extends HashMap {\n+\n     private ExpressionContext closure;\n-    private Object contextBean = null;\n+    private Object contextBean;\n     private NamespacesTable namespaces;\n \n     public ExpressionContext() {"
            },
            {
                "sha": "dbf9bbd135b58f4ed3aabeb6a48fe03a62fc82b9",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionException.java",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionException.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionException.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionException.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -20,11 +20,11 @@\n import org.apache.avalon.framework.CascadingThrowable;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class ExpressionException\n-    extends IOException implements CascadingThrowable\n-{\n+    extends IOException implements CascadingThrowable {\n+\n     /**\n      * The Throwable that caused this exception to be thrown.\n      */"
            },
            {
                "sha": "e5699b0fd3a4a656a18203e69d48d8731565e104",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionFactory.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/ExpressionFactory.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -15,6 +15,9 @@\n  */\n package org.apache.cocoon.components.expression;\n \n+/**\n+ * @version $Id$\n+ */\n public interface ExpressionFactory {\n \n     String ROLE = ExpressionFactory.class.getName();"
            },
            {
                "sha": "18d1b7e8cb0bac148bc90882a7c78a8292aa5e30",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptCompiler.java",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptCompiler.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptCompiler.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptCompiler.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,9 +21,13 @@\n import org.apache.cocoon.components.expression.ExpressionException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class JavaScriptCompiler implements ExpressionCompiler, ThreadSafe {\n+\n+    /**\n+     * @see org.apache.cocoon.components.expression.ExpressionCompiler#compile(java.lang.String, java.lang.String)\n+     */\n     public Expression compile(String language, String expression) throws ExpressionException {\n         return new JavaScriptExpression(language, expression);\n     }"
            },
            {
                "sha": "ef6ede2cbbe53f41d229841801626e07b9323d1b",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptExpression.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptExpression.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptExpression.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/javascript/JavaScriptExpression.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -37,6 +37,7 @@\n import org.mozilla.javascript.Scriptable;\n \n public class JavaScriptExpression extends AbstractExpression {\n+\n     private Script script;\n     private JSIntrospector introspector;\n "
            },
            {
                "sha": "3e3018e43bc5c1baca5e043ba1be4a6a91f6548c",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JSIntrospector.java",
                "status": "modified",
                "additions": 16,
                "deletions": 6,
                "changes": 22,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JSIntrospector.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JSIntrospector.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JSIntrospector.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -24,13 +24,23 @@\n import org.apache.commons.jexl.util.introspection.VelPropertyGet;\n import org.apache.commons.jexl.util.introspection.VelPropertySet;\n import org.apache.commons.lang.StringUtils;\n-import org.mozilla.javascript.*;\n+import org.mozilla.javascript.Context;\n+import org.mozilla.javascript.Function;\n+import org.mozilla.javascript.JavaScriptException;\n+import org.mozilla.javascript.NativeArray;\n+import org.mozilla.javascript.NativeJavaClass;\n+import org.mozilla.javascript.ScriptRuntime;\n+import org.mozilla.javascript.Scriptable;\n+import org.mozilla.javascript.ScriptableObject;\n+import org.mozilla.javascript.Undefined;\n+import org.mozilla.javascript.Wrapper;\n \n \n /**\n  * Jexl Introspector that supports Rhino JavaScript objects\n- * as well as Java Objects\n- * @version SVN $Id$\n+ * as well as Java Objects.\n+ *\n+ * @version $Id$\n  */\n public class JSIntrospector extends UberspectImpl {\n "
            },
            {
                "sha": "2a6307f95a270954c9d0537cc867e6c16e220f5c",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlCompiler.java",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlCompiler.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlCompiler.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlCompiler.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,9 +21,13 @@\n import org.apache.cocoon.components.expression.ExpressionException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class JexlCompiler implements ExpressionCompiler, ThreadSafe {\n+\n+    /**\n+     * @see org.apache.cocoon.components.expression.ExpressionCompiler#compile(java.lang.String, java.lang.String)\n+     */\n     public Expression compile(String language, String expression) throws ExpressionException {\n         return new JexlExpression(language, expression);\n     }"
            },
            {
                "sha": "1e9720da75e86a135a334a7a634f0136c6950a49",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlExpression.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlExpression.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlExpression.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/components/expression/jexl/JexlExpression.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -27,7 +27,7 @@\n import org.apache.commons.jexl.util.introspection.Info;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class JexlExpression extends AbstractExpression {\n "
            },
            {
                "sha": "894d48317200f7458e94e538c6e9886dab31eb55",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateGenerator.java",
                "status": "modified",
                "additions": 46,
                "deletions": 16,
                "changes": 62,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateGenerator.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -48,18 +48,20 @@\n  *                                         embedded JSTL and XPath expression\n  *                                         substitution to access data sent by\n  *                                         Cocoon Flowscripts.\n- * \n+ *\n  * @cocoon.sitemap.component.name jx\n  * @cocoon.sitemap.component.label content\n  * @cocoon.sitemap.component.logger sitemap.generator.jx\n- * \n+ *\n  * @cocoon.sitemap.component.pooling.max 16\n- * \n- * \n- * @version SVN $Id: JXTemplateGenerator.java 169169 2005-05-08 21:23:28Z\n- *          lgawron $\n+ *\n+ *\n+ * @version $Id$\n  */\n-public class JXTemplateGenerator extends ServiceableGenerator implements CacheableProcessingComponent {\n+public class JXTemplateGenerator\n+    extends ServiceableGenerator\n+    implements CacheableProcessingComponent {\n+\n     /** The namespace used by this generator */\n     public final static String NS = \"http://apache.org/cocoon/templates/jx/1.0\";\n \n@@ -76,34 +78,54 @@ public XMLConsumer getConsumer() {\n         return this.xmlConsumer;\n     }\n \n+    /**\n+     * @see org.apache.cocoon.generation.ServiceableGenerator#service(org.apache.avalon.framework.service.ServiceManager)\n+     */\n     public void service(ServiceManager manager) throws ServiceException {\n         super.service(manager);\n         this.scriptManager = (ScriptManager) this.manager.lookup(ScriptManager.ROLE);\n     }\n \n+    /**\n+     * @see org.apache.cocoon.generation.ServiceableGenerator#dispose()\n+     */\n     public void dispose() {\n-        this.manager.release(scriptManager);\n+        if ( this.manager != null ) {\n+            this.manager.release(this.scriptManager);\n+            this.scriptManager = null;\n+        }\n         super.dispose();\n     }\n \n+    /**\n+     * @see org.apache.cocoon.generation.AbstractGenerator#recycle()\n+     */\n     public void recycle() {\n         this.startDocument = null;\n         this.expressionContext = null;\n         this.definitions = null;\n         super.recycle();\n     }\n \n+    /**\n+     * @see org.apache.cocoon.generation.AbstractGenerator#setup(org.apache.cocoon.environment.SourceResolver, java.util.Map, java.lang.String, org.apache.avalon.framework.parameters.Parameters)\n+     */\n     public void setup(SourceResolver resolver, Map objectModel, String src, Parameters parameters)\n-            throws ProcessingException, SAXException, IOException {\n+    throws ProcessingException, SAXException, IOException {\n \n         super.setup(resolver, objectModel, src, parameters);\n-        if (src != null)\n-            startDocument = scriptManager.resolveTemplate(src);\n+        if ( src == null ) {\n+            throw new ProcessingException(\"JXTemplateGenerator: 'src' attribute is missing.\");\n+        }\n+        this.startDocument = scriptManager.resolveTemplate(src);\n \n         this.expressionContext = FlowObjectModelHelper.getFOMExpressionContext(objectModel, parameters);\n         this.definitions = new HashMap();\n     }\n \n+    /**\n+     * @see org.apache.cocoon.generation.Generator#generate()\n+     */\n     public void generate() throws IOException, SAXException, ProcessingException {\n         performGeneration(this.startDocument, null);\n \n@@ -118,11 +140,15 @@ public void performGeneration(Event startEvent, Event endEvent) throws SAXExcept\n                 this.manager), null, startEvent, null);\n     }\n \n+    /**\n+     * @see org.apache.cocoon.caching.CacheableProcessingComponent#getKey()\n+     */\n     public Serializable getKey() {\n         JXTExpression cacheKeyExpr = (JXTExpression) this.startDocument\n                 .getTemplateProperty(JXTemplateGenerator.CACHE_KEY);\n-        if (cacheKeyExpr == null)\n+        if (cacheKeyExpr == null) {\n             return null;\n+        }\n         try {\n             final Serializable templateKey = (Serializable) cacheKeyExpr.getValue(this.expressionContext);\n             if (templateKey != null) {\n@@ -134,11 +160,15 @@ public Serializable getKey() {\n         return null;\n     }\n \n+    /**\n+     * @see org.apache.cocoon.caching.CacheableProcessingComponent#getValidity()\n+     */\n     public SourceValidity getValidity() {\n         JXTExpression validityExpr = (JXTExpression) this.startDocument\n                 .getTemplateProperty(JXTemplateGenerator.VALIDITY);\n-        if (validityExpr == null)\n+        if (validityExpr == null) {\n             return null;\n+        }\n         try {\n             final SourceValidity sourceValidity = this.startDocument.getSourceValidity();\n             final SourceValidity templateValidity = (SourceValidity) validityExpr.getValue(this.expressionContext);"
            },
            {
                "sha": "665962161c6a3b40358d8fa54b4bade13a408f65",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateTransformer.java",
                "status": "modified",
                "additions": 15,
                "deletions": 15,
                "changes": 30,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/JXTemplateTransformer.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,22 +1,22 @@\n /*\n-* Copyright 1999-2004 The Apache Software Foundation\n-*\n-* Licensed under the Apache License, Version 2.0 (the \"License\");\n-* you may not use this file except in compliance with the License.\n-* You may obtain a copy of the License at\n-*\n-*     http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing, software\n-* distributed under the License is distributed on an \"AS IS\" BASIS,\n-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-* See the License for the specific language governing permissions and\n-* limitations under the License.\n-*/\n+ * Copyright 1999-2004 The Apache Software Foundation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.apache.cocoon.template;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class JXTemplateTransformer extends TransformerAdapter {\n     /**"
            },
            {
                "sha": "4cb56adca5f3e3930e9f67cc8ace764283562e89",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java",
                "status": "modified",
                "additions": 31,
                "deletions": 8,
                "changes": 39,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/TransformerAdapter.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -38,12 +38,16 @@\n  * performance penalty for this however: you effectively recompile the template\n  * for every instance document)\n  * \n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class TransformerAdapter extends ServiceableTransformer {\n+\n     static class TemplateConsumer extends Parser implements XMLConsumer, Serviceable, Disposable {\n+\n         private ServiceManager manager;\n \n+        private final JXTemplateGenerator gen;\n+\n         public TemplateConsumer() {\n             this.gen = new JXTemplateGenerator();\n         }\n@@ -53,13 +57,19 @@ public void setup(SourceResolver resolver, Map objectModel, String src, Paramete\n             this.gen.setup(resolver, objectModel, null, parameters);\n         }\n \n+        /**\n+         * @see org.apache.avalon.framework.service.Serviceable#service(org.apache.avalon.framework.service.ServiceManager)\n+         */\n         public void service(ServiceManager manager) throws ServiceException {\n             this.manager = manager;\n             this.gen.service(manager);\n             setParsingContext(new ParsingContext((StringTemplateParser) this.manager.lookup(StringTemplateParser.ROLE),\n                     (InstructionFactory) this.manager.lookup(InstructionFactory.ROLE)));\n         }\n \n+        /**\n+         * @see org.apache.avalon.framework.activity.Disposable#dispose()\n+         */\n         public void dispose() {\n             this.manager.release(this.parsingContext.getInstructionFactory());\n             this.manager.release(this.parsingContext.getStringTemplateParser());\n@@ -79,33 +89,46 @@ protected void recycle() {\n             super.recycle();\n             gen.recycle();\n         }\n-\n-        JXTemplateGenerator gen;\n     }\n \n-    TemplateConsumer templateConsumer = new TemplateConsumer();\n+    protected final TemplateConsumer templateConsumer = new TemplateConsumer();\n \n+    /**\n+     * @see org.apache.cocoon.transformation.ServiceableTransformer#recycle()\n+     */\n     public void recycle() {\n         super.recycle();\n         templateConsumer.recycle();\n     }\n \n+    /**\n+     * @see org.apache.cocoon.transformation.ServiceableTransformer#setup(org.apache.cocoon.environment.SourceResolver, java.util.Map, java.lang.String, org.apache.avalon.framework.parameters.Parameters)\n+     */\n     public void setup(SourceResolver resolver, Map objectModel, String src, Parameters parameters)\n-            throws ProcessingException, SAXException, IOException {\n+    throws ProcessingException, SAXException, IOException {\n         super.setup(resolver, objectModel, src, parameters);\n         templateConsumer.setup(resolver, objectModel, src, parameters);\n     }\n \n+    /**\n+     * @see org.apache.cocoon.transformation.ServiceableTransformer#service(org.apache.avalon.framework.service.ServiceManager)\n+     */\n     public void service(ServiceManager manager) throws ServiceException {\n         super.service(manager);\n         templateConsumer.service(manager);\n     }\n \n+    /**\n+     * @see org.apache.cocoon.transformation.ServiceableTransformer#dispose()\n+     */\n     public void dispose() {\n         templateConsumer.dispose();\n         super.dispose();\n     }\n \n+    /**\n+     * @see org.apache.cocoon.xml.AbstractXMLProducer#setConsumer(org.apache.cocoon.xml.XMLConsumer)\n+     */\n     public void setConsumer(XMLConsumer xmlConsumer) {\n         super.setConsumer(templateConsumer);\n         templateConsumer.setConsumer(xmlConsumer);"
            },
            {
                "sha": "0608af2986949211c19e4c9bc20b670bd0a51622",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/AbstractStringTemplateParser.java",
                "status": "modified",
                "additions": 26,
                "deletions": 4,
                "changes": 30,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/AbstractStringTemplateParser.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/AbstractStringTemplateParser.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/AbstractStringTemplateParser.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -36,19 +36,30 @@\n import org.xml.sax.SAXException;\n import org.xml.sax.SAXParseException;\n \n-public abstract class AbstractStringTemplateParser extends AbstractLogEnabled\n-        implements Serviceable, Disposable,ThreadSafe, StringTemplateParser {\n+public abstract class AbstractStringTemplateParser\n+    extends AbstractLogEnabled\n+    implements Serviceable, Disposable, ThreadSafe, StringTemplateParser {\n \n     private ServiceManager manager;\n     private ExpressionFactory expressionFactory;\n \n+    /**\n+     * @see org.apache.avalon.framework.service.Serviceable#service(org.apache.avalon.framework.service.ServiceManager)\n+     */\n     public void service(ServiceManager manager) throws ServiceException {\n         this.manager = manager;\n         this.expressionFactory = (ExpressionFactory) this.manager.lookup(ExpressionFactory.ROLE);\n     }\n \n+    /**\n+     * @see org.apache.avalon.framework.activity.Disposable#dispose()\n+     */\n     public void dispose() {\n-        this.manager.release(this.expressionFactory);\n+        if ( this.manager != null ) {\n+            this.manager.release(this.expressionFactory);\n+            this.manager = null;\n+            this.expressionFactory = null;\n+        }\n     }\n \n     protected JXTExpression compile(final String expression) throws Exception {\n@@ -59,6 +70,9 @@ protected JXTExpression compile(final String expression, String language) throws\n         return new JXTExpression(expression, this.expressionFactory.getExpression(language, expression));\n     }\n \n+    /**\n+     * @see org.apache.cocoon.template.expression.StringTemplateParser#compileBoolean(java.lang.String, java.lang.String, org.xml.sax.Locator)\n+     */\n     public JXTExpression compileBoolean(String val, String msg, Locator location) throws SAXException {\n         JXTExpression res = compileExpr(val, msg, location);\n         if (res != null && res.getCompiledExpression() == null && res.getRaw() != null) {\n@@ -67,6 +81,9 @@ public JXTExpression compileBoolean(String val, String msg, Locator location) th\n         return res;\n     }\n \n+    /**\n+     * @see org.apache.cocoon.template.expression.StringTemplateParser#compileInt(java.lang.String, java.lang.String, org.xml.sax.Locator)\n+     */\n     public JXTExpression compileInt(String val, String msg, Locator location) throws SAXException {\n         JXTExpression res = compileExpr(val, msg, location);\n         if (res != null && res.getCompiledExpression() == null && res.getRaw() != null) {\n@@ -75,6 +92,9 @@ public JXTExpression compileInt(String val, String msg, Locator location) throws\n         return res;\n     }\n \n+    /**\n+     * @see org.apache.cocoon.template.expression.StringTemplateParser#compileExpr(java.lang.String, java.lang.String, org.xml.sax.Locator)\n+     */\n     public JXTExpression compileExpr(String inStr, String errorPrefix, Locator location) throws SAXParseException {\n         if (inStr == null) {\n             return null;\n@@ -87,6 +107,9 @@ public JXTExpression compileExpr(String inStr, String errorPrefix, Locator locat\n         return (JXTExpression) substitutions.get(0);\n     }\n \n+    /**\n+     * @see org.apache.cocoon.template.expression.StringTemplateParser#parseSubstitutions(java.io.Reader, java.lang.String, org.xml.sax.Locator)\n+     */\n     public List parseSubstitutions(Reader in, String errorPrefix, Locator location) throws SAXParseException {\n         try {\n             return parseSubstitutions(in);\n@@ -96,5 +119,4 @@ public List parseSubstitutions(Reader in, String errorPrefix, Locator location)\n             throw new SAXParseException(errorPrefix + err.getMessage(), location, new ErrorHolder(err));\n         }\n     }\n-\n }"
            },
            {
                "sha": "5ec6e440a4a77602641cb7666baebf6354da7696",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/DefaultStringTemplateParser.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/DefaultStringTemplateParser.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/DefaultStringTemplateParser.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/DefaultStringTemplateParser.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -20,10 +20,13 @@\n import java.util.List;\n \n /**\n- * @version SVN $Id: DefaultStringTemplateParser.java 325973 2005-10-17\n- *          19:59:39Z lgawron $\n+ * @version  $Id$\n  */\n public class DefaultStringTemplateParser extends AbstractStringTemplateParser {\n+\n+    /**\n+     * @see org.apache.cocoon.template.expression.StringTemplateParser#parseSubstitutions(java.io.Reader)\n+     */\n     public List parseSubstitutions(Reader in) throws Exception {\n         LinkedList substitutions = new LinkedList();\n         StringBuffer buf = new StringBuffer();"
            },
            {
                "sha": "5a119918a85d91bba62ee6f5740f27cff6b13cda",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTExpression.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTExpression.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTExpression.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTExpression.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -22,9 +22,10 @@\n import org.apache.cocoon.components.expression.jxpath.JXPathExpression;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class JXTExpression extends Subst {\n+\n     private String raw;\n     private Object compiledExpression;\n "
            },
            {
                "sha": "ca2f5af88024be36133dfcfe1a49323907c39ce2",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTGStringTemplateParser.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTGStringTemplateParser.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTGStringTemplateParser.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/JXTGStringTemplateParser.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -20,14 +20,17 @@\n import java.util.List;\n \n /**\n- * @version SVN $Id: JXTGStringTemplateParser.java 325986 2005-10-17 21:35:18Z\n- *          lgawron $\n+ * @version $Id$\n  */\n public class JXTGStringTemplateParser extends AbstractStringTemplateParser {\n+\n     public final static String JXPATH = \"jxpath\";\n     public final static String JEXL = \"jexl\";\n     public final static String JAVASCRIPT = \"js\";\n \n+    /**\n+     * @see org.apache.cocoon.template.expression.StringTemplateParser#parseSubstitutions(java.io.Reader)\n+     */\n     public List parseSubstitutions(Reader in) throws Exception {\n         LinkedList substitutions = new LinkedList();\n         StringBuffer buf = new StringBuffer();"
            },
            {
                "sha": "055dde84ef22d9aa43fea0f0668502b2cc4955dd",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Literal.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Literal.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Literal.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Literal.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -24,7 +24,7 @@\n   avoid copying there. \n */\n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Literal extends Subst {\n     public Literal(String val) {"
            },
            {
                "sha": "8a92eea167886e98201005a88461d5ba8ff4da58",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/StringTemplateParser.java",
                "status": "modified",
                "additions": 13,
                "deletions": 9,
                "changes": 22,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/StringTemplateParser.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/StringTemplateParser.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/StringTemplateParser.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -27,19 +27,23 @@\n import java.util.List;\n import java.io.Reader;\n \n+/**\n+ * @version $Id$\n+ */\n public interface StringTemplateParser {\n-    public static String ROLE = StringTemplateParser.class.getName();\n \n-    /*\n-    * Compile a boolean expression (returns either a Compiled Expression or a\n-    * Boolean literal)\n-    */\n+    String ROLE = StringTemplateParser.class.getName();\n+\n+    /**\n+     * Compile a boolean expression (returns either a Compiled Expression or a\n+     * Boolean literal)\n+     */\n     JXTExpression compileBoolean(String val, String msg, Locator location) throws SAXException;\n \n-    /*\n-    * Compile an integer expression (returns either a Compiled Expression or an\n-    * Integer literal)\n-    */\n+    /**\n+     * Compile an integer expression (returns either a Compiled Expression or an\n+     * Integer literal)\n+     */\n     JXTExpression compileInt(String val, String msg, Locator location) throws SAXException;\n \n     JXTExpression compileExpr(String inStr, String errorPrefix, Locator location) throws SAXParseException;"
            },
            {
                "sha": "9322337245a26ff0803127d5bb4e0c60610e14ed",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Subst.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Subst.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Subst.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Subst.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -16,7 +16,7 @@\n package org.apache.cocoon.template.expression;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Subst {\n     // VOID"
            },
            {
                "sha": "6466f40ac9d9d96cd8afa3b7d18c4466698a804c",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Substitutions.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Substitutions.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Substitutions.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/expression/Substitutions.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -29,7 +29,7 @@\n import org.xml.sax.SAXParseException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Substitutions {\n "
            },
            {
                "sha": "575044cce4b958adce30313355e998225e3568cf",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Attribute.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Attribute.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Attribute.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Attribute.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -37,9 +37,10 @@\n import org.xml.sax.helpers.AttributesImpl;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Attribute extends Instruction {\n+\n     private JXTExpression name;\n     private JXTExpression value;\n "
            },
            {
                "sha": "a863ed2df6376e12f80526508f139a76a956ad7e",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Call.java",
                "status": "modified",
                "additions": 5,
                "deletions": 4,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Call.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Call.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Call.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -40,9 +40,10 @@\n import org.xml.sax.SAXParseException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Call extends Instruction {\n+\n     private Object macro;\n     private JXTExpression targetNamespace;\n     private Map parameters;"
            },
            {
                "sha": "388330f13a5cbf3b979cea67da704118ccebe8a5",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Instruction.java",
                "status": "modified",
                "additions": 8,
                "deletions": 7,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Instruction.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Instruction.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/instruction/Instruction.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -22,9 +22,13 @@\n import org.xml.sax.SAXException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public abstract class Instruction extends Event {\n+\n+    protected final StartElement startElement;\n+    private EndInstruction endInstruction;\n+\n     public Instruction(Locator locator) {\n         super(locator);\n         startElement = null;\n@@ -35,9 +39,6 @@ public Instruction(StartElement startElement) {\n         this.startElement = startElement;\n     }\n \n-    protected final StartElement startElement;\n-    private EndInstruction endInstruction;\n-\n     public EndInstruction getEndInstruction() {\n         return endInstruction;\n     }"
            },
            {
                "sha": "ef3b3363550053d1775e4ed3e0f83b6dd36ec741",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultInstructionFactory.java",
                "status": "modified",
                "additions": 15,
                "deletions": 8,
                "changes": 23,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultInstructionFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultInstructionFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultInstructionFactory.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -40,12 +40,13 @@\n import org.xml.sax.SAXParseException;\n \n /**\n- * @version SVN $Id: DefaultInstructionFactory.java 169615 2005-05-11 09:57:41Z\n- *          lgawron $\n+ * @version $Id$\n  */\n-public class DefaultInstructionFactory extends AbstractLogEnabled implements ThreadSafe, Serviceable, Configurable,\n-        InstructionFactory {\n-    private Map instructions = new HashMap();\n+public class DefaultInstructionFactory\n+    extends AbstractLogEnabled\n+    implements ThreadSafe, Serviceable, Configurable, InstructionFactory {\n+\n+    private final Map instructions = new HashMap();\n     private ServiceManager manager;\n     private final static Class[] INSTRUCTION_CONSTRUCTOR_PARAMS = new Class[] { ParsingContext.class,\n             StartElement.class, Attributes.class, Stack.class };\n@@ -119,10 +120,16 @@ public void setupInstructions(Configuration conf) throws ConfigurationException\n         }\n     }\n \n+    /**\n+     * @see org.apache.avalon.framework.service.Serviceable#service(org.apache.avalon.framework.service.ServiceManager)\n+     */\n     public void service(ServiceManager manager) throws ServiceException {\n         this.manager = manager;\n     }\n \n+    /**\n+     * @see org.apache.avalon.framework.configuration.Configurable#configure(org.apache.avalon.framework.configuration.Configuration)\n+     */\n     public void configure(Configuration omitted) throws ConfigurationException {\n         SourceResolver resolver = null;\n         Source source = null;"
            },
            {
                "sha": "eda8aae025ebd670c443d7ec1195d5aec3d4a15a",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultScriptManager.java",
                "status": "modified",
                "additions": 28,
                "deletions": 10,
                "changes": 38,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultScriptManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultScriptManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/DefaultScriptManager.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,6 +21,7 @@\n import org.apache.avalon.framework.service.ServiceManager;\n import org.apache.avalon.framework.service.ServiceSelector;\n import org.apache.avalon.framework.service.Serviceable;\n+import org.apache.avalon.framework.thread.ThreadSafe;\n import org.apache.cocoon.ProcessingException;\n import org.apache.cocoon.components.source.SourceUtil;\n import org.apache.cocoon.template.environment.ParsingContext;\n@@ -35,10 +36,12 @@\n import org.xml.sax.SAXParseException;\n \n /**\n- * @version SVN $Id: DefaultScriptManager.java 169632 2005-05-11 12:08:34Z\n- *          lgawron $\n+ * @version $Id$\n  */\n-public class DefaultScriptManager extends AbstractLogEnabled implements Serviceable, Disposable, ScriptManager {\n+public class DefaultScriptManager\n+  extends AbstractLogEnabled\n+  implements Serviceable, Disposable, ScriptManager, ThreadSafe {\n+\n     private ServiceManager manager;\n     private final static String JX_STORE_PREFIX = \"jxtg:\";\n     private Store store;\n@@ -50,6 +53,9 @@\n     public DefaultScriptManager() {\n     }\n \n+    /**\n+     * @see org.apache.avalon.framework.service.Serviceable#service(org.apache.avalon.framework.service.ServiceManager)\n+     */\n     public void service(ServiceManager manager) throws ServiceException {\n         this.manager = manager;\n         this.store = (Store) this.manager.lookup(Store.TRANSIENT_STORE);\n@@ -60,11 +66,23 @@ public void service(ServiceManager manager) throws ServiceException {\n                 .select(this.stringTemplateParserName);\n     }\n \n+    /**\n+     * @see org.apache.avalon.framework.activity.Disposable#dispose()\n+     */\n     public void dispose() {\n-        this.manager.release(this.store);\n-        this.manager.release(this.instructionFactory);\n-        this.stringTemplateParserSelector.release(this.stringTemplateParser);\n-        this.manager.release(this.stringTemplateParserSelector);\n+        if ( this.manager != null ) {\n+            this.manager.release(this.store);\n+            this.manager.release(this.instructionFactory);\n+            if ( this.stringTemplateParserSelector != null ) {\n+                this.stringTemplateParserSelector.release(this.stringTemplateParser);\n+                this.manager.release(this.stringTemplateParserSelector);\n+                this.stringTemplateParserSelector = null;\n+                this.stringTemplateParser = null;\n+            }\n+            this.store = null;\n+            this.instructionFactory = null;\n+            this.manager = null;\n+        }\n     }\n \n     private Store getStore() {"
            },
            {
                "sha": "2a15dac232210c9021b4d52fceeb863e5f6980ec",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/InstructionFactory.java",
                "status": "modified",
                "additions": 8,
                "deletions": 7,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/InstructionFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/InstructionFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/InstructionFactory.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -24,13 +24,14 @@\n import org.xml.sax.SAXException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public interface InstructionFactory {\n-    public final static String ROLE = InstructionFactory.class.getName();\n \n-    public abstract boolean isInstruction(StartElement element);\n+    String ROLE = InstructionFactory.class.getName();\n \n-    public abstract Instruction createInstruction(ParsingContext parsingContext, StartElement startElement,\n+    boolean isInstruction(StartElement element);\n+\n+    Instruction createInstruction(ParsingContext parsingContext, StartElement startElement,\n             Attributes attrs, Stack stack) throws SAXException;\n }\n\\ No newline at end of file"
            },
            {
                "sha": "ab50ef2a07e28dd019bd1d66f24255125c8e4325",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Invoker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Invoker.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Invoker.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Invoker.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -38,7 +38,7 @@\n import org.xml.sax.helpers.AttributesImpl;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Invoker {\n     private static final Attributes EMPTY_ATTRS = new AttributesImpl();"
            },
            {
                "sha": "bee5282f508988e7968297b841154b2b87bb0918",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Parser.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Parser.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Parser.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/Parser.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -31,7 +31,7 @@\n import org.xml.sax.helpers.LocatorImpl;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Parser implements ContentHandler, LexicalHandler {\n     StartDocument startEvent;"
            },
            {
                "sha": "49748602727436f4ad27ae8c3c5be8df2cbf0bf2",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/ScriptManager.java",
                "status": "modified",
                "additions": 10,
                "deletions": 9,
                "changes": 19,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/ScriptManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/ScriptManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/ScriptManager.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,14 +21,15 @@\n import org.xml.sax.SAXParseException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public interface ScriptManager {\n-    public final static String ROLE = ScriptManager.class.getName();\n \n-    public abstract StartDocument resolveTemplate(String uri)\n-            throws SAXParseException, ProcessingException;\n+    String ROLE = ScriptManager.class.getName();\n \n-    public abstract StartDocument resolveTemplate(String uri, Locator location)\n-            throws SAXParseException, ProcessingException;\n+    StartDocument resolveTemplate(String uri)\n+    throws SAXParseException, ProcessingException;\n+\n+    StartDocument resolveTemplate(String uri, Locator location)\n+    throws SAXParseException, ProcessingException;\n }\n\\ No newline at end of file"
            },
            {
                "sha": "c4bbfd5c5a16b42190fa8bc452e5d3de1ea146cd",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/event/Event.java",
                "status": "modified",
                "additions": 5,
                "deletions": 4,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/event/Event.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/event/Event.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/script/event/Event.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2005 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -24,9 +24,10 @@\n import org.xml.sax.helpers.LocatorImpl;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class Event {\n+\n     protected final Locator location;\n     protected Event next; // in document order\n "
            },
            {
                "sha": "4c6609dfcc3ff9683b509642aceaafce71ca5316",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumer.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumer.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -19,9 +19,10 @@\n import org.xml.sax.SAXException;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public interface AttributeAwareXMLConsumer extends XMLConsumer {\n-    public void attribute(String uri, String localName, String qName,\n+    \n+    void attribute(String uri, String localName, String qName,\n             String type, String value) throws SAXException;\n }"
            },
            {
                "sha": "36cc2ea548e37b7ca5aa5e47af4667e64b32cbf8",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumerImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumerImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/125e477b1b76befd8653513e8bd4251c8bcbcf03/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/main/java/org/apache/cocoon/template/xml/AttributeAwareXMLConsumerImpl.java?ref=125e477b1b76befd8653513e8bd4251c8bcbcf03",
                "patch": "@@ -28,9 +28,10 @@\n import org.xml.sax.helpers.AttributesImpl;\n \n /**\n- * @version SVN $Id$\n+ * @version $Id$\n  */\n public class AttributeAwareXMLConsumerImpl implements AttributeAwareXMLConsumer {\n+\n     private StartElement currentElement;\n     private List saxbits;\n     private Locator locator;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/49d210695bcea439f4c2f3cd567b4dea609ef960",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/3c0b1c8f7a69ef1e5806b03171d0db3575fb546e",
        "message": "Avoid NPE when in an environment without web.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@394742 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_50",
        "file": [
            {
                "sha": "671633dec89b31a4d5b0050edb8b92dbbd2104af",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/environment/http/HttpContext.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/49d210695bcea439f4c2f3cd567b4dea609ef960/core/cocoon-core/src/main/java/org/apache/cocoon/environment/http/HttpContext.java",
                "raw_url": "https://github.com/apache/cocoon/raw/49d210695bcea439f4c2f3cd567b4dea609ef960/core/cocoon-core/src/main/java/org/apache/cocoon/environment/http/HttpContext.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/environment/http/HttpContext.java?ref=49d210695bcea439f4c2f3cd567b4dea609ef960",
                "patch": "@@ -73,7 +73,12 @@ public String getRealPath(String path) {\n             if (value == null) {\n                 // Try to figure out the path of the root from that of WEB-INF\n                 try {\n-                value = this.servletContext.getResource(\"/WEB-INF/web.xml\").toString();\n+                    URL webXml = this.servletContext.getResource(\"/WEB-INF/web.xml\");\n+                    // In some contexts there might not be any web.xml, then we stop\n+                    // guessing an just return null, which follows the servlet specification\n+                    if (webXml == null)\n+                        return null;\n+                    value = webXml.toString();\n                 } catch (MalformedURLException mue) {\n                     throw new ContextURLException(\"Cannot determine the base URL for \" + path, mue);\n                 }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e2c957e21506ac8767d25c0ca37938b4c351bdd0",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/1eea07b221643e180bf2e58c9c0084983f27a701",
        "message": "Fix COCOON-1651: Null locator in EffectPipe triggers NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@371545 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_51",
        "file": [
            {
                "sha": "79e64238a65844344ed7d965a4afd636456af15a",
                "filename": "cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectPipe.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/e2c957e21506ac8767d25c0ca37938b4c351bdd0/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectPipe.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e2c957e21506ac8767d25c0ca37938b4c351bdd0/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectPipe.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectPipe.java?ref=e2c957e21506ac8767d25c0ca37938b4c351bdd0",
                "patch": "@@ -484,8 +484,10 @@ protected void beginBuffer() {\n             }\n             this.buffers.addFirst(this.buffer);\n         }\n-        locators.addFirst(locator);\n-        locator = new LocatorImpl(locator);\n+        if (locator != null) {\n+            locators.addFirst(locator);\n+            locator = new LocatorImpl(locator);\n+        }\n         this.buffer = new SaxBuffer();\n     }\n \n@@ -496,7 +498,9 @@ protected SaxBuffer endBuffer() {\n         } else {\n             this.buffer = null;\n         }\n-        locator = (Locator)locators.removeFirst();\n+        if (locator != null) {\n+            locator = (Locator)locators.removeFirst();\n+        }\n         return buffer;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e8746c49d9de53f6b52c3561f091f36cb6df5e26",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/3ef566f6fa0b2d438cc6071c9f8f65d749d8b451",
        "message": "Fix NPE when an error occurs\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@219699 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_52",
        "file": [
            {
                "sha": "bc4950287364a651a65173f5c8ea8d9208bd8a1c",
                "filename": "src/java/org/apache/cocoon/core/CoreUtil.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/e8746c49d9de53f6b52c3561f091f36cb6df5e26/src/java/org/apache/cocoon/core/CoreUtil.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e8746c49d9de53f6b52c3561f091f36cb6df5e26/src/java/org/apache/cocoon/core/CoreUtil.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/CoreUtil.java?ref=e8746c49d9de53f6b52c3561f091f36cb6df5e26",
                "patch": "@@ -287,6 +287,13 @@ protected Core createCore() {\n         return c;\n     }\n \n+    /**\n+     * Return the settings object.\n+     */\n+    public Settings getSettings() {\n+        return this.settings;\n+    }\n+\n     /**\n      * Instatiates the parent service manager, as specified in the\n      * parent-service-manager init parameter."
            },
            {
                "sha": "374b549fe01c6f350270221980007c9f886cdce5",
                "filename": "src/java/org/apache/cocoon/servlet/CocoonServlet.java",
                "status": "modified",
                "additions": 11,
                "deletions": 11,
                "changes": 22,
                "blob_url": "https://github.com/apache/cocoon/blob/e8746c49d9de53f6b52c3561f091f36cb6df5e26/src/java/org/apache/cocoon/servlet/CocoonServlet.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e8746c49d9de53f6b52c3561f091f36cb6df5e26/src/java/org/apache/cocoon/servlet/CocoonServlet.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/servlet/CocoonServlet.java?ref=e8746c49d9de53f6b52c3561f091f36cb6df5e26",
                "patch": "@@ -217,7 +217,7 @@ public void init(ServletConfig conf)\n         }\n \n         if (getLogger().isDebugEnabled()) {\n-            getLogger().debug(this.coreUtil.getCore().getSettings().toString());\n+            getLogger().debug(this.coreUtil.getSettings().toString());\n             getLogger().debug(\"getRealPath for /: \" + this.servletContextPath);\n             if (this.servletContextPath == null) {\n                 getLogger().debug(\"getResource for /WEB-INF: \" + debugPathOne);\n@@ -226,11 +226,11 @@ public void init(ServletConfig conf)\n         }\n \n         this.containerEncoding = this.getInitParameter(\"container-encoding\", \"ISO-8859-1\");\n-        this.requestFactory = new RequestFactory(coreUtil.getCore().getSettings().isAutosaveUploads(),\n+        this.requestFactory = new RequestFactory(coreUtil.getSettings().isAutosaveUploads(),\n                                                  new File(coreUtil.getCore().getSettings().getUploadDirectory()),\n-                                                 coreUtil.getCore().getSettings().isAllowOverwrite(),\n-                                                 coreUtil.getCore().getSettings().isSilentlyRename(),\n-                                                 coreUtil.getCore().getSettings().getMaxUploadSize(),\n+                                                 coreUtil.getSettings().isAllowOverwrite(),\n+                                                 coreUtil.getSettings().isSilentlyRename(),\n+                                                 coreUtil.getSettings().getMaxUploadSize(),\n                                                  this.containerEncoding);\n \n         try {\n@@ -267,7 +267,7 @@ public void service(HttpServletRequest req, HttpServletResponse res)\n \n         /* HACK for reducing class loader problems.                                     */\n         /* example: xalan extensions fail if someone adds xalan jars in tomcat3.2.1/lib */\n-        if (this.coreUtil.getCore().getSettings().isInitClassloader()) {\n+        if (this.coreUtil.getSettings().isInitClassloader()) {\n             try {\n                 Thread.currentThread().setContextClassLoader(this.classLoader);\n             } catch (Exception e) {\n@@ -285,7 +285,7 @@ public void service(HttpServletRequest req, HttpServletResponse res)\n         // get the request (wrapped if contains multipart-form data)\n         HttpServletRequest request;\n         try{\n-            if (this.coreUtil.getCore().getSettings().isEnableUploads()) {\n+            if (this.coreUtil.getSettings().isEnableUploads()) {\n                 request = requestFactory.getServletRequest(req);\n             } else {\n                 request = req;\n@@ -440,15 +440,15 @@ public void service(HttpServletRequest req, HttpServletResponse res)\n \n             if (contentType != null && contentType.equals(\"text/html\")) {\n                 String showTime = request.getParameter(Constants.SHOWTIME_PARAM);\n-                boolean show = this.coreUtil.getCore().getSettings().isShowTime();\n+                boolean show = this.coreUtil.getSettings().isShowTime();\n                 if (showTime != null) {\n                     show = !showTime.equalsIgnoreCase(\"no\");\n                 }\n                 if (show) {\n                     if ( timeString == null ) {\n                         timeString = processTime(stopWatch.getTime());\n                     }\n-                    boolean hide = this.coreUtil.getCore().getSettings().isHideShowTime();\n+                    boolean hide = this.coreUtil.getSettings().isHideShowTime();\n                     if (showTime != null) {\n                         hide = showTime.equalsIgnoreCase(\"hide\");\n                     }\n@@ -498,7 +498,7 @@ protected void manageException(HttpServletRequest req, HttpServletResponse res,\n                                    String title, String message, String description,\n                                    Exception e)\n     throws IOException {\n-        if (this.coreUtil.getCore().getSettings().isManageExceptions()) {\n+        if (this.coreUtil.getSettings().isManageExceptions()) {\n             if (env != null) {\n                 env.tryResetResponse();\n             } else {\n@@ -556,7 +556,7 @@ protected Environment getEnvironment(String uri,\n \n         String formEncoding = req.getParameter(\"cocoon-form-encoding\");\n         if (formEncoding == null) {\n-            formEncoding = this.coreUtil.getCore().getSettings().getFormEncoding();\n+            formEncoding = this.coreUtil.getSettings().getFormEncoding();\n         }\n         env = new HttpEnvironment(uri,\n                                   this.servletContextURL,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/48b5f5759757c89a683183664ef4c3f25bd9de79",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/24368059627ad0f52793d1d55d1020c400a2c2bf",
        "message": "Fix NPE in DOMStreamer.stream().\r\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@158913 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_53",
        "file": [
            {
                "sha": "3944dc828fd99ecde14ffd175770f7142820932b",
                "filename": "src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "status": "modified",
                "additions": 18,
                "deletions": 15,
                "changes": 33,
                "blob_url": "https://github.com/apache/cocoon/blob/48b5f5759757c89a683183664ef4c3f25bd9de79/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/48b5f5759757c89a683183664ef4c3f25bd9de79/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java?ref=48b5f5759757c89a683183664ef4c3f25bd9de79",
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 1999-2004 The Apache Software Foundation.\n+ * Copyright 1999-2005 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -66,7 +66,7 @@\n public class DOMStreamer implements XMLProducer {\n \n     /** Default value for normalizeNamespaces. */\n-    private final boolean DEFAULT_NORMALIZE_NAMESPACES = true;\n+    private final static boolean DEFAULT_NORMALIZE_NAMESPACES = true;\n \n     /** Indicates whether namespace normalization should happen. */\n     protected boolean normalizeNamespaces = DEFAULT_NORMALIZE_NAMESPACES;\n@@ -78,7 +78,7 @@\n     protected DefaultDOMStreamer defaultDOMStreamer = new DefaultDOMStreamer();\n \n     /** The transformer factory shared by all instances (only used by DefaultDOMStreamer) */\n-    protected static TransformerFactory factory = TransformerFactory.newInstance();\n+    protected final static TransformerFactory factory = TransformerFactory.newInstance();\n \n     /**\n      * Create a new <code>DOMStreamer</code> instance.\n@@ -184,7 +184,7 @@ public void recycle() {\n      * @author Bruno Dumon (bruno at outerthought dot org)\n      * @author Xalan team\n      */\n-    public class NamespaceNormalizingDOMStreamer extends AbstractXMLProducer {\n+    public static class NamespaceNormalizingDOMStreamer extends AbstractXMLProducer {\n         /**\n          * Information about the current element. Used to remember the localName, qName\n          * and namespaceURI for generating the endElement event, and holds the namespaces\n@@ -260,8 +260,10 @@ protected void stream(Node pos) throws SAXException {\n         }\n \n         private final void dispatchChars(Node node) throws SAXException {\n-            String data = ((Text) node).getData();\n-            contentHandler.characters(data.toCharArray(), 0, data.length());\n+            final String data = ((Text) node).getData();\n+            if ( data != null ) {\n+                contentHandler.characters(data.toCharArray(), 0, data.length());\n+            }\n         }\n \n         /**\n@@ -275,8 +277,10 @@ protected void startNode(Node node) throws SAXException {\n                 case Node.COMMENT_NODE:\n                     {\n                         if (lexicalHandler != null) {\n-                            String data = ((Comment) node).getData();\n-                            lexicalHandler.comment(data.toCharArray(), 0, data.length());\n+                            final String data = ((Comment) node).getData();\n+                            if ( data != null ) {\n+                                lexicalHandler.comment(data.toCharArray(), 0, data.length());\n+                            }\n                         }\n                     }\n                     break;\n@@ -598,7 +602,7 @@ protected void endNode(Node node) throws org.xml.sax.SAXException {\n             }\n         }\n \n-        public class ElementInfo {\n+        public static class ElementInfo {\n             public String localName;\n             public String namespaceURI;\n             public String qName;\n@@ -658,9 +662,8 @@ public String findPrefix(String namespaceURI) {\n                 }\n                 if (parent != null) {\n                     return parent.findPrefix(namespaceURI);\n-                } else {\n-                    return null;\n                 }\n+                return null;\n             }\n \n             /**\n@@ -673,10 +676,10 @@ public String findNamespaceURI(String prefix) {\n                         return uri;\n                     }\n                 }\n-                if (parent != null)\n+                if (parent != null) {\n                     return parent.findNamespaceURI(prefix);\n-                else\n-                    return null;\n+                }\n+                return null;\n             }\n         }\n     }\n@@ -689,7 +692,7 @@ public String findNamespaceURI(String prefix) {\n      * @author <a href=\"mailto:pier@apache.org\">Pierpaolo Fumagalli</a>\n      *         (Apache Software Foundation)\n      */\n-    public class DefaultDOMStreamer extends AbstractXMLProducer {\n+    public static class DefaultDOMStreamer extends AbstractXMLProducer {\n \n         /** The private transformer for this instance */\n         protected Transformer transformer;"
            },
            {
                "sha": "7a10e87f0e381e0f1509597956eebd7da1a3085c",
                "filename": "status.xml",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/48b5f5759757c89a683183664ef4c3f25bd9de79/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/48b5f5759757c89a683183664ef4c3f25bd9de79/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=48b5f5759757c89a683183664ef4c3f25bd9de79",
                "patch": "@@ -428,6 +428,14 @@\n      Remove deprecated methods from XMLUtils, DOMUtil, DOMBuilder and SourceUtil.\n    </action>\n  </release>\n+ <release version=\"2.1.8\" date=\"TBD\">\n+   <action dev=\"CZ\" type=\"fix\" fixes-bug=\"33963\" due-to=\"John Yonosh\" due-to-email=\"jyonosh@fcg.com\">\n+     Fix NPE in DOMStreamer.stream().\n+   </action>\n+   <action dev=\"CZ\" type=\"fix\">\n+     Portal block: Make portal manager available through portal component manager.\n+   </action>\n+ </release>\n  <release version=\"2.1.7\" date=\"March 23 2005\">\n    <action dev=\"AG\" type=\"update\">\n      Updated hsqldb to 1.7.3.3."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e52657496a0b13b7aa409ba99061a3d6d69ee03e",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/510d1e7e3ac854aa5a3400a1b40413ad50e520e3",
        "message": "Fix NPE with sitemap component configurations\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@149279 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_54",
        "file": [
            {
                "sha": "ceaaec68b16e40ad5073e8c158d9e14625a33f35",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/e52657496a0b13b7aa409ba99061a3d6d69ee03e/src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e52657496a0b13b7aa409ba99061a3d6d69ee03e/src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java?ref=e52657496a0b13b7aa409ba99061a3d6d69ee03e",
                "patch": "@@ -96,16 +96,18 @@ public void setComponentConfigurations(Configuration componentConfigurations) {\n                 return this.wrappingProcessor.parent.getComponentConfigurations();\n             }\n             return null;\n-        } else {\n-            if (this.wrappingProcessor.parent == null) {\n-                return new Configuration[]{this.componentConfigurations};\n-            }\n-            final Configuration[] parentArray = this.wrappingProcessor.parent.getComponentConfigurations();\n+        }\n+        if (this.wrappingProcessor.parent == null) {\n+            return new Configuration[]{this.componentConfigurations};\n+        }\n+        final Configuration[] parentArray = this.wrappingProcessor.parent.getComponentConfigurations();\n+        if ( parentArray != null ) {\n             final Configuration[] newArray = new Configuration[parentArray.length + 1];\n             System.arraycopy(parentArray, 0, newArray, 1, parentArray.length);\n             newArray[0] = this.componentConfigurations;\n             return newArray;\n-        }\n+        } \n+        return new Configuration[] {this.componentConfigurations};\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/c0ad28337cbd1608d03a3934f696585457975a8b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/d978c07923e5d962e1b03d24ecce9a86dc931078",
        "message": "executor attribute was never being set. Fix NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@125646 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_55",
        "file": [
            {
                "sha": "020572e7e7037cb0a4395695b6cbdbc6ab62f4cd",
                "filename": "src/blocks/cron/java/org/apache/cocoon/components/cron/QuartzJobScheduler.java",
                "status": "modified",
                "additions": 12,
                "deletions": 10,
                "changes": 22,
                "blob_url": "https://github.com/apache/cocoon/blob/c0ad28337cbd1608d03a3934f696585457975a8b/src/blocks/cron/java/org/apache/cocoon/components/cron/QuartzJobScheduler.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c0ad28337cbd1608d03a3934f696585457975a8b/src/blocks/cron/java/org/apache/cocoon/components/cron/QuartzJobScheduler.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/cron/java/org/apache/cocoon/components/cron/QuartzJobScheduler.java?ref=c0ad28337cbd1608d03a3934f696585457975a8b",
                "patch": "@@ -572,7 +572,8 @@ protected JobDataMap initDataMap(JobDataMap jobDataMap, String jobName, boolean\n         jobDataMap.put(DATA_MAP_LOGGER, getLogger());\n         jobDataMap.put(DATA_MAP_CONTEXT, this.context);\n         jobDataMap.put(DATA_MAP_MANAGER, this.manager);\n-        jobDataMap.put(DATA_MAP_RUN_CONCURRENT, concurent? Boolean.TRUE: Boolean.FALSE);\n+        jobDataMap.put(DATA_MAP_RUN_CONCURRENT,\n+            concurent? Boolean.TRUE.booleanValue(): Boolean.FALSE.booleanValue());\n         if (null != params) {\n             jobDataMap.put(DATA_MAP_PARAMETERS, params);\n         }\n@@ -606,15 +607,16 @@ private QuartzThreadPool createThreadPool(final Configuration poolConfig)\n         m_shutdownGraceful = poolConfig.getChild(\"shutdown-graceful\").getValueAsBoolean(true);\n         final int shutdownWaitTimeMs = poolConfig.getChild(\"shutdown-wait-time-ms\").getValueAsInteger(-1);\n         final RunnableManager runnableManager = (RunnableManager)this.manager.lookup(RunnableManager.ROLE);\n-        final QuartzThreadPool pool = new QuartzThreadPool(runnableManager.createPool(queueSize, \n-                                                                                      maxPoolSize, \n-                                                                                      minPoolSize,\n-                                                                                      Thread.NORM_PRIORITY,\n-                                                                                      false, // no daemon\n-                                                                                      keepAliveTimeMs, \n-                                                                                      blockPolicy, \n-                                                                                      m_shutdownGraceful, \n-                                                                                      shutdownWaitTimeMs));\n+        this.executor = runnableManager.createPool(queueSize,\n+                                                   maxPoolSize,\n+                                                   minPoolSize,\n+                                                   Thread.NORM_PRIORITY,\n+                                                   false, // no daemon\n+                                                   keepAliveTimeMs,\n+                                                   blockPolicy,\n+                                                   m_shutdownGraceful,\n+                                                   shutdownWaitTimeMs);\n+        final QuartzThreadPool pool = new QuartzThreadPool(this.executor);\n         return pool;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/082a73a4b3ecbd4526b6efe66023ebb022d92a22",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/39438810cb2a262f16198bcc72c1f6335ec7450d",
        "message": "Avoid a posible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@124965 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_56",
        "file": [
            {
                "sha": "87b90320750949cc09e1310bfa7442df6045f675",
                "filename": "tools/src/anttasks/ManifestToolTask.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/082a73a4b3ecbd4526b6efe66023ebb022d92a22/tools/src/anttasks/ManifestToolTask.java",
                "raw_url": "https://github.com/apache/cocoon/raw/082a73a4b3ecbd4526b6efe66023ebb022d92a22/tools/src/anttasks/ManifestToolTask.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/tools/src/anttasks/ManifestToolTask.java?ref=082a73a4b3ecbd4526b6efe66023ebb022d92a22",
                "patch": "@@ -92,8 +92,10 @@ private void process(final File directoryFile)\n                     }\n                 }\n             }\n-        }finally {\n-            w.close();\n+        } finally {\n+            if (w != null) {\n+                w.close();\n+            }\n         }\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/ac9c2f84ad9e9e434f1029c0cd062a17ef743df7",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/14c64a59cece124c6c18f7d6bd6fad4b59e21935",
        "message": "Fix bug #32425 (NPE when Locale is null)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@109492 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_57",
        "file": [
            {
                "sha": "4d3cea2c2ece9c234e5f554b9d593f0cf7b61b66",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/formmodel/Field.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/ac9c2f84ad9e9e434f1029c0cd062a17ef743df7/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/Field.java",
                "raw_url": "https://github.com/apache/cocoon/raw/ac9c2f84ad9e9e434f1029c0cd062a17ef743df7/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/Field.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/Field.java?ref=ac9c2f84ad9e9e434f1029c0cd062a17ef743df7",
                "patch": "@@ -372,6 +372,10 @@ public AttributesImpl getXMLElementAttributes() {\n     }\n \n     public void generateItemSaxFragment(ContentHandler contentHandler, Locale locale) throws SAXException {\n+        if (locale == null) {\n+            locale = getForm().getLocale();\n+        }\n+        \n         if (enteredValue != null || value != null) {\n             contentHandler.startElement(Constants.INSTANCE_NS, VALUE_EL, Constants.INSTANCE_PREFIX_COLON + VALUE_EL, XMLUtils.EMPTY_ATTRIBUTES);\n             String stringValue;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/a03e194b24b4cc7944cb969ce1074dcf5967f4b5",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/4ae9d8aee3aa1fe0415feff237b911777e24bf1f",
        "message": "Bug 30849: NPE in XMLDBTransformer\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@55760 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_58",
        "file": [
            {
                "sha": "b7b711fab29720a663fcd7c2b0309ae6a28e4bd9",
                "filename": "src/blocks/xmldb/java/org/apache/cocoon/transformation/XMLDBTransformer.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/a03e194b24b4cc7944cb969ce1074dcf5967f4b5/src/blocks/xmldb/java/org/apache/cocoon/transformation/XMLDBTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/a03e194b24b4cc7944cb969ce1074dcf5967f4b5/src/blocks/xmldb/java/org/apache/cocoon/transformation/XMLDBTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/xmldb/java/org/apache/cocoon/transformation/XMLDBTransformer.java?ref=a03e194b24b4cc7944cb969ce1074dcf5967f4b5",
                "patch": "@@ -416,7 +416,10 @@ public void endElement(String uri, String loc, String raw)\n                     // Obtain collection for the current operation\n                     collection = (xbase != null)? DatabaseManager.getCollection(local_base + \"/\" + xbase) : this.collection;\n \n-                    if (\"create\".equals(operation)) {\n+                    if (collection == null) {\n+                        message = \"Failed to \" + operation + \" resource \" + this.key + \": Collection \" + local_base + \"/\" + xbase + \" not found.\";\n+                        getLogger().debug(message);\n+                    } else if (\"create\".equals(operation)) {\n                         if (key != null && key.endsWith(\"/\")) {\n                             try {\n                                 // Cut trailing '/'\n@@ -490,7 +493,7 @@ public void endElement(String uri, String loc, String raw)\n                     message = \"Failed to get context collection for the query (base: \" + local_base + \", context: \" + xbase + \"): \" + e.errorCode;\n                     getLogger().debug(message, e);\n                 } finally {\n-                    if (xbase != null) {\n+                    if (xbase != null && collection != null) {\n                         try {\n                             collection.close();\n                         } catch (XMLDBException ignored) {"
            },
            {
                "sha": "2f8d7a1bfcecf3a2121a9c1b55542931902d4bd9",
                "filename": "status.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/a03e194b24b4cc7944cb969ce1074dcf5967f4b5/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/a03e194b24b4cc7944cb969ce1074dcf5967f4b5/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=a03e194b24b4cc7944cb969ce1074dcf5967f4b5",
                "patch": "@@ -322,6 +322,10 @@\n    </action>\n  </release>\n  <release version=\"2.1.6\" date=\"TBD\">\n+   <action dev=\"VG\" type=\"fix\" fixes-bug=\"30849\">\n+     XMLDB Block: Fix NullPointerException in XMLDBTransformer if specified\n+     collection does not exist.\n+   </action>\n    <action dev=\"AG\" type=\"fix\" fixes-bug=\"31564\" due-to=\"Gunnar Brand\" due-to-email=\"g.brand@interface-business.de\">\n      XSP - JXPath logicsheet: Allow use relative contexts in &lt;jxpath:for-each&gt;.\n            Add a new tag &lt;jpath:set-lenient lenient=\"true|false\"&gt;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/3bfad7229906ad41cbc19ca4d6e4923c9e7b8cf1",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/86ba1d36a8227998ad50b347b2b6efffa6d5f3f7",
        "message": "Fix bug #31637 : NPE when mounttable source has no validity\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@54558 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_59",
        "file": [
            {
                "sha": "076f34c069d092b5d9771960576d97236963f19d",
                "filename": "src/java/org/apache/cocoon/matching/MountTableMatcher.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/3bfad7229906ad41cbc19ca4d6e4923c9e7b8cf1/src/java/org/apache/cocoon/matching/MountTableMatcher.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3bfad7229906ad41cbc19ca4d6e4923c9e7b8cf1/src/java/org/apache/cocoon/matching/MountTableMatcher.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/matching/MountTableMatcher.java?ref=3bfad7229906ad41cbc19ca4d6e4923c9e7b8cf1",
                "patch": "@@ -72,7 +72,7 @@\n  * table, but not fail if it does not exist.\n  * \n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: MountTableMatcher.java,v 1.7 2004/03/05 13:02:56 bdelacretaz Exp $\n+ * @version CVS $Id$\n  */\n public class MountTableMatcher extends AbstractLogEnabled implements Matcher, ThreadSafe, Serviceable, Parameterizable {\n \n@@ -110,13 +110,16 @@ private Map getMountTable(String src) throws Exception {\n         if (values != null) {\n             // Check validity\n             SourceValidity oldValidity = (SourceValidity)values[1];\n-            int valid = oldValidity.isValid();\n-            if (valid == 1) {\n+            \n+            int valid = oldValidity != null ? oldValidity.isValid() : SourceValidity.INVALID;\n+            \n+            if (valid == SourceValidity.VALID) {\n                 // Valid without needing the new validity\n                 return (Map)values[0];\n             }\n             \n-            if (valid == 0 && oldValidity.isValid(source.getValidity()) == 1) {\n+            if (valid == SourceValidity.UNKNOWN &&\n+                oldValidity.isValid(source.getValidity()) == SourceValidity.VALID) {\n                 // Valid after comparing with the new validity\n                 return (Map)values[0];\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d3e7ef754142768608011c6add8cb4a047e3817d",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/20466b12fb72953d4b02dc889b63fa66911b3cf2",
        "message": "fix potential NPE (as reported on mail list)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@37372 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_60",
        "file": [
            {
                "sha": "c539a04e29407186ecf09276263c26651b7d08cf",
                "filename": "src/blocks/poi/java/org/apache/cocoon/components/elementprocessor/impl/poi/hssf/elements/EPStyle.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/d3e7ef754142768608011c6add8cb4a047e3817d/src/blocks/poi/java/org/apache/cocoon/components/elementprocessor/impl/poi/hssf/elements/EPStyle.java",
                "raw_url": "https://github.com/apache/cocoon/raw/d3e7ef754142768608011c6add8cb4a047e3817d/src/blocks/poi/java/org/apache/cocoon/components/elementprocessor/impl/poi/hssf/elements/EPStyle.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/poi/java/org/apache/cocoon/components/elementprocessor/impl/poi/hssf/elements/EPStyle.java?ref=d3e7ef754142768608011c6add8cb4a047e3817d",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -41,7 +41,7 @@\n  *\n  * @author Marc Johnson (marc_johnson27591@hotmail.com)\n  * @author Andrew C. Oliver (acoliver2@users.sourceforge.net)\n- * @version CVS $Id: EPStyle.java,v 1.7 2004/03/05 13:02:04 bdelacretaz Exp $\n+ * @version CVS $Id$\n  */\n public class EPStyle extends BaseElementProcessor {\n     private static final String _general_format = \"General\";\n@@ -176,7 +176,7 @@ public void initialize(final Attribute[] attributes,\n                 format = _general_format;\n             }\n \n-            if (!format.equals(_general_format)) {\n+            if (!_general_format.equals(format)) {\n                 short valuenumber;\n                 format = kludgeForGnumericMisformats(format);\n                 format = kludgeForGnumericDateDivergence(format);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/9bfe4686bfda3e23a1f579157d9554c0605c3f8f",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/67b89834788a34a47788394505478e1b0e549e8d",
        "message": "fix NPE on shutdown\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28311 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_61",
        "file": [
            {
                "sha": "f01ed63857450de1575a2aeef9050def0433563f",
                "filename": "src/blocks/slide/java/org/apache/cocoon/components/slide/impl/SlideRepositoryImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/9bfe4686bfda3e23a1f579157d9554c0605c3f8f/src/blocks/slide/java/org/apache/cocoon/components/slide/impl/SlideRepositoryImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/9bfe4686bfda3e23a1f579157d9554c0605c3f8f/src/blocks/slide/java/org/apache/cocoon/components/slide/impl/SlideRepositoryImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/slide/java/org/apache/cocoon/components/slide/impl/SlideRepositoryImpl.java?ref=9bfe4686bfda3e23a1f579157d9554c0605c3f8f",
                "patch": "@@ -45,7 +45,7 @@\n /**\n  * The class represent a manger for slide repositories\n  * \n- * @version CVS $Id: SlideRepositoryImpl.java,v 1.7 2004/04/13 15:16:37 unico Exp $\n+ * @version CVS $Id: SlideRepositoryImpl.java,v 1.8 2004/05/03 16:08:35 unico Exp $\n  */\n public class SlideRepositoryImpl extends AbstractLogEnabled\n implements SlideRepository, Contextualizable, Serviceable, Configurable, \n@@ -153,6 +153,7 @@ public void initialize() throws Exception {\n         }\n         \n         domain.start();\n+        Domain.setInitialized(true);\n     }\n \n     public void dispose() {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2fcc7d04e93128410919bb27a1468cf55627f516",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/1b7698030a1a8c2a68aef015c79ad7fcc8e6e7f6",
        "message": "Prevent NPE (on shutdown)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28279 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_62",
        "file": [
            {
                "sha": "384989246252d3becdb5be3c28ef73f888ba9d8b",
                "filename": "src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/2fcc7d04e93128410919bb27a1468cf55627f516/src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/2fcc7d04e93128410919bb27a1468cf55627f516/src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java?ref=2fcc7d04e93128410919bb27a1468cf55627f516",
                "patch": "@@ -61,7 +61,7 @@\n  *  </tbody>\n  * </table>\n  * \n- * @version CVS $Id: JMSConnectionImpl.java,v 1.11 2004/03/05 13:01:57 bdelacretaz Exp $\n+ * @version CVS $Id: JMSConnectionImpl.java,v 1.12 2004/04/30 11:36:26 cziegeler Exp $\n  * @author <a href=\"mailto:haul@apache.org\">haul</a>\n  */\n public class JMSConnectionImpl extends AbstractLogEnabled \n@@ -294,8 +294,12 @@ private void disconnect() throws JMSException, NamingException {\n             }\n             this.subscribers.clear();\n         }\n-        this.session.close();\n-        this.connection.close();\n+        if ( this.session != null ) {\n+            this.session.close();\n+        }\n+        if ( this.connection != null ) {\n+            this.connection.close();\n+        }\n     }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/8b413b0f671027d720e15fa16c6068f4f21a355e",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/63080ed65440e4d7c6cf9dd9acf380e3c20eec2b",
        "message": "Fixing NPE when full screen coplet is removed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28247 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_63",
        "file": [
            {
                "sha": "7566a08ea80a87c481f2bb1e533c3599ce05ee54",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/8b413b0f671027d720e15fa16c6068f4f21a355e/src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/8b413b0f671027d720e15fa16c6068f4f21a355e/src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java?ref=8b413b0f671027d720e15fa16c6068f4f21a355e",
                "patch": "@@ -54,6 +54,7 @@\n import org.apache.cocoon.portal.layout.Layout;\n import org.apache.cocoon.portal.layout.LayoutFactory;\n import org.apache.cocoon.portal.layout.renderer.Renderer;\n+import org.apache.cocoon.portal.profile.ProfileManager;\n import org.apache.cocoon.util.ClassUtils;\n \n /**\n@@ -121,7 +122,7 @@\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: DefaultLayoutFactory.java,v 1.16 2004/04/25 20:09:34 haul Exp $\n+ * @version CVS $Id: DefaultLayoutFactory.java,v 1.17 2004/04/28 11:53:09 cziegeler Exp $\n  */\n public class DefaultLayoutFactory\n \textends AbstractLogEnabled\n@@ -416,7 +417,11 @@ public void remove(Layout layout)\n                     CopletFactory factory = service.getComponentManager().getCopletFactory();\n                     factory.remove( ((CopletLayout)layout).getCopletInstanceData());\n                 }\n-                service.getComponentManager().getProfileManager().unregister(layout);\n+                ProfileManager profileManager = service.getComponentManager().getProfileManager();\n+                if ( layout.equals(profileManager.getEntryLayout()) ) {\n+                    profileManager.setEntryLayout(null);\n+                }\n+                profileManager.unregister(layout);\n             } catch (ServiceException ce) {\n                 throw new ProcessingException(\"Unable to lookup portal service.\", ce);\n             } finally {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e8f1b24ad3609dc0c83388f13af504ffac846ee2",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/e196323182533b42bf0844c4aae5a503b6737cff",
        "message": "Fix for NPE as reported in bug 27518\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27800 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_64",
        "file": [
            {
                "sha": "b1f0f586e1b62641ab3c176b937d46bcdc9f95f6",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/pluto/PortletURLProviderImpl.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/e8f1b24ad3609dc0c83388f13af504ffac846ee2/src/blocks/portal/java/org/apache/cocoon/portal/pluto/PortletURLProviderImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e8f1b24ad3609dc0c83388f13af504ffac846ee2/src/blocks/portal/java/org/apache/cocoon/portal/pluto/PortletURLProviderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/pluto/PortletURLProviderImpl.java?ref=e8f1b24ad3609dc0c83388f13af504ffac846ee2",
                "patch": "@@ -43,7 +43,7 @@\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n  * \n- * @version CVS $Id: PortletURLProviderImpl.java,v 1.4 2004/03/16 15:56:43 cziegeler Exp $\n+ * @version CVS $Id: PortletURLProviderImpl.java,v 1.5 2004/03/18 19:01:15 cziegeler Exp $\n  */\n public class PortletURLProviderImpl \n        implements PortletURLProvider, CopletInstanceEvent {\n@@ -194,6 +194,12 @@ public String toString(Event additionalEvent) {\n         PortalService service = null;\n         try {\n             service = (PortalService) this.manager.lookup(PortalService.ROLE);\n+            if ( service.getPortalName() == null ) {\n+                // this happens when the core log is set to debug\n+                // and Cocoon debugs all session attributes\n+                // otherwise this can't happen\n+                return super.toString();\n+            }\n             LinkService linkService = service.getComponentManager().getLinkService();\n             \n             //TODO - secure"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/9083722e4f1506fa4e78b2ba3884b304050feb8f",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/755ef5d82661a46523783726b18b1dbfa085b811",
        "message": "Avoid NPE in RepeaterJXPathBinding Constructor\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27517 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_65",
        "file": [
            {
                "sha": "bc495217f903cf1a4437b370405a0d4232b550f5",
                "filename": "src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/9083722e4f1506fa4e78b2ba3884b304050feb8f/src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java",
                "raw_url": "https://github.com/apache/cocoon/raw/9083722e4f1506fa4e78b2ba3884b304050feb8f/src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java?ref=9083722e4f1506fa4e78b2ba3884b304050feb8f",
                "patch": "@@ -70,7 +70,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * that allows for bidirectional binding of a repeater-widget to/from\n  * repeating structures in the back-end object model.\n  *\n- * @version CVS $Id: RepeaterJXPathBinding.java,v 1.21 2004/03/02 18:48:18 antonio Exp $\n+ * @version CVS $Id: RepeaterJXPathBinding.java,v 1.22 2004/03/03 12:30:18 antonio Exp $\n  */\n public class RepeaterJXPathBinding extends JXPathBindingBase {\n \n@@ -147,8 +147,10 @@ public RepeaterJXPathBinding(\n                 JXPathBindingBuilderBase.CommonAttributes.DEFAULT,\n                 uniqueRowId, uniqueRowPath, convertor, convertorLocale));\n         }\n-        for (int i=0; i < uniqueBindings.length; i++) {\n-            uniqueRowBinding.add(uniqueBindings[i]);\n+        if (uniqueBindings != null) {\n+            for (int i=0; i < uniqueBindings.length; i++) {\n+                uniqueRowBinding.add(uniqueBindings[i]);\n+            }\n         }\n         /*this.uniqueRowBinding = new ComposedJXPathBindingBase(\n                 JXPathBindingBuilderBase.CommonAttributes.DEFAULT,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/05b887f7caeb2fbfcf03ceed3adf339d4c3c0e87",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/3298304b159729760bfa5b8399d797b32313da3a",
        "message": "fix NPE on first use\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27444 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_66",
        "file": [
            {
                "sha": "4193c6f466fae7c40244c5b3e55cd065ea0d0f12",
                "filename": "src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/05b887f7caeb2fbfcf03ceed3adf339d4c3c0e87/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/05b887f7caeb2fbfcf03ceed3adf339d4c3c0e87/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java?ref=05b887f7caeb2fbfcf03ceed3adf339d4c3c0e87",
                "patch": "@@ -82,7 +82,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * \n  * @since 2.1\n  * @author <a href=\"mailto:ghoward@apache.org\">Geoff Howard</a>\n- * @version CVS $Id: DefaultEventRegistryImpl.java,v 1.9 2003/12/10 05:31:01 crossley Exp $\n+ * @version CVS $Id: DefaultEventRegistryImpl.java,v 1.10 2004/02/27 17:27:04 unico Exp $\n  */\n public class DefaultEventRegistryImpl \n         extends AbstractLogEnabled\n@@ -190,7 +190,9 @@ public void contextualize(Context context) throws ContextException {\n                     ctx.getRealPath(\"/WEB-INF\"), \n                         DefaultEventRegistryImpl.PERSISTENT_FILE);\n         if (m_persistentFile == null) {\n-            throw new ContextException(\"Could not obtain persistent file. \" +                \"The cache event registry cannot be \" +                \"used inside an unexpanded WAR file.\");\n+            throw new ContextException(\"Could not obtain persistent file. \" +\n+                \"The cache event registry cannot be \" +\n+                \"used inside an unexpanded WAR file.\");\n         }\n \t}\n \n@@ -305,7 +307,7 @@ protected void unwrapRegistry(EventRegistryDataWrapper ecdw) {\n \t}\n \n     // TODO: don't hardcode initial size\n-    private void createBlankCache() {\n+    protected final void createBlankCache() {\n         this.m_eventMMap = new MultiHashMap(100); \n         this.m_keyMMap = new MultiHashMap(100); \n     }"
            },
            {
                "sha": "388d059951e1e06e466ba2c7c388cb1188681fa0",
                "filename": "src/blocks/eventcache/java/org/apache/cocoon/caching/impl/StoreEventRegistryImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/05b887f7caeb2fbfcf03ceed3adf339d4c3c0e87/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/StoreEventRegistryImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/05b887f7caeb2fbfcf03ceed3adf339d4c3c0e87/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/StoreEventRegistryImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/StoreEventRegistryImpl.java?ref=05b887f7caeb2fbfcf03ceed3adf339d4c3c0e87",
                "patch": "@@ -65,7 +65,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * \n  * @since 2.1\n  * @author <a href=\"mailto:ghoward@apache.org\">Geoff Howard</a>\n- * @version CVS $Id: StoreEventRegistryImpl.java,v 1.3 2004/02/07 15:20:09 joerg Exp $\n+ * @version CVS $Id: StoreEventRegistryImpl.java,v 1.4 2004/02/27 17:27:04 unico Exp $\n  */\n public class StoreEventRegistryImpl \n \t\textends DefaultEventRegistryImpl implements Serviceable {\n@@ -113,6 +113,7 @@ protected boolean recover() {\n \t\t\treturn true;\n \t\t} else {\n \t\t\tgetLogger().warn(\"Unable to recover Event Registry.\");\n+            super.createBlankCache();\n \t\t\treturn false;\n \t\t}\n \t}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/9bd64b9acf024b5d8cb84836a515dbfff1558cd4",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/07f32695791e855ec46446c99dfe8b07e80d5e26",
        "message": "prevent NPE when root cause is null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27432 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_67",
        "file": [
            {
                "sha": "87d8678d64b333d4341d1c5ce03907a2e30a29da",
                "filename": "src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java",
                "status": "modified",
                "additions": 22,
                "deletions": 15,
                "changes": 37,
                "blob_url": "https://github.com/apache/cocoon/blob/9bd64b9acf024b5d8cb84836a515dbfff1558cd4/src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/9bd64b9acf024b5d8cb84836a515dbfff1558cd4/src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/jms/java/org/apache/cocoon/components/jms/JMSConnectionImpl.java?ref=9bd64b9acf024b5d8cb84836a515dbfff1558cd4",
                "patch": "@@ -96,7 +96,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *  </tbody>\n  * </table>\n  * \n- * @version CVS $Id: JMSConnectionImpl.java,v 1.9 2004/02/15 21:30:00 haul Exp $\n+ * @version CVS $Id: JMSConnectionImpl.java,v 1.10 2004/02/24 13:02:47 unico Exp $\n  * @author <a href=\"mailto:haul@apache.org\">haul</a>\n  */\n public class JMSConnectionImpl extends AbstractLogEnabled \n@@ -159,19 +159,26 @@ public void initialize() throws Exception {\n             this.available = true;\n         } catch (NamingException e) {\n             if (getLogger().isWarnEnabled()) {\n-            \tString rootCause = e.getRootCause().getClass().getName();\n-            \tString message = e.getRootCause().getMessage();\n-            \tif (rootCause.equals(\"java.lang.ClassNotFoundException\")) {\n-            \t\tString info = \"WARN! *** JMS block is installed but jms client library not found. ***\\n\" +            \t\t\t\"- For the jms block to work you must install and start a JMS server and \" +            \t\t\t\"place the client jar in WEB-INF/lib.\";\n-            \t\t\tif (message.indexOf(\"exolab\") > 0 ) {\n-            \t\t\t\tinfo += \"\\n- The default server, OpenJMS is configured in cocoon.xconf but is not bundled with Cocoon.\";\n-            \t\t\t}\n-\t\t\t\t\tSystem.err.println(info);\n-\t\t\t\t\tgetLogger().warn(info,e);\n-            \t} else {\n-\t\t\t\t\tSystem.out.println(message);\n-\t\t\t\t\tgetLogger().warn(\"Cannot get Initial Context.  Is the JNDI server reachable?\",e);\n-            \t}\n+                Throwable rootCause = e.getRootCause();\n+                if (rootCause != null) {\n+                    String message = e.getRootCause().getMessage();\n+                    if (rootCause instanceof ClassNotFoundException) {\n+                        String info = \"WARN! *** JMS block is installed but jms client library not found. ***\\n\" + \n+                            \"- For the jms block to work you must install and start a JMS server and \" +\n+                            \"place the client jar in WEB-INF/lib.\";\n+                            if (message.indexOf(\"exolab\") > 0 ) {\n+                                info += \"\\n- The default server, OpenJMS is configured in cocoon.xconf but is not bundled with Cocoon.\";\n+                            }\n+                        System.err.println(info);\n+                        getLogger().warn(info,e);\n+                    } else {\n+                        System.out.println(message);\n+                        getLogger().warn(\"Cannot get Initial Context. Is the JNDI server reachable?\",e);\n+                    }\n+                }\n+                else {\n+                    getLogger().warn(\"Failed to initialize JMS.\",e);\n+                }\n             }\n         } catch (JMSException e) {\n             if (getLogger().isWarnEnabled()) {\n@@ -250,7 +257,7 @@ public TopicPublisher getPublisher() throws JMSException, NamingException {\n      * @throws NamingException\n      * @throws JMSException\n      */\n-    public synchronized TopicSession getSession() throws NamingException, JMSException {\n+    public TopicSession getSession() throws NamingException, JMSException {\n         return this.session;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/37ff7fd76ac07cf284db14bf5f24a9fa00b67ef6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/05d216053cfde03b3b57e5c080e9e8c51fedabe7",
        "message": "reverting previous change, getting NPE :-( . sorry for mess up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27326 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_68",
        "file": [
            {
                "sha": "a8ccd528ee5229cd88776296e57cfc34f3df1f47",
                "filename": "src/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java",
                "status": "modified",
                "additions": 5,
                "deletions": 4,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/37ff7fd76ac07cf284db14bf5f24a9fa00b67ef6/src/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java",
                "raw_url": "https://github.com/apache/cocoon/raw/37ff7fd76ac07cf284db14bf5f24a9fa00b67ef6/src/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java?ref=37ff7fd76ac07cf284db14bf5f24a9fa00b67ef6",
                "patch": "@@ -89,7 +89,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @since 2.1\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: AbstractProcessingPipeline.java,v 1.16 2004/02/11 14:00:47 unico Exp $\n+ * @version CVS $Id: AbstractProcessingPipeline.java,v 1.17 2004/02/11 14:37:28 unico Exp $\n  */\n public abstract class AbstractProcessingPipeline\n   extends AbstractLogEnabled\n@@ -492,14 +492,15 @@ protected void connectPipeline(Environment environment)\n      */\n     public boolean process(Environment environment)\n     throws ProcessingException {\n+        \n         // If this is an internal request, lastConsumer not the serializer!\n-        if (this.serializer != this.lastConsumer) {\n+        if (null == this.lastConsumer) {\n             this.lastConsumer = this.serializer;\n         }\n-        if (this.serializer != this.lastConsumer || this.reader != null) {\n+        if (null != this.lastConsumer || this.reader != null) {\n             this.preparePipeline(environment);\n         }\n-\n+        \n         // See if we need to set an \"Expires:\" header\n         if (this.expires != 0) {\n             Response res = ObjectModelHelper.getResponse(environment.getObjectModel());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/6e83fc5341c2ab78b655ae040c5ab8bb3cd87714",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/cf8de79b97cd7d877d86001d0137611563be22cf",
        "message": "Fixing NPE, when the context does not exist\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26836 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_69",
        "file": [
            {
                "sha": "9e221dec03f683c9b597f5e67ec24fc772bb05b1",
                "filename": "src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java",
                "status": "modified",
                "additions": 3,
                "deletions": 4,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/6e83fc5341c2ab78b655ae040c5ab8bb3cd87714/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java",
                "raw_url": "https://github.com/apache/cocoon/raw/6e83fc5341c2ab78b655ae040c5ab8bb3cd87714/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java?ref=6e83fc5341c2ab78b655ae040c5ab8bb3cd87714",
                "patch": "@@ -59,13 +59,12 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.cocoon.webapps.session.SessionManager;\n \n import org.w3c.dom.DocumentFragment;\n-import org.w3c.dom.Node;\n \n /**\n  * The <code>Session-fw</code> object helper\n  *\n  * @author <a href=\"mailto:antonio@apache.org\">Antonio Gallardo</a>\n- * @version CVS $Id: XSPSessionFwHelper.java,v 1.6 2003/12/18 13:30:15 antonio Exp $\n+ * @version CVS $Id: XSPSessionFwHelper.java,v 1.7 2003/12/26 23:47:50 antonio Exp $\n  * @since 2.1.1\n  */\n public class XSPSessionFwHelper {\n@@ -102,8 +101,8 @@ public static DocumentFragment getXML(ComponentManager cm, String context, Strin\n      * @param path The parameter path\n      **/\n     public static String getXMLAsString(ComponentManager cm, String context, String path) throws ProcessingException {\n-        Node node = getXML(cm, context, path).getFirstChild();\n-        return node != null ? node.getNodeValue() : \"\";\n+        DocumentFragment df = getXML(cm, context, path);\n+        return df != null ? df.getFirstChild().getNodeValue() : \"\";\n     }\n }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/b95a5985271cdf8cd6696d2fb08d3a19527c5b2f",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/19b2f43ee2ae788b88337f4f699b8032e67b9846",
        "message": "Fix NPEs in woody: Namespace can be null.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26821 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_70",
        "file": [
            {
                "sha": "2b165d969c73b09eccf3699797dba1704f5cbbcc",
                "filename": "src/blocks/woody/java/org/apache/cocoon/woody/transformation/WidgetReplacingPipe.java",
                "status": "modified",
                "additions": 4,
                "deletions": 5,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/b95a5985271cdf8cd6696d2fb08d3a19527c5b2f/src/blocks/woody/java/org/apache/cocoon/woody/transformation/WidgetReplacingPipe.java",
                "raw_url": "https://github.com/apache/cocoon/raw/b95a5985271cdf8cd6696d2fb08d3a19527c5b2f/src/blocks/woody/java/org/apache/cocoon/woody/transformation/WidgetReplacingPipe.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/java/org/apache/cocoon/woody/transformation/WidgetReplacingPipe.java?ref=b95a5985271cdf8cd6696d2fb08d3a19527c5b2f",
                "patch": "@@ -78,7 +78,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * <p>For more information about the supported tags and their function, see the user documentation\n  * for the woody template transformer.</p>\n  * \n- * @version CVS $Id: WidgetReplacingPipe.java,v 1.17 2003/12/22 16:43:11 mpo Exp $\n+ * @version CVS $Id: WidgetReplacingPipe.java,v 1.18 2003/12/22 21:01:30 vgritsenko Exp $\n  */\n public class WidgetReplacingPipe extends AbstractXMLPipe {\n \n@@ -157,7 +157,7 @@ public void startElement(String namespaceURI, String localName, String qName, At\n                 gotStylingElement = true;\n             }\n             saxBuffer.startElement(namespaceURI, localName, qName, attributes);\n-        } else if (namespaceURI.equals(Constants.WT_NS)) {\n+        } else if (Constants.WT_NS.equals(namespaceURI)) {\n             if (localName.equals(WIDGET) || localName.equals(REPEATER_WIDGET)) {\n                 checkContextWidgetAvailable(qName);\n                 inWidgetElement = true;\n@@ -344,8 +344,7 @@ public void endElement(String namespaceURI, String localName, String qName)\n             throws SAXException {\n \n         if (inWidgetElement) {\n-            if (elementNestingCounter == widgetElementNesting &&\n-                namespaceURI.equals(Constants.WT_NS)\n+            if (elementNestingCounter == widgetElementNesting && Constants.WT_NS.equals(namespaceURI)\n                 && (localName.equals(WIDGET) || localName.equals(REPEATER_WIDGET))) {\n                     if (repeaterWidget) {\n                         Repeater repeater = (Repeater)widget;\n@@ -373,7 +372,7 @@ public void endElement(String namespaceURI, String localName, String qName)\n                 } else {\n                     saxBuffer.endElement(namespaceURI, localName, qName);\n                 }\n-        } else if (namespaceURI.equals(Constants.WT_NS)) {\n+        } else if (Constants.WT_NS.equals(namespaceURI)) {\n             if (localName.equals(WIDGET_LABEL) || localName.equals(REPEATER_WIDGET_LABEL)\n                 || localName.equals(REPEATER_SIZE) || localName.equals(CONTINUATION_ID)) {\n                 // Do nothing"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/b9a05797cffb9ffe7fbc4871252fe5a16f1bafb5",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/cf49d9df0ad6b7f51721fa5511662a185a7477a9",
        "message": "fix NPE during shutdown\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26297 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_71",
        "file": [
            {
                "sha": "70d35279786e35bc0bfb5f1f153f2fc7aaa62ed8",
                "filename": "src/java/org/apache/cocoon/components/CocoonComponentManager.java",
                "status": "modified",
                "additions": 10,
                "deletions": 2,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/b9a05797cffb9ffe7fbc4871252fe5a16f1bafb5/src/java/org/apache/cocoon/components/CocoonComponentManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/b9a05797cffb9ffe7fbc4871252fe5a16f1bafb5/src/java/org/apache/cocoon/components/CocoonComponentManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/CocoonComponentManager.java?ref=b9a05797cffb9ffe7fbc4871252fe5a16f1bafb5",
                "patch": "@@ -86,7 +86,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj&ouml;rn L&uuml;tkemeier</a>\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: CocoonComponentManager.java,v 1.19 2003/10/21 13:37:42 cziegeler Exp $\n+ * @version CVS $Id: CocoonComponentManager.java,v 1.20 2003/11/07 14:15:53 vgritsenko Exp $\n  */\n public final class CocoonComponentManager\n extends ExcaliburComponentManager\n@@ -482,9 +482,17 @@ public static void removeFromAutomaticRelease(final Component component)\n     public void dispose() {\n         if ( null != this.sourceResolver ) {\n             super.release( this.sourceResolver );\n-            this.sourceResolver = null;\n+            // We cannot null out sourceResolver here yet as some other not\n+            // disposed yet components might still have unreleased sources,\n+            // and they will call {@link #release(Source)} during their\n+            // dispose().\n         }\n+        \n         super.dispose();\n+        \n+        // All components now are released so sourceResolver should be not\n+        // needed anymore.\n+        this.sourceResolver = null;\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/1c5c3a77539dd3a503a3e8ea31d03f1d73eee8e9",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a77a7d22a58f095a55746f17935dd5a4983d5dbb",
        "message": "missed one case of NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26294 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_72",
        "file": [
            {
                "sha": "78b502e5d123b50f449a819c15e64976cff1a9d0",
                "filename": "src/java/org/apache/cocoon/generation/XPathDirectoryGenerator.java",
                "status": "modified",
                "additions": 29,
                "deletions": 19,
                "changes": 48,
                "blob_url": "https://github.com/apache/cocoon/blob/1c5c3a77539dd3a503a3e8ea31d03f1d73eee8e9/src/java/org/apache/cocoon/generation/XPathDirectoryGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1c5c3a77539dd3a503a3e8ea31d03f1d73eee8e9/src/java/org/apache/cocoon/generation/XPathDirectoryGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/generation/XPathDirectoryGenerator.java?ref=1c5c3a77539dd3a503a3e8ea31d03f1d73eee8e9",
                "patch": "@@ -94,18 +94,21 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * resource. A <code>nsmapping</code> parameter can be specified to point to a file containing lines to map prefixes\n  * to namespaces like this:\n  * </p>\n+ * \n  * <p>\n- *  prefix=namespace-uri<br/>\n- *  prefix2=namespace-uri-2\n+ * prefix=namespace-uri<br/> prefix2=namespace-uri-2\n  * </p>\n+ * \n  * <p>\n  * A parameter <code>nsmapping-reload</code> specifies if the prefix-2-namespace mapping file should be checked to be\n- * reloaded on each request to this generator if it was modified since the last time it was read. \n+ * reloaded on each request to this generator if it was modified since the last time it was read.\n  * </p>\n+ * \n  * <p>\n- * An additional parameter <code>xmlFiles</code> can be set in the sitemap setting the regular expression pattern for \n- * determining if a file should be handled as XML file or not. The default value for this param is \n- * <code>\\.xml$</code>, so that it * matches all files ending <code>.xml</code>.\n+ * An additional parameter <code>xmlFiles</code> can be set in the sitemap setting the regular expression pattern for\n+ * determining if a file should be handled as XML file or not. The default value for this param is\n+ * <code>\\.xml$</code>, so that it  matches all files ending <code>.xml</code>.\n+ * </p>\n  * \n  * <p></p>\n  * <br>Sample usage: <br><br>Sitemap:\n@@ -143,7 +146,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:giacomo@apache.org\">Giacomo Pati</a>\n  * @author <a href=\"mailto:gianugo@apache.org\">Gianugo Rabellino</a>\n  * @author <a href=\"mailto:joerg@apache.org\">J\ufffdrg Heinicke</a>\n- * @version CVS $Id: XPathDirectoryGenerator.java,v 1.5 2003/11/07 09:37:13 giacomo Exp $\n+ * @version CVS $Id: XPathDirectoryGenerator.java,v 1.6 2003/11/07 13:00:17 giacomo Exp $\n  */\n public class XPathDirectoryGenerator\n extends DirectoryGenerator {\n@@ -249,12 +252,11 @@ public void setup(SourceResolver resolver, Map objectModel, String src, Paramete\n \n             if ((null == mappingInfo) || (mappingInfo.reload == false) ||\n                 (mappingInfo.mappingSource.getLastModified() < mappingSource.getLastModified())) {\n-                this.prefixResolver = new MappingInfo(getLogger().getChildLogger( \"prefix-resolver\" ), mappingSource, mapping_reload);\n+                this.prefixResolver =\n+                    new MappingInfo(getLogger().getChildLogger(\"prefix-resolver\"), mappingSource, mapping_reload);\n                 XPathDirectoryGenerator.mappingFiles.put(mappingKey, this.prefixResolver);\n-            }\n-            else\n-            {\n-            \tthis.prefixResolver = mappingInfo;\n+            } else {\n+                this.prefixResolver = mappingInfo;\n             }\n         }\n \n@@ -311,7 +313,10 @@ protected void performXPathQuery(File xmlFile)\n         }\n \n         if (doc != null) {\n-            NodeList nl = this.processor.selectNodeList(this.doc.getDocumentElement(), this.xpath,this.prefixResolver);\n+            NodeList nl =\n+                (null == this.prefixResolver)\n+                ? this.processor.selectNodeList(this.doc.getDocumentElement(), this.xpath)\n+                : this.processor.selectNodeList(this.doc.getDocumentElement(), this.xpath, this.prefixResolver);\n             AttributesImpl attributes = new AttributesImpl();\n             attributes.addAttribute(\"\", QUERY_ATTR_NAME, QUERY_ATTR_NAME, \"CDATA\", xpath);\n             super.contentHandler.startElement(URI, XPATH_NODE_NAME, PREFIX + \":\" + XPATH_NODE_NAME, attributes);\n@@ -347,7 +352,7 @@ protected void startNode(String nodeName, File path)\n      * The MappingInfo class to reolve namespace prefixes to their namespace URI\n      *\n      * @author <a href=\"mailto:giacomo(at)apache.org\">Giacomo Pati</a>\n-     * @version CVS $Id: XPathDirectoryGenerator.java,v 1.5 2003/11/07 09:37:13 giacomo Exp $\n+     * @version CVS $Id: XPathDirectoryGenerator.java,v 1.6 2003/11/07 13:00:17 giacomo Exp $\n      */\n     private static class MappingInfo\n     implements PrefixResolver {\n@@ -357,15 +362,16 @@ protected void startNode(String nodeName, File path)\n         /** Whether to reload if mapping file has changed */\n         public final boolean reload;\n \n-        /** Map of prefixes to namespaces */\n-        private final Map prefixMap;\n-\n         /** Our Logger */\n         private final Logger logger;\n \n+        /** Map of prefixes to namespaces */\n+        private final Map prefixMap;\n+\n         /**\n          * Creates a new MappingInfo object.\n          *\n+         * @param logger DOCUMENT ME!\n          * @param mappingSource The Source of the mapping file\n          * @param reload Whether to reload if mapping file has changed\n          *\n@@ -388,7 +394,7 @@ public MappingInfo(final Logger logger, final Source mappingSource, final boolea\n                     final String prefix = line.substring(0, i);\n                     final String namespace = line.substring(i + 1);\n                     prefixMap.put(prefix, namespace);\n-                    logger.debug( \"added mapping: '\" + prefix + \"'='\" + namespace + \"'\" );\n+                    logger.debug(\"added mapping: '\" + prefix + \"'='\" + namespace + \"'\");\n                 }\n             }\n         }\n@@ -398,7 +404,11 @@ public MappingInfo(final Logger logger, final Source mappingSource, final boolea\n          */\n         public String prefixToNamespace(String prefix) {\n             final String namespace = (String)this.prefixMap.get(prefix);\n-            logger.debug( \"have to resolve prefix='\" + prefix + \", found namespace='\" + namespace + \"'\" );\n+\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"have to resolve prefix='\" + prefix + \", found namespace='\" + namespace + \"'\");\n+            }\n+\n             return namespace;\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/846fdfb284c488cbf5b8124ce55d376a96aa3841",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/39666b0f95b8fd8c828a356a00fc7939f8a74c6a",
        "message": "Perhaps now fixing the NPE...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26183 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_73",
        "file": [
            {
                "sha": "636bf87457b2ca14063e066c13620b86cacd60f3",
                "filename": "src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/846fdfb284c488cbf5b8124ce55d376a96aa3841/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java",
                "raw_url": "https://github.com/apache/cocoon/raw/846fdfb284c488cbf5b8124ce55d376a96aa3841/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java?ref=846fdfb284c488cbf5b8124ce55d376a96aa3841",
                "patch": "@@ -83,7 +83,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * This is the implementation for the authentication context\n  * \n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: AuthenticationContext.java,v 1.12 2003/10/30 10:06:45 cziegeler Exp $\n+ * @version CVS $Id: AuthenticationContext.java,v 1.13 2003/10/30 15:46:18 cziegeler Exp $\n */\n public class AuthenticationContext\n implements SessionContext {\n@@ -889,7 +889,7 @@ public void loadApplicationXML(ApplicationConfiguration appConf,\n                                               null, \n                                               parameters, \n                                               resolver);\n-                this.setXML(\"application\", fragment);\n+                this.authContext.setXML(\"/applications/\" + appConf.getName() + '/', fragment);\n         \n             } // end synchronized\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e0c9237148bb91cb683074110fae56c1aac389dd",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/19512bd0e28a72e0e2b33c7f6459d54a14b49974",
        "message": "Applying NPE fix again\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26175 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_74",
        "file": [
            {
                "sha": "c9a5c4e980a97220a4afdf087a627219860226c4",
                "filename": "src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/e0c9237148bb91cb683074110fae56c1aac389dd/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e0c9237148bb91cb683074110fae56c1aac389dd/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java?ref=e0c9237148bb91cb683074110fae56c1aac389dd",
                "patch": "@@ -83,7 +83,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * This is the implementation for the authentication context\n  * \n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: AuthenticationContext.java,v 1.11 2003/10/21 12:39:16 cziegeler Exp $\n+ * @version CVS $Id: AuthenticationContext.java,v 1.12 2003/10/30 10:06:45 cziegeler Exp $\n */\n public class AuthenticationContext\n implements SessionContext {\n@@ -707,7 +707,7 @@ private void loadApplicationXML(String             path,\n                                           null, \n                                           parameters, \n                                           resolver);\n-            this.setXML(path, fragment);\n+            this.authContext.setXML(\"/applications/\" + applicationName + '/', fragment);\n \n         } // end synchronized\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4ced05f4d9c1097b06605473ff14fc64bec9949b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/334d65a636c567d0051d7c106a57aeca7408fea3",
        "message": "Hopefully fixing NPE when the path does not exist\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25945 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_75",
        "file": [
            {
                "sha": "35115cf6ee71d5833f7db2c7e92d709f3c36b5b0",
                "filename": "src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java",
                "status": "modified",
                "additions": 28,
                "deletions": 28,
                "changes": 56,
                "blob_url": "https://github.com/apache/cocoon/blob/4ced05f4d9c1097b06605473ff14fc64bec9949b/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4ced05f4d9c1097b06605473ff14fc64bec9949b/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/XSPSessionFwHelper.java?ref=4ced05f4d9c1097b06605473ff14fc64bec9949b",
                "patch": "@@ -64,38 +64,38 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * The <code>Session-fw</code> object helper\n  *\n  * @author <a href=\"mailto:agallardo@agsoftware.dnsalias.com\">Antonio Gallardo</a>\n- * @version CVS $Id: XSPSessionFwHelper.java,v 1.1 2003/09/03 13:13:27 cziegeler Exp $\n+ * @version CVS $Id: XSPSessionFwHelper.java,v 1.2 2003/10/09 07:18:36 cziegeler Exp $\n  * @since 2.1.1\n  */\n public class XSPSessionFwHelper {\n+\n     /** GetXML Fragment from the given session context and path\n-      *\n-      *\n-      * @param session The Session object\n-      * @param context The Session context tha define where to search\n-      * @param path The parameter path\n-      * @param defaultValue Value to substitute in absence of the required Fragment\n-     **/\n-     public static DocumentFragment getXML(ComponentManager cm, String context, String path) throws ProcessingException {\n-\n-         SessionManager sm = null;\n-         DocumentFragment df = null;\n-\n-         try {\n-             // Start looking up the manager\n-             sm = (SessionManager)cm.lookup(SessionManager.ROLE);\n-             // Make our work\n-             df = sm.getContextFragment(context, path);\n-             if (sm != null) {\n-                 cm.release((Component)sm);\n-             }\n-         } catch (ComponentException ce) {\n-             throw new ProcessingException(\"Error during lookup of SessionManager component.\", ce);\n-         } finally {\n-             // End releasing the sessionmanager\n-\t\t     cm.release((Component)sm);\n-\t     }\n-         return df;\n+     *\n+     *\n+     * @param session The Session object\n+     * @param context The Session context tha define where to search\n+     * @param path The parameter path\n+     * @param defaultValue Value to substitute in absence of the required Fragment\n+    **/\n+    public static Object getXML(ComponentManager cm, String context, String path) throws ProcessingException {\n+\n+        SessionManager sessionManager = null;\n+        try {\n+            // Start looking up the manager\n+            sessionManager = (SessionManager)cm.lookup(SessionManager.ROLE);\n+            // Get the fragment\n+            DocumentFragment df = sessionManager.getContextFragment(context, path);\n+            if ( df != null ) {\n+                return df;\n+            } else {\n+                return \"\";\n+            }\n+        } catch (ComponentException ce) {\n+            throw new ProcessingException(\"Error during lookup of SessionManager component.\", ce);\n+        } finally {\n+            // End releasing the sessionmanager\n+\t\t    cm.release((Component)sessionManager);\n+\t    }\n      }\n }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/ff3566f650c9be081be44916c9219535d48c6bef",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/d52ff8a2ac27c64fce1f0defa02bc4137fad9407",
        "message": "Prevent NPE when no global variables are defined\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25682 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_76",
        "file": [
            {
                "sha": "08ca0fdb84a35d0c75faa0f99fa0103988102e2c",
                "filename": "src/java/org/apache/cocoon/components/modules/input/SitemapVariableHolder.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/ff3566f650c9be081be44916c9219535d48c6bef/src/java/org/apache/cocoon/components/modules/input/SitemapVariableHolder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/ff3566f650c9be081be44916c9219535d48c6bef/src/java/org/apache/cocoon/components/modules/input/SitemapVariableHolder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/modules/input/SitemapVariableHolder.java?ref=ff3566f650c9be081be44916c9219535d48c6bef",
                "patch": "@@ -69,7 +69,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * sitemap base\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: SitemapVariableHolder.java,v 1.4 2003/03/20 12:28:45 cziegeler Exp $\n+ * @version CVS $Id: SitemapVariableHolder.java,v 1.5 2003/09/05 11:57:05 cziegeler Exp $\n  */\n public final class SitemapVariableHolder\n     extends AbstractLogEnabled\n@@ -135,8 +135,10 @@ protected Map getValues() {\n         if ( null == values ) {\n             values = new HashMap(this.globalValues);\n             ChainedConfiguration conf = this.holder.getConfiguration();\n-            this.prepare(conf, values);\n-            this.holder.setPreparedConfiguration(conf, values);\n+            if ( conf != null ) {\n+                this.prepare(conf, values);\n+                this.holder.setPreparedConfiguration(conf, values);\n+            }\n         }\n         return values;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/1c564ac9ab82bdfcaa03927fea03a0fc3b9f8eea",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/f549708d133c4525d2fd979179bf86faebe5a7da",
        "message": "Fixing NPE in authentication reported bySonny Sukumar (ahimsadesi@yahoo.com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25529 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_77",
        "file": [
            {
                "sha": "fb26c53c4881be2690064d292be1badf0a6e0776",
                "filename": "src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/1c564ac9ab82bdfcaa03927fea03a0fc3b9f8eea/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1c564ac9ab82bdfcaa03927fea03a0fc3b9f8eea/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java?ref=1c564ac9ab82bdfcaa03927fea03a0fc3b9f8eea",
                "patch": "@@ -91,7 +91,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * This is a helper class that could be made pluggable if required.\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: PipelineAuthenticator.java,v 1.2 2003/08/04 03:06:30 joerg Exp $\n+ * @version CVS $Id: PipelineAuthenticator.java,v 1.3 2003/08/26 06:43:32 cziegeler Exp $\n */\n public class PipelineAuthenticator \n     extends AbstractLogEnabled\n@@ -280,6 +280,8 @@ public UserHandler authenticate( HandlerConfiguration configuration,\n \n             if (doc != null) {\n                 data = DOMUtil.getFirstNodeFromPath(doc, new String[] {\"authentication\",\"data\"}, false);\n+            } else {\n+                doc = DOMUtil.createDocument();\n             }\n \n             // now create the following xml:"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/a0634f86d56d02a9e3a3eeb3e26820f94d5744ff",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b680b35968c77b84b0fa7822f539c8ca9f4d48a2",
        "message": "Fix NPE occuring when a script source does not exist\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25459 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_78",
        "file": [
            {
                "sha": "1922dbf006a4c79eefd6963b72ec17c597d3a47f",
                "filename": "src/java/org/apache/cocoon/components/flow/javascript/fom/FOM_JavaScriptInterpreter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/a0634f86d56d02a9e3a3eeb3e26820f94d5744ff/src/java/org/apache/cocoon/components/flow/javascript/fom/FOM_JavaScriptInterpreter.java",
                "raw_url": "https://github.com/apache/cocoon/raw/a0634f86d56d02a9e3a3eeb3e26820f94d5744ff/src/java/org/apache/cocoon/components/flow/javascript/fom/FOM_JavaScriptInterpreter.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/flow/javascript/fom/FOM_JavaScriptInterpreter.java?ref=a0634f86d56d02a9e3a3eeb3e26820f94d5744ff",
                "patch": "@@ -92,7 +92,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:ovidiu@apache.org\">Ovidiu Predescu</a>\n  * @author <a href=\"mailto:crafterm@apache.org\">Marcus Crafter</a>\n  * @since March 25, 2002\n- * @version CVS $Id: FOM_JavaScriptInterpreter.java,v 1.6 2003/08/06 15:37:18 bruno Exp $\n+ * @version CVS $Id: FOM_JavaScriptInterpreter.java,v 1.7 2003/08/14 21:48:40 sylvain Exp $\n  */\n public class FOM_JavaScriptInterpreter extends AbstractInterpreter\n     implements Configurable, Initializable\n@@ -576,7 +576,7 @@ public void callFunction(String funName, List params,\n                 throw new CascadingRuntimeException(ee.getMessage(), ee);\n             } finally {\n                 updateSession(environment, thrScope);\n-                cocoon.invalidate();\n+                if (cocoon != null) cocoon.invalidate();\n                 Context.exit();\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/f63cf773ecdc7953ec1ca1112d8e9993f7c0ee05",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/c560d257a3dfb3b1ec8951d8e2b4a281be4a849d",
        "message": "Removing obsolete JXPathExceptioSelector\r\nFixing NPE in ExceptionSelector\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25264 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_79",
        "file": [
            {
                "sha": "cbdf6c9358e2966970933131e6b3b3a71d34a17a",
                "filename": "src/java/org/apache/cocoon/selection/ExceptionSelector.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/f63cf773ecdc7953ec1ca1112d8e9993f7c0ee05/src/java/org/apache/cocoon/selection/ExceptionSelector.java",
                "raw_url": "https://github.com/apache/cocoon/raw/f63cf773ecdc7953ec1ca1112d8e9993f7c0ee05/src/java/org/apache/cocoon/selection/ExceptionSelector.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/selection/ExceptionSelector.java?ref=f63cf773ecdc7953ec1ca1112d8e9993f7c0ee05",
                "patch": "@@ -87,7 +87,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj&ouml;rn L&uuml;tkemeier</a>\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n  * @since 2.1\n- * @version CVS $Id: ExceptionSelector.java,v 1.5 2003/07/10 13:16:55 cziegeler Exp $\n+ * @version CVS $Id: ExceptionSelector.java,v 1.6 2003/07/30 08:21:25 cziegeler Exp $\n  */\n \n public class ExceptionSelector extends AbstractSwitchSelector implements Configurable {\n@@ -181,6 +181,9 @@ private FindResult find(Throwable thr) {\n     }\n \n     public boolean select(String expression, Object selectorContext) {\n+        if ( selectorContext == null ) {\n+            return false;\n+        }\n         // Just compare the expression with the previously found name\n \t\tboolean result = expression.equals(((FindResult)selectorContext).getName());\n \t\t"
            },
            {
                "sha": "102887a8639b013e8347a8ed62a898b55a3ce920",
                "filename": "src/java/org/apache/cocoon/selection/JXPathExceptionSelector.java",
                "status": "removed",
                "additions": 0,
                "deletions": 157,
                "changes": 157,
                "blob_url": "https://github.com/apache/cocoon/blob/c560d257a3dfb3b1ec8951d8e2b4a281be4a849d/src/java/org/apache/cocoon/selection/JXPathExceptionSelector.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c560d257a3dfb3b1ec8951d8e2b4a281be4a849d/src/java/org/apache/cocoon/selection/JXPathExceptionSelector.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/selection/JXPathExceptionSelector.java?ref=c560d257a3dfb3b1ec8951d8e2b4a281be4a849d",
                "patch": "@@ -1,157 +0,0 @@\n-/*\n-\n- ============================================================================\n-                   The Apache Software License, Version 1.1\n- ============================================================================\n-\n- Copyright (C) 1999-2003 The Apache Software Foundation. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without modifica-\n- tion, are permitted provided that the following conditions are met:\n-\n- 1. Redistributions of  source code must  retain the above copyright  notice,\n-    this list of conditions and the following disclaimer.\n-\n- 2. Redistributions in binary form must reproduce the above copyright notice,\n-    this list of conditions and the following disclaimer in the documentation\n-    and/or other materials provided with the distribution.\n-\n- 3. The end-user documentation included with the redistribution, if any, must\n-    include  the following  acknowledgment:  \"This product includes  software\n-    developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n-    Alternately, this  acknowledgment may  appear in the software itself,  if\n-    and wherever such third-party acknowledgments normally appear.\n-\n- 4. The names \"Apache Cocoon\" and  \"Apache Software Foundation\" must  not  be\n-    used to  endorse or promote  products derived from  this software without\n-    prior written permission. For written permission, please contact\n-    apache@apache.org.\n-\n- 5. Products  derived from this software may not  be called \"Apache\", nor may\n-    \"Apache\" appear  in their name,  without prior written permission  of the\n-    Apache Software Foundation.\n-\n- THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n- INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- FITNESS  FOR A PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN NO  EVENT SHALL  THE\n- APACHE SOFTWARE  FOUNDATION  OR ITS CONTRIBUTORS  BE LIABLE FOR  ANY DIRECT,\n- INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLU-\n- DING, BUT NOT LIMITED TO, PROCUREMENT  OF SUBSTITUTE GOODS OR SERVICES; LOSS\n- OF USE, DATA, OR  PROFITS; OR BUSINESS  INTERRUPTION)  HOWEVER CAUSED AND ON\n- ANY  THEORY OF LIABILITY,  WHETHER  IN CONTRACT,  STRICT LIABILITY,  OR TORT\n- (INCLUDING  NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT OF THE  USE OF\n- THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n- This software  consists of voluntary contributions made  by many individuals\n- on  behalf of the Apache Software  Foundation and was  originally created by\n- Stefano Mazzocchi  <stefano@apache.org>. For more  information on the Apache\n- Software Foundation, please see <http://www.apache.org/>.\n-\n-*/\n-package org.apache.cocoon.selection;\n-\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.Map;\n-\n-import org.apache.avalon.framework.configuration.Configurable;\n-import org.apache.avalon.framework.configuration.Configuration;\n-import org.apache.avalon.framework.configuration.ConfigurationException;\n-import org.apache.avalon.framework.parameters.Parameters;\n-import org.apache.cocoon.environment.ObjectModelHelper;\n-import org.apache.commons.jxpath.JXPathContext;\n-\n-/**\n- * Additional to the inherited functionality from its superclass ExceptionSelector,\n- * this selector allows to define xpath expressions to evaluate supplemental information \n- * given in the thrown exception. \n- * The configuration of this selector allows to map not only exceptions but also\n- * xpath expressions to symbolic names that are used in the &lt;map:when> alternatives.\n- * <p>\n- * Example configuration :\n- * <pre>\n- *   &lt;map:selector type=\"error\" src=\"....XPathExceptionSelector\">\n- *     &lt;exception name=\"denied\" class=\"my.comp.auth.AuthenticationFailure\">\n- *       &lt;xpath name=\"PasswordWrong\" test=\"authCode=10\"/>\n- *       &lt;xpath name=\"PasswordExpired\" test=\"errorCode=11\"/>\n- *       &lt;xpath name=\"AccessForbidden\" test=\"errorCode&gt;11\"/>\n- *     &lt;/exception>\t\n- *   &lt;/map:selector>\n- * </pre>\n- * This example shows several features :\n- * <li>the test is the xpath expression that will be evaluated against the exception ,</li>\n- * <li>an xpath expression can be given a name, which is used in the &lt;map:when> tests,</li>\n- *\n- * @author <a href=\"mailto:juergen.seitz@basf-it-services.com\">J&uuml;rgen Seitz</a>\n- * @since 2.1\n- * @version CVS $Id: JXPathExceptionSelector.java,v 1.3 2003/07/10 13:16:55 cziegeler Exp $\n- */\n-\n-public class JXPathExceptionSelector\n-    extends ExceptionSelector\n-    implements Configurable {\n-\n-    private Map exception2XPath = new HashMap();\n-\n-    public void configure(Configuration conf) throws ConfigurationException {\n-\n-        super.configure(conf);\n-\n-        Configuration[] children = conf.getChildren(\"exception\");\n-        Configuration[] xPathChildren;\n-\n-        for (int i = 0; i < children.length; i++) {\n-            // Check if there are XPath-Expressions configured\n-            xPathChildren = children[i].getChildren(\"xpath\");\n-            Map xPathMap = new HashMap();\n-            for (int j = 0; j < xPathChildren.length; j++) {\n-                Configuration xPathChild = xPathChildren[j];\n-\n-                String xPathName = xPathChild.getAttribute(\"name\");\n-                String xPath = xPathChild.getAttribute(\"test\");\n-\n-                xPathMap.put(xPath, xPathName);\n-            }\n-            if (xPathMap.size() > 0)\n-                // store xpath - config if there is some\n-                exception2XPath.put(\n-                    children[i].getAttribute(\"name\", null),\n-                    xPathMap);\n-        }\n-    }\n-\n-    /**\n-     * Compute the exception type, given the configuration and the exception stored in the object model.\n-     * \n-     * @see ObjectModelHelper#getThrowable(java.util.Map)\n-     */\n-    public Object getSelectorContext(Map objectModel, Parameters parameters) {\n-\n-        // get exceptionName from super class\n-        String exceptionName =\n-            (String) super.getSelectorContext(objectModel, parameters);\n-\n-        if (exceptionName != null) {\n-            // get Throwable\n-            Throwable t = ObjectModelHelper.getThrowable(objectModel);\n-\n-            Map xPathMap = (Map) exception2XPath.get(exceptionName);\n-            if (xPathMap != null) {\n-                // create a context for the thrown exception\n-                JXPathContext context = JXPathContext.newContext(t);\n-\n-                for (Iterator iterator = xPathMap.keySet().iterator();\n-                    iterator.hasNext();\n-                    ) {\n-                    String element = (String) iterator.next();\n-                    if (context.getValue(element).equals(Boolean.TRUE))\n-                        // return the configured name if the expression is succesfull\n-                        return xPathMap.get(element);\n-                }\n-            }\n-        }\n-\n-        return null;\n-\n-    }\n-}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/b64c46f57f844d6277bb74023353c5e040c2a934",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a3975280a5158eb2fd4c422f58156c42f7009ed7",
        "message": "Fixing NPE. Thanks to Volker!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25249 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_80",
        "file": [
            {
                "sha": "c961926068ca17d29e0d52c92a68d89f39766db4",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/sitemap/SwitchSelectNode.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/b64c46f57f844d6277bb74023353c5e040c2a934/src/java/org/apache/cocoon/components/treeprocessor/sitemap/SwitchSelectNode.java",
                "raw_url": "https://github.com/apache/cocoon/raw/b64c46f57f844d6277bb74023353c5e040c2a934/src/java/org/apache/cocoon/components/treeprocessor/sitemap/SwitchSelectNode.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/sitemap/SwitchSelectNode.java?ref=b64c46f57f844d6277bb74023353c5e040c2a934",
                "patch": "@@ -71,7 +71,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n /**\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: SwitchSelectNode.java,v 1.1 2003/03/09 00:09:22 pier Exp $\n+ * @version CVS $Id: SwitchSelectNode.java,v 1.2 2003/07/29 06:28:54 cziegeler Exp $\n  */\n \n public class SwitchSelectNode extends SimpleSelectorProcessingNode\n@@ -128,6 +128,9 @@ public final boolean invoke(Environment env, InvokeContext context)\n         if (this.threadSafeSelector != null) {\n \n             Object ctx = this.threadSafeSelector.getSelectorContext(objectModel, resolvedParams);\n+            if ( ctx == null ) {\n+                return false;\n+            }\n \n             for (int i = 0; i < this.whenTests.length; i++) {\n                 if (this.threadSafeSelector.select(whenTests[i].resolve(context, objectModel), ctx)) {\n@@ -145,9 +148,12 @@ public final boolean invoke(Environment env, InvokeContext context)\n             SwitchSelector selector = (SwitchSelector)this.selector.select(this.componentName);\n \n             Object ctx = selector.getSelectorContext(objectModel, resolvedParams);\n-\n+           \n             try {\n-\n+                if ( ctx == null ) {\n+                    return false;\n+                }\n+                \n                 for (int i = 0; i < this.whenTests.length; i++) {\n                     if (selector.select(whenTests[i].resolve(context, objectModel), ctx)) {\n                         return invokeNodes(this.whenNodes[i], env, context);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d558194301f3b88971dec532ef706a61d1ede0b5",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/c0c2d15536d06832a4332f112453398aa1aea729",
        "message": "fixed NPE: logger was used before it is initialized\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25112 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_81",
        "file": [
            {
                "sha": "853a860f7142eef4b469e3a9b680f36009141a97",
                "filename": "src/java/org/apache/cocoon/bean/CocoonBean.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/d558194301f3b88971dec532ef706a61d1ede0b5/src/java/org/apache/cocoon/bean/CocoonBean.java",
                "raw_url": "https://github.com/apache/cocoon/raw/d558194301f3b88971dec532ef706a61d1ede0b5/src/java/org/apache/cocoon/bean/CocoonBean.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/bean/CocoonBean.java?ref=d558194301f3b88971dec532ef706a61d1ede0b5",
                "patch": "@@ -105,7 +105,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:nicolaken@apache.org\">Nicola Ken Barozzi</a>\n  * @author <a href=\"mailto:vgritsenko@apache.org\">Vadim Gritsenko</a>\n  * @author <a href=\"mailto:uv@upaya.co.uk\">Upayavira</a>\n- * @version CVS $Id: CocoonBean.java,v 1.13 2003/06/27 13:50:38 upayavira Exp $\n+ * @version CVS $Id: CocoonBean.java,v 1.14 2003/07/18 05:00:06 joerg Exp $\n  */\n public class CocoonBean {\n \n@@ -158,6 +158,7 @@ public CocoonBean() {\n     public void initialize() throws Exception {\n         // @todo@ when does the logger get initialised? uv\n         // @todo@ these should log then throw exceptions back to the caller, not use system.exit()\n+        setLogLevel(\"ERROR\");\n \n         if (contextDir.equals(\"\")) {\n             String error =\n@@ -178,7 +179,6 @@ public void initialize() throws Exception {\n             log.fatalError(error);\n             throw new ProcessingException(error);\n         }\n-        setLogLevel(\"ERROR\");\n         this.context = getDir(this.contextDir, \"context\");\n         this.work = getDir(workDir, \"working\");\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e92d08eece1efa82d9b585f55940dca2ae15122b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/4cea254eba82bf68c2f2525331fc29526c398938",
        "message": "stab at thread safety, and fix an NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25080 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_82",
        "file": [
            {
                "sha": "7cb2103ff5e5efbebf8766921973974e39f9c302",
                "filename": "src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java",
                "status": "modified",
                "additions": 66,
                "deletions": 56,
                "changes": 122,
                "blob_url": "https://github.com/apache/cocoon/blob/e92d08eece1efa82d9b585f55940dca2ae15122b/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e92d08eece1efa82d9b585f55940dca2ae15122b/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/DefaultEventRegistryImpl.java?ref=e92d08eece1efa82d9b585f55940dca2ae15122b",
                "patch": "@@ -81,7 +81,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * \n  * @since 2.1\n  * @author <a href=\"mailto:ghoward@apache.org\">Geoff Howard</a>\n- * @version CVS $Id: DefaultEventRegistryImpl.java,v 1.1 2003/07/14 02:50:45 ghoward Exp $\n+ * @version CVS $Id: DefaultEventRegistryImpl.java,v 1.2 2003/07/15 02:02:02 ghoward Exp $\n  */\n public class DefaultEventRegistryImpl \n         extends AbstractLogEnabled\n@@ -104,10 +104,21 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n      * @param key\n      */\n     public void register(Event e, PipelineCacheKey key) {\n-        m_keyMMap.put(key,e);\n-        m_eventMMap.put(e,key);\n+        synchronized(this) {\n+            m_keyMMap.put(key,e);\n+            m_eventMMap.put(e,key);\n+        }\n     }\n \n+    /**\n+     * Remove all registered data.\n+     */\n+    public void clear() {\n+        synchronized(this) {\n+            m_keyMMap.clear();\n+            m_eventMMap.clear();\n+        }\n+    }\n \n     /**\n      * Retrieve all pipeline keys mapped to this event.\n@@ -124,6 +135,15 @@ public void register(Event e, PipelineCacheKey key) {\n         }\n     }\n \n+    /**\n+     * Return all pipeline keys mapped to any event\n+     */\n+    public PipelineCacheKey[] allKeys() {\n+        Set keys = this.m_keyMMap.keySet();\n+        return (PipelineCacheKey[])keys.toArray(\n+                        new PipelineCacheKey[keys.size()]);\n+    }\n+\n     /**\n      * When a CachedResponse is removed from the Cache, any entries \n      * in the event mapping must be cleaned up.\n@@ -132,9 +152,10 @@ public void removeKey(PipelineCacheKey key) {\n         Collection coll = (Collection)m_keyMMap.get(key);\n         if (coll==null || coll.isEmpty()) {\n             return;\n-        } else {\n-            // get the iterator over all matching PCK keyed \n-            // entries in the key-indexed MMap.\n+        } \n+        // get the iterator over all matching PCK keyed \n+        // entries in the key-indexed MMap.\n+        synchronized(this) {\n             Iterator it = coll.iterator();\n             while (it.hasNext()) {\n                 /* remove all entries in the event-indexed map where this\n@@ -148,58 +169,13 @@ public void removeKey(PipelineCacheKey key) {\n                     m_eventMMap.remove((Event)o,key);            \n                 }\n             }\n+    \n+            // remove all entries in the key-indexed map where this PCK key \n+            // is the key -- confused yet?\n+            m_keyMMap.remove(key);\n         }\n-        // remove all entries in the key-indexed map where this PCK key \n-        // is the key -- confused yet?\n-        m_keyMMap.remove(key);\n-    }\n-\n-    /**\n-     * Return the keys held as an array\n-     */\n-    public PipelineCacheKey[] allKeys() {\n-        Set keys = this.m_keyMMap.keySet();\n-        return (PipelineCacheKey[])keys.toArray(\n-                        new PipelineCacheKey[keys.size()]);\n     }\n \n-    /**\n-     * Remove all registered data.\n-     */\n-\tpublic void clear() {\n-        m_keyMMap.clear();\n-        m_eventMMap.clear();\n-\t}\n-\n-    /** \n-     * We must persist the data at container shutdown.  If the serialization \n-     * fails, an error is logged but not thrown.  The missing/invalid state is \n-     * handled at startup.\n-     */\n-    public void dispose() {\n-        ObjectOutputStream oos = null;\n-\t\ttry {\n-\t\t\toos = new ObjectOutputStream(\n-\t\t\t                            new FileOutputStream(this.m_persistentFile));\n-            EventRegistryDataWrapper ecdw = new EventRegistryDataWrapper();\n-            ecdw.setupMaps(this.m_keyMMap, this.m_eventMMap);\n-            oos.writeObject(ecdw);\n-            oos.flush();\n-\t\t} catch (FileNotFoundException e) {\n-\t\t\tgetLogger().error(\"Unable to persist EventRegistry\", e);\n-\t\t} catch (IOException e) {\n-            getLogger().error(\"Unable to persist EventRegistry\", e);\n-\t\t} finally {\n-            try {\n-                if (oos != null) oos.close();\n-            } catch (IOException e) {}\n-\t\t}\n-        m_keyMMap.clear();\n-        m_keyMMap = null;\n-        m_eventMMap.clear();\n-        m_eventMMap = null;\n-\t}\n-\n     /**\n      * Set up the persistence file.\n      */\n@@ -226,7 +202,41 @@ public void contextualize(Context context) throws ContextException {\n \tpublic boolean init() {\n         return recover();\n \t}\n-    \n+\n+    /** \n+     * Clean up resources at container shutdown.  An EventRegistry must persist \n+     * its data.  If the serialization fails, an error is logged but not thrown  \n+     * because missing/invalid state is handled at startup.\n+     */\n+    public void dispose() {\n+        ObjectOutputStream oos = null;\n+        try {\n+            oos = new ObjectOutputStream(\n+                                        new FileOutputStream(this.m_persistentFile));\n+            EventRegistryDataWrapper ecdw = new EventRegistryDataWrapper();\n+            ecdw.setupMaps(this.m_keyMMap, this.m_eventMMap);\n+            oos.writeObject(ecdw);\n+            oos.flush();\n+        } catch (FileNotFoundException e) {\n+            getLogger().error(\"Unable to persist EventRegistry\", e);\n+        } catch (IOException e) {\n+            getLogger().error(\"Unable to persist EventRegistry\", e);\n+        } finally {\n+            try {\n+                if (oos != null) oos.close();\n+            } catch (IOException e) {}\n+        }\n+        m_keyMMap.clear();\n+        m_keyMMap = null;\n+        m_eventMMap.clear();\n+        m_eventMMap = null;\n+    }\n+\n+    /* \n+     * I don't think this needs to get synchronized because it should \n+     * only be called during initialize, which should only be called \n+     * once by the container.\n+     */\n     private boolean recover() {\n         if (this.m_persistentFile.exists()) {\n             ObjectInputStream ois = null;"
            },
            {
                "sha": "965c52ace6028bbc3ee431beeb7e45962c04bc24",
                "filename": "src/blocks/eventcache/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/e92d08eece1efa82d9b585f55940dca2ae15122b/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e92d08eece1efa82d9b585f55940dca2ae15122b/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/eventcache/java/org/apache/cocoon/caching/impl/EventAwareCacheImpl.java?ref=e92d08eece1efa82d9b585f55940dca2ae15122b",
                "patch": "@@ -73,7 +73,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * TODO: Handle MultiThreading\n  * \n  * @author Geoff Howard (ghoward@apache.org)\n- * @version $Id: EventAwareCacheImpl.java,v 1.1 2003/07/14 02:50:45 ghoward Exp $\n+ * @version $Id: EventAwareCacheImpl.java,v 1.2 2003/07/15 02:02:02 ghoward Exp $\n  */\n public class EventAwareCacheImpl \n         extends CacheImpl \n@@ -137,7 +137,9 @@ public void remove(PipelineCacheKey key) {\n      * @param e The Event to be processed.\n      */\n     public void processEvent(Event e) {\n+        if (e == null) return;\n         PipelineCacheKey[] pcks = m_eventRegistry.keysForEvent(e);\n+        if (pcks == null) return;\n         for (int i=0;i<pcks.length; i++) {\n             if (pcks[i] != null) {\n                 if (getLogger().isDebugEnabled()) {\n@@ -178,6 +180,7 @@ public void initialize() throws Exception {\n      */\n     public void veryifyEventCache() {\n         PipelineCacheKey[] pcks = m_eventRegistry.allKeys();\n+        if (pcks == null) return;\n         for (int i=0; i<pcks.length; i++) {\n             if (!this.containsKey(pcks[i])) {\n                 m_eventRegistry.removeKey(pcks[i]);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2afe8a2679ce107bd1e6404a32360b8395a0f24b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/cc4fa301c5148ee3d88e5cf4daad095ab543d14f",
        "message": "Removed println's and fixed NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24964 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_83",
        "file": [
            {
                "sha": "1a226ffc6f711a023a07817c432f73f4e3c76157",
                "filename": "src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.java",
                "status": "modified",
                "additions": 6,
                "deletions": 8,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/2afe8a2679ce107bd1e6404a32360b8395a0f24b/src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.java",
                "raw_url": "https://github.com/apache/cocoon/raw/2afe8a2679ce107bd1e6404a32360b8395a0f24b/src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.java?ref=2afe8a2679ce107bd1e6404a32360b8395a0f24b",
                "patch": "@@ -121,8 +121,6 @@ public void jsFunction_setModel(Object obj) throws Exception {\n         context = JXPathContext.newContext(model);\n         form.setAutoValidate(false);\n         if (validatorNamespace != null && validatorDocument != null) {\n-            System.out.println(\"validatorNS=\"+validatorNamespace);\n-            System.out.println(\"validatorDoc=\"+validatorDocument);\n             SourceResolver resolver = \n                 getCocoon().getEnvironment();\n             Source schemaSrc = resolver.resolveURI(validatorDocument);\n@@ -154,12 +152,12 @@ public void jsFunction_forwardTo(String uri,\n             (FOM_WebContinuation)unwrap(continuation);\n         String redUri = \"cocoon://\" + \n             cocoon.getEnvironment().getURIPrefix() + uri;\n-         cocoon.getInterpreter().forwardTo(getTopLevelScope(cocoon),\n-                                           cocoon,\n-                                           redUri, \n-                                           unwrap(bizData),\n-                                           fom_wk.getWebContinuation(),\n-                                           cocoon.getEnvironment());\n+        cocoon.getInterpreter().forwardTo(getTopLevelScope(cocoon),\n+                                          cocoon,\n+                                          redUri, \n+                                          unwrap(bizData),\n+                                          fom_wk == null ? null: fom_wk.getWebContinuation(),\n+                                          cocoon.getEnvironment());\n     }\n \n     public void jsFunction_addViolation(String xpath, String message) "
            },
            {
                "sha": "0690c9931845bd53125a456c9e5c5413e3c2ab8c",
                "filename": "src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.js",
                "status": "modified",
                "additions": 4,
                "deletions": 6,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/2afe8a2679ce107bd1e6404a32360b8395a0f24b/src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.js",
                "raw_url": "https://github.com/apache/cocoon/raw/2afe8a2679ce107bd1e6404a32360b8395a0f24b/src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.js",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/scratchpad/src/org/apache/cocoon/components/jxforms/flow/javascript/JXForm.js?ref=2afe8a2679ce107bd1e6404a32360b8395a0f24b",
                "patch": "@@ -124,7 +124,7 @@ JXForm.prototype.sendView = function(uri, validator) {\n         // will return right here: it is used to implement \n         // <xf:submit continuation=\"forward\">\n         this.populateForm();\n-\tvar phase = cocoon.request.getAttribute(\"jxform-submit-phase\");\n+        var phase = cocoon.request.getAttribute(\"jxform-submit-phase\");\n         if (validator != undefined) {\n             validator(this);\n         }\n@@ -139,11 +139,9 @@ JXForm.prototype.sendView = function(uri, validator) {\n \n JXForm.prototype.finish = function(uri) {\n     if (uri != undefined) {\n-        this.form.remove(cocoon.environment.objectModel, this.id);\n-        this.form.save(cocoon.environment.objectModel, \"request\");\n-        this.forwardTo(uri,\n-                       this.getModel(), \n-                       null);\n+        this.removeForm();\n+        this.saveForm();\n+        this.forwardTo(uri, this.getModel(), null);\n     }\n     if (this.rootContinuation != null) {\n         this.rootContinuation.invalidate();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/1207f106b7aacb026dc4907f7898fb2b9b52c613",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/c135c064392a839f3206a0badcff9197cd5c8989",
        "message": "Fixed potential NPE in setValue\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24881 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_84",
        "file": [
            {
                "sha": "1835fa68b73a023878d46ef532fd8ac4bdfe71fb",
                "filename": "src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Field.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/1207f106b7aacb026dc4907f7898fb2b9b52c613/src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Field.java",
                "raw_url": "https://github.com/apache/cocoon/raw/1207f106b7aacb026dc4907f7898fb2b9b52c613/src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Field.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Field.java?ref=1207f106b7aacb026dc4907f7898fb2b9b52c613",
                "patch": "@@ -88,7 +88,7 @@ public Object getValue() {\n     }\n \n     public void setValue(Object object) {\n-        if (!definition.getDatatype().getTypeClass().isAssignableFrom(object.getClass()))\n+        if (object != null && !definition.getDatatype().getTypeClass().isAssignableFrom(object.getClass()))\n             throw new RuntimeException(\"Tried to set value of field \\\"\" + getFullyQualifiedId() + \"\\\" with an object of an incorrect type.\");\n \n         value = object;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/746127e69cd8f6e9106335ce4f2c8d56b0f74ab5",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/bd258295eb7e3ccf2eda4935b6534257e3b20676",
        "message": "fixed bug 14977: NPE in SQLTransformer.serializeData()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24670 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_85",
        "file": [
            {
                "sha": "b18711fa51c71060e4c1b4378f5b28e82720ca20",
                "filename": "status.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/746127e69cd8f6e9106335ce4f2c8d56b0f74ab5/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/746127e69cd8f6e9106335ce4f2c8d56b0f74ab5/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=746127e69cd8f6e9106335ce4f2c8d56b0f74ab5",
                "patch": "@@ -181,6 +181,9 @@\n   <changes>\n \n  <release version=\"@version@\" date=\"@date@\">\n+  <action dev=\"JH\" type=\"fix\" fixes-bug=\"14977\" due-to=\"Tony Culshaw\" due-to-email=\"tony@cultech.com.au\">\n+    fixed NPE in SQLTransformer.serializeData()\n+  </action>\n   <action dev=\"JH\" type=\"add\" fixes-bug=\"20477\" due-to=\"Arje Cahn\" due-to-email=\"arje@hippo.nl\">\n    Added cHTML/iMode \"Hello World!\" sample (provided by Arje Cahn)\n   </action>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5c6042f27a7c2208dd642c78e5911cd8960ddba3",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/5cc930e9cf2d275cdd0d47079fa709b41a8892aa",
        "message": "fixed bug 14977: NPE in serializeData()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24668 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_86",
        "file": [
            {
                "sha": "9309c15041d8da966c07bf25f051ffaea840bf5e",
                "filename": "src/blocks/databases/java/org/apache/cocoon/transformation/SQLTransformer.java",
                "status": "modified",
                "additions": 14,
                "deletions": 13,
                "changes": 27,
                "blob_url": "https://github.com/apache/cocoon/blob/5c6042f27a7c2208dd642c78e5911cd8960ddba3/src/blocks/databases/java/org/apache/cocoon/transformation/SQLTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5c6042f27a7c2208dd642c78e5911cd8960ddba3/src/blocks/databases/java/org/apache/cocoon/transformation/SQLTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/databases/java/org/apache/cocoon/transformation/SQLTransformer.java?ref=5c6042f27a7c2208dd642c78e5911cd8960ddba3",
                "patch": "@@ -86,7 +86,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:giacomo.pati@pwr.ch\">Giacomo Pati</a>\n  *         (PWR Organisation & Entwicklung)\n  * @author <a href=\"mailto:sven.beauprez@the-ecorp.com\">Sven Beauprez</a>\n- * @version CVS $Id: SQLTransformer.java,v 1.5 2003/03/24 14:33:56 stefano Exp $\n+ * @version CVS $Id: SQLTransformer.java,v 1.6 2003/06/11 00:28:31 joerg Exp $\n  */\n public class SQLTransformer\n   extends AbstractSAXTransformer\n@@ -1038,7 +1038,7 @@ protected void execute() throws SQLException {\n                     sb.append( query.getColumnValue( av.name ) );\n                 }\n             }\n-            \n+\n             String query = StringUtils.replace(sb.toString().trim(), \"\\r\", \" \", -1);\n             // Test, if this is an update (by comparing with select)\n             if ( !isstoredprocedure && !isupdate) {\n@@ -1175,32 +1175,33 @@ protected void addQueryPart( Object object ) {\n             query_parts.addElement( object );\n         }\n \n-        protected void serializeData(ComponentManager manager,\n-                                     String           value)\n-        throws SQLException, SAXException {\n+        protected void serializeData(ComponentManager manager, String value)\n+                throws SQLException, SAXException {\n             if (value != null) {\n                 value = value.trim();\n                 // Could this be XML ?\n                 if (value.length() > 0 && value.charAt(0) == '<') {\n                     try {\n-                        if (transformer.parser != null) {\n+                        if (transformer.parser == null) {\n                             transformer.parser = (SAXParser)manager.lookup(SAXParser.ROLE);\n                         }\n-                        if (transformer.compiler != null) {\n-                            compiler = (XMLSerializer)manager.lookup(XMLSerializer.ROLE);\n+                        if (transformer.compiler == null) {\n+                            transformer.compiler = (XMLSerializer)manager.lookup(XMLSerializer.ROLE);\n                         }\n-                        if (transformer.interpreter != null) {\n-                            interpreter = (XMLDeserializer)manager.lookup(XMLDeserializer.ROLE);\n+                        if (transformer.interpreter == null) {\n+                            transformer.interpreter = (XMLDeserializer)manager.lookup(XMLDeserializer.ROLE);\n                         }\n-                        parser.parse(new InputSource(new StringReader(\"<root>\"+value+\"</root>\")), compiler);\n+                        transformer.parser.parse(new InputSource(new StringReader(\"<root>\" + value + \"</root>\")),\n+                                                 transformer.compiler);\n \n                         IncludeXMLConsumer filter = new IncludeXMLConsumer(transformer, transformer);\n                         filter.setIgnoreRootElement(true);\n \n-                        interpreter.setConsumer(filter);\n+                        transformer.interpreter.setConsumer(filter);\n \n-                        interpreter.deserialize(compiler.getSAXFragment());\n+                        transformer.interpreter.deserialize(transformer.compiler.getSAXFragment());\n                     } catch (Exception local) {\n+                        // FIXME: bad coding \"catch(Exception)\"\n                         // if an exception occured the data was not xml\n                         transformer.data(value);\n                     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/3d4c57d5893b73d252f79056588f9ade6723dd37",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/d516f22be430a643e7c4f6e2ba25ef836ce79e48",
        "message": "fixed NPE in recycle()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24285 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_87",
        "file": [
            {
                "sha": "8f2d94ff246ef7c6bc3d2f58c0c44d4d4df830b4",
                "filename": "src/java/org/apache/cocoon/transformation/TraxTransformer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/3d4c57d5893b73d252f79056588f9ade6723dd37/src/java/org/apache/cocoon/transformation/TraxTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3d4c57d5893b73d252f79056588f9ade6723dd37/src/java/org/apache/cocoon/transformation/TraxTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/transformation/TraxTransformer.java?ref=3d4c57d5893b73d252f79056588f9ade6723dd37",
                "patch": "@@ -152,7 +152,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:ovidiu@cup.hp.com\">Ovidiu Predescu</a>\n  * @author <a href=\"mailto:marbut@hplb.hpl.hp.com\">Mark H. Butler</a>\n  * @author <a href=\"mailto:stefano@apache.org\">Stefano Mazzocchi</a>\n- * @version CVS $Id: TraxTransformer.java,v 1.5 2003/05/02 15:25:23 bruno Exp $\n+ * @version CVS $Id: TraxTransformer.java,v 1.6 2003/05/06 09:00:17 bruno Exp $\n  */\n public class TraxTransformer extends AbstractTransformer\n implements Transformer, Composable, Configurable, CacheableProcessingComponent, Disposable {\n@@ -498,7 +498,7 @@ public void recycle() {\n         }\n         this.resolver = null;\n         this.par = null;\n-        if (this.finishedDocument == false) {\n+        if (this.finishedDocument == false && transformerHandler != null) {\n             // This situation will only occur if an exception occured during pipeline execution.\n             // If Xalan is used in incremental mode, it is important that endDocument is called, otherwise\n             // the thread on which it runs the transformation will keep waiting."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/7e2c68192e69c943f59aa7d89805b2ffe24d05d7",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a9f38aba9e6cb006ec1e8cf3c3fdc4d28becc8b2",
        "message": "Helps better instead of a NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24260 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_88",
        "file": [
            {
                "sha": "0c45e6363b9b85e6662fa61adde9d7bbc74aa3b3",
                "filename": "src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/7e2c68192e69c943f59aa7d89805b2ffe24d05d7/src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/7e2c68192e69c943f59aa7d89805b2ffe24d05d7/src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java?ref=7e2c68192e69c943f59aa7d89805b2ffe24d05d7",
                "patch": "@@ -1544,6 +1544,11 @@ private void execute(final XMLConsumer consumer,\n                                       startElement.localName,\n                                       startElement.raw,\n                                       startElement.attributes);\n+                if (newForm == null) {\n+                    throw new SAXParseException(\"A form with id=\\\"\" + id + \"\\\" does not exist\",\n+                                                ev.location,\n+                                                null);\n+                }\n                 rootContext =\n                     jxpathContextFactory.newContext(null, \n                                                     newForm.getModel());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/0901c518f68c63f679bf7b89369c09385b287d43",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b787a0d1800cdaa3d98ae4f5c5ed521a359218da",
        "message": "Fixed a NPE in resolve(String systemId)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@23758 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_89",
        "file": [
            {
                "sha": "bf56cbc19cf376a701622dddd55d4e70d56580ff",
                "filename": "src/java/org/apache/cocoon/environment/AbstractEnvironment.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/0901c518f68c63f679bf7b89369c09385b287d43/src/java/org/apache/cocoon/environment/AbstractEnvironment.java",
                "raw_url": "https://github.com/apache/cocoon/raw/0901c518f68c63f679bf7b89369c09385b287d43/src/java/org/apache/cocoon/environment/AbstractEnvironment.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/environment/AbstractEnvironment.java?ref=0901c518f68c63f679bf7b89369c09385b287d43",
                "patch": "@@ -82,7 +82,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:Giacomo.Pati@pwr.ch\">Giacomo Pati</a>\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: AbstractEnvironment.java,v 1.3 2003/03/12 07:42:25 cziegeler Exp $\n+ * @version CVS $Id: AbstractEnvironment.java,v 1.4 2003/03/18 16:48:00 bruno Exp $\n  */\n public abstract class AbstractEnvironment extends AbstractLogEnabled implements Environment {\n \n@@ -352,15 +352,16 @@ public Source resolve(String systemId)\n         // get the wrapper class - we don't want to import the wrapper directly\n         // to avoid a direct dependency from the core to the deprecation package\n         if ( null == avalonToCocoonSourceWrapper ) {\n-            synchronized (avalonToCocoonSourceWrapper) {\n+            synchronized (this) {\n                 try {\n                     Class clazz = ClassUtils.loadClass(\"org.apache.cocoon.components.source.impl.AvalonToCocoonSource\");\n                     avalonToCocoonSourceWrapper = clazz.getConstructor(new Class[] {ClassUtils.loadClass(\"org.apache.excalibur.source.Source\"),\n                                                                                     ClassUtils.loadClass(\"org.apache.excalibur.source.SourceResolver\"),\n                                                                                     ClassUtils.loadClass(\"org.apache.cocoon.environment.Environment\")});\n                 } catch (Exception e) {\n                     throw new ProcessingException(\"The deprecated resolve() method of the environment was called.\" \n-                                                  +\"Please either update your code to use the new resolveURI() method or\" \r                                                  +\" install the deprecation support.\", e);\n+                                                  +\"Please either update your code to use the new resolveURI() method or\" \n+                                                  +\" install the deprecation support.\", e);\n                 }\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/dda6b598416fe84dce2feb4c56c7b8015fe86605",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/ff5bbb09314f37441686fdfedf95aaaf3563aa9c",
        "message": "Fixing some NPE with the new DOMStreamer\r\nPortal sample works again\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@23668 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_90",
        "file": [
            {
                "sha": "c973039e0d16511d5d2f39dad18d54bf96194fd5",
                "filename": "src/java/org/apache/cocoon/components/source/SourceUtil.java",
                "status": "modified",
                "additions": 5,
                "deletions": 10,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/dda6b598416fe84dce2feb4c56c7b8015fe86605/src/java/org/apache/cocoon/components/source/SourceUtil.java",
                "raw_url": "https://github.com/apache/cocoon/raw/dda6b598416fe84dce2feb4c56c7b8015fe86605/src/java/org/apache/cocoon/components/source/SourceUtil.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/source/SourceUtil.java?ref=dda6b598416fe84dce2feb4c56c7b8015fe86605",
                "patch": "@@ -93,7 +93,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:stephan@apache.org\">Stephan Michels</a>\n- * @version $Id: SourceUtil.java,v 1.1 2003/03/09 00:09:12 pier Exp $\n+ * @version $Id: SourceUtil.java,v 1.2 2003/03/14 08:24:12 cziegeler Exp $\n  */\n public final class SourceUtil {\n \n@@ -412,10 +412,6 @@ public static void writeDOM(String location,\n                 frag.normalize();\n \n                 if ( null != serializerName) {\n-                    // Lookup the Serializer\n-\t                // FIXME (CZ) : Due to the CM hierarchy we don't get the\n-\t                // correct serializer selector...\n-\t                // we now use the getSitemapComponentManager()\n \t\t\t\t\tComponentManager manager = CocoonComponentManager.getSitemapComponentManager();\n \n \t                ComponentSelector selector = null;\n@@ -426,8 +422,10 @@ public static void writeDOM(String location,\n \t                     serializer = (Serializer)selector.select(serializerName);\n \t                     oStream = ws.getOutputStream();\n \t                     serializer.setOutputStream(oStream);\n+                         serializer.startDocument();\n \t                     DOMStreamer streamer = new DOMStreamer(serializer);\n \t                     streamer.stream(frag);\n+                         serializer.endDocument();\n \t                } catch (ComponentException e) {\n \t                \tthrow new ProcessingException(\"Unable to lookup serializer.\", e);\n \t\t\t\t\t} finally {\n@@ -455,11 +453,6 @@ public static void writeDOM(String location,\n             } else {\n             \tString content;\n \t\t\t\tif ( null != serializerName) {\n-\t                // and now serializing...\n-\t                // Lookup the Serializer\n-\t                // FIXME (CZ) : Due to the CM hierarchy we don't get the\n-\t                // correct serializer selector...\n-\t\t\t\t\t// we now use the getSitemapComponentManager()\n \t\t\t\t\tComponentManager  manager = CocoonComponentManager.getSitemapComponentManager();\n                     \n                     ComponentSelector selector = null;\n@@ -469,8 +462,10 @@ public static void writeDOM(String location,\n                         selector = (ComponentSelector)manager.lookup(Serializer.ROLE + \"Selector\");\n                         serializer = (Serializer)selector.select(serializerName);\n                         serializer.setOutputStream(oStream);\n+                        serializer.startDocument();\n                         DOMStreamer streamer = new DOMStreamer(serializer);\n                         streamer.stream(frag);\n+                        serializer.endDocument();\n \t\t\t\t\t} catch (ComponentException e) {\n \t\t\t\t\t\tthrow new ProcessingException(\"Unable to lookup serializer.\", e);\n                     } finally {"
            },
            {
                "sha": "a1ff5e24740687c83aad659610c5641aa5942587",
                "filename": "src/java/org/apache/cocoon/xml/AbstractDOMFragment.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/dda6b598416fe84dce2feb4c56c7b8015fe86605/src/java/org/apache/cocoon/xml/AbstractDOMFragment.java",
                "raw_url": "https://github.com/apache/cocoon/raw/dda6b598416fe84dce2feb4c56c7b8015fe86605/src/java/org/apache/cocoon/xml/AbstractDOMFragment.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/xml/AbstractDOMFragment.java?ref=dda6b598416fe84dce2feb4c56c7b8015fe86605",
                "patch": "@@ -68,7 +68,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * the results of <code>toDOM()</code> that must be implemented by concrete subclasses.\n  *\n  * @author <a href=\"mailto:sylvain.wallez@anyware-tech.com\">Sylvain Wallez</a>\n- * @version CVS $Id: AbstractDOMFragment.java,v 1.1 2003/03/09 00:09:45 pier Exp $\n+ * @version CVS $Id: AbstractDOMFragment.java,v 1.2 2003/03/14 08:24:12 cziegeler Exp $\n  */\n \n public abstract class AbstractDOMFragment implements XMLFragment {\n@@ -103,7 +103,9 @@ public void toSAX(ContentHandler handler) throws SAXException {\n         }\n \n         // Stream the document fragment\n+        handler.startDocument();\n         DOMStreamer streamer = new DOMStreamer(handler);\n         streamer.stream(df);\n+        handler.endDocument();\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/3d5355c7458015d8dbbe0096f3b6cacec1c7f066",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2e3075e4a0023ab62cda48396e09dbd38d496cd5",
        "message": "Fixing NPE with JDK 1.3\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@23635 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_91",
        "file": [
            {
                "sha": "df4e3b026af998968b1e2ab25624da5030c83ec6",
                "filename": "src/java/org/apache/cocoon/xml/XMLUtils.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/3d5355c7458015d8dbbe0096f3b6cacec1c7f066/src/java/org/apache/cocoon/xml/XMLUtils.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3d5355c7458015d8dbbe0096f3b6cacec1c7f066/src/java/org/apache/cocoon/xml/XMLUtils.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/xml/XMLUtils.java?ref=3d5355c7458015d8dbbe0096f3b6cacec1c7f066",
                "patch": "@@ -78,7 +78,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:barozzi@nicolaken.com\">Nicola Ken Barozzi</a>\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n- * @version CVS $Id: XMLUtils.java,v 1.1 2003/03/09 00:09:46 pier Exp $\n+ * @version CVS $Id: XMLUtils.java,v 1.2 2003/03/12 15:11:15 cziegeler Exp $\n  */\n public class XMLUtils{\n \n@@ -226,8 +226,14 @@ public static String serializeNode(Node node, Properties format)\n             transformerHandler = ((SAXTransformerFactory)TransformerFactory.newInstance()).newTransformerHandler();\n             transformerHandler.getTransformer().setOutputProperties(format);\n             transformerHandler.setResult(new StreamResult(writer));\n+            if ( node.getNodeType() != Node.DOCUMENT_NODE ) {\n+                transformerHandler.startDocument();\n+            } \n             DOMStreamer domStreamer = new DOMStreamer(transformerHandler, transformerHandler);\n             domStreamer.stream(node);\n+            if ( node.getNodeType() != Node.DOCUMENT_NODE ) {\n+                transformerHandler.endDocument();\n+            } \n             return writer.toString();\n         } catch (javax.xml.transform.TransformerException local) {\n             throw new ProcessingException(\"TransformerException: \" + local, local);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/58088a31ba7b18e509c685c4db9983a5649281b6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/f1bccc338fed9842801d65f649f26195c2ac98e1",
        "message": "Added context-path attributes for demo servlet declarations in order to avoid NPEs.\nCurrently we don't support empty context-path and we have no fallback mechanism for such situation. This means there will be NPEs as soon as the demo servlet starts to use getResource() method of ServletContext class) so it's quastionable if we should allow context-path to be optional at all.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@634848 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_92",
        "file": [
            {
                "sha": "7d0755acdd34d41ffda486860e12638262d60128",
                "filename": "core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo1-servletService.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/58088a31ba7b18e509c685c4db9983a5649281b6/core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo1-servletService.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/58088a31ba7b18e509c685c4db9983a5649281b6/core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo1-servletService.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo1-servletService.xml?ref=58088a31ba7b18e509c685c4db9983a5649281b6",
                "patch": "@@ -26,7 +26,7 @@\n                            http://cocoon.apache.org/schema/servlet http://cocoon.apache.org/schema/servlet/cocoon-servlet-1.0.xsd\">\n \n   <bean name=\"org.apache.cocoon.servletservice.demo1.servlet\" class=\"org.apache.cocoon.servletservice.demo1.DemoServlet\">\n-    <servlet:context mount-path=\"/test1\">\n+    <servlet:context mount-path=\"/test1\" context-path=\"blockcontext:/cocoon-servlet-service-sample/\">\n       <servlet:init-params>\n         <entry key=\"foo\" value=\"baz\"/>\n       </servlet:init-params>"
            },
            {
                "sha": "bdb472201d29aba292908bea9efdf01ea7b24cd9",
                "filename": "core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo2-servletService.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/58088a31ba7b18e509c685c4db9983a5649281b6/core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo2-servletService.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/58088a31ba7b18e509c685c4db9983a5649281b6/core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo2-servletService.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-servlet-service/cocoon-servlet-service-sample/src/main/resources/META-INF/cocoon/spring/cocoon-servlet-service-demo2-servletService.xml?ref=58088a31ba7b18e509c685c4db9983a5649281b6",
                "patch": "@@ -24,6 +24,6 @@\n                            http://cocoon.apache.org/schema/servlet http://cocoon.apache.org/schema/servlet/cocoon-servlet-1.0.xsd\">\n \n   <bean id=\"org.apache.cocoon.servletservice.demo2.servlet\" class=\"org.apache.cocoon.servletservice.demo2.DemoServlet\">\n-    <servlet:context mount-path=\"/test2\"/>\n+    <servlet:context mount-path=\"/test2\" context-path=\"blockcontext:/cocoon-servlet-service-sample/\"/>\n   </bean>\n </beans>\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/6eb09512caea876f8e5424aadb0059580b6fbf90",
        "message": "Fix NullPointerException when reloading sitemap.\nTreeProcessor.treeBuilder was not recycle()d before building new sitemap,\nso DefaultTreeBuilder.disposableNodes of old sitemap was collecting nodes\nfrom new sitemap. Added recycle().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28629 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_93",
        "file": [
            {
                "sha": "a849fffd87eb5123025c845bdd30d3091e611d68",
                "filename": "src/blocks/xsp/java/org/apache/cocoon/components/language/markup/LogicsheetCodeGenerator.java",
                "status": "modified",
                "additions": 6,
                "deletions": 7,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/blocks/xsp/java/org/apache/cocoon/components/language/markup/LogicsheetCodeGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/blocks/xsp/java/org/apache/cocoon/components/language/markup/LogicsheetCodeGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/xsp/java/org/apache/cocoon/components/language/markup/LogicsheetCodeGenerator.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -42,7 +42,7 @@\n  * @author <a href=\"mailto:ricardo@apache.org\">Ricardo Rocha</a>\n  * @author <a href=\"mailto:dims@yahoo.com\">Davanum Srinivas</a>\n  * @author <a href=\"mailto:vgritsenko@apache.org\">Vadim Gritsenko</a>\n- * @version CVS $Id: LogicsheetCodeGenerator.java,v 1.1 2004/03/10 12:58:04 stephan Exp $\n+ * @version CVS $Id: LogicsheetCodeGenerator.java,v 1.2 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n public class LogicsheetCodeGenerator extends AbstractLogEnabled implements MarkupCodeGenerator {\n \n@@ -85,8 +85,7 @@ public void initialize() {\n     /**\n      * Helper for TransformerFactory.\n      */\n-    private SAXTransformerFactory getTransformerFactory()\n-    {\n+    private SAXTransformerFactory getTransformerFactory() {\n         if(tfactory == null)  {\n             tfactory = (SAXTransformerFactory) TransformerFactory.newInstance();\n             tfactory.setErrorListener(new TraxErrorHandler(getLogger()));\n@@ -131,7 +130,7 @@ public void addLogicsheet(Logicsheet logicsheet) throws ProcessingException {\n      * @exception Exception If an error occurs during code generation\n      */\n     public String generateCode(Source source, AbstractXMLPipe filter)\n-            throws Exception {\n+    throws Exception {\n         try {\n             // set the root XMLReader of the transformer chain\n             this.end = filter;"
            },
            {
                "sha": "550a48cc8e06fe8ecfc32c07109f5d372192b67b",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/AbstractParentProcessingNode.java",
                "status": "modified",
                "additions": 15,
                "deletions": 19,
                "changes": 34,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/AbstractParentProcessingNode.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/AbstractParentProcessingNode.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/AbstractParentProcessingNode.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -22,15 +22,14 @@\n /**\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: AbstractParentProcessingNode.java,v 1.6 2004/06/11 08:51:57 cziegeler Exp $\n+ * @version CVS $Id: AbstractParentProcessingNode.java,v 1.7 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n-\n public abstract class AbstractParentProcessingNode extends AbstractProcessingNode {\n \n     public AbstractParentProcessingNode(String type) {\n         super(type);\n     }\n-    \n+\n     public AbstractParentProcessingNode() {\n     }\n \n@@ -40,14 +39,12 @@ public AbstractParentProcessingNode() {\n      * @param currentMap the <code>Map<code> of parameters produced by this node,\n      *            which is added to <code>listOfMap</code>.\n      */\n-\n-    protected final boolean invokeNodes(\n-        ProcessingNode[] nodes,\n-        Environment env,\n-        InvokeContext context,\n-        String currentName,\n-        Map currentMap)\n-      throws Exception {\n+    protected final boolean invokeNodes(ProcessingNode[] nodes,\n+                                        Environment env,\n+                                        InvokeContext context,\n+                                        String currentName,\n+                                        Map currentMap)\n+    throws Exception {\n \n         currentMap = this.executor.pushVariables(this, env.getObjectModel(), currentName, currentMap);\n         context.pushMap(currentName,currentMap);\n@@ -70,11 +67,10 @@ protected final boolean invokeNodes(\n     /**\n      * Invoke all nodes of a node array in order, until one succeeds.\n      */\n-    protected final boolean invokeNodes (\n-        ProcessingNode[] nodes,\n-        Environment env,\n-        InvokeContext context)\n-      throws Exception {\n+    protected final boolean invokeNodes (ProcessingNode[] nodes,\n+                                         Environment env,\n+                                         InvokeContext context)\n+    throws Exception {\n \n         for (int i = 0; i < nodes.length; i++) {\n             if (nodes[i].invoke(env, context)) {"
            },
            {
                "sha": "dcafa62a3a6ba5e7f2ed1cce38b1fca57553f874",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "status": "modified",
                "additions": 57,
                "deletions": 58,
                "changes": 115,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -45,42 +45,41 @@\n import org.apache.cocoon.sitemap.SitemapExecutor;\n import org.apache.cocoon.sitemap.impl.DefaultExecutor;\n \n-\n /**\n  * The concrete implementation of {@link Processor}, containing the evaluation tree and associated\n  * data such as component manager.\n- * \n- * @version CVS $Id: ConcreteTreeProcessor.java,v 1.2 2004/06/09 11:59:23 cziegeler Exp $\n+ *\n+ * @version CVS $Id: ConcreteTreeProcessor.java,v 1.3 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n public class ConcreteTreeProcessor extends AbstractLogEnabled implements Processor {\n \n \t/** The processor that wraps us */\n \tprivate TreeProcessor wrappingProcessor;\n-\t\n+\n \t/** Component manager defined by the &lt;map:components&gt; of this sitemap */\n     ComponentManager sitemapComponentManager;\n-    \n+\n     private ServiceManager serviceManager;\n- \n+\n     \t/** Processing nodes that need to be disposed with this processor */\n     private List disposableNodes;\n-   \n+\n     /** Root node of the processing tree */\n     private ProcessingNode rootNode;\n-    \n+\n     private Map sitemapComponentConfigurations;\n-    \n+\n     private Configuration componentConfigurations;\n-    \n+\n     /** Number of simultaneous uses of this processor (either by concurrent request or by internal requests) */\n     private int requestCount;\n-    \n+\n     /** The sitemap executor */\n     private SitemapExecutor sitemapExecutor;\n-    \n+\n     /** Release the executor */\n     private boolean releaseSitemapExecutor;\n-    \n+\n \t/** Builds a concrete processig, given the wrapping processor */\n \tpublic ConcreteTreeProcessor(TreeProcessor wrappingProcessor) {\n \t\tthis.wrappingProcessor = wrappingProcessor;\n@@ -98,7 +97,7 @@ public ConcreteTreeProcessor(TreeProcessor wrappingProcessor) {\n                     this.getLogger().error(\"Unable to lookup sitemap executor.\", ce);\n                 }\n             }\n-            if ( this.sitemapExecutor == null ) {                \n+            if ( this.sitemapExecutor == null ) {\n                 try {\n                     this.sitemapExecutor = (SitemapExecutor) this.getClass()\n                                  .getClassLoader()\n@@ -116,19 +115,19 @@ public ConcreteTreeProcessor(TreeProcessor wrappingProcessor) {\n             this.sitemapExecutor = this.wrappingProcessor.parent.concreteProcessor.sitemapExecutor;\n         }\n \t}\n-\t\n+\n \t/** Set the processor data, result of the treebuilder job */\n \tpublic void setProcessorData(ComponentManager manager, ProcessingNode rootNode, List disposableNodes) {\n \t\tif (this.sitemapComponentManager != null) {\n \t\t\tthrow new IllegalStateException(\"setProcessorData() can only be called once\");\n \t\t}\n-\t\t\n+\n \t\tthis.sitemapComponentManager = manager;\n \t\tthis.serviceManager = new ComponentManagerWrapper(manager);\n \t\tthis.rootNode = rootNode;\n \t\tthis.disposableNodes = disposableNodes;\n    \t}\n-\t\n+\n \t/** Set the sitemap component configurations (called as part of the tree building process) */\n     public void setComponentConfigurations(Configuration componentConfigurations) {\n         this.componentConfigurations = componentConfigurations;\n@@ -142,30 +141,30 @@ public void setComponentConfigurations(Configuration componentConfigurations) {\n     public Map getComponentConfigurations() {\n         // do we have the sitemap configurations prepared for this processor?\n         if ( null == this.sitemapComponentConfigurations ) {\n-            \n+\n             synchronized (this) {\n \n                 if ( this.sitemapComponentConfigurations == null ) {\n                     // do we have configurations?\n-                    final Configuration[] childs = (this.componentConfigurations == null \n-                                                     ? null \n+                    final Configuration[] childs = (this.componentConfigurations == null\n+                                                     ? null\n                                                      : this.componentConfigurations.getChildren());\n-                    \n+\n                     if ( null != childs ) {\n-        \n+\n                         if ( null == this.wrappingProcessor.parent ) {\n                             this.sitemapComponentConfigurations = new HashMap(12);\n                         } else {\n                             // copy all configurations from parent\n                             this.sitemapComponentConfigurations = new HashMap(\n-                            \t\t\tthis.wrappingProcessor.parent.getComponentConfigurations()); \n+                            \t\t\tthis.wrappingProcessor.parent.getComponentConfigurations());\n                         }\n-                        \n+\n                         // and now check for new configurations\n                         for(int m = 0; m < childs.length; m++) {\n-                            \n+\n                             final String r = this.wrappingProcessor.roleManager.getRoleForName(childs[m].getName());\n-                            this.sitemapComponentConfigurations.put(r, new ChainedConfiguration(childs[m], \n+                            this.sitemapComponentConfigurations.put(r, new ChainedConfiguration(childs[m],\n                                                                              (ChainedConfiguration)this.sitemapComponentConfigurations.get(r)));\n                         }\n                     } else {\n@@ -174,14 +173,14 @@ public Map getComponentConfigurations() {\n                             this.sitemapComponentConfigurations = Collections.EMPTY_MAP;\n                         } else {\n                             // use configuration from parent\n-                            this.sitemapComponentConfigurations = this.wrappingProcessor.parent.getComponentConfigurations(); \n+                            this.sitemapComponentConfigurations = this.wrappingProcessor.parent.getComponentConfigurations();\n                         }\n                     }\n                 }\n             }\n         }\n         return this.sitemapComponentConfigurations;    }\n-\t\n+\n     /**\n      * Mark this processor as needing to be disposed. Actual call to {@link #dispose()} will occur when\n      * all request processings on this processor will be terminated.\n@@ -191,21 +190,21 @@ public void markForDisposal() {\n \t\tsynchronized(this) {\n \t\t\tthis.requestCount--;\n \t\t}\n-\t\t\n+\n \t\tif (this.requestCount < 0) {\n \t\t\t// No more users : dispose right now\n \t\t\tdispose();\n \t\t}\n \t}\n-\t\n+\n \tpublic TreeProcessor getWrappingProcessor() {\n \t\treturn this.wrappingProcessor;\n \t}\n-\t\n+\n \tpublic Processor getRootProcessor() {\n \t\treturn this.wrappingProcessor.getRootProcessor();\n \t}\n-\t\n+\n     /**\n      * Process the given <code>Environment</code> producing the output.\n      * @return If the processing is successfull <code>true</code> is returned.\n@@ -259,14 +258,14 @@ public InternalPipelineDescription buildPipeline(Environment environment)\n      */\n     protected boolean process(Environment environment, InvokeContext context)\n     throws Exception {\n-    \t\n+\n     \t\t// Increment the concurrent requests count\n     \t\tsynchronized(this) {\n     \t\t\trequestCount++;\n     \t\t}\n \n     \t\ttry {\n-    \t\t\t\n+\n     \t        // and now process\n     \t        EnvironmentHelper.enterProcessor(this, this.serviceManager, environment);\n \n@@ -279,71 +278,71 @@ protected boolean process(Environment environment, InvokeContext context)\n \n     \t        try {\n     \t            boolean success = this.rootNode.invoke(environment, context);\n-    \t            \n+\n     \t            return success;\n \n     \t        } finally {\n     \t            EnvironmentHelper.leaveProcessor();\n-    \t            // Restore old redirector \n+    \t            // Restore old redirector\n     \t            context.setRedirector(oldRedirector);\n     \t        }\n \n     \t\t} finally {\n-    \t\t\t\n+\n     \t\t\t// Decrement the concurrent request count\n     \t\t\tsynchronized(this) {\n     \t\t\t\trequestCount--;\n     \t\t\t}\n-    \t\t\t\n+\n     \t\t\tif(requestCount < 0) {\n     \t\t\t\t// Marked for disposal and no more concurrent requests.\n     \t\t\t\tdispose();\n     \t\t\t}\n     \t\t}\n     }\n-        \n-    \n+\n+\n     protected boolean handleCocoonRedirect(String uri, Environment environment, InvokeContext context) throws Exception {\n-        \n+\n         // Build an environment wrapper\n         // If the current env is a facade, change the delegate and continue processing the facade, since\n         // we may have other redirects that will in turn also change the facade delegate\n-        \n+\n         MutableEnvironmentFacade facade = environment instanceof MutableEnvironmentFacade ?\n             ((MutableEnvironmentFacade)environment) : null;\n-        \n+\n         if (facade != null) {\n             // Consider the facade delegate (the real environment)\n             environment = facade.getDelegate();\n         }\n-        \n+\n         // test if this is a call from flow\n         boolean isRedirect = (environment.getObjectModel().remove(\"cocoon:forward\") == null);\n         Environment newEnv = new ForwardEnvironmentWrapper(environment, uri, getLogger());\n         if ( isRedirect ) {\n             ((ForwardEnvironmentWrapper)newEnv).setInternalRedirect(true);\n         }\n-        \n+\n         if (facade != null) {\n             // Change the facade delegate\n             facade.setDelegate((EnvironmentWrapper)newEnv);\n             newEnv = facade;\n         }\n-        \n+\n         // Get the processor that should process this request\n         ConcreteTreeProcessor processor;\n         if ( newEnv.getURIPrefix().equals(\"\") ) {\n             processor = ((TreeProcessor)getRootProcessor()).concreteProcessor;\n         } else {\n             processor = this;\n         }\n-        \n+\n         // Process the redirect\n // No more reset since with TreeProcessorRedirector, we need to pop values from the redirect location\n //        context.reset();\n         return processor.process(newEnv, context);\n     }\n-    \n+\n \tpublic void dispose() {\n         if (this.disposableNodes != null) {\n             // we must dispose the nodes in reverse order\n@@ -353,23 +352,23 @@ public void dispose() {\n             }\n             this.disposableNodes = null;\n         }\n-        \n+\n         // Ensure it won't be used anymore\n         this.rootNode = null;\n         if ( this.releaseSitemapExecutor ) {\n             this.wrappingProcessor.manager.release( (Component)this.sitemapExecutor );\n             this.sitemapExecutor = null;\n         }\n \t}\n-    \n+\n     private class TreeProcessorRedirector extends ForwardRedirector {\n-        \n+\n         private InvokeContext context;\n         public TreeProcessorRedirector(Environment env, InvokeContext context) {\n             super(env);\n             this.context = context;\n         }\n-        \n+\n         protected void cocoonRedirect(String uri) throws IOException, ProcessingException {\n             try {\n                 ConcreteTreeProcessor.this.handleCocoonRedirect(uri, this.env, this.context);\n@@ -384,7 +383,7 @@ protected void cocoonRedirect(String uri) throws IOException, ProcessingExceptio\n             }\n         }\n     }\n-    \n+\n     /**\n      * Local extension of EnvironmentWrapper to propagate otherwise blocked\n      * methods to the actual environment.\n@@ -415,7 +414,7 @@ public String getContentType() {\n         public boolean isResponseModified(long lastModified) {\n             return environment.isResponseModified(lastModified);\n         }\n-        \n+\n         public void setResponseIsNotModified() {\n             environment.setResponseIsNotModified();\n         }\n@@ -428,7 +427,7 @@ public SourceResolver getSourceResolver() {\n \tpublic String getContext() {\n \t\treturn wrappingProcessor.getContext();\n \t}\n-    \n+\n     /**\n      * Return the sitemap executor\n      */"
            },
            {
                "sha": "38e18a060f3350480773b7e78bc9df087889a63e",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/DefaultTreeBuilder.java",
                "status": "modified",
                "additions": 16,
                "deletions": 15,
                "changes": 31,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/DefaultTreeBuilder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/DefaultTreeBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/DefaultTreeBuilder.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -53,11 +53,12 @@\n /**\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: DefaultTreeBuilder.java,v 1.11 2004/06/09 11:59:23 cziegeler Exp $\n+ * @version CVS $Id: DefaultTreeBuilder.java,v 1.12 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n-\n-public class DefaultTreeBuilder extends AbstractLogEnabled implements TreeBuilder,\n-  Recomposable, Configurable, Contextualizable, RoleManageable, Recyclable, Disposable {\n+public class DefaultTreeBuilder\n+        extends AbstractLogEnabled\n+        implements TreeBuilder, Recomposable, Configurable, Contextualizable,\n+                   RoleManageable, Recyclable, Disposable {\n \n     protected Map attributes = new HashMap();\n \n@@ -158,7 +159,7 @@ public void configure(Configuration config) throws ConfigurationException {\n     public void setAttribute(String name, Object value) {\n         this.attributes.put(name, value);\n     }\n-    \n+\n     /* (non-Javadoc)\n      * @see org.apache.cocoon.components.treeprocessor.TreeBuilder#getAttribute(java.lang.String)\n      */\n@@ -214,7 +215,7 @@ protected ComponentManager createComponentManager(Configuration tree) throws Exc\n      *\n      * @return a selector for node builders\n      */\n-    protected ComponentSelector createBuilderSelector(String sitemapVersion) \n+    protected ComponentSelector createBuilderSelector(String sitemapVersion)\n     throws Exception {\n \n         // Create the NodeBuilder selector.\n@@ -257,7 +258,7 @@ protected String getClassAttributeName() {\n                 merged.addChild( lc[i] );\n             }\n         }\n-        // Automagically initialize the selector        \n+        // Automagically initialize the selector\n         LifecycleHelper.setupComponent(selector,\n             getLogger(),\n             this.context,\n@@ -379,15 +380,15 @@ public ProcessingNode build(Source source)\n             Configuration treeConfig = handler.getConfiguration();\n \n             this.namespace = treeConfig.getNamespace();\n-            \n+\n             // get the namespace version\n             final int pos = this.namespace.lastIndexOf('/');\n             if ( pos == -1 ) {\n                 throw new ProcessingException(\"Namespace \" + this.namespace + \" does not have a version number.\");\n             }\n             if ( !this.namespace.substring(0, pos).equals(\"http://apache.org/cocoon/sitemap\") ) {\n-                throw new ProcessingException(\"Namespace \" + this.namespace + \" is not a valid sitemap namespace.\");                \n-            }            \n+                throw new ProcessingException(\"Namespace \" + this.namespace + \" is not a valid sitemap namespace.\");\n+            }\n             return build(treeConfig, this.namespace.substring(pos+1));\n         } catch (ProcessingException e) {\n             throw e;\n@@ -454,7 +455,7 @@ public List getDisposableNodes() {\n     public ComponentManager getSitemapComponentManager() {\n         return this.manager;\n     }\n-    \n+\n     /**\n      * Setup a <code>ProcessingNode</code> by setting its location, calling all\n      * the lifecycle interfaces it implements and giving it the parameter map if\n@@ -586,7 +587,7 @@ public void recycle() {\n     public void dispose() {\n         LifecycleHelper.dispose(this.builderSelector);\n \n-        // Don't dispose manager or roles : they are used by the built tree\n+        // Don't dispose manager or roles: they are used by the built tree\n         // and thus must live longer than the builder.\n     }\n }"
            },
            {
                "sha": "9b357811e30f2289bb07f5ddb04051bc6e94bfd2",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "status": "modified",
                "additions": 57,
                "deletions": 50,
                "changes": 107,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -19,6 +19,7 @@\n \n import org.apache.avalon.excalibur.component.RoleManageable;\n import org.apache.avalon.excalibur.component.RoleManager;\n+import org.apache.avalon.excalibur.pool.Recyclable;\n import org.apache.avalon.framework.activity.Disposable;\n import org.apache.avalon.framework.activity.Initializable;\n import org.apache.avalon.framework.component.ComponentException;\n@@ -50,7 +51,7 @@\n  * Interpreted tree-traversal implementation of a pipeline assembly language.\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: TreeProcessor.java,v 1.37 2004/06/09 09:47:47 cziegeler Exp $\n+ * @version CVS $Id: TreeProcessor.java,v 1.38 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n \n public class TreeProcessor\n@@ -102,16 +103,16 @@\n \n     /** The source resolver */\n     protected SourceResolver resolver;\n-    \n+\n     /** The environment helper */\n     private EnvironmentHelper environmentHelper;\n-    \n+\n     /** The actual processor (package-private as needs to be accessed by ConcreteTreeProcessor) */\n     ConcreteTreeProcessor concreteProcessor;\n \n     /** The tree builder configuration */\n     private Configuration treeBuilderConfiguration;\n-    \n+\n     /**\n      * Create a TreeProcessor.\n      */\n@@ -123,10 +124,10 @@ public TreeProcessor() {\n     /**\n      * Create a child processor for a given language\n      */\n-    protected TreeProcessor(TreeProcessor parent, \n-                            DelayedRefreshSourceWrapper sitemapSource, \n-                            boolean checkReload, \n-                            String prefix) \n+    protected TreeProcessor(TreeProcessor parent,\n+                            DelayedRefreshSourceWrapper sitemapSource,\n+                            boolean checkReload,\n+                            String prefix)\n     throws Exception {\n         this.parent = parent;\n \n@@ -138,7 +139,7 @@ protected TreeProcessor(TreeProcessor parent,\n         this.treeBuilderConfiguration = parent.treeBuilderConfiguration;\n         this.checkReload = checkReload;\n         this.lastModifiedDelay = parent.lastModifiedDelay;\n-        \n+\n         // We have our own CM\n         this.manager = parent.concreteProcessor.sitemapComponentManager;\n         this.resolver = (SourceResolver)this.manager.lookup(SourceResolver.ROLE);\n@@ -155,9 +156,9 @@ protected TreeProcessor(TreeProcessor parent,\n      *\n      * @return a new child processor.\n      */\n-    public TreeProcessor createChildProcessor(String src, \n+    public TreeProcessor createChildProcessor(String src,\n                                               boolean checkReload,\n-                                              String  prefix) \n+                                              String  prefix)\n     throws Exception {\n         DelayedRefreshSourceWrapper delayedSource = new DelayedRefreshSourceWrapper(\n             this.resolver.resolveURI(src), this.lastModifiedDelay);\n@@ -199,16 +200,16 @@ public void initialize() throws Exception {\n         ContainerUtil.service(this.environmentHelper, new ComponentManagerWrapper(manager));\n     }\n \n-    /** \n+    /**\n      * Configure the tree processor:\n-     * &lt;processor file=\"{Location of the sitemap}\" \n+     * &lt;processor file=\"{Location of the sitemap}\"\n      *               check-reload=\"{true|false}\"\n      *               config=\"{Location of sitemap tree processor config}&gt;\n      *   &lt;reload delay=\"10\"/&gt;\n      * &lt;/processor&gt;\n-     * \n+     *\n      * Only the file attribute is required; everything else is optional.\n-     * \n+     *\n      * @see org.apache.avalon.framework.configuration.Configurable#configure(org.apache.avalon.framework.configuration.Configuration)\n      */\n     public void configure(Configuration config)\n@@ -244,7 +245,7 @@ public void configure(Configuration config)\n     /**\n      * Create a new tree builder for this sitemap\n      */\n-    protected void createTreeBuilder() \n+    protected void createTreeBuilder()\n     throws ConfigurationException {\n         // Create a builder for the sitemap language\n         try {\n@@ -253,19 +254,18 @@ protected void createTreeBuilder()\n                     .loadClass(\"org.apache.cocoon.components.treeprocessor.sitemap.SitemapLanguage\").newInstance();\n \n             LifecycleHelper.setupComponent(this.treeBuilder,\n-                getLogger(),\n-                this.context,\n-                this.manager,\n-                this.roleManager,\n-                this.treeBuilderConfiguration\n-            );\n+                                           getLogger(),\n+                                           this.context,\n+                                           this.manager,\n+                                           this.roleManager,\n+                                           this.treeBuilderConfiguration);\n         } catch(ConfigurationException ce) {\n             throw ce;\n         } catch(Exception e) {\n             throw new ConfigurationException(\"Could not setup sitemap builder.\", e);\n         }\n     }\n-    \n+\n     /**\n      * Process the given <code>Environment</code> producing the output.\n      * @return If the processing is successfull <code>true</code> is returned.\n@@ -277,26 +277,26 @@ protected void createTreeBuilder()\n      *         ConnectionResetException  If the connection was reset\n      */\n     public boolean process(Environment environment) throws Exception {\n-    \t\n+\n         setupConcreteProcessor(environment);\n-    \t\t\n+\n         return this.concreteProcessor.process(environment);\n     }\n \n-    \n+\n     /**\n      * Process the given <code>Environment</code> to assemble\n      * a <code>ProcessingPipeline</code>.\n      * @since 2.1\n      */\n     public InternalPipelineDescription buildPipeline(Environment environment)\n     throws Exception {\n-    \t\n+\n         setupConcreteProcessor(environment);\n-    \t\t\n+\n         return this.concreteProcessor.buildPipeline(environment);\n     }\n-      \n+\n     /* (non-Javadoc)\n      * @see org.apache.cocoon.Processor#getRootProcessor()\n      */\n@@ -305,7 +305,7 @@ public Processor getRootProcessor() {\n         while(result.parent != null) {\n             result = result.parent;\n         }\n-        \n+\n         return result;\n     }\n \n@@ -339,10 +339,10 @@ public String getContext() {\n \n     /**\n      * The current environment helper used by the MountNode\n-     * @return EnvironmentHelper \n+     * @return EnvironmentHelper\n      */\n     public EnvironmentHelper getEnvironmentHelper() {\n-        return this.environmentHelper;   \n+        return this.environmentHelper;\n     }\n \n     private void setupConcreteProcessor(Environment env) throws Exception {\n@@ -352,7 +352,7 @@ private void setupConcreteProcessor(Environment env) throws Exception {\n             buildConcreteProcessor(env);\n         }\n     }\n-    \n+\n     private synchronized void buildConcreteProcessor(Environment env) throws Exception {\n \n         // Now that we entered the synchronized area, recheck what's already\n@@ -368,14 +368,18 @@ private synchronized void buildConcreteProcessor(Environment env) throws Excepti\n         ConcreteTreeProcessor newProcessor = new ConcreteTreeProcessor(this);\n         long newLastModified;\n         this.setupLogger(newProcessor);\n+\n         // We have to do a call to enterProcessor() here as during building\n-        // of the tree, components (e.g. actions) are already instantiated \n+        // of the tree, components (e.g. actions) are already instantiated\n         // (ThreadSafe ones mostly).\n         // If these components try to access the current processor or the\n         // current service manager they must get this one - which is currently\n         // in the process of initialization.\n         EnvironmentHelper.enterProcessor(this, new ComponentManagerWrapper(this.manager), env);\n         try {\n+            if (this.treeBuilder instanceof Recyclable) {\n+                ((Recyclable)this.treeBuilder).recycle();\n+            }\n             if (this.treeBuilder instanceof Recomposable) {\n                 ((Recomposable)this.treeBuilder).recompose(this.manager);\n             }\n@@ -385,14 +389,17 @@ private synchronized void buildConcreteProcessor(Environment env) throws Excepti\n             }\n \n             if (this.source == null) {\n-                this.source = new DelayedRefreshSourceWrapper(this.resolver.resolveURI(this.fileName), lastModifiedDelay);\n+                this.source = new DelayedRefreshSourceWrapper(this.resolver.resolveURI(this.fileName),\n+                                                              lastModifiedDelay);\n             }\n-            \n+\n             newLastModified = this.source.getLastModified();\n \n             ProcessingNode root = this.treeBuilder.build(this.source);\n \n-            newProcessor.setProcessorData(this.treeBuilder.getSitemapComponentManager(), root, this.treeBuilder.getDisposableNodes());\n+            newProcessor.setProcessorData(this.treeBuilder.getSitemapComponentManager(),\n+                                          root,\n+                                          this.treeBuilder.getDisposableNodes());\n         } finally {\n             EnvironmentHelper.leaveProcessor();\n         }\n@@ -426,14 +433,14 @@ public void dispose() {\n         ContainerUtil.dispose(this.treeBuilder);\n         this.treeBuilder = null;\n \n-\t    if ( this.manager != null ) {\n-\t        if ( this.source != null ) {\n-\t            this.resolver.release(this.source.getSource());\n-\t            this.source = null;\n-\t        }\n-\t        this.manager.release(this.resolver);\n-\t        this.resolver = null;\n-\t        this.manager = null;\n-\t    }\n-\t}\n+        if (this.manager != null) {\n+            if (this.source != null) {\n+                this.resolver.release(this.source.getSource());\n+                this.source = null;\n+            }\n+            this.manager.release(this.resolver);\n+            this.resolver = null;\n+            this.manager = null;\n+        }\n+    }\n }"
            },
            {
                "sha": "77a1c689d003d5c1e3e702b6384486071d99ea58",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelineNode.java",
                "status": "modified",
                "additions": 8,
                "deletions": 9,
                "changes": 17,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelineNode.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelineNode.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelineNode.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -36,7 +36,7 @@\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n  * @author <a href=\"mailto:gianugo@apache.org\">Gianugo Rabellino</a>\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: PipelineNode.java,v 1.15 2004/03/18 15:08:13 cziegeler Exp $\n+ * @version CVS $Id: PipelineNode.java,v 1.16 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n public class PipelineNode\n         extends AbstractParentProcessingNode\n@@ -112,7 +112,7 @@ public void setInternalOnly(boolean internalOnly) {\n     }\n \n     public final boolean invoke(Environment env, InvokeContext context)\n-            throws Exception {\n+    throws Exception {\n \n         boolean externalRequest = env.isExternal();\n \n@@ -121,16 +121,15 @@ public final boolean invoke(Environment env, InvokeContext context)\n             return false;\n         }\n         context.inform(this.processingPipeline, this.parameters,\n-                env.getObjectModel());\n+                       env.getObjectModel());\n         try {\n             if (invokeNodes(children, env, context)) {\n                 return true;\n             } else if (!this.isLast) {\n                 return false;\n             } else {\n-                throw new ResourceNotFoundException(\n-                        \"No pipeline matched request: \" + env.getURIPrefix()\n-                        + env.getURI());\n+                throw new ResourceNotFoundException(\"No pipeline matched request: \" +\n+                                                    env.getURIPrefix() + env.getURI());\n             }\n         } catch (ConnectionResetException cre) {\n             // Will be reported by CocoonServlet, rethrowing"
            },
            {
                "sha": "9b8615988f3fd46803c48c9c07e9e6e013b254eb",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelinesNode.java",
                "status": "modified",
                "additions": 9,
                "deletions": 10,
                "changes": 19,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelinesNode.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelinesNode.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PipelinesNode.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -31,14 +31,13 @@\n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj&ouml;rn L&uuml;tkemeier</a>\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: PipelinesNode.java,v 1.12 2004/06/09 11:59:23 cziegeler Exp $\n+ * @version CVS $Id: PipelinesNode.java,v 1.13 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n-\n public final class PipelinesNode extends SimpleParentProcessingNode\n-  implements Composable, Disposable {\n+                                 implements Composable, Disposable {\n \n     private ComponentManager manager;\n-    \n+\n     private ErrorHandlerHelper errorHandlerHelper = new ErrorHandlerHelper();\n \n     private ProcessingNode errorHandler;\n@@ -67,7 +66,7 @@ public void enableLogging(Logger logger) {\n     public void setErrorHandler(ProcessingNode node) {\n         this.errorHandler = node;\n     }\n-    \n+\n     public void setChildren(ProcessingNode[] nodes) {\n         // Mark the last pipeline so that it can throw a ResourceNotFoundException\n         ((PipelineNode)nodes[nodes.length - 1]).setLast(true);\n@@ -82,8 +81,8 @@ public void setChildren(ProcessingNode[] nodes) {\n      */\n     public final boolean invoke(Environment env, InvokeContext context)\n     throws Exception {\n-    \n-        // Perform any common invoke functionality \n+\n+        // Perform any common invoke functionality\n         super.invoke(env, context);\n \n         // Recompose context (and pipelines) to the local component manager"
            },
            {
                "sha": "bdec296d163fecb5c1d67096e53b0e3eb257590b",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/sitemap/PreparableMatchNode.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PreparableMatchNode.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PreparableMatchNode.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/sitemap/PreparableMatchNode.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -36,7 +36,7 @@\n /**\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: PreparableMatchNode.java,v 1.6 2004/06/11 08:51:56 cziegeler Exp $\n+ * @version CVS $Id: PreparableMatchNode.java,v 1.7 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n public class PreparableMatchNode extends SimpleSelectorProcessingNode\n                                  implements ParameterizableProcessingNode, Composable, Disposable {\n@@ -103,8 +103,8 @@ public void compose(ComponentManager manager) throws ComponentException {\n      */\n     public final boolean invoke(Environment env, InvokeContext context)\n     throws Exception {\n-      \n-      \t// Perform any common invoke functionality \n+\n+      \t// Perform any common invoke functionality\n       \tsuper.invoke(env, context);\n \n         Map objectModel = env.getObjectModel();\n@@ -132,7 +132,7 @@ public final boolean invoke(Environment env, InvokeContext context)\n         if (result != null) {\n             if (getLogger().isDebugEnabled()) {\n                 getLogger().debug(\"Matcher '\" + this.componentName + \"' matched prepared pattern '\" +\n-                    this.pattern + \"' at \" + this.getLocation());\n+                                  this.pattern + \"' at \" + this.getLocation());\n             }\n \n             // Invoke children with the matcher results"
            },
            {
                "sha": "532d50d05f92a633cb78d4e72abee17b6012ab21",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/sitemap/SitemapLanguage.java",
                "status": "modified",
                "additions": 17,
                "deletions": 18,
                "changes": 35,
                "blob_url": "https://github.com/apache/cocoon/blob/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/SitemapLanguage.java",
                "raw_url": "https://github.com/apache/cocoon/raw/c787c9db6ca1bdd57cf2923006f3cf1b375910d1/src/java/org/apache/cocoon/components/treeprocessor/sitemap/SitemapLanguage.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/sitemap/SitemapLanguage.java?ref=c787c9db6ca1bdd57cf2923006f3cf1b375910d1",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -45,9 +45,8 @@\n  * The tree builder for the sitemap language.\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: SitemapLanguage.java,v 1.11 2004/05/25 07:28:25 cziegeler Exp $\n+ * @version CVS $Id: SitemapLanguage.java,v 1.12 2004/06/11 20:03:35 vgritsenko Exp $\n  */\n-\n public class SitemapLanguage extends DefaultTreeBuilder {\n \n     // Regexp's for splitting expressions\n@@ -70,11 +69,11 @@ protected ComponentManager createComponentManager(Configuration tree) throws Exc\n             }\n             config = new DefaultConfiguration(\"\", \"\");\n         }\n-        \n+\n         final CocoonComponentManager manager = new CocoonComponentManager(this.parentManager);\n-        \n+\n         manager.enableLogging(getLogger());\n-        \n+\n         final LoggerManager loggerManager = (LoggerManager) this.parentManager.lookup(LoggerManager.ROLE);\n         manager.setLoggerManager(loggerManager);\n \n@@ -314,9 +313,9 @@ public Map getViewNodes(Collection viewNames) throws Exception {\n \n         return result;\n     }\n-    \n+\n     /**\n-     * Extract pipeline-hints from the given statement (if any exist) \n+     * Extract pipeline-hints from the given statement (if any exist)\n      *\n      * @param role the component role (e.g. <code>Generator.ROLE</code>)\n      * @param hint the component hint, i.e. the 'type' attribute\n@@ -348,7 +347,7 @@ public Map getHintsForStatement(String role, String hint, Configuration statemen\n             componentHintParams = selector.getPipelineHint(hint);\n         } catch (Exception ex) {\n             if (getLogger().isWarnEnabled()) {\n-                getLogger().warn(\"pipeline-hints: Component Exception: could not \" + \n+                getLogger().warn(\"pipeline-hints: Component Exception: could not \" +\n                              \"check for component level hints \" + ex);\n             }\n         } finally {\n@@ -359,7 +358,7 @@ public Map getHintsForStatement(String role, String hint, Configuration statemen\n             hintParams = componentHintParams;\n \n             if (statementHintParams != null) {\n-                hintParams = hintParams + \",\" + statementHintParams; \n+                hintParams = hintParams + \",\" + statementHintParams;\n             }\n         } else {\n             hintParams = statementHintParams;\n@@ -379,27 +378,27 @@ public Map getHintsForStatement(String role, String hint, Configuration statemen\n         String[]  expressions = commaSplit.split(hintParams.trim());\n \n         if (getLogger().isDebugEnabled()) {\n-            getLogger().debug(\"pipeline-hints: (aggregate-hint) \" + hintParams); \n+            getLogger().debug(\"pipeline-hints: (aggregate-hint) \" + hintParams);\n         }\n \n         for (int i=0; i<expressions.length;i++) {\n-            String [] nameValuePair = equalsSplit.split(expressions[i]); \n+            String [] nameValuePair = equalsSplit.split(expressions[i]);\n \n             try {\n                 if (nameValuePair.length < 2) {\n                     if (getLogger().isDebugEnabled()) {\n-                        getLogger().debug(\"pipeline-hints: (name) \" + nameValuePair[0] \n+                        getLogger().debug(\"pipeline-hints: (name) \" + nameValuePair[0]\n                                        + \"\\npipeline-hints: (value) [implicit] true\");\n                     }\n-  \n+\n                     params.put( VariableResolverFactory.getResolver(nameValuePair[0], this.manager),\n                                 VariableResolverFactory.getResolver(\"true\", this.manager));\n                 } else {\n                     if (getLogger().isDebugEnabled()) {\n                         getLogger().debug(\"pipeline-hints: (name) \" + nameValuePair[0]\n                                           + \"\\npipeline-hints: (value) \" + nameValuePair[1]);\n                     }\n-  \n+\n                     params.put( VariableResolverFactory.getResolver(nameValuePair[0], this.manager),\n                                 VariableResolverFactory.getResolver(nameValuePair[1], this.manager));\n                 }\n@@ -424,5 +423,5 @@ private static final Collection splitLabels(String labels) {\n         } else {\n             return Arrays.asList(StringUtils.split(labels, \", \\t\\n\\r\"));\n         }\n-    }   \n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5fb5a83f9f75e826e57da28ab9496b457e103cff",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/4776512f8755a6431061fe50989b9c92e29efec6",
        "message": "COCOON-2035: Null values cause NPE in the RepeaterJXPathSorter when trying to compare values\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@933410 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_94",
        "file": [
            {
                "sha": "5989e70bd7b6abda1f818f872e39c657456ab6dd",
                "filename": "blocks/cocoon-forms/cocoon-forms-impl/src/changes/changes.xml",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/5fb5a83f9f75e826e57da28ab9496b457e103cff/blocks/cocoon-forms/cocoon-forms-impl/src/changes/changes.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/5fb5a83f9f75e826e57da28ab9496b457e103cff/blocks/cocoon-forms/cocoon-forms-impl/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-forms/cocoon-forms-impl/src/changes/changes.xml?ref=5fb5a83f9f75e826e57da28ab9496b457e103cff",
                "patch": "@@ -24,6 +24,11 @@\n   -->\n <document>\n   <body>\n+    <release version=\"1.2.0\" date=\"TBD\" description=\"unreleased\">\n+      <action dev=\"jreijn\" type=\"fix\" issue=\"COCOON-2035\" due-to=\"Gustavo N. Fernandes\" due-to-email=\"gustavonalle@gmail.com\">\n+        Fix NPE in the RepeaterJXPathSorter caused by null values.\n+      </action>\n+    </release>\n     <release version=\"1.1.1\" date=\"TBD\" description=\"unreleased\">\n       <action dev=\"felixk\" type=\"fix\" issue=\"COCOON-1822\" due-to=\"Karen Torres &amp; Rafael M\u00e1rquez\" due-to-email=\"ktorres@agssa.net &amp; rmarquez@agssa.net\">\n         Forms: MultiValueField list-type=\"double-listbox\" does not work correctly in ajax enabled forms."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4776512f8755a6431061fe50989b9c92e29efec6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/59c2d2fa31bae41d38412c71afbc6bc147e7fa13",
        "message": "COCOON-2035: Null values cause NPE in the RepeaterJXPathSorter when trying to compare values\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@933404 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_95",
        "file": [
            {
                "sha": "49f1d95c683dd808225f8b20bb65b27006973f44",
                "filename": "blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/binding/RepeaterJXPathAdapter.java",
                "status": "modified",
                "additions": 25,
                "deletions": 12,
                "changes": 37,
                "blob_url": "https://github.com/apache/cocoon/blob/4776512f8755a6431061fe50989b9c92e29efec6/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/binding/RepeaterJXPathAdapter.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4776512f8755a6431061fe50989b9c92e29efec6/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/binding/RepeaterJXPathAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/binding/RepeaterJXPathAdapter.java?ref=4776512f8755a6431061fe50989b9c92e29efec6",
                "patch": "@@ -16,19 +16,12 @@\n  */\n package org.apache.cocoon.forms.binding;\n \n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-\n import org.apache.cocoon.forms.formmodel.Repeater.RepeaterRow;\n-\n import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.Pointer;\n \n+import java.util.*;\n+\n /**\n  * @version $Id$\n  */\n@@ -67,7 +60,7 @@ public RepeaterSorter sortBy(String field) {\n \t\t}\n \t\tString path = findPathFor(field);\n \t\tif (path == null) throw new IllegalStateException(\"Cannot find a path for sorting on widget \" + field);\n-\t\tRepeaterSorter sort = new RepeaterJXPathSorter(path, field);\n+\t\tRepeaterSorter sort = new RepeaterJXPathSorter(path, field, false);\n \t\tif (sortedItems == null) {\n \t\t\tList tsortedItems = new ArrayList();\n \t\t\tint i = 0;\n@@ -150,14 +143,27 @@ public void setFilter(String field, Object value) {\n \n \t}\n \n+\n+    /**\n+     * Sorter for JXPath based repeaters\n+     */\n \tstatic class RepeaterJXPathSorter implements RepeaterSorter {\n \n \t\tprivate String path;\n \t\tprivate String field;\n-\n-\t\tpublic RepeaterJXPathSorter(String path, String field) {\n+        private boolean nullsAreHigher;\n+\n+        /**\n+         * JXPath based sorter for repeater\n+         * @param path the path of the field to sort on\n+         * @param field the name of the field to sort on\n+         * @param nullsAreHigher indicates if null values are seen as higher then other values.\n+         * When this value is set to false, it  means that nulls are lower than anything else.\n+         */\n+        public RepeaterJXPathSorter(String path, String field, boolean nullsAreHigher) {\n \t\t\tthis.path = path;\n \t\t\tthis.field = field;\n+            this.nullsAreHigher = nullsAreHigher;\n \t\t}\n \n \t\tpublic void setCollection(Collection c) {\n@@ -181,6 +187,13 @@ public int compare(Object o1, Object o2) {\n \t\t\t\tval2 = i2.getContext().getValue(path);\n \t\t\t}\n \n+\t\t\tif(val1 == null) {\n+                return (this.nullsAreHigher ? 1 : -1);\n+            }\n+\t        if(val2 == null) {\n+                return (this.nullsAreHigher ? -1 : 1);\n+            }\n+\t\t\t\n             if (val1 instanceof Comparable) {\n                 return ((Comparable) val1).compareTo(val2);\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/3f309a98399f190268c7422f59697143e6e7ea8b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/e520210c0a48cbdec27db04caf74f7911188b9b2",
        "message": "fix NPE in Xalan's TransformerIdentityImpl.flushStartDoc(..) due to missing startDocument() event (http://marc.info/?l=xml-cocoon-dev&m=119910888817794&w=4)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@607755 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_96",
        "file": [
            {
                "sha": "c2597f2198ace0523942562bd8470757ec4cddb2",
                "filename": "blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/DynamicSelectionList.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/3f309a98399f190268c7422f59697143e6e7ea8b/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/DynamicSelectionList.java",
                "raw_url": "https://github.com/apache/cocoon/raw/3f309a98399f190268c7422f59697143e6e7ea8b/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/DynamicSelectionList.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/DynamicSelectionList.java?ref=3f309a98399f190268c7422f59697143e6e7ea8b",
                "patch": "@@ -242,6 +242,7 @@ public void startElement(String namespaceURI, String localName, String qName, At\n                 } else if (convertor == null && localName.equals(\"convertor\")) {\n                     // record the content of this element in a dom-tree\n                     convertorConfigDOMBuilder = new DOMBuilder();\n+                    convertorConfigDOMBuilder.startDocument();\n                     convertorConfigDOMBuilder.startElement(namespaceURI, localName, qName, attributes);\n                     convertorConfigNestingLevel++;\n                 } else {\n@@ -260,6 +261,7 @@ public void endElement(String namespaceURI, String localName, String qName)\n                 convertorConfigNestingLevel--;\n                 convertorConfigDOMBuilder.endElement(namespaceURI, localName, qName);\n                 if (convertorConfigNestingLevel == 0) {\n+                    convertorConfigDOMBuilder.endDocument();\n                     Element convertorElement = convertorConfigDOMBuilder.getDocument().getDocumentElement();\n                     try {\n                         convertor = getDatatype().getBuilder().buildConvertor(convertorElement);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e520210c0a48cbdec27db04caf74f7911188b9b2",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/1c44cd27a910124b3721d60e593851163ce5229b",
        "message": "fix NPE in Xalan's TransformerIdentityImpl.flushStartDoc(..) due to missing startDocument() event (http://marc.info/?l=xml-cocoon-dev&m=119910888817794&w=4)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@607747 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_97",
        "file": [
            {
                "sha": "6d098833b74e844dd67f5844971f1b66679f35fb",
                "filename": "blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/DynamicSelectionListTestCase.java",
                "status": "modified",
                "additions": 11,
                "deletions": 7,
                "changes": 18,
                "blob_url": "https://github.com/apache/cocoon/blob/e520210c0a48cbdec27db04caf74f7911188b9b2/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/DynamicSelectionListTestCase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e520210c0a48cbdec27db04caf74f7911188b9b2/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/DynamicSelectionListTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/DynamicSelectionListTestCase.java?ref=e520210c0a48cbdec27db04caf74f7911188b9b2",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.cocoon.forms.FormsConstants;\n import org.apache.cocoon.xml.dom.DOMBuilder;\n \n+import org.apache.excalibur.source.Source;\n import org.apache.excalibur.source.SourceResolver;\n import org.apache.excalibur.source.impl.ResourceSource;\n import org.apache.excalibur.xmlizer.XMLizer;\n@@ -41,24 +42,27 @@\n      * @throws ParserConfigurationException\n      */\n     public void testGenerateSaxFragment() throws Exception {\n-        DOMBuilder dest = new DOMBuilder();\n-        ResourceSource source = \n+        Source source = \n             new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/DynamicSelectionListTestCase.source.xml\");\n         Document sourceDoc = this.parser.parse(source.getInputStream());\n         Element datatypeElement = (Element) sourceDoc.getElementsByTagNameNS(FormsConstants.DEFINITION_NS, \"convertor\").item(0);\n         Datatype datatype = this.datatypeManager.createDatatype(datatypeElement, false);\n         final XMLizer xmlizer = (XMLizer)getManager().lookup( XMLizer.ROLE );\n         final SourceResolver sourceResolver = (SourceResolver)getManager().lookup( SourceResolver.ROLE );\n-        DynamicSelectionList list = \n-            new DynamicSelectionList(datatype, null, xmlizer, sourceResolver, null);\n+        DynamicSelectionList list = new DynamicSelectionList(datatype, null, xmlizer, sourceResolver, null);\n+        \n+        DOMBuilder dest = new DOMBuilder();\n+        dest.startDocument();\n         list.generateSaxFragment(dest, Locale.ENGLISH, source);\n-        ResourceSource expectedSource =\n+        dest.endDocument();\n+        Document destDocument = dest.getDocument();\n+        \n+        Source expectedSource =\n             new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/DynamicSelectionListTestCase.dest.xml\");\n         Document expected = this.parser.parse(expectedSource.getInputStream());\n         // FIXME: Why is the namespace declaration available as attribute on the expected document? (see COCOON-2155)\n         expected.getDocumentElement().removeAttribute(\"xmlns:\" + FormsConstants.INSTANCE_PREFIX);\n-        assertEqual(\"Test if output is what is expected\",\n-                expected, dest.getDocument());\n+        assertEqual(\"Test if output is what is expected\", expected, destDocument);\n     }\n \n }"
            },
            {
                "sha": "c917ef9090e9551b15ec1155714dad9970176adc",
                "filename": "blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/EnumSelectionListTestCase.java",
                "status": "modified",
                "additions": 17,
                "deletions": 10,
                "changes": 27,
                "blob_url": "https://github.com/apache/cocoon/blob/e520210c0a48cbdec27db04caf74f7911188b9b2/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/EnumSelectionListTestCase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e520210c0a48cbdec27db04caf74f7911188b9b2/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/EnumSelectionListTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/EnumSelectionListTestCase.java?ref=e520210c0a48cbdec27db04caf74f7911188b9b2",
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.cocoon.forms.datatype.typeimpl.EnumType;\n import org.apache.cocoon.xml.dom.DOMBuilder;\n \n+import org.apache.excalibur.source.Source;\n import org.apache.excalibur.source.impl.ResourceSource;\n \n import org.w3c.dom.Document;\n@@ -40,19 +41,22 @@\n      * @throws ParserConfigurationException\n      */\n     public void testGenerateSaxFragment() throws Exception {\n-        DOMBuilder dest = new DOMBuilder();\n         EnumSelectionList list = \n             new EnumSelectionList(Sex.class.getName(), new EnumType(), false);\n+\n+        DOMBuilder dest = new DOMBuilder();\n+        dest.startDocument();\n         list.generateSaxFragment(dest, Locale.ENGLISH);\n-        ResourceSource expectedSource =\n+        dest.endDocument();\n+        Document destDocument = dest.getDocument();\n+        \n+        Source expectedSource =\n             new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/EnumSelectionListTestCase.dest-no-null.xml\");\n         Document expected = this.parser.parse(expectedSource.getInputStream());\n-        Document destDocument = dest.getDocument();\n         // FIXME: Why is the namespace declaration available as attribute on the expected document? (see COCOON-2155)\n         expected.getDocumentElement().removeAttribute(\"xmlns:\" + FormsConstants.INSTANCE_PREFIX);\n         expected.getDocumentElement().removeAttribute(\"xmlns:i18n\");\n-        assertEqual(\"Test if output is what is expected\",\n-                expected, destDocument);\n+        assertEqual(\"Test if output is what is expected\", expected, destDocument);\n     }\n     \n     /**\n@@ -61,19 +65,22 @@ public void testGenerateSaxFragment() throws Exception {\n      * @throws ParserConfigurationException\n      */\n     public void testGenerateSaxFragmentNullable() throws Exception {\n-        DOMBuilder dest = new DOMBuilder();\n         EnumSelectionList list = \n             new EnumSelectionList(Sex.class.getName(), new EnumType(), true);\n+\n+        DOMBuilder dest = new DOMBuilder();\n+        dest.startDocument();\n         list.generateSaxFragment(dest, Locale.ENGLISH);\n-        ResourceSource expectedSource =\n+        dest.endDocument();\n+        Document destDocument = dest.getDocument();\n+\n+        Source expectedSource =\n             new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/EnumSelectionListTestCase.dest.xml\");\n         Document expected = this.parser.parse(expectedSource.getInputStream());\n-        Document destDocument = dest.getDocument();\n         // FIXME: Why is the namespace declaration available as attribute on the expected document? (see COCOON-2155)\n         expected.getDocumentElement().removeAttribute(\"xmlns:\" + FormsConstants.INSTANCE_PREFIX);\n         expected.getDocumentElement().removeAttribute(\"xmlns:i18n\");\n-        assertEqual(\"Test if output is what is expected\",\n-                expected, destDocument);\n+        assertEqual(\"Test if output is what is expected\", expected, destDocument);\n     }\n     \n }"
            },
            {
                "sha": "8d710654e006f5917caaf6c8ff72e6ad95395958",
                "filename": "blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java",
                "status": "modified",
                "additions": 9,
                "deletions": 2,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/e520210c0a48cbdec27db04caf74f7911188b9b2/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e520210c0a48cbdec27db04caf74f7911188b9b2/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java?ref=e520210c0a48cbdec27db04caf74f7911188b9b2",
                "patch": "@@ -58,18 +58,21 @@ public void testGenerateSaxFragment() throws Exception {\n         flowContextObject.put(\"beans\", beans);\n         ObjectModel newObjectModel = new ObjectModelImpl();\n         FlowHelper.setContextObject(getObjectModel(), newObjectModel, flowContextObject);\n+        \n         Source sampleSource = new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.source.xml\");\n         Document sample = this.parser.parse(sampleSource.getInputStream());\n         Element datatypeElement = (Element) sample.getElementsByTagNameNS(FormsConstants.DEFINITION_NS, \"datatype\").item(0);\n         Datatype datatype = this.datatypeManager.createDatatype(datatypeElement, false);\n         FlowJXPathSelectionList list = new FlowJXPathSelectionList(processInfoProvider, \"beans\", \"key\", \"value\", datatype,null,false,null,false);\n+        \n         DOMBuilder dest = new DOMBuilder();\n         dest.startDocument();\n         list.generateSaxFragment(dest, Locale.ENGLISH);\n         dest.endDocument();\n+        Document destDocument = dest.getDocument();\n+\n         Source expectedSource = new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.dest.xml\");\n         Document expected = this.parser.parse(expectedSource.getInputStream());\n-        Document destDocument = dest.getDocument();\n         // FIXME: Why is the namespace declaration available as attribute on the expected document? (see COCOON-2155)\n         expected.getDocumentElement().removeAttribute(\"xmlns:\" + FormsConstants.INSTANCE_PREFIX);\n         assertEqual(\"Test if generated list matches expected\", expected, destDocument);\n@@ -87,18 +90,21 @@ public void testGenerateSaxFragmentWithNull() throws Exception {\n         flowContextObject.put(\"beans\", beans);\n         ObjectModel newObjectModel = new ObjectModelImpl();\n         FlowHelper.setContextObject(getObjectModel(), newObjectModel, flowContextObject);\n+        \n         Source sampleSource = new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.source.xml\");\n         Document sample = this.parser.parse(sampleSource.getInputStream());\n         Element datatypeElement = (Element) sample.getElementsByTagNameNS(FormsConstants.DEFINITION_NS, \"datatype\").item(0);\n         Datatype datatype = this.datatypeManager.createDatatype(datatypeElement, false);\n         FlowJXPathSelectionList list = new FlowJXPathSelectionList(processInfoProvider, \"beans\", \"key\", \"value\", datatype,null,false,null,false);\n+        \n         DOMBuilder dest = new DOMBuilder();\n         dest.startDocument();\n         list.generateSaxFragment(dest, Locale.ENGLISH);\n         dest.endDocument();\n+        Document destDocument = dest.getDocument();\n+\n         Source expectedSource = new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCaseWithNull.dest.xml\");\n         Document expected = this.parser.parse(expectedSource.getInputStream());\n-        Document destDocument = dest.getDocument();\n         // FIXME: Why is the namespace declaration available as attribute on the expected document? (see COCOON-2155)\n         expected.getDocumentElement().removeAttribute(\"xmlns:\" + FormsConstants.INSTANCE_PREFIX);\n         assertEqual(\"Test if generated list matches expected\", expected, destDocument);\n@@ -125,4 +131,5 @@ public String toString() {\n             return \"{ \" + this.key + \" : \" + this.value + \" }\";\n         }\n     }\n+    \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/eb1e6d58f693c6357938c0bc73b664e1aa0bd982",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a98e94ce6863913e0f8c64abfef230c4420c131f",
        "message": "let's see if this fixes the NPE (http://marc.info/?l=xml-cocoon-dev&m=119910888817794&w=4)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@607736 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_98",
        "file": [
            {
                "sha": "82ddb90ab2ce32bf397a837b1c094d76fc35cc92",
                "filename": "blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/eb1e6d58f693c6357938c0bc73b664e1aa0bd982/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/eb1e6d58f693c6357938c0bc73b664e1aa0bd982/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java?ref=eb1e6d58f693c6357938c0bc73b664e1aa0bd982",
                "patch": "@@ -64,7 +64,9 @@ public void testGenerateSaxFragment() throws Exception {\n         Datatype datatype = this.datatypeManager.createDatatype(datatypeElement, false);\n         FlowJXPathSelectionList list = new FlowJXPathSelectionList(processInfoProvider, \"beans\", \"key\", \"value\", datatype,null,false,null,false);\n         DOMBuilder dest = new DOMBuilder();\n+        dest.startDocument();\n         list.generateSaxFragment(dest, Locale.ENGLISH);\n+        dest.endDocument();\n         Source expectedSource = new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.dest.xml\");\n         Document expected = this.parser.parse(expectedSource.getInputStream());\n         Document destDocument = dest.getDocument();\n@@ -91,7 +93,9 @@ public void testGenerateSaxFragmentWithNull() throws Exception {\n         Datatype datatype = this.datatypeManager.createDatatype(datatypeElement, false);\n         FlowJXPathSelectionList list = new FlowJXPathSelectionList(processInfoProvider, \"beans\", \"key\", \"value\", datatype,null,false,null,false);\n         DOMBuilder dest = new DOMBuilder();\n+        dest.startDocument();\n         list.generateSaxFragment(dest, Locale.ENGLISH);\n+        dest.endDocument();\n         Source expectedSource = new ResourceSource(\"resource://org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCaseWithNull.dest.xml\");\n         Document expected = this.parser.parse(expectedSource.getInputStream());\n         Document destDocument = dest.getDocument();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/fb52f14dba91166037ea87aad3be3bbb782e3ba0",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/6eb57a41ce74594dea572462e6260a4c66f87f1d",
        "message": "Fix NPE in finally which was eating original exception.\nFix order of execution: WebAppContextUtils, SitemapEventListeners, enterSitemap when entering\nand reverse when leaving.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@588809 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_99",
        "file": [
            {
                "sha": "0c6b32ae857d563e76c8ab75e510638e2bf42811",
                "filename": "core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "status": "modified",
                "additions": 16,
                "deletions": 14,
                "changes": 30,
                "blob_url": "https://github.com/apache/cocoon/blob/fb52f14dba91166037ea87aad3be3bbb782e3ba0/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/fb52f14dba91166037ea87aad3be3bbb782e3ba0/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/treeprocessor/ConcreteTreeProcessor.java?ref=fb52f14dba91166037ea87aad3be3bbb782e3ba0",
                "patch": "@@ -215,11 +215,11 @@ protected boolean process(Environment environment, InvokeContext context)\n             handle = WebAppContextUtils.enteringContext(this.webAppContext);\n             // invoke listeners\n             // only invoke if pipeline is not internally\n-            if ( !context.isBuildingPipelineOnly() ) {\n+            if (!context.isBuildingPipelineOnly()) {\n                 final EnterSitemapEvent enterEvent = new EnterSitemapEvent(this, environment);\n-                final Iterator enterSEI = this.enterSitemapEventListeners.iterator();\n-                while ( enterSEI.hasNext() ) {\n-                    final EnterSitemapEventListener current = (EnterSitemapEventListener)enterSEI.next();\n+                final Iterator i = this.enterSitemapEventListeners.iterator();\n+                while (i.hasNext()) {\n+                    final EnterSitemapEventListener current = (EnterSitemapEventListener) i.next();\n                     current.enteredSitemap(enterEvent);\n                 }\n             }\n@@ -244,17 +244,19 @@ protected boolean process(Environment environment, InvokeContext context)\n             }\n \n         } finally {\n-            this.sitemapExecutor.leaveSitemap(this, environment.getObjectModel());\n-            WebAppContextUtils.leavingContext(this.webAppContext, handle);\n-            // invoke listeners\n-            // only invoke if pipeline is not internally\n-            if ( !context.isBuildingPipelineOnly() ) {\n-                final LeaveSitemapEvent leaveEvent = new LeaveSitemapEvent(this, environment);\n-                final Iterator leaveSEI = this.leaveSitemapEventListeners.iterator();\n-                while ( leaveSEI.hasNext() ) {\n-                    final LeaveSitemapEventListener current = (LeaveSitemapEventListener)leaveSEI.next();\n-                    current.leftSitemap(leaveEvent);\n+            if (handle != null) {\n+                this.sitemapExecutor.leaveSitemap(this, environment.getObjectModel());\n+                // invoke listeners\n+                // only invoke if pipeline is not internally\n+                if (!context.isBuildingPipelineOnly()) {\n+                    final LeaveSitemapEvent leaveEvent = new LeaveSitemapEvent(this, environment);\n+                    final Iterator i = this.leaveSitemapEventListeners.iterator();\n+                    while (i.hasNext()) {\n+                        final LeaveSitemapEventListener current = (LeaveSitemapEventListener) i.next();\n+                        current.leftSitemap(leaveEvent);\n+                    }\n                 }\n+                WebAppContextUtils.leavingContext(this.webAppContext, handle);\n             }\n \n             // Decrement the concurrent request count"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d6d4e264cabece9a035914536ff33fedf6717049",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/7a52399ef7bed9c679a772717aba33b1f8b2ad84",
        "message": "Set GET as default method. Before it was null, which could generate a NPE when the servlet  HttpServlet.service.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@569649 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_100",
        "file": [
            {
                "sha": "37d1140a5bf6a360ef4eca9f24d338ef3f13119e",
                "filename": "core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletConnection.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/d6d4e264cabece9a035914536ff33fedf6717049/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletConnection.java",
                "raw_url": "https://github.com/apache/cocoon/raw/d6d4e264cabece9a035914536ff33fedf6717049/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletConnection.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/ServletConnection.java?ref=d6d4e264cabece9a035914536ff33fedf6717049",
                "patch": "@@ -109,6 +109,8 @@ public void connect() throws IOException, ServletException {\n         if (requestBody != null) {\n             request.setInputStream(new ByteArrayInputStream(requestBody.toByteArray()));\n             request.setMethod(\"POST\");\n+        } else {\n+            request.setMethod(\"GET\");\n         }\n     \t\n         ByteArrayOutputStream os = new ByteArrayOutputStream();"
            }
        ]
    }
]
[
    {
        "commit": "https://github.com/apache/cocoon/commit/88c6e3c3d47576690b6a4ecb1ab0e8f9aa20ac12",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/423b35daec7b6b1d3e6379869e65414d05fd6094",
        "message": "moving cocoon-dist-samples to the alldists profile so it's excluded from the main build (currently it NPE's\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@468114 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_101",
        "file": [
            {
                "sha": "2ed27edb959060e5933850ff060f6908f9bd579e",
                "filename": "dists/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 4,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/88c6e3c3d47576690b6a4ecb1ab0e8f9aa20ac12/dists/pom.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/88c6e3c3d47576690b6a4ecb1ab0e8f9aa20ac12/dists/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/dists/pom.xml?ref=88c6e3c3d47576690b6a4ecb1ab0e8f9aa20ac12",
                "patch": "@@ -35,10 +35,6 @@\n   <version>2-SNAPSHOT</version>\n   <name>Cocoon Distributions [modules]</name>\n \n-  <modules>\n-    <module>cocoon-dist-samples</module>\n-  </modules>\n-\n   <profiles>\n     <profile>\n       <id>alldists</id>\n@@ -49,6 +45,7 @@\n       </activation>\n       <modules>\n         <module>cocoon-dist-publishing</module>\n+        <module>cocoon-dist-samples</module>\n       </modules>\n     </profile>\n   </profiles>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d96e3b3d6881cef43176af43473bad798a9c54fc",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a5fc0053c4ca217d9d94ebe93ac4fa30d852a745",
        "message": "Avoid NPE in ResourceReader when InputSource returns null on getURI (COCOON-1935). Due to Alexander Klimetschek.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@465077 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_102",
        "file": [
            {
                "sha": "acb378bf095254ba5fcd510778a3e896546253db",
                "filename": "core/cocoon-core/src/main/java/org/apache/cocoon/reading/ResourceReader.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/d96e3b3d6881cef43176af43473bad798a9c54fc/core/cocoon-core/src/main/java/org/apache/cocoon/reading/ResourceReader.java",
                "raw_url": "https://github.com/apache/cocoon/raw/d96e3b3d6881cef43176af43473bad798a9c54fc/core/cocoon-core/src/main/java/org/apache/cocoon/reading/ResourceReader.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/main/java/org/apache/cocoon/reading/ResourceReader.java?ref=d96e3b3d6881cef43176af43473bad798a9c54fc",
                "patch": "@@ -238,7 +238,9 @@ public long getLastModified() {\n         }\n \n         final String systemId = (String) documents.get(request.getRequestURI());\n-        if (systemId == null || inputSource.getURI().equals(systemId)) {\n+        // Note: getURI() might be null in some incomplete implementations\n+        final String sourceURI = inputSource.getURI();\n+        if (systemId == null || (sourceURI != null && sourceURI.equals(systemId))) {\n             return inputSource.getLastModified();\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/d3eb31b1a05bf091f2a579f893d84796fdefad22",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/1741b4a5531f72b38114d7964ae45ef15020e08b",
        "message": "Add layout source to stream complete coplets/layouts.\r\nRevert to older Castor version (0.9.9 fails with NPEs)\r\nFix portlet url creation\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@328687 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_103",
        "file": [
            {
                "sha": "31eed69cf1c46fc392cd4bb2bae4f10b3323c8d1",
                "filename": "legal/castor-0.9.6-xml.jar.license.txt",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/cocoon/blob/d3eb31b1a05bf091f2a579f893d84796fdefad22/legal/castor-0.9.6-xml.jar.license.txt",
                "raw_url": "https://github.com/apache/cocoon/raw/d3eb31b1a05bf091f2a579f893d84796fdefad22/legal/castor-0.9.6-xml.jar.license.txt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/legal/castor-0.9.6-xml.jar.license.txt?ref=d3eb31b1a05bf091f2a579f893d84796fdefad22",
                "previous_filename": "legal/castor-0.9.9-xml.jar.license.txt"
            },
            {
                "sha": "e7dbbb19b5fb5c772bab373164f80aae4536cd1a",
                "filename": "lib/jars.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/d3eb31b1a05bf091f2a579f893d84796fdefad22/lib/jars.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/d3eb31b1a05bf091f2a579f893d84796fdefad22/lib/jars.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/jars.xml?ref=d3eb31b1a05bf091f2a579f893d84796fdefad22",
                "patch": "@@ -646,7 +646,7 @@\n       binding, Java-to-SQL persistence.\n     </description>\n     <used-by>CastorTransformer and precept</used-by>\n-    <lib>optional/castor-0.9.9-xml.jar</lib>\n+    <lib>optional/castor-0.9.6-xml.jar</lib>\n     <homepage>http://castor.codehaus.org/</homepage>\n   </file>\n "
            },
            {
                "sha": "444c5a1ecb3375e3dee0c283601be4dba5c773e8",
                "filename": "lib/optional/castor-0.9.6-xml.jar",
                "status": "added",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/cocoon/blob/d3eb31b1a05bf091f2a579f893d84796fdefad22/lib/optional/castor-0.9.6-xml.jar",
                "raw_url": "https://github.com/apache/cocoon/raw/d3eb31b1a05bf091f2a579f893d84796fdefad22/lib/optional/castor-0.9.6-xml.jar",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/optional/castor-0.9.6-xml.jar?ref=d3eb31b1a05bf091f2a579f893d84796fdefad22"
            },
            {
                "sha": "25040631f520c1c4c185a7572a56dde9f3b37559",
                "filename": "lib/optional/castor-0.9.9-xml.jar",
                "status": "removed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/cocoon/blob/1741b4a5531f72b38114d7964ae45ef15020e08b/lib/optional/castor-0.9.9-xml.jar",
                "raw_url": "https://github.com/apache/cocoon/raw/1741b4a5531f72b38114d7964ae45ef15020e08b/lib/optional/castor-0.9.9-xml.jar",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/optional/castor-0.9.9-xml.jar?ref=1741b4a5531f72b38114d7964ae45ef15020e08b"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/cfaf5546786e9cd0d132288d9db79a35522df01c",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/f55437b1a5ca27c63052c4d5c4ce809d783927a0",
        "message": "Start with a minimal set of dynamic settings\r\nQuick fix for NPE in OJB\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@177968 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_104",
        "file": [
            {
                "sha": "91bb9334d6b877e30e70cd39a0e981216d28eebe",
                "filename": "src/java/org/apache/cocoon/core/BaseSettings.java",
                "status": "modified",
                "additions": 132,
                "deletions": 2,
                "changes": 134,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/BaseSettings.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/BaseSettings.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/BaseSettings.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -20,13 +20,24 @@\n import java.util.Map;\n \n /**\n- * This object holds the global configuration of Cocoon that can't be changed\n- * during runtime.\n+ * The settings (configuration) for the Cocoon core are described through the {@link BaseSettings}\n+ * interface and the {@link DynamicSettings} interface.\n+ * Whereas the settings of the {@link BaseSettings} object can't be changed at runtime,\n+ * the settings of the {@link DynamicSettings} object are mutable. Use the {@link Core} instance\n+ * to update the settings.\n  *\n  * @version SVN $Id$\n  */\n public interface BaseSettings {\n \n+    /** Default value for {@link #isManageExceptions()}. */\n+    boolean MANAGE_EXCEPTIONS = true;\n+\n+    /**\n+     * Default value for {@link #isInitClassloader()} setting (false)\n+     */\n+    boolean INIT_CLASSLOADER = false;\n+\n     /** Name of the property specifying a user properties file */\n     String PROPERTY_USER_SETTINGS = \"org.apache.cocoon.settings\";\n \n@@ -98,6 +109,71 @@\n      */\n     String KEY_PARENT_SERVICE_MANAGER = \"parentservicemanager\";\n \n+    /**\n+     * This parameter tells Cocoon to set the thread's context classloader to\n+     * its own classloader. If you experience strange classloader issues,\n+     * try setting this parameter to \"true\".\n+     */\n+    String KEY_INIT_CLASSLOADER = \"classloader.init\";\n+\n+    /**\n+     * This parameter indicates the category id of the logger from the LogKit\n+     * configuration used by the environment.\n+     */\n+    String KEY_LOGGING_ENVIRONMENT_LOGGER = \"logging.category.environment\";\n+\n+    /**\n+     * This parameter indicates the category id of the logger from the LogKit\n+     * management configuration for the Cocoon engine.\n+     * This logger is used for all components described in the cocoon.xconf\n+     * and sitemap.xmap file not having specified a logger with the\n+     * logger=\"...\" attribute in the component configuration file.\n+     */\n+    String KEY_LOGGING_COCOON_LOGGER = \"logging.category.cocoon\";\n+\n+    /**\n+     * This parameter allows to specify where Cocoon should put uploaded files.\n+     * The path specified can be either absolute or relative to the context\n+     * path of the servlet. On windows platform, absolute directory must start\n+     * with volume: C:\\Path\\To\\Upload\\Directory.\n+     */\n+    String KEY_UPLOADS_DIRECTORY = \"uploads.directory\";\n+\n+    /**\n+     * This parameter allows to specify where Cocoon should create its page\n+     * and other objects cache. The path specified can be either absolute or\n+     * relative to the context path of the servlet. On windows platform,\n+     * absolute directory must start with volume: C:\\Path\\To\\Cache\\Directory.\n+     */\n+    String KEY_CACHE_DIRECTORY = \"cache.directory\";\n+\n+    /**\n+     * This parameter allows to specify where Cocoon should put it's\n+     * working files. The path specified is either absolute or relative\n+     * to the context path of the Cocoon servlet. On windows platform,\n+     * absolute directory must start with volume: C:\\Path\\To\\Work\\Directory.\n+     */\n+    String KEY_WORK_DIRECTORY = \"work.directory\";\n+\n+    /**\n+     * If true or not set, this class will try to catch and handle all Cocoon exceptions.\n+     * If false, it will rethrow them to the servlet container.\n+     */\n+    String KEY_MANAGE_EXCEPTIONS = \"manageexceptions\";\n+\n+    /**\n+     * Set form encoding. This will be the character set used to decode request\n+     * parameters. If not set the ISO-8859-1 encoding will be assumed.\n+    */\n+    String KEY_FORM_ENCODING = \"formencoding\";\n+\n+    /**\n+     * If this value is specified, it will be interpreted as a log level and\n+     * all logging categories will be set to this level regardless of their\n+     * definition in the logging configuration.\n+     */\n+    String KEY_LOGGING_OVERRIDE_LOGLEVEL = \"override.loglevel\";\n+\n     /**\n      * @return Returns the configuration.\n      * @see #KEY_CONFIGURATION\n@@ -152,4 +228,58 @@\n      */\n     String getLog4jConfiguration();\n \n+    /**\n+     * @return Returns the uploadDirectory.\n+     * @see #KEY_UPLOADS_DIRECTORY\n+     */\n+    String getUploadDirectory();\n+\n+    /**\n+     * @return Returns the workDirectory.\n+     * @see #KEY_WORK_DIRECTORY\n+     */\n+    String getWorkDirectory();\n+\n+    /**\n+     * @return Returns the logger for the environment.\n+     * @see #KEY_LOGGING_ENVIRONMENT_LOGGER\n+     */\n+    String getEnvironmentLogger();\n+\n+    /**\n+     * @return Returns the overrideLogLevel.\n+     * @see #KEY_LOGGING_OVERRIDE_LOGLEVEL\n+     */\n+    String getOverrideLogLevel();\n+\n+    /**\n+     * @return Returns the formEncoding.\n+     * @see #KEY_FORM_ENCODING\n+     */\n+    String getFormEncoding();\n+\n+    /**\n+     * @return Returns the initClassloader.\n+     * @see #KEY_INIT_CLASSLOADER\n+     */\n+    boolean isInitClassloader();\n+\n+    /**\n+     * @return Returns the manageExceptions.\n+     * @see #KEY_MANAGE_EXCEPTIONS\n+     */\n+    boolean isManageExceptions();\n+\n+    /**\n+     * @return Returns the cacheDirectory.\n+     * @see #KEY_CACHE_DIRECTORY\n+     */\n+    String getCacheDirectory();\n+\n+    /**\n+     * @return Returns the cocoonLogger.\n+     * @see #KEY_LOGGING_COCOON_LOGGER\n+     */\n+    String getCocoonLogger();\n+\n }"
            },
            {
                "sha": "db2d0c7d5f8089523565013609e3793eb8785f59",
                "filename": "src/java/org/apache/cocoon/core/Core.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/Core.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/Core.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/Core.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -31,6 +31,7 @@\n import org.apache.cocoon.core.container.ComponentLocatorWrapper;\n import org.apache.cocoon.environment.internal.EnvironmentHelper;\n import org.apache.cocoon.sitemap.ComponentLocator;\n+import org.apache.commons.lang.NotImplementedException;\n \n /**\n  * This is the core Cocoon component.\n@@ -120,6 +121,14 @@ public Settings getSettings() {\n         return this.settings;\n     }\n \n+    /**\n+     * Update the dynamic settings at runtime.\n+     * @param dynSettings\n+     */\n+    public void update(DynamicSettings dynSettings) {\n+        throw new NotImplementedException(\"The update method is not implemented yet.\");\n+    }\n+\n     /**\n      * Return the environment context object.\n      * @return The environment context."
            },
            {
                "sha": "dc09f2b9a559aea98fe644ea385b3958d1caaa19",
                "filename": "src/java/org/apache/cocoon/core/CoreUtil.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/CoreUtil.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/CoreUtil.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/CoreUtil.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -666,7 +666,7 @@ public synchronized Cocoon createCocoon()\n \n             this.cocoon = c;\n         } catch (Exception e) {\n-            this.log.error(\"Exception reloading\", e);\n+            this.log.error(\"Exception reloading Cocoon.\", e);\n             this.disposeCocoon();\n             throw e;\n         }"
            },
            {
                "sha": "ee28a463350edf22993477021840508b4501a5b4",
                "filename": "src/java/org/apache/cocoon/core/DynamicSettings.java",
                "status": "modified",
                "additions": 9,
                "deletions": 127,
                "changes": 136,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/DynamicSettings.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/DynamicSettings.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/DynamicSettings.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -17,8 +17,11 @@\n \n \n /**\n- * This object holds the global configuration of Cocoon. The different settings can\n- * be changed during runtime.\n+ * The settings (configuration) for the Cocoon core are described through the {@link BaseSettings}\n+ * interface and the {@link DynamicSettings} interface.\n+ * Whereas the settings of the {@link BaseSettings} object can't be changed at runtime,\n+ * the settings of the {@link DynamicSettings} object are mutable. Use the {@link Core} instance\n+ * to update the settings.\n  *\n  * @version SVN $Id$\n  */\n@@ -36,36 +39,8 @@\n     boolean SAVE_UPLOADS_TO_DISK = true;\n     int MAX_UPLOAD_SIZE = 10000000; // 10Mb\n \n-    /**\n-     * Default value for {@link #isInitClassloader()} setting (false)\n-     */\n-    boolean INIT_CLASSLOADER = false;\n-\n     boolean SHOW_TIME = false;\n     boolean HIDE_SHOW_TIME = false;\n-    boolean MANAGE_EXCEPTIONS = true;\n-\n-    /**\n-     * This parameter tells Cocoon to set the thread's context classloader to\n-     * its own classloader. If you experience strange classloader issues,\n-     * try setting this parameter to \"true\".\n-     */\n-    String KEY_INIT_CLASSLOADER = \"classloader.init\";\n-\n-    /**\n-     * This parameter indicates the category id of the logger from the LogKit\n-     * configuration used by the environment.\n-     */\n-    String KEY_LOGGING_ENVIRONMENT_LOGGER = \"logging.category.environment\";\n-\n-    /**\n-     * This parameter indicates the category id of the logger from the LogKit\n-     * management configuration for the Cocoon engine.\n-     * This logger is used for all components described in the cocoon.xconf\n-     * and sitemap.xmap file not having specified a logger with the\n-     * logger=\"...\" attribute in the component configuration file.\n-     */\n-    String KEY_LOGGING_COCOON_LOGGER = \"logging.category.cocoon\";\n \n     /**\n      * Allow reinstantiating (reloading) of the cocoon instance. If this is\n@@ -81,14 +56,6 @@\n      */\n     String KEY_UPLOADS_ENABLE = \"uploads.enable\";\n \n-    /**\n-     * This parameter allows to specify where Cocoon should put uploaded files.\n-     * The path specified can be either absolute or relative to the context\n-     * path of the servlet. On windows platform, absolute directory must start\n-     * with volume: C:\\Path\\To\\Upload\\Directory.\n-     */\n-    String KEY_UPLOADS_DIRECTORY = \"uploads.directory\";\n-\n     /**\n      * Causes all files in multipart requests to be saved to upload-dir.\n      * Default is true for security reasons.\n@@ -108,22 +75,6 @@\n      */\n     String KEY_UPLOADS_MAXSIZE = \"uploads.maxsize\";\n \n-    /**\n-     * This parameter allows to specify where Cocoon should create its page\n-     * and other objects cache. The path specified can be either absolute or\n-     * relative to the context path of the servlet. On windows platform,\n-     * absolute directory must start with volume: C:\\Path\\To\\Cache\\Directory.\n-     */\n-    String KEY_CACHE_DIRECTORY = \"cache.directory\";\n-\n-    /**\n-     * This parameter allows to specify where Cocoon should put it's\n-     * working files. The path specified is either absolute or relative\n-     * to the context path of the Cocoon servlet. On windows platform,\n-     * absolute directory must start with volume: C:\\Path\\To\\Work\\Directory.\n-     */\n-    String KEY_WORK_DIRECTORY = \"work.directory\";\n-\n     /**\n      * Allow adding processing time to the response\n      */\n@@ -134,25 +85,6 @@\n      */\n     String KEY_HIDE_SHOWTIME = \"hideshowtime\";\n \n-    /**\n-     * If true or not set, this class will try to catch and handle all Cocoon exceptions.\n-     * If false, it will rethrow them to the servlet container.\n-     */\n-    String KEY_MANAGE_EXCEPTIONS = \"manageexceptions\";\n-\n-    /**\n-     * Set form encoding. This will be the character set used to decode request\n-     * parameters. If not set the ISO-8859-1 encoding will be assumed.\n-    */\n-    String KEY_FORM_ENCODING = \"formencoding\";\n-\n-    /**\n-     * If this value is specified, it will be interpreted as a log level and\n-     * all logging categories will be set to this level regardless of their\n-     * definition in the logging configuration.\n-     */\n-    String KEY_LOGGING_OVERRIDE_LOGLEVEL = \"override.loglevel\";\n-\n     /**\n      * Delay between reload checks for the configuration\n      */\n@@ -181,42 +113,12 @@\n      */\n     boolean isAutosaveUploads();\n \n-    /**\n-     * @return Returns the cacheDirectory.\n-     * @see #KEY_CACHE_DIRECTORY\n-     */\n-    String getCacheDirectory();\n-\n-    /**\n-     * @return Returns the cocoonLogger.\n-     * @see #KEY_LOGGING_COCOON_LOGGER\n-     */\n-    String getCocoonLogger();\n-\n     /**\n      * @return Returns the enableUploads.\n      * @see #KEY_UPLOADS_ENABLE\n      */\n     boolean isEnableUploads();\n \n-    /**\n-     * @return Returns the formEncoding.\n-     * @see #KEY_FORM_ENCODING\n-     */\n-    String getFormEncoding();\n-\n-    /**\n-     * @return Returns the initClassloader.\n-     * @see #KEY_INIT_CLASSLOADER\n-     */\n-    boolean isInitClassloader();\n-\n-    /**\n-     * @return Returns the manageExceptions.\n-     * @see #KEY_MANAGE_EXCEPTIONS\n-     */\n-    boolean isManageExceptions();\n-\n     /**\n      * @return Returns the maxUploadSize.\n      * @see #KEY_UPLOADS_MAXSIZE\n@@ -235,30 +137,6 @@\n      */\n     boolean isShowTime();\n \n-    /**\n-     * @return Returns the uploadDirectory.\n-     * @see #KEY_UPLOADS_DIRECTORY\n-     */\n-    String getUploadDirectory();\n-\n-    /**\n-     * @return Returns the workDirectory.\n-     * @see #KEY_WORK_DIRECTORY\n-     */\n-    String getWorkDirectory();\n-\n-    /**\n-     * @return Returns the logger for the environment.\n-     * @see #KEY_LOGGING_ENVIRONMENT_LOGGER\n-     */\n-    String getEnvironmentLogger();\n-\n-    /**\n-     * @return Returns the overrideLogLevel.\n-     * @see #KEY_LOGGING_OVERRIDE_LOGLEVEL\n-     */\n-    String getOverrideLogLevel();\n-\n     /**\n      * @return Returns the configurationReloadDelay.\n      * @see #KEY_CONFIGURATION_RELOAD_DELAY\n@@ -271,4 +149,8 @@\n      */\n     boolean isLazyMode();\n \n+    boolean isAllowOverwrite();\n+\n+    boolean isSilentlyRename();\n+\n }"
            },
            {
                "sha": "2d5ae4d169e1d36ef002114935ae32167109e7e2",
                "filename": "src/java/org/apache/cocoon/core/MutableSettings.java",
                "status": "modified",
                "additions": 563,
                "deletions": 1,
                "changes": 564,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/MutableSettings.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/MutableSettings.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/MutableSettings.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -15,7 +15,10 @@\n  */\n package org.apache.cocoon.core;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n \n@@ -27,11 +30,205 @@\n  *\n  * @version SVN $Id$\n  */\n-public class MutableSettings extends Settings {\n+public class MutableSettings implements Settings {\n \n     /** Are we still mutable? */\n     protected boolean readOnly = false;\n \n+    /** Prefix for properties */\n+    protected static final String KEYPREFIX = \"org.apache.cocoon.\";\n+\n+    /**\n+     * The list of properties used to configure Cocoon\n+     */\n+    protected List properties = new ArrayList();\n+\n+    /**\n+     * This parameter tells Cocoon to set the thread's context classloader to\n+     * its own classloader. If you experience strange classloader issues,\n+     * try setting this parameter to \"true\".\n+     */\n+    protected boolean initClassloader = INIT_CLASSLOADER;\n+\n+    /**\n+     * This parameter allows to set system properties\n+     */\n+    protected Map forceProperties = new HashMap();\n+\n+    /**\n+     * This parameter points to the main configuration file for Cocoon.\n+     * Note that the path is specified in absolute notation but it will be\n+     * resolved relative to the application context path.\n+     */\n+    protected String configuration;\n+\n+    /**\n+     * This parameter indicates the configuration file of the LogKit management\n+     */\n+    protected String loggingConfiguration;\n+\n+    /**\n+     * This parameter indicates the category id of the logger from the LogKit\n+     * configuration used by the environment.\n+     */\n+    protected String environmentLogger;\n+\n+    /**\n+     * This parameter indicates the category id of the logger from the LogKit\n+     * management configuration for the Cocoon engine.\n+     * This logger is used for all components described in the cocoon.xconf\n+     * and sitemap.xmap file not having specified a logger with the\n+     * logger=\"...\" attribute in the component configuration file.\n+     */\n+    protected String cocoonLogger;\n+\n+    /**\n+     * This parameter indicates the log level to use throughout startup of the\n+     * system. As soon as the logkit.xconf the setting of the logkit.xconf\n+     * configuration is used instead! Only for startup and if the logkit.xconf is\n+     * not readable/available this log level is of importance.\n+     */\n+    protected String bootstrapLogLevel;\n+\n+    /**\n+     * This parameter switches the logging system from LogKit to Log4J for Cocoon.\n+     * Log4J has to be configured already.\n+     */\n+    protected String loggerManagerClassName;\n+\n+    /**\n+     * If you want to configure log4j using Cocoon, then you can define\n+     * an XML configuration file here. You can use the usual log4j property\n+     * substituation mechanism, e.g. ${context-root} is replaced by the\n+     * context root of this web application etc.\n+     * You can configure the log4j configuration even if you use LogKit\n+     * for Cocoon logging. You can use this to configure third party code\n+     * for example.\n+     */\n+    protected String log4jConfiguration;\n+\n+    /**\n+     * Allow reinstantiating (reloading) of the cocoon instance. If this is\n+     * set to \"yes\" or \"true\", a new cocoon instance can be created using\n+     * the request parameter \"cocoon-reload\". It also enables that Cocoon is\n+     * reloaded when cocoon.xconf changes. Default is no for security reasons.\n+     */\n+    protected boolean allowReload = ALLOW_RELOAD;\n+\n+    /**\n+     * This parameter is used to list classes that should be loaded at\n+     * initialization time of the servlet. For example, JDBC Drivers used need to\n+     * be named here. Additional entries may be inserted here during build\n+     * depending on your build properties.\n+     */\n+    protected List loadClasses = new ArrayList();\n+\n+    /**\n+     * Causes all files in multipart requests to be processed.\n+     * Default is false for security reasons.\n+     */\n+    protected boolean enableUploads = ENABLE_UPLOADS;\n+\n+    /**\n+     * This parameter allows to specify where Cocoon should put uploaded files.\n+     * The path specified can be either absolute or relative to the context\n+     * path of the servlet. On windows platform, absolute directory must start\n+     * with volume: C:\\Path\\To\\Upload\\Directory.\n+     */\n+    protected String uploadDirectory;\n+\n+    /**\n+     * Causes all files in multipart requests to be saved to upload-dir.\n+     * Default is true for security reasons.\n+     */\n+    protected boolean autosaveUploads = SAVE_UPLOADS_TO_DISK;\n+\n+    /**\n+     * Specify handling of name conflicts when saving uploaded files to disk.\n+     * Acceptable values are deny, allow, rename (default). Files are renamed\n+     * x_filename where x is an integer value incremented to make the new\n+     * filename unique.\n+     */\n+    protected String overwriteUploads;\n+\n+    /**\n+     * Specify maximum allowed size of the upload. Defaults to 10 Mb.\n+     */\n+    protected int maxUploadSize = MAX_UPLOAD_SIZE;\n+\n+    /**\n+     * This parameter allows to specify where Cocoon should create its page\n+     * and other objects cache. The path specified can be either absolute or\n+     * relative to the context path of the servlet. On windows platform,\n+     * absolute directory must start with volume: C:\\Path\\To\\Cache\\Directory.\n+     */\n+    protected String cacheDirectory;\n+\n+    /**\n+     * This parameter allows to specify where Cocoon should put it's\n+     * working files. The path specified is either absolute or relative\n+     * to the context path of the Cocoon servlet. On windows platform,\n+     * absolute directory must start with volume: C:\\Path\\To\\Work\\Directory.\n+     */\n+    protected String workDirectory;\n+\n+    /**\n+     * This parameter allows to specify additional directories or jars\n+     * which Cocoon should put into it's own classpath.\n+     * Note that absolute pathes are taken as such but relative pathes\n+     * are rooted at the context root of the Cocoon servlet.\n+     */\n+    protected List extraClasspaths = new ArrayList();\n+\n+    /**\n+     * This parameter allows you to select the parent service manager.\n+     * The class will be instantiated via the constructor that takes a single\n+     * String as a parameter. That String will be equal to the text after the '/'.\n+     *\n+     * Cocoon honors the LogEnabled, Initializable and Disposable interfaces for\n+     * this class, if it implements them.\n+     */\n+    protected String parentServiceManagerClassName;\n+\n+    /**\n+     * Allow adding processing time to the response\n+     */\n+    protected boolean showTime = SHOW_TIME;\n+\n+    /**\n+     * If true, processing time will be added as an HTML comment\n+     */\n+    protected boolean hideShowTime = HIDE_SHOW_TIME;\n+\n+    /**\n+     * If true or not set, this class will try to catch and handle all Cocoon exceptions.\n+     * If false, it will rethrow them to the servlet container.\n+     */\n+    protected boolean manageExceptions = MANAGE_EXCEPTIONS;\n+\n+    /**\n+     * Set form encoding. This will be the character set used to decode request\n+     * parameters. If not set the ISO-8859-1 encoding will be assumed.\n+    */\n+    protected String formEncoding;\n+\n+    /**\n+     * If this value is specified, it will be interpreted as a log level and\n+     * all logging categories will be set to this level regardless of their\n+     * definition in the logging configuration.\n+     */\n+    protected String overrideLogLevel;\n+\n+    /**\n+     * Delay between reload checks for the configuration\n+     */\n+    protected long configurationReloadDelay = 1000;\n+\n+    /**\n+     * Lazy mode for component loading\n+     */\n+    protected boolean lazyMode = false;\n+\n     /**\n      * Create a new settings object\n      */\n@@ -115,6 +312,371 @@ public void fill(Properties props) {\n         }\n     }\n \n+    /**\n+     * @return Returns the hideShowTime.\n+     */\n+    public boolean isHideShowTime() {\n+        return this.hideShowTime;\n+    }\n+\n+    /**\n+     * @return Returns the allowReload.\n+     */\n+    public boolean isAllowReload() {\n+        return this.allowReload;\n+    }\n+\n+    /**\n+     * @return Returns the autosaveUploads.\n+     */\n+    public boolean isAutosaveUploads() {\n+        return this.autosaveUploads;\n+    }\n+\n+    /**\n+     * @return Returns the cacheDirectory.\n+     */\n+    public String getCacheDirectory() {\n+        return this.cacheDirectory;\n+    }\n+\n+    /**\n+     * @return Returns the cocoonLogger.\n+     */\n+    public String getCocoonLogger() {\n+        return this.cocoonLogger;\n+    }\n+\n+    /**\n+     * @return Returns the configuration.\n+     */\n+    public String getConfiguration() {\n+        return this.configuration;\n+    }\n+\n+    /**\n+     * @return Returns the enableUploads.\n+     */\n+    public boolean isEnableUploads() {\n+        return this.enableUploads;\n+    }\n+\n+    /**\n+     * @return Returns the extraClasspaths.\n+     */\n+    public List getExtraClasspaths() {\n+        return this.extraClasspaths;\n+    }\n+\n+    /**\n+     * @return Returns the forceProperties.\n+     */\n+    public Map getForceProperties() {\n+        return this.forceProperties;\n+    }\n+\n+    /**\n+     * @return Returns the formEncoding.\n+     */\n+    public String getFormEncoding() {\n+        return this.formEncoding;\n+    }\n+\n+    /**\n+     * @return Returns the initClassloader.\n+     */\n+    public boolean isInitClassloader() {\n+        return this.initClassloader;\n+    }\n+\n+    /**\n+     * @return Returns the loadClasses.\n+     */\n+    public Iterator getLoadClasses() {\n+        return this.loadClasses.iterator();\n+    }\n+\n+    /**\n+     * @return Returns the loggerClassName.\n+     */\n+    public String getLoggerManagerClassName() {\n+        return this.loggerManagerClassName;\n+    }\n+\n+    /**\n+     * @return Returns the loggingConfiguration.\n+     */\n+    public String getLoggingConfiguration() {\n+        return this.loggingConfiguration;\n+    }\n+\n+    /**\n+     * @return Returns the logLevel.\n+     */\n+    public String getBootstrapLogLevel() {\n+        return this.bootstrapLogLevel;\n+    }\n+\n+    /**\n+     * @return Returns the manageExceptions.\n+     */\n+    public boolean isManageExceptions() {\n+        return this.manageExceptions;\n+    }\n+\n+    /**\n+     * @return Returns the maxUploadSize.\n+     */\n+    public int getMaxUploadSize() {\n+        return this.maxUploadSize;\n+    }\n+\n+    /**\n+     * @return Returns the overwriteUploads.\n+     */\n+    public String getOverwriteUploads() {\n+        return this.overwriteUploads;\n+    }\n+\n+    /**\n+     * @return Returns the parentServiceManagerClassName.\n+     */\n+    public String getParentServiceManagerClassName() {\n+        return this.parentServiceManagerClassName;\n+    }\n+\n+    /**\n+     * @return Returns the showTime.\n+     */\n+    public boolean isShowTime() {\n+        return this.showTime;\n+    }\n+\n+    /**\n+     * @return Returns the uploadDirectory.\n+     */\n+    public String getUploadDirectory() {\n+        return this.uploadDirectory;\n+    }\n+\n+    /**\n+     * @return Returns the workDirectory.\n+     */\n+    public String getWorkDirectory() {\n+        return this.workDirectory;\n+    }\n+\n+    /**\n+     * @return Returns the log4jConfiguration.\n+     */\n+    public String getLog4jConfiguration() {\n+        return this.log4jConfiguration;\n+    }\n+\n+    /**\n+     * @return Returns the accessLogger.\n+     */\n+    public String getEnvironmentLogger() {\n+        return this.environmentLogger;\n+    }\n+\n+    /**\n+     * @return Returns the overrideLogLevel.\n+     */\n+    public String getOverrideLogLevel() {\n+        return this.overrideLogLevel;\n+    }\n+\n+    public boolean isAllowOverwrite() {\n+        if (\"deny\".equalsIgnoreCase(this.overwriteUploads)) {\n+            return false;\n+        } else if (\"allow\".equalsIgnoreCase(this.overwriteUploads)) {\n+            return true;\n+        } else {\n+            // either rename is specified or unsupported value - default to rename.\n+            return false;\n+        }\n+    }\n+\n+    public boolean isSilentlyRename() {\n+        if (\"deny\".equalsIgnoreCase(this.overwriteUploads)) {\n+            return false;\n+        } else if (\"allow\".equalsIgnoreCase(this.overwriteUploads)) {\n+            return false; // ignored in this case\n+        } else {\n+            // either rename is specified or unsupported value - default to rename.\n+            return true;\n+        }\n+    }\n+\n+    /**\n+     * @return Returns the configurationReloadDelay.\n+     */\n+    public long getConfigurationReloadDelay() {\n+        return configurationReloadDelay;\n+    }\n+\n+    /**\n+     * @return Returns the lazyMode.\n+     */\n+    public boolean isLazyMode() {\n+        return this.lazyMode;\n+    }\n+\n+    public String getProperty(String name) {\n+        return this.getProperty(name, null);\n+    }\n+\n+    public String getProperty(String key, String defaultValue) {\n+        if ( key == null ) {\n+            return defaultValue;\n+        }\n+        String value = null;\n+        if ( key.startsWith(KEYPREFIX) ) {\n+            final String sKey = key.substring(KEYPREFIX.length());\n+            if ( sKey.equals(KEY_INIT_CLASSLOADER) ) {\n+                value = String.valueOf(this.initClassloader);\n+            } else if ( sKey.equals(KEY_CONFIGURATION) ) {\n+                value = this.configuration;\n+            } else if ( sKey.equals(KEY_CONFIGURATION_RELOAD_DELAY) ) {\n+                value = String.valueOf(this.configurationReloadDelay);\n+            } else if ( sKey.equals(KEY_LOGGING_CONFIGURATION) ) {\n+                value = this.loggingConfiguration;\n+            } else if ( sKey.equals(KEY_LOGGING_ENVIRONMENT_LOGGER) ) {\n+                value = this.environmentLogger;\n+            } else if ( sKey.equals(KEY_LOGGING_COCOON_LOGGER) ) {\n+                value = this.cocoonLogger;\n+            } else if ( sKey.equals(KEY_LOGGING_BOOTSTRAP_LOGLEVEL) ) {\n+                value = this.bootstrapLogLevel;\n+            } else if ( sKey.equals(KEY_LOGGING_MANAGER_CLASS) ) {\n+                value = this.loggerManagerClassName;\n+            } else if ( sKey.equals(KEY_LOGGING_LOG4J_CONFIGURATION) ) {\n+                value = this.log4jConfiguration;\n+            } else if ( sKey.equals(KEY_ALLOW_RELOAD) ) {\n+                value = String.valueOf(this.allowReload);\n+            } else if ( sKey.equals(KEY_UPLOADS_ENABLE) ) {\n+                value = String.valueOf(this.enableUploads);\n+            } else if ( sKey.equals(KEY_UPLOADS_DIRECTORY) ) {\n+                value = this.uploadDirectory = value;\n+            } else if ( sKey.equals(KEY_UPLOADS_AUTOSAVE) ) {\n+                value = String.valueOf(this.autosaveUploads);\n+            } else if ( sKey.equals(KEY_UPLOADS_OVERWRITE) ) {\n+                value = this.overwriteUploads;\n+            } else if ( sKey.equals(KEY_UPLOADS_MAXSIZE) ) {\n+                value = String.valueOf(this.maxUploadSize);\n+            } else if ( sKey.equals(KEY_CACHE_DIRECTORY) ) {\n+                value = this.cacheDirectory;\n+            } else if ( sKey.equals(KEY_WORK_DIRECTORY) ) {\n+                value = this.workDirectory;\n+            } else if ( sKey.equals(KEY_PARENT_SERVICE_MANAGER) ) {\n+                value = this.parentServiceManagerClassName;\n+            } else if ( sKey.equals(KEY_SHOWTIME) ) {\n+                value = String.valueOf(this.showTime);\n+            } else if ( sKey.equals(KEY_HIDE_SHOWTIME) ) {\n+                value = String.valueOf(this.hideShowTime);\n+            } else if ( sKey.equals(KEY_MANAGE_EXCEPTIONS) ) {\n+                value = String.valueOf(this.manageExceptions);\n+            } else if ( sKey.equals(KEY_FORM_ENCODING) ) {\n+                value = this.formEncoding;\n+            } else if ( sKey.equals(KEY_LOGGING_OVERRIDE_LOGLEVEL) ) {\n+                value = this.overrideLogLevel;\n+            } else if ( sKey.equals(KEY_LAZY_MODE) ) {\n+                value = String.valueOf(this.lazyMode);\n+            } else if ( key.equals(KEY_LOAD_CLASSES) ) {\n+                value = this.toString(this.loadClasses);\n+            } else if ( key.equals(KEY_EXTRA_CLASSPATHS) ) {\n+                this.toString(this.extraClasspaths);\n+            } else if ( key.equals(KEY_FORCE_PROPERTIES) ) {\n+                this.toString(this.forceProperties);\n+            }\n+        }\n+\n+        int i = 0;\n+        while ( i < this.properties.size() && value == null ) {\n+            final Properties p = (Properties)this.properties.get(i);\n+            value = p.getProperty(key);\n+            i++;\n+        }\n+        if ( value == null ) {\n+            value = defaultValue;\n+        }\n+        return value;\n+    }\n+\n+    /**\n+     * @see java.lang.Object#toString()\n+     */\n+    public String toString() {\n+        return \"Settings:\\n\"+\n+          KEY_CONFIGURATION + \" : \" + this.configuration + '\\n' +\n+          KEY_CONFIGURATION_RELOAD_DELAY + \" : \" + this.configurationReloadDelay + '\\n' +\n+          KEY_ALLOW_RELOAD + \" : \" + this.allowReload + '\\n' +\n+          KEY_INIT_CLASSLOADER + \" : \" + this.initClassloader + '\\n' +\n+          KEY_EXTRA_CLASSPATHS + \" : \" + this.toString(this.extraClasspaths) + '\\n' +\n+          KEY_LOAD_CLASSES + \" : \" + this.toString(this.loadClasses) + '\\n' +\n+          KEY_FORCE_PROPERTIES + \" : \" + this.toString(this.forceProperties) + '\\n' +\n+          KEY_LOGGING_CONFIGURATION + \" : \" + this.loggingConfiguration + '\\n' +\n+          KEY_LOGGING_ENVIRONMENT_LOGGER + \" : \" + this.environmentLogger + '\\n' +\n+          KEY_LOGGING_BOOTSTRAP_LOGLEVEL + \" : \" + this.bootstrapLogLevel + '\\n' +\n+          KEY_LOGGING_COCOON_LOGGER + \" : \" + this.cocoonLogger + '\\n' +\n+          KEY_LOGGING_LOG4J_CONFIGURATION + \" : \" + this.log4jConfiguration + '\\n' +\n+          KEY_LOGGING_MANAGER_CLASS + \" : \" + this.loggerManagerClassName + '\\n' +\n+          KEY_LOGGING_OVERRIDE_LOGLEVEL + \" : \" + this.overrideLogLevel + '\\n' +\n+          KEY_MANAGE_EXCEPTIONS + \" : \" + this.manageExceptions + '\\n' +\n+          KEY_PARENT_SERVICE_MANAGER + \" : \" + this.parentServiceManagerClassName + '\\n' +\n+          KEY_UPLOADS_DIRECTORY + \" : \" + this.uploadDirectory + '\\n' +\n+          KEY_UPLOADS_AUTOSAVE + \" : \" + this.autosaveUploads + '\\n' +\n+          KEY_UPLOADS_ENABLE + \" : \" + this.enableUploads + '\\n' +\n+          KEY_UPLOADS_MAXSIZE + \" : \" + this.maxUploadSize + '\\n' +\n+          KEY_UPLOADS_OVERWRITE + \" : \" + this.overwriteUploads + '\\n' +\n+          KEY_CACHE_DIRECTORY + \" : \" + this.cacheDirectory + '\\n' +\n+          KEY_WORK_DIRECTORY + \" : \" + this.workDirectory + '\\n' +\n+          KEY_FORM_ENCODING + \" : \" + this.formEncoding + '\\n' +\n+          KEY_SHOWTIME + \" : \" + this.showTime + '\\n' +\n+          KEY_HIDE_SHOWTIME + \" : \" + this.hideShowTime + '\\n' +\n+          KEY_LAZY_MODE + \" : \" + this.lazyMode + '\\n';\n+    }\n+\n+    /**\n+     * Helper method to make a string out of a list of objects.\n+     */\n+    protected String toString(List a) {\n+        final StringBuffer buffer = new StringBuffer();\n+        final Iterator i = a.iterator();\n+        boolean first = true;\n+        while ( i.hasNext() ) {\n+            if ( first ) {\n+                first = false;\n+            } else {\n+                buffer.append(\", \");\n+            }\n+            buffer.append(i.next());\n+        }\n+        return buffer.toString();        \n+    }\n+\n+    /**\n+     * Helper method to make a string out of a map of objects.\n+     */\n+    protected String toString(Map a) {\n+        final StringBuffer buffer = new StringBuffer(\"{\");\n+        final Iterator i = a.entrySet().iterator();\n+        boolean first = true;\n+        while ( i.hasNext() ) {\n+            if ( first ) {\n+                first = false;\n+            } else {\n+                buffer.append(\", \");\n+            }\n+            final Map.Entry current = (Map.Entry)i.next();\n+            buffer.append(current.getKey());\n+            buffer.append(\"=\");\n+            buffer.append(current.getValue());\n+        }\n+        buffer.append(\"}\");\n+        return buffer.toString();        \n+    }\n+\n     /**\n      * @param hideShowTime The hideShowTime to set.\n      */"
            },
            {
                "sha": "1aa9ce86e180a1b175cb4e04b1a0e7c8c5b5a2b1",
                "filename": "src/java/org/apache/cocoon/core/Settings.java",
                "status": "modified",
                "additions": 3,
                "deletions": 571,
                "changes": 574,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/Settings.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/core/Settings.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/core/Settings.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -15,584 +15,16 @@\n  */\n package org.apache.cocoon.core;\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Properties;\n \n /**\n  * This object holds the global configuration of Cocoon.\n  *\n  * @version SVN $Id$\n  */\n-public class Settings implements BaseSettings, DynamicSettings {\n+public interface Settings extends BaseSettings, DynamicSettings {\n \n-    /** Prefix for properties */\n-    protected static final String KEYPREFIX = \"org.apache.cocoon.\";\n+    String getProperty(String name);\n \n-    /**\n-     * The list of properties used to configure Cocoon\n-     */\n-    protected List properties = new ArrayList();\n-\n-    /**\n-     * This parameter tells Cocoon to set the thread's context classloader to\n-     * its own classloader. If you experience strange classloader issues,\n-     * try setting this parameter to \"true\".\n-     */\n-    protected boolean initClassloader = INIT_CLASSLOADER;\n-\n-    /**\n-     * This parameter allows to set system properties\n-     */\n-    protected Map forceProperties = new HashMap();\n-\n-    /**\n-     * This parameter points to the main configuration file for Cocoon.\n-     * Note that the path is specified in absolute notation but it will be\n-     * resolved relative to the application context path.\n-     */\n-    protected String configuration;\n-\n-    /**\n-     * This parameter indicates the configuration file of the LogKit management\n-     */\n-    protected String loggingConfiguration;\n-\n-    /**\n-     * This parameter indicates the category id of the logger from the LogKit\n-     * configuration used by the environment.\n-     */\n-    protected String environmentLogger;\n-\n-    /**\n-     * This parameter indicates the category id of the logger from the LogKit\n-     * management configuration for the Cocoon engine.\n-     * This logger is used for all components described in the cocoon.xconf\n-     * and sitemap.xmap file not having specified a logger with the\n-     * logger=\"...\" attribute in the component configuration file.\n-     */\n-    protected String cocoonLogger;\n-\n-    /**\n-     * This parameter indicates the log level to use throughout startup of the\n-     * system. As soon as the logkit.xconf the setting of the logkit.xconf\n-     * configuration is used instead! Only for startup and if the logkit.xconf is\n-     * not readable/available this log level is of importance.\n-     */\n-    protected String bootstrapLogLevel;\n-\n-    /**\n-     * This parameter switches the logging system from LogKit to Log4J for Cocoon.\n-     * Log4J has to be configured already.\n-     */\n-    protected String loggerManagerClassName;\n-\n-    /**\n-     * If you want to configure log4j using Cocoon, then you can define\n-     * an XML configuration file here. You can use the usual log4j property\n-     * substituation mechanism, e.g. ${context-root} is replaced by the\n-     * context root of this web application etc.\n-     * You can configure the log4j configuration even if you use LogKit\n-     * for Cocoon logging. You can use this to configure third party code\n-     * for example.\n-     */\n-    protected String log4jConfiguration;\n-\n-    /**\n-     * Allow reinstantiating (reloading) of the cocoon instance. If this is\n-     * set to \"yes\" or \"true\", a new cocoon instance can be created using\n-     * the request parameter \"cocoon-reload\". It also enables that Cocoon is\n-     * reloaded when cocoon.xconf changes. Default is no for security reasons.\n-     */\n-    protected boolean allowReload = ALLOW_RELOAD;\n-\n-    /**\n-     * This parameter is used to list classes that should be loaded at\n-     * initialization time of the servlet. For example, JDBC Drivers used need to\n-     * be named here. Additional entries may be inserted here during build\n-     * depending on your build properties.\n-     */\n-    protected List loadClasses = new ArrayList();\n-\n-    /**\n-     * Causes all files in multipart requests to be processed.\n-     * Default is false for security reasons.\n-     */\n-    protected boolean enableUploads = ENABLE_UPLOADS;\n-\n-    /**\n-     * This parameter allows to specify where Cocoon should put uploaded files.\n-     * The path specified can be either absolute or relative to the context\n-     * path of the servlet. On windows platform, absolute directory must start\n-     * with volume: C:\\Path\\To\\Upload\\Directory.\n-     */\n-    protected String uploadDirectory;\n-\n-    /**\n-     * Causes all files in multipart requests to be saved to upload-dir.\n-     * Default is true for security reasons.\n-     */\n-    protected boolean autosaveUploads = SAVE_UPLOADS_TO_DISK;\n-\n-    /**\n-     * Specify handling of name conflicts when saving uploaded files to disk.\n-     * Acceptable values are deny, allow, rename (default). Files are renamed\n-     * x_filename where x is an integer value incremented to make the new\n-     * filename unique.\n-     */\n-    protected String overwriteUploads;\n-\n-    /**\n-     * Specify maximum allowed size of the upload. Defaults to 10 Mb.\n-     */\n-    protected int maxUploadSize = MAX_UPLOAD_SIZE;\n-\n-    /**\n-     * This parameter allows to specify where Cocoon should create its page\n-     * and other objects cache. The path specified can be either absolute or\n-     * relative to the context path of the servlet. On windows platform,\n-     * absolute directory must start with volume: C:\\Path\\To\\Cache\\Directory.\n-     */\n-    protected String cacheDirectory;\n-\n-    /**\n-     * This parameter allows to specify where Cocoon should put it's\n-     * working files. The path specified is either absolute or relative\n-     * to the context path of the Cocoon servlet. On windows platform,\n-     * absolute directory must start with volume: C:\\Path\\To\\Work\\Directory.\n-     */\n-    protected String workDirectory;\n-\n-    /**\n-     * This parameter allows to specify additional directories or jars\n-     * which Cocoon should put into it's own classpath.\n-     * Note that absolute pathes are taken as such but relative pathes\n-     * are rooted at the context root of the Cocoon servlet.\n-     */\n-    protected List extraClasspaths = new ArrayList();\n-\n-    /**\n-     * This parameter allows you to select the parent service manager.\n-     * The class will be instantiated via the constructor that takes a single\n-     * String as a parameter. That String will be equal to the text after the '/'.\n-     *\n-     * Cocoon honors the LogEnabled, Initializable and Disposable interfaces for\n-     * this class, if it implements them.\n-     */\n-    protected String parentServiceManagerClassName;\n-\n-    /**\n-     * Allow adding processing time to the response\n-     */\n-    protected boolean showTime = SHOW_TIME;\n-\n-    /**\n-     * If true, processing time will be added as an HTML comment\n-     */\n-    protected boolean hideShowTime = HIDE_SHOW_TIME;\n-\n-    /**\n-     * If true or not set, this class will try to catch and handle all Cocoon exceptions.\n-     * If false, it will rethrow them to the servlet container.\n-     */\n-    protected boolean manageExceptions = MANAGE_EXCEPTIONS;\n-\n-    /**\n-     * Set form encoding. This will be the character set used to decode request\n-     * parameters. If not set the ISO-8859-1 encoding will be assumed.\n-    */\n-    protected String formEncoding;\n-\n-    /**\n-     * If this value is specified, it will be interpreted as a log level and\n-     * all logging categories will be set to this level regardless of their\n-     * definition in the logging configuration.\n-     */\n-    protected String overrideLogLevel;\n-\n-    /**\n-     * Delay between reload checks for the configuration\n-     */\n-    protected long configurationReloadDelay = 1000;\n-\n-    /**\n-     * Lazy mode for component loading\n-     */\n-    protected boolean lazyMode = false;\n-\n-    /**\n-     * Create a new settings object\n-     */\n-    public Settings() {\n-        // nothing to do\n-    }\n-\n-    /**\n-     * @return Returns the hideShowTime.\n-     */\n-    public boolean isHideShowTime() {\n-        return this.hideShowTime;\n-    }\n-\n-    /**\n-     * @return Returns the allowReload.\n-     */\n-    public boolean isAllowReload() {\n-        return this.allowReload;\n-    }\n-\n-    /**\n-     * @return Returns the autosaveUploads.\n-     */\n-    public boolean isAutosaveUploads() {\n-        return this.autosaveUploads;\n-    }\n-\n-    /**\n-     * @return Returns the cacheDirectory.\n-     */\n-    public String getCacheDirectory() {\n-        return this.cacheDirectory;\n-    }\n-\n-    /**\n-     * @return Returns the cocoonLogger.\n-     */\n-    public String getCocoonLogger() {\n-        return this.cocoonLogger;\n-    }\n-\n-    /**\n-     * @return Returns the configuration.\n-     */\n-    public String getConfiguration() {\n-        return this.configuration;\n-    }\n-\n-    /**\n-     * @return Returns the enableUploads.\n-     */\n-    public boolean isEnableUploads() {\n-        return this.enableUploads;\n-    }\n-\n-    /**\n-     * @return Returns the extraClasspaths.\n-     */\n-    public List getExtraClasspaths() {\n-        return this.extraClasspaths;\n-    }\n-\n-    /**\n-     * @return Returns the forceProperties.\n-     */\n-    public Map getForceProperties() {\n-        return this.forceProperties;\n-    }\n-\n-    /**\n-     * @return Returns the formEncoding.\n-     */\n-    public String getFormEncoding() {\n-        return this.formEncoding;\n-    }\n-\n-    /**\n-     * @return Returns the initClassloader.\n-     */\n-    public boolean isInitClassloader() {\n-        return this.initClassloader;\n-    }\n-\n-    /**\n-     * @return Returns the loadClasses.\n-     */\n-    public Iterator getLoadClasses() {\n-        return this.loadClasses.iterator();\n-    }\n-\n-    /**\n-     * @return Returns the loggerClassName.\n-     */\n-    public String getLoggerManagerClassName() {\n-        return this.loggerManagerClassName;\n-    }\n-\n-    /**\n-     * @return Returns the loggingConfiguration.\n-     */\n-    public String getLoggingConfiguration() {\n-        return this.loggingConfiguration;\n-    }\n-\n-    /**\n-     * @return Returns the logLevel.\n-     */\n-    public String getBootstrapLogLevel() {\n-        return this.bootstrapLogLevel;\n-    }\n-\n-    /**\n-     * @return Returns the manageExceptions.\n-     */\n-    public boolean isManageExceptions() {\n-        return this.manageExceptions;\n-    }\n-\n-    /**\n-     * @return Returns the maxUploadSize.\n-     */\n-    public int getMaxUploadSize() {\n-        return this.maxUploadSize;\n-    }\n-\n-    /**\n-     * @return Returns the overwriteUploads.\n-     */\n-    public String getOverwriteUploads() {\n-        return this.overwriteUploads;\n-    }\n-\n-    /**\n-     * @return Returns the parentServiceManagerClassName.\n-     */\n-    public String getParentServiceManagerClassName() {\n-        return this.parentServiceManagerClassName;\n-    }\n-\n-    /**\n-     * @return Returns the showTime.\n-     */\n-    public boolean isShowTime() {\n-        return this.showTime;\n-    }\n-\n-    /**\n-     * @return Returns the uploadDirectory.\n-     */\n-    public String getUploadDirectory() {\n-        return this.uploadDirectory;\n-    }\n-\n-    /**\n-     * @return Returns the workDirectory.\n-     */\n-    public String getWorkDirectory() {\n-        return this.workDirectory;\n-    }\n-\n-    /**\n-     * @return Returns the log4jConfiguration.\n-     */\n-    public String getLog4jConfiguration() {\n-        return this.log4jConfiguration;\n-    }\n-\n-    /**\n-     * @return Returns the accessLogger.\n-     */\n-    public String getEnvironmentLogger() {\n-        return this.environmentLogger;\n-    }\n-\n-    /**\n-     * @return Returns the overrideLogLevel.\n-     */\n-    public String getOverrideLogLevel() {\n-        return this.overrideLogLevel;\n-    }\n-\n-    public boolean isAllowOverwrite() {\n-        if (\"deny\".equalsIgnoreCase(this.overwriteUploads)) {\n-            return false;\n-        } else if (\"allow\".equalsIgnoreCase(this.overwriteUploads)) {\n-            return true;\n-        } else {\n-            // either rename is specified or unsupported value - default to rename.\n-            return false;\n-        }\n-    }\n-\n-    public boolean isSilentlyRename() {\n-        if (\"deny\".equalsIgnoreCase(this.overwriteUploads)) {\n-            return false;\n-        } else if (\"allow\".equalsIgnoreCase(this.overwriteUploads)) {\n-            return false; // ignored in this case\n-        } else {\n-            // either rename is specified or unsupported value - default to rename.\n-            return true;\n-        }\n-    }\n-\n-    /**\n-     * @return Returns the configurationReloadDelay.\n-     */\n-    public long getConfigurationReloadDelay() {\n-        return configurationReloadDelay;\n-    }\n-\n-    /**\n-     * @return Returns the lazyMode.\n-     */\n-    public boolean isLazyMode() {\n-        return this.lazyMode;\n-    }\n-\n-    /**\n-     * @see java.lang.Object#toString()\n-     */\n-    public String toString() {\n-        return \"Settings:\\n\"+\n-          KEY_CONFIGURATION + \" : \" + this.configuration + '\\n' +\n-          KEY_CONFIGURATION_RELOAD_DELAY + \" : \" + this.configurationReloadDelay + '\\n' +\n-          KEY_ALLOW_RELOAD + \" : \" + this.allowReload + '\\n' +\n-          KEY_INIT_CLASSLOADER + \" : \" + this.initClassloader + '\\n' +\n-          KEY_EXTRA_CLASSPATHS + \" : \" + this.toString(this.extraClasspaths) + '\\n' +\n-          KEY_LOAD_CLASSES + \" : \" + this.toString(this.loadClasses) + '\\n' +\n-          KEY_FORCE_PROPERTIES + \" : \" + this.toString(this.forceProperties) + '\\n' +\n-          KEY_LOGGING_CONFIGURATION + \" : \" + this.loggingConfiguration + '\\n' +\n-          KEY_LOGGING_ENVIRONMENT_LOGGER + \" : \" + this.environmentLogger + '\\n' +\n-          KEY_LOGGING_BOOTSTRAP_LOGLEVEL + \" : \" + this.bootstrapLogLevel + '\\n' +\n-          KEY_LOGGING_COCOON_LOGGER + \" : \" + this.cocoonLogger + '\\n' +\n-          KEY_LOGGING_LOG4J_CONFIGURATION + \" : \" + this.log4jConfiguration + '\\n' +\n-          KEY_LOGGING_MANAGER_CLASS + \" : \" + this.loggerManagerClassName + '\\n' +\n-          KEY_LOGGING_OVERRIDE_LOGLEVEL + \" : \" + this.overrideLogLevel + '\\n' +\n-          KEY_MANAGE_EXCEPTIONS + \" : \" + this.manageExceptions + '\\n' +\n-          KEY_PARENT_SERVICE_MANAGER + \" : \" + this.parentServiceManagerClassName + '\\n' +\n-          KEY_UPLOADS_DIRECTORY + \" : \" + this.uploadDirectory + '\\n' +\n-          KEY_UPLOADS_AUTOSAVE + \" : \" + this.autosaveUploads + '\\n' +\n-          KEY_UPLOADS_ENABLE + \" : \" + this.enableUploads + '\\n' +\n-          KEY_UPLOADS_MAXSIZE + \" : \" + this.maxUploadSize + '\\n' +\n-          KEY_UPLOADS_OVERWRITE + \" : \" + this.overwriteUploads + '\\n' +\n-          KEY_CACHE_DIRECTORY + \" : \" + this.cacheDirectory + '\\n' +\n-          KEY_WORK_DIRECTORY + \" : \" + this.workDirectory + '\\n' +\n-          KEY_FORM_ENCODING + \" : \" + this.formEncoding + '\\n' +\n-          KEY_SHOWTIME + \" : \" + this.showTime + '\\n' +\n-          KEY_HIDE_SHOWTIME + \" : \" + this.hideShowTime + '\\n' +\n-          KEY_LAZY_MODE + \" : \" + this.lazyMode + '\\n';\n-    }\n-\n-    /**\n-     * Helper method to make a string out of a list of objects.\n-     */\n-    protected String toString(List a) {\n-        final StringBuffer buffer = new StringBuffer();\n-        final Iterator i = a.iterator();\n-        boolean first = true;\n-        while ( i.hasNext() ) {\n-            if ( first ) {\n-                first = false;\n-            } else {\n-                buffer.append(\", \");\n-            }\n-            buffer.append(i.next());\n-        }\n-        return buffer.toString();        \n-    }\n-\n-    /**\n-     * Helper method to make a string out of a map of objects.\n-     */\n-    protected String toString(Map a) {\n-        final StringBuffer buffer = new StringBuffer(\"{\");\n-        final Iterator i = a.entrySet().iterator();\n-        boolean first = true;\n-        while ( i.hasNext() ) {\n-            if ( first ) {\n-                first = false;\n-            } else {\n-                buffer.append(\", \");\n-            }\n-            final Map.Entry current = (Map.Entry)i.next();\n-            buffer.append(current.getKey());\n-            buffer.append(\"=\");\n-            buffer.append(current.getValue());\n-        }\n-        buffer.append(\"}\");\n-        return buffer.toString();        \n-    }\n-\n-    public String getProperty(String name) {\n-        return this.getProperty(name, null);\n-    }\n-\n-    public String getProperty(String key, String defaultValue) {\n-        if ( key == null ) {\n-            return defaultValue;\n-        }\n-        String value = null;\n-        if ( key.startsWith(KEYPREFIX) ) {\n-            final String sKey = key.substring(KEYPREFIX.length());\n-            if ( sKey.equals(KEY_INIT_CLASSLOADER) ) {\n-                value = String.valueOf(this.initClassloader);\n-            } else if ( sKey.equals(KEY_CONFIGURATION) ) {\n-                value = this.configuration;\n-            } else if ( sKey.equals(KEY_CONFIGURATION_RELOAD_DELAY) ) {\n-                value = String.valueOf(this.configurationReloadDelay);\n-            } else if ( sKey.equals(KEY_LOGGING_CONFIGURATION) ) {\n-                value = this.loggingConfiguration;\n-            } else if ( sKey.equals(KEY_LOGGING_ENVIRONMENT_LOGGER) ) {\n-                value = this.environmentLogger;\n-            } else if ( sKey.equals(KEY_LOGGING_COCOON_LOGGER) ) {\n-                value = this.cocoonLogger;\n-            } else if ( sKey.equals(KEY_LOGGING_BOOTSTRAP_LOGLEVEL) ) {\n-                value = this.bootstrapLogLevel;\n-            } else if ( sKey.equals(KEY_LOGGING_MANAGER_CLASS) ) {\n-                value = this.loggerManagerClassName;\n-            } else if ( sKey.equals(KEY_LOGGING_LOG4J_CONFIGURATION) ) {\n-                value = this.log4jConfiguration;\n-            } else if ( sKey.equals(KEY_ALLOW_RELOAD) ) {\n-                value = String.valueOf(this.allowReload);\n-            } else if ( sKey.equals(KEY_UPLOADS_ENABLE) ) {\n-                value = String.valueOf(this.enableUploads);\n-            } else if ( sKey.equals(KEY_UPLOADS_DIRECTORY) ) {\n-                value = this.uploadDirectory = value;\n-            } else if ( sKey.equals(KEY_UPLOADS_AUTOSAVE) ) {\n-                value = String.valueOf(this.autosaveUploads);\n-            } else if ( sKey.equals(KEY_UPLOADS_OVERWRITE) ) {\n-                value = this.overwriteUploads;\n-            } else if ( sKey.equals(KEY_UPLOADS_MAXSIZE) ) {\n-                value = String.valueOf(this.maxUploadSize);\n-            } else if ( sKey.equals(KEY_CACHE_DIRECTORY) ) {\n-                value = this.cacheDirectory;\n-            } else if ( sKey.equals(KEY_WORK_DIRECTORY) ) {\n-                value = this.workDirectory;\n-            } else if ( sKey.equals(KEY_PARENT_SERVICE_MANAGER) ) {\n-                value = this.parentServiceManagerClassName;\n-            } else if ( sKey.equals(KEY_SHOWTIME) ) {\n-                value = String.valueOf(this.showTime);\n-            } else if ( sKey.equals(KEY_HIDE_SHOWTIME) ) {\n-                value = String.valueOf(this.hideShowTime);\n-            } else if ( sKey.equals(KEY_MANAGE_EXCEPTIONS) ) {\n-                value = String.valueOf(this.manageExceptions);\n-            } else if ( sKey.equals(KEY_FORM_ENCODING) ) {\n-                value = this.formEncoding;\n-            } else if ( sKey.equals(KEY_LOGGING_OVERRIDE_LOGLEVEL) ) {\n-                value = this.overrideLogLevel;\n-            } else if ( sKey.equals(KEY_LAZY_MODE) ) {\n-                value = String.valueOf(this.lazyMode);\n-            } else if ( key.equals(KEY_LOAD_CLASSES) ) {\n-                value = this.toString(this.loadClasses);\n-            } else if ( key.equals(KEY_EXTRA_CLASSPATHS) ) {\n-                this.toString(this.extraClasspaths);\n-            } else if ( key.equals(KEY_FORCE_PROPERTIES) ) {\n-                this.toString(this.forceProperties);\n-            }\n-        }\n-\n-        int i = 0;\n-        while ( i < this.properties.size() && value == null ) {\n-            final Properties p = (Properties)this.properties.get(i);\n-            value = p.getProperty(key);\n-            i++;\n-        }\n-        if ( value == null ) {\n-            value = defaultValue;\n-        }\n-        return value;\n-    }\n+    String getProperty(String key, String defaultValue);\n \n }"
            },
            {
                "sha": "dbca634ce8712b6f8355b476d8acdb785aadc21e",
                "filename": "src/java/org/apache/cocoon/generation/StatusGenerator.java",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/generation/StatusGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/java/org/apache/cocoon/generation/StatusGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/generation/StatusGenerator.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -401,26 +401,26 @@ private void genSettings() throws SAXException {\n         this.addValue(Settings.KEY_LOGGING_LOG4J_CONFIGURATION, s.getLog4jConfiguration());\n         this.addValue(Settings.KEY_LOGGING_MANAGER_CLASS, s.getLoggerManagerClassName());\n         this.addValue(Settings.KEY_PARENT_SERVICE_MANAGER, s.getParentServiceManagerClassName());\n+        this.addValue(Settings.KEY_LOGGING_COCOON_LOGGER, s.getCocoonLogger());\n+        this.addValue(Settings.KEY_INIT_CLASSLOADER, s.isInitClassloader());\n+        this.addValue(Settings.KEY_LOGGING_ENVIRONMENT_LOGGER, s.getEnvironmentLogger());\n+        this.addValue(Settings.KEY_LOGGING_OVERRIDE_LOGLEVEL, s.getOverrideLogLevel());\n+        this.addValue(Settings.KEY_MANAGE_EXCEPTIONS, s.isManageExceptions());\n+        this.addValue(Settings.KEY_UPLOADS_DIRECTORY, s.getUploadDirectory());\n+        this.addValue(Settings.KEY_CACHE_DIRECTORY, s.getCacheDirectory());\n+        this.addValue(Settings.KEY_WORK_DIRECTORY, s.getWorkDirectory());\n+        this.addValue(Settings.KEY_FORM_ENCODING, s.getFormEncoding());\n         \n         this.endGroup();\n \n         this.startGroup(\"Dynamic Settings\");\n \n         this.addValue(Settings.KEY_CONFIGURATION_RELOAD_DELAY, s.getConfigurationReloadDelay());\n-        this.addValue(Settings.KEY_LOGGING_COCOON_LOGGER, s.getCocoonLogger());\n         this.addValue(Settings.KEY_ALLOW_RELOAD, s.isAllowReload());\n-        this.addValue(Settings.KEY_INIT_CLASSLOADER, s.isInitClassloader());\n-        this.addValue(Settings.KEY_LOGGING_ENVIRONMENT_LOGGER, s.getEnvironmentLogger());\n-        this.addValue(Settings.KEY_LOGGING_OVERRIDE_LOGLEVEL, s.getOverrideLogLevel());\n-        this.addValue(Settings.KEY_MANAGE_EXCEPTIONS, s.isManageExceptions());\n-        this.addValue(Settings.KEY_UPLOADS_DIRECTORY, s.getUploadDirectory());\n         this.addValue(Settings.KEY_UPLOADS_AUTOSAVE, s.isAutosaveUploads());\n         this.addValue(Settings.KEY_UPLOADS_ENABLE, s.isEnableUploads());\n         this.addValue(Settings.KEY_UPLOADS_MAXSIZE, s.getMaxUploadSize());\n         this.addValue(Settings.KEY_UPLOADS_OVERWRITE, s.isAllowOverwrite());\n-        this.addValue(Settings.KEY_CACHE_DIRECTORY, s.getCacheDirectory());\n-        this.addValue(Settings.KEY_WORK_DIRECTORY, s.getWorkDirectory());\n-        this.addValue(Settings.KEY_FORM_ENCODING, s.getFormEncoding());\n         this.addValue(Settings.KEY_SHOWTIME, s.isShowTime());\n         this.addValue(Settings.KEY_HIDE_SHOWTIME, s.isHideShowTime());\n         this.addValue(Settings.KEY_LAZY_MODE, s.isLazyMode());"
            },
            {
                "sha": "d738ca896738abcc18860d84cf5019448abff09e",
                "filename": "src/test/org/apache/cocoon/core/container/ContainerTestCase.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/cfaf5546786e9cd0d132288d9db79a35522df01c/src/test/org/apache/cocoon/core/container/ContainerTestCase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/cfaf5546786e9cd0d132288d9db79a35522df01c/src/test/org/apache/cocoon/core/container/ContainerTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/test/org/apache/cocoon/core/container/ContainerTestCase.java?ref=cfaf5546786e9cd0d132288d9db79a35522df01c",
                "patch": "@@ -38,7 +38,7 @@\n import org.apache.avalon.framework.service.ServiceManager;\n import org.apache.cocoon.core.Core;\n import org.apache.cocoon.core.CoreUtil;\n-import org.apache.cocoon.core.Settings;\n+import org.apache.cocoon.core.MutableSettings;\n import org.apache.cocoon.util.log.DeprecationLogger;\n \n /**\n@@ -300,7 +300,7 @@ final private void setupManagers( final Configuration confCM,\n         roleManager.configure( confRM );\n \n         // Set up root manager for Core\n-        Core core = new Core(new Settings(), this.context);\n+        Core core = new Core(new MutableSettings(), this.context);\n         ((DefaultContext)this.context).put(Core.ROLE, core);\n         CoreUtil.RootServiceManager rsm = new CoreUtil.RootServiceManager(null, core);\n  "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/606bc05f8f412ddd1f6daed06080fc8511f018f3",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/bc7f92b7a8eb35027d6962545eaae807c159cb05",
        "message": "Fix a weird correlation between pass-through mounts and cocoon: that led to throwing a NPE rather than a RNFE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@165642 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_105",
        "file": [
            {
                "sha": "ca9bb4ec83b5d7c6be75e36c87933bdb60e7443a",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/sitemap/MountNode.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/java/org/apache/cocoon/components/treeprocessor/sitemap/MountNode.java",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/java/org/apache/cocoon/components/treeprocessor/sitemap/MountNode.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/sitemap/MountNode.java?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -39,7 +39,7 @@\n                        implements Disposable {\n \n     /** The key to get the pass_through value from the Environment*/\n-    protected final static String COCOON_PASS_THROUGH = \"COCOON_PASS_THROUGH\";\n+    public final static String COCOON_PASS_THROUGH = \"COCOON_PASS_THROUGH\";\n \n \n     /** The 'uri-prefix' attribute */"
            },
            {
                "sha": "43f4b36909f255c301cc6808ccf05bc1065e38de",
                "filename": "src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -20,6 +20,7 @@\n import java.util.Enumeration;\n import java.util.Map;\n \n+import org.apache.cocoon.components.treeprocessor.sitemap.MountNode;\n import org.apache.cocoon.environment.Environment;\n \n /**\n@@ -43,6 +44,10 @@\n \n     public MutableEnvironmentFacade(EnvironmentWrapper env) {\n         this.env = env;\n+        // Ensure we start with a false passthrough flag.\n+        // FIXME: this should really be part of the Processor contract rather\n+        // than an environment attribute\n+        env.setAttribute(MountNode.COCOON_PASS_THROUGH, Boolean.FALSE);\n     }\n \n     public EnvironmentWrapper getDelegate() {"
            },
            {
                "sha": "72c0ed6c486b5c4534b582591a7b70c5434d9544",
                "filename": "src/webapp/samples/test/pass-through/another-sitemap.xmap",
                "status": "added",
                "additions": 20,
                "deletions": 0,
                "changes": 20,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/another-sitemap.xmap",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/another-sitemap.xmap",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/another-sitemap.xmap?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\"?>\n+\n+<map:sitemap xmlns:map=\"http://apache.org/cocoon/sitemap/1.0\">\n+  <map:pipelines>\n+\t\t<map:pipeline>\n+\t\t\t<map:match pattern=\"another-welcome\">\n+\t\t\t\t<map:generate src=\"cocoon:/non-existing-url\"/>\n+\t\t\t\t<map:serialize/>\n+\t\t\t</map:match>\n+\t\t\t<map:handle-errors>\n+\t\t\t  <map:select type=\"exception\">\n+\t\t\t    <map:when test=\"not-found\">\n+\t\t\t      <map:generate src=\"welcome.xml\"/>\n+\t\t\t      <map:serialize type=\"html\"/>\n+\t\t\t    </map:when>\n+\t\t\t  </map:select>\n+\t\t\t</map:handle-errors>\n+    </map:pipeline>\n+  </map:pipelines>\n+</map:sitemap>\n\\ No newline at end of file"
            },
            {
                "sha": "b5bc08a8896eb5b92fdb7aec116f3ef63872c55e",
                "filename": "src/webapp/samples/test/pass-through/elsewhere/hello.xml",
                "status": "added",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/elsewhere/hello.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/elsewhere/hello.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/elsewhere/hello.xml?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Copyright 2005 The Apache Software Foundation or its licensors,\n+  as applicable.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<h1>Hello!</h1>"
            },
            {
                "sha": "3cb797a46d5421018a59a70b583226eb47a4d119",
                "filename": "src/webapp/samples/test/pass-through/elsewhere/sitemap.xmap",
                "status": "added",
                "additions": 26,
                "deletions": 0,
                "changes": 26,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/elsewhere/sitemap.xmap",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/elsewhere/sitemap.xmap",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/elsewhere/sitemap.xmap?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Copyright 2005 The Apache Software Foundation or its licensors,\n+  as applicable.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+\n+<map:sitemap xmlns:map=\"http://apache.org/cocoon/sitemap/1.0\">\n+  <map:pipelines>\n+    <map:pipeline>\n+      <!-- this sitemap is mounted with pass-through, but contains\n+         no matcher so that we go back to the parent sitemap -->\n+    </map:pipeline>\n+  </map:pipelines>\n+</map:sitemap>"
            },
            {
                "sha": "4cef20444907d88187280d378637f040ebde5834",
                "filename": "src/webapp/samples/test/pass-through/explain-test.xml",
                "status": "added",
                "additions": 46,
                "deletions": 0,
                "changes": 46,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/explain-test.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/explain-test.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/explain-test.xml?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Copyright 1999-2004 The Apache Software Foundation\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+\n+<!-- CVS $Id$ -->\n+\n+<page>\n+    <title>Sitemap pass-through test pages</title>\n+    <content>\n+        <para>\n+            Shows that mounted pass-through breaks when a \"cocoon:\" is used\n+            after going back to the parent sitemap (<link\n+                href=\"http://issues.apache.org/bugzilla/show_bug.cgi?id=33178\">bug\n+                #33178</link>).\n+        </para>\n+        <para>\n+            Test links:\n+            <ul>\n+                <li><link href=\"welcome\">Direct pipeline</link></li>\n+                <li><link href=\"welcome1\">One \"cocoon:\" URL</link></li>\n+                <li><link href=\"welcome2\">Two chained \"cocoon:\" URLs</link></li>\n+                <li><link href=\"welcome3\">Three chained \"cocoon:\" URLs</link></li>\n+            \t   <li><link href=\"aggregate\">Aggregation of the above</link></li>\n+            </ul>\n+        </para>\n+        <para>\n+           A \"cocoon:\" called within a pass-trough mount leading to no match reported an NPE\n+           rather than a ResourceNotFound. With the bugfix, the RNFE is catched, and the \"welcome\"\n+\t   page is displayed.\n+        </para>\n+        <para><link href=\"another-welcome\">Test link</link></para>\n+    </content>\n+</page>"
            },
            {
                "sha": "60cd522c35081c61389fc3cc7545b9414fad0aa8",
                "filename": "src/webapp/samples/test/pass-through/sitemap.xmap",
                "status": "added",
                "additions": 76,
                "deletions": 0,
                "changes": 76,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/sitemap.xmap",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/sitemap.xmap",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/sitemap.xmap?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,76 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Copyright 2005 The Apache Software Foundation or its licensors,\n+  as applicable.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+\n+<map:sitemap xmlns:map=\"http://apache.org/cocoon/sitemap/1.0\">\n+  <map:pipelines>    \t\n+    <map:pipeline>\n+      <map:mount check-reload=\"true\" uri-prefix=\"\"\n+                 src=\"elsewhere/sitemap.xmap\" pass-through=\"true\"/>\n+    \n+      <map:match pattern=\"sub/**\">\n+        <map:mount src=\"sub/\" uri-prefix=\"sub\"/>\n+      </map:match>\n+\n+      <map:match pattern=\"welcome\">\n+        <map:generate src=\"welcome.xml\"/>\n+        <map:serialize/>\n+      </map:match>\n+\n+      <map:match pattern=\"welcome1\">\n+        <map:generate src=\"cocoon:/welcome\"/>\n+        <map:serialize/>\n+      </map:match>\n+\n+      <map:match pattern=\"welcome2\">\n+        <map:generate src=\"cocoon:/welcome1\"/>\n+        <map:serialize/>\n+      </map:match>\n+\n+      <map:match pattern=\"welcome3\">\n+        <map:generate src=\"cocoon:/welcome2\"/>\n+        <map:serialize/>\n+      </map:match>\n+    \t\n+    \t  <map:match pattern=\"hellosub\">\n+    \t  \t<!-- This pattern deliberately produces and error, as it is meant to trap\n+    \t  \t     wrong active processor in the handling of sub/sub1 -->\n+    \t  \t<map:serialize/>\n+    \t  </map:match>\n+    \t\n+    \t  <map:match pattern=\"subsub1\">\n+    \t  \t<map:generate src=\"cocoon:/sub/sub1\"/>\n+    \t  \t<map:serialize/>\n+    \t  </map:match>\n+    \t\n+    \t  <map:match pattern=\"aggregate\">\n+    \t    <map:aggregate element=\"root\">\n+    \t      <map:part src=\"cocoon:/welcome3\"/>\n+    \t      <map:part src=\"cocoon:/welcome3\"/>\n+    \t      <map:part src=\"cocoon:/subsub1\"/>\n+    \t    </map:aggregate>\n+    \t  \t<map:serialize/>\n+    \t  </map:match>\n+    \t  \n+    \t  <!-- a test that produces an NPE in SitemapSource when there's a pass-through mount in the same directory -->\n+    \t  \n+    \t  <map:mount check-reload=\"true\" uri-prefix=\"\"\n+    \t             src=\"another-sitemap.xmap\" pass-through=\"true\"/>\n+\n+    </map:pipeline>\n+  </map:pipelines>\n+</map:sitemap>"
            },
            {
                "sha": "6a0181baa905e21791f4d22e1b1b887e3a77238c",
                "filename": "src/webapp/samples/test/pass-through/sub/hellosub.xml",
                "status": "added",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/sub/hellosub.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/sub/hellosub.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/sub/hellosub.xml?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Copyright 2005 The Apache Software Foundation or its licensors,\n+  as applicable.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<h1>Hello Sub!</h1>"
            },
            {
                "sha": "8e97c36b97ba04a3e4d2d8a7b04e762c6fbfc13f",
                "filename": "src/webapp/samples/test/pass-through/sub/sitemap.xmap",
                "status": "added",
                "additions": 33,
                "deletions": 0,
                "changes": 33,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/sub/sitemap.xmap",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/sub/sitemap.xmap",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/sub/sitemap.xmap?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Copyright 2005 The Apache Software Foundation or its licensors,\n+  as applicable.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+\n+<map:sitemap xmlns:map=\"http://apache.org/cocoon/sitemap/1.0\">\n+  <map:pipelines>\n+    <map:pipeline>\n+    \t  <map:match pattern=\"hellosub\">\n+    \t  \t<map:generate src=\"hellosub.xml\"/>\n+    \t  \t<map:serialize/>\n+    \t  </map:match>\n+    \t\n+    \t  <map:match pattern=\"sub1\">\n+    \t  \t<map:generate src=\"cocoon:/hellosub\"/>\n+    \t  \t<map:serialize/>\n+    \t  </map:match>\n+    </map:pipeline>\n+  </map:pipelines>\n+</map:sitemap>"
            },
            {
                "sha": "b52345b93f33560ae67283eca85567861e044cbc",
                "filename": "src/webapp/samples/test/pass-through/welcome.xml",
                "status": "added",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/apache/cocoon/blob/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/welcome.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/606bc05f8f412ddd1f6daed06080fc8511f018f3/src/webapp/samples/test/pass-through/welcome.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/samples/test/pass-through/welcome.xml?ref=606bc05f8f412ddd1f6daed06080fc8511f018f3",
                "patch": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Copyright 2005 The Apache Software Foundation or its licensors,\n+  as applicable.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<h1>Welcome!</h1>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/68e85db773c775cc7468d1171c7a5179d754d3c6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/3a998710ee62c1158cb9c33407821a124c0892ce",
        "message": "Sync CocoonPortlet and ManagedCocoonPortlet.\nRemove svn:executable property from ManagedCocoonPortlet.\nFix NPE in DefaultPortalComponentManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@36229 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_106",
        "file": [
            {
                "sha": "42f5bf618169efa0376895934dd1453d8d9c8ea9",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultPortalComponentManager.java",
                "status": "modified",
                "additions": 24,
                "deletions": 24,
                "changes": 48,
                "blob_url": "https://github.com/apache/cocoon/blob/68e85db773c775cc7468d1171c7a5179d754d3c6/src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultPortalComponentManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/68e85db773c775cc7468d1171c7a5179d754d3c6/src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultPortalComponentManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultPortalComponentManager.java?ref=68e85db773c775cc7468d1171c7a5179d754d3c6",
                "patch": "@@ -1,12 +1,12 @@\n /*\n  * Copyright 1999-2002,2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -40,13 +40,13 @@\n \n /**\n  * Default {@link PortalComponentManager} implementation\n- * \n+ *\n  * @see org.apache.cocoon.portal.PortalComponentManager\n- * \n+ *\n  * TODO Handle non ThreadSafe components\n- * \n+ *\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n- * \n+ *\n  * @version CVS $Id$\n  */\n public class DefaultPortalComponentManager\n@@ -60,25 +60,25 @@\n     protected ProfileManager profileManager;\n \n     protected String profileManagerRole;\n-    \n+\n     protected String linkServiceRole;\n-    \n+\n     protected String rendererSelectorRole;\n-    \n+\n     protected ServiceSelector rendererSelector;\n-    \n+\n     protected Map renderers;\n-    \n+\n     protected String copletFactoryRole;\n-    \n+\n     protected String layoutFactoryRole;\n-    \n+\n     protected CopletFactory copletFactory;\n-    \n+\n     protected LayoutFactory layoutFactory;\n-    \n+\n     protected EventManager eventManager;\n-    \n+\n     /* (non-Javadoc)\n      * @see org.apache.avalon.framework.service.Serviceable#service(org.apache.avalon.framework.service.ServiceManager)\n      */\n@@ -127,32 +127,32 @@ public EventManager getEventManager() {\n         }\n         return this.eventManager;\n     }\n-    \n+\n     /* (non-Javadoc)\n      * @see org.apache.avalon.framework.activity.Disposable#dispose()\n      */\n     public void dispose() {\n         if (this.manager != null) {\n-            if ( this.rendererSelector != null) {\n+            if (this.rendererSelector != null) {\n                 Iterator i = this.renderers.values().iterator();\n                 while (i.hasNext()) {\n                     this.rendererSelector.release(i.next());\n                 }\n-                this.manager.release( this.rendererSelector );\n+                this.manager.release(this.rendererSelector);\n                 this.rendererSelector = null;\n                 this.renderers = null;\n             }\n-            this.manager.release( this.profileManager );\n-            this.manager.release( this.linkService );\n+            this.manager.release(this.profileManager);\n             this.profileManager = null;\n+            this.manager.release(this.linkService);\n             this.linkService = null;\n             this.manager.release(this.copletFactory);\n-            this.manager.release(this.layoutFactory);\n             this.copletFactory = null;\n+            this.manager.release(this.layoutFactory);\n             this.layoutFactory = null;\n-            this.manager = null;\n             this.manager.release(this.eventManager);\n             this.eventManager = null;\n+            this.manager = null;\n         }\n     }\n "
            },
            {
                "sha": "eda1f9311f5b29086c45d771890fdf4e50764b2f",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portlet/CocoonPortlet.java",
                "status": "modified",
                "additions": 51,
                "deletions": 19,
                "changes": 70,
                "blob_url": "https://github.com/apache/cocoon/blob/68e85db773c775cc7468d1171c7a5179d754d3c6/src/blocks/portal/java/org/apache/cocoon/portlet/CocoonPortlet.java",
                "raw_url": "https://github.com/apache/cocoon/raw/68e85db773c775cc7468d1171c7a5179d754d3c6/src/blocks/portal/java/org/apache/cocoon/portlet/CocoonPortlet.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portlet/CocoonPortlet.java?ref=68e85db773c775cc7468d1171c7a5179d754d3c6",
                "patch": "@@ -66,6 +66,7 @@\n import javax.portlet.GenericPortlet;\n import javax.portlet.PortletConfig;\n import javax.portlet.PortletException;\n+import javax.portlet.PortletSession;\n import javax.portlet.RenderRequest;\n import javax.portlet.RenderResponse;\n import java.io.File;\n@@ -91,8 +92,7 @@\n /**\n  * This is the entry point for Cocoon execution as an JSR-168 Portlet.\n  *\n- * @author <a href=\"mailto:vgritsenko@apache.org\">Vadim Gritsenko</a>\n- * @version CVS $Id: CocoonPortlet.java,v 1.10 2004/07/11 23:02:54 antonio Exp $\n+ * @version CVS $Id$\n  */\n public class CocoonPortlet extends GenericPortlet {\n \n@@ -246,9 +246,26 @@\n      */\n     protected int defaultSessionScope;\n \n+    /**\n+     * Store pathInfo in session\n+     */\n+    protected boolean storeSessionPath;\n+\n     /**\n      * Initialize this <code>CocoonPortlet</code> instance.\n      *\n+     * <p>Uses the following parameters:\n+     *  portlet-logger\n+     *  enable-uploads\n+     *  autosave-uploads\n+     *  overwrite-uploads\n+     *  upload-max-size\n+     *  show-time\n+     *  container-encoding\n+     *  form-encoding\n+     *  manage-exceptions\n+     *  servlet-path\n+     *\n      * @param conf The PortletConfig object from the portlet container.\n      * @throws PortletException\n      */\n@@ -1088,6 +1105,15 @@ public void processAction(ActionRequest req, ActionResponse res)\n \n         String uri = servletPath;\n         String pathInfo = request.getParameter(PortletEnvironment.PARAMETER_PATH_INFO);\n+        if (storeSessionPath) {\n+            final PortletSession session = request.getPortletSession(true);\n+            if (pathInfo == null) {\n+                pathInfo = (String)session.getAttribute(PortletEnvironment.PARAMETER_PATH_INFO);\n+            } else {\n+                session.setAttribute(PortletEnvironment.PARAMETER_PATH_INFO, pathInfo);\n+            }\n+        }\n+\n         if (pathInfo != null) {\n             if (pathInfo.length() > 0 && pathInfo.charAt(0) == '/') {\n                 pathInfo = pathInfo.substring(1);\n@@ -1242,6 +1268,15 @@ public void render(RenderRequest req, RenderResponse res)\n \n         String uri = servletPath;\n         String pathInfo = request.getParameter(PortletEnvironment.PARAMETER_PATH_INFO);\n+        if (storeSessionPath) {\n+            final PortletSession session = request.getPortletSession(true);\n+            if (pathInfo == null) {\n+                pathInfo = (String)session.getAttribute(PortletEnvironment.PARAMETER_PATH_INFO);\n+            } else {\n+                session.setAttribute(PortletEnvironment.PARAMETER_PATH_INFO, pathInfo);\n+            }\n+        }\n+\n         if (pathInfo != null) {\n             if (pathInfo.length() > 0 && pathInfo.charAt(0) == '/') {\n                 pathInfo = pathInfo.substring(1);\n@@ -1388,14 +1423,14 @@ public void render(RenderRequest req, RenderResponse res)\n     protected void manageException(ActionRequest req, ActionResponse res, Environment env,\n                                    String uri, String title, String message, String description,\n                                    Exception e)\n-            throws PortletException {\n+    throws PortletException {\n         throw new PortletException(\"Exception in CocoonPortlet\", e);\n     }\n \n     protected void manageException(RenderRequest req, RenderResponse res, Environment env,\n                                    String uri, String title, String message, String description,\n                                    Exception e)\n-            throws IOException, PortletException {\n+    throws IOException, PortletException {\n         if (this.manageExceptions) {\n             if (env != null) {\n                 env.tryResetResponse();\n@@ -1406,20 +1441,17 @@ protected void manageException(RenderRequest req, RenderResponse res, Environmen\n             String type = Notifying.FATAL_NOTIFICATION;\n             HashMap extraDescriptions = null;\n \n-            // TODO: Removed if(code == SC_NOT_FOUND) {}\n-            {\n-                extraDescriptions = new HashMap(2);\n-                extraDescriptions.put(Notifying.EXTRA_REQUESTURI, getPortletConfig().getPortletName());\n-                if (uri != null) {\n-                    extraDescriptions.put(\"Request URI\", uri);\n-                }\n+            extraDescriptions = new HashMap(2);\n+            extraDescriptions.put(Notifying.EXTRA_REQUESTURI, getPortletConfig().getPortletName());\n+            if (uri != null) {\n+                extraDescriptions.put(\"Request URI\", uri);\n+            }\n \n-                // Do not show exception stack trace when log level is WARN or above. Show only message.\n-                if (!getLogger().isInfoEnabled()) {\n-                    Throwable t = DefaultNotifyingBuilder.getRootCause(e);\n-                    if (t != null) extraDescriptions.put(Notifying.EXTRA_CAUSE, t.getMessage());\n-                    e = null;\n-                }\n+            // Do not show exception stack trace when log level is WARN or above. Show only message.\n+            if (!getLogger().isInfoEnabled()) {\n+                Throwable t = DefaultNotifyingBuilder.getRootCause(e);\n+                if (t != null) extraDescriptions.put(Notifying.EXTRA_CAUSE, t.getMessage());\n+                e = null;\n             }\n \n             Notifying n = new DefaultNotifyingBuilder().build(this,\n@@ -1446,7 +1478,7 @@ protected Environment getEnvironment(String servletPath,\n                                          String uri,\n                                          ActionRequest req,\n                                          ActionResponse res)\n-            throws Exception {\n+    throws Exception {\n         PortletEnvironment env;\n \n         String formEncoding = req.getParameter(\"cocoon-form-encoding\");\n@@ -1473,7 +1505,7 @@ protected Environment getEnvironment(String servletPath,\n                                          String uri,\n                                          RenderRequest req,\n                                          RenderResponse res)\n-            throws Exception {\n+    throws Exception {\n         PortletEnvironment env;\n \n         String formEncoding = req.getParameter(\"cocoon-form-encoding\");"
            },
            {
                "sha": "fe1f9ef05199410b69f855ba62b7d0b564987590",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portlet/ManagedCocoonPortlet.java",
                "status": "modified",
                "additions": 941,
                "deletions": 934,
                "changes": 1875,
                "blob_url": "https://github.com/apache/cocoon/blob/68e85db773c775cc7468d1171c7a5179d754d3c6/src/blocks/portal/java/org/apache/cocoon/portlet/ManagedCocoonPortlet.java",
                "raw_url": "https://github.com/apache/cocoon/raw/68e85db773c775cc7468d1171c7a5179d754d3c6/src/blocks/portal/java/org/apache/cocoon/portlet/ManagedCocoonPortlet.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portlet/ManagedCocoonPortlet.java?ref=68e85db773c775cc7468d1171c7a5179d754d3c6",
                "patch": "@@ -1,934 +1,941 @@\n-/*\r\n- * Copyright 1999-2004 The Apache Software Foundation.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.apache.cocoon.portlet;\r\n-\r\n-import org.apache.avalon.excalibur.logger.Log4JLoggerManager;\r\n-import org.apache.avalon.excalibur.logger.LogKitLoggerManager;\r\n-import org.apache.avalon.excalibur.logger.LoggerManager;\r\n-import org.apache.avalon.framework.configuration.Configurable;\r\n-import org.apache.avalon.framework.configuration.Configuration;\r\n-import org.apache.avalon.framework.configuration.DefaultConfigurationBuilder;\r\n-import org.apache.avalon.framework.container.ContainerUtil;\r\n-import org.apache.avalon.framework.context.DefaultContext;\r\n-import org.apache.avalon.framework.logger.LogKitLogger;\r\n-import org.apache.avalon.framework.logger.Logger;\r\n-\r\n-import org.apache.cocoon.Cocoon;\r\n-import org.apache.cocoon.CocoonAccess;\r\n-import org.apache.cocoon.ConnectionResetException;\r\n-import org.apache.cocoon.Constants;\r\n-import org.apache.cocoon.ResourceNotFoundException;\r\n-import org.apache.cocoon.components.notification.DefaultNotifyingBuilder;\r\n-import org.apache.cocoon.components.notification.Notifier;\r\n-import org.apache.cocoon.components.notification.Notifying;\r\n-import org.apache.cocoon.environment.Environment;\r\n-import org.apache.cocoon.environment.portlet.PortletContext;\r\n-import org.apache.cocoon.environment.portlet.PortletEnvironment;\r\n-import org.apache.cocoon.portlet.multipart.MultipartActionRequest;\r\n-import org.apache.cocoon.portlet.multipart.RequestFactory;\r\n-import org.apache.cocoon.util.NetUtils;\r\n-import org.apache.cocoon.util.log.Log4JConfigurator;\r\n-\r\n-import org.apache.log.ContextMap;\r\n-import org.apache.log.Hierarchy;\r\n-import org.apache.log4j.LogManager;\r\n-\r\n-import javax.portlet.ActionRequest;\r\n-import javax.portlet.ActionResponse;\r\n-import javax.portlet.GenericPortlet;\r\n-import javax.portlet.PortletConfig;\r\n-import javax.portlet.PortletException;\r\n-import javax.portlet.PortletSession;\r\n-import javax.portlet.RenderRequest;\r\n-import javax.portlet.RenderResponse;\r\n-import java.io.File;\r\n-import java.io.FileInputStream;\r\n-import java.io.IOException;\r\n-import java.io.InputStream;\r\n-import java.io.OutputStream;\r\n-import java.io.PrintStream;\r\n-import java.net.SocketException;\r\n-import java.net.URL;\r\n-import java.util.HashMap;\r\n-\r\n-/**\r\n- * This is the entry point for Cocoon execution as an JSR168 Portlet.\r\n- *\r\n- * <p>This implementation of the Portlet interface requires that someone will\r\n- * first create and initialize an instance of the Cocoon object, and this\r\n- * Portlet will use this instance to process requests.</p>\r\n- *\r\n- * @version CVS $Id: ManagedCocoonPortlet.java,v 1.3 2004/07/11 17:23:29 antonio Exp $\r\n- */\r\n-public class ManagedCocoonPortlet extends GenericPortlet {\r\n-\r\n-    // Processing time message\r\n-    protected static final String PROCESSED_BY = \"Processed by \"\r\n-        + Constants.COMPLETE_NAME + \" in \";\r\n-\r\n-    // Used by \"show-time\"\r\n-    static final float SECOND = 1000;\r\n-    static final float MINUTE = 60 * SECOND;\r\n-    static final float HOUR   = 60 * MINUTE;\r\n-\r\n-\r\n-    private Logger log;\r\n-\r\n-    /**\r\n-     * Holds exception happened during initialization (if any)\r\n-     */\r\n-    protected Exception exception;\r\n-\r\n-\r\n-    /**\r\n-     * Allow adding processing time to the response\r\n-     */\r\n-    protected boolean showTime;\r\n-\r\n-    /**\r\n-     * If true, processing time will be added as an HTML comment\r\n-     */\r\n-    protected boolean hiddenShowTime;\r\n-\r\n-\r\n-    /**\r\n-     * Default value for {@link #enableUploads} parameter (false)\r\n-     */\r\n-    private static final boolean ENABLE_UPLOADS = false;\r\n-    private static final boolean SAVE_UPLOADS_TO_DISK = true;\r\n-    private static final int MAX_UPLOAD_SIZE = 10000000; // 10Mb\r\n-\r\n-    /**\r\n-     * Allow processing of upload requests (mime/multipart)\r\n-     */\r\n-    private boolean enableUploads;\r\n-    private boolean autoSaveUploads;\r\n-    private boolean allowOverwrite;\r\n-    private boolean silentlyRename;\r\n-    private int maxUploadSize;\r\n-\r\n-    private File uploadDir;\r\n-    private File workDir;\r\n-\r\n-    private String containerEncoding;\r\n-    private String defaultFormEncoding;\r\n-\r\n-    protected javax.portlet.PortletContext portletContext;\r\n-    protected PortletContext envPortletContext;\r\n-\r\n-\r\n-    /**\r\n-     * If true or not set, this class will try to catch and handle all Cocoon exceptions.\r\n-     * If false, it will rethrow them to the portlet container.\r\n-     */\r\n-    private boolean manageExceptions;\r\n-\r\n-    /**\r\n-     * This is the path to the portlet context (or the result\r\n-     * of calling getRealPath('/') on the PortletContext.\r\n-     * Note, that this can be null.\r\n-     */\r\n-    protected String portletContextPath;\r\n-\r\n-    /**\r\n-     * The RequestFactory is responsible for wrapping multipart-encoded\r\n-     * forms and for handing the file payload of incoming requests\r\n-     */\r\n-    protected RequestFactory requestFactory;\r\n-\r\n-    /**\r\n-     * Value to be used as servletPath in the request.\r\n-     * Provided via configuration parameter, if missing, defaults to the\r\n-     * '/portlets/' + portletName.\r\n-     */\r\n-    protected String servletPath;\r\n-\r\n-    /**\r\n-     * Default scope for the session attributes, either\r\n-     * {@link javax.portlet.PortletSession#PORTLET_SCOPE} or\r\n-     * {@link javax.portlet.PortletSession#APPLICATION_SCOPE}.\r\n-     * @see org.apache.cocoon.environment.portlet.PortletSession\r\n-     */\r\n-    protected int defaultSessionScope;\r\n-\r\n-    /**\r\n-     * Store pathInfo in session\r\n-     */\r\n-    protected boolean storeSessionPath;\r\n-\r\n-    /**\r\n-     * Initialize this <code>CocoonPortlet</code> instance.\r\n-     *\r\n-     * <p>Uses the following parameters:\r\n-     * \tportlet-logger\r\n-     *  enable-uploads\r\n-     *  autosave-uploads\r\n-     *  overwrite-uploads\r\n-     *  upload-max-size\r\n-     *  show-time\r\n-     *  container-encoding\r\n-     *  form-encoding\r\n-     *  manage-exceptions\r\n-     *  servlet-path\r\n-     *\r\n-     * @param conf The PortletConfig object from the portlet container.\r\n-     * @throws PortletException\r\n-     */\r\n-    public void init(PortletConfig conf) throws PortletException {\r\n-        String value;\r\n-        super.init(conf);\r\n-\r\n-        this.portletContext = conf.getPortletContext();\r\n-        this.envPortletContext = new PortletContext(this.portletContext);\r\n-        this.portletContextPath = this.portletContext.getRealPath(\"/\");\r\n-\r\n-        initLogger();\r\n-\r\n-        // first init the work-directory for the logger.\r\n-        // this is required if we are running inside a war file!\r\n-        final String workDirParam = getInitParameter(\"work-directory\");\r\n-        if (workDirParam != null) {\r\n-            if (this.portletContextPath == null) {\r\n-                // No context path : consider work-directory as absolute\r\n-                this.workDir = new File(workDirParam);\r\n-            } else {\r\n-                // Context path exists : is work-directory absolute ?\r\n-                File workDirParamFile = new File(workDirParam);\r\n-                if (workDirParamFile.isAbsolute()) {\r\n-                    // Yes : keep it as is\r\n-                    this.workDir = workDirParamFile;\r\n-                } else {\r\n-                    // No : consider it relative to context path\r\n-                    this.workDir = new File(portletContextPath, workDirParam);\r\n-                }\r\n-            }\r\n-        } else {\r\n-            // TODO: Check portlet specification\r\n-            this.workDir = (File) this.portletContext.getAttribute(\"javax.servlet.context.tempdir\");\r\n-            if (this.workDir == null) {\r\n-                this.workDir = new File(this.portletContext.getRealPath(\"/WEB-INF/work\"));\r\n-            }\r\n-            this.workDir = new File(workDir, \"cocoon-files\");\r\n-        }\r\n-        this.workDir.mkdirs();\r\n-\r\n-        final String uploadDirParam = conf.getInitParameter(\"upload-directory\");\r\n-        if (uploadDirParam != null) {\r\n-            if (this.portletContextPath == null) {\r\n-                this.uploadDir = new File(uploadDirParam);\r\n-            } else {\r\n-                // Context path exists : is upload-directory absolute ?\r\n-                File uploadDirParamFile = new File(uploadDirParam);\r\n-                if (uploadDirParamFile.isAbsolute()) {\r\n-                    // Yes : keep it as is\r\n-                    this.uploadDir = uploadDirParamFile;\r\n-                } else {\r\n-                    // No : consider it relative to context path\r\n-                    this.uploadDir = new File(portletContextPath, uploadDirParam);\r\n-                }\r\n-            }\r\n-            if (getLogger().isDebugEnabled()) {\r\n-                getLogger().debug(\"Using upload-directory \" + this.uploadDir);\r\n-            }\r\n-        } else {\r\n-            this.uploadDir = new File(workDir, \"upload-dir\" + File.separator);\r\n-            if (getLogger().isDebugEnabled()) {\r\n-                getLogger().debug(\"upload-directory was not set - defaulting to \" + this.uploadDir);\r\n-            }\r\n-        }\r\n-        this.uploadDir.mkdirs();\r\n-\r\n-        this.enableUploads = getInitParameterAsBoolean(\"enable-uploads\", ENABLE_UPLOADS);\r\n-        this.autoSaveUploads = getInitParameterAsBoolean(\"autosave-uploads\", SAVE_UPLOADS_TO_DISK);\r\n-\r\n-        String overwriteParam = getInitParameter(\"overwrite-uploads\", \"rename\");\r\n-        // accepted values are deny|allow|rename - rename is default.\r\n-        if (\"deny\".equalsIgnoreCase(overwriteParam)) {\r\n-            this.allowOverwrite = false;\r\n-            this.silentlyRename = false;\r\n-        } else if (\"allow\".equalsIgnoreCase(overwriteParam)) {\r\n-           this.allowOverwrite = true;\r\n-           this.silentlyRename = false; // ignored in this case\r\n-        } else {\r\n-           // either rename is specified or unsupported value - default to rename.\r\n-           this.allowOverwrite = false;\r\n-           this.silentlyRename = true;\r\n-        }\r\n-\r\n-        this.maxUploadSize = getInitParameterAsInteger(\"upload-max-size\", MAX_UPLOAD_SIZE);\r\n-\r\n-        value = conf.getInitParameter(\"show-time\");\r\n-        this.showTime = \"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value)\r\n-            || (this.hiddenShowTime = \"hide\".equals(value));\r\n-        if (value == null) {\r\n-            if (getLogger().isDebugEnabled()) {\r\n-                getLogger().debug(\"show-time was not set - defaulting to false\");\r\n-            }\r\n-        }\r\n-\r\n-        this.containerEncoding = getInitParameter(\"container-encoding\", \"ISO-8859-1\");\r\n-        this.defaultFormEncoding = getInitParameter(\"form-encoding\",\"ISO-8859-1\");\r\n-\r\n-\t\tthis.manageExceptions = getInitParameterAsBoolean(\"manage-exceptions\", true);\r\n-\r\n-        this.requestFactory = new RequestFactory(this.autoSaveUploads,\r\n-                                                 this.uploadDir,\r\n-                                                 this.allowOverwrite,\r\n-                                                 this.silentlyRename,\r\n-                                                 this.maxUploadSize,\r\n-                                                 this.defaultFormEncoding);\r\n-\r\n-        this.servletPath = getInitParameter(\"servlet-path\", null);\r\n-        if (this.servletPath != null) {\r\n-            if (this.servletPath.startsWith(\"/\")) {\r\n-                this.servletPath = this.servletPath.substring(1);\r\n-            }\r\n-            if (this.servletPath.length() > 0 && this.servletPath.charAt(0) != '/') {\r\n-                this.servletPath += '/';\r\n-            }\r\n-        }\r\n-\r\n-        final String sessionScopeParam = getInitParameter(\"default-session-scope\", \"portlet\");\r\n-        if (\"application\".equalsIgnoreCase(sessionScopeParam)) {\r\n-            this.defaultSessionScope = javax.portlet.PortletSession.APPLICATION_SCOPE;\r\n-        } else {\r\n-            this.defaultSessionScope = javax.portlet.PortletSession.PORTLET_SCOPE;\r\n-        }\r\n-\r\n-        this.storeSessionPath = getInitParameterAsBoolean(\"store-session-path\", false);\r\n-    }\r\n-\r\n-    public void processAction(ActionRequest req, ActionResponse res)\r\n-    throws PortletException, IOException {\r\n-\r\n-        // remember when we started (used for timing the processing)\r\n-        long start = System.currentTimeMillis();\r\n-\r\n-        // add the cocoon header timestamp\r\n-        res.setProperty(\"X-Cocoon-Version\", Constants.VERSION);\r\n-\r\n-        // get the request (wrapped if contains multipart-form data)\r\n-        ActionRequest request;\r\n-        try{\r\n-            if (this.enableUploads) {\r\n-                request = requestFactory.getServletRequest(req);\r\n-            } else {\r\n-                request = req;\r\n-            }\r\n-        } catch (Exception e) {\r\n-            if (getLogger().isErrorEnabled()) {\r\n-                getLogger().error(\"Problem with Cocoon portlet\", e);\r\n-            }\r\n-\r\n-            manageException(req, res, null, null,\r\n-                            \"Problem in creating the Request\", null, null, e);\r\n-            return;\r\n-        }\r\n-\r\n-        // Get the cocoon engine instance\r\n-        Cocoon cocoon = getCocoon();\r\n-\r\n-        // Check if cocoon was initialized\r\n-        if (cocoon == null) {\r\n-            manageException(request, res, null, null,\r\n-                            \"Initialization Problem\",\r\n-                            null /* \"Cocoon was not initialized\" */,\r\n-                            null /* \"Cocoon was not initialized, cannot process request\" */,\r\n-                            this.exception);\r\n-            return;\r\n-        }\r\n-\r\n-        // We got it... Process the request\r\n-        String servletPath = this.servletPath;\r\n-        if (servletPath == null) {\r\n-            servletPath = \"portlets/\" + getPortletConfig().getPortletName() + '/';\r\n-        }\r\n-\r\n-        String uri = servletPath;\r\n-        String pathInfo = request.getParameter(PortletEnvironment.PARAMETER_PATH_INFO);\r\n-        if (storeSessionPath) {\r\n-            final PortletSession session = request.getPortletSession(true);\r\n-            if (pathInfo == null) {\r\n-                pathInfo = (String)session.getAttribute(PortletEnvironment.PARAMETER_PATH_INFO);\r\n-            } else {\r\n-                session.setAttribute(PortletEnvironment.PARAMETER_PATH_INFO, pathInfo);\r\n-            }\r\n-        }\r\n-\r\n-        if (pathInfo != null) {\r\n-            if (pathInfo.length() > 0 && pathInfo.charAt(0) == '/') {\r\n-                pathInfo = pathInfo.substring(1);\r\n-            }\r\n-            uri += pathInfo;\r\n-        }\r\n-\r\n-        ContextMap ctxMap = null;\r\n-\r\n-        Environment env;\r\n-        try{\r\n-            env = getEnvironment(servletPath, NetUtils.decode(uri, \"UTF-8\"), request, res);\r\n-        } catch (Exception e) {\r\n-            if (getLogger().isErrorEnabled()) {\r\n-                getLogger().error(\"Problem with Cocoon portlet\", e);\r\n-            }\r\n-\r\n-            manageException(request, res, null, uri,\r\n-                            \"Problem in creating the Environment\", null, null, e);\r\n-            return;\r\n-        }\r\n-\r\n-        try {\r\n-            try {\r\n-                // Initialize a fresh log context containing the object model: it\r\n-                // will be used by the CocoonLogFormatter\r\n-                ctxMap = ContextMap.getCurrentContext();\r\n-                // Add thread name (default content for empty context)\r\n-                String threadName = Thread.currentThread().getName();\r\n-                ctxMap.set(\"threadName\", threadName);\r\n-                // Add the object model\r\n-                ctxMap.set(\"objectModel\", env.getObjectModel());\r\n-                // Add a unique request id (threadName + currentTime\r\n-                ctxMap.set(\"request-id\", threadName + System.currentTimeMillis());\r\n-\r\n-                if (cocoon.process(env)) {\r\n-                } else {\r\n-                    // We reach this when there is nothing in the processing change that matches\r\n-                    // the request. For example, no matcher matches.\r\n-                    getLogger().fatalError(\"The Cocoon engine failed to process the request.\");\r\n-                    manageException(request, res, env, uri,\r\n-                                    \"Request Processing Failed\",\r\n-                                    \"Cocoon engine failed in process the request\",\r\n-                                    \"The processing engine failed to process the request. This could be due to lack of matching or bugs in the pipeline engine.\",\r\n-                                    null);\r\n-                    return;\r\n-                }\r\n-            } catch (ResourceNotFoundException rse) {\r\n-                if (getLogger().isWarnEnabled()) {\r\n-                    getLogger().warn(\"The resource was not found\", rse);\r\n-                }\r\n-\r\n-                manageException(request, res, env, uri,\r\n-                                \"Resource Not Found\",\r\n-                                \"Resource Not Found\",\r\n-                                \"The requested portlet could not be found\",\r\n-                                rse);\r\n-                return;\r\n-\r\n-            } catch (ConnectionResetException e) {\r\n-                if (getLogger().isDebugEnabled()) {\r\n-                    getLogger().debug(e.getMessage(), e);\r\n-                } else if (getLogger().isWarnEnabled()) {\r\n-                    getLogger().warn(e.getMessage());\r\n-                }\r\n-\r\n-            } catch (IOException e) {\r\n-                // Tomcat5 wraps SocketException into ClientAbortException which extends IOException.\r\n-                if (getLogger().isDebugEnabled()) {\r\n-                    getLogger().debug(e.getMessage(), e);\r\n-                } else if (getLogger().isWarnEnabled()) {\r\n-                    getLogger().warn(e.getMessage());\r\n-                }\r\n-\r\n-            } catch (Exception e) {\r\n-                if (getLogger().isErrorEnabled()) {\r\n-                    getLogger().error(\"Internal Cocoon Problem\", e);\r\n-                }\r\n-\r\n-                manageException(request, res, env, uri,\r\n-                                \"Internal Server Error\", null, null, e);\r\n-                return;\r\n-            }\r\n-\r\n-            long end = System.currentTimeMillis();\r\n-            String timeString = processTime(end - start);\r\n-            if (getLogger().isInfoEnabled()) {\r\n-                getLogger().info(\"'\" + uri + \"' \" + timeString);\r\n-            }\r\n-            res.setProperty(\"X-Cocoon-Time\", timeString);\r\n-        } catch(PortletException e) {\r\n-            throw e;\r\n-        } catch(Exception e) {\r\n-            throw new PortletException(\"Exception in process()\", e);\r\n-        } finally {\r\n-            try {\r\n-                if (request instanceof MultipartActionRequest) {\r\n-                    if (getLogger().isDebugEnabled()) {\r\n-                        getLogger().debug(\"Deleting uploaded file(s).\");\r\n-                    }\r\n-                    ((MultipartActionRequest) request).cleanup();\r\n-                }\r\n-            } catch (IOException e) {\r\n-                getLogger().error(\"Cocoon got an Exception while trying to cleanup the uploaded files.\", e);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    public void render(RenderRequest req, RenderResponse res)\r\n-    throws PortletException, IOException {\r\n-\r\n-        // remember when we started (used for timing the processing)\r\n-        long start = System.currentTimeMillis();\r\n-\r\n-        // add the cocoon header timestamp\r\n-        res.setProperty(\"X-Cocoon-Version\", Constants.VERSION);\r\n-\r\n-        // get the request (wrapped if contains multipart-form data)\r\n-        RenderRequest request = req;\r\n-\r\n-        // Get the cocoon engine instance\r\n-        Cocoon cocoon = getCocoon();\r\n-\r\n-        // Check if cocoon was initialized\r\n-        if (cocoon == null) {\r\n-            manageException(request, res, null, null,\r\n-                            \"Initialization Problem\",\r\n-                            null /* \"Cocoon was not initialized\" */,\r\n-                            null /* \"Cocoon was not initialized, cannot process request\" */,\r\n-                            this.exception);\r\n-            return;\r\n-        }\r\n-\r\n-        // We got it... Process the request\r\n-        String servletPath = this.servletPath;\r\n-        if (servletPath == null) {\r\n-            servletPath = \"portlets/\" + getPortletConfig().getPortletName() + '/';\r\n-        }\r\n-\r\n-        String uri = servletPath;\r\n-        String pathInfo = request.getParameter(PortletEnvironment.PARAMETER_PATH_INFO);\r\n-        if (storeSessionPath) {\r\n-            final PortletSession session = request.getPortletSession(true);\r\n-            if (pathInfo == null) {\r\n-                pathInfo = (String)session.getAttribute(PortletEnvironment.PARAMETER_PATH_INFO);\r\n-            } else {\r\n-                session.setAttribute(PortletEnvironment.PARAMETER_PATH_INFO, pathInfo);\r\n-            }\r\n-        }\r\n-\r\n-        if (pathInfo != null) {\r\n-            if (pathInfo.length() > 0 && pathInfo.charAt(0) == '/') {\r\n-                pathInfo = pathInfo.substring(1);\r\n-            }\r\n-            uri += pathInfo;\r\n-        }\r\n-\r\n-        String contentType = null;\r\n-        ContextMap ctxMap = null;\r\n-\r\n-        Environment env;\r\n-        try{\r\n-            env = getEnvironment(servletPath, NetUtils.decode(uri, \"UTF-8\"), request, res);\r\n-        } catch (Exception e) {\r\n-            if (getLogger().isErrorEnabled()) {\r\n-                getLogger().error(\"Problem with Cocoon portlet\", e);\r\n-            }\r\n-\r\n-            manageException(request, res, null, uri,\r\n-                            \"Problem in creating the Environment\", null, null, e);\r\n-            return;\r\n-        }\r\n-\r\n-        try {\r\n-            try {\r\n-                // Initialize a fresh log context containing the object model: it\r\n-                // will be used by the CocoonLogFormatter\r\n-                ctxMap = ContextMap.getCurrentContext();\r\n-                // Add thread name (default content for empty context)\r\n-                String threadName = Thread.currentThread().getName();\r\n-                ctxMap.set(\"threadName\", threadName);\r\n-                // Add the object model\r\n-                ctxMap.set(\"objectModel\", env.getObjectModel());\r\n-                // Add a unique request id (threadName + currentTime\r\n-                ctxMap.set(\"request-id\", threadName + System.currentTimeMillis());\r\n-\r\n-                if (cocoon.process(env)) {\r\n-                } else {\r\n-                    // We reach this when there is nothing in the processing change that matches\r\n-                    // the request. For example, no matcher matches.\r\n-                    getLogger().fatalError(\"The Cocoon engine failed to process the request.\");\r\n-                    manageException(request, res, env, uri,\r\n-                                    \"Request Processing Failed\",\r\n-                                    \"Cocoon engine failed in process the request\",\r\n-                                    \"The processing engine failed to process the request. This could be due to lack of matching or bugs in the pipeline engine.\",\r\n-                                    null);\r\n-                    return;\r\n-                }\r\n-            } catch (ResourceNotFoundException rse) {\r\n-                if (getLogger().isWarnEnabled()) {\r\n-                    getLogger().warn(\"The resource was not found\", rse);\r\n-                }\r\n-\r\n-                manageException(request, res, env, uri,\r\n-                                \"Resource Not Found\",\r\n-                                \"Resource Not Found\",\r\n-                                \"The requested portlet could not be found\",\r\n-                                rse);\r\n-                return;\r\n-\r\n-            } catch (ConnectionResetException e) {\r\n-                if (getLogger().isDebugEnabled()) {\r\n-                    getLogger().debug(e.getMessage(), e);\r\n-                } else if (getLogger().isWarnEnabled()) {\r\n-                    getLogger().warn(e.getMessage());\r\n-                }\r\n-\r\n-            } catch (IOException e) {\r\n-                // Tomcat5 wraps SocketException into ClientAbortException which extends IOException.\r\n-                if (getLogger().isDebugEnabled()) {\r\n-                    getLogger().debug(e.getMessage(), e);\r\n-                } else if (getLogger().isWarnEnabled()) {\r\n-                    getLogger().warn(e.getMessage());\r\n-                }\r\n-\r\n-            } catch (Exception e) {\r\n-                if (getLogger().isErrorEnabled()) {\r\n-                    getLogger().error(\"Internal Cocoon Problem\", e);\r\n-                }\r\n-\r\n-                manageException(request, res, env, uri,\r\n-                                \"Internal Server Error\", null, null, e);\r\n-                return;\r\n-            }\r\n-\r\n-            long end = System.currentTimeMillis();\r\n-            String timeString = processTime(end - start);\r\n-            if (getLogger().isInfoEnabled()) {\r\n-                getLogger().info(\"'\" + uri + \"' \" + timeString);\r\n-            }\r\n-            res.setProperty(\"X-Cocoon-Time\", timeString);\r\n-\r\n-            if (contentType != null && contentType.equals(\"text/html\")) {\r\n-                String showTime = request.getParameter(Constants.SHOWTIME_PARAM);\r\n-                boolean show = this.showTime;\r\n-                if (showTime != null) {\r\n-                    show = !showTime.equalsIgnoreCase(\"no\");\r\n-                }\r\n-                if (show) {\r\n-                    boolean hide = this.hiddenShowTime;\r\n-                    if (showTime != null) {\r\n-                        hide = showTime.equalsIgnoreCase(\"hide\");\r\n-                    }\r\n-                    PrintStream out = new PrintStream(res.getPortletOutputStream());\r\n-                    out.print((hide) ? \"<!-- \" : \"<p>\");\r\n-                    out.print(timeString);\r\n-                    out.println((hide) ? \" -->\" : \"</p>\\n\");\r\n-                }\r\n-            }\r\n-        } catch(PortletException e) {\r\n-            throw e;\r\n-        } catch(Exception e) {\r\n-            throw new PortletException(\"Exception in process()\", e);\r\n-        } finally {\r\n-            try {\r\n-                OutputStream out = res.getPortletOutputStream();\r\n-                out.flush();\r\n-                out.close();\r\n-            } catch (SocketException se) {\r\n-                if (getLogger().isDebugEnabled()) {\r\n-                    getLogger().debug(\"SocketException while trying to close stream.\", se);\r\n-                } else if (getLogger().isWarnEnabled()) {\r\n-                    getLogger().warn(\"SocketException while trying to close stream.\");\r\n-                }\r\n-\r\n-            } catch (Exception e) {\r\n-                getLogger().error(\"Cocoon got an Exception while trying to close stream.\", e);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected void manageException(ActionRequest req, ActionResponse res, Environment env,\r\n-                                   String uri, String title, String message, String description,\r\n-                                   Exception e)\r\n-    throws PortletException {\r\n-        throw new PortletException(\"Exception in CocoonPortlet\", e);\r\n-    }\r\n-\r\n-    protected void manageException(RenderRequest req, RenderResponse res, Environment env,\r\n-                                   String uri, String title, String message, String description,\r\n-                                   Exception e)\r\n-    throws IOException, PortletException {\r\n-        if (this.manageExceptions) {\r\n-            if (env != null) {\r\n-                env.tryResetResponse();\r\n-            } else {\r\n-                res.reset();\r\n-            }\r\n-\r\n-            String type = Notifying.FATAL_NOTIFICATION;\r\n-            HashMap extraDescriptions = null;\r\n-\r\n-            extraDescriptions = new HashMap(2);\r\n-            extraDescriptions.put(Notifying.EXTRA_REQUESTURI, getPortletConfig().getPortletName());\r\n-            if (uri != null) {\r\n-                 extraDescriptions.put(\"Request URI\", uri);\r\n-            }\r\n-\r\n-            // Do not show exception stack trace when log level is WARN or above. Show only message.\r\n-            if (!getLogger().isInfoEnabled()) {\r\n-                Throwable t = DefaultNotifyingBuilder.getRootCause(e);\r\n-                if (t != null) extraDescriptions.put(Notifying.EXTRA_CAUSE, t.getMessage());\r\n-                e = null;\r\n-            }\r\n-\r\n-            Notifying n = new DefaultNotifyingBuilder().build(this,\r\n-                                                              e,\r\n-                                                              type,\r\n-                                                              title,\r\n-                                                              \"Cocoon Portlet\",\r\n-                                                              message,\r\n-                                                              description,\r\n-                                                              extraDescriptions);\r\n-\r\n-            res.setContentType(\"text/html\");\r\n-            Notifier.notify(n, res.getPortletOutputStream(), \"text/html\");\r\n-        } else {\r\n-            res.flushBuffer();\r\n-            throw new PortletException(\"Exception in CocoonPortlet\", e);\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * Create the environment for the request\r\n-     */\r\n-    protected Environment getEnvironment(String servletPath,\r\n-                                         String uri,\r\n-                                         ActionRequest req,\r\n-                                         ActionResponse res)\r\n-    throws Exception {\r\n-        PortletEnvironment env;\r\n-\r\n-        String formEncoding = req.getParameter(\"cocoon-form-encoding\");\r\n-        if (formEncoding == null) {\r\n-            formEncoding = this.defaultFormEncoding;\r\n-        }\r\n-        env = new PortletEnvironment(servletPath,\r\n-                                     uri,\r\n-                                     req,\r\n-                                     res,\r\n-                                     this.portletContext,\r\n-                                     this.envPortletContext,\r\n-                                     this.containerEncoding,\r\n-                                     formEncoding,\r\n-                                     this.defaultSessionScope);\r\n-        env.enableLogging(getLogger());\r\n-        return env;\r\n-    }\r\n-\r\n-    /**\r\n-     * Create the environment for the request\r\n-     */\r\n-    protected Environment getEnvironment(String servletPath,\r\n-                                         String uri,\r\n-                                         RenderRequest req,\r\n-                                         RenderResponse res)\r\n-    throws Exception {\r\n-        PortletEnvironment env;\r\n-\r\n-        String formEncoding = req.getParameter(\"cocoon-form-encoding\");\r\n-        if (formEncoding == null) {\r\n-            formEncoding = this.defaultFormEncoding;\r\n-        }\r\n-        env = new PortletEnvironment(servletPath,\r\n-                                     uri,\r\n-                                     req,\r\n-                                     res,\r\n-                                     this.portletContext,\r\n-                                     this.envPortletContext,\r\n-                                     this.containerEncoding,\r\n-                                     formEncoding,\r\n-                                     this.defaultSessionScope);\r\n-        env.enableLogging(getLogger());\r\n-        return env;\r\n-    }\r\n-\r\n-    private String processTime(long time) {\r\n-        StringBuffer out = new StringBuffer(PROCESSED_BY);\r\n-        if (time <= SECOND) {\r\n-            out.append(time);\r\n-            out.append(\" milliseconds.\");\r\n-        } else if (time <= MINUTE) {\r\n-            out.append(time / SECOND);\r\n-            out.append(\" seconds.\");\r\n-        } else if (time <= HOUR) {\r\n-            out.append(time / MINUTE);\r\n-            out.append(\" minutes.\");\r\n-        } else {\r\n-            out.append(time / HOUR);\r\n-            out.append(\" hours.\");\r\n-        }\r\n-        return out.toString();\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the current cocoon object.\r\n-     * Reload cocoon if configuration changed or we are reloading.\r\n-     */\r\n-    private Cocoon getCocoon() {\r\n-        return new CocoonAccess() {\r\n-            final Cocoon instance() {\r\n-                return super.getCocoon();\r\n-            }\r\n-        }.instance();\r\n-    }\r\n-\r\n-    /**\r\n-     * Get an initialisation parameter. The value is trimmed, and null is returned if the trimmed value\r\n-     * is empty.\r\n-     */\r\n-    public String getInitParameter(String name) {\r\n-    \tString result = super.getInitParameter(name);\r\n-    \tif (result != null) {\r\n-    \t\tresult = result.trim();\r\n-    \t\tif (result.length() == 0) {\r\n-    \t\t\tresult = null;\r\n-    \t\t}\r\n-    \t}\r\n-\r\n-    \treturn result;\r\n-    }\r\n-\r\n-    /** Convenience method to access portlet parameters */\r\n-    protected String getInitParameter(String name, String defaultValue) {\r\n-    \tString result = getInitParameter(name);\r\n-    \tif (result == null) {\r\n-    \t\tif (getLogger() != null && getLogger().isDebugEnabled()) {\r\n-    \t\t\tgetLogger().debug(name + \" was not set - defaulting to '\" + defaultValue + \"'\");\r\n-    \t\t}\r\n-    \t\treturn defaultValue;\r\n-    \t} else {\r\n-    \t\treturn result;\r\n-    \t}\r\n-    }\r\n-\r\n-    /** Convenience method to access boolean portlet parameters */\r\n-    protected boolean getInitParameterAsBoolean(String name, boolean defaultValue) {\r\n-    \tString value = getInitParameter(name);\r\n-    \tif (value == null) {\r\n-\t\t\tif (getLogger() != null && getLogger().isDebugEnabled()) {\r\n-\t\t\t\tgetLogger().debug(name + \" was not set - defaulting to '\" + defaultValue + \"'\");\r\n-\t\t\t}\r\n-    \t\treturn defaultValue;\r\n-    \t} else {\r\n-    \t\treturn value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"yes\");\r\n-    \t}\r\n-    }\r\n-\r\n-    protected int getInitParameterAsInteger(String name, int defaultValue) {\r\n-    \tString value = getInitParameter(name);\r\n-    \tif (value == null) {\r\n-\t\t\tif (getLogger() != null && getLogger().isDebugEnabled()) {\r\n-\t\t\t\tgetLogger().debug(name + \" was not set - defaulting to '\" + defaultValue + \"'\");\r\n-\t\t\t}\r\n-\t\t\treturn defaultValue;\r\n-    \t} else {\r\n-    \t\treturn Integer.parseInt(value);\r\n-    \t}\r\n-    }\r\n-\r\n-    protected void initLogger() {\r\n-        final String accesslogger = getInitParameter(\"portlet-logger\", \"cocoon\");\r\n-\r\n-        final Hierarchy defaultHierarchy = Hierarchy.getDefaultHierarchy();\r\n-\r\n-        final Logger logger = new LogKitLogger(Hierarchy.getDefaultHierarchy().getLoggerFor(\"\"));\r\n-        final String loggerManagerClass =\r\n-            this.getInitParameter(\"logger-class\", LogKitLoggerManager.class.getName());\r\n-\r\n-        // the log4j support requires currently that the log4j system is already configured elsewhere\r\n-\r\n-        final LoggerManager loggerManager =\r\n-                newLoggerManager(loggerManagerClass, defaultHierarchy);\r\n-        ContainerUtil.enableLogging(loggerManager, logger);\r\n-\r\n-        final DefaultContext subcontext = new DefaultContext();\r\n-        subcontext.put(\"portlet-context\", this.portletContext);\r\n-        if (this.portletContextPath == null) {\r\n-            File logSCDir = new File(this.workDir, \"log\");\r\n-            logSCDir.mkdirs();\r\n-            if (getLogger().isWarnEnabled()) {\r\n-                getLogger().warn(\"Setting servlet-context for LogKit to \" + logSCDir);\r\n-            }\r\n-            subcontext.put(\"context-root\", logSCDir.toString());\r\n-        } else {\r\n-            subcontext.put(\"context-root\", this.portletContextPath);\r\n-        }\r\n-\r\n-        try {\r\n-            ContainerUtil.contextualize(loggerManager, subcontext);\r\n-\r\n-            if (loggerManager instanceof Configurable) {\r\n-                //Configure the logkit management\r\n-                String logkitConfig = getInitParameter(\"logkit-config\", \"/WEB-INF/logkit.xconf\");\r\n-\r\n-                // test if this is a qualified url\r\n-                InputStream is = null;\r\n-                if (logkitConfig.indexOf(':') == -1) {\r\n-                    is = this.portletContext.getResourceAsStream(logkitConfig);\r\n-                    if (is == null) is = new FileInputStream(logkitConfig);\r\n-                } else {\r\n-                    URL logkitURL = new URL(logkitConfig);\r\n-                    is = logkitURL.openStream();\r\n-                }\r\n-                final DefaultConfigurationBuilder builder = new DefaultConfigurationBuilder();\r\n-                final Configuration conf = builder.build(is);\r\n-                ContainerUtil.configure(loggerManager, conf);\r\n-            }\r\n-\r\n-            // let's configure log4j\r\n-            final String log4jConfig = getInitParameter(\"log4j-config\", null);\r\n-            if ( log4jConfig != null ) {\r\n-                final Log4JConfigurator configurator = new Log4JConfigurator(subcontext);\r\n-\r\n-                // test if this is a qualified url\r\n-                InputStream is = null;\r\n-                if ( log4jConfig.indexOf(':') == -1) {\r\n-                    is = this.portletContext.getResourceAsStream(log4jConfig);\r\n-                    if (is == null) is = new FileInputStream(log4jConfig);\r\n-                } else {\r\n-                    final URL log4jURL = new URL(log4jConfig);\r\n-                    is = log4jURL.openStream();\r\n-                }\r\n-                configurator.doConfigure(is, LogManager.getLoggerRepository());\r\n-            }\r\n-\r\n-            ContainerUtil.initialize(loggerManager);\r\n-        } catch (Exception e) {\r\n-            e.printStackTrace();\r\n-        }\r\n-\r\n-        this.log = loggerManager.getLoggerForCategory(accesslogger);\r\n-    }\r\n-\r\n-    private LoggerManager newLoggerManager(String loggerManagerClass, Hierarchy hierarchy) {\r\n-        if (loggerManagerClass.equals(LogKitLoggerManager.class.getName())) {\r\n-            return new LogKitLoggerManager(hierarchy);\r\n-        } else if (loggerManagerClass.equals(Log4JLoggerManager.class.getName()) ||\r\n-                   loggerManagerClass.equalsIgnoreCase(\"LOG4J\")) {\r\n-            return new Log4JLoggerManager();\r\n-        } else {\r\n-            try {\r\n-                Class clazz = Class.forName(loggerManagerClass);\r\n-                return (LoggerManager)clazz.newInstance();\r\n-            } catch (Exception e) {\r\n-                return new LogKitLoggerManager(hierarchy);\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected Logger getLogger() {\r\n-        return this.log;\r\n-    }\r\n-}\r\n+/*\n+ * Copyright 1999-2004 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.cocoon.portlet;\n+\n+import org.apache.avalon.excalibur.logger.Log4JLoggerManager;\n+import org.apache.avalon.excalibur.logger.LogKitLoggerManager;\n+import org.apache.avalon.excalibur.logger.LoggerManager;\n+import org.apache.avalon.framework.configuration.Configurable;\n+import org.apache.avalon.framework.configuration.Configuration;\n+import org.apache.avalon.framework.configuration.DefaultConfigurationBuilder;\n+import org.apache.avalon.framework.container.ContainerUtil;\n+import org.apache.avalon.framework.context.DefaultContext;\n+import org.apache.avalon.framework.logger.LogKitLogger;\n+import org.apache.avalon.framework.logger.Logger;\n+\n+import org.apache.cocoon.Cocoon;\n+import org.apache.cocoon.CocoonAccess;\n+import org.apache.cocoon.ConnectionResetException;\n+import org.apache.cocoon.Constants;\n+import org.apache.cocoon.ResourceNotFoundException;\n+import org.apache.cocoon.components.notification.DefaultNotifyingBuilder;\n+import org.apache.cocoon.components.notification.Notifier;\n+import org.apache.cocoon.components.notification.Notifying;\n+import org.apache.cocoon.environment.Environment;\n+import org.apache.cocoon.environment.portlet.PortletContext;\n+import org.apache.cocoon.environment.portlet.PortletEnvironment;\n+import org.apache.cocoon.portlet.multipart.MultipartActionRequest;\n+import org.apache.cocoon.portlet.multipart.RequestFactory;\n+import org.apache.cocoon.util.log.Log4JConfigurator;\n+\n+import org.apache.commons.lang.BooleanUtils;\n+import org.apache.log.ContextMap;\n+import org.apache.log.Hierarchy;\n+import org.apache.log4j.LogManager;\n+\n+import javax.portlet.ActionRequest;\n+import javax.portlet.ActionResponse;\n+import javax.portlet.GenericPortlet;\n+import javax.portlet.PortletConfig;\n+import javax.portlet.PortletException;\n+import javax.portlet.PortletSession;\n+import javax.portlet.RenderRequest;\n+import javax.portlet.RenderResponse;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.PrintStream;\n+import java.net.SocketException;\n+import java.net.URL;\n+import java.util.HashMap;\n+\n+/**\n+ * This is the entry point for Cocoon execution as an JSR-168 Portlet.\n+ *\n+ * <p>This implementation of the Portlet interface requires that someone will\n+ * first create and initialize an instance of the Cocoon object, and this\n+ * Portlet will use this instance to process requests.</p>\n+ *\n+ * @version CVS $Id$\n+ */\n+public class ManagedCocoonPortlet extends GenericPortlet {\n+\n+    // Processing time message\n+    protected static final String PROCESSED_BY = \"Processed by \"\n+            + Constants.COMPLETE_NAME + \" in \";\n+\n+    // Used by \"show-time\"\n+    static final float SECOND = 1000;\n+    static final float MINUTE = 60 * SECOND;\n+    static final float HOUR   = 60 * MINUTE;\n+\n+    private Logger log;\n+\n+    /**\n+     * Holds exception happened during initialization (if any)\n+     */\n+    protected Exception exception;\n+\n+\n+    /**\n+     * Allow adding processing time to the response\n+     */\n+    protected boolean showTime;\n+\n+    /**\n+     * If true, processing time will be added as an HTML comment\n+     */\n+    protected boolean hiddenShowTime;\n+\n+\n+    /**\n+     * Default value for {@link #enableUploads} parameter (false)\n+     */\n+    private static final boolean ENABLE_UPLOADS = false;\n+    private static final boolean SAVE_UPLOADS_TO_DISK = true;\n+    private static final int MAX_UPLOAD_SIZE = 10000000; // 10Mb\n+\n+    /**\n+     * Allow processing of upload requests (mime/multipart)\n+     */\n+    private boolean enableUploads;\n+    private boolean autoSaveUploads;\n+    private boolean allowOverwrite;\n+    private boolean silentlyRename;\n+    private int maxUploadSize;\n+\n+    private File uploadDir;\n+    private File workDir;\n+\n+    private String containerEncoding;\n+    private String defaultFormEncoding;\n+\n+    protected javax.portlet.PortletContext portletContext;\n+    protected PortletContext envPortletContext;\n+\n+\n+    /**\n+     * If true or not set, this class will try to catch and handle all Cocoon exceptions.\n+     * If false, it will rethrow them to the portlet container.\n+     */\n+    private boolean manageExceptions;\n+\n+    /**\n+     * This is the path to the portlet context (or the result\n+     * of calling getRealPath('/') on the PortletContext.\n+     * Note, that this can be null.\n+     */\n+    protected String portletContextPath;\n+\n+    /**\n+     * The RequestFactory is responsible for wrapping multipart-encoded\n+     * forms and for handing the file payload of incoming requests\n+     */\n+    protected RequestFactory requestFactory;\n+\n+    /**\n+     * Value to be used as servletPath in the request.\n+     * Provided via configuration parameter, if missing, defaults to the\n+     * '/portlets/' + portletName.\n+     */\n+    protected String servletPath;\n+\n+    /**\n+     * Default scope for the session attributes, either\n+     * {@link javax.portlet.PortletSession#PORTLET_SCOPE} or\n+     * {@link javax.portlet.PortletSession#APPLICATION_SCOPE}.\n+     * This corresponds to <code>default-session-scope</code>\n+     * parameter, with default value <code>portlet</code>.\n+     *\n+     * @see org.apache.cocoon.environment.portlet.PortletSession\n+     */\n+    protected int defaultSessionScope;\n+\n+    /**\n+     * Store pathInfo in session\n+     */\n+    protected boolean storeSessionPath;\n+\n+    /**\n+     * Initialize this <code>CocoonPortlet</code> instance.\n+     *\n+     * <p>Uses the following parameters:\n+     *  portlet-logger\n+     *  enable-uploads\n+     *  autosave-uploads\n+     *  overwrite-uploads\n+     *  upload-max-size\n+     *  show-time\n+     *  container-encoding\n+     *  form-encoding\n+     *  manage-exceptions\n+     *  servlet-path\n+     *\n+     * @param conf The PortletConfig object from the portlet container.\n+     * @throws PortletException\n+     */\n+    public void init(PortletConfig conf) throws PortletException {\n+\n+        super.init(conf);\n+\n+        String value;\n+\n+        this.portletContext = conf.getPortletContext();\n+        this.envPortletContext = new PortletContext(this.portletContext);\n+        this.portletContextPath = this.portletContext.getRealPath(\"/\");\n+\n+        initLogger();\n+\n+        // first init the work-directory for the logger.\n+        // this is required if we are running inside a war file!\n+        final String workDirParam = getInitParameter(\"work-directory\");\n+        if (workDirParam != null) {\n+            if (this.portletContextPath == null) {\n+                // No context path : consider work-directory as absolute\n+                this.workDir = new File(workDirParam);\n+            } else {\n+                // Context path exists : is work-directory absolute ?\n+                File workDirParamFile = new File(workDirParam);\n+                if (workDirParamFile.isAbsolute()) {\n+                    // Yes : keep it as is\n+                    this.workDir = workDirParamFile;\n+                } else {\n+                    // No : consider it relative to context path\n+                    this.workDir = new File(portletContextPath, workDirParam);\n+                }\n+            }\n+        } else {\n+            // TODO: Check portlet specification\n+            this.workDir = (File) this.portletContext.getAttribute(\"javax.servlet.context.tempdir\");\n+            if (this.workDir == null) {\n+                this.workDir = new File(this.portletContext.getRealPath(\"/WEB-INF/work\"));\n+            }\n+            this.workDir = new File(workDir, \"cocoon-files\");\n+        }\n+        this.workDir.mkdirs();\n+\n+        final String uploadDirParam = conf.getInitParameter(\"upload-directory\");\n+        if (uploadDirParam != null) {\n+            if (this.portletContextPath == null) {\n+                this.uploadDir = new File(uploadDirParam);\n+            } else {\n+                // Context path exists : is upload-directory absolute ?\n+                File uploadDirParamFile = new File(uploadDirParam);\n+                if (uploadDirParamFile.isAbsolute()) {\n+                    // Yes : keep it as is\n+                    this.uploadDir = uploadDirParamFile;\n+                } else {\n+                    // No : consider it relative to context path\n+                    this.uploadDir = new File(portletContextPath, uploadDirParam);\n+                }\n+            }\n+            if (getLogger().isDebugEnabled()) {\n+                getLogger().debug(\"Using upload-directory \" + this.uploadDir);\n+            }\n+        } else {\n+            this.uploadDir = new File(workDir, \"upload-dir\" + File.separator);\n+            if (getLogger().isDebugEnabled()) {\n+                getLogger().debug(\"upload-directory was not set - defaulting to \" + this.uploadDir);\n+            }\n+        }\n+        this.uploadDir.mkdirs();\n+\n+        this.enableUploads = getInitParameterAsBoolean(\"enable-uploads\", ENABLE_UPLOADS);\n+        this.autoSaveUploads = getInitParameterAsBoolean(\"autosave-uploads\", SAVE_UPLOADS_TO_DISK);\n+\n+        String overwriteParam = getInitParameter(\"overwrite-uploads\", \"rename\");\n+        // accepted values are deny|allow|rename - rename is default.\n+        if (\"deny\".equalsIgnoreCase(overwriteParam)) {\n+            this.allowOverwrite = false;\n+            this.silentlyRename = false;\n+        } else if (\"allow\".equalsIgnoreCase(overwriteParam)) {\n+            this.allowOverwrite = true;\n+            this.silentlyRename = false; // ignored in this case\n+        } else {\n+            // either rename is specified or unsupported value - default to rename.\n+            this.allowOverwrite = false;\n+            this.silentlyRename = true;\n+        }\n+\n+        this.maxUploadSize = getInitParameterAsInteger(\"upload-max-size\", MAX_UPLOAD_SIZE);\n+\n+        value = conf.getInitParameter(\"show-time\");\n+        this.showTime = BooleanUtils.toBoolean(value) || (this.hiddenShowTime = \"hide\".equals(value));\n+        if (value == null) {\n+            if (getLogger().isDebugEnabled()) {\n+                getLogger().debug(\"show-time was not set - defaulting to false\");\n+            }\n+        }\n+\n+        this.containerEncoding = getInitParameter(\"container-encoding\", \"ISO-8859-1\");\n+        this.defaultFormEncoding = getInitParameter(\"form-encoding\", \"ISO-8859-1\");\n+\n+        this.manageExceptions = getInitParameterAsBoolean(\"manage-exceptions\", true);\n+\n+        this.requestFactory = new RequestFactory(this.autoSaveUploads,\n+                                                 this.uploadDir,\n+                                                 this.allowOverwrite,\n+                                                 this.silentlyRename,\n+                                                 this.maxUploadSize,\n+                                                 this.defaultFormEncoding);\n+\n+        this.servletPath = getInitParameter(\"servlet-path\", null);\n+        if (this.servletPath != null) {\n+            if (this.servletPath.startsWith(\"/\")) {\n+                this.servletPath = this.servletPath.substring(1);\n+            }\n+            if (this.servletPath.length() > 0 && this.servletPath.charAt(0) != '/') {\n+                this.servletPath += '/';\n+            }\n+        }\n+\n+        final String sessionScopeParam = getInitParameter(\"default-session-scope\", \"portlet\");\n+        if (\"application\".equalsIgnoreCase(sessionScopeParam)) {\n+            this.defaultSessionScope = javax.portlet.PortletSession.APPLICATION_SCOPE;\n+        } else {\n+            this.defaultSessionScope = javax.portlet.PortletSession.PORTLET_SCOPE;\n+        }\n+\n+        this.storeSessionPath = getInitParameterAsBoolean(\"store-session-path\", false);\n+    }\n+\n+    public void processAction(ActionRequest req, ActionResponse res)\n+    throws PortletException, IOException {\n+\n+        // remember when we started (used for timing the processing)\n+        long start = System.currentTimeMillis();\n+\n+        // add the cocoon header timestamp\n+        res.setProperty(\"X-Cocoon-Version\", Constants.VERSION);\n+\n+        // get the request (wrapped if contains multipart-form data)\n+        ActionRequest request;\n+        try {\n+            if (this.enableUploads) {\n+                request = requestFactory.getServletRequest(req);\n+            } else {\n+                request = req;\n+            }\n+        } catch (Exception e) {\n+            if (getLogger().isErrorEnabled()) {\n+                getLogger().error(\"Problem with Cocoon portlet\", e);\n+            }\n+\n+            manageException(req, res, null, null,\n+                            \"Problem in creating the Request\", null, null, e);\n+            return;\n+        }\n+\n+        // Get the cocoon engine instance\n+        Cocoon cocoon = getCocoon();\n+\n+        // Check if cocoon was initialized\n+        if (cocoon == null) {\n+            manageException(request, res, null, null,\n+                            \"Initialization Problem\",\n+                            null /* \"Cocoon was not initialized\" */,\n+                            null /* \"Cocoon was not initialized, cannot process request\" */,\n+                            this.exception);\n+            return;\n+        }\n+\n+        // We got it... Process the request\n+        String servletPath = this.servletPath;\n+        if (servletPath == null) {\n+            servletPath = \"portlets/\" + getPortletConfig().getPortletName() + '/';\n+        }\n+\n+        String uri = servletPath;\n+        String pathInfo = request.getParameter(PortletEnvironment.PARAMETER_PATH_INFO);\n+        if (storeSessionPath) {\n+            final PortletSession session = request.getPortletSession(true);\n+            if (pathInfo == null) {\n+                pathInfo = (String)session.getAttribute(PortletEnvironment.PARAMETER_PATH_INFO);\n+            } else {\n+                session.setAttribute(PortletEnvironment.PARAMETER_PATH_INFO, pathInfo);\n+            }\n+        }\n+\n+        if (pathInfo != null) {\n+            if (pathInfo.length() > 0 && pathInfo.charAt(0) == '/') {\n+                pathInfo = pathInfo.substring(1);\n+            }\n+            uri += pathInfo;\n+        }\n+\n+        ContextMap ctxMap = null;\n+\n+        Environment env;\n+        try {\n+            env = getEnvironment(servletPath, uri, request, res);\n+        } catch (Exception e) {\n+            if (getLogger().isErrorEnabled()) {\n+                getLogger().error(\"Problem with Cocoon portlet\", e);\n+            }\n+\n+            manageException(request, res, null, uri,\n+                            \"Problem in creating the Environment\", null, null, e);\n+            return;\n+        }\n+\n+        try {\n+            try {\n+                // Initialize a fresh log context containing the object model: it\n+                // will be used by the CocoonLogFormatter\n+                ctxMap = ContextMap.getCurrentContext();\n+                // Add thread name (default content for empty context)\n+                String threadName = Thread.currentThread().getName();\n+                ctxMap.set(\"threadName\", threadName);\n+                // Add the object model\n+                ctxMap.set(\"objectModel\", env.getObjectModel());\n+                // Add a unique request id (threadName + currentTime\n+                ctxMap.set(\"request-id\", threadName + System.currentTimeMillis());\n+\n+                if (cocoon.process(env)) {\n+                } else {\n+                    // We reach this when there is nothing in the processing change that matches\n+                    // the request. For example, no matcher matches.\n+                    getLogger().fatalError(\"The Cocoon engine failed to process the request.\");\n+                    manageException(request, res, env, uri,\n+                                    \"Request Processing Failed\",\n+                                    \"Cocoon engine failed in process the request\",\n+                                    \"The processing engine failed to process the request. This could be due to lack of matching or bugs in the pipeline engine.\",\n+                                    null);\n+                    return;\n+                }\n+            } catch (ResourceNotFoundException rse) {\n+                if (getLogger().isWarnEnabled()) {\n+                    getLogger().warn(\"The resource was not found\", rse);\n+                }\n+\n+                manageException(request, res, env, uri,\n+                                \"Resource Not Found\",\n+                                \"Resource Not Found\",\n+                                \"The requested portlet could not be found\",\n+                                rse);\n+                return;\n+\n+            } catch (ConnectionResetException e) {\n+                if (getLogger().isDebugEnabled()) {\n+                    getLogger().debug(e.getMessage(), e);\n+                } else if (getLogger().isWarnEnabled()) {\n+                    getLogger().warn(e.getMessage());\n+                }\n+\n+            } catch (IOException e) {\n+                // Tomcat5 wraps SocketException into ClientAbortException which extends IOException.\n+                if (getLogger().isDebugEnabled()) {\n+                    getLogger().debug(e.getMessage(), e);\n+                } else if (getLogger().isWarnEnabled()) {\n+                    getLogger().warn(e.getMessage());\n+                }\n+\n+            } catch (Exception e) {\n+                if (getLogger().isErrorEnabled()) {\n+                    getLogger().error(\"Internal Cocoon Problem\", e);\n+                }\n+\n+                manageException(request, res, env, uri,\n+                                \"Internal Server Error\", null, null, e);\n+                return;\n+            }\n+\n+            long end = System.currentTimeMillis();\n+            String timeString = processTime(end - start);\n+            if (getLogger().isInfoEnabled()) {\n+                getLogger().info(\"'\" + uri + \"' \" + timeString);\n+            }\n+            res.setProperty(\"X-Cocoon-Time\", timeString);\n+        } finally {\n+            if (ctxMap != null) {\n+                ctxMap.clear();\n+            }\n+\n+            try {\n+                if (request instanceof MultipartActionRequest) {\n+                    if (getLogger().isDebugEnabled()) {\n+                        getLogger().debug(\"Deleting uploaded file(s).\");\n+                    }\n+                    ((MultipartActionRequest) request).cleanup();\n+                }\n+            } catch (IOException e) {\n+                getLogger().error(\"Cocoon got an Exception while trying to cleanup the uploaded files.\", e);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Process the specified <code>RenderRequest</code> producing output\n+     * on the specified <code>RenderResponse</code>.\n+     */\n+    public void render(RenderRequest req, RenderResponse res)\n+    throws PortletException, IOException {\n+\n+        // remember when we started (used for timing the processing)\n+        long start = System.currentTimeMillis();\n+\n+        // add the cocoon header timestamp\n+        res.setProperty(\"X-Cocoon-Version\", Constants.VERSION);\n+\n+        // get the request (wrapped if contains multipart-form data)\n+        RenderRequest request = req;\n+\n+        // Get the cocoon engine instance\n+        Cocoon cocoon = getCocoon();\n+\n+        // Check if cocoon was initialized\n+        if (cocoon == null) {\n+            manageException(request, res, null, null,\n+                            \"Initialization Problem\",\n+                            null /* \"Cocoon was not initialized\" */,\n+                            null /* \"Cocoon was not initialized, cannot process request\" */,\n+                            this.exception);\n+            return;\n+        }\n+\n+        // We got it... Process the request\n+        String servletPath = this.servletPath;\n+        if (servletPath == null) {\n+            servletPath = \"portlets/\" + getPortletConfig().getPortletName() + '/';\n+        }\n+\n+        String uri = servletPath;\n+        String pathInfo = request.getParameter(PortletEnvironment.PARAMETER_PATH_INFO);\n+        if (storeSessionPath) {\n+            final PortletSession session = request.getPortletSession(true);\n+            if (pathInfo == null) {\n+                pathInfo = (String)session.getAttribute(PortletEnvironment.PARAMETER_PATH_INFO);\n+            } else {\n+                session.setAttribute(PortletEnvironment.PARAMETER_PATH_INFO, pathInfo);\n+            }\n+        }\n+\n+        if (pathInfo != null) {\n+            if (pathInfo.length() > 0 && pathInfo.charAt(0) == '/') {\n+                pathInfo = pathInfo.substring(1);\n+            }\n+            uri += pathInfo;\n+        }\n+\n+        String contentType = null;\n+        ContextMap ctxMap = null;\n+\n+        Environment env;\n+        try {\n+            env = getEnvironment(servletPath, uri, request, res);\n+        } catch (Exception e) {\n+            if (getLogger().isErrorEnabled()) {\n+                getLogger().error(\"Problem with Cocoon portlet\", e);\n+            }\n+\n+            manageException(request, res, null, uri,\n+                            \"Problem in creating the Environment\", null, null, e);\n+            return;\n+        }\n+\n+        try {\n+            try {\n+                // Initialize a fresh log context containing the object model: it\n+                // will be used by the CocoonLogFormatter\n+                ctxMap = ContextMap.getCurrentContext();\n+                // Add thread name (default content for empty context)\n+                String threadName = Thread.currentThread().getName();\n+                ctxMap.set(\"threadName\", threadName);\n+                // Add the object model\n+                ctxMap.set(\"objectModel\", env.getObjectModel());\n+                // Add a unique request id (threadName + currentTime\n+                ctxMap.set(\"request-id\", threadName + System.currentTimeMillis());\n+\n+                if (cocoon.process(env)) {\n+                } else {\n+                    // We reach this when there is nothing in the processing change that matches\n+                    // the request. For example, no matcher matches.\n+                    getLogger().fatalError(\"The Cocoon engine failed to process the request.\");\n+                    manageException(request, res, env, uri,\n+                                    \"Request Processing Failed\",\n+                                    \"Cocoon engine failed in process the request\",\n+                                    \"The processing engine failed to process the request. This could be due to lack of matching or bugs in the pipeline engine.\",\n+                                    null);\n+                    return;\n+                }\n+            } catch (ResourceNotFoundException rse) {\n+                if (getLogger().isWarnEnabled()) {\n+                    getLogger().warn(\"The resource was not found\", rse);\n+                }\n+\n+                manageException(request, res, env, uri,\n+                                \"Resource Not Found\",\n+                                \"Resource Not Found\",\n+                                \"The requested portlet could not be found\",\n+                                rse);\n+                return;\n+\n+            } catch (ConnectionResetException e) {\n+                if (getLogger().isDebugEnabled()) {\n+                    getLogger().debug(e.getMessage(), e);\n+                } else if (getLogger().isWarnEnabled()) {\n+                    getLogger().warn(e.getMessage());\n+                }\n+\n+            } catch (IOException e) {\n+                // Tomcat5 wraps SocketException into ClientAbortException which extends IOException.\n+                if (getLogger().isDebugEnabled()) {\n+                    getLogger().debug(e.getMessage(), e);\n+                } else if (getLogger().isWarnEnabled()) {\n+                    getLogger().warn(e.getMessage());\n+                }\n+\n+            } catch (Exception e) {\n+                if (getLogger().isErrorEnabled()) {\n+                    getLogger().error(\"Internal Cocoon Problem\", e);\n+                }\n+\n+                manageException(request, res, env, uri,\n+                                \"Internal Server Error\", null, null, e);\n+                return;\n+            }\n+\n+            long end = System.currentTimeMillis();\n+            String timeString = processTime(end - start);\n+            if (getLogger().isInfoEnabled()) {\n+                getLogger().info(\"'\" + uri + \"' \" + timeString);\n+            }\n+            res.setProperty(\"X-Cocoon-Time\", timeString);\n+\n+            if (contentType != null && contentType.equals(\"text/html\")) {\n+                String showTime = request.getParameter(Constants.SHOWTIME_PARAM);\n+                boolean show = this.showTime;\n+                if (showTime != null) {\n+                    show = !showTime.equalsIgnoreCase(\"no\");\n+                }\n+                if (show) {\n+                    boolean hide = this.hiddenShowTime;\n+                    if (showTime != null) {\n+                        hide = showTime.equalsIgnoreCase(\"hide\");\n+                    }\n+                    PrintStream out = new PrintStream(res.getPortletOutputStream());\n+                    out.print((hide) ? \"<!-- \" : \"<p>\");\n+                    out.print(timeString);\n+                    out.println((hide) ? \" -->\" : \"</p>\\n\");\n+                }\n+            }\n+        } finally {\n+            if (ctxMap != null) {\n+                ctxMap.clear();\n+            }\n+\n+            try {\n+                OutputStream out = res.getPortletOutputStream();\n+                out.flush();\n+                out.close();\n+            } catch (SocketException se) {\n+                if (getLogger().isDebugEnabled()) {\n+                    getLogger().debug(\"SocketException while trying to close stream.\", se);\n+                } else if (getLogger().isWarnEnabled()) {\n+                    getLogger().warn(\"SocketException while trying to close stream.\");\n+                }\n+\n+            } catch (Exception e) {\n+                getLogger().error(\"Cocoon got an Exception while trying to close stream.\", e);\n+            }\n+        }\n+    }\n+\n+    protected void manageException(ActionRequest req, ActionResponse res, Environment env,\n+                                   String uri, String title, String message, String description,\n+                                   Exception e)\n+    throws PortletException {\n+        throw new PortletException(\"Exception in CocoonPortlet\", e);\n+    }\n+\n+    protected void manageException(RenderRequest req, RenderResponse res, Environment env,\n+                                   String uri, String title, String message, String description,\n+                                   Exception e)\n+    throws IOException, PortletException {\n+        if (this.manageExceptions) {\n+            if (env != null) {\n+                env.tryResetResponse();\n+            } else {\n+                res.reset();\n+            }\n+\n+            String type = Notifying.FATAL_NOTIFICATION;\n+            HashMap extraDescriptions = null;\n+\n+            extraDescriptions = new HashMap(2);\n+            extraDescriptions.put(Notifying.EXTRA_REQUESTURI, getPortletConfig().getPortletName());\n+            if (uri != null) {\n+                 extraDescriptions.put(\"Request URI\", uri);\n+            }\n+\n+            // Do not show exception stack trace when log level is WARN or above. Show only message.\n+            if (!getLogger().isInfoEnabled()) {\n+                Throwable t = DefaultNotifyingBuilder.getRootCause(e);\n+                if (t != null) extraDescriptions.put(Notifying.EXTRA_CAUSE, t.getMessage());\n+                e = null;\n+            }\n+\n+            Notifying n = new DefaultNotifyingBuilder().build(this,\n+                                                              e,\n+                                                              type,\n+                                                              title,\n+                                                              \"Cocoon Portlet\",\n+                                                              message,\n+                                                              description,\n+                                                              extraDescriptions);\n+\n+            res.setContentType(\"text/html\");\n+            Notifier.notify(n, res.getPortletOutputStream(), \"text/html\");\n+        } else {\n+            res.flushBuffer();\n+            throw new PortletException(\"Exception in CocoonPortlet\", e);\n+        }\n+    }\n+\n+    /**\n+     * Create the environment for the request\n+     */\n+    protected Environment getEnvironment(String servletPath,\n+                                         String uri,\n+                                         ActionRequest req,\n+                                         ActionResponse res)\n+    throws Exception {\n+        PortletEnvironment env;\n+\n+        String formEncoding = req.getParameter(\"cocoon-form-encoding\");\n+        if (formEncoding == null) {\n+            formEncoding = this.defaultFormEncoding;\n+        }\n+        env = new PortletEnvironment(servletPath,\n+                                     uri,\n+                                     req,\n+                                     res,\n+                                     this.portletContext,\n+                                     this.envPortletContext,\n+                                     this.containerEncoding,\n+                                     formEncoding,\n+                                     this.defaultSessionScope);\n+        env.enableLogging(getLogger());\n+        return env;\n+    }\n+\n+    /**\n+     * Create the environment for the request\n+     */\n+    protected Environment getEnvironment(String servletPath,\n+                                         String uri,\n+                                         RenderRequest req,\n+                                         RenderResponse res)\n+    throws Exception {\n+        PortletEnvironment env;\n+\n+        String formEncoding = req.getParameter(\"cocoon-form-encoding\");\n+        if (formEncoding == null) {\n+            formEncoding = this.defaultFormEncoding;\n+        }\n+        env = new PortletEnvironment(servletPath,\n+                                     uri,\n+                                     req,\n+                                     res,\n+                                     this.portletContext,\n+                                     this.envPortletContext,\n+                                     this.containerEncoding,\n+                                     formEncoding,\n+                                     this.defaultSessionScope);\n+        env.enableLogging(getLogger());\n+        return env;\n+    }\n+\n+    private String processTime(long time) {\n+        StringBuffer out = new StringBuffer(PROCESSED_BY);\n+        if (time <= SECOND) {\n+            out.append(time);\n+            out.append(\" milliseconds.\");\n+        } else if (time <= MINUTE) {\n+            out.append(time / SECOND);\n+            out.append(\" seconds.\");\n+        } else if (time <= HOUR) {\n+            out.append(time / MINUTE);\n+            out.append(\" minutes.\");\n+        } else {\n+            out.append(time / HOUR);\n+            out.append(\" hours.\");\n+        }\n+        return out.toString();\n+    }\n+\n+    /**\n+     * Gets the current cocoon object.\n+     * Reload cocoon if configuration changed or we are reloading.\n+     */\n+    private Cocoon getCocoon() {\n+        return new CocoonAccess() {\n+            final Cocoon instance() {\n+                return super.getCocoon();\n+            }\n+        }.instance();\n+    }\n+\n+    /**\n+     * Get an initialisation parameter. The value is trimmed, and null is returned if the trimmed value\n+     * is empty.\n+     */\n+    public String getInitParameter(String name) {\n+        String result = super.getInitParameter(name);\n+        if (result != null) {\n+            result = result.trim();\n+            if (result.length() == 0) {\n+                result = null;\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    /** Convenience method to access portlet parameters */\n+    protected String getInitParameter(String name, String defaultValue) {\n+        String result = getInitParameter(name);\n+        if (result == null) {\n+            if (getLogger() != null && getLogger().isDebugEnabled()) {\n+                getLogger().debug(name + \" was not set - defaulting to '\" + defaultValue + \"'\");\n+            }\n+            return defaultValue;\n+        } else {\n+            return result;\n+        }\n+    }\n+\n+    /** Convenience method to access boolean portlet parameters */\n+    protected boolean getInitParameterAsBoolean(String name, boolean defaultValue) {\n+        String value = getInitParameter(name);\n+        if (value == null) {\n+            if (getLogger() != null && getLogger().isDebugEnabled()) {\n+                getLogger().debug(name + \" was not set - defaulting to '\" + defaultValue + \"'\");\n+            }\n+            return defaultValue;\n+        }\n+\n+        return BooleanUtils.toBoolean(value);\n+    }\n+\n+    protected int getInitParameterAsInteger(String name, int defaultValue) {\n+        String value = getInitParameter(name);\n+        if (value == null) {\n+            if (getLogger() != null && getLogger().isDebugEnabled()) {\n+                getLogger().debug(name + \" was not set - defaulting to '\" + defaultValue + \"'\");\n+            }\n+            return defaultValue;\n+        } else {\n+            return Integer.parseInt(value);\n+        }\n+    }\n+\n+    protected void initLogger() {\n+        final String accesslogger = getInitParameter(\"portlet-logger\", \"cocoon\");\n+\n+        final Hierarchy defaultHierarchy = Hierarchy.getDefaultHierarchy();\n+\n+        final Logger logger = new LogKitLogger(Hierarchy.getDefaultHierarchy().getLoggerFor(\"\"));\n+        final String loggerManagerClass =\n+            this.getInitParameter(\"logger-class\", LogKitLoggerManager.class.getName());\n+\n+        // the log4j support requires currently that the log4j system is already configured elsewhere\n+\n+        final LoggerManager loggerManager =\n+                newLoggerManager(loggerManagerClass, defaultHierarchy);\n+        ContainerUtil.enableLogging(loggerManager, logger);\n+\n+        final DefaultContext subcontext = new DefaultContext();\n+        subcontext.put(\"portlet-context\", this.portletContext);\n+        if (this.portletContextPath == null) {\n+            File logSCDir = new File(this.workDir, \"log\");\n+            logSCDir.mkdirs();\n+            if (getLogger().isWarnEnabled()) {\n+                getLogger().warn(\"Setting servlet-context for LogKit to \" + logSCDir);\n+            }\n+            subcontext.put(\"context-root\", logSCDir.toString());\n+        } else {\n+            subcontext.put(\"context-root\", this.portletContextPath);\n+        }\n+\n+        try {\n+            ContainerUtil.contextualize(loggerManager, subcontext);\n+\n+            if (loggerManager instanceof Configurable) {\n+                //Configure the logkit management\n+                String logkitConfig = getInitParameter(\"logkit-config\", \"/WEB-INF/logkit.xconf\");\n+\n+                // test if this is a qualified url\n+                InputStream is = null;\n+                if (logkitConfig.indexOf(':') == -1) {\n+                    is = this.portletContext.getResourceAsStream(logkitConfig);\n+                    if (is == null) is = new FileInputStream(logkitConfig);\n+                } else {\n+                    URL logkitURL = new URL(logkitConfig);\n+                    is = logkitURL.openStream();\n+                }\n+                final DefaultConfigurationBuilder builder = new DefaultConfigurationBuilder();\n+                final Configuration conf = builder.build(is);\n+                ContainerUtil.configure(loggerManager, conf);\n+            }\n+\n+            // let's configure log4j\n+            final String log4jConfig = getInitParameter(\"log4j-config\", null);\n+            if ( log4jConfig != null ) {\n+                final Log4JConfigurator configurator = new Log4JConfigurator(subcontext);\n+\n+                // test if this is a qualified url\n+                InputStream is = null;\n+                if ( log4jConfig.indexOf(':') == -1) {\n+                    is = this.portletContext.getResourceAsStream(log4jConfig);\n+                    if (is == null) is = new FileInputStream(log4jConfig);\n+                } else {\n+                    final URL log4jURL = new URL(log4jConfig);\n+                    is = log4jURL.openStream();\n+                }\n+                configurator.doConfigure(is, LogManager.getLoggerRepository());\n+            }\n+\n+            ContainerUtil.initialize(loggerManager);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+\n+        this.log = loggerManager.getLoggerForCategory(accesslogger);\n+    }\n+\n+    private LoggerManager newLoggerManager(String loggerManagerClass, Hierarchy hierarchy) {\n+        if (loggerManagerClass.equals(LogKitLoggerManager.class.getName())) {\n+            return new LogKitLoggerManager(hierarchy);\n+        } else if (loggerManagerClass.equals(Log4JLoggerManager.class.getName()) ||\n+                   loggerManagerClass.equalsIgnoreCase(\"LOG4J\")) {\n+            return new Log4JLoggerManager();\n+        } else {\n+            try {\n+                Class clazz = Class.forName(loggerManagerClass);\n+                return (LoggerManager)clazz.newInstance();\n+            } catch (Exception e) {\n+                return new LogKitLoggerManager(hierarchy);\n+            }\n+        }\n+    }\n+\n+    protected Logger getLogger() {\n+        return this.log;\n+    }\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/490b8cd74ee47a71dc4bd6f323051b0de12bb739",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/ffe0a07de6c799a25dd0dd8cc890ff8f8d42024b",
        "message": "   <action dev=\"CZ\" type=\"fix\" fixes-bug=\"29373\">\n     Portal: Fix NPE when non-caching pipelines are used for the portal profile.\n   </action>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28595 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_107",
        "file": [
            {
                "sha": "4591a32bf9fb73e7b5a55a328348ed7507b93ce6",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java",
                "status": "modified",
                "additions": 6,
                "deletions": 4,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/490b8cd74ee47a71dc4bd6f323051b0de12bb739/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/490b8cd74ee47a71dc4bd6f323051b0de12bb739/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AuthenticationProfileManager.java?ref=490b8cd74ee47a71dc4bd6f323051b0de12bb739",
                "patch": "@@ -50,7 +50,7 @@\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:bluetkemeier@s-und-n.de\">Bj&ouml;rn L&uuml;tkemeier</a>\n  * \n- * @version CVS $Id: AuthenticationProfileManager.java,v 1.19 2004/03/19 14:21:06 cziegeler Exp $\n+ * @version CVS $Id: AuthenticationProfileManager.java,v 1.20 2004/06/07 10:29:10 cziegeler Exp $\n  */\n public class AuthenticationProfileManager \n     extends AbstractUserProfileManager { \n@@ -306,8 +306,9 @@ protected Object getOrCreateProfile(String layoutKey, Map parameters, PortalServ\n \n \t\t\tObject result = this.checkValidity(key, parameters, forcedLoad, adapter);\n             \n-\t\t\tif (!(result instanceof SourceValidity))\n+\t\t\tif ( result != null && !(result instanceof SourceValidity)) {\n \t\t\t\treturn new Object[]{result, Boolean.FALSE};\n+            }\n \t\t\tSourceValidity newValidity = (SourceValidity)result; \n \n \t\t\tthis.lock.releaseReadLock();\n@@ -316,8 +317,9 @@ protected Object getOrCreateProfile(String layoutKey, Map parameters, PortalServ\n \t\t\t// check validity again in case of another thread has already loaded\n \t\t\tresult = this.checkValidity(key, parameters, forcedLoad, adapter);\n             \n-\t\t\tif (!(result instanceof SourceValidity))\n+\t\t\tif ( result != null && !(result instanceof SourceValidity) ) {\n \t\t\t\treturn new Object[]{result, Boolean.FALSE};\n+            }\n \t\t\tnewValidity = (SourceValidity)result; \n \n \t\t\tObject object = adapter.loadProfile(key, parameters);\n@@ -326,7 +328,7 @@ protected Object getOrCreateProfile(String layoutKey, Map parameters, PortalServ\n                 this.attributes.put(key, new Object[] {object, newValidity});\n \t\t\t}\n \n-\t\t\treturn new Object[]{object, Boolean.TRUE};\n+\t\t\treturn new Object[] {object, Boolean.TRUE};\n         } catch (ProfileException pe) {\n             this.getLogger().error(\"Error loading profile: \" + pe.getMessage(), pe);\n             throw pe;"
            },
            {
                "sha": "47216c4b3f9b257d95b78fa4b91cd20d6e541aa8",
                "filename": "status.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/490b8cd74ee47a71dc4bd6f323051b0de12bb739/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/490b8cd74ee47a71dc4bd6f323051b0de12bb739/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=490b8cd74ee47a71dc4bd6f323051b0de12bb739",
                "patch": "@@ -57,7 +57,7 @@\n <!ENTITY uuml             \"&#x000FC;\">\n ]>\n \n-<!-- CVS $Id: status.xml,v 1.355 2004/06/07 09:53:33 cziegeler Exp $:-->\n+<!-- CVS $Id: status.xml,v 1.356 2004/06/07 10:29:09 cziegeler Exp $:-->\n \n <status>\n  <developers>\n@@ -205,6 +205,9 @@\n   <changes>\n \n  <release version=\"@version@\" date=\"@date@\">\n+   <action dev=\"CZ\" type=\"fix\" fixes-bug=\"29373\">\n+     Portal: Fix NPE when non-caching pipelines are used for the portal profile.\n+   </action>\n    <action dev=\"CZ\" type=\"fix\">\n      Portal: Fix transformation of non-external html links (HTMLEventLinkTransformer)\n    </action>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5d40e784165753b28137910c8d0956b953c90b70",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2d26ed7b0e7ee93def300c98ff6481b8065c139c",
        "message": "Fixing NPE when a full screen coplet is removed (bug 28655) reported by roy_huang@nbmgroup.com (roy huang)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28251 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_108",
        "file": [
            {
                "sha": "eb5d5ca605e5123e7c15f0619d09a45e6132b3d2",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/generation/PortalGenerator.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/generation/PortalGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/generation/PortalGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/generation/PortalGenerator.java?ref=5d40e784165753b28137910c8d0956b953c90b70",
                "patch": "@@ -39,7 +39,7 @@\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: PortalGenerator.java,v 1.7 2004/04/14 18:25:11 joerg Exp $\n+ * @version CVS $Id: PortalGenerator.java,v 1.8 2004/04/28 13:58:16 cziegeler Exp $\n  */\n public class PortalGenerator \n extends ServiceableGenerator {\n@@ -49,7 +49,6 @@\n \t */\n \tpublic void generate()\n     throws IOException, SAXException, ProcessingException {\n-        \n         // start the portal rendering\n         // 1. event processing\n         // 2. rendering"
            },
            {
                "sha": "fb96148b74297cd659035c7446c77643721febf0",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultLinkService.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultLinkService.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultLinkService.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/impl/DefaultLinkService.java?ref=5d40e784165753b28137910c8d0956b953c90b70",
                "patch": "@@ -42,7 +42,7 @@\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: DefaultLinkService.java,v 1.12 2004/03/05 13:02:13 bdelacretaz Exp $\n+ * @version CVS $Id: DefaultLinkService.java,v 1.13 2004/04/28 13:58:16 cziegeler Exp $\n  */\n public class DefaultLinkService \n     extends AbstractLogEnabled\n@@ -224,7 +224,7 @@ public void addEventToLink(Event event) {\n                 Object[] objects = (Object[])iter.next();\n                 if ( ((ComparableEvent)objects[0]).equalsEvent((ComparableEvent)event) ) {\n                     found = true;\n-                    info.comparableEvents.remove(objects[0]);\n+                    info.comparableEvents.remove(objects);\n                 }\n             }\n             info.comparableEvents.add( new Object[] {event, parameterName, value} );"
            },
            {
                "sha": "e1184e915c123f5e760f656a351128fb66d42ee1",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java",
                "status": "modified",
                "additions": 16,
                "deletions": 6,
                "changes": 22,
                "blob_url": "https://github.com/apache/cocoon/blob/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/layout/impl/DefaultLayoutFactory.java?ref=5d40e784165753b28137910c8d0956b953c90b70",
                "patch": "@@ -48,6 +48,7 @@\n import org.apache.cocoon.portal.event.Filter;\n import org.apache.cocoon.portal.event.LayoutEvent;\n import org.apache.cocoon.portal.event.Subscriber;\n+import org.apache.cocoon.portal.event.impl.FullScreenCopletEvent;\n import org.apache.cocoon.portal.event.impl.LayoutRemoveEvent;\n import org.apache.cocoon.portal.layout.CompositeLayout;\n import org.apache.cocoon.portal.layout.Item;\n@@ -122,7 +123,7 @@\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: DefaultLayoutFactory.java,v 1.17 2004/04/28 11:53:09 cziegeler Exp $\n+ * @version CVS $Id: DefaultLayoutFactory.java,v 1.18 2004/04/28 13:58:16 cziegeler Exp $\n  */\n public class DefaultLayoutFactory\n \textends AbstractLogEnabled\n@@ -395,6 +396,9 @@ public void inform(Event e) {\n         }\n     }\n \n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.portal.layout.LayoutFactory#remove(org.apache.cocoon.portal.layout.Layout)\n+     */\n     public void remove(Layout layout) \n     throws ProcessingException {\n         if ( layout != null ) {\n@@ -411,21 +415,27 @@ public void remove(Layout layout)\n             }\n             \n             PortalService service = null;\n+            EventManager eventManager = null;\n             try {\n-                service = (PortalService)this.manager.lookup(PortalService.ROLE);\n+                service = (PortalService)this.manager.lookup(PortalService.ROLE);                \n+                ProfileManager profileManager = service.getComponentManager().getProfileManager();\n                 if ( layout instanceof CopletLayout ) {\n+                    // full screen?\n+                    if ( layout.equals(profileManager.getEntryLayout()) ) {\n+                        Event event = new FullScreenCopletEvent(((CopletLayout)layout).getCopletInstanceData(), null);\n+                        eventManager = (EventManager)this.manager.lookup(EventManager.ROLE);\n+                        eventManager.getPublisher().publish(event);\n+                        service.getComponentManager().getLinkService().addEventToLink(event);\n+                    }\n                     CopletFactory factory = service.getComponentManager().getCopletFactory();\n                     factory.remove( ((CopletLayout)layout).getCopletInstanceData());\n                 }\n-                ProfileManager profileManager = service.getComponentManager().getProfileManager();\n-                if ( layout.equals(profileManager.getEntryLayout()) ) {\n-                    profileManager.setEntryLayout(null);\n-                }\n                 profileManager.unregister(layout);\n             } catch (ServiceException ce) {\n                 throw new ProcessingException(\"Unable to lookup portal service.\", ce);\n             } finally {\n                 this.manager.release( service );\n+                this.manager.release(eventManager);\n             }\n         }\n     }"
            },
            {
                "sha": "68f90e4192c2094917b687c7a011dee3d3e02d23",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/CIncludeCopletAspect.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/CIncludeCopletAspect.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/CIncludeCopletAspect.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/CIncludeCopletAspect.java?ref=5d40e784165753b28137910c8d0956b953c90b70",
                "patch": "@@ -45,7 +45,7 @@\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: CIncludeCopletAspect.java,v 1.5 2004/04/25 20:09:34 haul Exp $\n+ * @version CVS $Id: CIncludeCopletAspect.java,v 1.6 2004/04/28 13:58:16 cziegeler Exp $\n  */\n public class CIncludeCopletAspect \n     extends AbstractCIncludeAspect {\n@@ -58,7 +58,6 @@ public void toSAX(RendererAspectContext context,\n                 \t\tPortalService service,\n                 \t\tContentHandler handler)\n \tthrows SAXException {\n-\n         CopletInstanceData cid = ((CopletLayout)layout).getCopletInstanceData();\n         \n         XMLUtils.startElement(handler, \"content\");"
            },
            {
                "sha": "a79e6387e0fe212410f559f644a4e140518e0a0a",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractProfileManager.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractProfileManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractProfileManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/profile/impl/AbstractProfileManager.java?ref=5d40e784165753b28137910c8d0956b953c90b70",
                "patch": "@@ -37,7 +37,7 @@\n  * \n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * \n- * @version CVS $Id: AbstractProfileManager.java,v 1.6 2004/03/05 13:02:16 bdelacretaz Exp $\n+ * @version CVS $Id: AbstractProfileManager.java,v 1.7 2004/04/28 13:58:16 cziegeler Exp $\n  */\n public abstract class AbstractProfileManager \n     extends AbstractLogEnabled \n@@ -179,7 +179,11 @@ public void setEntryLayout(Layout object) {\n         PortalService service = null;\n         try {\n             service = (PortalService) this.manager.lookup(PortalService.ROLE);\n-            service.setTemporaryAttribute(\"DEFAULT_LAYOUT:\" + layoutKey, object);\n+            if ( object == null ) {\n+                service.removeTemporaryAttribute(\"DEFAULT_LAYOUT:\" + layoutKey);\n+            } else {\n+                service.setTemporaryAttribute(\"DEFAULT_LAYOUT:\" + layoutKey, object);\n+            }\n         } catch (ServiceException e) {\n             throw new CascadingRuntimeException(\"Unable to lookup service manager.\", e);\n         } finally {"
            },
            {
                "sha": "4c3f707791bee933f560f979200a5b9806a3c195",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/source/CopletSourceFactory.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/source/CopletSourceFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5d40e784165753b28137910c8d0956b953c90b70/src/blocks/portal/java/org/apache/cocoon/portal/source/CopletSourceFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/source/CopletSourceFactory.java?ref=5d40e784165753b28137910c8d0956b953c90b70",
                "patch": "@@ -39,7 +39,7 @@\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: CopletSourceFactory.java,v 1.7 2004/04/19 14:47:31 cziegeler Exp $\n+ * @version CVS $Id: CopletSourceFactory.java,v 1.8 2004/04/28 13:58:16 cziegeler Exp $\n  */\n public class CopletSourceFactory     \n     extends AbstractLogEnabled\n@@ -78,10 +78,12 @@ public Source getSource(String location, Map parameters)\n             location = location.substring(position+2);\n         }\n         PortalService service = null;\n-        CopletInstanceData coplet = null;\n         try {\n             service = (PortalService)this.manager.lookup(PortalService.ROLE);\n-            coplet = service.getComponentManager().getProfileManager().getCopletInstanceData(location);\n+            CopletInstanceData coplet = service.getComponentManager().getProfileManager().getCopletInstanceData(location);\n+            if ( coplet == null ) {\n+                throw new IOException(\"Unable to get coplet for \" + location);\n+            }\n             CopletSource copletSource =\n                 new CopletSource(uri, protocol,\n                                  coplet);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/541f4e31e9c4b410854001bfd02b1d9b76d7c035",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2bf9d643b120060a5664e3b50c5c3fe53bea4302",
        "message": "Give non-null values for attributes, request or headers, otherwise we get NPEs in RequestWrapper\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27813 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_109",
        "file": [
            {
                "sha": "2401695c99b3d49c3368891319660e6851fbe9c5",
                "filename": "src/blocks/cron/java/org/apache/cocoon/environment/background/BackgroundEnvironment.java",
                "status": "modified",
                "additions": 12,
                "deletions": 2,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/541f4e31e9c4b410854001bfd02b1d9b76d7c035/src/blocks/cron/java/org/apache/cocoon/environment/background/BackgroundEnvironment.java",
                "raw_url": "https://github.com/apache/cocoon/raw/541f4e31e9c4b410854001bfd02b1d9b76d7c035/src/blocks/cron/java/org/apache/cocoon/environment/background/BackgroundEnvironment.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/cron/java/org/apache/cocoon/environment/background/BackgroundEnvironment.java?ref=541f4e31e9c4b410854001bfd02b1d9b76d7c035",
                "patch": "@@ -19,6 +19,8 @@\n import java.io.IOException;\n import java.io.OutputStream;\n import java.net.MalformedURLException;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.Map;\n \n import org.apache.avalon.framework.component.ComponentManager;\n@@ -42,7 +44,7 @@\n  * for pipeline calls which are not externally triggered.\n  * \n  * @author <a href=\"http://apache.org/~reinhard\">Reinhard Poetz</a> \n- * @version CVS $Id: BackgroundEnvironment.java,v 1.3 2004/03/11 15:38:31 sylvain Exp $\n+ * @version CVS $Id: BackgroundEnvironment.java,v 1.4 2004/03/19 18:19:25 sylvain Exp $\n  *\n  * @since 2.1.4\n  */\n@@ -60,7 +62,15 @@ public BackgroundEnvironment(Logger logger, Context ctx, ServiceManager manager)\n \t\tthis.outputStream = new NullOutputStream();    \n      \n \t\t// TODO Would special Background*-objects have advantages?\n-\t\tRequest request = new CommandLineRequest(this, \"\", \"\", null, null, null);\n+\t\tRequest request = new CommandLineRequest(\n+            this,                  // environment\n+            \"\",                    // context path\n+            \"\",                    // servlet path\n+            \"\",                    // path info\n+            new HashMap(),         // attributes\n+            Collections.EMPTY_MAP, // parameters\n+            Collections.EMPTY_MAP  // headers\n+        );\n \t\tthis.objectModel.put(ObjectModelHelper.REQUEST_OBJECT, request);  \n \t\tthis.objectModel.put(ObjectModelHelper.RESPONSE_OBJECT,\n \t\t\t\t\t\t\t new CommandLineResponse());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/abcf1e4ce8d07aef28d370bcbcee790f55bad02b",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b047e5502dddf0ec7680f1fb9aabadf168f37521",
        "message": "Fix NPE in FlowJXPathSelectionList when trying to use null value in selection list\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27198 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_110",
        "file": [
            {
                "sha": "90647d7260e6988994d3e499890c419f0efeadda",
                "filename": "src/blocks/woody/java/org/apache/cocoon/woody/datatype/FlowJXPathSelectionList.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/abcf1e4ce8d07aef28d370bcbcee790f55bad02b/src/blocks/woody/java/org/apache/cocoon/woody/datatype/FlowJXPathSelectionList.java",
                "raw_url": "https://github.com/apache/cocoon/raw/abcf1e4ce8d07aef28d370bcbcee790f55bad02b/src/blocks/woody/java/org/apache/cocoon/woody/datatype/FlowJXPathSelectionList.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/java/org/apache/cocoon/woody/datatype/FlowJXPathSelectionList.java?ref=abcf1e4ce8d07aef28d370bcbcee790f55bad02b",
                "patch": "@@ -70,7 +70,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @see org.apache.cocoon.woody.datatype.FlowJXPathSelectionListBuilder\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: FlowJXPathSelectionList.java,v 1.5 2004/01/29 03:18:05 vgritsenko Exp $\n+ * @version CVS $Id: FlowJXPathSelectionList.java,v 1.6 2004/02/03 18:05:31 vgritsenko Exp $\n  */\n public class FlowJXPathSelectionList implements SelectionList {\n \n@@ -146,7 +146,12 @@ public void generateSaxFragment(ContentHandler contentHandler, Locale locale) th\n \n                 // Get the value as a string\n                 Object value = itemCtx.getValue(this.valuePath);\n-                stringValue = this.datatype.convertToString(value, locale);\n+\n+                // List may contain null value, and (per contract with convertors),\n+                // convertors are not invoked on nulls.\n+                if (value != null) {\n+                    stringValue = this.datatype.convertToString(value, locale);\n+                }\n \n                 // Get the label (can be ommitted)\n                 itemCtx.setLenient(true);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2785abfb65e1bbccf144255eb359d6fce9c6f2f6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/354bf00f6fba9185620dfdf4cc1e25c778d74249",
        "message": "Fix a couple of nasty NPEs (note: a source validity object _can_ be null).\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27103 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_111",
        "file": [
            {
                "sha": "db55b436ef68a1aa6bdda81f68509bb8fc27758a",
                "filename": "src/java/org/apache/cocoon/generation/JXTemplateGenerator.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/2785abfb65e1bbccf144255eb359d6fce9c6f2f6/src/java/org/apache/cocoon/generation/JXTemplateGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/2785abfb65e1bbccf144255eb359d6fce9c6f2f6/src/java/org/apache/cocoon/generation/JXTemplateGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/generation/JXTemplateGenerator.java?ref=2785abfb65e1bbccf144255eb359d6fce9c6f2f6",
                "patch": "@@ -354,7 +354,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * &lt;/table&gt;\n  * </pre></p>\n  * \n- *  @version CVS $Id: JXTemplateGenerator.java,v 1.30 2004/01/11 02:53:08 antonio Exp $\n+ *  @version CVS $Id: JXTemplateGenerator.java,v 1.31 2004/01/27 11:39:53 gianugo Exp $\n  */\n public class JXTemplateGenerator extends ServiceableGenerator {\n \n@@ -1191,8 +1191,8 @@ public String locationString() {\n             int ch;\n             boolean inExpr = false;\n             boolean xpath = false;\n-//            int line = location.getLineNumber();\n-            int column = location.getColumnNumber();\n+//            int line = this.location.getLineNumber();\n+            int column = this.location.getColumnNumber();\n             try {\n                 top: while ((ch = in.read()) != -1) {\n                     column++;\n@@ -2776,8 +2776,10 @@ public void setup(SourceResolver resolver, Map objectModel,\n             synchronized (cache) {\n                 StartDocument startEvent = (StartDocument)cache.get(uri);\n                 if (startEvent != null) {\n-                    int valid = startEvent.compileTime.isValid();\n-                    if ( valid == SourceValidity.UNKNOWN ) {\n+                    int valid = SourceValidity.UNKNOWN;\n+                    if (startEvent.compileTime != null) \n+                        valid = startEvent.compileTime.isValid();                    \n+                    if ( valid == SourceValidity.UNKNOWN && startEvent.compileTime != null ) {\n                         SourceValidity validity = inputSource.getValidity();\n                         valid = startEvent.compileTime.isValid(validity);\n                     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/475ff95c6da5e813083a1fb607b8430ed23ae0ce",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/1dcb72054cfe516e8b577f3320d0ffc1f24a2323",
        "message": "FormDefinition here is hiding the protected one from superclass.\r\nWhich resulted in a NPE on definition.getId() here.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26863 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_112",
        "file": [
            {
                "sha": "d70f6e36aa4e2413d456f3db9d8cce4cd464708b",
                "filename": "src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Form.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/475ff95c6da5e813083a1fb607b8430ed23ae0ce/src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Form.java",
                "raw_url": "https://github.com/apache/cocoon/raw/475ff95c6da5e813083a1fb607b8430ed23ae0ce/src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Form.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/java/org/apache/cocoon/woody/formmodel/Form.java?ref=475ff95c6da5e813083a1fb607b8430ed23ae0ce",
                "patch": "@@ -73,14 +73,14 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * \n  * @author Bruno Dumon\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: Form.java,v 1.13 2003/12/29 17:52:12 stefano Exp $\n+ * @version CVS $Id: Form.java,v 1.14 2003/12/30 14:48:37 mpo Exp $\n  */\n public class Form extends AbstractContainerWidget {\n     \n     private Boolean endProcessing;\n     private Locale locale = Locale.getDefault();\n     private CursorableLinkedList events;\n-    private FormDefinition definition;\n+//    private FormDefinition definition;\n     private FormHandler formHandler;\n     private Widget submitWidget;\n     private ProcessingPhase phase = ProcessingPhase.LOAD_MODEL;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2aa707df4ee603e6d740d6ea986f107921c19c64",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/6656a331929e695812c5e4298e1645175c11c18d",
        "message": "Fixing NPE error in xsp-session:getxml\nSubmitted by: Laurent Trillaud\nReviewed by: Antonio Gallardo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26759 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_113",
        "file": [
            {
                "sha": "d915135b0f8b7c11107926933e5ef7adfd6cd889",
                "filename": "src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/java/session-fw.xsl",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/2aa707df4ee603e6d740d6ea986f107921c19c64/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/java/session-fw.xsl",
                "raw_url": "https://github.com/apache/cocoon/raw/2aa707df4ee603e6d740d6ea986f107921c19c64/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/java/session-fw.xsl",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/session-fw/java/org/apache/cocoon/components/language/markup/xsp/java/session-fw.xsl?ref=2aa707df4ee603e6d740d6ea986f107921c19c64",
                "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\"?>\n \n-<!-- $Id: session-fw.xsl,v 1.2 2003/10/11 00:02:55 antonio Exp $-->\n+<!-- $Id: session-fw.xsl,v 1.3 2003/12/17 04:15:14 antonio Exp $-->\n <!--\n \n  ============================================================================\n@@ -55,7 +55,7 @@\n  * XSP Session-fw logicsheet for the Java language\n  *\n  * @author <a href=\"mailto:antonio@apache.org>Antonio Gallardo</a>\n- * @version CVS $Revision: 1.2 $ $Date: 2003/10/11 00:02:55 $\n+ * @version CVS $Revision: 1.3 $ $Date: 2003/12/17 04:15:14 $\n -->\n \n <xsl:stylesheet version=\"1.0\"\n@@ -73,8 +73,12 @@\n         <xsp:include>org.apache.avalon.framework.component.ComponentManager</xsp:include>\n         <xsp:include>org.apache.cocoon.components.language.markup.xsp.XSPSessionFwHelper</xsp:include>\n         <xsp:include>org.w3c.dom.DocumentFragment</xsp:include>\n+        <xsp:include>org.w3c.dom.Node</xsp:include>\n       </xsp:structure>\n \n+      <xsp:logic>\n+        Node node = null;\n+      </xsp:logic>\n       <xsl:variable name=\"create\">\n         <xsl:choose>\n           <xsl:when test=\"@create-session='yes' or @create-session='true'\">true</xsl:when>\n@@ -104,9 +108,12 @@\n     </xsl:variable>\n     <xsl:choose>\n         <xsl:when test=\"$as='string'\">\n-            <xsp:expr>((DocumentFragment)(XSPSessionFwHelper.getXML(this.manager,\n+        \t<xsp:logic>\n+        \tnode = ((DocumentFragment)(XSPSessionFwHelper.getXML(this.manager,\n                 String.valueOf(<xsl:copy-of select=\"$context\"/>),\n-                String.valueOf(<xsl:copy-of select=\"$path\"/>)))).getFirstChild().getNodeValue()</xsp:expr>\n+                String.valueOf(<xsl:copy-of select=\"$path\"/>)))).getFirstChild();\n+        \t</xsp:logic>\n+            <xsp:expr>node != null ? node.getNodeValue() : \"\"</xsp:expr>\n         </xsl:when>\n         <xsl:when test=\"$as='xml'\">\n             <xsp-session-fw:xml>"
            },
            {
                "sha": "5251eadd603ffdb323c5d1900ce94d5d282b3ca1",
                "filename": "status.xml",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/2aa707df4ee603e6d740d6ea986f107921c19c64/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/2aa707df4ee603e6d740d6ea986f107921c19c64/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=2aa707df4ee603e6d740d6ea986f107921c19c64",
                "patch": "@@ -40,7 +40,7 @@\n <!ENTITY uuml             \"&#x000FC;\">\n ]>\n \n-<!-- CVS $Id: status.xml,v 1.212 2003/12/12 15:15:19 vgritsenko Exp $:-->\n+<!-- CVS $Id: status.xml,v 1.213 2003/12/17 04:15:14 antonio Exp $:-->\n \n <status>\n  <developers>\n@@ -189,6 +189,10 @@\n   <changes>\n \n  <release version=\"@version@\" date=\"@date@\">\n+    <action dev=\"AG\" type=\"fix\" due-to-email=\"ltrillaud@jouve.fr\" due-to=\"Laurent Trillaud\">\n+     Fix NPE error when pointed tag is empty in xsp-session-fw:getxml. Applying\n+     patch from ltrillaud@jouve.fr (ltrillaud@jouve.fr).\n+   </action>\n    <action dev=\"VG\" type=\"update\">\n      ResourceExistsSelector now works the same way as ResourceExistsAction does.\n      It can now detect existence of any Cocoon resource, not only files in context."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4aae37702b0d340219d1c34755f1ecf0ae991677",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/28d025815fdaada3399d2ec017e6bd57fa967bd1",
        "message": "New versions of:\n- store: separate ROLE and TRANSIENT_ROLE, make them instrumentable\n- component: fix an NPE when instrumentation enabled\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26704 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_114",
        "file": [
            {
                "sha": "2047736d66c4e1bf6627a8ef48928d842f414820",
                "filename": "lib/core/excalibur-component-20031211.jar",
                "status": "added",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/cocoon/blob/4aae37702b0d340219d1c34755f1ecf0ae991677/lib/core/excalibur-component-20031211.jar",
                "raw_url": "https://github.com/apache/cocoon/raw/4aae37702b0d340219d1c34755f1ecf0ae991677/lib/core/excalibur-component-20031211.jar",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/core/excalibur-component-20031211.jar?ref=4aae37702b0d340219d1c34755f1ecf0ae991677"
            },
            {
                "sha": "c26bb4cf31b6862f1acff4ca4120ffa576b0af87",
                "filename": "lib/core/excalibur-store-20031211.jar",
                "status": "added",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/cocoon/blob/4aae37702b0d340219d1c34755f1ecf0ae991677/lib/core/excalibur-store-20031211.jar",
                "raw_url": "https://github.com/apache/cocoon/raw/4aae37702b0d340219d1c34755f1ecf0ae991677/lib/core/excalibur-store-20031211.jar",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/core/excalibur-store-20031211.jar?ref=4aae37702b0d340219d1c34755f1ecf0ae991677"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/57e7c9db7a2117147158ab540333a24b191f60a6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/154894bfb9a4aa9dc1bb2c69d849070a1df8284a",
        "message": "New versions of:\n- store: separate ROLE and TRANSIENT_ROLE, make them instrumentable\n- component: fix an NPE when instrumentation enabled\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26700 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_115",
        "file": [
            {
                "sha": "6fbcdc23929d27c254ba483d2b1c94f2dbf511dc",
                "filename": "lib/core/excalibur-component-20031126.jar",
                "status": "removed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/cocoon/blob/154894bfb9a4aa9dc1bb2c69d849070a1df8284a/lib/core/excalibur-component-20031126.jar",
                "raw_url": "https://github.com/apache/cocoon/raw/154894bfb9a4aa9dc1bb2c69d849070a1df8284a/lib/core/excalibur-component-20031126.jar",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/core/excalibur-component-20031126.jar?ref=154894bfb9a4aa9dc1bb2c69d849070a1df8284a"
            },
            {
                "sha": "58a873b38d1f72e58a2f37244b43f0122418ec01",
                "filename": "lib/core/excalibur-store-1.0-dev.jar",
                "status": "removed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/cocoon/blob/154894bfb9a4aa9dc1bb2c69d849070a1df8284a/lib/core/excalibur-store-1.0-dev.jar",
                "raw_url": "https://github.com/apache/cocoon/raw/154894bfb9a4aa9dc1bb2c69d849070a1df8284a/lib/core/excalibur-store-1.0-dev.jar",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/core/excalibur-store-1.0-dev.jar?ref=154894bfb9a4aa9dc1bb2c69d849070a1df8284a"
            },
            {
                "sha": "48fa94bbb5167795c141884e3942f9bcb2ea0e06",
                "filename": "lib/jars.xml",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/57e7c9db7a2117147158ab540333a24b191f60a6/lib/jars.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/57e7c9db7a2117147158ab540333a24b191f60a6/lib/jars.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/lib/jars.xml?ref=57e7c9db7a2117147158ab540333a24b191f60a6",
                "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\"?>\n \n <!--+\n-    | CVS $Id: jars.xml,v 1.136 2003/12/10 14:44:39 vgritsenko Exp $\n+    | CVS $Id: jars.xml,v 1.137 2003/12/11 18:19:05 sylvain Exp $\n     |\n     | Add an entry for each jar file used by Cocoon, following the other entries.\n     | Please ensure that you use a version number or datestamp in the jar filename.\n@@ -49,7 +49,7 @@\n       support high level server development.\n     </description>\n     <used-by>Cocoon</used-by>\n-    <lib>core/excalibur-component-20031126.jar</lib>\n+    <lib>core/excalibur-component-20031211.jar</lib>\n     <homepage>http://avalon.apache.org/excalibur/</homepage>\n   </file>\n \n@@ -193,7 +193,7 @@\n       support high level server development.\n     </description>\n     <used-by>Cocoon</used-by>\n-    <lib>core/excalibur-store-1.0-dev.jar</lib>\n+    <lib>core/excalibur-store-20031211.jar</lib>\n     <homepage>http://avalon.apache.org/excalibur/</homepage>\n   </file>\n \n@@ -572,8 +572,8 @@\n   </file>\n \n   <file>\n-    <title>XML Xindice</title>\n-    <description>Native XML Database by Apache XML project</description>\n+    <title>XML XIndice</title>\n+    <description>XML database</description>\n     <used-by>xmldb block</used-by>\n     <lib>xmldb/lib/xindice-1.1b1.jar</lib>\n     <homepage>http://xml.apache.org/xindice/</homepage>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/e68a5e90e75118b42ff8f2b58146f9cd57ffc52d",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/5d717a209e4e27f236784a21884e247d44112925",
        "message": "Avoid a NPE when there's an older Xerces on the classpath.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26149 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_116",
        "file": [
            {
                "sha": "6e5f0e147bb3411839c86766ff4f0d4bcca67581",
                "filename": "src/blocks/woody/java/org/apache/cocoon/woody/util/DomHelper.java",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/e68a5e90e75118b42ff8f2b58146f9cd57ffc52d/src/blocks/woody/java/org/apache/cocoon/woody/util/DomHelper.java",
                "raw_url": "https://github.com/apache/cocoon/raw/e68a5e90e75118b42ff8f2b58146f9cd57ffc52d/src/blocks/woody/java/org/apache/cocoon/woody/util/DomHelper.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/java/org/apache/cocoon/woody/util/DomHelper.java?ref=e68a5e90e75118b42ff8f2b58146f9cd57ffc52d",
                "patch": "@@ -294,6 +294,12 @@ public void startElement(QName qName, XMLAttributes xmlAttributes, Augmentations\n         }\n \n         private final void setLocation() {\n+            // Older versions of Xerces had a different signature for the startDocument method. If such a\n+            // version is used, the startDocument method above will not be called and locator will hence be null.\n+            // Tell the users this so that they don't get a stupid NPE.\n+            if (this.locator == null)\n+                throw new RuntimeException(\"Error: locator is null. Check that you have the correct version of Xerces (such as the one that comes with Cocoon) in your endorsed library path.\");\n+\n             NodeImpl node = null;\n             try {\n                 node = (NodeImpl) this.getProperty(\"http://apache.org/xml/properties/dom/current-element-node\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/9146df3619d6b678c8cdf345d375ac2277a57667",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/63cdb3c8a04cd7e056339a5544d573547955766e",
        "message": "Moving loading of applications out of the Authenticator.\r\nThis should fix the NPE reported by Laurent Trillaud.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26083 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_117",
        "file": [
            {
                "sha": "01c487f3885a2729199254649119b6b056d80c53",
                "filename": "src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java",
                "status": "modified",
                "additions": 11,
                "deletions": 1,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/9146df3619d6b678c8cdf345d375ac2277a57667/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/9146df3619d6b678c8cdf345d375ac2277a57667/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java?ref=9146df3619d6b678c8cdf345d375ac2277a57667",
                "patch": "@@ -78,6 +78,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.cocoon.util.ClassUtils;\n import org.apache.cocoon.webapps.authentication.AuthenticationConstants;\n import org.apache.cocoon.webapps.authentication.AuthenticationManager;\n+import org.apache.cocoon.webapps.authentication.configuration.ApplicationConfiguration;\n import org.apache.cocoon.webapps.authentication.configuration.HandlerConfiguration;\n import org.apache.cocoon.webapps.authentication.user.RequestState;\n import org.apache.cocoon.webapps.authentication.user.UserHandler;\n@@ -94,7 +95,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * This is the basis authentication component.\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: DefaultAuthenticationManager.java,v 1.17 2003/09/24 21:22:33 cziegeler Exp $\n+ * @version CVS $Id: DefaultAuthenticationManager.java,v 1.18 2003/10/23 11:29:36 cziegeler Exp $\n */\n public class DefaultAuthenticationManager\n extends AbstractLogEnabled\n@@ -252,6 +253,15 @@ public UserHandler login(String handlerName,\n             this.setState( state );\n             state.initialize( this.resolver );\n             \n+            // And now load applications\n+            Iterator applications = handler.getHandlerConfiguration().getApplications().values().iterator();\n+\n+            while ( applications.hasNext() ) {\n+                ApplicationConfiguration appHandler = (ApplicationConfiguration)applications.next();\n+                if ( !appHandler.getLoadOnDemand() ) {\n+                    handler.getContext().loadApplicationXML( appHandler, this.resolver );\n+                }\n+            }\n         }\n         \n  \t\treturn handler;"
            },
            {
                "sha": "a6d7791bff59c5e8a6e55067ac925426c9fbb0c0",
                "filename": "src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java",
                "status": "modified",
                "additions": 1,
                "deletions": 13,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/9146df3619d6b678c8cdf345d375ac2277a57667/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/9146df3619d6b678c8cdf345d375ac2277a57667/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/authentication-fw/java/org/apache/cocoon/webapps/authentication/components/PipelineAuthenticator.java?ref=9146df3619d6b678c8cdf345d375ac2277a57667",
                "patch": "@@ -51,7 +51,6 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n package org.apache.cocoon.webapps.authentication.components;\n \n import java.io.IOException;\n-import java.util.Iterator;\n \n import org.apache.avalon.framework.activity.Disposable;\n import org.apache.avalon.framework.context.Context;\n@@ -63,7 +62,6 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.avalon.framework.service.Serviceable;\n import org.apache.avalon.framework.thread.ThreadSafe;\n import org.apache.cocoon.ProcessingException;\n-import org.apache.cocoon.webapps.authentication.configuration.ApplicationConfiguration;\n import org.apache.cocoon.webapps.authentication.configuration.HandlerConfiguration;\n import org.apache.cocoon.webapps.authentication.context.AuthenticationContext;\n import org.apache.cocoon.webapps.authentication.user.UserHandler;\n@@ -90,7 +88,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * This is a helper class that could be made pluggable if required.\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: PipelineAuthenticator.java,v 1.4 2003/09/24 21:22:33 cziegeler Exp $\n+ * @version CVS $Id: PipelineAuthenticator.java,v 1.5 2003/10/23 11:29:36 cziegeler Exp $\n */\n public class PipelineAuthenticator \n     extends AbstractLogEnabled\n@@ -256,16 +254,6 @@ public UserHandler authenticate( HandlerConfiguration configuration,\n                     // store the authentication data in the context\n                     authContext.init(doc);\n \n-                    // And now load applications\n-                    Iterator applications = configuration.getApplications().values().iterator();\n-\n-                    while ( applications.hasNext() ) {\n-                        ApplicationConfiguration appHandler = (ApplicationConfiguration)applications.next();\n-                        if ( !appHandler.getLoadOnDemand() ) {\n-                            handler.getContext().loadApplicationXML( appHandler, this.resolver );\n-                        }\n-                    }\n-\n                 } // end sync\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/9fb9e72bf2dc9db0bc9f7a48392425fbe43f1f0c",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b66d19566a59f0cb4bace4695061b6719c2d37f9",
        "message": "Fixed a NPE (getLogger() would always return null since enableLogging() is never called)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26007 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_118",
        "file": [
            {
                "sha": "2c4b49fe2acac13cbd035e3d61796a59fa78d3f0",
                "filename": "src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/9fb9e72bf2dc9db0bc9f7a48392425fbe43f1f0c/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/9fb9e72bf2dc9db0bc9f7a48392425fbe43f1f0c/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java?ref=9fb9e72bf2dc9db0bc9f7a48392425fbe43f1f0c",
                "patch": "@@ -86,7 +86,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:pier@apache.org\">Pierpaolo Fumagalli</a>\n  *         (Apache Software Foundation)\n- * @version CVS $Id: DOMStreamer.java,v 1.11 2003/08/01 17:48:44 vgritsenko Exp $\n+ * @version CVS $Id: DOMStreamer.java,v 1.12 2003/10/15 16:10:29 bruno Exp $\n  */\n public class DOMStreamer implements XMLProducer {\n \n@@ -725,7 +725,6 @@ public void stream(Node node)\n                 try {\n                     this.transformer = factory.newTransformer();\n                 } catch (TransformerConfigurationException e) {\n-                    getLogger().error(\"DOMStreamer\", e);\n                     throw new SAXException(e);\n                 }\n             }\n@@ -746,7 +745,6 @@ public void stream(Node node)\n             try {\n                 transformer.transform(source, result);\n             } catch (TransformerException e) {\n-                getLogger().error(\"DOMStreamer\", e);\n                 throw new SAXException(e);\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/9e4c9cded051076cacdbfa2a5cc21dd82db074dc",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/ecd5cddcc304021ece109eb9bd1ec2a04ebf93b5",
        "message": "Declare MIME type for favicon, otherwise we get Cocoon's famous NPE error\nreporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24745 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_119",
        "file": [
            {
                "sha": "5074075cb737ff8d14e02a46badbf95335b0b63d",
                "filename": "src/webapp/sitemap.xmap",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/9e4c9cded051076cacdbfa2a5cc21dd82db074dc/src/webapp/sitemap.xmap",
                "raw_url": "https://github.com/apache/cocoon/raw/9e4c9cded051076cacdbfa2a5cc21dd82db074dc/src/webapp/sitemap.xmap",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/sitemap.xmap?ref=9e4c9cded051076cacdbfa2a5cc21dd82db074dc",
                "patch": "@@ -12,7 +12,7 @@\n     | the accompanying documentation. The sitemaps which come with each\n     | sample and each block will help to explain.\n     |\n-    | CVS $Id: sitemap.xmap,v 1.21 2003/06/10 23:54:17 joerg Exp $\n+    | CVS $Id: sitemap.xmap,v 1.22 2003/06/21 14:22:08 jefft Exp $\n     +-->\n \n <map:sitemap xmlns:map=\"http://apache.org/cocoon/sitemap/1.0\">\n@@ -482,7 +482,7 @@\n     \n     <!-- favicon -->\n     <map:match pattern=\"**favicon.ico\">\n-      <map:read src=\"resources/icons/cocoon.ico\"/>\n+      <map:read mime-type=\"image/x-icon\" src=\"resources/icons/cocoon.ico\"/>\n     </map:match>\n \n     <!--+"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/566436c00c80adfbb958475f65b1e847c30d5281",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/794bc73dcf2a61d116185d55c6b25a69bcb7bb8a",
        "message": "Avoid NPE in case of wrong fraction digits format.Thanks to Michael enke\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24372 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_120",
        "file": [
            {
                "sha": "639a04143b634859a0cb9d33ddf6d9c6f49dfb69",
                "filename": "src/java/org/apache/cocoon/transformation/I18nTransformer.java",
                "status": "modified",
                "additions": 12,
                "deletions": 11,
                "changes": 23,
                "blob_url": "https://github.com/apache/cocoon/blob/566436c00c80adfbb958475f65b1e847c30d5281/src/java/org/apache/cocoon/transformation/I18nTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/566436c00c80adfbb958475f65b1e847c30d5281/src/java/org/apache/cocoon/transformation/I18nTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/transformation/I18nTransformer.java?ref=566436c00c80adfbb958475f65b1e847c30d5281",
                "patch": "@@ -234,7 +234,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:mattam@netcourrier.com\">Matthieu Sozeau</a>\n  * @author <a href=\"mailto:crafterm@apache.org\">Marcus Crafter</a>\n  * @author <a href=\"mailto:Michael.Enke@wincor-nixdorf.com\">Michael Enke</a>\n- * @version CVS $Id: I18nTransformer.java,v 1.4 2003/03/19 15:42:14 cziegeler Exp $\n+ * @version CVS $Id: I18nTransformer.java,v 1.5 2003/05/13 07:04:16 kpiroumian Exp $\n  */\n public class I18nTransformer extends AbstractTransformer\n         implements CacheableProcessingComponent,\n@@ -635,7 +635,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n     /**\n      * This configuration parameter specifies the default locale to be used.\n      */\n-    public static final String I18N_LOCALE\t\t= \"locale\";\n+    public static final String I18N_LOCALE      = \"locale\";\n \n \n     /**\n@@ -1851,15 +1851,16 @@ private String formatNumber(Map params) throws SAXException {\n         if (value == null) return \"\";\n         // type\n         String type = (String)params.get(I18N_TYPE_ATTRIBUTE);\n-        // fraction-digits\n-        int fractionDigits = -1;\n-        try {\n-            fractionDigits = Integer.parseInt((String)\n-                    params.get(I18N_FRACTION_DIGITS_ATTRIBUTE));\n-        }\n-        catch(NumberFormatException nfe) {\n-            getLogger().warn(\"Error in number format\", nfe);\n-        }\n+\n+         // fraction-digits\n+         int fractionDigits = -1;\n+         try {\n+             String fd = (String)params.get(I18N_FRACTION_DIGITS_ATTRIBUTE);\n+             if (fd != null) \n+                 fractionDigits = Integer.parseInt(fd);\n+         } catch (NumberFormatException nfe) {\n+             getLogger().warn(\"Error in number format with fraction-digits\", nfe);\n+         }\n \n         // parsed number\n         Number numberValue = null;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4ad6df712123b8336f335665733ba2a0ca9d3ad6",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/acd7e5f04ec9ca41a69ac6de1a84b1d18cd193c4",
        "message": "Fixing NPE in sitemap reloading and\r\nremoving the static rootManager from CocoonComponentManager\r\nthis addresses patch 19282\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24144 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_121",
        "file": [
            {
                "sha": "f360aa6efea22fb862292a5a7787d6e87b6ff4c7",
                "filename": "src/java/org/apache/cocoon/components/CocoonComponentManager.java",
                "status": "modified",
                "additions": 3,
                "deletions": 10,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/4ad6df712123b8336f335665733ba2a0ca9d3ad6/src/java/org/apache/cocoon/components/CocoonComponentManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4ad6df712123b8336f335665733ba2a0ca9d3ad6/src/java/org/apache/cocoon/components/CocoonComponentManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/CocoonComponentManager.java?ref=4ad6df712123b8336f335665733ba2a0ca9d3ad6",
                "patch": "@@ -83,7 +83,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * via the compose() method is an instance of CocoonComponentManager.\n  *\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: CocoonComponentManager.java,v 1.9 2003/04/26 13:35:39 cziegeler Exp $\n+ * @version CVS $Id: CocoonComponentManager.java,v 1.10 2003/04/26 14:06:50 cziegeler Exp $\n  */\n public final class CocoonComponentManager\n extends ExcaliburComponentManager\n@@ -104,34 +104,27 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n     /** The {@link RoleManager} */\n     private RoleManager roleManager;\n \n-    /** The root component manager */\n-    private static ComponentManager rootManager;\n-    \n     /** The {@link SitemapConfigurationHolder}s */\n     private Map sitemapConfigurationHolders = new HashMap(15);\n     \n     /** Create the ComponentManager */\n     public CocoonComponentManager() {\n         super( null, Thread.currentThread().getContextClassLoader() );\n-        if ( null == rootManager ) rootManager = this;\n     }\n \n     /** Create the ComponentManager with a Classloader */\n     public CocoonComponentManager(final ClassLoader loader) {\n         super( null, loader );\n-        rootManager = this;\n     }\n \n     /** Create the ComponentManager with a Classloader and parent ComponentManager */\n     public CocoonComponentManager(final ComponentManager manager, final ClassLoader loader) {\n         super( manager, loader );\n-        if (rootManager != manager) rootManager = this;\n     }\n \n     /** Create the ComponentManager with a parent ComponentManager */\n     public CocoonComponentManager(final ComponentManager manager) {\n         super( manager);\n-        if (rootManager != manager) rootManager = this;\n     }\n \n     /**\n@@ -246,8 +239,8 @@ static public ComponentManager getSitemapComponentManager() {\n \t\t\treturn (ComponentManager)o[2];\n \t\t}\n \n-        // if we don't have an environment yet, just return the root manager\n-        return rootManager;\n+        // if we don't have an environment yet, just return null\n+        return null;\n     }\n     \n     /**"
            },
            {
                "sha": "2924fd9b51b061ecec86f573ad6b8be4368f97a4",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/4ad6df712123b8336f335665733ba2a0ca9d3ad6/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4ad6df712123b8336f335665733ba2a0ca9d3ad6/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java?ref=4ad6df712123b8336f335665733ba2a0ca9d3ad6",
                "patch": "@@ -89,7 +89,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * Interpreted tree-traversal implementation of a pipeline assembly language.\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: TreeProcessor.java,v 1.3 2003/03/20 11:45:58 cziegeler Exp $\n+ * @version CVS $Id: TreeProcessor.java,v 1.4 2003/04/26 14:06:50 cziegeler Exp $\n  */\n \n public class TreeProcessor\n@@ -258,7 +258,7 @@ public void configure(Configuration config)\n             org.apache.excalibur.source.Source source = resolver.resolveURI( xconfURL );\n             try {\n                 SAXConfigurationHandler handler = new SAXConfigurationHandler();\n-                SourceUtil.toSAX(source, handler);\n+                SourceUtil.toSAX( this.manager, source, null, handler);\n                 builtin = handler.getConfiguration();\n             } finally {\n                 resolver.release( source );"
            },
            {
                "sha": "d482c189c97db8bdf3781ad5221a62615e26e537",
                "filename": "src/java/org/apache/cocoon/environment/AbstractEnvironment.java",
                "status": "modified",
                "additions": 30,
                "deletions": 9,
                "changes": 39,
                "blob_url": "https://github.com/apache/cocoon/blob/4ad6df712123b8336f335665733ba2a0ca9d3ad6/src/java/org/apache/cocoon/environment/AbstractEnvironment.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4ad6df712123b8336f335665733ba2a0ca9d3ad6/src/java/org/apache/cocoon/environment/AbstractEnvironment.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/environment/AbstractEnvironment.java?ref=4ad6df712123b8336f335665733ba2a0ca9d3ad6",
                "patch": "@@ -82,7 +82,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:Giacomo.Pati@pwr.ch\">Giacomo Pati</a>\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n- * @version CVS $Id: AbstractEnvironment.java,v 1.6 2003/03/20 13:11:28 cziegeler Exp $\n+ * @version CVS $Id: AbstractEnvironment.java,v 1.7 2003/04/26 14:06:50 cziegeler Exp $\n  */\n public abstract class AbstractEnvironment extends AbstractLogEnabled implements Environment {\n \n@@ -128,6 +128,9 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n     /** The AvalonToCocoonSourceWrapper (this is for the deprecated support) */\n     static protected Constructor avalonToCocoonSourceWrapper;\n \n+    /** Do we have our components ? */\n+    protected boolean initializedComponents;\n+    \n     /**\n      * Constructs the abstract environment\n      */\n@@ -344,6 +347,9 @@ public Map getObjectModel() {\n      */\n     public Source resolve(String systemId)\n     throws ProcessingException, SAXException, IOException {\n+        if ( !this.initializedComponents) {\n+            this.initComponents();\n+        }\n         if (getLogger().isDebugEnabled()) {\n             this.getLogger().debug(\"Resolving '\"+systemId+\"' in context '\" + this.context + \"'\");\n         }\n@@ -487,6 +493,9 @@ public void commitResponse()\n                                                          String baseURI,\n                                                          final Map    parameters)\n     throws MalformedURLException, IOException, SourceException {\n+        if ( !this.initializedComponents) {\n+            this.initComponents();\n+        }\n         return this.sourceResolver.resolveURI(location, baseURI, parameters);\n     }\n \n@@ -516,6 +525,9 @@ public void toSAX( org.apache.excalibur.source.Source source,\n                 String         mimeTypeHint,\n                 ContentHandler handler )\n     throws SAXException, IOException, ProcessingException {\n+        if ( !this.initializedComponents) {\n+            this.initComponents();\n+        }\n         String mimeType = source.getMimeType();\n         if (null == mimeType) {\n             mimeType = mimeTypeHint;\n@@ -551,18 +563,26 @@ public void toSAX( org.apache.excalibur.source.Source source,\n         }\n     }\n \n+    /**\n+     * Initialize the components for the environment\n+     * This gets the source resolver and the xmlizer component\n+     */\n+    protected void initComponents() {\n+        try {\n+            this.manager = CocoonComponentManager.getSitemapComponentManager();\n+            this.xmlizer = (XMLizer)this.manager.lookup(XMLizer.ROLE);\n+            this.sourceResolver = (org.apache.excalibur.source.SourceResolver)this.manager.lookup(org.apache.excalibur.source.SourceResolver.ROLE);\n+        } catch (ComponentException ce) {\n+            // this should never happen!\n+            throw new CascadingRuntimeException(\"Unable to lookup component.\", ce);\n+        }\n+    }\n+    \n \t/**\n \t * Notify that the processing starts.\n \t */\n \tpublic void startingProcessing() {\n-\t\ttry {\n-\t\t\tthis.manager = CocoonComponentManager.getSitemapComponentManager();\n-\t\t\tthis.xmlizer = (XMLizer)this.manager.lookup(XMLizer.ROLE);\n-\t\t\tthis.sourceResolver = (org.apache.excalibur.source.SourceResolver)this.manager.lookup(org.apache.excalibur.source.SourceResolver.ROLE);\n-\t\t} catch (ComponentException ce) {\n-\t\t\t// this should never happen!\n-\t\t\tthrow new CascadingRuntimeException(\"Unable to lookup component.\", ce);\n-\t\t}\n+        // do nothing here\n \t}\n \n \t/**\n@@ -577,6 +597,7 @@ public void finishingProcessing() {\n \t\t\tthis.xmlizer = null;\n \t\t\tthis.sourceResolver = null;\n \t\t}\n+        this.initializedComponents = false;\n \t}\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/b340f3dace781c1af9356c3228e85fd037aaa815",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/6e5493fa4c5380cff985b03e520ca6b8d037ef9d",
        "message": "Fixing the original cause of the NPE temporarely fixed by Sylvain in version 1.2 of this file.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@23575 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_122",
        "file": [
            {
                "sha": "380791ca5954ec4805dfebbaa6d82d430a217df4",
                "filename": "src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "status": "modified",
                "additions": 5,
                "deletions": 7,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/b340f3dace781c1af9356c3228e85fd037aaa815/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/b340f3dace781c1af9356c3228e85fd037aaa815/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java?ref=b340f3dace781c1af9356c3228e85fd037aaa815",
                "patch": "@@ -86,7 +86,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:pier@apache.org\">Pierpaolo Fumagalli</a>\n  *         (Apache Software Foundation)\n- * @version CVS $Id: DOMStreamer.java,v 1.2 2003/03/09 20:38:30 sylvain Exp $\n+ * @version CVS $Id: DOMStreamer.java,v 1.3 2003/03/10 11:12:46 bruno Exp $\n  */\n public class DOMStreamer implements XMLProducer {\n \n@@ -163,7 +163,7 @@ public void setLexicalHandler(LexicalHandler handler) {\n \n         defaultDOMStreamer.setLexicalHandler(handler);\n         namespaceNormalizingDOMStreamer.setLexicalHandler(handler);\n-    } \n+    }\n \n     /**\n      * Start the production of SAX events.\n@@ -284,7 +284,7 @@ protected void stream(Node pos) throws SAXException {\n \n                 pos = nextNode;\n             }\n-            \n+\n             if (isDoc) {\n             \tcontentHandler.endDocument();\n             }\n@@ -404,7 +404,8 @@ protected void startNode(Node node) throws SAXException {\n                                     else {\n                                         if (attr.getPrefix() != null && declaredUri == null) {\n                                             // prefix is not null and is not yet declared: declare it\n-                                            currentElementInfo.put(prefix, attr.getNamespaceURI());\n+                                            attrPrefix = attr.getPrefix();\n+                                            currentElementInfo.put(attrPrefix, attr.getNamespaceURI());\n                                         } else {\n                                             // attribute has no prefix (which is not allowed for namespaced attributes) or\n                                             // the prefix is already bound to something else: generate a new prefix\n@@ -545,9 +546,6 @@ public ElementInfo(NamespaceNormalizingDOMStreamer.ElementInfo parent) {\n              * an existing one.\n              */\n             public void put(String prefix, String namespaceURI) {\n-            \t// FIXME (SW): it appears that prefix can be null (reported by Michael Wechner)\n-            \tif (prefix == null) return;\n-            \t\n                 if (namespaceDeclarations == null)\n                     namespaceDeclarations = new HashMap();\n                 namespaceDeclarations.put(prefix, namespaceURI);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/a5fc0053c4ca217d9d94ebe93ac4fa30d852a745",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/4d8d1cb59bbd733cd2f7ef1f7f570707b5b3b3d6",
        "message": "NPE in ResourceReader when InputSource returns null on getURI (COCOON-1935). Due to Alexander Klimetschek. Also sat the system id to something better than null (the block uri). The value still isn't globaly valid (or necessarily unique).\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@465076 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_123",
        "file": [
            {
                "sha": "795c0d72241a25b62b1bdfd10be06145c3746272",
                "filename": "core/cocoon-blocks-fw/cocoon-blocks-fw-impl/src/main/java/org/apache/cocoon/blocks/components/BlockSource.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/a5fc0053c4ca217d9d94ebe93ac4fa30d852a745/core/cocoon-blocks-fw/cocoon-blocks-fw-impl/src/main/java/org/apache/cocoon/blocks/components/BlockSource.java",
                "raw_url": "https://github.com/apache/cocoon/raw/a5fc0053c4ca217d9d94ebe93ac4fa30d852a745/core/cocoon-blocks-fw/cocoon-blocks-fw-impl/src/main/java/org/apache/cocoon/blocks/components/BlockSource.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-blocks-fw/cocoon-blocks-fw-impl/src/main/java/org/apache/cocoon/blocks/components/BlockSource.java?ref=a5fc0053c4ca217d9d94ebe93ac4fa30d852a745",
                "patch": "@@ -34,8 +34,12 @@\n public class BlockSource extends AbstractSource {\r\n     \r\n     private BlockConnection blockConnection;\r\n-\r\n+    \r\n     public BlockSource(String location, Logger logger) throws IOException {\r\n+        // the systemId (returned by getURI()) is by default null\r\n+        // using the block uri is a little bit questionable as it only is valid\r\n+        // whithin the current block, not globally\r\n+        setSystemId(location);\r\n         this.blockConnection = new BlockConnection(location, logger);\r\n         this.blockConnection.connect();\r\n     }\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/44dd3594f76f115ecedaabdf58b6774944332dec",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/ddb7439de305025ca760aa8820e43afe3a6e4c83",
        "message": "   <action dev=\"VG\" type=\"fix\" fixes-bug=\"COCOON-1247\">\n     Support multiple results in SQLTransformer.\n   </action>\n   <action dev=\"VG\" type=\"fix\" fixes-bug=\"COCOON-1552\">\n     Fix NPE in SQLTransformer in error handling code.\n   </action>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@413888 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_124",
        "file": [
            {
                "sha": "24c8a3ed2c9c805d3e3f2011ff648ba45adbd933",
                "filename": "blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/transformation/SQLTransformer.java",
                "status": "modified",
                "additions": 16,
                "deletions": 6,
                "changes": 22,
                "blob_url": "https://github.com/apache/cocoon/blob/44dd3594f76f115ecedaabdf58b6774944332dec/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/transformation/SQLTransformer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/44dd3594f76f115ecedaabdf58b6774944332dec/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/transformation/SQLTransformer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/transformation/SQLTransformer.java?ref=44dd3594f76f115ecedaabdf58b6774944332dec",
                "patch": "@@ -1118,6 +1118,8 @@ protected void executeQuery() throws SAXException {\n \n             this.outUri = this.params.getParameter(SQLTransformer.MAGIC_NS_URI_ELEMENT, SQLTransformer.this.namespaceURI);\n             this.outPrefix = this.params.getParameter(SQLTransformer.MAGIC_NS_PREFIX_ELEMENT, \"sql\");\n+            this.rowsetElement = this.params.getParameter(SQLTransformer.MAGIC_DOC_ELEMENT, \"rowset\");\n+            this.rowElement = this.params.getParameter(SQLTransformer.MAGIC_ROW_ELEMENT, \"row\");\n \n             this.showNrOfRows = parameters.getParameterAsBoolean(SQLTransformer.MAGIC_NR_OF_ROWS, false);\n             this.clobEncoding = parameters.getParameter(SQLTransformer.CLOB_ENCODING, \"\");\n@@ -1189,8 +1191,6 @@ protected void executeQuery() throws SAXException {\n          * Execute the query. Connection must be set already.\n          */\n         private void execute() throws SQLException {\n-            this.rowsetElement = params.getParameter(SQLTransformer.MAGIC_DOC_ELEMENT, \"rowset\");\n-            this.rowElement = params.getParameter(SQLTransformer.MAGIC_ROW_ELEMENT, \"row\");\n             setColumnCase(params.getParameter(SQLTransformer.MAGIC_COLUMN_CASE, \"lowercase\"));\n \n             // Construct query string\n@@ -1305,12 +1305,22 @@ protected boolean next() throws SQLException {\n                 return true;\n             }\n \n-            if (rs == null || !rs.next()) {\n-                // No more rows.\n-                return false;\n+            if (rs != null && rs.next()) {\n+                // Have next row\n+                return true;\n+            }\n+\n+            while (pst.getMoreResults()) {\n+                rs = pst.getResultSet();\n+                md = rs.getMetaData();\n+                if (rs.next()) {\n+                    // Have next row in next result set\n+                    return true;\n+                }\n             }\n \n-            return true;\n+            // Nothing left\n+            return false;\n         }\n \n         /**"
            },
            {
                "sha": "6f92d9a2355da14f4f7fb69a80ed3594477c9dc4",
                "filename": "blocks/cocoon-databases/status.xml",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/44dd3594f76f115ecedaabdf58b6774944332dec/blocks/cocoon-databases/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/44dd3594f76f115ecedaabdf58b6774944332dec/blocks/cocoon-databases/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-databases/status.xml?ref=44dd3594f76f115ecedaabdf58b6774944332dec",
                "patch": "@@ -65,6 +65,12 @@\n  <!-- The following list contains the changes since the latest 2.1.x version. -->\n  <changes>\n   <release version=\"@version@\" date=\"@date@\">\n+   <action dev=\"VG\" type=\"fix\" fixes-bug=\"COCOON-1247\">\n+     Support multiple results in SQLTransformer.\n+   </action>\n+   <action dev=\"VG\" type=\"fix\" fixes-bug=\"COCOON-1552\">\n+     Fix NPE in SQLTransformer in error handling code.\n+   </action>\n    <action dev=\"VG\" type=\"update\">\n     Support CLOBs in SQLTransformer when returned as stored procedure\n     parameters, or as columns in a cursor returned by stored procedure."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/121f734f2faf8d21f78e84dd49fc822480f7b943",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/885ef41fe1968b95f4666b84160512e0bd0d236c",
        "message": "<action dev=\"AG\" type=\"fix\" fixes-bug=\"COCOON-1785\" due-to=\"Eric Meyer\" due-to-email=\"eric.meyer@quoininc.com\">\n       Form block: I18nMessage - null parameter values causes NPE.\n    </action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@382120 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_125",
        "file": [
            {
                "sha": "e3e589e4ec376cedc60893aaddfe161e1061304b",
                "filename": "cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/util/I18nMessage.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/121f734f2faf8d21f78e84dd49fc822480f7b943/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/util/I18nMessage.java",
                "raw_url": "https://github.com/apache/cocoon/raw/121f734f2faf8d21f78e84dd49fc822480f7b943/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/util/I18nMessage.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/util/I18nMessage.java?ref=121f734f2faf8d21f78e84dd49fc822480f7b943",
                "patch": "@@ -123,18 +123,21 @@ public void toSAX(ContentHandler contentHandler) throws SAXException {\n         if (parameters != null) {\n             for (int i = 0; i < parameters.length; i++) {\n                 contentHandler.startElement(I18nTransformer.I18N_NAMESPACE_URI, I18nTransformer.I18N_PARAM_ELEMENT, \"i18n:\" + I18nTransformer.I18N_PARAM_ELEMENT, XMLUtils.EMPTY_ATTRIBUTES);\n-                if (keys != null && keys[i])\n+                if (keys != null && keys[i]) {\n                     contentHandler.startElement(I18nTransformer.I18N_NAMESPACE_URI, I18nTransformer.I18N_TEXT_ELEMENT, \"i18n:\" + I18nTransformer.I18N_TEXT_ELEMENT, i18nAttrs);\n-                contentHandler.characters(parameters[i].toCharArray(), 0, parameters[i].length());\n-                if (keys != null && keys[i])\n+                }\n+                final String aParam = String.valueOf(parameters[i]);\n+                contentHandler.characters(aParam.toCharArray(), 0, aParam.length());\n+                if (keys != null && keys[i]) {\n                     contentHandler.endElement(I18nTransformer.I18N_NAMESPACE_URI, I18nTransformer.I18N_TEXT_ELEMENT, \"i18n:\" + I18nTransformer.I18N_TEXT_ELEMENT);\n+                }\n                 contentHandler.endElement(I18nTransformer.I18N_NAMESPACE_URI, I18nTransformer.I18N_PARAM_ELEMENT, \"i18n:\" + I18nTransformer.I18N_PARAM_ELEMENT);\n             }\n             contentHandler.endElement(I18nTransformer.I18N_NAMESPACE_URI, I18nTransformer.I18N_TRANSLATE_ELEMENT, \"i18n:\" + I18nTransformer.I18N_TRANSLATE_ELEMENT);\n         }\n         contentHandler.endPrefixMapping(\"i18n\");\n     }\n-    \n+\n     public boolean equals(Object obj) {\n         if (obj instanceof I18nMessage) {\n             I18nMessage other = (I18nMessage)obj;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/55ea3f348656a04ae849e2e3f1a77ba339678daa",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/7cd26b6c6d0c068f6c3a00a99b85f84458c8ed66",
        "message": "- remove dependencies on EnvironmentHelper (now compatible with 2.1.5 and 2.2-dev)\n- add <child-binding> to JS binding (useful for container widgets)\n- early prototype of CreateEvent (needs much more work)\n- fix NPE in SimpleRepeater\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@28639 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_126",
        "file": [
            {
                "sha": "2317630b45cd29a2b2153318311aa5c2dcf8b834",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/DefaultFormManager.java",
                "status": "modified",
                "additions": 18,
                "deletions": 3,
                "changes": 21,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/DefaultFormManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/DefaultFormManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/DefaultFormManager.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -22,6 +22,9 @@\n import org.apache.avalon.framework.configuration.Configurable;\n import org.apache.avalon.framework.configuration.Configuration;\n import org.apache.avalon.framework.configuration.ConfigurationException;\n+import org.apache.avalon.framework.context.Context;\n+import org.apache.avalon.framework.context.ContextException;\n+import org.apache.avalon.framework.context.Contextualizable;\n import org.apache.avalon.framework.logger.AbstractLogEnabled;\n import org.apache.avalon.framework.service.ServiceException;\n import org.apache.avalon.framework.service.ServiceManager;\n@@ -42,19 +45,30 @@\n /**\n  * Component implementing the {@link FormManager} role.\n  * \n- * @version $Id: DefaultFormManager.java,v 1.5 2004/06/01 10:51:28 bruno Exp $\n+ * @version $Id: DefaultFormManager.java,v 1.6 2004/06/15 07:33:43 sylvain Exp $\n  */\n public class DefaultFormManager \n   extends AbstractLogEnabled \n-  implements FormManager, ThreadSafe, Serviceable, Disposable, Configurable, Component, Initializable {\n+  implements FormManager, Contextualizable, ThreadSafe, Serviceable, Disposable, Configurable, Component, Initializable {\n       \n     protected static final String PREFIX = \"CocoonForm:\";\n     protected ServiceManager manager;\n     protected Configuration configuration;\n     protected SimpleServiceSelector widgetDefinitionBuilderSelector;\n     protected CacheManager cacheManager;\n \n-    public void service(ServiceManager serviceManager) throws ServiceException {\n+    private Context avalonContext;\n+    public void contextualize(Context context) throws ContextException {\n+\t\tthis.avalonContext = context;\n+\t}\n+    \n+    /** Temporary internal method, don't rely on it's existence! Needed to access the context from flowscript. */\n+    // FIXME (SW). Extending the FOM is needed.\n+    public Context getAvalonContext() {\n+    \t\treturn this.avalonContext;\n+    }\n+\n+\tpublic void service(ServiceManager serviceManager) throws ServiceException {\n         this.manager = serviceManager;\n         this.cacheManager = (CacheManager)serviceManager.lookup(CacheManager.ROLE);\n     }\n@@ -190,4 +204,5 @@ public void dispose() {\n         this.manager = null;\n         this.cacheManager = null;\n     }\n+\n }"
            },
            {
                "sha": "da60f0103aefd65ceea949a48e5130d0d2ef1f08",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/binding/ComposedJXPathBindingBase.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/ComposedJXPathBindingBase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/ComposedJXPathBindingBase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/binding/ComposedJXPathBindingBase.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -26,7 +26,7 @@\n  * into specific {@link JXPathBindingBase} implementations that have nested\n  * child-bindings.\n  *\n- * @version CVS $Id: ComposedJXPathBindingBase.java,v 1.2 2004/03/11 02:56:32 joerg Exp $\n+ * @version CVS $Id: ComposedJXPathBindingBase.java,v 1.3 2004/06/15 07:33:43 sylvain Exp $\n  */\n public class ComposedJXPathBindingBase extends JXPathBindingBase {\n     private final JXPathBindingBase[] subBindings;\n@@ -36,7 +36,7 @@\n      *\n      * @param childBindings sets the array of childBindings\n      */\n-    protected ComposedJXPathBindingBase(JXPathBindingBuilderBase.CommonAttributes commonAtts, JXPathBindingBase[] childBindings) {\n+    public ComposedJXPathBindingBase(JXPathBindingBuilderBase.CommonAttributes commonAtts, JXPathBindingBase[] childBindings) {\n         super(commonAtts);\n         this.subBindings = childBindings;\n         if (this.subBindings != null) {"
            },
            {
                "sha": "a372656927b314a98c83f28eaa2b5c7b41475729",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/binding/JXPathBindingManager.java",
                "status": "modified",
                "additions": 20,
                "deletions": 5,
                "changes": 25,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/JXPathBindingManager.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/JXPathBindingManager.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/binding/JXPathBindingManager.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -20,11 +20,15 @@\n import org.apache.avalon.framework.configuration.Configurable;\n import org.apache.avalon.framework.configuration.Configuration;\n import org.apache.avalon.framework.configuration.ConfigurationException;\n+import org.apache.avalon.framework.context.Context;\n+import org.apache.avalon.framework.context.ContextException;\n+import org.apache.avalon.framework.context.Contextualizable;\n import org.apache.avalon.framework.logger.AbstractLogEnabled;\n import org.apache.avalon.framework.service.ServiceException;\n import org.apache.avalon.framework.service.ServiceManager;\n import org.apache.avalon.framework.service.Serviceable;\n import org.apache.avalon.framework.thread.ThreadSafe;\n+import org.apache.cocoon.components.LifecycleHelper;\n import org.apache.cocoon.forms.CacheManager;\n import org.apache.cocoon.forms.datatype.DatatypeManager;\n import org.apache.cocoon.forms.util.DomHelper;\n@@ -40,10 +44,10 @@\n  * usage of the <a href=\"http://jakarta.apache.org/commons/jxpath/index.html\">\n  * JXPath package </a>.\n  * \n- * @version CVS $Id: JXPathBindingManager.java,v 1.3 2004/06/01 10:51:28 bruno Exp $\n+ * @version CVS $Id: JXPathBindingManager.java,v 1.4 2004/06/15 07:33:43 sylvain Exp $\n  */\n public class JXPathBindingManager extends AbstractLogEnabled implements\n-        BindingManager, Serviceable, Disposable, Initializable, Configurable,\n+        BindingManager, Contextualizable, Serviceable, Disposable, Initializable, Configurable,\n         ThreadSafe {\n \n     private static final String PREFIX = \"CocoonFormBinding:\";\n@@ -58,7 +62,13 @@\n \n     private CacheManager cacheManager;\n \n-    public void service(ServiceManager serviceManager) throws ServiceException {\n+\tprivate Context avalonContext;\n+\n+\tpublic void contextualize(Context context) throws ContextException {\n+\t\tthis.avalonContext = context;\n+\t}\n+\n+\tpublic void service(ServiceManager serviceManager) throws ServiceException {\n         this.serviceManager = serviceManager;\n         this.datatypeManager = (DatatypeManager) serviceManager\n                 .lookup(DatatypeManager.ROLE);\n@@ -74,8 +84,13 @@ public void configure(Configuration configuration)\n     public void initialize() throws Exception {\n         bindingBuilderSelector = new SimpleServiceSelector(\"binding\",\n                 JXPathBindingBuilderBase.class);\n-        bindingBuilderSelector.enableLogging(getLogger());\n-        bindingBuilderSelector.configure(configuration.getChild(\"bindings\"));\n+        LifecycleHelper.setupComponent(\n+        \t\tbindingBuilderSelector,\n+\t\t\tgetLogger(),\n+\t\t\tthis.avalonContext,\n+\t\t\tthis.serviceManager,\n+\t\t\tnull, // RoleManager,\n+\t\t\tconfiguration.getChild(\"bindings\"));\n     }\n \n     public Binding createBinding(Source source) throws BindingException {"
            },
            {
                "sha": "e938858626dab81233de403115e5221b93806d27",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBinding.java",
                "status": "modified",
                "additions": 45,
                "deletions": 23,
                "changes": 68,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBinding.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBinding.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBinding.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -16,36 +16,55 @@\n package org.apache.cocoon.forms.binding;\n \n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.Map;\n \n import org.apache.avalon.framework.CascadingRuntimeException;\n+import org.apache.avalon.framework.context.Context;\n+import org.apache.cocoon.components.ContextHelper;\n+import org.apache.cocoon.components.flow.javascript.ScriptableMap;\n import org.apache.cocoon.environment.internal.EnvironmentHelper;\n import org.apache.cocoon.forms.formmodel.Widget;\n import org.apache.cocoon.forms.util.JavaScriptHelper;\n import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.Pointer;\n+import org.mozilla.javascript.Function;\n import org.mozilla.javascript.Script;\n+import org.mozilla.javascript.Scriptable;\n \n /**\n  *\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: JavaScriptJXPathBinding.java,v 1.6 2004/05/25 07:28:24 cziegeler Exp $\n+ * @version CVS $Id: JavaScriptJXPathBinding.java,v 1.7 2004/06/15 07:33:43 sylvain Exp $\n  */\n public class JavaScriptJXPathBinding extends JXPathBindingBase {\n \n+\tprivate final Context avalonContext;\n     private final String id;\n     private final String path;\n-    private final Script loadScript;\n-    private final Script saveScript;\n+    private final Function loadScript;\n+    private final Function saveScript;\n+    private final Scriptable childBindings;\n+    \n+    final static String[] LOAD_PARAMS = { \"widget\", \"jxpathPointer\", \"jxpathContext\", \"childBindings\" };\n+    final static String[] SAVE_PARAMS = { \"widget\", \"jxpathPointer\", \"jxpathContext\", \"childBindings\" };\n \n     public JavaScriptJXPathBinding(\n-            JXPathBindingBuilderBase.CommonAttributes commonAtts, String id,\n-            String path, Script loadScript, Script saveScript) {\n+    \t\t    Context context, JXPathBindingBuilderBase.CommonAttributes commonAtts, String id,\n+            String path, Function loadScript, Function saveScript, Map childBindings) {\n         super(commonAtts);\n         this.id = id;\n         this.path = path;\n         this.loadScript = loadScript;\n         this.saveScript = saveScript;\n+        this.avalonContext = context;\n+        \n+        // Set parent on child bindings\n+        for(Iterator iter = childBindings.values().iterator(); iter.hasNext(); ) {\n+        \t\t((Binding)iter.next()).setParent(this);\n+        }\n+        \n+        this.childBindings = new ScriptableMap(childBindings);\n     }\n \n     public void doLoad(Widget frmModel, JXPathContext jctx) {\n@@ -55,19 +74,22 @@ public void doLoad(Widget frmModel, JXPathContext jctx) {\n             // Move to widget context\n             Pointer pointer = jctx.getPointer(this.path);\n     \n-            // FIXME: remove this ugly hack and get the request from the\n-            // Avalon context once binding builder are real components\n-            Map objectModel = EnvironmentHelper.getCurrentEnvironment().getObjectModel();\n+            Map objectModel = ContextHelper.getObjectModel(this.avalonContext);\n \n             try {\n-                Map values = new HashMap(3);\n-                values.put(\"widget\", widget);\n-                values.put(\"jxpathPointer\", pointer);\n-                if (pointer.getNode() != null) {\n-                    values.put(\"jxpathContext\", jctx.getRelativeContext(pointer));\n-                }\n+//                Map values = new HashMap(3);\n+//                values.put(\"widget\", widget);\n+//                values.put(\"jxpathPointer\", pointer);\n+//                if (pointer.getNode() != null) {\n+//                    values.put(\"jxpathContext\", jctx.getRelativeContext(pointer));\n+//                }\n+//                values.put(\"childBindings\", this.childBindings);\n+                \n+                JXPathContext newCtx = pointer.getNode() == null ? null :\n+                \t    jctx.getRelativeContext(pointer);\n \n-                JavaScriptHelper.execScript(this.loadScript, values, objectModel);\n+                JavaScriptHelper.callFunction(this.loadScript, frmModel,\n+                \t\tnew Object[] {widget, pointer, newCtx, this.childBindings}, objectModel);\n     \n             } catch(RuntimeException re) {\n                 // rethrow\n@@ -90,16 +112,16 @@ public void doSave(Widget frmModel, JXPathContext jctx) throws BindingException\n             Pointer pointer = jctx.createPath(this.path);\n             JXPathContext widgetCtx = jctx.getRelativeContext(pointer);\n             try {\n-                // FIXME: remove this ugly hack and get the request from the Avalon context once\n-                // binding builder are real components\n-                Map objectModel = EnvironmentHelper.getCurrentEnvironment().getObjectModel();\n+                Map objectModel = ContextHelper.getObjectModel(this.avalonContext);\n \n-                Map values = new HashMap();\n-                values.put(\"widget\", widget);\n-                values.put(\"jxpathContext\", widgetCtx);\n-                values.put(\"jxpathPointer\", pointer);\n+//                Map values = new HashMap();\n+//                values.put(\"widget\", widget);\n+//                values.put(\"jxpathContext\", widgetCtx);\n+//                values.put(\"jxpathPointer\", pointer);\n+//                values.put(\"childBindings\", this.childBindings);\n \n-                JavaScriptHelper.execScript(this.saveScript, values, objectModel);\n+                JavaScriptHelper.callFunction(this.saveScript, frmModel,\n+                \t\tnew Object[] {widget, pointer, widgetCtx, this.childBindings}, objectModel);\n \n             } catch(RuntimeException re) {\n                 // rethrow"
            },
            {
                "sha": "2d382c7a34bc54dd2db7f86eff5ed708aa122373",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBindingBuilder.java",
                "status": "modified",
                "additions": 64,
                "deletions": 9,
                "changes": 73,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBindingBuilder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBindingBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/binding/JavaScriptJXPathBindingBuilder.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -15,28 +15,42 @@\n  */\n package org.apache.cocoon.forms.binding;\n \n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.avalon.framework.context.Context;\n+import org.apache.avalon.framework.context.ContextException;\n+import org.apache.avalon.framework.context.Contextualizable;\n import org.apache.cocoon.forms.binding.JXPathBindingManager.Assistant;\n import org.apache.cocoon.forms.util.DomHelper;\n import org.apache.cocoon.forms.util.JavaScriptHelper;\n+import org.mozilla.javascript.Function;\n import org.mozilla.javascript.Script;\n import org.w3c.dom.Element;\n \n /**\n  * Builds a {@link Binding} based on two JavaScript snippets, respectively for loading and saving the form.\n+ * This binding also optionally accepts named child bindings, which are useful when the bound widget is a container.\n  * <p>\n- * The syntax for this binding is as follows :\n+ * The syntax for this binding is as follows:\n  * <pre>\n  *   &lt;fb:javascript id=\"foo\" path=\"@foo\"&gt;\n  *     &lt;fb:load-form&gt;\n  *       var appValue = jxpathPointer.getValue();\n  *       var formValue = doLoadConversion(appValue);\n  *       widget.setValue(formValue);\n+ *       childBindings[\"foo\"].loadFormFromModel(widget, jxpathContext);\n  *     &lt;/fb:load-form&gt;\n  *     &lt;fb:save-form&gt;\n  *       var formValue = widget.getValue();\n  *       var appValue = doSaveConversion(formValue);\n  *       jxpathPointer.setValue(appValue);\n+ *       childBindings[\"foo\"].saveFormToModel(widget, jxpathContext);\n  *     &lt;/fb:save-form&gt;\n+ *     &lt;fb:child-binding name=\"foo\"&gt;\n+ *       &lt;fb:value id=\"bar\" path=\"baz\"/&gt;\n+ *     &lt;/fb:child-binding&gt;\n  *   &lt;/fb:javascript&gt;\n  * </pre>\n  * This example is rather trivial and could be replaced by a simple &lt;fb:value&gt;, but\n@@ -52,39 +66,80 @@\n  * </ul>\n  *\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: JavaScriptJXPathBindingBuilder.java,v 1.2 2004/03/24 01:32:45 joerg Exp $\n+ * @version CVS $Id: JavaScriptJXPathBindingBuilder.java,v 1.3 2004/06/15 07:33:43 sylvain Exp $\n  */\n-public class JavaScriptJXPathBindingBuilder extends JXPathBindingBuilderBase {\n+public class JavaScriptJXPathBindingBuilder extends JXPathBindingBuilderBase implements Contextualizable {\n+\n+\tprivate Context avalonContext;\n+\t\n+\tpublic void contextualize(Context context) throws ContextException {\n+\t\tthis.avalonContext = context;\n+\t}\n \n-    public JXPathBindingBase buildBinding(Element element, Assistant assistant) throws BindingException {\n+\tpublic JXPathBindingBase buildBinding(Element element, Assistant assistant) throws BindingException {\n         try {\n             CommonAttributes commonAtts = JXPathBindingBuilderBase.getCommonAttributes(element);\n \n             String id = DomHelper.getAttribute(element, \"id\");\n             String path = DomHelper.getAttribute(element, \"path\");\n \n-            Script loadScript = null;\n+            // Build load script\n+            Function loadScript = null;\n             if (commonAtts.loadEnabled) {\n                 Element loadElem = DomHelper.getChildElement(element, BindingManager.NAMESPACE, \"load-form\");\n                 if (loadElem == null) {\n                     throw new BindingException(\"Element \\\"load-form\\\" is missing (\" +\n                         DomHelper.getLocation(element) + \")\");\n                 }\n-                loadScript = JavaScriptHelper.buildScript(loadElem);\n+                loadScript = JavaScriptHelper.buildFunction(loadElem, JavaScriptJXPathBinding.LOAD_PARAMS);\n             }\n \n-            Script saveScript = null;\n+            \t// Build save script\n+            Function saveScript = null;\n             if (commonAtts.saveEnabled) {\n                 Element saveElem = DomHelper.getChildElement(element, BindingManager.NAMESPACE, \"save-form\");\n                 if (saveElem == null) {\n                     throw new BindingException(\"Element \\\"save-form\\\" is missing (\" +\n                         DomHelper.getLocation(element) + \")\");\n                 }\n-                saveScript = JavaScriptHelper.buildScript(saveElem);\n+                saveScript = JavaScriptHelper.buildFunction(saveElem, JavaScriptJXPathBinding.SAVE_PARAMS);\n+            }\n+            \n+            // Build child bindings\n+            Map childBindings;\n+            Element[] children = DomHelper.getChildElements(element, BindingManager.NAMESPACE, \"child-binding\");\n+            if (children.length == 0) {\n+            \t\tchildBindings = Collections.EMPTY_MAP;\n+            } else {\n+            \t\tchildBindings = new HashMap();\n+            \t\tfor (int i = 0; i < children.length; i++) {\n+            \t\t\tElement child = children[i];\n+            \t\t\t\n+            \t\t\t// Get the binding name and check its uniqueness\n+            \t\t\tString name = DomHelper.getAttribute(child, \"name\");\n+            \t\t\tif (childBindings.containsKey(name)) {\n+            \t\t\t\tthrow new BindingException(\"Duplicate name '\" + name + \"' at \" + DomHelper.getLocation(child));\n+            \t\t\t}\n+            \t\t\t\n+            \t\t\t// Build the child binding\n+            \t\t\tJXPathBindingBase[] bindings = assistant.makeChildBindings(child);\n+            \t\t\tif (bindings == null) {\n+            \t\t\t\tbindings = new JXPathBindingBase[0];\n+            \t\t\t}\n+            \t\t\t\n+            \t\t\tComposedJXPathBindingBase composedBinding = new ComposedJXPathBindingBase(commonAtts, bindings);\n+            \t\t\tcomposedBinding.enableLogging(getLogger());\n+            \t\t\tchildBindings.put(name, composedBinding);\n+            \t\t}\n             }\n \n-            return new JavaScriptJXPathBinding(commonAtts, id, path, loadScript, saveScript);\n+            JXPathBindingBase result = new JavaScriptJXPathBinding(this.avalonContext, commonAtts, id, path, loadScript, saveScript,\n+            \t\tCollections.unmodifiableMap(childBindings));\n+            result.enableLogging(getLogger());\n+            return result;\n \n+        } catch(BindingException be) {\n+        \t    throw be;\n         } catch(Exception e) {\n             throw new BindingException(\"Cannot build binding at \" + DomHelper.getLocation(element), e);\n         }"
            },
            {
                "sha": "859371a3b1c981da6f4da16395a0e2fc4549735b",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/binding/SimpleRepeaterJXPathBinding.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/SimpleRepeaterJXPathBinding.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/binding/SimpleRepeaterJXPathBinding.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/binding/SimpleRepeaterJXPathBinding.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -31,7 +31,7 @@\n  * {@link org.apache.cocoon.forms.binding.RepeaterJXPathBinding}\n  *\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: SimpleRepeaterJXPathBinding.java,v 1.3 2004/04/23 11:42:58 mpo Exp $\n+ * @version CVS $Id: SimpleRepeaterJXPathBinding.java,v 1.4 2004/06/15 07:33:43 sylvain Exp $\n  */\n public class SimpleRepeaterJXPathBinding extends JXPathBindingBase {\n \n@@ -52,6 +52,7 @@ public SimpleRepeaterJXPathBinding(\n         this.repeaterPath = repeaterPath;\n         this.rowPath = rowPath;\n         this.rowBinding = rowBinding;\n+        this.rowBinding.setParent(this);\n         this.clearOnLoad = clearOnLoad;\n         this.deleteIfEmpty = deleteIfEmpty;\n     }"
            },
            {
                "sha": "e7dd79fff2c484f1062a83d338ec97efedbdbd51",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/event/CreateEvent.java",
                "status": "added",
                "additions": 32,
                "deletions": 0,
                "changes": 32,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/CreateEvent.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/CreateEvent.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/event/CreateEvent.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 1999-2004 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.cocoon.forms.event;\n+\n+import org.apache.cocoon.forms.formmodel.Widget;\n+\n+/**\n+ * <b>Early prototype of a create event. Don't use it now as the plumbing is not yet ready! (SW)</b>\n+ * An event raised when a widget is created, once it has been fully set up. For\n+ * container widgets, this occurs after child widgets, if any, have been created.\n+ * \n+ * @version CVS $Id: CreateEvent.java,v 1.1 2004/06/15 07:33:43 sylvain Exp $\n+ */\n+public class CreateEvent extends WidgetEvent {\n+    \n+    public CreateEvent(Widget source) {\n+        super(source);\n+    }\n+}"
            },
            {
                "sha": "97279b157344b62e1617c4739a7c156b4b14100c",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/event/CreateListener.java",
                "status": "added",
                "additions": 26,
                "deletions": 0,
                "changes": 26,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/CreateListener.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/CreateListener.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/event/CreateListener.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 1999-2004 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.cocoon.forms.event;\n+\n+/**\n+ * Listeners for {@link CreateEvent}s\n+ * \n+ * @version CVS $Id: CreateListener.java,v 1.1 2004/06/15 07:33:43 sylvain Exp $\n+ */\n+\n+public interface CreateListener extends WidgetListener {\n+    void widgetCreated(CreateEvent event);\n+}"
            },
            {
                "sha": "09c5dfaba5cbfbb87ee98d560ee10f458994ea9d",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/event/WidgetEventMulticaster.java",
                "status": "modified",
                "additions": 27,
                "deletions": 6,
                "changes": 33,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/WidgetEventMulticaster.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/WidgetEventMulticaster.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/event/WidgetEventMulticaster.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -23,7 +23,7 @@\n  * <code>java.awt.AWTEventMulticaster</code> for more information on its use.\n  * \n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: WidgetEventMulticaster.java,v 1.1 2004/03/09 10:33:45 reinhard Exp $\n+ * @version CVS $Id: WidgetEventMulticaster.java,v 1.2 2004/06/15 07:33:43 sylvain Exp $\n  */\n public class WidgetEventMulticaster extends AWTEventMulticaster implements\n     ActionListener, ValueChangedListener, ProcessingPhaseListener {\n@@ -32,6 +32,23 @@ protected WidgetEventMulticaster(EventListener a, EventListener b) {\n         super(a, b);\n     }\n     \n+    //-- Create ---------------------------------------------------------------\n+    \n+    public static CreateListener add(CreateListener a, CreateListener b) {\n+        return (CreateListener)addInternal(a, b);\n+    }\n+    \n+    public static CreateListener remove(CreateListener l, CreateListener oldl) {\n+        return (CreateListener)removeInternal(l, oldl);\n+    }\n+    \n+    public void widgetCreated(CreateEvent e) {\n+        ((CreateListener)a).widgetCreated(e);\n+        ((CreateListener)b).widgetCreated(e);\n+    }\n+\n+    //-- Action ---------------------------------------------------------------\n+\n     public static ActionListener add(ActionListener a, ActionListener b) {\n         return (ActionListener)addInternal(a, b);\n     }\n@@ -45,6 +62,8 @@ public void actionPerformed(ActionEvent e) {\n         ((ActionListener)b).actionPerformed(e);\n     }\n \n+    //-- ValueChanged ---------------------------------------------------------\n+\n     public static ValueChangedListener add(ValueChangedListener a, ValueChangedListener b) {\n         return (ValueChangedListener)addInternal(a, b);\n     }\n@@ -53,6 +72,13 @@ public static ValueChangedListener remove(ValueChangedListener l, ValueChangedLi\n         return (ValueChangedListener)removeInternal(l, oldl);\n     }\n     \n+    public void valueChanged(ValueChangedEvent e) {\n+        ((ValueChangedListener)a).valueChanged(e);\n+        ((ValueChangedListener)b).valueChanged(e);\n+    }\n+    \n+    //-- ProcessingPhase ------------------------------------------------------\n+\n     public void phaseEnded(ProcessingPhaseEvent e) {\n         ((ProcessingPhaseListener)a).phaseEnded(e);\n         ((ProcessingPhaseListener)b).phaseEnded(e);\n@@ -66,11 +92,6 @@ public static ProcessingPhaseListener remove(ProcessingPhaseListener l, Processi\n         return (ProcessingPhaseListener)removeInternal(l, oldl);\n     }\n     \n-    public void valueChanged(ValueChangedEvent e) {\n-        ((ValueChangedListener)a).valueChanged(e);\n-        ((ValueChangedListener)b).valueChanged(e);\n-    }\n-    \n     /**\n      * Can't use the superclass method since it creates an AWTEventMulticaster\n      */"
            },
            {
                "sha": "65437764cf1a65ce0ec6d2cca5cdcfdc4be2e063",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListener.java",
                "status": "modified",
                "additions": 14,
                "deletions": 1,
                "changes": 15,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListener.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListener.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListener.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -24,6 +24,8 @@\n import org.apache.cocoon.components.flow.FlowHelper;\n import org.apache.cocoon.forms.event.ActionEvent;\n import org.apache.cocoon.forms.event.ActionListener;\n+import org.apache.cocoon.forms.event.CreateEvent;\n+import org.apache.cocoon.forms.event.CreateListener;\n import org.apache.cocoon.forms.event.ValueChangedEvent;\n import org.apache.cocoon.forms.event.ValueChangedListener;\n import org.apache.cocoon.forms.event.WidgetEvent;\n@@ -34,7 +36,7 @@\n  * Listeners built by {@link org.apache.cocoon.forms.event.impl.JavaScriptWidgetListenerBuilder}\n  * \n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: JavaScriptWidgetListener.java,v 1.4 2004/04/27 12:02:13 bruno Exp $\n+ * @version CVS $Id: JavaScriptWidgetListener.java,v 1.5 2004/06/15 07:33:43 sylvain Exp $\n  */\n public abstract class JavaScriptWidgetListener {\n     \n@@ -94,4 +96,15 @@ public void valueChanged(ValueChangedEvent event) {\n             super.callScript(event);\n         }\n     }\n+    \n+    public static class JSCreateListener extends JavaScriptWidgetListener implements CreateListener {\n+\n+        public JSCreateListener(Script script, Context context) {\n+            super(script, context);\n+        }\n+\n+        public void widgetCreated(CreateEvent event) {\n+            super.callScript(event);\n+        }\n+    }\n }"
            },
            {
                "sha": "a7200866ecc8df148b6b413ceb157fe51d0db246",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListenerBuilder.java",
                "status": "modified",
                "additions": 6,
                "deletions": 3,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListenerBuilder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListenerBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/event/impl/JavaScriptWidgetListenerBuilder.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -16,6 +16,7 @@\n package org.apache.cocoon.forms.event.impl;\n \n import org.apache.cocoon.forms.event.ActionListener;\n+import org.apache.cocoon.forms.event.CreateListener;\n import org.apache.cocoon.forms.event.ValueChangedListener;\n import org.apache.cocoon.forms.event.WidgetListener;\n import org.apache.cocoon.forms.event.WidgetListenerBuilder;\n@@ -32,16 +33,16 @@\n  * <p>\n  * The syntax for this listener is as follows :\n  * <pre>\n- *   &lt;javascript&gt;\n+ *   &lt;fd:javascript&gt;\n  *     var widget = event.sourceWidget;\n  *     sourceWidget.setValue(\"Yeah\");\n- *   &lt;/javascript&gt;\n+ *   &lt;/fd:javascript&gt;\n  * </pre>\n  * As shown above, the event that fired this listener is published as the <code>event</code>\n  * variable.\n  *\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: JavaScriptWidgetListenerBuilder.java,v 1.2 2004/04/27 12:02:13 bruno Exp $\n+ * @version CVS $Id: JavaScriptWidgetListenerBuilder.java,v 1.3 2004/06/15 07:33:43 sylvain Exp $\n  */\n public class JavaScriptWidgetListenerBuilder implements WidgetListenerBuilder, ThreadSafe, Contextualizable {\n \n@@ -57,6 +58,8 @@ public WidgetListener buildListener(Element element, Class listenerClass) throws\n \n         if (listenerClass == ActionListener.class) {\n             return new JavaScriptWidgetListener.JSActionListener(script, context);\n+        } else if (listenerClass == CreateListener.class) {\n+            return new JavaScriptWidgetListener.JSCreateListener(script, context);\n         } else if (listenerClass == ValueChangedListener.class) {\n             return new JavaScriptWidgetListener.JSValueChangedListener(script, context);\n         } else {"
            },
            {
                "sha": "cf392a2f6cd46d1a338bcbff740e06d48ec42bdb",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/flow/javascript/Form.js",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/flow/javascript/Form.js",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/flow/javascript/Form.js",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/flow/javascript/Form.js?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -18,7 +18,7 @@\n  * Implementation of the Cocoon Forms/FlowScript integration.\n  *\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: Form.js,v 1.17 2004/06/09 13:50:43 danielf Exp $\n+ * @version CVS $Id: Form.js,v 1.18 2004/06/15 07:33:44 sylvain Exp $\n  */\n \n // Revisit this class, so it gives access to more than the value.\n@@ -39,6 +39,8 @@ function Form(uri) {\n         this.form = formMgr.createForm(src);\n         this.binding = null;\n         this.eventHandler = null;\n+        // FIXME : hack needed because FOM doesn't provide access to the context\n+        this.avalonContext = formMgr.getAvalonContext();\n         // TODO : do we keep this ?\n         this.formWidget = new Widget(this.form);\n \n@@ -121,8 +123,8 @@ Form.prototype.showForm = function(uri, bizData) {\n \n         // Prematurely add the bizData as in the object model so that event listeners can use it\n         // (the same is done by cocoon.sendPage())\n-        // FIXME: hack because object model isn't available in flowscript.\n-        var objectModel = org.apache.cocoon.environment.internal.EnvironmentHelper.getCurrentEnvironment().getObjectModel();\n+        // FIXME : hack needed because FOM doesn't provide access to the object model\n+        var objectModel = org.apache.cocoon.components.ContextHelper.getObjectModel(this.avalonContext);\n         org.apache.cocoon.components.flow.FlowHelper.setContextObject(objectModel, bizData);\n \n         finished = this.form.process(formContext);"
            },
            {
                "sha": "74872ea43633ce28775f665ac8064fbe81518675",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinition.java",
                "status": "modified",
                "additions": 16,
                "deletions": 1,
                "changes": 17,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinition.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinition.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinition.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -21,6 +21,9 @@\n import java.util.Map;\n \n import org.apache.cocoon.forms.Constants;\n+import org.apache.cocoon.forms.event.CreateEvent;\n+import org.apache.cocoon.forms.event.CreateListener;\n+import org.apache.cocoon.forms.event.WidgetEventMulticaster;\n import org.apache.cocoon.forms.validation.WidgetValidator;\n import org.apache.cocoon.xml.XMLUtils;\n import org.apache.excalibur.xml.sax.XMLizable;\n@@ -30,7 +33,7 @@\n /**\n  * Provides functionality that is common across many WidgetDefinition implementations.\n  * \n- * @version $Id: AbstractWidgetDefinition.java,v 1.6 2004/04/29 08:46:19 cziegeler Exp $\n+ * @version $Id: AbstractWidgetDefinition.java,v 1.7 2004/06/15 07:33:44 sylvain Exp $\n  */\n public abstract class AbstractWidgetDefinition implements WidgetDefinition {\n     private FormDefinition formDefinition;\n@@ -41,6 +44,8 @@\n     private String id;\n     private Map displayData;\n     private List validators;\n+    \n+    protected CreateListener createListener;\n \n     public FormDefinition getFormDefinition() {\n         if (this.formDefinition == null) {\n@@ -83,6 +88,16 @@ public String getId() {\n     protected void setId(String id) {\n         this.id = id;\n     }\n+    \n+    protected void addCreateListener(CreateListener listener) {\n+    \t\tthis.createListener = WidgetEventMulticaster.add(this.createListener, listener);\n+    }\n+    \n+    public void fireCreateEvent(CreateEvent event) {\n+        if (this.createListener != null) {\n+        \t    this.createListener.widgetCreated(event);\n+        }\n+    }\n \n     public void generateLabel(ContentHandler contentHandler) throws SAXException {\n         generateDisplayData(\"label\", contentHandler);"
            },
            {
                "sha": "bbd961afb8bcf82c2d91f74675c65c1889c68e1d",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinitionBuilder.java",
                "status": "modified",
                "additions": 11,
                "deletions": 1,
                "changes": 12,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinitionBuilder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinitionBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/AbstractWidgetDefinitionBuilder.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -18,6 +18,7 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n@@ -29,6 +30,8 @@\n import org.apache.avalon.framework.service.Serviceable;\n import org.apache.cocoon.forms.Constants;\n import org.apache.cocoon.forms.datatype.DatatypeManager;\n+import org.apache.cocoon.forms.event.CreateListener;\n+import org.apache.cocoon.forms.event.ValueChangedListener;\n import org.apache.cocoon.forms.event.WidgetListener;\n import org.apache.cocoon.forms.event.WidgetListenerBuilder;\n import org.apache.cocoon.forms.expression.ExpressionManager;\n@@ -43,7 +46,7 @@\n  * Abstract base class for WidgetDefinitionBuilders. Provides functionality\n  * common to many implementations.\n  *\n- * @version $Id: AbstractWidgetDefinitionBuilder.java,v 1.3 2004/04/27 12:02:13 bruno Exp $\n+ * @version $Id: AbstractWidgetDefinitionBuilder.java,v 1.4 2004/06/15 07:33:44 sylvain Exp $\n  */\n public abstract class AbstractWidgetDefinitionBuilder implements WidgetDefinitionBuilder, Serviceable, Disposable {\n     protected ServiceSelector widgetDefinitionBuilderSelector;\n@@ -153,6 +156,13 @@ protected void setValidators(Element widgetElement, AbstractWidgetDefinition wid\n             }\n         }\n     }\n+    \n+    protected void setCreateListeners(Element widgetElement, AbstractWidgetDefinition widgetDefinition) throws Exception {\n+        Iterator iter = buildEventListeners(widgetElement, \"on-create\", CreateListener.class).iterator();\n+        while (iter.hasNext()) {\n+            widgetDefinition.addCreateListener((CreateListener)iter.next());\n+        }\n+    }\n \n     public void dispose() {\n         serviceManager.release(widgetDefinitionBuilderSelector);"
            },
            {
                "sha": "f6ebb3db432e93cb4d9b1980d1e84af3f016e632",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinition.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinition.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinition.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinition.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -15,16 +15,21 @@\n  */\n package org.apache.cocoon.forms.formmodel;\n \n+import org.apache.cocoon.forms.event.CreateEvent;\n+\n /**\n  * The {@link WidgetDefinition} part of a Field widget, see {@link Field} for more information.\n  * \n- * @version $Id: FieldDefinition.java,v 1.1 2004/03/09 10:33:50 reinhard Exp $\n+ * @version $Id: FieldDefinition.java,v 1.2 2004/06/15 07:33:44 sylvain Exp $\n  */\n public class FieldDefinition extends AbstractDatatypeWidgetDefinition {\n     private boolean required;\n \n     public Widget createInstance() {\n         Field field = new Field(this);\n+        if (this.createListener != null) {\n+            this.createListener.widgetCreated(new CreateEvent(field));\n+        }\n         return field;\n     }\n "
            },
            {
                "sha": "a9e6ec984bd809b5454fc0a19ebaefada0769e1e",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinitionBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinitionBuilder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinitionBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/formmodel/FieldDefinitionBuilder.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -26,7 +26,7 @@\n /**\n  * Builds {FieldDefinition}s.\n  *\n- * @version $Id: FieldDefinitionBuilder.java,v 1.3 2004/03/17 15:37:58 joerg Exp $\n+ * @version $Id: FieldDefinitionBuilder.java,v 1.4 2004/06/15 07:33:44 sylvain Exp $\n  */\n public class FieldDefinitionBuilder extends AbstractDatatypeWidgetDefinitionBuilder {\n \n@@ -59,6 +59,7 @@ protected void buildWidgetDefinition(FieldDefinition fieldDefinition, Element wi\n \n         setDisplayData(widgetElement, fieldDefinition);\n         setValidators(widgetElement, fieldDefinition);\n+        setCreateListeners(widgetElement, fieldDefinition);\n \n         boolean required = DomHelper.getAttributeAsBoolean(widgetElement, \"required\", false);\n         fieldDefinition.setRequired(required);"
            },
            {
                "sha": "30567e8463a4d6642beba855088b2f2560d573b1",
                "filename": "src/blocks/forms/java/org/apache/cocoon/forms/util/SimpleServiceSelector.java",
                "status": "modified",
                "additions": 8,
                "deletions": 3,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/util/SimpleServiceSelector.java",
                "raw_url": "https://github.com/apache/cocoon/raw/55ea3f348656a04ae849e2e3f1a77ba339678daa/src/blocks/forms/java/org/apache/cocoon/forms/util/SimpleServiceSelector.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/forms/java/org/apache/cocoon/forms/util/SimpleServiceSelector.java?ref=55ea3f348656a04ae849e2e3f1a77ba339678daa",
                "patch": "@@ -37,7 +37,7 @@\n /**\n  * A very simple ServiceSelector for ThreadSafe services.\n  * \n- * @version $Id: SimpleServiceSelector.java,v 1.2 2004/04/15 18:09:03 bruno Exp $\n+ * @version $Id: SimpleServiceSelector.java,v 1.3 2004/06/15 07:33:44 sylvain Exp $\n  */\n public class SimpleServiceSelector extends AbstractLogEnabled implements ServiceSelector, Configurable, LogEnabled,\n         Serviceable, Disposable, Contextualizable {\n@@ -79,8 +79,13 @@ public void configure(Configuration configuration) throws ConfigurationException\n             Object component = null;\n             try {\n                 component = clazz.newInstance();\n-                LifecycleHelper lifecycleHelper = new LifecycleHelper(getLogger(), context, serviceManager, null, componentConfs[i]);\n-                lifecycleHelper.setupComponent(component);\n+                LifecycleHelper.setupComponent(\n+                \t\tcomponent,\n+\t\t\t\t\tgetLogger(),\n+\t\t\t\t\tcontext,\n+\t\t\t\t\tserviceManager,\n+\t\t\t\t\tnull, // RoleManager\n+\t\t\t\t\tcomponentConfs[i]);\n             } catch (Exception e) {\n                 throw new ConfigurationException(\"Error creating \" + hintShortHand + \" declared at \" + componentConfs[i].getLocation(), e);\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2a678c71227af3626804f7f2c3058baaad548e80",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/52cfb9397ba8db808d320728058813884d3f91d7",
        "message": "handle possible NPE if no parameter in the sitemap and no constraint-set for validating was specified:\r\nhttp://marc.theaimsgroup.com/?t=107702303400001&r=1&w=4\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27744 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_127",
        "file": [
            {
                "sha": "51cec24a4ea3905b7a60b4faf3ae8b8cbed1f468",
                "filename": "src/java/org/apache/cocoon/acting/AbstractValidatorAction.java",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/2a678c71227af3626804f7f2c3058baaad548e80/src/java/org/apache/cocoon/acting/AbstractValidatorAction.java",
                "raw_url": "https://github.com/apache/cocoon/raw/2a678c71227af3626804f7f2c3058baaad548e80/src/java/org/apache/cocoon/acting/AbstractValidatorAction.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/acting/AbstractValidatorAction.java?ref=2a678c71227af3626804f7f2c3058baaad548e80",
                "patch": "@@ -21,9 +21,11 @@\n import org.apache.avalon.framework.parameters.Parameters;\n \n import org.apache.cocoon.Constants;\n+import org.apache.cocoon.ProcessingException;\n import org.apache.cocoon.environment.SourceResolver;\n import org.apache.cocoon.environment.ObjectModelHelper;\n import org.apache.cocoon.environment.Redirector;\n+import org.apache.cocoon.sitemap.SitemapParameters;\n import org.apache.cocoon.util.Tokenizer;\n \n import org.apache.regexp.RE;\n@@ -184,7 +186,7 @@\n  * </table>\n  * @author <a href=\"mailto:Martin.Man@seznam.cz\">Martin Man</a>\n  * @author <a href=\"mailto:haul@apache.org\">Christian Haul</a>\n- * @version CVS $Id: AbstractValidatorAction.java,v 1.8 2004/03/05 13:02:43 bdelacretaz Exp $\n+ * @version CVS $Id: AbstractValidatorAction.java,v 1.9 2004/03/16 21:38:30 joerg Exp $\n  */\n public abstract class AbstractValidatorAction\n     extends AbstractComplementaryConfigurableAction\n@@ -246,6 +248,12 @@ public Map act(Redirector redirector,\n             Map csets = this.indexConfiguration(conf.getChildren(\"constraint-set\"));\n             params = this.resolveConstraints(valsetstr, csets);\n         }\n+        \n+        if (params == null) {\n+            throw new ProcessingException(\"Neither a constraint-set nor parameters in the sitemap \"\n+                                          + \"were specified for validating at \"\n+                                          + SitemapParameters.getStatementLocation(parameters));\n+        }\n         HashMap values = this.createMapOfParameters(objectModel, params);\n         allOK = this.validateSetOfParameters(desc, actionMap, resultMap, params, values, this.isStringEncoded());\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/5a2fc6e6044af94f54367c0e918ed613edccd5aa",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b32e4a3a87ba7eb97d0bb28ec0d177e2e86531f5",
        "message": "Bug fixes for the URICoplet:\r\n- Use correct event type to detect coplet changes\r\n- Fix changed list handling\r\n- throw better exception, if uri is not present (instead of NPE)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@27296 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_128",
        "file": [
            {
                "sha": "5cce74f5c521b6bc525ec5d79b64c3de17b5ae5c",
                "filename": "src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/5a2fc6e6044af94f54367c0e918ed613edccd5aa/src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java",
                "raw_url": "https://github.com/apache/cocoon/raw/5a2fc6e6044af94f54367c0e918ed613edccd5aa/src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/portal/java/org/apache/cocoon/portal/coplet/adapter/impl/URICopletAdapter.java?ref=5a2fc6e6044af94f54367c0e918ed613edccd5aa",
                "patch": "@@ -64,11 +64,11 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.cocoon.portal.Constants;\n import org.apache.cocoon.portal.PortalService;\n import org.apache.cocoon.portal.coplet.CopletInstanceData;\n+import org.apache.cocoon.portal.event.CopletInstanceEvent;\n import org.apache.cocoon.portal.event.Event;\n import org.apache.cocoon.portal.event.EventManager;\n import org.apache.cocoon.portal.event.Filter;\n import org.apache.cocoon.portal.event.Subscriber;\n-import org.apache.cocoon.portal.event.impl.ChangeCopletInstanceAspectDataEvent;\n import org.apache.excalibur.source.Source;\n import org.apache.excalibur.source.SourceResolver;\n import org.xml.sax.ContentHandler;\n@@ -80,7 +80,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@s-und-n.de\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:volker.schmitt@basf-it-services.com\">Volker Schmitt</a>\n  * \n- * @version CVS $Id: URICopletAdapter.java,v 1.11 2003/10/20 13:36:41 cziegeler Exp $\n+ * @version CVS $Id: URICopletAdapter.java,v 1.12 2004/02/09 12:14:20 cziegeler Exp $\n  */\n public class URICopletAdapter \n     extends AbstractCopletAdapter\n@@ -100,6 +100,9 @@ public void service(ServiceManager manager) throws ServiceException {\n     public void streamContent(CopletInstanceData coplet, ContentHandler contentHandler)\n     throws SAXException {\n         final String uri = (String)coplet.getCopletData().getAttribute(\"uri\");\n+        if ( uri == null ) {\n+            throw new SAXException(\"No URI for coplet data \"+coplet.getCopletData().getId()+\" found.\");\n+        }\n         this.streamContent( coplet, uri, contentHandler);\n     }\n \n@@ -118,7 +121,7 @@ public void streamContent(final CopletInstanceData coplet,\n                 String sourceUri = uri;\n                 \n                 if ( handlePars != null && handlePars.booleanValue() ) {\n-                    List list = (List) portalService.getAttribute(URICopletAdapter.class.getName());\n+                    List list = (List) portalService.getTemporaryAttribute(URICopletAdapter.class.getName());\n                     if ( list != null && list.contains( coplet )) {\n                         // add parameters\n                         if ( uri.startsWith(\"cocoon:raw:\") ) {\n@@ -177,7 +180,7 @@ public void dispose() {\n      * @see org.apache.cocoon.portal.event.Subscriber#getEventType()\n      */\n     public Class getEventType() {\n-        return ChangeCopletInstanceAspectDataEvent.class;\n+        return CopletInstanceEvent.class;\n     }\n \n     /* (non-Javadoc)\n@@ -191,7 +194,7 @@ public Filter getFilter() {\n      * @see org.apache.cocoon.portal.event.Subscriber#inform(org.apache.cocoon.portal.event.Event)\n      */\n     public void inform(Event e) {\n-        ChangeCopletInstanceAspectDataEvent event = (ChangeCopletInstanceAspectDataEvent)e;\n+        CopletInstanceEvent event = (CopletInstanceEvent)e;\n         PortalService service = null;\n         try {\n             service = (PortalService)this.manager.lookup(PortalService.ROLE);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/0a5fb3a41a2007b856729314c74386ad567825f4",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/f72e70bf90f1dc01a07a35a6e7af184265315982",
        "message": "fix npe if no source credential\r\nimprove logging\r\ngetChild method should not check for child existence. \r\nFor instance, you should be able to do parent.getChild(\"newchild\").makeCollection() etc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26986 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_129",
        "file": [
            {
                "sha": "fbc592eaa53cfb941d24dae8ff76b4c0abf07486",
                "filename": "src/blocks/webdav/java/org/apache/cocoon/components/source/impl/WebDAVSource.java",
                "status": "modified",
                "additions": 25,
                "deletions": 32,
                "changes": 57,
                "blob_url": "https://github.com/apache/cocoon/blob/0a5fb3a41a2007b856729314c74386ad567825f4/src/blocks/webdav/java/org/apache/cocoon/components/source/impl/WebDAVSource.java",
                "raw_url": "https://github.com/apache/cocoon/raw/0a5fb3a41a2007b856729314c74386ad567825f4/src/blocks/webdav/java/org/apache/cocoon/components/source/impl/WebDAVSource.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/webdav/java/org/apache/cocoon/components/source/impl/WebDAVSource.java?ref=0a5fb3a41a2007b856729314c74386ad567825f4",
                "patch": "@@ -105,7 +105,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *  @author <a href=\"mailto:g.casper@s-und-n.de\">Guido Casper</a>\n  *  @author <a href=\"mailto:gianugo@apache.org\">Gianugo Rabellino</a>\n  *  @author <a href=\"mailto:d.madama@pro-netics.com\">Daniele Madama</a>\n- *  @version $Id: WebDAVSource.java,v 1.15 2003/12/22 15:44:42 gcasper Exp $\n+ *  @version $Id: WebDAVSource.java,v 1.16 2004/01/15 13:26:39 unico Exp $\n */\n public class WebDAVSource extends AbstractLogEnabled implements Source,\n     RestrictableSource, ModifiableTraversableSource, InspectableSource {\n@@ -185,6 +185,7 @@ public static WebDAVSource newWebDAVSource(String location,\n         try {\n             source = new WebDAVSource(location, principal, password, protocol, false);\n         }  catch (HttpException he) {\n+            he.printStackTrace();\n             try {\n                 source = new WebDAVSource(location, principal, password, protocol, true);\n             } catch (HttpException finalHe) {\n@@ -242,7 +243,7 @@ public InputStream getInputStream() throws IOException, SourceException {\n                 BufferedInputStream bi = null;\n                 bi = new BufferedInputStream(this.resource.getMethodData());\n                 if (!this.resource.exists()) {\n-                    throw new HttpException(this.systemId + \"does not exist\");\n+                    throw new HttpException(this.systemId + \" does not exist\");\n                 }\n                 return bi;\n             }\n@@ -425,7 +426,7 @@ public SourceCredential getSourceCredential() throws SourceException {\n     public void setSourceCredential(SourceCredential sourcecredential)\n         throws SourceException {\n         this.sourcecredential = sourcecredential;\n-\n+        if (sourcecredential == null) return;\n         try {\n             HttpURL httpURL = new HttpURL(this.systemId);\n             httpURL.setUserInfo(\n@@ -476,6 +477,11 @@ public void close() throws IOException {\n             try {\n                 this.resource.putMethod(toByteArray());\n             } catch (HttpException he) {\n+                final String message =\n+                    \"Unable to close output stream. Server responded \" +\n+                    he.getReasonCode() + \" (\" + he.getReason() + \") - \" \n+                    + he.getMessage();\n+                getLogger().debug(message);\n                 throw new IOException(he.getMessage());\n             }\n         }\n@@ -613,35 +619,15 @@ private void resourcesToSax(\n      * @see org.apache.excalibur.source.TraversableSource#getChild(java.lang.String)\n      */\n     public Source getChild(String childName) throws SourceException {    \t\n-        Source child = null;\n-        try {\n-            WebdavResource[] resources = this.resource.listWebdavResources();\n-            for (int i = 0; i < resources.length; i++) {\n-                if (childName.equals(resources[i].getDisplayName())) {\n-                \tString childLocation = this.location + \"/\" + childName;\n-\t\t\t\t\tWebDAVSource source = WebDAVSource.newWebDAVSource(\n-                        childLocation, \n-                        this.principal, \n-                        this.password, \n-                        this.protocol, \n-                        this.getLogger());\n-\t\t\t\t\tsource.setSourceCredential(this.getSourceCredential());\n-\t\t\t\t\treturn source;\n-                }\n-            }\n-        } catch (HttpException e) {\n-            if (getLogger().isDebugEnabled()) {\n-                final String message =\n-                    \"Unable to get WebDAV children. Server responded \" +\n-                    e.getReasonCode() + \" (\" + e.getReason() + \") - \" \n-                    + e.getMessage();\n-                getLogger().debug(message);\n-            }\n-            throw new SourceException(\"Failed to get WebDAV collection child.\",e);\n-        } catch (IOException e) {\n-            throw new SourceException(\"Failed to get WebDAV collection child.\",e);\n-        }\n-        return child;\n+    \tString childLocation = this.location + \"/\" + childName;\n+    \tWebDAVSource source = WebDAVSource.newWebDAVSource(\n+            childLocation, \n+            this.principal, \n+            this.password, \n+            this.protocol, \n+            this.getLogger());\n+    \tsource.setSourceCredential(this.getSourceCredential());\n+    \treturn source;\n     }\n \n     /**\n@@ -852,6 +838,13 @@ public void setSourceProperty(SourceProperty sourceproperty)\n                    new PropertyName(sourceproperty.getNamespace(),sourceproperty.getName()),\n                    prop, true);\n \n+        } catch(HttpException e) {\n+            final String message =\n+                \"Unable to set property. Server responded \" +\n+                e.getReasonCode() + \" (\" + e.getReason() + \") - \" \n+                + e.getMessage();\n+            getLogger().debug(message);\n+            throw new SourceException(\"Could not set property \", e);\n         } catch (Exception e) {\n             throw new SourceException(\"Could not set property \", e);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/3803acaeff28efccd4422c745d6bfec0f936674a",
        "message": "stylesheet cleanup:\n- namespace issues: namespaces should be declared on the root element,\n   otherwise elements from other elements are not in this namespace (caused a NPE in Xalan a special case)\n- TABs => spaces\n- indentation\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26271 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_130",
        "file": [
            {
                "sha": "4b24c2e643c254cd85c09d34f49c8a134dba4b5c",
                "filename": "src/blocks/linotype/samples/stylesheets/news2edit.xslt",
                "status": "modified",
                "additions": 135,
                "deletions": 133,
                "changes": 268,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2edit.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2edit.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2edit.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,149 +1,151 @@\n <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n \n-<xsl:stylesheet version=\"1.0\" \n- xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n- xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\" \n->\n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n+                              xmlns=\"http://www.w3.org/1999/xhtml\">\n \n   <xsl:param name=\"home\"/>\n-  \n+\n   <xsl:template match=\"/\">\n-   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n-\t<head>\n-\t <title><xsl:value-of select=\"n:news/n:title\"/></title> \n-     <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/main.css\"/>\n-     <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/editor.css\"/>\n- \t <script type=\"text/javascript\"><![CDATA[\n-\t\t\n-\t\tprefixImageSrc=\"image-\";\n+    <html>\n+      <head>\n+        <title><xsl:value-of select=\"n:news/n:title\"/></title> \n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/main.css\"/>\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/editor.css\"/>\n+        <script type=\"text/javascript\"><![CDATA[\n+\n+            prefixImageSrc=\"image-\";\n \n-\t\tfunction doAction(action) {\n-\t\t    var form = document.forms[0];\n+            function doAction(action) {\n+                var form = document.forms[0];\n \n-\t\t\tif (action == \"delete\") {\n-\t\t\t\tvar agree = confirm(\"Are you sure you want to delete this news?\");\n-\t\t\t\tif (!agree) return;\n-\t\t\t} else if (action == \"revert\") {\n-\t\t\t\tvar content = document.getElementById(\"previous_innerHTML\").firstChild.nodeValue;\n-\t\t\t\tif (content != \"\") {\n-\t\t\t\t\tvar agree = confirm(\"Are you sure you want to restore content to the previous version?\");\n-\t\t\t\t\tif (agree) loadContent(content);\n-\t\t\t\t}\n-\t\t\t\treturn;\n-\t\t\t} else {\n-\t\t\t\tform.elements['date'].value = getDate();\n-\t\t\t\tform.elements['time'].value = getTime();\n-\t\t\t\tform.elements['fulldate'].value = getFullDate();\n-\t\t\t\tform.elements['innerHTML'].value = getInnerHTML();\n-\t\t\t\tform.elements['xml:content'].value = getContent();\n-\t\t\t}\n-\t\t\t\n-\t\t\tform.elements['action'].value = action;\n-\t\t\tform.submit();\n-\t\t}\n+                if (action == \"delete\") {\n+                    var agree = confirm(\"Are you sure you want to delete this news?\");\n+                    if (!agree) return;\n+                } else if (action == \"revert\") {\n+                    var content = document.getElementById(\"previous_innerHTML\").firstChild.nodeValue;\n+                    if (content != \"\") {\n+                        var agree = confirm(\"Are you sure you want to restore content to the previous version?\");\n+                        if (agree) loadContent(content);\n+                    }\n+                    return;\n+                } else {\n+                    form.elements['date'].value = getDate();\n+                    form.elements['time'].value = getTime();\n+                    form.elements['fulldate'].value = getFullDate();\n+                    form.elements['innerHTML'].value = getInnerHTML();\n+                    form.elements['xml:content'].value = getContent();\n+                }\n \n+                form.elements['action'].value = action;\n+                form.submit();\n+            }\n \t ]]></script>\n-     <script src=\"{$home}/scripts/editor.js\" type=\"text/javascript\"></script>\n-     <noscript>\n-      <h1>Dude, you don't go anywhere around here without Javascript enabled. ;-)</h1>\n-     </noscript>\n-\t</head>\n-\t\n-\t<body onload=\"start(event)\" onunload=\"stop(event)\">\n-     <!--form name=\"data\" action=\"/request\" method=\"POST\" enctype=\"multipart/form-data\"-->\n-     <form name=\"data\" action=\"{string('#{$continuation/id}')}.kont\" method=\"POST\" enctype=\"multipart/form-data\">\n-\t  <input type=\"hidden\" name=\"action\"/>\n-\t  <input type=\"hidden\" name=\"author\" value=\"{string('#{userid}')}\"/>\n-\t  <input type=\"hidden\" name=\"date\"/>\n-\t  <input type=\"hidden\" name=\"time\"/>\n-\t  <input type=\"hidden\" name=\"fulldate\"/>\n-\t  <input type=\"hidden\" name=\"xml:content\"/>\n-\t  <input type=\"hidden\" name=\"innerHTML\"/>\n+        <script src=\"{$home}/scripts/editor.js\" type=\"text/javascript\"></script>\n+        <noscript>\n+          <h1>Dude, you don't go anywhere around here without Javascript enabled. ;-)</h1>\n+        </noscript>\n+      </head>\n \n-      <div id=\"toolbar\">\n-       <table cellpadding=\"0\" cellspacing=\"0\">\n-        <tr>\n-\t     <td><div class=\"imagebutton\" id=\"bold\"><img src=\"{$home}/images/icons/bold.gif\" alt=\"Strong\" title=\"Strong\"/></div></td>\n-  \t     <td><div class=\"imagebutton\" id=\"italic\"><img src=\"{$home}/images/icons/italic.gif\" alt=\"Emphasis\" title=\"Emphasis\"/></div></td>\n-  \t     <td><div class=\"imagebutton\" id=\"strikethrough\"><img src=\"{$home}/images/icons/strikethrough.gif\" alt=\"Error\" title=\"Error\"/></div></td>\n-  \t     <td><div class=\"imagebutton\" id=\"quote\"><img src=\"{$home}/images/icons/quote.gif\" alt=\"Quote\" title=\"Quote\"/></div></td>\n-  \t     <td><div class=\"spacer\"/></td>\n-  \t     <td><div class=\"imagebutton\" id=\"removeformat\"><img src=\"{$home}/images/icons/removeformat.gif\" alt=\"Remove Format\" title=\"Remove Format\"/></div></td>\n-  \t     <td><div class=\"spacer\"/></td>\n-\t     <td><div class=\"imagebutton\" id=\"createlink\"><img src=\"{$home}/images/icons/link.gif\" alt=\"Link Selection\" title=\"Link Selection\"/></div></td>\n-\t     <td><div class=\"imagebutton\" id=\"unlink\"><img src=\"{$home}/images/icons/unlink.gif\" alt=\"Unlink Selection\" title=\"Unlink Selection\"/></div></td>\n-  \t     <td><div class=\"spacer\"/></td>\n-\t     <td><div class=\"imagebutton\" id=\"insertimage\"><img src=\"{$home}/images/icons/image.gif\" alt=\"Add Image\" title=\"Add Image\"/></div></td>\n-\t     <td><div class=\"imagebutton\" id=\"inserthorizontalrule\"><img src=\"{$home}/images/icons/horizontalrule.gif\" alt=\"Add Horizontal Rule\" title=\"Add Horizontal Rule\"/></div></td>\n-  \t     <td><div class=\"spacer\"/></td>\n-\t     <td><div class=\"imagebutton\" id=\"insertorderedlist\"><img src=\"{$home}/images/icons/orderedlist.gif\" alt=\"Ordered List\" title=\"Ordered List\"/></div></td>\n-\t     <td><div class=\"imagebutton\" id=\"insertunorderedlist\"><img src=\"{$home}/images/icons/unorderedlist.gif\" alt=\"Unordered List\" title=\"Unordered List\"/></div></td>\n-  \t     <td><div class=\"spacer\"/></td>\n-\t     <td><div class=\"imagebutton\" id=\"outdent\"><img src=\"{$home}/images/icons/outdent.gif\" alt=\"Outdent\" title=\"Outdent\"/></div></td>\n-\t     <td><div class=\"imagebutton\" id=\"indent\"><img src=\"{$home}/images/icons/indent.gif\" alt=\"Indent\" title=\"Indent\"/></div></td>\n-\t     <td width=\"100%\" align=\"center\" nowrap=\"true\">\n-\t      <span id=\"block_selector\">Block: <select id=\"formatblock\">\n-\t       <option value=\"\">Normal</option>\n-\t       <option value=\"p\">Paragraph</option>\n-\t       <option value=\"h1\">Heading 1</option>\n-\t       <option value=\"h2\">Heading 2</option>\n-\t       <option value=\"h3\">Heading 3</option>\n-\t       <option value=\"h4\">Heading 4</option>\n-\t      </select>\n-\t      </span>\n-\t      <span id=\"class_selector\">Class: <select id=\"alternatives\"><option>whatever</option></select></span>\n-\t     </td>\n-\t     <td nowrap=\"true\">\n-\t      <input type=\"checkbox\" name=\"online\">\n-\t       <xsl:if test=\"n:news/@online='on'\"><xsl:attribute name=\"checked\">true</xsl:attribute></xsl:if>\n-\t      </input>\n-\t      <label for=\"online\">published</label>\n-\t     </td>\n-\t    </tr>\n-\t   </table>\n-\t  </div>\n-\t  \n-\t  <xsl:apply-templates/>\n+      <body onload=\"start(event)\" onunload=\"stop(event)\">\n+        <!--form name=\"data\" action=\"/request\" method=\"POST\" enctype=\"multipart/form-data\"-->\n+        <form name=\"data\" action=\"{string('#{$continuation/id}')}.kont\" method=\"POST\" enctype=\"multipart/form-data\">\n+          <input type=\"hidden\" name=\"action\"/>\n+          <input type=\"hidden\" name=\"author\" value=\"{string('#{userid}')}\"/>\n+          <input type=\"hidden\" name=\"date\"/>\n+          <input type=\"hidden\" name=\"time\"/>\n+          <input type=\"hidden\" name=\"fulldate\"/>\n+          <input type=\"hidden\" name=\"xml:content\"/>\n+          <input type=\"hidden\" name=\"innerHTML\"/>\n \n-\t  <div id=\"controls\">\n-\t   <!--Version: <select name=\"version\">\n-\t    <t:forEach select=\"{string('#{versions}')}\" xmlns:t=\"http://apache.org/cocoon/templates/jx/1.0\">\n-\t     <option>#{.}</option>\n-\t    </t:forEach>\n-\t   </select>\n-\t   <input type=\"button\" value=\"Restore\" onclick=\"doAction('restore')\"/--> \n-\t   <input type=\"button\" value=\"Revert\" onclick=\"doAction('revert')\"/> \n-\t   <input type=\"button\" value=\"Delete\" onclick=\"doAction('delete')\"/> \n-\t   <input type=\"button\" value=\"Save\" onclick=\"doAction('save')\"/>\n-\t   <input type=\"button\" value=\"Finish\" onclick=\"doAction('finish')\"/>\n-\t  </div>\n-\t  \n-\t </form>\n-\t</body>\n-   </html>\n-  </xsl:template>\n-  \n-  <xsl:template match=\"n:news\">\n-    \t\n-\t<div id=\"page\">\n-\t <div class=\"field\">Title:<br/><input type=\"text\" name=\"title\" size=\"40\" value=\"{n:title}\"/></div>\n+          <div id=\"toolbar\">\n+            <table cellpadding=\"0\" cellspacing=\"0\">\n+              <tr>\n+                <td><div class=\"imagebutton\" id=\"bold\"><img src=\"{$home}/images/icons/bold.gif\" alt=\"Strong\" title=\"Strong\"/></div></td>\n+                <td><div class=\"imagebutton\" id=\"italic\"><img src=\"{$home}/images/icons/italic.gif\" alt=\"Emphasis\" title=\"Emphasis\"/></div></td>\n+                <td><div class=\"imagebutton\" id=\"strikethrough\"><img src=\"{$home}/images/icons/strikethrough.gif\" alt=\"Error\" title=\"Error\"/></div></td>\n+                <td><div class=\"imagebutton\" id=\"quote\"><img src=\"{$home}/images/icons/quote.gif\" alt=\"Quote\" title=\"Quote\"/></div></td>\n+                <td><div class=\"spacer\"/></td>\n+                <td><div class=\"imagebutton\" id=\"removeformat\"><img src=\"{$home}/images/icons/removeformat.gif\" alt=\"Remove Format\" title=\"Remove Format\"/></div></td>\n+                <td><div class=\"spacer\"/></td>\n+                <td><div class=\"imagebutton\" id=\"createlink\"><img src=\"{$home}/images/icons/link.gif\" alt=\"Link Selection\" title=\"Link Selection\"/></div></td>\n+                <td><div class=\"imagebutton\" id=\"unlink\"><img src=\"{$home}/images/icons/unlink.gif\" alt=\"Unlink Selection\" title=\"Unlink Selection\"/></div></td>\n+                <td><div class=\"spacer\"/></td>\n+                <td><div class=\"imagebutton\" id=\"insertimage\"><img src=\"{$home}/images/icons/image.gif\" alt=\"Add Image\" title=\"Add Image\"/></div></td>\n+                <td><div class=\"imagebutton\" id=\"inserthorizontalrule\"><img src=\"{$home}/images/icons/horizontalrule.gif\" alt=\"Add Horizontal Rule\" title=\"Add Horizontal Rule\"/></div></td>\n+                <td><div class=\"spacer\"/></td>\n+                <td><div class=\"imagebutton\" id=\"insertorderedlist\"><img src=\"{$home}/images/icons/orderedlist.gif\" alt=\"Ordered List\" title=\"Ordered List\"/></div></td>\n+                <td><div class=\"imagebutton\" id=\"insertunorderedlist\"><img src=\"{$home}/images/icons/unorderedlist.gif\" alt=\"Unordered List\" title=\"Unordered List\"/></div></td>\n+                <td><div class=\"spacer\"/></td>\n+                <td><div class=\"imagebutton\" id=\"outdent\"><img src=\"{$home}/images/icons/outdent.gif\" alt=\"Outdent\" title=\"Outdent\"/></div></td>\n+                <td><div class=\"imagebutton\" id=\"indent\"><img src=\"{$home}/images/icons/indent.gif\" alt=\"Indent\" title=\"Indent\"/></div></td>\n+                <td width=\"100%\" align=\"center\" style=\"white-space: nowrap;\">\n+                  <span id=\"block_selector\">\n+                    <xsl:text>Block: </xsl:text>\n+                    <select id=\"formatblock\">\n+                      <option value=\"\">Normal</option>\n+                      <option value=\"p\">Paragraph</option>\n+                      <option value=\"h1\">Heading 1</option>\n+                      <option value=\"h2\">Heading 2</option>\n+                      <option value=\"h3\">Heading 3</option>\n+                      <option value=\"h4\">Heading 4</option>\n+                    </select>\n+                  </span>\n+                  <span id=\"class_selector\">\n+                    <xsl:text>Class: </xsl:text>\n+                    <select id=\"alternatives\">\n+                      <option>whatever</option>\n+                    </select>\n+                  </span>\n+                </td>\n+                <td style=\"white-space: nowrap;\">\n+                  <input type=\"checkbox\" name=\"online\">\n+                    <xsl:if test=\"n:news/@online='on'\">\n+                      <xsl:attribute name=\"checked\">true</xsl:attribute>\n+                    </xsl:if>\n+                  </input>\n+                  <label for=\"online\">published</label>\n+                </td>\n+              </tr>\n+            </table>\n+          </div>\n \n-\t <div id=\"image_inputs\"/>\n+          <xsl:apply-templates/>\n \n-\t <div class=\"field\">\n-\t  <table cellpadding=\"0\" cellspacing=\"0\">\n-\t   <tr>\n-\t    <td align=\"left\">Content:</td>\n-\t    <td align=\"right\" width=\"100%\"><input type=\"checkbox\" id=\"wysiwyg-checkbox\" onclick=\"wysiwyg(!this.checked)\"/>WYSIWYG</td>\n-\t   </tr>\n-\t  </table>\n-\t  <iframe id=\"edit\" src=\"content\" width=\"100%\" height=\"400px\" scrolling=\"auto\" frameborder=\"0\">Get a modern browser</iframe>\n-\t  <div id=\"path\">...</div>\n-\t </div>\n-\t \n-\t <div id=\"previous_innerHTML\">#{innerHTML}</div>\n-\t</div>\n+          <div id=\"controls\">\n+            <!--Version: <select name=\"version\">\n+              <t:forEach select=\"{string('#{versions}')}\" xmlns:t=\"http://apache.org/cocoon/templates/jx/1.0\">\n+                <option>#{.}</option>\n+              </t:forEach>\n+            </select>\n+            <input type=\"button\" value=\"Restore\" onclick=\"doAction('restore')\"/--> \n+            <input type=\"button\" value=\"Revert\" onclick=\"doAction('revert')\"/> \n+            <input type=\"button\" value=\"Delete\" onclick=\"doAction('delete')\"/> \n+            <input type=\"button\" value=\"Save\" onclick=\"doAction('save')\"/>\n+            <input type=\"button\" value=\"Finish\" onclick=\"doAction('finish')\"/>\n+          </div>\n \n+        </form>\n+      </body>\n+    </html>\n   </xsl:template>\n-   \n+\n+  <xsl:template match=\"n:news\">\n+    <div id=\"page\">\n+      <div class=\"field\">Title:<br/><input type=\"text\" name=\"title\" size=\"40\" value=\"{n:title}\"/></div>\n+      <div id=\"image_inputs\"/>\n+      <div class=\"field\">\n+        <table cellpadding=\"0\" cellspacing=\"0\">\n+          <tr>\n+            <td align=\"left\">Content:</td>\n+            <td align=\"right\" width=\"100%\"><input type=\"checkbox\" id=\"wysiwyg-checkbox\" onclick=\"wysiwyg(!this.checked)\"/>WYSIWYG</td>\n+          </tr>\n+        </table>\n+        <iframe id=\"edit\" src=\"content\" width=\"100%\" height=\"400px\" scrolling=\"auto\" frameborder=\"0\">Get a modern browser</iframe>\n+        <div id=\"path\">...</div>\n+      </div>\n+      <div id=\"previous_innerHTML\">#{innerHTML}</div>\n+    </div>\n+  </xsl:template>\n+\n </xsl:stylesheet>"
            },
            {
                "sha": "6395464839207cb8ffca12e854d8cff81939b034",
                "filename": "src/blocks/linotype/samples/stylesheets/news2html-content.xslt",
                "status": "modified",
                "additions": 11,
                "deletions": 12,
                "changes": 23,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-content.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-content.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2html-content.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,15 +1,14 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<xsl:stylesheet version=\"1.0\" \n- xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n- xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\" \n- xmlns:h=\"http://www.w3.org/1999/xhtml\"\n->\n-  \n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n+                              xmlns:h=\"http://www.w3.org/1999/xhtml\"\n+                              xmlns=\"http://www.w3.org/1999/xhtml\">\n+\n   <xsl:param name=\"home\"/>\n-  \n+\n   <xsl:template match=\"/\">\n-   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n+   <html>\n     <head>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/main.css\"/>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/editor_page.css\"/>\n@@ -19,19 +18,19 @@\n     </body>\n    </html>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"h:strong\">\n    <b><xsl:apply-templates/></b>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"h:em\">\n    <i><xsl:apply-templates/></i>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"@*|node()\">\n    <xsl:copy>\n     <xsl:apply-templates select=\"@*|node()\"/>\n    </xsl:copy>\n   </xsl:template>\n-     \n+\n </xsl:stylesheet>"
            },
            {
                "sha": "0a00acf8ab84c59179bf67a801048749803aa0fc",
                "filename": "src/blocks/linotype/samples/stylesheets/news2html-history.xslt",
                "status": "modified",
                "additions": 20,
                "deletions": 20,
                "changes": 40,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-history.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-history.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2html-history.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,41 +1,41 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\">\n-    \n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\">\n+\n   <xsl:param name=\"home\"/>\n-  \n+\n   <xsl:template match=\"/\">\n    <html>\n     <head>\n      <title>News History</title>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/main.css\"/>\n     </head>\n     <body>\n-    \n-<div id=\"sidebar\">\n- <a href=\"{$home}/\"><img alt=\"Linotype\" src=\"{$home}/images/linotype.jpg\" width=\"156px\" height=\"207px\" /></a>\n-</div>\n-\n-<div id=\"bottombar\">\n- <a href=\"http://cocoon.apache.org\" title=\"Apache Cocoon\"><img alt=\"Powered by Cocoon\" src=\"{$home}/images/cocoon.jpg\"/></a>\n-</div>\n-\n-<div id=\"page\">\n- <h1>News History</h1>\n- <h2>The whole braindump</h2>\n- <xsl:apply-templates select=\"//n:news[@online = 'on']\"/>\n-</div>\n-    \n+     <div id=\"sidebar\">\n+      <a href=\"{$home}/\"><img alt=\"Linotype\" src=\"{$home}/images/linotype.jpg\" width=\"156px\" height=\"207px\" /></a>\n+     </div>\n+\n+     <div id=\"bottombar\">\n+      <a href=\"http://cocoon.apache.org\" title=\"Apache Cocoon\"><img alt=\"Powered by Cocoon\" src=\"{$home}/images/cocoon.jpg\"/></a>\n+     </div>\n+\n+     <div id=\"page\">\n+      <h1>News History</h1>\n+      <h2>The whole braindump</h2>\n+      <xsl:apply-templates select=\"//n:news[@online = 'on']\"/>\n+     </div>\n+\n     </body>\n    </html>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"n:news\">\n    <xsl:variable name=\"id\" select=\"../@id\"/>\n    <div class=\"news\" online=\"{@online}\">\n     <h1><img src=\"{$home}/images/hand.jpg\" alt=\"\"/><a href=\"news/{$id}/\"><xsl:value-of select=\"n:title\"/></a></h1>\n     <h2><xsl:value-of select=\"@creation-date\"/> ~ <xsl:value-of select=\"@creation-time\"/></h2>\n    </div>\n   </xsl:template>\n-    \n+\n </xsl:stylesheet>"
            },
            {
                "sha": "f470ba944f4cd603a6bf4698bb0d659fae0dabf3",
                "filename": "src/blocks/linotype/samples/stylesheets/news2html-homepage.xslt",
                "status": "modified",
                "additions": 15,
                "deletions": 16,
                "changes": 31,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-homepage.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-homepage.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2html-homepage.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,22 +1,21 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<xsl:stylesheet version=\"1.0\" \n- xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n- xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n- xmlns:h=\"http://www.w3.org/1999/xhtml\"\n->\n-  \n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n+                              xmlns:h=\"http://www.w3.org/1999/xhtml\"\n+                              xmlns=\"http://www.w3.org/1999/xhtml\">\n+\n   <xsl:param name=\"home\"/>\n   <xsl:param name=\"count\"/>\n-  \n+\n   <xsl:template match=\"/\">\n    <xsl:for-each select=\"//n:news[@online = 'on']\">\n     <xsl:if test=\"position() &lt;= number($count)\">\n      <xsl:apply-templates select=\".\"/>\n     </xsl:if>\n    </xsl:for-each>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"n:news\">\n    <xsl:variable name=\"id\" select=\"../@id\"/>\n    <div class=\"news\">\n@@ -27,7 +26,7 @@\n     <div class=\"separator\"><img align=\"center\" src=\"images/separator1.jpg\"/></div>\n    </div>\n   </xsl:template>\n-  \n+\n   <xsl:template name=\"find-id\">\n    <xsl:param name=\"node\"/>\n    <xsl:choose>\n@@ -42,13 +41,13 @@\n     </xsl:otherwise>\n    </xsl:choose>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"h:body\">\n    <div class=\"body\">\n     <xsl:apply-templates/>\n    </div>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"@src\" priority=\"1\">\n    <xsl:variable name=\"id\"><xsl:call-template name=\"find-id\"><xsl:with-param name=\"node\" select=\"..\"/></xsl:call-template></xsl:variable>\n    <xsl:choose>\n@@ -71,21 +70,21 @@\n     <xsl:apply-templates select=\"text()[position() &gt; 1]|@*|*\"/>\n    </xsl:copy>\n   </xsl:template-->\n-  \n+\n   <xsl:template match=\"h:p[1]\">\n    <p class=\"first\">\n     <xsl:apply-templates/>\n    </p>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"hr\">\n-  \t<div class=\"separator\"><img src=\"images/separator2.jpg\"/></div>\n+    <div class=\"separator\"><img src=\"images/separator2.jpg\"/></div>\n   </xsl:template>\n-    \n+\n   <xsl:template match=\"@*|node()\">\n    <xsl:copy>\n     <xsl:apply-templates select=\"@*|node()\"/>\n    </xsl:copy>\n   </xsl:template>\n-     \n+\n </xsl:stylesheet>"
            },
            {
                "sha": "96b201d4910e131a47a9f383142b82b4dce30a43",
                "filename": "src/blocks/linotype/samples/stylesheets/news2html-private.xslt",
                "status": "modified",
                "additions": 22,
                "deletions": 21,
                "changes": 43,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-private.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-private.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2html-private.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,42 +1,43 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\">\n-    \n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\">\n+\n   <xsl:param name=\"home\"/>\n-  \n+\n   <xsl:template match=\"/\">\n    <html>\n     <head>\n      <title>News List</title>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"{$home}/styles/main.css\"/>\n     </head>\n     <body>\n-    \n-<div id=\"sidebar\">\n- <a href=\"{$home}/\"><img alt=\"Linotype\" src=\"{$home}/images/linotype.jpg\" width=\"156px\" height=\"207px\" /></a>\n-</div>\n-\n-<div id=\"bottombar\">\n- <a href=\"http://cocoon.apache.org\" title=\"Apache Cocoon\"><img alt=\"Powered by Cocoon\" src=\"{$home}/images/cocoon.jpg\"/></a>\n-</div>\n-\n-<div id=\"page\">\n- <h1>News List</h1>\n- <h2>where the juice is</h2>\n- <h3><a href=\"edit/news/template/\">Write a news</a> | <a href=\"logout\">Logout</a></h3>\n- <xsl:apply-templates select=\"//n:news\"/>\n-</div>\n-    \n+\n+     <div id=\"sidebar\">\n+      <a href=\"{$home}/\"><img alt=\"Linotype\" src=\"{$home}/images/linotype.jpg\" width=\"156px\" height=\"207px\" /></a>\n+     </div>\n+\n+     <div id=\"bottombar\">\n+      <a href=\"http://cocoon.apache.org\" title=\"Apache Cocoon\"><img alt=\"Powered by Cocoon\" src=\"{$home}/images/cocoon.jpg\"/></a>\n+     </div>\n+\n+     <div id=\"page\">\n+      <h1>News List</h1>\n+      <h2>where the juice is</h2>\n+      <h3><a href=\"edit/news/template/\">Write a news</a> | <a href=\"logout\">Logout</a></h3>\n+      <xsl:apply-templates select=\"//n:news\"/>\n+     </div>\n+\n     </body>\n    </html>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"n:news\">\n    <xsl:variable name=\"id\" select=\"../@id\"/>\n    <div class=\"news\" online=\"{@online}\">\n     <h1><img src=\"{$home}/images/hand.jpg\" alt=\"\"/><a href=\"edit/news/{$id}/\"><xsl:value-of select=\"n:title\"/></a></h1>\n     <h2><xsl:value-of select=\"@creation-date\"/> ~ <xsl:value-of select=\"@creation-time\"/></h2>\n    </div>\n   </xsl:template>\n-    \n+\n </xsl:stylesheet>"
            },
            {
                "sha": "b1bc0db7e1454a9e49420510091d73458d83c35c",
                "filename": "src/blocks/linotype/samples/stylesheets/news2html-single.xslt",
                "status": "modified",
                "additions": 59,
                "deletions": 66,
                "changes": 125,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-single.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2html-single.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2html-single.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,81 +1,74 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<xsl:stylesheet version=\"1.0\" \n- xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n- xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\" \n- xmlns:h=\"http://www.w3.org/1999/xhtml\"\n->\n-  \n-  <xsl:param name=\"home\"/>\n-  \n-  <xsl:template match=\"n:news\">\n-<html xml:lang=\"en\" lang=\"en\">\n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\" \n+                              xmlns:h=\"http://www.w3.org/1999/xhtml\"\n+                              xmlns=\"http://www.w3.org/1999/xhtml\">\n \n- <head>\n-  <title>Stefano's Linotype ~ <xsl:value-of select=\"n:title\"/></title>\n+  <xsl:param name=\"home\"/>\n \n-  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n+  <xsl:template match=\"n:news\">\n+    <html xml:lang=\"en\" lang=\"en\">\n+      <head>\n+        <title>Stefano's Linotype ~ <xsl:value-of select=\"n:title\"/></title>\n+        <meta name=\"DC.title\" content=\"{n:title}\"/>\n+        <meta name=\"DC.author.personalName\" content=\"Stefano Mazzocchi\"/>\n+        <meta name=\"keywords\" lang=\"en\" content=\"{n:keywords}\"/>\n+        <meta name=\"DC.date.created\" content=\"{@creation-date}\"/>\n+        <meta name=\"DC.date.lastModified\" content=\"{@creation-date}\"/>\n+        <meta name=\"DC.identifier\" content=\"http://www.betaversion.org/~stefano/linotype/\"/>\n \n-  <meta name=\"DC.title\" content=\"{n:title}\"/>\n-  <meta name=\"DC.author.personalName\" content=\"Stefano Mazzocchi\"/>\n-  <meta name=\"keywords\" lang=\"en\" content=\"{n:keywords}\"/>\n-  <meta name=\"DC.date.created\" content=\"{@creation-date}\"/>\n-  <meta name=\"DC.date.lastModified\" content=\"{@creation-date}\"/>\n-  <meta name=\"DC.identifier\" content=\"http://www.betaversion.org/~stefano/linotype/\"/>\n-  \n-  <link rel=\"stylesheet\" href=\"{$home}/styles/main.css\" type=\"text/css\"/>\n-  \n-  <rdf:RDF xmlns=\"http://web.resource.org/cc/\"\n-    xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n-   <Work rdf:about=\"\">\n-    <license rdf:resource=\"http://creativecommons.org/licenses/by-nc-sa/1.0/\" />\n-   </Work>\n-   <License rdf:about=\"http://creativecommons.org/licenses/by-nc-sa/1.0/\">\n-    <requires rdf:resource=\"http://web.resource.org/cc/Attribution\" />\n-    <requires rdf:resource=\"http://web.resource.org/cc/ShareAlike\" />\n-    <permits rdf:resource=\"http://web.resource.org/cc/Reproduction\" />\n-    <permits rdf:resource=\"http://web.resource.org/cc/Distribution\" />\n-    <permits rdf:resource=\"http://web.resource.org/cc/DerivativeWorks\" />\n-    <prohibits rdf:resource=\"http://web.resource.org/cc/CommercialUse\" />\n-    <requires rdf:resource=\"http://web.resource.org/cc/Notice\" />\n-   </License>\n-  </rdf:RDF>\n+        <link rel=\"stylesheet\" href=\"{$home}/styles/main.css\" type=\"text/css\"/>\n \n- </head>\n- \n-<body>\n+        <rdf:RDF xmlns=\"http://web.resource.org/cc/\"\n+                 xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n+                 xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n+         <Work rdf:about=\"\">\n+          <license rdf:resource=\"http://creativecommons.org/licenses/by-nc-sa/1.0/\" />\n+         </Work>\n+         <License rdf:about=\"http://creativecommons.org/licenses/by-nc-sa/1.0/\">\n+          <requires rdf:resource=\"http://web.resource.org/cc/Attribution\" />\n+          <requires rdf:resource=\"http://web.resource.org/cc/ShareAlike\" />\n+          <permits rdf:resource=\"http://web.resource.org/cc/Reproduction\" />\n+          <permits rdf:resource=\"http://web.resource.org/cc/Distribution\" />\n+          <permits rdf:resource=\"http://web.resource.org/cc/DerivativeWorks\" />\n+          <prohibits rdf:resource=\"http://web.resource.org/cc/CommercialUse\" />\n+          <requires rdf:resource=\"http://web.resource.org/cc/Notice\" />\n+         </License>\n+        </rdf:RDF>\n+      </head>\n+      <body>\n \n-<div id=\"bottombar\">\n- <a href=\"http://cocoon.apache.org\" title=\"Apache Cocoon\"><img alt=\"Powered by Cocoon\" src=\"{$home}/images/cocoon.jpg\"/></a>\n-</div>\n+        <div id=\"bottombar\">\n+          <a href=\"http://cocoon.apache.org\" title=\"Apache Cocoon\"><img alt=\"Powered by Cocoon\" src=\"{$home}/images/cocoon.jpg\"/></a>\n+        </div>\n \n-<div id=\"sidebar\">\n- <a href=\"{$home}/private/\"><img alt=\"Linotype\" src=\"{$home}/images/linotype.jpg\" width=\"156px\" height=\"207px\" /></a>\n-</div>\n+        <div id=\"sidebar\">\n+          <a href=\"{$home}/private/\"><img alt=\"Linotype\" src=\"{$home}/images/linotype.jpg\" width=\"156px\" height=\"207px\" /></a>\n+        </div>\n \n-<div id=\"page\">\n- <div class=\"news\">\n-  <h1><img src=\"{$home}/images/hand.jpg\" alt=\"\"/><xsl:value-of select=\"n:title\"/></h1>\n-  <h2><xsl:value-of select=\"@creation-date\"/> ~ <xsl:value-of select=\"@creation-time\"/></h2>\n-  <div class=\"body\">\n-   <xsl:apply-templates select=\"h:body\"/>\n-  </div>\n- </div>\n-</div>\n+        <div id=\"page\">\n+          <div class=\"news\">\n+            <h1><img src=\"{$home}/images/hand.jpg\" alt=\"\"/><xsl:value-of select=\"n:title\"/></h1>\n+            <h2><xsl:value-of select=\"@creation-date\"/> ~ <xsl:value-of select=\"@creation-time\"/></h2>\n+            <div class=\"body\">\n+              <xsl:apply-templates select=\"h:body\"/>\n+            </div>\n+          </div>\n+        </div>\n \n-<div id=\"footer\">\n- <a href=\"http://creativecommons.org/licenses/by-nc-sa/1.0/\" title=\"Creative Commons: some rights reserved\"><img alt=\"Creative Commons License\" src=\"{$home}/images/cc.gif\"/></a>\n-</div>\n+        <div id=\"footer\">\n+          <a href=\"http://creativecommons.org/licenses/by-nc-sa/1.0/\" title=\"Creative Commons: some rights reserved\"><img alt=\"Creative Commons License\" src=\"{$home}/images/cc.gif\"/></a>\n+        </div>\n \n-</body>\n-</html>\n+      </body>\n+    </html>\n   </xsl:template>\n-  \n+\n   <xsl:template match=\"@*|node()\">\n-   <xsl:copy>\n-    <xsl:apply-templates select=\"@*|node()\"/>\n-   </xsl:copy>\n+    <xsl:copy>\n+      <xsl:apply-templates select=\"@*|node()\"/>\n+    </xsl:copy>\n   </xsl:template>\n-     \n+\n </xsl:stylesheet>"
            },
            {
                "sha": "555a2e9976a4f80205c73b5ad3b38b68ad514c68",
                "filename": "src/blocks/linotype/samples/stylesheets/news2rss-0.91.xslt",
                "status": "modified",
                "additions": 6,
                "deletions": 8,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2rss-0.91.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2rss-0.91.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2rss-0.91.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,17 +1,15 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<xsl:stylesheet version=\"1.0\" \n- xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n- xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n- xmlns:h=\"http://www.w3.org/1999/xhtml\"\n->\n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n+                              xmlns:h=\"http://www.w3.org/1999/xhtml\">\n   \n   <xsl:param name=\"home\"/>\n   <xsl:param name=\"count\"/>\n   \n   <xsl:template match=\"/\">\n    <rss version=\"0.91\">\n-\t<channel>\n+    <channel>\n      <title>Stefano's Linotype</title>\n      <link>http://www.betaversion.org/~stefano/linotype/</link>\n      <description>Stefano Mazzocchi's Weblog</description>\n@@ -24,8 +22,8 @@\n   <xsl:template match=\"n:news\">\n    <item>\n     <title><xsl:value-of select=\"n:title\"/></title>\n-\t<link><xsl:value-of select=\"$home\"/>/<xsl:value-of select=\"../@id\"/>/</link>\n-\t<description><xsl:apply-templates select=\"h:body\"/></description>\n+    <link><xsl:value-of select=\"$home\"/>/<xsl:value-of select=\"../@id\"/>/</link>\n+    <description><xsl:apply-templates select=\"h:body\"/></description>\n    </item>\n   </xsl:template>\n "
            },
            {
                "sha": "72b5aece7fd1728304aa5024c8aa1deb21b4fcd5",
                "filename": "src/blocks/linotype/samples/stylesheets/news2rss-2.0.xslt",
                "status": "modified",
                "additions": 4,
                "deletions": 6,
                "changes": 10,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2rss-2.0.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/news2rss-2.0.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/news2rss-2.0.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,11 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<xsl:stylesheet version=\"1.0\" \n- xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n- xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n- xmlns:h=\"http://www.w3.org/1999/xhtml\"\n- xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n->\n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \n+                              xmlns:n=\"http://www.betaversion.org/linotype/news/1.0\"\n+                              xmlns:h=\"http://www.w3.org/1999/xhtml\"\n+                              xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n   \n   <xsl:param name=\"home\"/>\n   <xsl:param name=\"count\"/>"
            },
            {
                "sha": "64ac9651527e57204df46d27bbfb26689e6b9d15",
                "filename": "src/blocks/linotype/samples/stylesheets/request2news.xslt",
                "status": "modified",
                "additions": 5,
                "deletions": 6,
                "changes": 11,
                "blob_url": "https://github.com/apache/cocoon/blob/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/request2news.xslt",
                "raw_url": "https://github.com/apache/cocoon/raw/2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda/src/blocks/linotype/samples/stylesheets/request2news.xslt",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/linotype/samples/stylesheets/request2news.xslt?ref=2b954bd477a99c7f1fe887b3fdfcd62b41b6bdda",
                "patch": "@@ -1,11 +1,10 @@\n <?xml version=\"1.0\"?>\n \n-<xsl:stylesheet version=\"1.0\"\n-                xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n-                xmlns:r=\"http://apache.org/cocoon/request/2.0\"\n-                xmlns:h=\"http://www.w3.org/1999/xhtml\"\n-                xmlns=\"http://www.w3.org/1999/xhtml\"\n-                exclude-result-prefixes=\"h r\">\n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                              xmlns:r=\"http://apache.org/cocoon/request/2.0\"\n+                              xmlns:h=\"http://www.w3.org/1999/xhtml\"\n+                              xmlns=\"http://www.w3.org/1999/xhtml\"\n+                              exclude-result-prefixes=\"h r\">\n \n   <xsl:template match=\"/\">\n    <xsl:apply-templates select=\"//r:requestParameters\"/>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/95daa51b028d7dfa27bcb4e146fd976a50be1aa6",
        "message": "Fixed test case for Woody's DynamicSelectionList class.\nThere's a NPE when the test is finished that I wasn't able to remove, but it shouldn't influence the outcome of the test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26030 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_131",
        "file": [
            {
                "sha": "a219b46139ad6babf6d670ec604007eb22e2185f",
                "filename": "src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.dest.xml",
                "status": "added",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.dest.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.dest.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.dest.xml?ref=4cb9ba4e11715270a0feae03bbbc75b9e79b54c5",
                "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<wi:selection-list xmlns:wi=\"http://apache.org/cocoon/woody/instance/1.0\">\n+  \n+  <wi:item value=\"10/11/03\"><wi:label>10/11/03</wi:label></wi:item>\n+  <wi:item value=\"2/4/63\"><wi:label>My birthdate</wi:label></wi:item>\n+</wi:selection-list>\n\\ No newline at end of file"
            },
            {
                "sha": "2654ce61b8b49a2238a36b8d78b101005b03383b",
                "filename": "src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.java",
                "status": "modified",
                "additions": 71,
                "deletions": 18,
                "changes": 89,
                "blob_url": "https://github.com/apache/cocoon/blob/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.java",
                "raw_url": "https://github.com/apache/cocoon/raw/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.java?ref=4cb9ba4e11715270a0feae03bbbc75b9e79b54c5",
                "patch": "@@ -53,16 +53,22 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.io.Writer;\n import java.util.Locale;\n \n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.FactoryConfigurationError;\n import javax.xml.parsers.ParserConfigurationException;\n-\n-import junit.framework.TestCase;\n-\n-import org.apache.cocoon.woody.datatype.typeimpl.IntegerType;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamResult;\n+\n+import org.apache.avalon.excalibur.testcase.ExcaliburTestCase;\n+import org.apache.avalon.framework.service.ServiceManager;\n+import org.apache.avalon.framework.service.WrapperServiceManager;\n+import org.apache.cocoon.woody.Constants;\n import org.apache.cocoon.xml.dom.DOMBuilder;\n import org.apache.cocoon.xml.dom.DocumentWrapper;\n import org.apache.excalibur.source.Source;\n@@ -72,14 +78,19 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.excalibur.xml.sax.XMLizable;\n import org.custommonkey.xmlunit.Diff;\n import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n import org.xml.sax.ContentHandler;\n import org.xml.sax.SAXException;\n \n /**\n  * Test case for Woody's DynamicSelectionList datatype.\n- * @version CVS $Id: DynamicSelectionListTestCase.java,v 1.1 2003/10/11 15:57:00 ugo Exp $\n+ * @version CVS $Id: DynamicSelectionListTestCase.java,v 1.2 2003/10/19 17:20:56 ugo Exp $\n  */\n-public class DynamicSelectionListTestCase extends TestCase {\n+public class DynamicSelectionListTestCase extends ExcaliburTestCase {\n+\n+    protected ServiceManager serviceManager;\n+    protected DatatypeManager datatypeManager;\n+    protected DocumentBuilder parser;\n \n     /**\n      * Construct a new test case.\n@@ -88,21 +99,48 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n     public DynamicSelectionListTestCase(String name) {\n         super(name);\n     }\n+\n+    /* (non-Javadoc)\n+     * @see junit.framework.TestCase#setUp()\n+     */\n+    protected void setUp() throws Exception {\n+        super.setUp();\n+        serviceManager = new WrapperServiceManager(manager); \n+        datatypeManager = (DatatypeManager) serviceManager.lookup(DatatypeManager.ROLE);\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+        parser = factory.newDocumentBuilder();\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see junit.framework.TestCase#tearDown()\n+     */\n+    protected void tearDown() throws Exception {\n+        if (datatypeManager != null) {\n+            serviceManager.release(datatypeManager);\n+        }\n+        super.tearDown();\n+    }\n     \n     /**\n      * Test the generateSaxFragment method.\n      * @throws MalformedURLException\n      * @throws ParserConfigurationException\n      */\n     public void testGenerateSaxFragment() throws Exception {\n-        DynamicSelectionList list = \n-            new DynamicSelectionList(new IntegerType(), null, null);\n         DOMBuilder dest = new DOMBuilder();\n         XMLizableSource source =\n             new XMLizableSource(\"resource://org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.source.xml\");\n+        Element datatypeElement = (Element) source.getDocument().getElementsByTagNameNS(Constants.WD_NS, \"convertor\").item(0);\n+        Datatype datatype = datatypeManager.createDatatype(datatypeElement, false);\n+        DynamicSelectionList list = \n+            new DynamicSelectionList(datatype, null, serviceManager);\n         list.generateSaxFragment(dest, Locale.ENGLISH, source);\n-        assertEqual(\"Test if input is equal to output\",\n-            source.getDocument(), dest.getDocument());\n+        ResourceSource expectedSource =\n+            new ResourceSource(\"resource://org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.dest.xml\");\n+        Document expected = parser.parse(expectedSource.getInputStream());\n+        assertEqual(\"Test if output is what is expected\",\n+                expected, dest.getDocument());\n     }\n \n     /**\n@@ -113,13 +151,33 @@ public void testGenerateSaxFragment() throws Exception {\n      */\n     private void assertEqual(String message, Document expected, Document actual) {\n         expected.getDocumentElement().normalize();\n-        // DIRTY HACK WARNING: we remove the \"xmlns:wd\" attribute reported\n+        actual.getDocumentElement().normalize();\n+        // DIRTY HACK WARNING: we add the \"xmlns:wi\" attribute reported\n         // by DOM, as expected, but not generated by the method under test,\n         // otherwise the comparison would fail. \n-        expected.getDocumentElement().removeAttribute(\"xmlns:wd\");\n+        actual.getDocumentElement().setAttribute(Constants.WI_PREFIX,\n+                Constants.WI_NS);\n         Diff diff =  new Diff(expected, actual);\n         assertTrue(message + \", \" + diff.toString(), diff.similar());\n     }\n+\n+    /**\n+     * Print a document to a writer for debugging purposes.\n+     * @param document The document to print.\n+     * @param out The writer to write to.\n+     */\n+    public final void print(Document document, Writer out) {\n+        TransformerFactory factory = TransformerFactory.newInstance();\n+        try\n+        {\n+          javax.xml.transform.Transformer serializer = factory.newTransformer();\n+          serializer.transform(new DOMSource(document), new StreamResult(out));\n+        } \n+        catch (TransformerException te)\n+        {\n+          te.printStackTrace();\n+        }\n+    }\n     \n     /**\n      * A class that implements both the \n@@ -128,8 +186,6 @@ private void assertEqual(String message, Document expected, Document actual) {\n      * {@link org.apache.cocoon.xml.domDocumentWrapper} and to a \n      * {@link org.apache.excalibur.source.impl.ResourceSource},\n      * respectively.\n-     * \n-     * @version CVS $Id: DynamicSelectionListTestCase.java,v 1.1 2003/10/11 15:57:00 ugo Exp $\n      */\n     class XMLizableSource implements XMLizable, Source {\n \n@@ -147,10 +203,7 @@ private void assertEqual(String message, Document expected, Document actual) {\n          */\n         public XMLizableSource(String uri) throws SAXException, IOException, ParserConfigurationException, FactoryConfigurationError {\n             source = new ResourceSource(uri);\n-            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n-            factory.setNamespaceAware(true);\n-            DocumentBuilder builder = factory.newDocumentBuilder();\n-            document = builder.parse(source.getInputStream());\n+            document = parser.parse(source.getInputStream());\n             wrapper = new DocumentWrapper(document);\n         }\n         "
            },
            {
                "sha": "21981a94a4885b94b0853f5a20e2a69dc5cf1162",
                "filename": "src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.source.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.source.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.source.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.source.xml?ref=4cb9ba4e11715270a0feae03bbbc75b9e79b54c5",
                "patch": "@@ -2,15 +2,15 @@\n \n <!--+\n     |   Source file for DynamicSelectionList test case.\n-    |   $Id: DynamicSelectionListTestCase.source.xml,v 1.1 2003/10/11 15:57:00 ugo Exp $\n+    |   $Id: DynamicSelectionListTestCase.source.xml,v 1.2 2003/10/19 17:20:56 ugo Exp $\n     +-->\n \n-<wd:selection-list xmlns:wd=\"http://cocoon.apache.org/woody/definition/1.0\">\n-  <wd:convertor type=\"formatting\">\n+<wd:selection-list xmlns:wd=\"http://apache.org/cocoon/woody/definition/1.0\">\n+  <wd:convertor type=\"formatting\" base=\"date\">\n     <wd:patterns>\n       <wd:pattern>yyyy-MM-dd</wd:pattern>\n     </wd:patterns>\n   </wd:convertor>\n   <wd:item value=\"2003-10-11\"/>\n   <wd:item value=\"1963-02-04\"><wd:label>My birthdate</wd:label></wd:item>\n-</wd:selection-list>\n\\ No newline at end of file\n+</wd:selection-list>"
            },
            {
                "sha": "d9a21741acd68ac01e88055f64f174cdeb92681d",
                "filename": "src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.xtest",
                "status": "added",
                "additions": 93,
                "deletions": 0,
                "changes": 93,
                "blob_url": "https://github.com/apache/cocoon/blob/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.xtest",
                "raw_url": "https://github.com/apache/cocoon/raw/4cb9ba4e11715270a0feae03bbbc75b9e79b54c5/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.xtest",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/test/org/apache/cocoon/woody/datatype/DynamicSelectionListTestCase.xtest?ref=4cb9ba4e11715270a0feae03bbbc75b9e79b54c5",
                "patch": "@@ -0,0 +1,93 @@\n+<?xml version=\"1.0\" ?>\n+<testcase>\n+ <annotation>\n+  Test Cases: Woody Dynamic Selection List\n+ </annotation>\n+\n+ <logkit>\n+  <factories>\n+   <factory type=\"stream\" class=\"org.apache.avalon.excalibur.logger.factory.StreamTargetFactory\"/>\n+  </factories>\n+  <targets>\n+   <stream id=\"root\">\n+    <stream>System.out</stream>\n+    <format type=\"extended\">\n+     %7.7{priority} %5.5{time}   [%9.9{category}] (%{context}): %{message}\\n%{throwable}\n+    </format>\n+   </stream>\n+  </targets>\n+  <categories>\n+   <category name=\"test\" log-level=\"ERROR\">\n+    <log-target id-ref=\"root\"/>\n+   </category>\n+  </categories>\n+ </logkit>\n+\n+ <context/>\n+\n+ <roles>\n+\n+  <role name=\"org.apache.cocoon.woody.datatype.DatatypeManager\"\n+    shorthand=\"woody-datatype\"\n+    default-class=\"org.apache.cocoon.woody.datatype.DefaultDatatypeManager\"/>\n+\n+  <role name=\"org.apache.cocoon.woody.expression.ExpressionManager\"\n+    shorthand=\"woody-expression\"\n+    default-class=\"org.apache.cocoon.woody.expression.DefaultExpressionManager\"/>\n+\n+ </roles>\n+\n+ <components>\n+  <woody-datatype logger=\"woody\">\n+    <datatypes>\n+      <datatype name=\"string\" src=\"org.apache.cocoon.woody.datatype.typeimpl.StringTypeBuilder\">\n+        <convertors default=\"dummy\" plain=\"dummy\">\n+          <convertor name=\"dummy\" src=\"org.apache.cocoon.woody.datatype.convertor.DummyStringConvertorBuilder\"/>\n+        </convertors>\n+      </datatype>\n+      <datatype name=\"long\" src=\"org.apache.cocoon.woody.datatype.typeimpl.LongTypeBuilder\">\n+        <convertors default=\"formatting\" plain=\"plain\">\n+          <convertor name=\"plain\" src=\"org.apache.cocoon.woody.datatype.convertor.PlainLongConvertorBuilder\"/>\n+          <convertor name=\"formatting\" src=\"org.apache.cocoon.woody.datatype.convertor.FormattingLongConvertorBuilder\"/>\n+        </convertors>\n+      </datatype>\n+      <datatype name=\"decimal\" src=\"org.apache.cocoon.woody.datatype.typeimpl.DecimalTypeBuilder\">\n+        <convertors default=\"formatting\" plain=\"plain\">\n+          <convertor name=\"plain\" src=\"org.apache.cocoon.woody.datatype.convertor.PlainDecimalConvertorBuilder\"/>\n+          <convertor name=\"formatting\" src=\"org.apache.cocoon.woody.datatype.convertor.FormattingDecimalConvertorBuilder\"/>\n+        </convertors>\n+      </datatype>\n+      <datatype name=\"date\" src=\"org.apache.cocoon.woody.datatype.typeimpl.DateTypeBuilder\">\n+        <convertors default=\"formatting\" plain=\"millis\">\n+          <convertor name=\"formatting\" src=\"org.apache.cocoon.woody.datatype.convertor.FormattingDateConvertorBuilder\"/>\n+          <convertor name=\"millis\" src=\"org.apache.cocoon.woody.datatype.convertor.MillisDateConvertorBuilder\"/>\n+        </convertors>\n+      </datatype>\n+      <datatype name=\"boolean\" src=\"org.apache.cocoon.woody.datatype.typeimpl.BooleanTypeBuilder\">\n+        <convertors default=\"plain\" plain=\"plain\">\n+          <convertor name=\"plain\" src=\"org.apache.cocoon.woody.datatype.convertor.PlainBooleanConvertorBuilder\"/>\n+        </convertors>\n+      </datatype>  \n+      <datatype name=\"integer\" src=\"org.apache.cocoon.woody.datatype.typeimpl.IntegerTypeBuilder\">\n+        <convertors default=\"formatting\" plain=\"plain\">\n+          <convertor name=\"plain\" src=\"org.apache.cocoon.woody.datatype.convertor.PlainIntegerConvertorBuilder\"/>\n+          <convertor name=\"formatting\" src=\"org.apache.cocoon.woody.datatype.convertor.FormattingIntegerConvertorBuilder\"/>\n+        </convertors>\n+      </datatype>  \n+    </datatypes>\n+    <validation-rules>\n+      <validation-rule name=\"length\" src=\"org.apache.cocoon.woody.datatype.validationruleimpl.LengthValidationRuleBuilder\"/>\n+      <validation-rule name=\"email\" src=\"org.apache.cocoon.woody.datatype.validationruleimpl.EmailValidationRuleBuilder\"/>\n+      <validation-rule name=\"value-count\" src=\"org.apache.cocoon.woody.datatype.validationruleimpl.ValueCountValidationRuleBuilder\"/>\n+      <validation-rule name=\"range\" src=\"org.apache.cocoon.woody.datatype.validationruleimpl.RangeValidationRuleBuilder\"/>\n+      <validation-rule name=\"assert\" src=\"org.apache.cocoon.woody.datatype.validationruleimpl.AssertValidationRuleBuilder\"/>\n+      <validation-rule name=\"mod10\" src=\"org.apache.cocoon.woody.datatype.validationruleimpl.Mod10ValidationRuleBuilder\"/>\n+      <validation-rule name=\"regexp\" src=\"org.apache.cocoon.woody.datatype.validationruleimpl.RegExpValidationRuleBuilder\"/>\n+    </validation-rules>\n+  </woody-datatype>\n+\n+  <woody-expression logger=\"woody.expression\"/>\n+\n+ </components>\n+\n+</testcase>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/09bd57da9b980d3910db1720b84991c700816589",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/72d3a6f97aba6041d2e262899ba3204510a5b57f",
        "message": "Fixing NPE in releasing components from a selector: \r\nthe components were released in the wrong order: first the selector and\r\nthen the components from the selector...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25252 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_132",
        "file": [
            {
                "sha": "dc71609d540eb5f504c4c7d3737b996c842c3f1d",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "status": "modified",
                "additions": 10,
                "deletions": 10,
                "changes": 20,
                "blob_url": "https://github.com/apache/cocoon/blob/09bd57da9b980d3910db1720b84991c700816589/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "raw_url": "https://github.com/apache/cocoon/raw/09bd57da9b980d3910db1720b84991c700816589/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/TreeProcessor.java?ref=09bd57da9b980d3910db1720b84991c700816589",
                "patch": "@@ -50,6 +50,11 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n */\n package org.apache.cocoon.components.treeprocessor;\n \n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n import org.apache.avalon.excalibur.component.RoleManageable;\n import org.apache.avalon.excalibur.component.RoleManager;\n import org.apache.avalon.excalibur.logger.LogKitManageable;\n@@ -79,17 +84,11 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n import org.apache.cocoon.environment.Environment;\n import org.apache.excalibur.source.Source;\n \n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-\n /**\n  * Interpreted tree-traversal implementation of a pipeline assembly language.\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n- * @version CVS $Id: TreeProcessor.java,v 1.9 2003/07/28 18:09:48 cziegeler Exp $\n+ * @version CVS $Id: TreeProcessor.java,v 1.10 2003/07/29 07:41:27 cziegeler Exp $\n  */\n \n public class TreeProcessor\n@@ -470,9 +469,10 @@ public void dispose() {\n      */\n     protected void disposeTree() {\n         if (this.disposableNodes != null) {\n-            Iterator iter = this.disposableNodes.iterator();\n-            while (iter.hasNext()) {\n-                ((Disposable)iter.next()).dispose();\n+            // we must dispose the nodes in reverse order\n+            // otherwise selector nodes are freed before the components node\n+            for(int i=this.disposableNodes.size()-1; i>-1; i--) {\n+                ((Disposable)disposableNodes.get(i)).dispose();\n             }\n             this.disposableNodes = null;\n         }"
            },
            {
                "sha": "ffe5f7d3d7cff4952d1694b0d2f5d2ffbd8531ad",
                "filename": "src/java/org/apache/cocoon/components/treeprocessor/sitemap/ComponentsSelector.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/cocoon/blob/09bd57da9b980d3910db1720b84991c700816589/src/java/org/apache/cocoon/components/treeprocessor/sitemap/ComponentsSelector.java",
                "raw_url": "https://github.com/apache/cocoon/raw/09bd57da9b980d3910db1720b84991c700816589/src/java/org/apache/cocoon/components/treeprocessor/sitemap/ComponentsSelector.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/treeprocessor/sitemap/ComponentsSelector.java?ref=09bd57da9b980d3910db1720b84991c700816589",
                "patch": "@@ -79,7 +79,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:sylvain@apache.org\">Sylvain Wallez</a>\n  * @author <a href=\"mailto:uv@upaya.co.uk\">Upayavira</a>\n- * @version CVS $Id: ComponentsSelector.java,v 1.3 2003/06/18 11:06:31 cziegeler Exp $\n+ * @version CVS $Id: ComponentsSelector.java,v 1.4 2003/07/29 07:41:26 cziegeler Exp $\n  */\n \n public class ComponentsSelector extends ExtendedComponentSelector\n@@ -343,6 +343,10 @@ public String getPipelineHint(Object hint) {\n         return pipelineHint;\n     }\n \n+    public void dispose() {\n+        super.dispose();\n+        this.parentSitemapSelector = null;\n+    }\n }\n \n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/fb5cfefb76871338fd4467d7d0715dee0e4be95e",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/3f9ff45400a6ba0fe1eb8bf92cb807341d628347",
        "message": "bugfix 4934 applied: made JSPs working in Resin that don't end on .jsp (thanks to Ryder Rishel)\r\navoid NPE in JSPEngineImplNamedDispatcherInclude when no RequestDispatcher is found\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@25031 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_133",
        "file": [
            {
                "sha": "78983bea8d8ffbf1a23f627bc6f8cdf8157e07cc",
                "filename": "src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImpl.java",
                "status": "modified",
                "additions": 6,
                "deletions": 3,
                "changes": 9,
                "blob_url": "https://github.com/apache/cocoon/blob/fb5cfefb76871338fd4467d7d0715dee0e4be95e/src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/fb5cfefb76871338fd4467d7d0715dee0e4be95e/src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImpl.java?ref=fb5cfefb76871338fd4467d7d0715dee0e4be95e",
                "patch": "@@ -75,13 +75,15 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * functionality - overrides the output method and returns the byte(s).\n  *\n  * @author <a href=\"mailto:dims@yahoo.com\">Davanum Srinivas</a>\n- * @version CVS $Id: JSPEngineImpl.java,v 1.6 2003/07/10 23:38:04 joerg Exp $\n+ * @version CVS $Id: JSPEngineImpl.java,v 1.7 2003/07/12 13:30:02 joerg Exp $\n  */\n public class JSPEngineImpl extends AbstractLogEnabled\n     implements JSPEngine, Parameterizable, ThreadSafe {\n \n-    /** The Servlet Include Path */\n+    /** The servlet include path. */\n     public static final String INC_SERVLET_PATH = \"javax.servlet.include.servlet_path\";\n+    /** The servlet request uri, needed for Resin. */\n+    public static final String INC_REQUEST_URI = \"javax.servlet.include.request_uri\";\n \n     /** The Default Servlet Class Name for Tomcat 3.X and 4.X*/\n     public static final String DEFAULT_SERVLET_CLASS = \"org.apache.jasper.servlet.JspServlet\";\n@@ -179,8 +181,9 @@ public MyServletRequest(HttpServletRequest request, String jspFile) {\n         /** @deprecated use isRequestedSessionIdFromURL instead. */\n         public boolean isRequestedSessionIdFromUrl(){ return request.isRequestedSessionIdFromUrl(); }\n         public Object getAttribute(String s){\n-            if(s != null && s.equals(INC_SERVLET_PATH))\n+            if (s != null && (s.equals(INC_SERVLET_PATH) || s.equals(INC_REQUEST_URI))) {\n                 return jspFile;\n+            }\n             return request.getAttribute(s);\n         }\n         public Enumeration getAttributeNames(){ return request.getAttributeNames(); }"
            },
            {
                "sha": "4025fdf2761db6fb32c2f7e705a95d6fef8ede0c",
                "filename": "src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImplNamedDispatcherInclude.java",
                "status": "modified",
                "additions": 12,
                "deletions": 7,
                "changes": 19,
                "blob_url": "https://github.com/apache/cocoon/blob/fb5cfefb76871338fd4467d7d0715dee0e4be95e/src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImplNamedDispatcherInclude.java",
                "raw_url": "https://github.com/apache/cocoon/raw/fb5cfefb76871338fd4467d7d0715dee0e4be95e/src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImplNamedDispatcherInclude.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/jsp/java/org/apache/cocoon/components/jsp/JSPEngineImplNamedDispatcherInclude.java?ref=fb5cfefb76871338fd4467d7d0715dee0e4be95e",
                "patch": "@@ -74,13 +74,15 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  *\n  * @author <a href=\"mailto:dims@yahoo.com\">Davanum Srinivas</a>\n  * @author <a href=\"mailto:bh22351@i-one.at\">Bernhard Huber</a>\n- * @version CVS $Id: JSPEngineImplNamedDispatcherInclude.java,v 1.3 2003/07/10 23:38:04 joerg Exp $\n+ * @version CVS $Id: JSPEngineImplNamedDispatcherInclude.java,v 1.4 2003/07/12 13:30:02 joerg Exp $\n  */\n public class JSPEngineImplNamedDispatcherInclude extends AbstractLogEnabled\n     implements JSPEngine, Parameterizable, ThreadSafe {\n \n-    /** The Servlet Include Path */\n+    /** The servlet include path. */\n     public static final String INC_SERVLET_PATH = \"javax.servlet.include.servlet_path\";\n+    /** The servlet request uri, needed for Resin. */\n+    public static final String INC_REQUEST_URI = \"javax.servlet.include.request_uri\";\n \n     /** config-parameter name for specifying the jsp servlet-name.\n       ie. servlet-name\n@@ -123,11 +125,13 @@ public void parameterize(Parameters params)  {\n         // start JSPServlet.\n         javax.servlet.RequestDispatcher rd = context.getNamedDispatcher( servletName );\n         if (rd != null) {\n-          rd.include( request, response );\n-          response.flushBuffer();\n-          bytes = response.toByteArray();\n+            rd.include( request, response );\n+            response.flushBuffer();\n+            bytes = response.toByteArray();\n         } else {\n-          getLogger().error( \"Specify a correct \" + CONFIG_SERVLET_NAME + \" \" + servletName );\n+            // FIXME: I guess it's better to throw a more specific exception.\n+            throw new Exception(\"No RequestDispatcher found. Specify a correct '\"\n+                                + CONFIG_SERVLET_NAME + \"': \" + servletName);\n         }\n         return bytes;\n     }\n@@ -170,8 +174,9 @@ public MyServletRequest(HttpServletRequest request, String jspFile) {\n         /** @deprecated use isRequestedSessionIdFromURL instead. */\n         public boolean isRequestedSessionIdFromUrl(){ return request.isRequestedSessionIdFromUrl(); }\n         public Object getAttribute(String s){\n-            if(s != null && s.equals(INC_SERVLET_PATH))\n+            if (s != null && (s.equals(INC_SERVLET_PATH) || s.equals(INC_REQUEST_URI))) {\n                 return jspFile;\n+            }\n             return request.getAttribute(s);\n         }\n         public Enumeration getAttributeNames(){ return request.getAttributeNames(); }"
            },
            {
                "sha": "bf32566bfc9b3ff6b7afe8b871fea9c2e8a24ba1",
                "filename": "src/blocks/jsp/java/org/apache/cocoon/generation/JspGenerator.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/fb5cfefb76871338fd4467d7d0715dee0e4be95e/src/blocks/jsp/java/org/apache/cocoon/generation/JspGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/fb5cfefb76871338fd4467d7d0715dee0e4be95e/src/blocks/jsp/java/org/apache/cocoon/generation/JspGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/jsp/java/org/apache/cocoon/generation/JspGenerator.java?ref=fb5cfefb76871338fd4467d7d0715dee0e4be95e",
                "patch": "@@ -74,7 +74,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * results into SAX events.\n  *\n  * @author <a href=\"mailto:dims@yahoo.com\">Davanum Srinivas</a>\n- * @version CVS $Id: JspGenerator.java,v 1.3 2003/07/10 23:38:04 joerg Exp $\n+ * @version CVS $Id: JspGenerator.java,v 1.4 2003/07/12 13:30:02 joerg Exp $\n  */\n public class JspGenerator extends ServletGenerator implements Configurable {\n \n@@ -131,8 +131,6 @@ public void generate() throws ProcessingException {\n             throw new ProcessingException(\"SAXException JspGenerator.generate()\",e.getException());\n         } catch (IOException e) {\n             throw new ProcessingException(\"IOException JspGenerator.generate()\",e);\n-        } catch (ProcessingException e) {\n-            throw e;\n         } catch (Exception e) {\n             throw new ProcessingException(\"Exception JspGenerator.generate()\",e);\n         } finally {"
            },
            {
                "sha": "a6cddd983f1fe96a71a343cbea6b1ae7c076b427",
                "filename": "status.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/fb5cfefb76871338fd4467d7d0715dee0e4be95e/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/fb5cfefb76871338fd4467d7d0715dee0e4be95e/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=fb5cfefb76871338fd4467d7d0715dee0e4be95e",
                "patch": "@@ -4,7 +4,7 @@\n <!ENTITY ouml             \"&#x000F6;\">\n <!ENTITY uuml             \"&#x000FC;\">\n ]>\n-<!-- CVS $Id: status.xml,v 1.88 2003/07/11 18:32:25 joerg Exp $:-->\n+<!-- CVS $Id: status.xml,v 1.89 2003/07/12 13:30:02 joerg Exp $:-->\n <status>\n \n   <developers>\n@@ -184,6 +184,9 @@\n   <changes>\n \n  <release version=\"@version@\" date=\"@date@\">\n+  <action dev=\"JH\" type=\"fix\" fixes-bug=\"4934\" due-to=\"Ryder Rishel\" due-to-email=\"\tryderblue@yahoo.com\">\n+   Made JSPs working in Resin that don't end on *.jsp.\n+  </action>\n   <action dev=\"JH\" type=\"update\">\n    All Reader accessing Avalon components now extend the ServiceableReader\n    instead of deprecated ComposerReader. It pertains the JSPReader, the"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/a9caa46e9bdb31d9cff6301cc67811bf0253bd00",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/2851efc400675ca2ac03fd485eea4bb62ab1b6d3",
        "message": "Fixed to avoid NPE on null locator when used as transformer, and changed to use JXPath relative contexts in repeat, group, and itemset so that ../ works\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@24835 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_134",
        "file": [
            {
                "sha": "b419187ccffca4e785ba149e389be914869afe89",
                "filename": "src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java",
                "status": "modified",
                "additions": 25,
                "deletions": 10,
                "changes": 35,
                "blob_url": "https://github.com/apache/cocoon/blob/a9caa46e9bdb31d9cff6301cc67811bf0253bd00/src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/a9caa46e9bdb31d9cff6301cc67811bf0253bd00/src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/scratchpad/src/org/apache/cocoon/generation/JXFormsGenerator.java?ref=a9caa46e9bdb31d9cff6301cc67811bf0253bd00",
                "patch": "@@ -104,7 +104,9 @@ public void remove() {\n             }\n         };\n \n-    final static String NS = \n+    private static final Locator NULL_LOCATOR = new LocatorImpl();\n+\n+    public final static String NS = \n         \"http://apache.org/cocoon/jxforms/1.0\";\n \n     // Non XForms elements\n@@ -198,6 +200,18 @@ Object getNode(JXPathContext root, JXPathContext current) {\n             return ptr.getNode();\n         }\n \n+        Pointer getPointer(JXPathContext root, JXPathContext current) {\n+            JXPathContext ctx = current;\n+            if (absolute) {\n+                ctx = root;\n+            }\n+            Pointer ptr = jxpath.getPointer(ctx, string);\n+            if (ptr == null) {\n+                return null;\n+            }\n+            return ptr;\n+        }\n+\n         Iterator iteratePointers(JXPathContext root, JXPathContext current) {\n             JXPathContext ctx = current;\n             if (absolute) {\n@@ -241,8 +255,9 @@ Iterator iterate(JXPathContext root, JXPathContext current) {\n     static class Event {\n         final Locator location;\n         Event next;\n-        Event(Locator location) {\n-            this.location = new LocatorImpl(location);\n+        Event(Locator locator) {\n+            this.location = \n+                locator == null ? NULL_LOCATOR : new LocatorImpl(locator);\n         }\n \n         public String locationString() {\n@@ -1332,11 +1347,11 @@ private void execute(final XMLConsumer consumer,\n                         value = ptr.getNode();\n                     } catch (Exception exc) {\n                         throw new SAXParseException(exc.getMessage(),\n-                                                        ev.location,\n-                                                        exc);\n+                                                    ev.location,\n+                                                    exc);\n                     }\n                     JXPathContext localJXPathContext = \n-                        jxpathContextFactory.newContext(null, value);\n+                        currentContext.getRelativeContext(ptr);\n                     String path = \"\";\n                     if (contextPath != null) {\n                         path = contextPath + \"/.\"; \n@@ -1362,16 +1377,16 @@ private void execute(final XMLConsumer consumer,\n                                       startElement.attributes);\n                 final XPathExpr ref = startGroup.ref;\n                 if (ref != null) {\n-                    Object value;\n+                    Pointer ptr;\n                     try {\n-                        value = ref.getNode(rootContext, currentContext);\n+                        ptr = ref.getPointer(rootContext, currentContext);\n                     } catch (Exception exc) {\n                         throw new SAXParseException(exc.getMessage(),\n                                                     ev.location,\n                                                     exc);\n                     }\n                     JXPathContext localJXPathContext = \n-                        jxpathContextFactory.newContext(null, value);\n+                        currentContext.getRelativeContext(ptr);\n                     String path;\n                     if (ref.absolute) {\n                         path = ref.string;\n@@ -1427,7 +1442,7 @@ private void execute(final XMLConsumer consumer,\n                                                         exc);\n                     }\n                     JXPathContext localJXPathContext = \n-                        jxpathContextFactory.newContext(null, value);\n+                        currentContext.getRelativeContext(ptr);\n                     AttributesImpl attrs = new AttributesImpl();\n                     attrs.addAttribute(null, REF, REF, \"CDATA\",\n                                        ptr.asPath());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/ca18cb50c9e65995814826ca6244fd9666b1a15f",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/bc679e98454e1518d3dc4bc4368c28eae41b46a1",
        "message": "Fix a NPE reported by Michael Wechner. Note that this fix is a filter that prevents null to be stored, but doesn't solve the cause\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@23570 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_135",
        "file": [
            {
                "sha": "1785970b0316cc46e39ce287811f98ff713bbbae",
                "filename": "src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/ca18cb50c9e65995814826ca6244fd9666b1a15f/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "raw_url": "https://github.com/apache/cocoon/raw/ca18cb50c9e65995814826ca6244fd9666b1a15f/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/xml/dom/DOMStreamer.java?ref=ca18cb50c9e65995814826ca6244fd9666b1a15f",
                "patch": "@@ -86,7 +86,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @author <a href=\"mailto:cziegeler@apache.org\">Carsten Ziegeler</a>\n  * @author <a href=\"mailto:pier@apache.org\">Pierpaolo Fumagalli</a>\n  *         (Apache Software Foundation)\n- * @version CVS $Id: DOMStreamer.java,v 1.1 2003/03/09 00:09:48 pier Exp $\n+ * @version CVS $Id: DOMStreamer.java,v 1.2 2003/03/09 20:38:30 sylvain Exp $\n  */\n public class DOMStreamer implements XMLProducer {\n \n@@ -545,6 +545,9 @@ public ElementInfo(NamespaceNormalizingDOMStreamer.ElementInfo parent) {\n              * an existing one.\n              */\n             public void put(String prefix, String namespaceURI) {\n+            \t// FIXME (SW): it appears that prefix can be null (reported by Michael Wechner)\n+            \tif (prefix == null) return;\n+            \t\n                 if (namespaceDeclarations == null)\n                     namespaceDeclarations = new HashMap();\n                 namespaceDeclarations.put(prefix, namespaceURI);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/7d3cc1b6c22d9af5ca28e9db720b77fa1b9220f1",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/a913c4574d198e4fbaeb9c33f77092a2dd8843ca",
        "message": "Interface says: Return the type of object that this FactoryBean creates, or null if not known in advance.\n\nThis fixes errors like:\n(support.DefaultListableBeanFactory  565 ) FactoryBean threw exception from getObjectType, despite the contract saying that it should return null if the type of its object cannot be determined yet\njava.lang.NullPointerException\n        at org.apache.cocoon.servletservice.spring.ServletFactoryBean.getObjectType(ServletFactoryBean.java:209)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:558)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@555254 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_136",
        "file": [
            {
                "sha": "7f0923a557e4c74c4f91ad3b95572b1d7c95e263",
                "filename": "core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/spring/ServletFactoryBean.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/7d3cc1b6c22d9af5ca28e9db720b77fa1b9220f1/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/spring/ServletFactoryBean.java",
                "raw_url": "https://github.com/apache/cocoon/raw/7d3cc1b6c22d9af5ca28e9db720b77fa1b9220f1/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/spring/ServletFactoryBean.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-servlet-service/cocoon-servlet-service-impl/src/main/java/org/apache/cocoon/servletservice/spring/ServletFactoryBean.java?ref=7d3cc1b6c22d9af5ca28e9db720b77fa1b9220f1",
                "patch": "@@ -204,7 +204,7 @@ public Object getObject() throws Exception {\n      * @see org.springframework.beans.factory.FactoryBean#getObjectType()\n      */\n     public Class getObjectType() {\n-        return this.embeddedServlet.getClass();\n+        return this.embeddedServlet != null ? this.embeddedServlet.getClass() : null;\n     }\n \n     /* (non-Javadoc)"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/27d01b575c130a2e10b537d1ad53c81285c47724",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/19f78ccfa53f1b773a2a0553225f6bb6d7eb0b08",
        "message": "    <action dev=\"CZ\" type=\"add\" fixes-bug=\"35521\" due-to=\"Mark Lundquist\" due-to-email=\"mlundquist2@comcast.net\">\r\n      Added the create-document source than either generates empty documents or documents containing\r\n      just a root node.\r\n    </action>\r\n    <action dev=\"CZ\" type=\"fix\" fixes-bug=\"35457\" due-to=\"Doug Bennett\" due-to-email=\"dbennett1556@netscape.net\">\r\n      Fix NPE in RequestGenerator when request.getHeaderNames() returns null.\r\n    </action>\r\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@225582 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_137",
        "file": [
            {
                "sha": "d36b279c809946cb49ebdb9c7289ab745e760cce",
                "filename": "src/java/org/apache/cocoon/components/source/impl/CreateDocumentSource.java",
                "status": "added",
                "additions": 136,
                "deletions": 0,
                "changes": 136,
                "blob_url": "https://github.com/apache/cocoon/blob/27d01b575c130a2e10b537d1ad53c81285c47724/src/java/org/apache/cocoon/components/source/impl/CreateDocumentSource.java",
                "raw_url": "https://github.com/apache/cocoon/raw/27d01b575c130a2e10b537d1ad53c81285c47724/src/java/org/apache/cocoon/components/source/impl/CreateDocumentSource.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/source/impl/CreateDocumentSource.java?ref=27d01b575c130a2e10b537d1ad53c81285c47724",
                "patch": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 1999-2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.cocoon.components.source.impl;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import org.apache.cocoon.xml.XMLUtils;\n+import org.apache.excalibur.xml.sax.XMLizable;\n+import org.apache.excalibur.source.Source;\n+import org.apache.excalibur.source.SourceNotFoundException;\n+import org.apache.excalibur.source.SourceValidity;\n+import org.apache.excalibur.source.impl.validity.NOPValidity;\n+\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+\n+/**\n+ * A <code>Source</code> that generates an empty XML document or an\n+ * XML document just containing a root node.\n+ * The URI syntax is \"create-document:\" or \"create-document:ROOT_ELEMENT_NAME\".\n+ *\n+ * @version $Id:$\n+ * @since 2.1.8\n+ */\n+public class CreateDocumentSource\n+    implements XMLizable, Source {\n+\n+    protected String rootElementName;\n+    protected String scheme;\n+    protected String uri;\n+    protected String xmlDocument;\n+\n+    public CreateDocumentSource(String location) {\n+        this.uri = location;\n+        final int pos = location.indexOf(':');\n+        this.scheme = location.substring(0, pos);\n+        final String rootName = location.substring(pos+1);\n+        if (rootName != null && rootName.trim().length() > 0 ) {\n+            this.rootElementName = rootName.trim();\n+            this.xmlDocument = '<' + this.rootElementName + \"/>\";\n+        } else {\n+            this.xmlDocument = \"\";\n+        }\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.xml.sax.XMLizable#toSAX(org.xml.sax.ContentHandler)\n+     */\n+    public void toSAX(ContentHandler handler) throws SAXException {\n+        handler.startDocument();\n+        if ( rootElementName != null ) {\n+            XMLUtils.createElement(handler, this.rootElementName);\n+        }\n+        handler.endDocument();\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#exists()\n+     */\n+    public boolean exists() {\n+        return true;\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#getContentLength()\n+     */\n+    public long getContentLength() {\n+        return this.xmlDocument.length();\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#getInputStream()\n+     */\n+    public InputStream getInputStream() throws IOException, SourceNotFoundException {\n+        return new ByteArrayInputStream(this.xmlDocument.getBytes(\"utf-8\"));\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#getLastModified()\n+     */\n+    public long getLastModified() {\n+        // this document *never* changes\n+        return 1;\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#getMimeType()\n+     */\n+    public String getMimeType() {\n+        return \"text/xml\";\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#getScheme()\n+     */\n+    public String getScheme() {\n+        return this.scheme;\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#getURI()\n+     */\n+    public String getURI() {\n+        return this.uri;\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#getValidity()\n+     */\n+    public SourceValidity getValidity() {\n+        return NOPValidity.SHARED_INSTANCE;\n+    }\n+\n+    /**\n+     * @see org.apache.excalibur.source.Source#refresh()\n+     */\n+    public void refresh() {\n+        // nothing to do here\n+    }\n+\n+}"
            },
            {
                "sha": "f081b20be67681d0e96183288fd484a8017deff8",
                "filename": "src/java/org/apache/cocoon/components/source/impl/CreateDocumentSourceFactory.java",
                "status": "added",
                "additions": 57,
                "deletions": 0,
                "changes": 57,
                "blob_url": "https://github.com/apache/cocoon/blob/27d01b575c130a2e10b537d1ad53c81285c47724/src/java/org/apache/cocoon/components/source/impl/CreateDocumentSourceFactory.java",
                "raw_url": "https://github.com/apache/cocoon/raw/27d01b575c130a2e10b537d1ad53c81285c47724/src/java/org/apache/cocoon/components/source/impl/CreateDocumentSourceFactory.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/components/source/impl/CreateDocumentSourceFactory.java?ref=27d01b575c130a2e10b537d1ad53c81285c47724",
                "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 1999-2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.cocoon.components.source.impl;\n+\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.util.Map;\n+\n+import org.apache.avalon.framework.logger.AbstractLogEnabled;\n+import org.apache.avalon.framework.thread.ThreadSafe;\n+import org.apache.excalibur.source.Source;\n+import org.apache.excalibur.source.SourceFactory;\n+\n+/**\n+ * A factory for 'create-document:' sources (see {@link CreateDocumentSource}).\n+ * \n+ * @version $Id:$\n+ * @since 2.1.8\n+ */\n+public class CreateDocumentSourceFactory \n+    extends AbstractLogEnabled\n+    implements SourceFactory, ThreadSafe {\n+    \n+    /**\n+     * Get a {@link CreateDocumentSource} object.\n+     * \n+     * @param location   The URI to resolve - this URI includes the scheme.\n+     * @param parameters this is optional and not used here\n+     *\n+     * @see org.apache.excalibur.source.SourceFactory#getSource(java.lang.String, java.util.Map)\n+     */\n+    public Source getSource( String location, Map parameters )\n+    throws IOException, MalformedURLException {\n+        return new CreateDocumentSource(location);\n+    }\n+    \n+    /**\n+     * @see org.apache.excalibur.source.SourceFactory#release(org.apache.excalibur.source.Source)\n+     */\n+    public void release( Source source ) {\n+        // Do nothing here\n+    }\n+\n+}"
            },
            {
                "sha": "4386715b759b76ed025fe6c445c78582b1469933",
                "filename": "src/java/org/apache/cocoon/generation/RequestGenerator.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/cocoon/blob/27d01b575c130a2e10b537d1ad53c81285c47724/src/java/org/apache/cocoon/generation/RequestGenerator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/27d01b575c130a2e10b537d1ad53c81285c47724/src/java/org/apache/cocoon/generation/RequestGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/generation/RequestGenerator.java?ref=27d01b575c130a2e10b537d1ad53c81285c47724",
                "patch": "@@ -120,12 +120,14 @@ public void generate()\n \n         start(\"requestHeaders\", attr);\n         Enumeration headers = request.getHeaderNames();\n-        while (headers.hasMoreElements()) {\n-            String header = (String)headers.nextElement();\n-            attribute(attr, \"name\", header);\n-            start(\"header\", attr);\n-            data(request.getHeader(header));\n-            end(\"header\");\n+        if ( headers != null ) {\n+            while (headers.hasMoreElements()) {\n+                String header = (String)headers.nextElement();\n+                attribute(attr, \"name\", header);\n+                start(\"header\", attr);\n+                data(request.getHeader(header));\n+                end(\"header\");\n+            }\n         }\n         end(\"requestHeaders\");\n "
            },
            {
                "sha": "69a4d43bb5e3c3fc1f6a553cc9f9a1a9211ad45f",
                "filename": "src/webapp/WEB-INF/xconf/cocoon-core.xconf",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/cocoon/blob/27d01b575c130a2e10b537d1ad53c81285c47724/src/webapp/WEB-INF/xconf/cocoon-core.xconf",
                "raw_url": "https://github.com/apache/cocoon/raw/27d01b575c130a2e10b537d1ad53c81285c47724/src/webapp/WEB-INF/xconf/cocoon-core.xconf",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/webapp/WEB-INF/xconf/cocoon-core.xconf?ref=27d01b575c130a2e10b537d1ad53c81285c47724",
                "patch": "@@ -540,6 +540,8 @@\n     <component-instance name=\"module\" class=\"org.apache.cocoon.components.source.impl.ModuleSourceFactory\"/>\n     <component-instance name=\"xmodule\" class=\"org.apache.cocoon.components.source.impl.XModuleSourceFactory\"/>\n \n+    <component-instance name=\"create-document\" class=\"org.apache.cocoon.components.source.impl.CreateDocumentSourceFactory\"/>\n+\n     <!--+\n         | The \"*\" protocol handles all uri schemes that are not explicitely\n         | specified. This includes all JDK standard protocols."
            },
            {
                "sha": "24f0885fb8656efdd67d65f78481db8dac235230",
                "filename": "status.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/cocoon/blob/27d01b575c130a2e10b537d1ad53c81285c47724/status.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/27d01b575c130a2e10b537d1ad53c81285c47724/status.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/status.xml?ref=27d01b575c130a2e10b537d1ad53c81285c47724",
                "patch": "@@ -509,6 +509,13 @@\n    </action>\n   </release>\n   <release version=\"2.1.8\" date=\"TBD\">\n+    <action dev=\"CZ\" type=\"add\" fixes-bug=\"35521\" due-to=\"Mark Lundquist\" due-to-email=\"mlundquist2@comcast.net\">\n+      Added the create-document source than either generates empty documents or documents containing\n+      just a root node.\n+    </action>\n+    <action dev=\"CZ\" type=\"fix\" fixes-bug=\"35457\" due-to=\"Doug Bennett\" due-to-email=\"dbennett1556@netscape.net\">\n+      Fix NPE in RequestGenerator when request.getHeaderNames() returns null.\n+    </action>\n     <action dev=\"CZ\" type=\"fix\" fixes-bug=\"29506\" due-to-email=\"tobias@lentus.se\">\n       Fix wrong caching behaviour in DirectoryGenerator.\n     </action>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/db184f7bad1d959625d037e6eb087010a257b281",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/dc15af05d9a9db18f5ddaf22f0ceeb7a521e4050",
        "message": "This fixes the NPE recently found in the chaperon examples.\r\nThe problem is that after a getInputStream/toSAX to a SitemapSource,\r\nthis method couldn't be called a second time. \r\nUncommenting this line from the reset() method solves *this* problem,\r\nbut does it create new ones?\r\n(I'm really glad that we can trash all this in 2.2)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26114 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_138",
        "file": [
            {
                "sha": "e52c9e858589c4c988ffbaba0e71a3af914a8688",
                "filename": "src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/db184f7bad1d959625d037e6eb087010a257b281/src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java",
                "raw_url": "https://github.com/apache/cocoon/raw/db184f7bad1d959625d037e6eb087010a257b281/src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/java/org/apache/cocoon/environment/wrapper/MutableEnvironmentFacade.java?ref=db184f7bad1d959625d037e6eb087010a257b281",
                "patch": "@@ -73,7 +73,7 @@ developed  by the  Apache Software Foundation  (http://www.apache.org/).\"\n  * @see org.apache.cocoon.components.treeprocessor.TreeProcessor#handleCocoonRedirect(String, Environment, InvokeContext)\n  *\n  * @author <a href=\"http://www.apache.org/~sylvain/\">Sylvain Wallez</a>\n- * @version CVS $Id: MutableEnvironmentFacade.java,v 1.2 2003/10/01 08:53:49 sylvain Exp $\n+ * @version CVS $Id: MutableEnvironmentFacade.java,v 1.3 2003/10/25 17:51:29 cziegeler Exp $\n  */\n public class MutableEnvironmentFacade implements Environment {\n \n@@ -123,7 +123,11 @@ public String getRedirectURL() {\n     \n     public void reset() {\n         this.env.reset();\n-        this.env.setURI(this.uri, this.prefix);\n+        // TODO - If we remove the line below, do we break something\n+        //        else again? If we leave it in, the SitemapSource\n+        //        object is unusable after a call to getInputStream()\n+        //        or toSAX() :(\n+        //this.env.setURI(this.uri, this.prefix);\n     }\n     //----------------------------------\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/85ca05f6623eb6a8a187324f37c300afdd7c2423",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/b4b0d3ccb462a9e53981bae2cf567b063fc71975",
        "message": "COCOON-2122: Added support for calls of methods inside pipelineComponent scope (previously, each call created new scope and it led to NPEs)\nCOCOON-2124: Changed scope of Object Model to pipelineComponent.\n* ObjectModel configuration in cocoon-expression-language-impl is just a template. Actual definition of ObjectModel bean is in cocoon-pipeline-impl because Object Model is bound to pipelineComponent scope, now.\n* Redefinied ObjectModel in tests using newly introduced bean configuration template.\n* Introduced PipelinecomponentScopeHolder interface, this allows me to remove dependency on cglib.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@567666 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_139",
        "file": [
            {
                "sha": "a21028d386df9cd3e20b6e9ce306a8a32380197c",
                "filename": "blocks/cocoon-template/cocoon-template-impl/src/test/resources/org/apache/cocoon/template/jxtg/JXTemplateGeneratorTestCase.spring.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 10,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/blocks/cocoon-template/cocoon-template-impl/src/test/resources/org/apache/cocoon/template/jxtg/JXTemplateGeneratorTestCase.spring.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/blocks/cocoon-template/cocoon-template-impl/src/test/resources/org/apache/cocoon/template/jxtg/JXTemplateGeneratorTestCase.spring.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/blocks/cocoon-template/cocoon-template-impl/src/test/resources/org/apache/cocoon/template/jxtg/JXTemplateGeneratorTestCase.spring.xml?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -29,16 +29,9 @@\n   <import resource=\"classpath:META-INF/cocoon/spring/RhinoScope.xml\"/>\n   <import resource=\"classpath:META-INF/cocoon/spring/AbstractStringTemplateParser.xml\"/>\n   <import resource=\"classpath:META-INF/cocoon/spring/LegacyStringTemplateParser.xml\"/>\n+  <import resource=\"classpath:META-INF/cocoon/spring/ObjectModelTemplate.xml\"/>\n   \n-  <!-- Redefining this bean instead of importing because originally it is in \"call\" scope -->\n-  <bean name=\"org.apache.cocoon.objectmodel.ObjectModel\" class=\"org.apache.cocoon.objectmodel.ObjectModelImpl\">\n-    <property name=\"initialEntries\">\n-      <map>\n-        <entry key=\"cocoon\" value-ref=\"org.apache.cocoon.objectmodel.provider.CocoonEntryObjectModelProvider\"/>\n-        <entry key=\"Packages\" value-ref=\"org.apache.cocoon.objectmodel.provider.PackagesEntryObjectModelProvider\"/>\n-        <entry key=\"java\" value-ref=\"org.apache.cocoon.objectmodel.provider.JavaEntryObjectModelProvider\"/>\n-      </map>\n-    </property>        \n-  </bean>\n+  <bean name=\"org.apache.cocoon.objectmodel.ObjectModel\" class=\"org.apache.cocoon.objectmodel.ObjectModelImpl\"\n+        parent=\"org.apache.cocoon.objectmodel.ObjectModel.template\"/>\n   \n </beans>\n\\ No newline at end of file"
            },
            {
                "sha": "66a3662c93e92fd26117598264cb53198c802653",
                "filename": "core/cocoon-core/src/test/resources/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.spring.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 10,
                "changes": 13,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-core/src/test/resources/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.spring.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-core/src/test/resources/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.spring.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-core/src/test/resources/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.spring.xml?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -26,16 +26,9 @@\n   <import resource=\"classpath:META-INF/cocoon/spring/ObjectModelProviders.xml\"/>\n   <import resource=\"classpath:META-INF/cocoon/spring/CocoonEntryObjectModelProvider.xml\"/>\n   <import resource=\"classpath:META-INF/cocoon/spring/RhinoScope.xml\"/>\n+  <import resource=\"classpath:META-INF/cocoon/spring/ObjectModelTemplate.xml\"/>\n   \n-  <!-- Redefining this bean instead of importing because originally it is in \"call\" scope -->\n-  <bean name=\"org.apache.cocoon.objectmodel.ObjectModel\" class=\"org.apache.cocoon.objectmodel.ObjectModelImpl\">\n-    <property name=\"initialEntries\">\n-      <map>\n-        <entry key=\"cocoon\" value-ref=\"org.apache.cocoon.objectmodel.provider.CocoonEntryObjectModelProvider\"/>\n-        <entry key=\"Packages\" value-ref=\"org.apache.cocoon.objectmodel.provider.PackagesEntryObjectModelProvider\"/>\n-        <entry key=\"java\" value-ref=\"org.apache.cocoon.objectmodel.provider.JavaEntryObjectModelProvider\"/>\n-      </map>\n-    </property>        \n-  </bean>\n+  <bean name=\"org.apache.cocoon.objectmodel.ObjectModel\" class=\"org.apache.cocoon.objectmodel.ObjectModelImpl\"\n+        parent=\"org.apache.cocoon.objectmodel.ObjectModel.template\"/>\n   \n </beans>\n\\ No newline at end of file"
            },
            {
                "sha": "2ab0b68b7738a061200d7fb94c19cbd2941b1c1e",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-impl/pom.xml",
                "status": "modified",
                "additions": 0,
                "deletions": 5,
                "changes": 5,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/pom.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-impl/pom.xml?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -116,11 +116,6 @@\n       <artifactId>servlet-api</artifactId>\n       <scope>provided</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>cglib</groupId>\n-      <artifactId>cglib</artifactId>\n-      <version>2.1_3</version>\n-    </dependency>    \n     <!-- Test Dependencies -->\n     <dependency>\n       <groupId>xmlunit</groupId>"
            },
            {
                "sha": "561e6b15b1ab3c21badca5dcfcf8a6e83426e914",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentProxyDecorator.java",
                "status": "modified",
                "additions": 19,
                "deletions": 8,
                "changes": 27,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentProxyDecorator.java",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentProxyDecorator.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentProxyDecorator.java?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -20,6 +20,7 @@\n import java.lang.reflect.Method;\n import java.lang.reflect.Proxy;\n import java.util.Arrays;\n+import java.util.HashMap;\n import java.util.LinkedHashSet;\n import java.util.Map;\n import java.util.Set;\n@@ -66,21 +67,31 @@ public void setHolder(PipelineComponentScopeHolder holder) {\n         public ScopeChangerProxy(Object wrapped, PipelineComponentScopeHolder holder) {\n             this.wrapped = wrapped;\n             this.holder = holder;\n+            this.beans = new HashMap();\n+            this.destructionCallbacks = new HashMap();\n         }\n \n         public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n-            Map currentBeans = null;\n-            Map currentDestructionCallbacks = null;\n             Object result;\n+            boolean modified = false;\n             try {\n-                currentBeans = holder.getBeans();\n-                currentDestructionCallbacks = holder.getDestructionCallbacks();\n-                holder.setBeans(beans);\n-                holder.setDestructionCallbacks(destructionCallbacks);\n+                if (!holder.getInScope()) {\n+                    holder.setParentBeans(holder.getBeans());\n+                    holder.setParentDestructionCallbacks(holder.getDestructionCallbacks());\n+                    holder.setBeans(beans);\n+                    holder.setDestructionCallbacks(destructionCallbacks);\n+                    holder.setInScope(true);\n+                    modified = true;\n+                }\n                 result = method.invoke(wrapped, args);\n             } finally {\n-                holder.setBeans(currentBeans);\n-                holder.setDestructionCallbacks(currentDestructionCallbacks);\n+                if (modified) {\n+                    holder.setBeans(holder.getParentBeans());\n+                    holder.setDestructionCallbacks(holder.getParentDestructionCallbacks());\n+                    holder.setParentBeans(null);\n+                    holder.setParentDestructionCallbacks(null);\n+                    holder.setInScope(false);\n+                }\n             }\n             return result;\n         }"
            },
            {
                "sha": "c4824a074664c549743379ef50bb52675db5c448",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolder.java",
                "status": "modified",
                "additions": 19,
                "deletions": 30,
                "changes": 49,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolder.java",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolder.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolder.java?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -16,40 +16,29 @@\n  */\n package org.apache.cocoon.components.pipeline.spring;\n \n-import java.util.HashMap;\n import java.util.Map;\n \n-public class PipelineComponentScopeHolder {\n-    private Map beans;\n-    private Map destructionCallbacks;\n-    private boolean inScope;\n+public interface PipelineComponentScopeHolder {\n+    //FIXME: This interface needs redesign\n+\n+    public Map getBeans();\n+\n+    public void setBeans(Map beans);\n     \n-    public PipelineComponentScopeHolder() {\n-        beans = new HashMap();\n-        destructionCallbacks = new HashMap();\n-    }\n+    public Map getParentBeans();\n     \n-    public Map getBeans() {\n-        return beans;\n-    }\n+    public void setParentBeans(Map parentBeans);\n+\n+    public Map getDestructionCallbacks();\n+\n+    public void setDestructionCallbacks(Map destructionCallbacks);\n     \n-    public void setBeans(Map beans) {\n-        this.beans = beans;\n-    }\n+    public Map getParentDestructionCallbacks();\n+\n+    public void setParentDestructionCallbacks(Map destructionCallbacks);\n     \n-    public Map getDestructionCallbacks() {\n-        return destructionCallbacks;\n-    }\n+    public void setInScope(boolean inScope);\n     \n-    public void setDestructionCallbacks(Map destructionCallbacks) {\n-        this.destructionCallbacks = destructionCallbacks;\n-    }\n-\n-    public boolean isInScope() {\n-        return inScope;\n-    }\n-\n-    public void setInScope(boolean inScope) {\n-        this.inScope = inScope;\n-    }\n-}\n+    public boolean getInScope();\n+\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "7993575a239890afae2cdad538051d949cbb94d3",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolderImpl.java",
                "status": "added",
                "additions": 103,
                "deletions": 0,
                "changes": 103,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolderImpl.java",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/spring/PipelineComponentScopeHolderImpl.java?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.cocoon.components.pipeline.spring;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class PipelineComponentScopeHolderImpl implements PipelineComponentScopeHolder {\n+    private Map beans;\n+    private Map destructionCallbacks;\n+    \n+    private Map parentBeans;\n+    private Map parentDestructionCallbacks;\n+    \n+    private boolean inScope;\n+    \n+    public PipelineComponentScopeHolderImpl() {\n+        beans = new HashMap();\n+        destructionCallbacks = new HashMap();\n+        parentBeans = null;\n+        parentDestructionCallbacks = null;\n+        inScope = false;\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#getBeans()\n+     */\n+    public Map getBeans() {\n+        return beans;\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#setBeans(java.util.Map)\n+     */\n+    public void setBeans(Map beans) {\n+        this.beans = beans;\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#getDestructionCallbacks()\n+     */\n+    public Map getDestructionCallbacks() {\n+        return destructionCallbacks;\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#setDestructionCallbacks(java.util.Map)\n+     */\n+    public void setDestructionCallbacks(Map destructionCallbacks) {\n+        this.destructionCallbacks = destructionCallbacks;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#getParentBeans()\n+     */\n+    public Map getParentBeans() {\n+        return parentBeans;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#getParentDestructionCallbacks()\n+     */\n+    public Map getParentDestructionCallbacks() {\n+        return parentDestructionCallbacks;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#setParentBeans()\n+     */\n+    public void setParentBeans(Map parentBeans) {\n+        this.parentBeans = parentBeans;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder#setParentDestructionCallbacks(java.util.Map)\n+     */\n+    public void setParentDestructionCallbacks(Map destructionCallbacks) {\n+        this.parentDestructionCallbacks = destructionCallbacks;\n+    }\n+\n+    public boolean getInScope() {\n+        return inScope;\n+    }\n+\n+    public void setInScope(boolean inScope) {\n+        this.inScope = inScope;\n+    }\n+\n+}"
            },
            {
                "sha": "baa32aacf9a14b9a33de133b29cae774a0b5325c",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/ObjectModel.xml",
                "status": "added",
                "additions": 31,
                "deletions": 0,
                "changes": 31,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/ObjectModel.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/ObjectModel.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/ObjectModel.xml?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+  \n+  http://www.apache.org/licenses/LICENSE-2.0\n+  \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<!-- SVN $Id$ -->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xmlns:aop=\"http://www.springframework.org/schema/aop\"\n+  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n+  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd\">\n+  \n+  <!-- Default implementation of ObjectModel interface in pipelineComponent scope. -->\n+  <bean name=\"org.apache.cocoon.objectmodel.ObjectModel\" class=\"org.apache.cocoon.objectmodel.ObjectModelImpl\" \n+        scope=\"pipelineComponent\" parent=\"org.apache.cocoon.objectmodel.ObjectModel.template\">\n+    <aop:scoped-proxy proxy-target-class=\"false\"/>\n+  </bean>\n+  \n+</beans>\n\\ No newline at end of file"
            },
            {
                "sha": "6433065c5721ed4876bec1ff96a76738face18af",
                "filename": "core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/PipelineComponentScope.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/cocoon/blob/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/PipelineComponentScope.xml",
                "raw_url": "https://github.com/apache/cocoon/raw/85ca05f6623eb6a8a187324f37c300afdd7c2423/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/PipelineComponentScope.xml",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/resources/META-INF/cocoon/spring/PipelineComponentScope.xml?ref=85ca05f6623eb6a8a187324f37c300afdd7c2423",
                "patch": "@@ -36,8 +36,8 @@\n   </bean>\n   \n   <bean id=\"org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder\"\n-        class=\"org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolder\" scope=\"call\">\n-    <aop:scoped-proxy/>\n+        class=\"org.apache.cocoon.components.pipeline.spring.PipelineComponentScopeHolderImpl\" scope=\"call\">\n+    <aop:scoped-proxy proxy-target-class=\"false\"/>\n   </bean>\n   \n   <bean id=\"org.apache.cocoon.components.pipeline.spring.PipelineComponentProxyDecorator\""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/cocoon/commit/969f0958099b904a3b3f96cc0647e012f67ead29",
        "repo": "cocoon",
        "parent": "https://github.com/apache/cocoon/commit/62355af32ffda9ab70b84c6dce908c2e594c8940",
        "message": "Avoiding NPE's on optional on-insert and on-delete sub-bindings.\r\nPR:\r\nObtained from:\r\nSubmitted by:\t\r\nReviewed by:\t\r\nCVS: ----------------------------------------------------------------------\r\nCVS: PR:\r\nCVS:   If this change addresses a PR in the problem report tracking\r\nCVS:   database, then enter the PR number(s) here.\r\nCVS: Obtained from:\r\nCVS:   If this change has been taken from another system, such as NCSA,\r\nCVS:   then name the system in this line, otherwise delete it.\r\nCVS: Submitted by:\r\nCVS:   If this code has been contributed to Apache by someone else; i.e.,\r\nCVS:   they sent us a patch or a new module, then include their name/email\r\nCVS:   address here. If this is your work then delete this line.\r\nCVS: Reviewed by:\r\nCVS:   If we are doing pre-commit code reviews and someone else has\r\nCVS:   reviewed your changes, include their name(s) here.\r\nCVS:   If you have not had it reviewed then delete this line.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cocoon/trunk@26853 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "cocoon_140",
        "file": [
            {
                "sha": "ed2a78772b2b2449d81e73f746f84e5efd64a387",
                "filename": "src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/cocoon/blob/969f0958099b904a3b3f96cc0647e012f67ead29/src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java",
                "raw_url": "https://github.com/apache/cocoon/raw/969f0958099b904a3b3f96cc0647e012f67ead29/src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java",
                "contents_url": "https://api.github.com/repos/apache/cocoon/contents/src/blocks/woody/java/org/apache/cocoon/woody/binding/RepeaterJXPathBinding.java?ref=969f0958099b904a3b3f96cc0647e012f67ead29",
                "patch": "@@ -120,9 +120,13 @@ public RepeaterJXPathBinding(JXpathBindingBuilderBase.CommonAttributes commonAtt\n         this.rowBinding = new ComposedJXPathBindingBase(JXpathBindingBuilderBase.CommonAttributes.DEFAULT, childBindings);\n         this.rowBinding.setParent(this);\n         this.insertRowBinding = insertBinding;\n-        this.insertRowBinding.setParent(this);\n+        if (this.insertRowBinding != null) {\n+            this.insertRowBinding.setParent(this);\n+        }\n         this.deleteRowBinding = new ComposedJXPathBindingBase(JXpathBindingBuilderBase.CommonAttributes.DEFAULT, deleteBindings);\n-        this.deleteRowBinding.setParent(this);\n+        if (this.deleteRowBinding != null) {\n+            this.deleteRowBinding.setParent(this);            \n+        }\n     }\n \n "
            }
        ]
    }
]
