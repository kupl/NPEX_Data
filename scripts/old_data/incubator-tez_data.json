[
    {
        "commit": "https://github.com/apache/incubator-tez/commit/aba6faba6a0ee7a68c1cf3970d007a2f2bf54236",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/5dd8fe5b07f55c7829e35fa8520a8b8fdd55de49",
        "message": "TEZ-731. Fix a NullPointerException in ContainerTask.toString (sseth)",
        "bug_id": "incubator-tez_1",
        "file": [
            {
                "sha": "7dc5978fabb512f181794711be5889988a34ac08",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java",
                "status": "modified",
                "additions": 23,
                "deletions": 4,
                "changes": 27,
                "blob_url": "https://github.com/apache/incubator-tez/blob/aba6faba6a0ee7a68c1cf3970d007a2f2bf54236/tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/aba6faba6a0ee7a68c1cf3970d007a2f2bf54236/tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java?ref=aba6faba6a0ee7a68c1cf3970d007a2f2bf54236",
                "patch": "@@ -126,9 +126,28 @@ public void readFields(DataInput in) throws IOException {\n \n   @Override\n   public String toString() {\n-    return \"shouldDie: \" + shouldDie + \", TaskSpec: \" + taskSpec + \", AdditionalResources: \"\n-        + additionalResources + \", Credentials: \" + credentials == null ? \"[null]\"\n-        : (\"[#secretKeys=\" + credentials.numberOfSecretKeys() + \", #tokens=\" + credentials\n-            .numberOfTokens());\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"shouldDie: \").append(shouldDie);\n+    sb.append(\", TaskSpec: \");\n+    if (taskSpec == null) {\n+      sb.append(\"none\");\n+    } else {\n+      sb.append(taskSpec);\n+    }\n+    sb.append(\", additionalResources: \");\n+    if (additionalResources == null) {\n+      sb.append(\"none\");\n+    } else {\n+      sb.append(additionalResources);\n+    }\n+    sb.append(\", credentialsChanged: \").append(credentialsChanged);\n+    sb.append(\", credentials: \");\n+    if (credentials == null) {\n+      sb.append(\"none\");\n+    } else {\n+      sb.append(\"#tokens=\").append(credentials.numberOfTokens())\n+      .append(\", #secretKeys: \").append(credentials.numberOfSecretKeys());\n+    }\n+    return sb.toString();\n   }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/b885eca7289fbc2e3419625ad972339b2e6ba351",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/c3b736fcd7891b5942f53accea3a4a992f8aba08",
        "message": "TEZ-636. NPE in ExampleDriver.printDAGStatus(). (hitesh)",
        "bug_id": "incubator-tez_2",
        "file": [
            {
                "sha": "cb34b2ae37692ce14d05e9c3e0fb4ef864eccf88",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/incubator-tez/blob/b885eca7289fbc2e3419625ad972339b2e6ba351/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/b885eca7289fbc2e3419625ad972339b2e6ba351/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java?ref=b885eca7289fbc2e3419625ad972339b2e6ba351",
                "patch": "@@ -119,6 +119,11 @@ public static void printDAGStatus(DAGClient dagClient, String[] vertexNames,\n       for (String vertexName : vertexNames) {\n         VertexStatus vStatus = dagClient.getVertexStatus(vertexName,\n           (displayVertexCounters ? opts : null));\n+        if (vStatus == null) {\n+          System.out.println(\"Could not retrieve status for vertex: \"\n+            + vertexName);\n+          continue;\n+        }\n         Progress vProgress = vStatus.getProgress();\n         if (vProgress != null) {\n           vProgressFloat = 0.0f;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/1885b9ed252b7728eb7636a4a1c447a35504b4fa",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/f9c9c0c9c49ab973cea7920c26c494e23b788c3a",
        "message": "TEZ-629. NPE in MRAMSplitGenerator (bikas)",
        "bug_id": "incubator-tez_3",
        "file": [
            {
                "sha": "da9ce556dbee68022d9647c951423ad778728466",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java",
                "status": "modified",
                "additions": 12,
                "deletions": 6,
                "changes": 18,
                "blob_url": "https://github.com/apache/incubator-tez/blob/1885b9ed252b7728eb7636a4a1c447a35504b4fa/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/1885b9ed252b7728eb7636a4a1c447a35504b4fa/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java?ref=1885b9ed252b7728eb7636a4a1c447a35504b4fa",
                "patch": "@@ -104,14 +104,16 @@ public MRInputAMSplitGenerator() {\n           String rack = \n               ((org.apache.hadoop.mapreduce.split.TezGroupedSplit) split).getRack();\n           if (rack == null) {\n-            locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n-                .asList(split.getLocations())), null));\n+            if (split.getLocations() != null) {\n+              locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n+                  .asList(split.getLocations())), null));\n+            } else {\n+              locationHints.add(new TaskLocationHint(null, null));\n+            }\n           } else {\n             locationHints.add(new TaskLocationHint(null, \n                 Collections.singleton(rack)));\n           }\n-          locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n-              .asList(split.getLocations())), null));\n         }\n         inputSplitInfo = new InputSplitInfoMem(splitsBuilder.build(),\n             locationHints, splits.length);\n@@ -128,8 +130,12 @@ public MRInputAMSplitGenerator() {\n           String rack = \n               ((org.apache.hadoop.mapred.split.TezGroupedSplit) split).getRack();\n           if (rack == null) {\n-            locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n-                .asList(split.getLocations())), null));\n+            if (split.getLocations() != null) {\n+              locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n+                  .asList(split.getLocations())), null));\n+            } else {\n+              locationHints.add(new TaskLocationHint(null, null));\n+            }\n           } else {\n             locationHints.add(new TaskLocationHint(null, \n                 Collections.singleton(rack)));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/727431fe7b0051bcd1b2f3856fa95ef4192daa43",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
        "message": "TEZ-616. OrderedWordCount with -generateSplitsInClient true throws NPE. (hitesh)",
        "bug_id": "incubator-tez_4",
        "file": [
            {
                "sha": "190678f839815b1e93ccc0c3da65811cf84f1ecc",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/incubator-tez/blob/727431fe7b0051bcd1b2f3856fa95ef4192daa43/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/727431fe7b0051bcd1b2f3856fa95ef4192daa43/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java?ref=727431fe7b0051bcd1b2f3856fa95ef4192daa43",
                "patch": "@@ -20,12 +20,14 @@\n \n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.EnumSet;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.StringTokenizer;\n+import java.util.TreeMap;\n \n import org.apache.commons.cli.ParseException;\n import org.apache.commons.logging.Log;\n@@ -383,8 +385,11 @@ public static void main(String[] args) throws Exception {\n             + \", inputPath=\" + inputPath\n             + \", outputPath=\" + outputPath);\n \n-        DAG dag = createDAG(fs, conf, null, stagingDir,\n-            dagIndex, inputPath, outputPath, generateSplitsInClient);\n+        Map<String, LocalResource> localResources =\n+          Collections.emptyMap();\n+        DAG dag = createDAG(fs, conf, localResources,\n+            stagingDir, dagIndex, inputPath, outputPath,\n+            generateSplitsInClient);\n \n         if (useTezSession) {\n           LOG.info(\"Waiting for TezSession to get into ready state\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/2debbca5921daa8fd4a9080e8390c0c086914d62",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/968e31f96e41ce4c4e7717c6264e70e627f99837",
        "message": "Addendum TEZ-510. Test MRRJobs failing with NPE (bikas)",
        "bug_id": "incubator-tez_5",
        "file": [
            {
                "sha": "99dbb872f633b1545ebc2af2d52931d1c19bcc15",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 6,
                "changes": 11,
                "blob_url": "https://github.com/apache/incubator-tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -250,19 +250,15 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n-              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n-              SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n           .addTransition(\n               VertexState.TERMINATING,\n               VertexState.ERROR, VertexEventType.V_INTERNAL_ERROR,\n               INTERNAL_ERROR_TRANSITION)\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n+                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -301,6 +297,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -311,6 +308,8 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n+                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,"
            },
            {
                "sha": "6c97430a889c5aab5beb9570b2b8fc6e833348ea",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/incubator-tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -98,13 +98,14 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n-    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    if (fileName == null) {\n-      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    } else {\n-      srcFile.set(fileName);\n+    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    if (updatedConf != null) {\n+      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+      if (fileName != null) {\n+        LOG.info(\"Processing file: \" + fileName);\n+        srcFile.set(fileName);\n+      }\n     }\n \n     KVReader kvReader = mrInput.getReader();"
            },
            {
                "sha": "ed675a44ae397a5f552fd485391746410fc3b16d",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/incubator-tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -209,7 +209,10 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return new Configuration(incrementalConf);\n+    if (incrementalConf != null) {\n+      return new Configuration(incrementalConf);\n+    }\n+    return null;\n   }\n \n   public float getProgress() throws IOException, InterruptedException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/1795ea84fc899f5e522680119b1853f559030a14",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/38350663c4f367efb46f7cb488cd85607d1dfc24",
        "message": "TEZ-510. Test MRRJobs failing with NPE (bikas)",
        "bug_id": "incubator-tez_6",
        "file": [
            {
                "sha": "597acb2aa2545374a181e0df604e9aad1bea06bd",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/incubator-tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -250,9 +250,6 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n-              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n               SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n@@ -263,6 +260,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -301,6 +299,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -311,6 +310,8 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n+                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,"
            },
            {
                "sha": "6c97430a889c5aab5beb9570b2b8fc6e833348ea",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/incubator-tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -98,13 +98,14 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n-    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    if (fileName == null) {\n-      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    } else {\n-      srcFile.set(fileName);\n+    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    if (updatedConf != null) {\n+      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+      if (fileName != null) {\n+        LOG.info(\"Processing file: \" + fileName);\n+        srcFile.set(fileName);\n+      }\n     }\n \n     KVReader kvReader = mrInput.getReader();"
            },
            {
                "sha": "f0aea339ed7f7fe629d2adc4a6c9e08d72d94969",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -209,7 +209,7 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return new Configuration(incrementalConf);\n+    return incrementalConf;\n   }\n \n   public float getProgress() throws IOException, InterruptedException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/c6177fbeeee89ddba1d447d0388b0003613b6101",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/31c37843ce47f95c818db56123a6fe20b2d35e48",
        "message": "TEZ-185. NPE in MRCombiner when updating progress. (hitesh)",
        "bug_id": "incubator-tez_7",
        "file": [
            {
                "sha": "dc7c53def951a08ae810afbe019067b5d73f93ea",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/incubator-tez/blob/c6177fbeeee89ddba1d447d0388b0003613b6101/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/c6177fbeeee89ddba1d447d0388b0003613b6101/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java?ref=c6177fbeeee89ddba1d447d0388b0003613b6101",
                "patch": "@@ -195,7 +195,8 @@ protected VALUE moveToNext() {\n     }\n \n     public void informReduceProgress() {\n-      combinePhase.set(super.in.getProgress().getProgress()); // update progress\n+      // FIXME implement correct progress updates for combiner TEZ-184\n+      // combinePhase.set(super.in.getProgress().getProgress()); // update progress\n       reporter.progress();\n     }\n   }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/3d0edf44e001e74ad50301e700ecdc807af8221e",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/2118e96446bd3ca8858c831a5cf7ebc07d683007",
        "message": "TEZ-928. NPE in last app attempt caused by registering for an RM unregister. (hitesh)",
        "bug_id": "incubator-tez_8",
        "file": [
            {
                "sha": "66ef81996034f4f6925964d43cdcc55bf944c986",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java",
                "status": "modified",
                "additions": 12,
                "deletions": 1,
                "changes": 13,
                "blob_url": "https://github.com/apache/incubator-tez/blob/3d0edf44e001e74ad50301e700ecdc807af8221e/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/3d0edf44e001e74ad50301e700ecdc807af8221e/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java?ref=3d0edf44e001e74ad50301e700ecdc807af8221e",
                "patch": "@@ -24,6 +24,7 @@\n import java.util.Map;\n import java.util.concurrent.BlockingQueue;\n import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -81,6 +82,8 @@\n   final DAGClientServer clientService;\n   private final ContainerSignatureMatcher containerSignatureMatcher;\n   private int cachedNodeCount = -1;\n+  private AtomicBoolean shouldUnregisterFlag =\n+      new AtomicBoolean(false);\n \n   BlockingQueue<AMSchedulerEvent> eventQueue\n                               = new LinkedBlockingQueue<AMSchedulerEvent>();\n@@ -353,6 +356,11 @@ public synchronized void serviceStart() {\n         serviceAddr.getPort(), \"\", appContext);\n     taskScheduler.init(getConfig());\n     taskScheduler.start();\n+    if (shouldUnregisterFlag.get()) {\n+      // Flag may have been set earlier when task scheduler was not initialized\n+      taskScheduler.setShouldUnregister();\n+    }\n+\n     this.eventHandlingThread = new Thread(\"TaskSchedulerEventHandlerThread\") {\n       @Override\n       public void run() {\n@@ -552,8 +560,11 @@ public void preemptContainer(ContainerId containerId) {\n   }\n \n   public void setShouldUnregisterFlag() {\n-    this.taskScheduler.setShouldUnregister();\n     LOG.info(\"TaskScheduler notified that it should unregister from RM\");\n+    this.shouldUnregisterFlag.set(true);\n+    if (this.taskScheduler != null) {\n+      this.taskScheduler.setShouldUnregister();\n+    }\n   }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/0320cd7acef31d2518fe09f0d8ede4eca259537f",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/6480f1bda362419e6e975072d2e557231911c94a",
        "message": "TEZ-807. Build broken due to NPE (Patch by Gunther Hagleitner, reviewed by Siddharth Seth)",
        "bug_id": "incubator-tez_9",
        "file": [
            {
                "sha": "82cb0c7dd4c905a568cfa7191a395d805211c9c7",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "additions": 0,
                "deletions": 6,
                "changes": 6,
                "blob_url": "https://github.com/apache/incubator-tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -477,18 +477,12 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n     if(dag != null) {\n \n       for (Vertex v : dag.getVertices()) {\n-        if (v.getTaskLocalResources() == null) {\n-          v.setTaskLocalResources(new TreeMap<String, LocalResource>());\n-        }\n         if (tezJarResources != null) {\n           v.getTaskLocalResources().putAll(tezJarResources);\n         }\n         v.getTaskLocalResources().put(TezConfiguration.TEZ_PB_BINARY_CONF_NAME,\n             binaryConfLRsrc);\n \n-        if (v.getTaskEnvironment() == null) {\n-          v.setTaskEnvironment(new TreeMap<String, String>());\n-        }\n         Map<String, String> taskEnv = v.getTaskEnvironment();\n         for (Map.Entry<String, String> entry : environment.entrySet()) {\n           String key = entry.getKey();"
            },
            {
                "sha": "8f3101e2e31c5a523a6163e577b52f5afefc8a60",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezSession.java",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/apache/incubator-tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezSession.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezSession.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-api/src/main/java/org/apache/tez/client/TezSession.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -153,10 +153,6 @@ public synchronized DAGClient submitDAG(DAG dag)\n         .getFrameworkClasspath(sessionConfig.getYarnConfiguration());\n     for (Vertex v : dag.getVertices()) {\n       Map<String, String> taskEnv = v.getTaskEnvironment();\n-      if (taskEnv == null) {\n-        taskEnv = Maps.newHashMap();\n-        v.setTaskEnvironment(taskEnv);\n-      }\n       Apps.addToEnvironment(taskEnv,\n           ApplicationConstants.Environment.CLASSPATH.name(),\n           classpath);"
            },
            {
                "sha": "6433dc8410cfac816ddb0c60c64e1b188d1eb1c9",
                "filename": "tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "status": "modified",
                "additions": 25,
                "deletions": 29,
                "changes": 54,
                "blob_url": "https://github.com/apache/incubator-tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -506,39 +506,35 @@ public DAGPlan createDag(Configuration dagConf) {\n \n       taskConfigBuilder.setTaskModule(vertex.getVertexName());\n       PlanLocalResource.Builder localResourcesBuilder = PlanLocalResource.newBuilder();\n-      if (vertex.getTaskLocalResources() != null) {\n-        localResourcesBuilder.clear();\n-        for (Entry<String, LocalResource> entry :\n-          vertex.getTaskLocalResources().entrySet()) {\n-          String key = entry.getKey();\n-          LocalResource lr = entry.getValue();\n-          localResourcesBuilder.setName(key);\n-          localResourcesBuilder.setUri(\n-            DagTypeConverters.convertToDAGPlan(lr.getResource()));\n-          localResourcesBuilder.setSize(lr.getSize());\n-          localResourcesBuilder.setTimeStamp(lr.getTimestamp());\n-          localResourcesBuilder.setType(\n-            DagTypeConverters.convertToDAGPlan(lr.getType()));\n-          localResourcesBuilder.setVisibility(\n-            DagTypeConverters.convertToDAGPlan(lr.getVisibility()));\n-          if (lr.getType() == LocalResourceType.PATTERN) {\n-            if (lr.getPattern() == null || lr.getPattern().isEmpty()) {\n-              throw new TezUncheckedException(\"LocalResource type set to pattern\"\n-                + \" but pattern is null or empty\");\n-            }\n-            localResourcesBuilder.setPattern(lr.getPattern());\n+      localResourcesBuilder.clear();\n+      for (Entry<String, LocalResource> entry :\n+             vertex.getTaskLocalResources().entrySet()) {\n+        String key = entry.getKey();\n+        LocalResource lr = entry.getValue();\n+        localResourcesBuilder.setName(key);\n+        localResourcesBuilder.setUri(\n+          DagTypeConverters.convertToDAGPlan(lr.getResource()));\n+        localResourcesBuilder.setSize(lr.getSize());\n+        localResourcesBuilder.setTimeStamp(lr.getTimestamp());\n+        localResourcesBuilder.setType(\n+          DagTypeConverters.convertToDAGPlan(lr.getType()));\n+        localResourcesBuilder.setVisibility(\n+          DagTypeConverters.convertToDAGPlan(lr.getVisibility()));\n+        if (lr.getType() == LocalResourceType.PATTERN) {\n+          if (lr.getPattern() == null || lr.getPattern().isEmpty()) {\n+            throw new TezUncheckedException(\"LocalResource type set to pattern\"\n+              + \" but pattern is null or empty\");\n           }\n-          taskConfigBuilder.addLocalResource(localResourcesBuilder);\n+          localResourcesBuilder.setPattern(lr.getPattern());\n         }\n+        taskConfigBuilder.addLocalResource(localResourcesBuilder);\n       }\n       \n-      if (vertex.getTaskEnvironment() != null) {\n-        for (String key : vertex.getTaskEnvironment().keySet()) {\n-          PlanKeyValuePair.Builder envSettingBuilder = PlanKeyValuePair.newBuilder();\n-          envSettingBuilder.setKey(key);\n-          envSettingBuilder.setValue(vertex.getTaskEnvironment().get(key));\n-          taskConfigBuilder.addEnvironmentSetting(envSettingBuilder);\n-        }\n+      for (String key : vertex.getTaskEnvironment().keySet()) {\n+        PlanKeyValuePair.Builder envSettingBuilder = PlanKeyValuePair.newBuilder();\n+        envSettingBuilder.setKey(key);\n+        envSettingBuilder.setValue(vertex.getTaskEnvironment().get(key));\n+        taskConfigBuilder.addEnvironmentSetting(envSettingBuilder);\n       }\n \n       if (vertex.getTaskLocationsHint() != null) {"
            },
            {
                "sha": "377f5514901f4df2577d15ca6b898b2aec802ac4",
                "filename": "tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java",
                "status": "modified",
                "additions": 14,
                "deletions": 4,
                "changes": 18,
                "blob_url": "https://github.com/apache/incubator-tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -42,8 +43,8 @@\n   private final int parallelism;\n   private VertexLocationHint taskLocationsHint;\n   private final Resource taskResource;\n-  private Map<String, LocalResource> taskLocalResources;\n-  private Map<String, String> taskEnvironment;\n+  private Map<String, LocalResource> taskLocalResources = new HashMap<String, LocalResource>();\n+  private Map<String, String> taskEnvironment = new HashMap<String, String>();\n   private final List<RootInputLeafOutput<InputDescriptor>> additionalInputs \n                       = new ArrayList<RootInputLeafOutput<InputDescriptor>>();\n   private final List<RootInputLeafOutput<OutputDescriptor>> additionalOutputs \n@@ -107,7 +108,11 @@ VertexLocationHint getTaskLocationsHint() {\n   }\n \n   public Vertex setTaskLocalResources(Map<String, LocalResource> localResources) {\n-    this.taskLocalResources = localResources;\n+    if (localResources == null) {\n+      this.taskLocalResources = new HashMap<String, LocalResource>();\n+    } else {\n+      this.taskLocalResources = localResources;\n+    }\n     return this;\n   }\n \n@@ -116,7 +121,12 @@ public Vertex setTaskLocalResources(Map<String, LocalResource> localResources) {\n   }\n \n   public Vertex setTaskEnvironment(Map<String, String> environment) {\n-    this.taskEnvironment = environment;\n+    if (environment == null) {\n+      this.taskEnvironment = new HashMap<String, String>();\n+    }\n+    else {\n+      this.taskEnvironment = environment;\n+    }\n     return this;\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/7b2a0e6f3427182e0c7d55f3da1c369500770ab0",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/6ccebe747217adcef05a7137eb8844c11e8ae18c",
        "message": "TEZ-616. Addendum patch for OrderedWordCount with -generateSplitsInClient true throws NPE. (hitesh)",
        "bug_id": "incubator-tez_10",
        "file": [
            {
                "sha": "c415f8ae49dc22cdc3371e1604e0c0d5e081362b",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/incubator-tez/blob/7b2a0e6f3427182e0c7d55f3da1c369500770ab0/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/7b2a0e6f3427182e0c7d55f3da1c369500770ab0/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=7b2a0e6f3427182e0c7d55f3da1c369500770ab0",
                "patch": "@@ -373,7 +373,9 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n         if (v.getTaskLocalResources() == null) {\n           v.setTaskLocalResources(new TreeMap<String, LocalResource>());\n         }\n-        v.getTaskLocalResources().putAll(tezJarResources);\n+        if (tezJarResources != null) {\n+          v.getTaskLocalResources().putAll(tezJarResources);\n+        }\n         v.getTaskLocalResources().put(TezConfiguration.TEZ_PB_BINARY_CONF_NAME,\n             binaryConfLRsrc);\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/5ef639b1e97c3e8628c20ab826a399857fa6c276",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/40dfb77c9742561a2554c20343381114081575e4",
        "message": "TEZ-616. Addendum patch for OrderedWordCount with -generateSplitsInClient true throws NPE. (hitesh)",
        "bug_id": "incubator-tez_11",
        "file": [
            {
                "sha": "07a80d6cc5c128994ab7a6fb2a30d7a8bfd5936f",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/5ef639b1e97c3e8628c20ab826a399857fa6c276/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/5ef639b1e97c3e8628c20ab826a399857fa6c276/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java?ref=5ef639b1e97c3e8628c20ab826a399857fa6c276",
                "patch": "@@ -386,7 +386,7 @@ public static void main(String[] args) throws Exception {\n             + \", outputPath=\" + outputPath);\n \n         Map<String, LocalResource> localResources =\n-          Collections.emptyMap();\n+          new TreeMap<String, LocalResource>();\n         DAG dag = createDAG(fs, conf, localResources,\n             stagingDir, dagIndex, inputPath, outputPath,\n             generateSplitsInClient);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/d4bb730eaa4b8b793b2c7f8b08e1faa50ed566e8",
        "message": "TEZ-615. OrderedWordCount with -DUSE_TEZ_SESSION=false throws NPE. (hitesh)",
        "bug_id": "incubator-tez_12",
        "file": [
            {
                "sha": "042ff91885e232ddf6a15a2ee127a020b0c46823",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/incubator-tez/blob/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
                "patch": "@@ -364,9 +364,16 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n     if(dag != null) {\n \n       for (Vertex v : dag.getVertices()) {\n+        if (v.getTaskLocalResources() == null) {\n+          v.setTaskLocalResources(new TreeMap<String, LocalResource>());\n+        }\n         v.getTaskLocalResources().putAll(tezJarResources);\n         v.getTaskLocalResources().put(TezConfiguration.TEZ_PB_BINARY_CONF_NAME,\n             binaryConfLRsrc);\n+\n+        if (v.getTaskEnvironment() == null) {\n+          v.setTaskEnvironment(new TreeMap<String, String>());\n+        }\n         Map<String, String> taskEnv = v.getTaskEnvironment();\n         for (Map.Entry<String, String> entry : environment.entrySet()) {\n           String key = entry.getKey();\n@@ -399,9 +406,9 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n       }\n \n       localResources.put(TezConfiguration.TEZ_PB_PLAN_BINARY_NAME,\n-          TezClientUtils.createLocalResource(fs,\n-              binaryPath, LocalResourceType.FILE,\n-              LocalResourceVisibility.APPLICATION));\n+        TezClientUtils.createLocalResource(fs,\n+          binaryPath, LocalResourceType.FILE,\n+          LocalResourceVisibility.APPLICATION));\n \n       if (Level.DEBUG.isGreaterOrEqual(Level.toLevel(amLogLevel))) {\n         Path textPath = localizeDagPlanAsText(dagPB, fs,"
            },
            {
                "sha": "6eedb15adab8267cc86ce5fd8cb42609a6ce8e0a",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java?ref=8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
                "patch": "@@ -670,7 +670,7 @@ public void onContainersAllocated(List<Container> containers) {\n             boolean safeToRelease = true;\n             Priority topPendingPriority = amRmClient.getTopPriority();\n             Priority containerPriority = heldContainer.container.getPriority();\n-            if (topPendingPriority != null && \n+            if (isNew && topPendingPriority != null &&\n                 containerPriority.compareTo(topPendingPriority) < 0) {\n               // this container is of lower priority and given to us by the RM for\n               // a task that will be matched after the current top priority. Keep "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/968e31f96e41ce4c4e7717c6264e70e627f99837",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/1795ea84fc899f5e522680119b1853f559030a14",
        "message": "Revert \"TEZ-510. Test MRRJobs failing with NPE (bikas)\"\n\nThis reverts commit 1795ea84fc899f5e522680119b1853f559030a14.",
        "bug_id": "incubator-tez_13",
        "file": [
            {
                "sha": "67523284ecd9677245093934878a0ae22b114cae",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 4,
                "changes": 7,
                "blob_url": "https://github.com/apache/incubator-tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -250,6 +250,9 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n+          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n+              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n+              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n               SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n@@ -260,7 +263,6 @@\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n-                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -299,7 +301,6 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n-                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -310,8 +311,6 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n-                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n-                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,"
            },
            {
                "sha": "e8e315a536113b35b3ca2b2e337ee19ef206ba37",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "additions": 6,
                "deletions": 7,
                "changes": 13,
                "blob_url": "https://github.com/apache/incubator-tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -98,14 +98,13 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n+    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    if (updatedConf != null) {\n-      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-      if (fileName != null) {\n-        LOG.info(\"Processing file: \" + fileName);\n-        srcFile.set(fileName);\n-      }\n+    if (fileName == null) {\n+      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    } else {\n+      srcFile.set(fileName);\n     }\n \n     KVReader kvReader = mrInput.getReader();"
            },
            {
                "sha": "b9f22421a40857c4f1117cefe25bcf8e7f57b725",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -209,7 +209,7 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return incrementalConf;\n+    return new Configuration(incrementalConf);\n   }\n \n   public float getProgress() throws IOException, InterruptedException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/5eb0c86f204aad1354e55192bc82e17320949acf",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
        "message": "TEZ-477. Fix NPEs etc caused by TEZ-433 (part of TEZ-398). (sseth)",
        "bug_id": "incubator-tez_14",
        "file": [
            {
                "sha": "2d3e4d1fdc6f6856230d491aff687f3f2f4c5bf7",
                "filename": "tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -514,7 +514,7 @@ private static LogicalIOProcessorRuntimeTask createLogicalTask(int attemptNum,\n     }\n     String [] localDirs = StringUtils.getTrimmedStrings(System.getenv(Environment.LOCAL_DIRS.name()));\n     conf.setStrings(TezJobConfig.LOCAL_DIRS, localDirs);\n-    LOG.info(\"LocalDirs for child: \" + localDirs);\n+    LOG.info(\"LocalDirs for child: \" + Arrays.toString(localDirs));\n     return new LogicalIOProcessorRuntimeTask(taskSpec, attemptNum, conf,\n         tezUmbilical, jobToken);\n   }"
            },
            {
                "sha": "d7683121af8833780726c9747f9ffa52270705be",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -240,9 +240,9 @@ private static void convertVertexConfToTez(Configuration vertexConf,\n     Configuration confs[] = new Configuration[numStages];\n     Configuration nonItermediateConf = MultiStageMRConfigUtil.extractStageConf(\n         conf, \"\");\n-    confs[0].setBoolean(MRConfig.IS_MAP_PROCESSOR, true);\n     if (numStages == 1) {\n       confs[0] = nonItermediateConf;\n+      confs[0].setBoolean(MRConfig.IS_MAP_PROCESSOR, true);\n     } else {\n       confs[0] = nonItermediateConf;\n       confs[numStages - 1] = new Configuration(nonItermediateConf);"
            },
            {
                "sha": "5566fd8c0f28d3d62e71621ce40e739ce1e3ae31",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/incubator-tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -49,7 +49,7 @@\n import org.apache.tez.engine.common.sort.impl.TezRawKeyValueIterator;\n import org.apache.tez.engine.newapi.TezInputContext;\n import org.apache.tez.engine.newapi.TezOutputContext;\n-import org.apache.tez.engine.newapi.impl.TezTaskContextImpl;\n+import org.apache.tez.engine.newapi.TezTaskContext;\n import org.apache.tez.mapreduce.hadoop.MRConfig;\n import org.apache.tez.mapreduce.hadoop.MRJobConfig;\n import org.apache.tez.mapreduce.hadoop.mapred.MRCounters;\n@@ -72,13 +72,13 @@\n   private final MRTaskReporter reporter;\n   private final TaskAttemptID mrTaskAttemptID;\n \n-  public MRCombiner(TezTaskContextImpl taskContext) throws IOException {\n+  public MRCombiner(TezTaskContext taskContext) throws IOException {\n     this.conf = TezUtils.createConfFromUserPayload(taskContext.getUserPayload());\n \n     assert(taskContext instanceof TezInputContext || taskContext instanceof TezOutputContext);\n     if (taskContext instanceof TezOutputContext) {\n       this.keyClass = ConfigUtils.getIntermediateOutputKeyClass(conf);\n-      this.valClass = ConfigUtils.getIntermediateOutputKeyClass(conf);\n+      this.valClass = ConfigUtils.getIntermediateOutputValueClass(conf);\n       this.comparator = ConfigUtils.getIntermediateOutputKeyComparator(conf);\n       this.reporter = new MRTaskReporter((TezOutputContext)taskContext);\n     } else {"
            },
            {
                "sha": "a8fb9007ed0d7013da6b253521de5e8466b9297c",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -166,7 +166,7 @@\n     initCommitter(jobConf, useNewApi);\n \n     LOG.info(\"Initialized Simple Output\"\n-        + \", using_new_api\" + useNewApi);\n+        + \", using_new_api: \" + useNewApi);\n     return null;\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/eb0f6ffe5250b497f35909f8559682cbaa3621ae",
        "message": "TEZ-472. Various fixes including NPE in shuffle when run MR jobs using mapred apis. (hitesh)",
        "bug_id": "incubator-tez_15",
        "file": [
            {
                "sha": "eccd119a97b3f12229c432e5bf1f92191c843158",
                "filename": "tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -122,7 +122,7 @@ public void waitForInputReady() throws IOException, InterruptedException {\n    */\n   @Override\n   public KVReader getReader() throws IOException {\n-    if (rawIter != null) {\n+    if (rawIter == null) {\n       try {\n         waitForInputReady();\n       } catch (InterruptedException e) {"
            },
            {
                "sha": "6c062a46bb6c1be32ccf9c4f84978cf0c4296215",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/incubator-tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -41,6 +41,9 @@ public static void main(String argv[]){\n     try {\n       pgd.addClass(\"wordcount\", WordCount.class,\n           \"A map/reduce program that counts the words in the input files.\");\n+      pgd.addClass(\"mapredwordcount\", MapredWordCount.class,\n+          \"A map/reduce program that counts the words in the input files\"\n+         + \" using the mapred apis.\");\n       pgd.addClass(\"wordcountmrrtest\", WordCountMRRTest.class,\n           \"A map/reduce program that counts the words in the input files.\"\n           + \" Map splits on spaces. First reduce splits on \\\".\\\"\");"
            },
            {
                "sha": "33aad89c357fc6cdb0ef79a57348c29b89a7388b",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java",
                "status": "added",
                "additions": 163,
                "deletions": 0,
                "changes": 163,
                "blob_url": "https://github.com/apache/incubator-tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -0,0 +1,163 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.tez.mapreduce.examples;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.conf.Configured;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.io.IntWritable;\n+import org.apache.hadoop.io.LongWritable;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.mapred.FileInputFormat;\n+import org.apache.hadoop.mapred.FileOutputFormat;\n+import org.apache.hadoop.mapred.JobClient;\n+import org.apache.hadoop.mapred.JobConf;\n+import org.apache.hadoop.mapred.MapReduceBase;\n+import org.apache.hadoop.mapred.Mapper;\n+import org.apache.hadoop.mapred.OutputCollector;\n+import org.apache.hadoop.mapred.Reducer;\n+import org.apache.hadoop.mapred.Reporter;\n+import org.apache.hadoop.util.Tool;\n+import org.apache.hadoop.util.ToolRunner;\n+\n+/**\n+ * This is an example Hadoop Map/Reduce application using the mapred apis.\n+ * It reads the text input files, breaks each line into words\n+ * and counts them. The output is a locally sorted list of words and the\n+ * count of how often they occurred.\n+ *\n+ * To run: bin/hadoop jar examples.jar wordcount\n+ *            [-m <i>maps</i>] [-r <i>reduces</i>] <i>in-dir</i> <i>out-dir</i>\n+ */\n+public class MapredWordCount extends Configured implements Tool {\n+\n+  private static final Log LOG = LogFactory.getLog(MapredWordCount.class);\n+\n+  /**\n+   * Counts the words in each line.\n+   * For each line of input, break the line into words and emit them as\n+   * (<b>word</b>, <b>1</b>).\n+   */\n+  public static class MapClass extends MapReduceBase\n+    implements Mapper<LongWritable, Text, Text, IntWritable> {\n+\n+    private final static IntWritable one = new IntWritable(1);\n+    private Text word = new Text();\n+\n+    public void map(LongWritable key, Text value,\n+                    OutputCollector<Text, IntWritable> output,\n+                    Reporter reporter) throws IOException {\n+      String line = value.toString();\n+      StringTokenizer itr = new StringTokenizer(line);\n+      while (itr.hasMoreTokens()) {\n+        word.set(itr.nextToken());\n+        output.collect(word, one);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * A reducer class that just emits the sum of the input values.\n+   */\n+  public static class Reduce extends MapReduceBase\n+    implements Reducer<Text, IntWritable, Text, IntWritable> {\n+\n+    public void reduce(Text key, Iterator<IntWritable> values,\n+                       OutputCollector<Text, IntWritable> output,\n+                       Reporter reporter) throws IOException {\n+      int sum = 0;\n+      while (values.hasNext()) {\n+        sum += values.next().get();\n+      }\n+      output.collect(key, new IntWritable(sum));\n+    }\n+  }\n+\n+  static int printUsage() {\n+    System.out.println(\"wordcount [-m <maps>] [-r <reduces>] <input> <output>\");\n+    ToolRunner.printGenericCommandUsage(System.out);\n+    return -1;\n+  }\n+\n+  /**\n+   * The main driver for word count map/reduce program.\n+   * Invoke this method to submit the map/reduce job.\n+   * @throws IOException When there is communication problems with the\n+   *                     job tracker.\n+   */\n+  public int run(String[] args) throws Exception {\n+    JobConf conf = new JobConf(getConf(), WordCount.class);\n+    conf.setJobName(\"wordcount\");\n+    LOG.info(\"Running WordCount job using mapred apis\");\n+\n+    // the keys are words (strings)\n+    conf.setOutputKeyClass(Text.class);\n+    // the values are counts (ints)\n+    conf.setOutputValueClass(IntWritable.class);\n+\n+    conf.setMapperClass(MapClass.class);\n+    conf.setCombinerClass(Reduce.class);\n+    conf.setReducerClass(Reduce.class);\n+\n+    List<String> other_args = new ArrayList<String>();\n+    for(int i=0; i < args.length; ++i) {\n+      try {\n+        if (\"-m\".equals(args[i])) {\n+          conf.setNumMapTasks(Integer.parseInt(args[++i]));\n+        } else if (\"-r\".equals(args[i])) {\n+          conf.setNumReduceTasks(Integer.parseInt(args[++i]));\n+        } else {\n+          other_args.add(args[i]);\n+        }\n+      } catch (NumberFormatException except) {\n+        LOG.error(\"Integer expected instead of \" + args[i]);\n+        return printUsage();\n+      } catch (ArrayIndexOutOfBoundsException except) {\n+        LOG.error(\"Required parameter missing from \" + args[i-1]);\n+        return printUsage();\n+      }\n+    }\n+    // Make sure there are exactly 2 parameters left.\n+    if (other_args.size() != 2) {\n+      LOG.error(\"Wrong number of parameters: \" +\n+          other_args.size() + \" instead of 2.\");\n+      return printUsage();\n+    }\n+    FileInputFormat.setInputPaths(conf, other_args.get(0));\n+    FileOutputFormat.setOutputPath(conf, new Path(other_args.get(1)));\n+\n+    JobClient.runJob(conf);\n+    return 0;\n+  }\n+\n+  public static void main(String[] args) throws Exception {\n+    int res = ToolRunner.run(new Configuration(),\n+        new MapredWordCount(), args);\n+    System.exit(res);\n+  }\n+\n+}"
            },
            {
                "sha": "fc1103e58bb92862ea423ff4908c49346d6a47d8",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/incubator-tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.tez.mapreduce.examples;\n \n import java.io.IOException;\n@@ -32,14 +33,13 @@\n import org.apache.hadoop.util.GenericOptionsParser;\n \n public class WordCount {\n-  \n \n-  public static class TokenizerMapper \n+  public static class TokenizerMapper\n        extends Mapper<Object, Text, Text, IntWritable>{\n-    \n+\n     private final static IntWritable one = new IntWritable(1);\n     private Text word = new Text();\n-      \n+\n     public void map(Object key, Text value, Context context\n                     ) throws IOException, InterruptedException {\n       StringTokenizer itr = new StringTokenizer(value.toString());\n@@ -49,12 +49,12 @@ public void map(Object key, Text value, Context context\n       }\n     }\n   }\n-  \n-  public static class IntSumReducer \n+\n+  public static class IntSumReducer\n        extends Reducer<Text,IntWritable,Text,IntWritable> {\n     private IntWritable result = new IntWritable();\n \n-    public void reduce(Text key, Iterable<IntWritable> values, \n+    public void reduce(Text key, Iterable<IntWritable> values,\n                        Context context\n                        ) throws IOException, InterruptedException {\n       int sum = 0;"
            },
            {
                "sha": "1dd94e1a44fdffbc659ffd966d156d23e00b6a44",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "status": "modified",
                "additions": 19,
                "deletions": 4,
                "changes": 23,
                "blob_url": "https://github.com/apache/incubator-tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -14,6 +14,7 @@\n import org.apache.hadoop.mapred.FileOutputCommitter;\n import org.apache.hadoop.mapred.FileOutputFormat;\n import org.apache.hadoop.mapred.JobConf;\n+import org.apache.hadoop.mapred.JobContext;\n import org.apache.hadoop.mapred.TaskAttemptID;\n import org.apache.hadoop.mapred.TaskID;\n import org.apache.hadoop.mapreduce.OutputCommitter;\n@@ -22,7 +23,6 @@\n import org.apache.hadoop.mapreduce.TaskType;\n import org.apache.hadoop.mapreduce.lib.output.FileOutputFormatCounter;\n import org.apache.hadoop.util.ReflectionUtils;\n-import org.apache.tez.common.TezJobConfig;\n import org.apache.tez.common.TezUtils;\n import org.apache.tez.common.counters.TaskCounter;\n import org.apache.tez.common.counters.TezCounter;\n@@ -129,6 +129,12 @@\n           (isMapperOutput ? TaskType.MAP : TaskType.REDUCE),\n           outputContext.getTaskIndex()),\n           outputContext.getTaskAttemptNumber());\n+      jobConf.set(JobContext.TASK_ATTEMPT_ID, taskAttemptId.toString());\n+      jobConf.set(JobContext.TASK_ID, taskAttemptId.getTaskID().toString());\n+      jobConf.setBoolean(JobContext.TASK_ISMAP, isMapperOutput);\n+      jobConf.setInt(JobContext.TASK_PARTITION,\n+          taskAttemptId.getTaskID().getId());\n+      jobConf.set(JobContext.ID, taskAttemptId.getJobID().toString());\n \n       oldApiTaskAttemptContext =\n           new org.apache.tez.mapreduce.hadoop.newmapred.TaskAttemptContextImpl(\n@@ -137,7 +143,8 @@\n       oldOutputFormat = jobConf.getOutputFormat();\n \n       List<Statistics> matchedStats = null;\n-      if (oldOutputFormat instanceof org.apache.hadoop.mapred.FileOutputFormat) {\n+      if (oldOutputFormat\n+          instanceof org.apache.hadoop.mapred.FileOutputFormat) {\n         matchedStats =\n             Utils.getFsStatistics(\n                 org.apache.hadoop.mapred.FileOutputFormat.getOutputPath(\n@@ -194,11 +201,19 @@ public void initCommitter(JobConf job, boolean useNewApi)\n         FileOutputFormat.setWorkOutputPath(job, outputPath);\n       }\n     }\n-    this.committer.setupTask(newApiTaskAttemptContext);\n+    if (useNewApi) {\n+      this.committer.setupTask(newApiTaskAttemptContext);\n+    } else {\n+      this.committer.setupTask(oldApiTaskAttemptContext);\n+    }\n   }\n \n   public boolean isCommitRequired() throws IOException {\n-    return committer.needsTaskCommit(newApiTaskAttemptContext);\n+    if (useNewApi) {\n+      return committer.needsTaskCommit(newApiTaskAttemptContext);\n+    } else {\n+      return committer.needsTaskCommit(oldApiTaskAttemptContext);\n+    }\n   }\n \n   private TaskAttemptContext createTaskAttemptContext() {"
            },
            {
                "sha": "0b768c01af45d0d4dcf48776ec942d06083daeda",
                "filename": "tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/apache/incubator-tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -42,14 +42,14 @@\n   private final String jobFile;\n   private final DAGStatus dagStatus;\n   private final ApplicationReport report;\n-  \n+\n   public DAGJobStatus(ApplicationReport report, DAGStatus dagStatus, String jobFile) {\n     super();\n     this.dagStatus = dagStatus;\n     this.jobFile = jobFile;\n     this.report = report;\n   }\n-  \n+\n   @Override\n   protected synchronized void setMapProgress(float p) {\n     throw new UnsupportedOperationException();\n@@ -149,7 +149,7 @@ public synchronized float getMapProgress() {\n   @Override\n   public synchronized float getCleanupProgress() {\n     if (dagStatus.getState() == DAGStatus.State.SUCCEEDED ||\n-        dagStatus.getState() == DAGStatus.State.FAILED || \n+        dagStatus.getState() == DAGStatus.State.FAILED ||\n         dagStatus.getState() == DAGStatus.State.KILLED ||\n         dagStatus.getState() == DAGStatus.State.ERROR) {\n       return 1.0f;\n@@ -237,7 +237,7 @@ public synchronized String getFailureInfo() {\n   @Override\n   public synchronized boolean isJobComplete() {\n     return (dagStatus.getState() == DAGStatus.State.SUCCEEDED ||\n-        dagStatus.getState() == DAGStatus.State.FAILED || \n+        dagStatus.getState() == DAGStatus.State.FAILED ||\n         dagStatus.getState() == DAGStatus.State.KILLED ||\n         dagStatus.getState() == DAGStatus.State.ERROR);\n   }\n@@ -369,7 +369,7 @@ public String toString() {\n     buffer.append(\"needed-mem\" + getNeededMem());\n     return buffer.toString();\n   }\n-  \n+\n   private float getProgress(String vertexName) {\n     Progress progress = dagStatus.getVertexProgress().get(vertexName);\n     if(progress == null) {\n@@ -380,7 +380,7 @@ private float getProgress(String vertexName) {\n     if(totalTasks != 0) {\n       return progress.getSucceededTaskCount()/totalTasks;\n     }\n-    return 1;\n+    return 0;\n   }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/efed85db1ec3e6920fde6599cf9b24b87f426c44",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/8dd3731bb4ef698f9c6d98efb05d02ec7a4e3c98",
        "message": "TEZ-377. Fix NPE in Task when logging user payload in debug mode. (hitesh)",
        "bug_id": "incubator-tez_16",
        "file": [
            {
                "sha": "435f33d6c92bff4f5324e52d6f9d0f8aeffa4068",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java",
                "status": "modified",
                "additions": 13,
                "deletions": 11,
                "changes": 24,
                "blob_url": "https://github.com/apache/incubator-tez/blob/efed85db1ec3e6920fde6599cf9b24b87f426c44/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/efed85db1ec3e6920fde6599cf9b24b87f426c44/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java?ref=efed85db1ec3e6920fde6599cf9b24b87f426c44",
                "patch": "@@ -80,17 +80,6 @@ public void initialize(Configuration conf, byte[] userPayload,\n     Configuration taskConf;\n     if (userPayload != null) {\n       taskConf = MRHelpers.createConfFromUserPayload(userPayload);\n-      if (LOG.isDebugEnabled()) {\n-        Iterator<Entry<String, String>> iter = taskConf.iterator();\n-        String taskIdStr = mrTask.getTaskAttemptId().getTaskID().toString();\n-        while (iter.hasNext()) {\n-          Entry<String, String> confEntry = iter.next();\n-          LOG.debug(\"TaskConf Entry\"\n-              + \", taskId=\" + taskIdStr\n-              + \", key=\" + confEntry.getKey()\n-              + \", value=\" + confEntry.getValue());\n-        }\n-      }\n     } else {\n       taskConf = new Configuration(false);\n     }\n@@ -114,6 +103,19 @@ public void initialize(Configuration conf, byte[] userPayload,\n \n     MRTask mrTask = (MRTask) getProcessor();\n     this.mrTask = mrTask;\n+\n+    if (LOG.isDebugEnabled() && userPayload != null) {\n+      Iterator<Entry<String, String>> iter = taskConf.iterator();\n+      String taskIdStr = mrTask.getTaskAttemptId().getTaskID().toString();\n+      while (iter.hasNext()) {\n+        Entry<String, String> confEntry = iter.next();\n+        LOG.debug(\"TaskConf Entry\"\n+            + \", taskId=\" + taskIdStr\n+            + \", key=\" + confEntry.getKey()\n+            + \", value=\" + confEntry.getValue());\n+      }\n+    }\n+\n     configureMRTask(job, mrTask);\n \n     this.conf = job;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/a9bace052a9dba4b1aa08c2e9310df73928dad84",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/f2f31e0eff3f654d51ca7001a3bf1784cf8d5e0b",
        "message": "TEZ-715. Auto Reduce Parallelism can rarely trigger NPE in AM at DAGAppMaster.handle(DAGAppMaster.java:1268) (bikas)",
        "bug_id": "incubator-tez_17",
        "file": [
            {
                "sha": "8243b7047e2aa349ba73b6814c64065e7faf6aa3",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -78,8 +78,6 @@\n   public List<TezEvent> getTaskAttemptTezEvents(TezTaskAttemptID attemptID,\n       int fromEventId, int maxEvents);\n   \n-  public List<TezEvent> getAndClearTaskTezEvents();\n-\n   public List<String> getDiagnostics();\n \n }"
            },
            {
                "sha": "793c12a44bc129f5a8fa62431003bde9cbcda14d",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "status": "modified",
                "additions": 0,
                "deletions": 12,
                "changes": 12,
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -491,18 +491,6 @@ public float getProgress() {\n     }\n   }\n \n-  @Override\n-  public List<TezEvent> getAndClearTaskTezEvents() {\n-    readLock.lock();\n-    try {\n-      List<TezEvent> events = tezEventsForTaskAttempts;\n-      tezEventsForTaskAttempts = new ArrayList<TezEvent>();\n-      return events;\n-    } finally {\n-      readLock.unlock();\n-    }\n-  }\n-\n   @Override\n   public List<String> getDiagnostics() {\n     List<String> diagnostics = new ArrayList<String>(attempts.size());"
            },
            {
                "sha": "d3e07cb2d09783e606c5cb20de16c1530c0fe8b6",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 27,
                "deletions": 35,
                "changes": 62,
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -462,7 +462,10 @@\n   private Set<String> inputsWithInitializers;\n   private int numInitializedInputs;\n   private boolean startSignalPending = false;\n-  List<TezEvent> pendingRouteEvents = null;\n+  private boolean tasksNotYetScheduled = true;\n+  // We may always store task events in the vertex for scalability\n+  List<TezEvent> pendingTaskEvents = Lists.newLinkedList();\n+  List<TezEvent> pendingRouteEventsWhileIniting = null;\n   List<TezTaskAttemptID> pendingReportedSrcCompletions = Lists.newLinkedList();\n \n   private RootInputInitializerRunner rootInputInitializer;\n@@ -803,6 +806,12 @@ public AppContext getAppContext() {\n   public void scheduleTasks(List<Integer> taskIDs) {\n     readLock.lock();\n     try {\n+      tasksNotYetScheduled = false;\n+      if (!pendingTaskEvents.isEmpty()) {\n+        VertexImpl.ROUTE_EVENT_TRANSITION.transition(this,\n+            new VertexEventRouteEvent(getVertexId(), pendingTaskEvents));\n+        pendingTaskEvents.clear();\n+      }\n       for (Integer taskID : taskIDs) {\n         if (tasks.size() <= taskID.intValue()) {\n           throw new TezUncheckedException(\n@@ -874,10 +883,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n           edge.startEventBuffering();\n         }\n   \n-        // Use a set since the same event may have been sent to multiple tasks\n-        // and we want to avoid duplicates\n-        Set<TezEvent> pendingEvents = new HashSet<TezEvent>();\n-  \n         LOG.info(\"Vertex \" + getVertexId() + \n             \" parallelism set to \" + parallelism + \" from \" + numTasks);\n         // assign to local variable of LinkedHashMap to make sure that changing\n@@ -896,7 +901,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n                     + \" for vertex: \" + getVertexId() + \" name: \" + getName());\n             return false;\n           }\n-          pendingEvents.addAll(task.getAndClearTaskTezEvents());\n           if (i <= parallelism) {\n             continue;\n           }\n@@ -913,7 +917,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n                 + entry.getKey() + \" destination: \" + getVertexId());\n             Vertex sourceVertex = appContext.getCurrentDAG().getVertex(entry.getKey());\n             Edge edge = sourceVertices.get(sourceVertex);\n-            EdgeProperty edgeProperty = edge.getEdgeProperty();\n             try {\n               edge.setCustomEdgeManager(entry.getValue());\n             } catch (Exception e) {\n@@ -926,21 +929,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n           }\n         }\n   \n-        // Re-route all existing TezEvents according to new routing table\n-        // At this point only events attributed to source task attempts can be\n-        // re-routed. e.g. DataMovement or InputFailed events.\n-        // This assumption is fine for now since these tasks haven't been started.\n-        // So they can only get events generated from source task attempts that\n-        // have already been started.\n-        DAG dag = getDAG();\n-        for(TezEvent event : pendingEvents) {\n-          TezVertexID sourceVertexId = event.getSourceInfo().getTaskAttemptID()\n-              .getTaskID().getVertexID();\n-          Vertex sourceVertex = dag.getVertex(sourceVertexId);\n-          Edge sourceEdge = sourceVertices.get(sourceVertex);\n-          sourceEdge.sendTezEventToDestinationTasks(event);\n-        }\n-  \n         // stop buffering events\n         for (Edge edge : sourceVertices.values()) {\n           edge.stopEventBuffering();\n@@ -1550,10 +1538,10 @@ private VertexState initializeVertexInInitializingState() {\n     }\n \n     // Vertex will be moving to INITED state, safe to process pending route events.\n-    if (pendingRouteEvents != null) {\n+    if (pendingRouteEventsWhileIniting != null) {\n       VertexImpl.ROUTE_EVENT_TRANSITION.transition(this,\n-          new VertexEventRouteEvent(getVertexId(), pendingRouteEvents));\n-      pendingRouteEvents = null;\n+          new VertexEventRouteEvent(getVertexId(), pendingRouteEventsWhileIniting));\n+      pendingRouteEventsWhileIniting = null;\n     }\n     return vertexState;\n   }\n@@ -2032,12 +2020,12 @@ private static void checkEventSourceMetadata(Vertex vertex,\n     @Override\n     public void transition(VertexImpl vertex, VertexEvent event) {\n       VertexEventRouteEvent re = (VertexEventRouteEvent) event;\n-      if (vertex.pendingRouteEvents == null) {\n-        vertex.pendingRouteEvents = Lists.newLinkedList();\n+      if (vertex.pendingRouteEventsWhileIniting == null) {\n+        vertex.pendingRouteEventsWhileIniting = Lists.newLinkedList();\n       }\n       // Store the events for post-init routing, since INIT state is when\n       // initial task parallelism will be set\n-      vertex.pendingRouteEvents.addAll(re.getEvents());\n+      vertex.pendingRouteEventsWhileIniting.addAll(re.getEvents());\n     }\n   }\n \n@@ -2103,14 +2091,18 @@ public void transition(VertexImpl vertex, VertexEvent event) {\n             } else {\n               // event not from this vertex. must have come from source vertex.\n               // send to tasks\n-              Edge srcEdge = vertex.sourceVertices.get(vertex.getDAG().getVertex(\n-                  sourceMeta.getTaskVertexName()));\n-              if (srcEdge == null) {\n-                throw new TezUncheckedException(\"Bad source vertex: \" +\n-                    sourceMeta.getTaskVertexName() + \" for destination vertex: \" +\n-                    vertex.getVertexId());\n+              if (vertex.tasksNotYetScheduled) {\n+                vertex.pendingTaskEvents.add(tezEvent);\n+              } else {\n+                Edge srcEdge = vertex.sourceVertices.get(vertex.getDAG().getVertex(\n+                    sourceMeta.getTaskVertexName()));\n+                if (srcEdge == null) {\n+                  throw new TezUncheckedException(\"Bad source vertex: \" +\n+                      sourceMeta.getTaskVertexName() + \" for destination vertex: \" +\n+                      vertex.getVertexId());\n+                }\n+                srcEdge.sendTezEventToDestinationTasks(tezEvent);\n               }\n-              srcEdge.sendTezEventToDestinationTasks(tezEvent);\n             }\n           }\n           break;"
            },
            {
                "sha": "1a14b15b613b02082e02aaea2d02bf6ce8cab09d",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "status": "modified",
                "additions": 42,
                "deletions": 0,
                "changes": 42,
                "blob_url": "https://github.com/apache/incubator-tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -98,6 +98,7 @@\n import org.apache.tez.dag.app.dag.event.VertexEvent;\n import org.apache.tez.dag.app.dag.event.VertexEventRootInputFailed;\n import org.apache.tez.dag.app.dag.event.VertexEventRootInputInitialized;\n+import org.apache.tez.dag.app.dag.event.VertexEventRouteEvent;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskAttemptCompleted;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskCompleted;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskReschedule;\n@@ -114,12 +115,16 @@\n import org.apache.tez.runtime.api.Event;\n import org.apache.tez.runtime.api.OutputCommitter;\n import org.apache.tez.runtime.api.OutputCommitterContext;\n+import org.apache.tez.runtime.api.events.CompositeDataMovementEvent;\n import org.apache.tez.runtime.api.events.DataMovementEvent;\n import org.apache.tez.runtime.api.events.InputReadErrorEvent;\n import org.apache.tez.runtime.api.events.RootInputConfigureVertexTasksEvent;\n import org.apache.tez.runtime.api.events.RootInputDataInformationEvent;\n import org.apache.tez.test.EdgeManagerForTest;\n+import org.apache.tez.runtime.api.impl.EventMetaData;\n+import org.apache.tez.runtime.api.impl.EventMetaData.EventProducerConsumerType;\n import org.apache.tez.runtime.api.impl.GroupInputSpec;\n+import org.apache.tez.runtime.api.impl.TezEvent;\n import org.junit.After;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -1419,6 +1424,43 @@ public void testVertexSetParallelism() {\n     Assert.assertTrue(tasks.keySet().iterator().next().equals(firstTask));\n \n   }\n+  \n+  @SuppressWarnings(\"unchecked\")\n+  @Test(timeout = 5000)\n+  public void testVertexPendingTaskEvents() {\n+    initAllVertices(VertexState.INITED);\n+    VertexImpl v3 = vertices.get(\"vertex3\");\n+    VertexImpl v2 = vertices.get(\"vertex2\");\n+    \n+    startVertex(v2);\n+    startVertex(v3);\n+    \n+    TezTaskID t0_v2 = TezTaskID.getInstance(v2.getVertexId(), 0);\n+    TezTaskAttemptID ta0_t0_v2 = TezTaskAttemptID.getInstance(t0_v2, 0);\n+\n+    List<TezEvent> taskEvents = Lists.newLinkedList();\n+    TezEvent tezEvent1 = new TezEvent(\n+        new CompositeDataMovementEvent(0, 1, new byte[0]), \n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex2\", \"vertex3\", ta0_t0_v2));\n+    TezEvent tezEvent2 = new TezEvent(\n+        new DataMovementEvent(0, new byte[0]), \n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex2\", \"vertex3\", ta0_t0_v2));\n+    taskEvents.add(tezEvent1);\n+    taskEvents.add(tezEvent2);\n+    // send events and test that they are buffered until some task is scheduled\n+    dispatcher.getEventHandler().handle(\n+        new VertexEventRouteEvent(v3.getVertexId(), taskEvents));\n+    dispatcher.await();\n+    Assert.assertEquals(2, v3.pendingTaskEvents.size());\n+    v3.scheduleTasks(Collections.singletonList(new Integer(0)));\n+    dispatcher.await();\n+    Assert.assertEquals(0, v3.pendingTaskEvents.size());\n+    // send events and test that they are not buffered anymore\n+    dispatcher.getEventHandler().handle(\n+        new VertexEventRouteEvent(v3.getVertexId(), taskEvents));\n+    dispatcher.await();\n+    Assert.assertEquals(0, v3.pendingTaskEvents.size());\n+  }\n \n   @Test(timeout = 5000)\n   public void testSetCustomEdgeManager() throws UnsupportedEncodingException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/150ebd3c7934339f31a7b24012ece8e171e1f993",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/a786e41a3c0a164c649ef4922ebbc5a5f3d59201",
        "message": "TEZ-1048. Fix an NPE which can occur when the source task generates no\ndata for a partition, and runs multiple attempts. (sseth)",
        "bug_id": "incubator-tez_18",
        "file": [
            {
                "sha": "e0a416090b60f28e22e2c04124f23b0cc61ed144",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/incubator-tez/blob/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java?ref=150ebd3c7934339f31a7b24012ece8e171e1f993",
                "patch": "@@ -90,7 +90,8 @@ private void processDataMovementEvent(DataMovementEvent dmEvent) {\n         byte[] emptyPartitions = TezUtils.decompressByteStringToByteArray(shufflePayload.getEmptyPartitions());\n         BitSet emptyPartitionsBitSet = TezUtils.fromByteArray(emptyPartitions);\n         if (emptyPartitionsBitSet.get(partitionId)) {\n-          LOG.info(\"Source partition: \" + partitionId + \" did not generate any data. Not fetching.\");\n+          LOG.info(\"Source partition: \" + partitionId + \" did not generate any data. SrcAttempt: [\"\n+              + srcAttemptIdentifier + \"]. Not fetching.\");\n           scheduler.copySucceeded(srcAttemptIdentifier, null, 0, 0, 0, null);\n           return;\n         }"
            },
            {
                "sha": "45a50ad8394514d558a2d79eb1e8dce1ef689ea9",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/incubator-tez/blob/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java?ref=150ebd3c7934339f31a7b24012ece8e171e1f993",
                "patch": "@@ -203,7 +203,11 @@ public synchronized void copySucceeded(InputAttemptIdentifier srcAttemptIdentifi\n       // input is already finished. duplicate fetch.\n       LOG.warn(\"Duplicate fetch of input no longer needs to be fetched: \" + srcAttemptIdentifier);\n       // free the resource - specially memory\n-      output.abort();\n+      \n+      // If the src does not generate data, output will be null.\n+      if (output != null) {\n+        output.abort();\n+      }\n     }\n     // TODO NEWTEZ Should this be releasing the output, if not committed ? Possible memory leak in case of speculation.\n   }"
            },
            {
                "sha": "ac5da74ec0686acc2af40fca318eed3bc941cee4",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/incubator-tez/blob/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java?ref=150ebd3c7934339f31a7b24012ece8e171e1f993",
                "patch": "@@ -106,7 +106,8 @@ private void processDataMovementEvent(DataMovementEvent dme) throws IOException\n       if (emptyPartionsBitSet.get(srcIndex)) {\n         InputAttemptIdentifier srcAttemptIdentifier = new InputAttemptIdentifier(dme.getTargetIndex(),\n             dme.getVersion());\n-        LOG.info(\"Source partition: \" + srcIndex + \" did not generate any data. Not fetching.\");\n+        LOG.info(\"Source partition: \" + srcIndex + \" did not generate any data. SrcAttempt: [\"\n+            + srcAttemptIdentifier + \"]. Not fetching.\");\n         shuffleManager.addCompletedInputWithNoData(srcAttemptIdentifier);\n         return;\n       }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/238255b6941fa645bb5aab32ab78515cf6994c38",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/e4c2a82533fd8032e78a8c4dda3ff7216f85fc7a",
        "message": "TEZ-863 Addendum. Queue events for relevant inputs untill the Input has\nbeen started. Fixes a potential NPE in case of no auto start.\n(Contributed by Rajesh Balamohan)",
        "bug_id": "incubator-tez_19",
        "file": [
            {
                "sha": "d2d4e562797c54e8f1f07f7a5a95a8bf5760ac82",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/incubator-tez/blob/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java?ref=238255b6941fa645bb5aab32ab78515cf6994c38",
                "patch": "@@ -95,16 +95,20 @@\n   @Override\n   public void start() throws IOException {\n     synchronized (this) {\n-      if (!isStarted.getAndSet(true)) {\n+      if (!isStarted.get()) {\n         // Start the shuffle - copy and merge\n         shuffle.run();\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Initialized the handlers in shuffle..Safe to start processing..\");\n+        }\n         List<Event> pending = new LinkedList<Event>();\n         pendingEvents.drainTo(pending);\n         if (pending.size() > 0) {\n           LOG.info(\"NoAutoStart delay in processing first event: \"\n               + (System.currentTimeMillis() - firstEventReceivedTime));\n           shuffle.handleEvents(pending);\n         }\n+        isStarted.set(true);\n       }\n     }\n   }"
            },
            {
                "sha": "12416068bd571a389ad0851ae22fc45145e50fc7",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/incubator-tez/blob/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java?ref=238255b6941fa645bb5aab32ab78515cf6994c38",
                "patch": "@@ -74,7 +74,7 @@ public ShuffledUnorderedKVInput() {\n   @Override\n   public void start() throws IOException {\n     synchronized (this) {\n-      if (!isStarted.getAndSet(true)) {\n+      if (!isStarted.get()) {\n         this.shuffleManager.run();\n         this.kvReader = this.shuffleManager.createReader();\n         List<Event> pending = new LinkedList<Event>();\n@@ -84,6 +84,7 @@ public void start() throws IOException {\n               + (System.currentTimeMillis() - firstEventReceivedTime));\n           shuffleManager.handleEvents(pending);\n         }\n+        isStarted.set(true);\n       }\n     }\n   }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-tez/commit/7e1d11010802050182835f3cc7a3b86619ee2cb1",
        "repo": "incubator-tez",
        "parent": "https://github.com/apache/incubator-tez/commit/be0d3898864423b005c978d2ce4d810eb775728d",
        "message": "TEZ-863. Queue events for relevant inputs untill the Input has been\nstarted. Fixes a potential NPE in case of no auto start. (sseth)",
        "bug_id": "incubator-tez_20",
        "file": [
            {
                "sha": "d70924ad6fec5da9f7061fa679106908c6691815",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "status": "modified",
                "additions": 30,
                "deletions": 4,
                "changes": 34,
                "blob_url": "https://github.com/apache/incubator-tez/blob/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java?ref=7e1d11010802050182835f3cc7a3b86619ee2cb1",
                "patch": "@@ -19,7 +19,10 @@\n \n import java.io.IOException;\n import java.util.Collections;\n+import java.util.LinkedList;\n import java.util.List;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.commons.logging.Log;\n@@ -60,6 +63,9 @@\n   protected Configuration conf;\n   protected int numInputs = 0;\n   protected Shuffle shuffle;\n+  private final BlockingQueue<Event> pendingEvents = new LinkedBlockingQueue<Event>();\n+  private volatile long firstEventReceivedTime = -1;\n+  // ZZZ LOG THIS TIME\n   @SuppressWarnings(\"rawtypes\")\n   protected ValuesIterator vIter;\n \n@@ -88,9 +94,18 @@\n \n   @Override\n   public void start() throws IOException {\n-    if (!isStarted.getAndSet(true)) {\n-      // Start the shuffle - copy and merge\n-      shuffle.run();\n+    synchronized (this) {\n+      if (!isStarted.getAndSet(true)) {\n+        // Start the shuffle - copy and merge\n+        shuffle.run();\n+        List<Event> pending = new LinkedList<Event>();\n+        pendingEvents.drainTo(pending);\n+        if (pending.size() > 0) {\n+          LOG.info(\"NoAutoStart delay in processing first event: \"\n+              + (System.currentTimeMillis() - firstEventReceivedTime));\n+          shuffle.handleEvents(pending);\n+        }\n+      }\n     }\n   }\n \n@@ -123,7 +138,7 @@ public void waitForInputReady() throws IOException, InterruptedException {\n \n   @Override\n   public List<Event> close() throws IOException {\n-    if (this.numInputs != 0) {\n+    if (this.numInputs != 0 && rawIter != null) {\n       rawIter.close();\n     }\n     return Collections.emptyList();\n@@ -192,6 +207,17 @@ public void handleEvents(List<Event> inputEvents) {\n     if (numInputs == 0) {\n       throw new RuntimeException(\"No input events expected as numInputs is 0\");\n     }\n+    if (!isStarted.get()) {\n+      synchronized (this) {\n+        if (!isStarted.get()) {\n+          if (firstEventReceivedTime == -1) {\n+            firstEventReceivedTime = System.currentTimeMillis();\n+          }\n+          pendingEvents.addAll(inputEvents);\n+          return;\n+        }\n+      }\n+    }\n     shuffle.handleEvents(inputEvents);\n   }\n "
            },
            {
                "sha": "f00ef3dc427726e9937598490cc3be21476f5f06",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "status": "modified",
                "additions": 28,
                "deletions": 3,
                "changes": 31,
                "blob_url": "https://github.com/apache/incubator-tez/blob/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "raw_url": "https://github.com/apache/incubator-tez/raw/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java?ref=7e1d11010802050182835f3cc7a3b86619ee2cb1",
                "patch": "@@ -20,7 +20,10 @@\n \n import java.io.IOException;\n import java.util.Collections;\n+import java.util.LinkedList;\n import java.util.List;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.commons.logging.Log;\n@@ -43,6 +46,8 @@\n   private Configuration conf;\n   private int numInputs = -1;\n   private BroadcastShuffleManager shuffleManager;\n+  private final BlockingQueue<Event> pendingEvents = new LinkedBlockingQueue<Event>();\n+  private volatile long firstEventReceivedTime = -1;\n   @SuppressWarnings(\"rawtypes\")\n   private BroadcastKVReader kvReader;\n   \n@@ -68,9 +73,18 @@ public ShuffledUnorderedKVInput() {\n \n   @Override\n   public void start() throws IOException {\n-    if (!isStarted.getAndSet(true)) {\n-      this.shuffleManager.run();\n-      this.kvReader = this.shuffleManager.createReader();\n+    synchronized (this) {\n+      if (!isStarted.getAndSet(true)) {\n+        this.shuffleManager.run();\n+        this.kvReader = this.shuffleManager.createReader();\n+        List<Event> pending = new LinkedList<Event>();\n+        pendingEvents.drainTo(pending);\n+        if (pending.size() > 0) {\n+          LOG.info(\"NoAutoStart delay in processing first event: \"\n+              + (System.currentTimeMillis() - firstEventReceivedTime));\n+          shuffleManager.handleEvents(pending);\n+        }\n+      }\n     }\n   }\n \n@@ -102,6 +116,17 @@ public void handleEvents(List<Event> inputEvents) throws IOException {\n     if (numInputs == 0) {\n       throw new RuntimeException(\"No input events expected as numInputs is 0\");\n     }\n+    if (!isStarted.get()) {\n+      synchronized(this) {\n+        if (!isStarted.get()) {\n+          if (firstEventReceivedTime == -1) {\n+            firstEventReceivedTime = System.currentTimeMillis();\n+          }\n+          pendingEvents.addAll(inputEvents);\n+          return;\n+        }\n+      }\n+    }\n     shuffleManager.handleEvents(inputEvents);\n   }\n "
            }
        ]
    }
]
