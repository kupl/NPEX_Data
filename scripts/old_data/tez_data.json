[
    {
        "commit": "https://github.com/apache/tez/commit/689d7388592196c320319f026961b3fef0167dc5",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/09c6f902fdab527ca537f6b727e70c1579f2a2cf",
        "message": "TEZ-4108. NullPointerException during speculative execution race condition",
        "bug_id": "tez_1",
        "file": [
            {
                "sha": "39e2b4c1f7c40a27ae6b4a484999e0bbcf51a94b",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tez/blob/689d7388592196c320319f026961b3fef0167dc5/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/689d7388592196c320319f026961b3fef0167dc5/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java?ref=689d7388592196c320319f026961b3fef0167dc5",
                "patch": "@@ -1029,7 +1029,9 @@ public void transition(TaskImpl task, TaskEvent event) {\n         // find the oldest running attempt\n         if (!ta.isFinished()) {\n           earliestUnfinishedAttempt = ta;\n-          task.nodesWithRunningAttempts.add(ta.getNodeId());\n+          if (ta.getNodeId() != null) {\n+            task.nodesWithRunningAttempts.add(ta.getNodeId());\n+          }\n         } else {\n           if (TaskAttemptState.SUCCEEDED.equals(ta.getState())) {\n             LOG.info(\"Ignore speculation scheduling for task {} since it has succeeded with attempt {}.\","
            },
            {
                "sha": "1af6092d1ecf5775c10bd390eb0a568f3eecb28d",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskImpl.java",
                "status": "modified",
                "additions": 39,
                "deletions": 0,
                "changes": 39,
                "blob_url": "https://github.com/apache/tez/blob/689d7388592196c320319f026961b3fef0167dc5/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/689d7388592196c320319f026961b3fef0167dc5/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskImpl.java?ref=689d7388592196c320319f026961b3fef0167dc5",
                "patch": "@@ -887,6 +887,45 @@ public void testFailedThenSpeculativeSucceeded() {\n     assertEquals(2, mockTask.getAttemptList().size());\n   }\n \n+  @Test\n+  public void testKilledBeforeSpeculatedSucceeded() {\n+    conf.setInt(TezConfiguration.TEZ_AM_TASK_MAX_FAILED_ATTEMPTS, 1);\n+    Vertex vertex = mock(Vertex.class);\n+    doReturn(new VertexImpl.VertexConfigImpl(conf)).when(vertex).getVertexConfig();\n+    mockTask = new MockTaskImpl(vertexId, partition,\n+        eventHandler, conf, taskCommunicatorManagerInterface, clock,\n+        taskHeartbeatHandler, appContext, leafVertex,\n+        taskResource, containerContext, vertex);\n+    TezTaskID taskId = getNewTaskID();\n+    scheduleTaskAttempt(taskId);\n+    MockTaskAttemptImpl firstAttempt = mockTask.getLastAttempt();\n+    launchTaskAttempt(firstAttempt.getID());\n+    updateAttemptState(firstAttempt, TaskAttemptState.RUNNING);\n+\n+    mockTask.handle(createTaskTAKilledEvent(firstAttempt.getID()));\n+    assertEquals(TaskStateInternal.RUNNING, mockTask.getInternalState());\n+\n+    // We need to manually override the current node id\n+    // to induce NPE in the state machine transition\n+    // simulating killed before speculated scenario\n+    NodeId nodeId = mockNodeId;\n+    mockNodeId = null;\n+\n+    // Add a speculative task attempt\n+    mockTask.handle(createTaskTAAddSpecAttempt(mockTask.getLastAttempt().getID()));\n+    mockNodeId = nodeId;\n+    MockTaskAttemptImpl specAttempt = mockTask.getLastAttempt();\n+    launchTaskAttempt(specAttempt.getID());\n+    updateAttemptState(specAttempt, TaskAttemptState.RUNNING);\n+    assertEquals(3, mockTask.getAttemptList().size());\n+\n+    // Now succeed the speculative attempt\n+    updateAttemptState(specAttempt, TaskAttemptState.SUCCEEDED);\n+    mockTask.handle(createTaskTASucceededEvent(specAttempt.getID()));\n+    assertEquals(TaskState.SUCCEEDED, mockTask.getState());\n+    assertEquals(3, mockTask.getAttemptList().size());\n+  }\n+\n   @Test(timeout = 20000)\n   public void testKilledAttemptUpdatesDAGScheduler() {\n     TezTaskID taskId = getNewTaskID();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/633fde2cd41ae0a2f51b5c34190318bae54a2ee6",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/4496f66673de97bbe92e9b143696635038c2b799",
        "message": "TEZ-3970. NullPointerException in Tez ShuffleHandler Ranged Fetch (Jonathan Eagles via kshukla)",
        "bug_id": "tez_2",
        "file": [
            {
                "sha": "f294edced96410a5eca38581a4d12b95f4d31cf3",
                "filename": "tez-plugins/tez-aux-services/src/main/java/org/apache/tez/auxservices/ShuffleHandler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/633fde2cd41ae0a2f51b5c34190318bae54a2ee6/tez-plugins/tez-aux-services/src/main/java/org/apache/tez/auxservices/ShuffleHandler.java",
                "raw_url": "https://github.com/apache/tez/raw/633fde2cd41ae0a2f51b5c34190318bae54a2ee6/tez-plugins/tez-aux-services/src/main/java/org/apache/tez/auxservices/ShuffleHandler.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-plugins/tez-aux-services/src/main/java/org/apache/tez/auxservices/ShuffleHandler.java?ref=633fde2cd41ae0a2f51b5c34190318bae54a2ee6",
                "patch": "@@ -1399,9 +1399,9 @@ protected ChannelFuture sendMapOutput(ChannelHandlerContext ctx, Channel ch,\n         DataOutputBuffer dob = new DataOutputBuffer();\n         header.write(dob);\n         // Free the memory needed to store the spill and index records\n-        outputInfo.finish();\n         ch.write(wrappedBuffer(dob.getData(), 0, dob.getLength()));\n       }\n+      outputInfo.finish();\n \n       final long rangeOffset = firstIndex.getStartOffset();\n       final long rangePartLength = lastIndex.getStartOffset() + lastIndex.getPartLength() - firstIndex.getStartOffset();"
            },
            {
                "sha": "7c421a9c17f354f326d615086ff3fa7eedcf4618",
                "filename": "tez-plugins/tez-aux-services/src/test/java/org/apache/tez/auxservices/TestShuffleHandler.java",
                "status": "modified",
                "additions": 103,
                "deletions": 11,
                "changes": 114,
                "blob_url": "https://github.com/apache/tez/blob/633fde2cd41ae0a2f51b5c34190318bae54a2ee6/tez-plugins/tez-aux-services/src/test/java/org/apache/tez/auxservices/TestShuffleHandler.java",
                "raw_url": "https://github.com/apache/tez/raw/633fde2cd41ae0a2f51b5c34190318bae54a2ee6/tez-plugins/tez-aux-services/src/test/java/org/apache/tez/auxservices/TestShuffleHandler.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-plugins/tez-aux-services/src/test/java/org/apache/tez/auxservices/TestShuffleHandler.java?ref=633fde2cd41ae0a2f51b5c34190318bae54a2ee6",
                "patch": "@@ -55,6 +55,7 @@\n import org.apache.hadoop.fs.Path;\n import org.apache.hadoop.io.DataOutputBuffer;\n import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.WritableUtils;\n import org.apache.hadoop.io.nativeio.NativeIO;\n import org.apache.hadoop.mapred.JobID;\n import org.apache.hadoop.mapred.MapTask;\n@@ -75,6 +76,8 @@\n import org.apache.hadoop.yarn.server.api.ApplicationInitializationContext;\n import org.apache.hadoop.yarn.server.api.ApplicationTerminationContext;\n import org.apache.hadoop.yarn.server.records.Version;\n+import org.apache.tez.runtime.library.common.sort.impl.TezIndexRecord;\n+import org.apache.tez.runtime.library.common.sort.impl.TezSpillRecord;\n import org.jboss.netty.channel.Channel;\n import org.jboss.netty.channel.ChannelFuture;\n import org.jboss.netty.channel.ChannelHandlerContext;\n@@ -657,6 +660,102 @@ protected ChannelFuture sendMapOutput(ChannelHandlerContext ctx,\n     shuffleHandler.stop();\n   }\n \n+  /**\n+   * Validate the ranged fetch works as expected\n+   */\n+  @Test(timeout = 10000)\n+  public void testRangedFetch() throws IOException {\n+    Configuration conf = new Configuration();\n+    conf.setInt(ShuffleHandler.SHUFFLE_PORT_CONFIG_KEY, 0);\n+    conf.setInt(ShuffleHandler.MAX_SHUFFLE_CONNECTIONS, 3);\n+    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n+        \"simple\");\n+    UserGroupInformation.setConfiguration(conf);\n+    File absLogDir = new File(\"target\",\n+        TestShuffleHandler.class.getSimpleName() + \"LocDir\").getAbsoluteFile();\n+    conf.set(YarnConfiguration.NM_LOCAL_DIRS, absLogDir.getAbsolutePath());\n+    ApplicationId appId = ApplicationId.newInstance(12345, 1);\n+    LOG.info(appId.toString());\n+    String appAttemptId = \"attempt_12345_1_m_1_0\";\n+    String user = \"randomUser\";\n+    String reducerIdStart = \"0\";\n+    String reducerIdEnd = \"1\";\n+    List<File> fileMap = new ArrayList<>();\n+    createShuffleHandlerFiles(absLogDir, user, appId.toString(), appAttemptId,\n+        conf, fileMap);\n+    ShuffleHandler shuffleHandler = new ShuffleHandler() {\n+\n+      @Override\n+      protected Shuffle getShuffle(Configuration conf) {\n+        // replace the shuffle handler with one stubbed for testing\n+        return new Shuffle(conf) {\n+\n+          @Override\n+          protected void verifyRequest(String appid, ChannelHandlerContext ctx,\n+                                       HttpRequest request, HttpResponse response, URL requestUri)\n+              throws IOException {\n+            // Do nothing.\n+          }\n+\n+        };\n+      }\n+    };\n+    shuffleHandler.init(conf);\n+    try {\n+      shuffleHandler.start();\n+      DataOutputBuffer outputBuffer = new DataOutputBuffer();\n+      outputBuffer.reset();\n+      Token<JobTokenIdentifier> jt =\n+          new Token<JobTokenIdentifier>(\"identifier\".getBytes(),\n+              \"password\".getBytes(), new Text(user), new Text(\"shuffleService\"));\n+      jt.write(outputBuffer);\n+      shuffleHandler\n+          .initializeApplication(new ApplicationInitializationContext(user,\n+              appId, ByteBuffer.wrap(outputBuffer.getData(), 0,\n+              outputBuffer.getLength())));\n+      URL url =\n+          new URL(\n+              \"http://127.0.0.1:\"\n+                  + shuffleHandler.getConfig().get(\n+                  ShuffleHandler.SHUFFLE_PORT_CONFIG_KEY)\n+                  + \"/mapOutput?job=job_12345_0001&dag=1&reduce=\" + reducerIdStart + \"-\" + reducerIdEnd\n+                  + \"&map=attempt_12345_1_m_1_0\");\n+      HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n+      conn.setRequestProperty(ShuffleHeader.HTTP_HEADER_NAME,\n+          ShuffleHeader.DEFAULT_HTTP_HEADER_NAME);\n+      conn.setRequestProperty(ShuffleHeader.HTTP_HEADER_VERSION,\n+          ShuffleHeader.DEFAULT_HTTP_HEADER_VERSION);\n+      conn.connect();\n+      boolean succeeded = false;\n+      try {\n+        DataInputStream is = new DataInputStream(conn.getInputStream());\n+        int partitionCount = WritableUtils.readVInt(is);\n+        List<ShuffleHeader> headers = new ArrayList<>(2);\n+        for (int i = 0; i < partitionCount; i++) {\n+          ShuffleHeader header = new ShuffleHeader();\n+          header.readFields(is);\n+          Assert.assertEquals(\"Incorrect map id\", \"attempt_12345_1_m_1_0\", header.getMapId());\n+          Assert.assertEquals(\"Incorrect reduce id\", i, header.getPartition());\n+          headers.add(header);\n+        }\n+        for (ShuffleHeader header: headers) {\n+          byte[] bytes = new byte[(int)header.getCompressedLength()];\n+          is.read(bytes);\n+        }\n+        succeeded = true;\n+        // Read one more byte to force EOF\n+        is.readByte();\n+        Assert.fail(\"More fetch bytes that expected in stream\");\n+      } catch (EOFException e) {\n+        Assert.assertTrue(\"Failed to copy ranged fetch\", succeeded);\n+      }\n+\n+    } finally {\n+      shuffleHandler.stop();\n+      FileUtil.fullyDelete(absLogDir);\n+    }\n+  }\n+\n   /**\n    * Validate the ownership of the map-output files being pulled in. The\n    * local-file-system owner of the file should match the user component in the\n@@ -785,18 +884,11 @@ private static void createIndexFile(File indexFile, Configuration conf)\n       System.out.println(\"Deleting existing file\");\n       indexFile.delete();\n     }\n-    indexFile.createNewFile();\n-    FSDataOutputStream output = FileSystem.getLocal(conf).getRaw().append(\n-        new Path(indexFile.getAbsolutePath()));\n     Checksum crc = new PureJavaCrc32();\n-    crc.reset();\n-    CheckedOutputStream chk = new CheckedOutputStream(output, crc);\n-    String msg = \"Writing new index file. This file will be used only \" +\n-        \"for the testing.\";\n-    chk.write(Arrays.copyOf(msg.getBytes(),\n-        MapTask.MAP_OUTPUT_INDEX_RECORD_LENGTH));\n-    output.writeLong(chk.getChecksum().getValue());\n-    output.close();\n+    TezSpillRecord tezSpillRecord = new TezSpillRecord(2);\n+    tezSpillRecord.putIndex(new TezIndexRecord(0, 10, 10), 0);\n+    tezSpillRecord.putIndex(new TezIndexRecord(10, 10, 10), 1);\n+    tezSpillRecord.writeToFile(new Path(indexFile.getAbsolutePath()), conf, crc);\n   }\n \n   @Test"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/72c458a431545565d38681862a883065f4efa44e",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/081a64f716a73a5f65c8d74e6ab729e57b0747bc",
        "message": "TEZ-3932. TaskSchedulerManager can throw NullPointerException during DAGAppMaster container cleanup race (Jonathan Eagles via jlowe)",
        "bug_id": "tez_3",
        "file": [
            {
                "sha": "61e3702eafc33435ef17ddf1ec99a9c823666747",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java",
                "status": "modified",
                "additions": 29,
                "deletions": 12,
                "changes": 41,
                "blob_url": "https://github.com/apache/tez/blob/72c458a431545565d38681862a883065f4efa44e/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java",
                "raw_url": "https://github.com/apache/tez/raw/72c458a431545565d38681862a883065f4efa44e/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java?ref=72c458a431545565d38681862a883065f4efa44e",
                "patch": "@@ -420,10 +420,14 @@ private void handleTAUnsuccessfulEnd(AMSchedulerEventTAEnded event) {\n       // Inform the Node - the task has asked to be STOPPED / has already\n       // stopped.\n       // AMNodeImpl blacklisting logic does not account for KILLED attempts.\n-      sendEvent(new AMNodeEventTaskAttemptEnded(appContext.getAllContainers().\n-          get(attemptContainerId).getContainer().getNodeId(), event.getSchedulerId(),\n-          attemptContainerId,\n-          attempt.getID(), event.getState() == TaskAttemptState.FAILED));\n+      AMContainer amContainer = appContext.getAllContainers().get(attemptContainerId);\n+      // DAG can be shutting down so protect against container cleanup race\n+      if (amContainer != null) {\n+        Container container = amContainer.getContainer();\n+        sendEvent(new AMNodeEventTaskAttemptEnded(container.getNodeId(), event.getSchedulerId(),\n+            attemptContainerId,\n+            attempt.getID(), event.getState() == TaskAttemptState.FAILED));\n+      }\n     }\n   }\n \n@@ -436,9 +440,14 @@ private void handleTASucceeded(AMSchedulerEventTAEnded event) {\n     if (event.getUsedContainerId() != null) {\n       sendEvent(new AMContainerEventTASucceeded(usedContainerId,\n           event.getAttemptID()));\n-      sendEvent(new AMNodeEventTaskAttemptSucceeded(appContext.getAllContainers().\n-          get(usedContainerId).getContainer().getNodeId(), event.getSchedulerId(), usedContainerId,\n-          event.getAttemptID()));\n+      AMContainer amContainer = appContext.getAllContainers().get(usedContainerId);\n+      // DAG can be shutting down so protect against container cleanup race\n+      if (amContainer != null) {\n+        Container container = amContainer.getContainer();\n+        sendEvent(new AMNodeEventTaskAttemptSucceeded(container.getNodeId(), event.getSchedulerId(),\n+            usedContainerId,\n+            event.getAttemptID()));\n+      }\n     }\n \n     boolean wasContainerAllocated = false;\n@@ -742,10 +751,15 @@ public synchronized void taskAllocated(int schedulerId, Object task,\n     // because the deallocateTask downcall may have raced with the\n     // taskAllocated() upcall\n     assert task.equals(taskAttempt);\n- \n-    if (appContext.getAllContainers().get(containerId).getState() == AMContainerState.ALLOCATED) {\n-      sendEvent(new AMContainerEventLaunchRequest(containerId, taskAttempt.getVertexID(),\n-          event.getContainerContext(), event.getLauncherId(), event.getTaskCommId()));\n+\n+    AMContainer amContainer = appContext.getAllContainers().get(containerId);\n+    // Even though we just added this container,\n+    // DAG can be shutting down so protect against container cleanup race\n+    if (amContainer != null) {\n+      if (amContainer.getState() == AMContainerState.ALLOCATED) {\n+        sendEvent(new AMContainerEventLaunchRequest(containerId, taskAttempt.getVertexID(),\n+            event.getContainerContext(), event.getLauncherId(), event.getTaskCommId()));\n+      }\n     }\n     sendEvent(new AMContainerEventAssignTA(containerId, taskAttempt.getID(),\n         event.getRemoteTaskSpec(), event.getContainerContext().getLocalResources(), event\n@@ -951,7 +965,10 @@ public void preemptContainer(int schedulerId, ContainerId containerId) {\n     // An AMContainer instance should already exist if an attempt is being made to preempt it\n     AMContainer amContainer = appContext.getAllContainers().get(containerId);\n     try {\n-      taskSchedulers[amContainer.getTaskSchedulerIdentifier()].deallocateContainer(containerId);\n+      // DAG can be shutting down so protect against container cleanup race\n+      if (amContainer != null) {\n+        taskSchedulers[amContainer.getTaskSchedulerIdentifier()].deallocateContainer(containerId);\n+      }\n     } catch (Exception e) {\n       String msg = \"Error in TaskScheduler when preempting container\"\n           + \", scheduler=\" + Utils.getTaskSchedulerIdentifierString(amContainer.getTaskSchedulerIdentifier(), appContext)"
            },
            {
                "sha": "dcf9a5dd698c2b06e2ea9515aefdd83781d9d6de",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java",
                "status": "modified",
                "additions": 107,
                "deletions": 1,
                "changes": 108,
                "blob_url": "https://github.com/apache/tez/blob/72c458a431545565d38681862a883065f4efa44e/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java",
                "raw_url": "https://github.com/apache/tez/raw/72c458a431545565d38681862a883065f4efa44e/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java?ref=72c458a431545565d38681862a883065f4efa44e",
                "patch": "@@ -70,6 +70,7 @@\n import org.apache.tez.dag.api.TezException;\n import org.apache.tez.dag.api.UserPayload;\n import org.apache.tez.dag.api.client.DAGClientServer;\n+import org.apache.tez.dag.api.oldrecords.TaskAttemptState;\n import org.apache.tez.dag.app.AppContext;\n import org.apache.tez.dag.app.ContainerContext;\n import org.apache.tez.dag.app.ServicePluginLifecycleAbstractService;\n@@ -84,6 +85,7 @@\n import org.apache.tez.dag.app.rm.container.AMContainer;\n import org.apache.tez.dag.app.rm.container.AMContainerEventAssignTA;\n import org.apache.tez.dag.app.rm.container.AMContainerEventCompleted;\n+import org.apache.tez.dag.app.rm.container.AMContainerEventStopRequest;\n import org.apache.tez.dag.app.rm.container.AMContainerEventType;\n import org.apache.tez.dag.app.rm.container.AMContainerMap;\n import org.apache.tez.dag.app.rm.container.AMContainerState;\n@@ -217,6 +219,79 @@ public void testSimpleAllocate() throws Exception {\n     assertEquals(mockAttemptId, assignEvent.getTaskAttemptId());\n   }\n \n+  @Test(timeout = 5000)\n+  public void testTASucceededAfterContainerCleanup() throws Exception {\n+    Configuration conf = new Configuration(false);\n+    schedulerHandler.init(conf);\n+    schedulerHandler.start();\n+\n+    TaskAttemptImpl mockTaskAttempt = mock(TaskAttemptImpl.class);\n+    TezTaskAttemptID mockAttemptId = mock(TezTaskAttemptID.class);\n+    when(mockAttemptId.getId()).thenReturn(0);\n+    when(mockTaskAttempt.getID()).thenReturn(mockAttemptId);\n+    Resource resource = Resource.newInstance(1024, 1);\n+    ContainerContext containerContext =\n+        new ContainerContext(new HashMap<String, LocalResource>(), new Credentials(),\n+            new HashMap<String, String>(), \"\");\n+    int priority = 10;\n+    TaskLocationHint locHint = TaskLocationHint.createTaskLocationHint(new HashSet<String>(), null);\n+\n+    ContainerId mockCId = mock(ContainerId.class);\n+    Container container = mock(Container.class);\n+    when(container.getId()).thenReturn(mockCId);\n+\n+    AMContainer mockAMContainer = mock(AMContainer.class);\n+    when(mockAMContainer.getContainerId()).thenReturn(mockCId);\n+    when(mockAMContainer.getState()).thenReturn(AMContainerState.IDLE);\n+\n+    // Returning null container will replicate container cleanup scenario\n+    when(mockAMContainerMap.get(mockCId)).thenReturn(null);\n+\n+    AMSchedulerEventTALaunchRequest lr =\n+        new AMSchedulerEventTALaunchRequest(mockAttemptId, resource, null, mockTaskAttempt, locHint,\n+            priority, containerContext, 0, 0, 0);\n+    schedulerHandler.taskAllocated(0, mockTaskAttempt, lr, container);\n+    assertEquals(1, mockEventHandler.events.size());\n+    assertTrue(mockEventHandler.events.get(0) instanceof AMContainerEventAssignTA);\n+    AMContainerEventAssignTA assignEvent =\n+        (AMContainerEventAssignTA) mockEventHandler.events.get(0);\n+    assertEquals(priority, assignEvent.getPriority());\n+    assertEquals(mockAttemptId, assignEvent.getTaskAttemptId());\n+  }\n+\n+  @Test(timeout = 5000)\n+  public void testTAUnsuccessfulAfterContainerCleanup() throws Exception {\n+    Configuration conf = new Configuration(false);\n+    schedulerHandler.init(conf);\n+    schedulerHandler.start();\n+\n+    TaskAttemptImpl mockTaskAttempt = mock(TaskAttemptImpl.class);\n+    TezTaskAttemptID mockAttemptId = mock(TezTaskAttemptID.class);\n+    when(mockAttemptId.getId()).thenReturn(0);\n+    when(mockTaskAttempt.getID()).thenReturn(mockAttemptId);\n+\n+    ContainerId mockCId = mock(ContainerId.class);\n+    Container container = mock(Container.class);\n+    when(container.getId()).thenReturn(mockCId);\n+\n+    AMContainer mockAMContainer = mock(AMContainer.class);\n+    when(mockAMContainer.getContainerId()).thenReturn(mockCId);\n+    when(mockAMContainer.getState()).thenReturn(AMContainerState.IDLE);\n+    when(mockTaskAttempt.getAssignedContainerID()).thenReturn(mockCId);\n+\n+    // Returning null container will replicate container cleanup scenario\n+    when(mockAMContainerMap.get(mockCId)).thenReturn(null);\n+\n+    schedulerHandler.handleEvent(\n+        new AMSchedulerEventTAEnded(\n+            mockTaskAttempt, mockCId, TaskAttemptState.KILLED, null, null, 0));\n+    assertEquals(1, mockEventHandler.events.size());\n+    assertTrue(mockEventHandler.events.get(0) instanceof AMContainerEventStopRequest);\n+    AMContainerEventStopRequest stopEvent =\n+        (AMContainerEventStopRequest) mockEventHandler.events.get(0);\n+    assertEquals(mockCId, stopEvent.getContainerId());\n+  }\n+\n   @Test (timeout = 5000)\n   public void testTaskBasedAffinity() throws Exception {\n     Configuration conf = new Configuration(false);\n@@ -288,7 +363,7 @@ public void testContainerPreempted() throws IOException {\n     schedulerHandler.stop();\n     schedulerHandler.close();\n   }\n-  \n+\n   @Test (timeout = 5000)\n   public void testContainerInternalPreempted() throws IOException, ServicePluginException {\n     Configuration conf = new Configuration(false);\n@@ -318,6 +393,37 @@ public void testContainerInternalPreempted() throws IOException, ServicePluginEx\n     schedulerHandler.stop();\n     schedulerHandler.close();\n   }\n+\n+  @Test(timeout = 5000)\n+  public void testContainerInternalPreemptedAfterContainerCleanup() throws IOException, ServicePluginException {\n+    Configuration conf = new Configuration(false);\n+    schedulerHandler.init(conf);\n+    schedulerHandler.start();\n+\n+    AMContainer mockAmContainer = mock(AMContainer.class);\n+    when(mockAmContainer.getTaskSchedulerIdentifier()).thenReturn(0);\n+    when(mockAmContainer.getContainerLauncherIdentifier()).thenReturn(0);\n+    when(mockAmContainer.getTaskCommunicatorIdentifier()).thenReturn(0);\n+    ContainerId mockCId = mock(ContainerId.class);\n+    verify(mockTaskScheduler, times(0)).deallocateContainer((ContainerId) any());\n+    // Returning null container will replicate container cleanup scenario\n+    when(mockAMContainerMap.get(mockCId)).thenReturn(null);\n+    schedulerHandler.preemptContainer(0, mockCId);\n+    verify(mockTaskScheduler, times(0)).deallocateContainer(mockCId);\n+    assertEquals(1, mockEventHandler.events.size());\n+    Event event = mockEventHandler.events.get(0);\n+    assertEquals(AMContainerEventType.C_COMPLETED, event.getType());\n+    AMContainerEventCompleted completedEvent = (AMContainerEventCompleted) event;\n+    assertEquals(mockCId, completedEvent.getContainerId());\n+    assertEquals(\"Container preempted internally\", completedEvent.getDiagnostics());\n+    assertTrue(completedEvent.isPreempted());\n+    Assert.assertFalse(completedEvent.isDiskFailed());\n+    assertEquals(TaskAttemptTerminationCause.INTERNAL_PREEMPTION,\n+        completedEvent.getTerminationCause());\n+\n+    schedulerHandler.stop();\n+    schedulerHandler.close();\n+  }\n   \n   @Test (timeout = 5000)\n   public void testContainerDiskFailed() throws IOException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/f86128a8dd8a7bbda6b2b61bcaee336b35c6100a",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/7236d1563ef71a4f551da2bca5501713cbf1d037",
        "message": "TEZ-3834. TaskSchedulerManager NullPointerException during shutdown when failed to start. Contributed by Jonathan Eagles",
        "bug_id": "tez_4",
        "file": [
            {
                "sha": "7c1b926e952adf6485a690c24f3f5680529597e6",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java",
                "status": "modified",
                "additions": 17,
                "deletions": 7,
                "changes": 24,
                "blob_url": "https://github.com/apache/tez/blob/f86128a8dd8a7bbda6b2b61bcaee336b35c6100a/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java",
                "raw_url": "https://github.com/apache/tez/raw/f86128a8dd8a7bbda6b2b61bcaee336b35c6100a/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerManager.java?ref=f86128a8dd8a7bbda6b2b61bcaee336b35c6100a",
                "patch": "@@ -684,12 +684,14 @@ protected void notifyForTest() {\n \n   public void initiateStop() {\n     for (int i = 0 ; i < taskSchedulers.length ; i++) {\n-      try {\n-        taskSchedulers[i].getTaskScheduler().initiateStop();\n-      } catch (Exception e) {\n-        // Ignore for now as scheduler stop invoked on shutdown\n-        LOG.error(\"Failed to do a clean initiateStop for Scheduler: \"\n-            + Utils.getTaskSchedulerIdentifierString(i, appContext), e);\n+      if (taskSchedulers[i] != null) {\n+        try {\n+          taskSchedulers[i].getTaskScheduler().initiateStop();\n+        } catch (Exception e) {\n+          // Ignore for now as scheduler stop invoked on shutdown\n+          LOG.error(\"Failed to do a clean initiateStop for Scheduler: \"\n+              + Utils.getTaskSchedulerIdentifierString(i, appContext), e);\n+        }\n       }\n     }\n   }\n@@ -978,13 +980,21 @@ public ContainerSignatureMatcher getContainerSignatureMatcher() {\n   }\n \n   public boolean hasUnregistered() {\n+    // Only return true if all task schedulers that were registered successfully unregister\n+    if (taskSchedulers.length == 0) {\n+      return false;\n+    }\n     boolean result = true;\n-    for (int i = 0 ; i < taskSchedulers.length ; i++) {\n+    for (int i = 0; i < taskSchedulers.length; i++) {\n       // Explicitly not catching any exceptions around this API\n       // No clear route to recover. Better to crash.\n+      if (taskSchedulers[i] == null) {\n+        return false;\n+      }\n       try {\n         result = result & this.taskSchedulers[i].hasUnregistered();\n       } catch (Exception e) {\n+        result = false;\n         String msg = \"Error in TaskScheduler when checking if a scheduler has unregistered\"\n             + \", scheduler=\" + Utils.getTaskSchedulerIdentifierString(i, appContext);\n         LOG.error(msg, e);"
            },
            {
                "sha": "5df25de963798bc5a9e89ca733735c3782015ead",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java",
                "status": "modified",
                "additions": 17,
                "deletions": 0,
                "changes": 17,
                "blob_url": "https://github.com/apache/tez/blob/f86128a8dd8a7bbda6b2b61bcaee336b35c6100a/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java",
                "raw_url": "https://github.com/apache/tez/raw/f86128a8dd8a7bbda6b2b61bcaee336b35c6100a/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerManager.java?ref=f86128a8dd8a7bbda6b2b61bcaee336b35c6100a",
                "patch": "@@ -568,6 +568,23 @@ public void testTaskSchedulerRouting() throws Exception {\n         eq(launchRequest2));\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Test(timeout = 5000)\n+  public void testShutdownBeforeStartTaskScheduler() {\n+    Configuration conf = new TezConfiguration();\n+    AppContext appContext = mock(AppContext.class, RETURNS_DEEP_STUBS);\n+    doReturn(conf).when(appContext).getAMConf();\n+\n+    List<NamedEntityDescriptor> list = new LinkedList<>();\n+    list.add(null);\n+\n+    TaskSchedulerManager taskSchedulerManager =\n+        new TaskSchedulerManager(appContext, null, null,\n+            null, null, list, false,null);\n+    assertFalse(\"Should not return true unless actually unregistered successfully\",\n+        taskSchedulerManager.hasUnregistered());\n+  }\n+\n   @SuppressWarnings(\"unchecked\")\n   @Test(timeout = 5000)\n   public void testReportFailureFromTaskScheduler() {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/ddfb262223b7cb07957e1bd48a99d8a2e765aee7",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/c0faeaed6053b7ec102dedbae6ffdb2776a9c9cc",
        "message": "TEZ-3743. TestTaskCommunicatorContextImpl throws NullPointerException after TEZ-3334 merge (Jonathan Eagles via kshukla)",
        "bug_id": "tez_5",
        "file": [
            {
                "sha": "9f9150f7589677ba8fe365396b37668747a9a10b",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/TestTaskCommunicatorContextImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/ddfb262223b7cb07957e1bd48a99d8a2e765aee7/tez-dag/src/test/java/org/apache/tez/dag/app/TestTaskCommunicatorContextImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/ddfb262223b7cb07957e1bd48a99d8a2e765aee7/tez-dag/src/test/java/org/apache/tez/dag/app/TestTaskCommunicatorContextImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/TestTaskCommunicatorContextImpl.java?ref=ddfb262223b7cb07957e1bd48a99d8a2e765aee7",
                "patch": "@@ -21,7 +21,9 @@\n import static org.mockito.Mockito.never;\n import static org.mockito.Mockito.reset;\n import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n \n+import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.yarn.api.records.Container;\n import org.apache.hadoop.yarn.api.records.ContainerId;\n import org.apache.tez.common.ContainerSignatureMatcher;\n@@ -34,6 +36,7 @@\n   @Test(timeout = 5000)\n   public void testIsKnownContainer() {\n     AppContext appContext = mock(AppContext.class);\n+    when(appContext.getAMConf()).thenReturn(new Configuration());\n     TaskCommunicatorManager tal = mock(TaskCommunicatorManager.class);\n \n     AMContainerMap amContainerMap = new AMContainerMap(mock(ContainerHeartbeatHandler.class), tal, mock("
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/75bc7c157682cc64eccfa4722226a8ac72161f17",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/82d73b380881ef8e7d6e6c963289c4f479bbea59",
        "message": "TEZ-3874. NPE in TezClientUtils when \"yarn.resourcemanager.zk-address\" is present in Configuration. (Eric Wohlstadter via jlowe)",
        "bug_id": "tez_6",
        "file": [
            {
                "sha": "689d94797adc384eefd4d8394fef62ffd7ce650f",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "additions": 10,
                "deletions": 4,
                "changes": 14,
                "blob_url": "https://github.com/apache/tez/blob/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/tez/raw/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=75bc7c157682cc64eccfa4722226a8ac72161f17",
                "patch": "@@ -807,10 +807,16 @@ static ConfigurationProto createFinalConfProtoForApp(Configuration amConf,\n     assert amConf != null;\n     ConfigurationProto.Builder builder = ConfigurationProto.newBuilder();\n     for (Entry<String, String> entry : amConf) {\n-      PlanKeyValuePair.Builder kvp = PlanKeyValuePair.newBuilder();\n-      kvp.setKey(entry.getKey());\n-      kvp.setValue(amConf.get(entry.getKey()));\n-      builder.addConfKeyValues(kvp);\n+      String key = entry.getKey();\n+      String val = amConf.get(key);\n+      if(val != null) {\n+        PlanKeyValuePair.Builder kvp = PlanKeyValuePair.newBuilder();\n+        kvp.setKey(key);\n+        kvp.setValue(val);\n+        builder.addConfKeyValues(kvp);\n+      } else {\n+        LOG.debug(\"null value in Configuration after replacement for key={}. Skipping.\", key);\n+      }\n     }\n \n     AMPluginDescriptorProto pluginDescriptorProto ="
            },
            {
                "sha": "efd450290fde8374de1bd57ac3f457a9a50490d8",
                "filename": "tez-api/src/main/java/org/apache/tez/common/TezUtils.java",
                "status": "modified",
                "additions": 27,
                "deletions": 11,
                "changes": 38,
                "blob_url": "https://github.com/apache/tez/blob/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/main/java/org/apache/tez/common/TezUtils.java",
                "raw_url": "https://github.com/apache/tez/raw/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/main/java/org/apache/tez/common/TezUtils.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/common/TezUtils.java?ref=75bc7c157682cc64eccfa4722226a8ac72161f17",
                "patch": "@@ -134,16 +134,8 @@ public static Configuration createConfFromUserPayload(UserPayload payload) throw\n \n \n   private static void writeConfInPB(OutputStream dos, Configuration conf) throws IOException {\n-    DAGProtos.ConfigurationProto.Builder confProtoBuilder = DAGProtos.ConfigurationProto\n-        .newBuilder();\n-    Iterator<Map.Entry<String, String>> iter = conf.iterator();\n-    while (iter.hasNext()) {\n-      Map.Entry<String, String> entry = iter.next();\n-      DAGProtos.PlanKeyValuePair.Builder kvp = DAGProtos.PlanKeyValuePair.newBuilder();\n-      kvp.setKey(entry.getKey());\n-      kvp.setValue(entry.getValue());\n-      confProtoBuilder.addConfKeyValues(kvp);\n-    }\n+    DAGProtos.ConfigurationProto.Builder confProtoBuilder = DAGProtos.ConfigurationProto.newBuilder();\n+    populateConfProtoFromEntries(conf, confProtoBuilder);\n     DAGProtos.ConfigurationProto confProto = confProtoBuilder.build();\n     confProto.writeTo(dos);\n   }\n@@ -167,7 +159,13 @@ public static String convertToHistoryText(String description, Configuration conf\n         Iterator<Entry<String, String>> iter = conf.iterator();\n         while (iter.hasNext()) {\n           Entry<String, String> entry = iter.next();\n-          confJson.put(entry.getKey(), conf.get(entry.getKey()));\n+          String key = entry.getKey();\n+          String val = conf.get(entry.getKey());\n+          if(val != null) {\n+            confJson.put(key, val);\n+          } else {\n+            LOG.debug(\"null value in Configuration after replacement for key={}. Skipping.\", key);\n+          }\n         }\n         jsonObject.put(ATSConstants.CONFIG, confJson);\n       }\n@@ -181,4 +179,22 @@ public static String convertToHistoryText(Configuration conf) {\n     return convertToHistoryText(null, conf);\n   }\n \n+\n+  /* Copy each Map.Entry with non-null value to DAGProtos.ConfigurationProto */\n+  public static void populateConfProtoFromEntries(Iterable<Map.Entry<String, String>> params,\n+                                              DAGProtos.ConfigurationProto.Builder confBuilder) {\n+    for(Map.Entry<String, String> entry : params) {\n+      String key = entry.getKey();\n+      String val = entry.getValue();\n+      if(val != null) {\n+        DAGProtos.PlanKeyValuePair.Builder kvp = DAGProtos.PlanKeyValuePair.newBuilder();\n+        kvp.setKey(key);\n+        kvp.setValue(val);\n+        confBuilder.addConfKeyValues(kvp);\n+      } else {\n+        LOG.debug(\"null value for key={}. Skipping.\", key);\n+      }\n+    }\n+  }\n+\n }"
            },
            {
                "sha": "735c749ee5e7b45a9ca42ccda7879e90f5273a57",
                "filename": "tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "status": "modified",
                "additions": 3,
                "deletions": 12,
                "changes": 15,
                "blob_url": "https://github.com/apache/tez/blob/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "raw_url": "https://github.com/apache/tez/raw/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java?ref=75bc7c157682cc64eccfa4722226a8ac72161f17",
                "patch": "@@ -41,6 +41,7 @@\n import org.apache.hadoop.yarn.util.ConverterUtils;\n import org.apache.tez.client.CallerContext;\n import org.apache.tez.common.JavaOptsChecker;\n+import org.apache.tez.common.TezUtils;\n import org.apache.tez.dag.api.Vertex.VertexExecutionContext;\n import org.apache.tez.dag.api.records.DAGProtos;\n import org.apache.tez.serviceplugins.api.ServicePluginsDescriptor;\n@@ -985,12 +986,7 @@ public synchronized DAGPlan createDag(Configuration tezConf, Credentials extraCr\n \n       if (vertex.getConf()!= null && vertex.getConf().size() > 0) {\n         ConfigurationProto.Builder confBuilder = ConfigurationProto.newBuilder();\n-        for (Map.Entry<String, String> entry : vertex.getConf().entrySet()) {\n-          PlanKeyValuePair.Builder keyValueBuilder = PlanKeyValuePair.newBuilder();\n-          keyValueBuilder.setKey(entry.getKey());\n-          keyValueBuilder.setValue(entry.getValue());\n-          confBuilder.addConfKeyValues(keyValueBuilder);\n-        }\n+        TezUtils.populateConfProtoFromEntries(vertex.getConf().entrySet(), confBuilder);\n         vertexBuilder.setVertexConf(confBuilder);\n       }\n \n@@ -1091,12 +1087,7 @@ public synchronized DAGPlan createDag(Configuration tezConf, Credentials extraCr\n \n     ConfigurationProto.Builder confProtoBuilder = ConfigurationProto.newBuilder();\n     if (!this.dagConf.isEmpty()) {\n-      for (Entry<String, String> entry : this.dagConf.entrySet()) {\n-        PlanKeyValuePair.Builder kvp = PlanKeyValuePair.newBuilder();\n-        kvp.setKey(entry.getKey());\n-        kvp.setValue(entry.getValue());\n-        confProtoBuilder.addConfKeyValues(kvp);\n-      }\n+      TezUtils.populateConfProtoFromEntries(this.dagConf.entrySet(), confProtoBuilder);\n     }\n     // Copy historyLogLevel from tezConf into dagConf if its not overridden in dagConf.\n     String logLevel = this.dagConf.get(TezConfiguration.TEZ_HISTORY_LOGGING_LOGLEVEL);"
            },
            {
                "sha": "2c0406153fd5fbc8299b2b8ea34fb30d5c201b74",
                "filename": "tez-api/src/test/java/org/apache/tez/client/TestTezClient.java",
                "status": "modified",
                "additions": 13,
                "deletions": 0,
                "changes": 13,
                "blob_url": "https://github.com/apache/tez/blob/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/test/java/org/apache/tez/client/TestTezClient.java",
                "raw_url": "https://github.com/apache/tez/raw/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-api/src/test/java/org/apache/tez/client/TestTezClient.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/test/java/org/apache/tez/client/TestTezClient.java?ref=75bc7c157682cc64eccfa4722226a8ac72161f17",
                "patch": "@@ -90,6 +90,7 @@\n import org.apache.tez.dag.api.client.rpc.DAGClientAMProtocolRPC.ShutdownSessionRequestProto;\n import org.apache.tez.dag.api.client.rpc.DAGClientAMProtocolRPC.SubmitDAGRequestProto;\n import org.apache.tez.dag.api.client.rpc.DAGClientAMProtocolRPC.TezAppMasterStatusProto;\n+import org.apache.tez.dag.api.records.DAGProtos.ConfigurationProto;\n import org.apache.tez.serviceplugins.api.ServicePluginsDescriptor;\n import org.hamcrest.CoreMatchers;\n import org.junit.Assert;\n@@ -927,4 +928,16 @@ public void testAMHeartbeatFailOnGetAMStatus() throws Exception {\n     Thread.sleep(3 * amHeartBeatTimeoutSecs * 1000);\n     assertTrue(client.getAMKeepAliveService().isTerminated());\n   }\n+\n+  //See TEZ-3874\n+  @Test(timeout = 5000)\n+  public void testYarnZkDeprecatedConf() {\n+    Configuration conf = new Configuration(false);\n+    String val = \"hostname:2181\";\n+    conf.set(\"yarn.resourcemanager.zk-address\", val);\n+\n+    ConfigurationProto confProto = null;\n+    //Test that Exception is not thrown by createFinalConfProtoForApp\n+    TezClientUtils.createFinalConfProtoForApp(conf, null);\n+  }\n }"
            },
            {
                "sha": "16efc8f52da2a377671295b46d55ab465973d0f6",
                "filename": "tez-common/src/test/java/org/apache/tez/common/TestTezUtils.java",
                "status": "modified",
                "additions": 15,
                "deletions": 0,
                "changes": 15,
                "blob_url": "https://github.com/apache/tez/blob/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-common/src/test/java/org/apache/tez/common/TestTezUtils.java",
                "raw_url": "https://github.com/apache/tez/raw/75bc7c157682cc64eccfa4722226a8ac72161f17/tez-common/src/test/java/org/apache/tez/common/TestTezUtils.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-common/src/test/java/org/apache/tez/common/TestTezUtils.java?ref=75bc7c157682cc64eccfa4722226a8ac72161f17",
                "patch": "@@ -20,14 +20,19 @@\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertEquals;\n \n import java.io.IOException;\n import java.util.BitSet;\n+import java.util.HashMap;\n+import java.util.Map;\n import java.util.Random;\n \n import org.apache.hadoop.conf.Configuration;\n import org.apache.tez.dag.api.TezConfiguration;\n import org.apache.tez.dag.api.UserPayload;\n+import org.apache.tez.dag.api.records.DAGProtos;\n import org.codehaus.jettison.json.JSONException;\n import org.codehaus.jettison.json.JSONObject;\n import org.junit.Assert;\n@@ -230,4 +235,14 @@ public void testConvertToHistoryTextWithReplaceVars() throws JSONException {\n \n   }\n \n+  @Test(timeout = 5000)\n+  public void testPopulateConfProtoFromEntries() {\n+      Map<String, String> map = new HashMap<>();\n+      map.put(\"nonNullKey\", \"value\");\n+      map.put(\"nullKey\", null);\n+      DAGProtos.ConfigurationProto.Builder confBuilder = DAGProtos.ConfigurationProto.newBuilder();\n+      TezUtils.populateConfProtoFromEntries(map.entrySet(), confBuilder);\n+      assertEquals(confBuilder.getConfKeyValuesList().size(), 1);\n+  }\n+\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/a7f93ae1da114fa03f7e500a12706e5737b189ee",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/4a7719b0c164eae41845815d103ceb7e6e2548c3",
        "message": "TEZ-3761. NPE in Fetcher under load (jeagles)",
        "bug_id": "tez_7",
        "file": [
            {
                "sha": "bf8c83b98e8e27456a13b67b914bd4809216a684",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java",
                "status": "modified",
                "additions": 10,
                "deletions": 0,
                "changes": 10,
                "blob_url": "https://github.com/apache/tez/blob/a7f93ae1da114fa03f7e500a12706e5737b189ee/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java",
                "raw_url": "https://github.com/apache/tez/raw/a7f93ae1da114fa03f7e500a12706e5737b189ee/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java?ref=a7f93ae1da114fa03f7e500a12706e5737b189ee",
                "patch": "@@ -853,7 +853,17 @@ public String toString() {\n           ShuffleHeader header = new ShuffleHeader();\n           header.readFields(input);\n           pathComponent = header.getMapId();\n+          if (!pathComponent.startsWith(InputAttemptIdentifier.PATH_PREFIX)) {\n+            throw new IllegalArgumentException(\"Invalid map id: \" + header.getMapId() + \", expected to start with \" +\n+                InputAttemptIdentifier.PATH_PREFIX + \", partition: \" + header.getPartition()\n+                + \" while fetching \" + inputAttemptIdentifier);\n+          }\n+\n           srcAttemptId = pathToAttemptMap.get(new PathPartition(pathComponent, header.getPartition()));\n+          if (srcAttemptId == null) {\n+            throw new IllegalArgumentException(\"Source attempt not found for map id: \" + header.getMapId() +\n+                \", partition: \" + header.getPartition() + \" while fetching \" + inputAttemptIdentifier);\n+          }\n \n           if (header.getCompressedLength() == 0) {\n             // Empty partitions are already accounted for"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/280a98ed431aeb15890de1cca5397f63f0455905",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/8bfbdfefa4bf9a87acd90eb4582fe6a621fb2389",
        "message": "TEZ-3348. NullPointerException in Tez MROutput while trying to write using Parquet's DeprecatedParquetOutputFormat. (Piyush Narang via hitesh)",
        "bug_id": "tez_8",
        "file": [
            {
                "sha": "c40051246ec2adb6ecfd569ad5013f3650247b42",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/280a98ed431aeb15890de1cca5397f63f0455905/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/280a98ed431aeb15890de1cca5397f63f0455905/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=280a98ed431aeb15890de1cca5397f63f0455905",
                "patch": "@@ -7,6 +7,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3348. NullPointerException in Tez MROutput while trying to write using Parquet's DeprecatedParquetOutputFormat.\n   TEZ-3356. Fix initializing of stats when custom ShuffleVertexManager is used.\n   TEZ-3235. Modify Example TestOrderedWordCount job to test the IPC limit for large dag plans.\n   TEZ-3337. Do not log empty fields of TaskAttemptFinishedEvent to avoid confusion.\n@@ -83,6 +84,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3348. NullPointerException in Tez MROutput while trying to write using Parquet's DeprecatedParquetOutputFormat.\n   TEZ-3356. Fix initializing of stats when custom ShuffleVertexManager is used.\n   TEZ-3329. Tez ATS data is incomplete for a vertex which fails or gets killed before initialization\n   TEZ-3235. Modify Example TestOrderedWordCount job to test the IPC limit for large dag plans."
            },
            {
                "sha": "043085d2514c50957b417e49ae54c5ff10f82483",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/output/MROutput.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/tez/blob/280a98ed431aeb15890de1cca5397f63f0455905/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/output/MROutput.java",
                "raw_url": "https://github.com/apache/tez/raw/280a98ed431aeb15890de1cca5397f63f0455905/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/output/MROutput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/output/MROutput.java?ref=280a98ed431aeb15890de1cca5397f63f0455905",
                "patch": "@@ -395,6 +395,8 @@ public MROutput(OutputContext outputContext, int numPhysicalOutputs) {\n         throw new IOException(cnfe);\n       }\n \n+      initCommitter(jobConf, useNewApi);\n+\n       try {\n         newRecordWriter =\n             newOutputFormat.getRecordWriter(newApiTaskAttemptContext);\n@@ -409,14 +411,15 @@ public MROutput(OutputContext outputContext, int numPhysicalOutputs) {\n       oldOutputFormat = jobConf.getOutputFormat();\n       outputFormatClassName = oldOutputFormat.getClass().getName();\n \n+      initCommitter(jobConf, useNewApi);\n+\n       FileSystem fs = FileSystem.get(jobConf);\n       String finalName = getOutputName();\n \n       oldRecordWriter =\n           oldOutputFormat.getRecordWriter(\n               fs, jobConf, finalName, new MRReporter(getContext().getCounters()));\n     }\n-    initCommitter(jobConf, useNewApi);\n \n     LOG.info(getContext().getDestinationVertexName() + \": \"\n         + \"outputFormat=\" + outputFormatClassName"
            },
            {
                "sha": "8b52cc99b2c7fa010b52b19d082bbd82ba712e4e",
                "filename": "tez-mapreduce/src/test/java/org/apache/tez/mapreduce/output/TestMROutput.java",
                "status": "modified",
                "additions": 97,
                "deletions": 2,
                "changes": 99,
                "blob_url": "https://github.com/apache/tez/blob/280a98ed431aeb15890de1cca5397f63f0455905/tez-mapreduce/src/test/java/org/apache/tez/mapreduce/output/TestMROutput.java",
                "raw_url": "https://github.com/apache/tez/raw/280a98ed431aeb15890de1cca5397f63f0455905/tez-mapreduce/src/test/java/org/apache/tez/mapreduce/output/TestMROutput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/test/java/org/apache/tez/mapreduce/output/TestMROutput.java?ref=280a98ed431aeb15890de1cca5397f63f0455905",
                "patch": "@@ -34,14 +34,17 @@\n import org.apache.hadoop.io.NullWritable;\n import org.apache.hadoop.io.Text;\n import org.apache.hadoop.mapred.JobConf;\n+import org.apache.hadoop.mapred.Reporter;\n import org.apache.hadoop.mapreduce.JobContext;\n import org.apache.hadoop.mapreduce.OutputCommitter;\n import org.apache.hadoop.mapreduce.OutputFormat;\n import org.apache.hadoop.mapreduce.RecordWriter;\n import org.apache.hadoop.mapreduce.TaskAttemptContext;\n import org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter;\n+import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\n import org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat;\n import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;\n+import org.apache.hadoop.util.Progressable;\n import org.apache.hadoop.yarn.api.records.ApplicationId;\n import org.apache.tez.common.counters.TezCounters;\n import org.apache.tez.dag.api.DataSinkDescriptor;\n@@ -166,6 +169,58 @@ public void testOldAPI_SequenceFileOutputFormat() throws Exception {\n     assertEquals(org.apache.hadoop.mapred.FileOutputCommitter.class, output.committer.getClass());\n   }\n \n+  // test to try and use the WorkOutputPathOutputFormat - this checks that the getDefaultWorkFile is\n+  // set while creating recordWriters\n+  @Test(timeout = 5000)\n+  public void testNewAPI_WorkOutputPathOutputFormat() throws Exception {\n+    String outputPath = \"/tmp/output\";\n+    Configuration conf = new Configuration();\n+    conf.setBoolean(MRConfig.IS_MAP_PROCESSOR, true);\n+    DataSinkDescriptor dataSink = MROutput\n+      .createConfigBuilder(conf, NewAPI_WorkOutputPathReadingOutputFormat.class, outputPath)\n+      .build();\n+\n+    OutputContext outputContext = createMockOutputContext(dataSink.getOutputDescriptor().getUserPayload());\n+    MROutput output = new MROutput(outputContext, 2);\n+    output.initialize();\n+\n+    assertEquals(true, output.isMapperOutput);\n+    assertEquals(true, output.useNewApi);\n+    assertEquals(NewAPI_WorkOutputPathReadingOutputFormat.class, output.newOutputFormat.getClass());\n+    assertNull(output.oldOutputFormat);\n+    assertNotNull(output.newApiTaskAttemptContext);\n+    assertNull(output.oldApiTaskAttemptContext);\n+    assertNotNull(output.newRecordWriter);\n+    assertNull(output.oldRecordWriter);\n+    assertEquals(FileOutputCommitter.class, output.committer.getClass());\n+  }\n+\n+  // test to try and use the WorkOutputPathOutputFormat - this checks that the workOutput path is\n+  // set while creating recordWriters\n+  @Test(timeout = 5000)\n+  public void testOldAPI_WorkOutputPathOutputFormat() throws Exception {\n+    String outputPath = \"/tmp/output\";\n+    Configuration conf = new Configuration();\n+    conf.setBoolean(MRConfig.IS_MAP_PROCESSOR, false);\n+    DataSinkDescriptor dataSink = MROutput\n+      .createConfigBuilder(conf, OldAPI_WorkOutputPathReadingOutputFormat.class, outputPath)\n+      .build();\n+\n+    OutputContext outputContext = createMockOutputContext(dataSink.getOutputDescriptor().getUserPayload());\n+    MROutput output = new MROutput(outputContext, 2);\n+    output.initialize();\n+\n+    assertEquals(false, output.isMapperOutput);\n+    assertEquals(false, output.useNewApi);\n+    assertEquals(OldAPI_WorkOutputPathReadingOutputFormat.class, output.oldOutputFormat.getClass());\n+    assertNull(output.newOutputFormat);\n+    assertNotNull(output.oldApiTaskAttemptContext);\n+    assertNull(output.newApiTaskAttemptContext);\n+    assertNotNull(output.oldRecordWriter);\n+    assertNull(output.newRecordWriter);\n+    assertEquals(org.apache.hadoop.mapred.FileOutputCommitter.class, output.committer.getClass());\n+  }\n+\n   private OutputContext createMockOutputContext(UserPayload payload) {\n     OutputContext outputContext = mock(OutputContext.class);\n     ApplicationId appId = ApplicationId.newInstance(System.currentTimeMillis(), 1);\n@@ -199,7 +254,7 @@ public static LogicalIOProcessorRuntimeTask createLogicalTask(\n         new Path(new Path(System.getProperty(\"test.build.data\", \"/tmp\")),\n                  \"TestMapOutput\").makeQualified(fs.getUri(), fs.getWorkingDirectory());\n \n-    LogicalIOProcessorRuntimeTask task = new LogicalIOProcessorRuntimeTask(\n+    return new LogicalIOProcessorRuntimeTask(\n         taskSpec,\n         0,\n         conf,\n@@ -209,7 +264,6 @@ public static LogicalIOProcessorRuntimeTask createLogicalTask(\n         new HashMap<String, String>(),\n         HashMultimap.<String, String>create(), null, \"\", new ExecutionContextImpl(\"localhost\"),\n         Runtime.getRuntime().maxMemory(), true, new DefaultHadoopShim());\n-    return task;\n   }\n   \n   public static class TestOutputCommitter extends OutputCommitter {\n@@ -282,6 +336,47 @@ public OutputCommitter getOutputCommitter(TaskAttemptContext context)\n     }\n   }\n \n+  // OldAPI OutputFormat class that reads the workoutput path while creating recordWriters\n+  public static class OldAPI_WorkOutputPathReadingOutputFormat extends org.apache.hadoop.mapred.FileOutputFormat<String, String> {\n+    public static class NoOpRecordWriter implements org.apache.hadoop.mapred.RecordWriter<String, String> {\n+      @Override\n+      public void write(String key, String value) throws IOException {}\n+\n+      @Override\n+      public void close(Reporter reporter) throws IOException {}\n+    }\n+\n+    @Override\n+    public org.apache.hadoop.mapred.RecordWriter<String, String> getRecordWriter(\n+      FileSystem ignored, JobConf job, String name, Progressable progress) throws IOException {\n+      // check work output path is not null\n+      Path workOutputPath = org.apache.hadoop.mapred.FileOutputFormat.getWorkOutputPath(job);\n+      assertNotNull(workOutputPath);\n+      return new NoOpRecordWriter();\n+    }\n+  }\n+\n+  // NewAPI OutputFormat class that reads the default work file while creating recordWriters\n+  public static class NewAPI_WorkOutputPathReadingOutputFormat extends FileOutputFormat<String, String> {\n+    public static class NoOpRecordWriter extends RecordWriter<String, String> {\n+      @Override\n+      public void write(String key, String value) throws IOException, InterruptedException {\n+      }\n+\n+      @Override\n+      public void close(TaskAttemptContext context) throws IOException, InterruptedException {\n+      }\n+    }\n+\n+    @Override\n+    public RecordWriter<String, String> getRecordWriter(TaskAttemptContext job) throws IOException, InterruptedException {\n+      // check default work file is not null\n+      Path workOutputPath = getDefaultWorkFile(job, \".foo\");\n+      assertNotNull(workOutputPath);\n+      return new NoOpRecordWriter();\n+    }\n+  }\n+\n   public static class TestProcessor extends SimpleProcessor {\n     public TestProcessor(ProcessorContext context) {\n       super(context);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/aba6faba6a0ee7a68c1cf3970d007a2f2bf54236",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/5dd8fe5b07f55c7829e35fa8520a8b8fdd55de49",
        "message": "TEZ-731. Fix a NullPointerException in ContainerTask.toString (sseth)",
        "bug_id": "tez_9",
        "file": [
            {
                "sha": "7dc5978fabb512f181794711be5889988a34ac08",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java",
                "status": "modified",
                "additions": 23,
                "deletions": 4,
                "changes": 27,
                "blob_url": "https://github.com/apache/tez/blob/aba6faba6a0ee7a68c1cf3970d007a2f2bf54236/tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java",
                "raw_url": "https://github.com/apache/tez/raw/aba6faba6a0ee7a68c1cf3970d007a2f2bf54236/tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/common/ContainerTask.java?ref=aba6faba6a0ee7a68c1cf3970d007a2f2bf54236",
                "patch": "@@ -126,9 +126,28 @@ public void readFields(DataInput in) throws IOException {\n \n   @Override\n   public String toString() {\n-    return \"shouldDie: \" + shouldDie + \", TaskSpec: \" + taskSpec + \", AdditionalResources: \"\n-        + additionalResources + \", Credentials: \" + credentials == null ? \"[null]\"\n-        : (\"[#secretKeys=\" + credentials.numberOfSecretKeys() + \", #tokens=\" + credentials\n-            .numberOfTokens());\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"shouldDie: \").append(shouldDie);\n+    sb.append(\", TaskSpec: \");\n+    if (taskSpec == null) {\n+      sb.append(\"none\");\n+    } else {\n+      sb.append(taskSpec);\n+    }\n+    sb.append(\", additionalResources: \");\n+    if (additionalResources == null) {\n+      sb.append(\"none\");\n+    } else {\n+      sb.append(additionalResources);\n+    }\n+    sb.append(\", credentialsChanged: \").append(credentialsChanged);\n+    sb.append(\", credentials: \");\n+    if (credentials == null) {\n+      sb.append(\"none\");\n+    } else {\n+      sb.append(\"#tokens=\").append(credentials.numberOfTokens())\n+      .append(\", #secretKeys: \").append(credentials.numberOfSecretKeys());\n+    }\n+    return sb.toString();\n   }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/149db1b48e8be91455a383d1793ef46e789cfea6",
        "message": "TEZ-3368. NPE in DelayedContainerManager (Jason Lowe via jeagles)",
        "bug_id": "tez_10",
        "file": [
            {
                "sha": "4167747345060ceb9d29c2aab91bf6177a16b464",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a",
                "patch": "@@ -7,6 +7,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3368. NPE in DelayedContainerManager\n   TEZ-3440. Shuffling to memory can get out-of-sync when fetching multiple compressed map outputs\n   TEZ-3429. Set reconfigureDoneTime on VertexConfigurationDoneEvent properly.\n   TEZ-3000. Fix TestContainerReuse.\n@@ -115,6 +116,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3368. NPE in DelayedContainerManager\n   TEZ-3440. Shuffling to memory can get out-of-sync when fetching multiple compressed map outputs\n   TEZ-3429. Set reconfigureDoneTime on VertexConfigurationDoneEvent properly.\n   TEZ-3000. Fix TestContainerReuse.\n@@ -606,6 +608,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3368. NPE in DelayedContainerManager\n   TEZ-3440. Shuffling to memory can get out-of-sync when fetching multiple compressed map outputs\n   TEZ-3426. Second AM attempt launched for session mode and recovery disabled for certain cases\n   TEZ-2852. TestVertexImpl fails due to race in AsyncDispatcher."
            },
            {
                "sha": "40bc3aa35ca12c407cf5e34440ce542c7438a528",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TezAMRMClientAsync.java",
                "status": "modified",
                "additions": 7,
                "deletions": 10,
                "changes": 17,
                "blob_url": "https://github.com/apache/tez/blob/5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TezAMRMClientAsync.java",
                "raw_url": "https://github.com/apache/tez/raw/5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TezAMRMClientAsync.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TezAMRMClientAsync.java?ref=5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a",
                "patch": "@@ -20,8 +20,8 @@\n \n import java.util.Collection;\n import java.util.Collections;\n-import java.util.Iterator;\n import java.util.List;\n+import java.util.Map;\n import java.util.TreeMap;\n import java.util.concurrent.atomic.AtomicInteger;\n \n@@ -74,12 +74,10 @@ public TezAMRMClientAsync(\n   }\n   \n   public synchronized Priority getTopPriority() {\n-    Iterator<Priority> iter =\n-        knownRequestsByPriority.descendingKeySet().iterator();\n-    if (!iter.hasNext()) {\n+    if (knownRequestsByPriority.isEmpty()) {\n       return null;\n     }\n-    return iter.next();\n+    return knownRequestsByPriority.lastKey();\n   }\n   \n   // Remove after YARN-1723 is fixed\n@@ -132,13 +130,12 @@ public synchronized void removeContainerRequest(T req) {\n         String resourceName, Resource capability) {\n     // Sort based on reverse order. By default, Priority ordering is based on\n     // highest numeric value being considered to be lowest priority.\n-    Iterator<Priority> iter =\n-      knownRequestsByPriority.descendingKeySet().iterator();\n-    if (!iter.hasNext()) {\n+    Map.Entry<Priority,LocalityRequestCounter> entry = knownRequestsByPriority.lastEntry();\n+    if (entry == null || entry.getValue() == null) {\n       return Collections.emptyList();\n     }\n-    Priority p = iter.next();\n-    LocalityRequestCounter lrc = knownRequestsByPriority.get(p);\n+    Priority p = entry.getKey();\n+    LocalityRequestCounter lrc = entry.getValue();\n     if (lrc.localityRequests.get() == 0) {\n       // Fallback to ANY if there are no pending requests that require\n       // locality matching"
            },
            {
                "sha": "5087d0df71615c85a81e118ca1d24ffbe4aee2c0",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/YarnTaskSchedulerService.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/tez/blob/5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a/tez-dag/src/main/java/org/apache/tez/dag/app/rm/YarnTaskSchedulerService.java",
                "raw_url": "https://github.com/apache/tez/raw/5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a/tez-dag/src/main/java/org/apache/tez/dag/app/rm/YarnTaskSchedulerService.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/YarnTaskSchedulerService.java?ref=5bd5613fca24bb521f0d8a9dd2cace4f80c5e90a",
                "patch": "@@ -47,6 +47,7 @@\n import org.apache.commons.math3.random.RandomDataGenerator;\n import org.apache.hadoop.classification.InterfaceAudience.Private;\n import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.util.ExitUtil;\n import org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse;\n import org.apache.hadoop.yarn.api.records.Container;\n import org.apache.hadoop.yarn.api.records.ContainerId;\n@@ -1958,6 +1959,14 @@ public int compare(HeldContainer c1,\n     \n     @Override\n     public void run() {\n+      try {\n+        mainLoop();\n+      } catch (Throwable e) {\n+        ExitUtil.terminate(1, e);\n+      }\n+    }\n+\n+    private void mainLoop() {\n       while(running) {\n         // Try assigning all containers if there's a request to do so.\n         if (tryAssigningAll) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/cb0890d58ae5639522aefe765e99e6d70f211fc7",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/00508f8989566c1a8723b51c8621c20789b05969",
        "message": "TEZ-2799. SimpleHistoryParser NPE (rbalamohan)",
        "bug_id": "tez_11",
        "file": [
            {
                "sha": "63101346d3cb75e58630094f81812261b9b2de03",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/cb0890d58ae5639522aefe765e99e6d70f211fc7/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/cb0890d58ae5639522aefe765e99e6d70f211fc7/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=cb0890d58ae5639522aefe765e99e6d70f211fc7",
                "patch": "@@ -7,6 +7,7 @@ Release 0.8.1: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n+  TEZ-2799. SimpleHistoryParser NPE\n   TEZ-2643. Minimize number of empty spills in Pipelined Sorter\n   TEZ-2783. Refactor analyzers to extend TezAnalyzerBase\n   TEZ-2784. optimize TaskImpl.isFinished()"
            },
            {
                "sha": "863cc40140298ae92aa161617195da978dd9b42e",
                "filename": "tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/SimpleHistoryParser.java",
                "status": "modified",
                "additions": 28,
                "deletions": 21,
                "changes": 49,
                "blob_url": "https://github.com/apache/tez/blob/cb0890d58ae5639522aefe765e99e6d70f211fc7/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/SimpleHistoryParser.java",
                "raw_url": "https://github.com/apache/tez/raw/cb0890d58ae5639522aefe765e99e6d70f211fc7/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/SimpleHistoryParser.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/SimpleHistoryParser.java?ref=cb0890d58ae5639522aefe765e99e6d70f211fc7",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.tez.history.parser.datamodel.TaskAttemptInfo;\n import org.apache.tez.history.parser.datamodel.TaskInfo;\n import org.apache.tez.history.parser.datamodel.VertexInfo;\n+import org.codehaus.jettison.json.JSONArray;\n import org.codehaus.jettison.json.JSONException;\n import org.codehaus.jettison.json.JSONObject;\n import org.slf4j.Logger;\n@@ -204,30 +205,36 @@ private void parseContents(File historyFile, String dagId)\n        * \"entitytype\":\"containerId\"} and populate it in otherInfo object so that in-memory\n        * representation can parse it correctly\n        */\n-    JSONObject subJsonObject = jsonObject.optJSONArray(Constants.RELATED_ENTITIES)\n-        .optJSONObject(0);\n-      if (subJsonObject != null) {\n-        String nodeId = subJsonObject.optString(Constants.ENTITY_TYPE);\n-        if (!Strings.isNullOrEmpty(nodeId) && nodeId.equalsIgnoreCase(Constants.NODE_ID)) {\n-          //populate it in otherInfo\n-          JSONObject otherInfo = jsonObject.optJSONObject(Constants.OTHER_INFO);\n-          String nodeIdVal = subJsonObject.optString(Constants.ENTITY);\n-          if (otherInfo != null && nodeIdVal != null) {\n-            otherInfo.put(Constants.NODE_ID, nodeIdVal);\n+      JSONArray relatedEntities = jsonObject.optJSONArray(Constants.RELATED_ENTITIES);\n+      if (relatedEntities == null) {\n+        //This can happen when CONTAINER_EXITED abruptly. (e.g Container failed, exitCode=1)\n+        LOG.debug(\"entity {} did not have related entities\",\n+            jsonObject.optJSONObject(Constants.ENTITY));\n+      } else {\n+        JSONObject subJsonObject = relatedEntities.optJSONObject(0);\n+        if (subJsonObject != null) {\n+          String nodeId = subJsonObject.optString(Constants.ENTITY_TYPE);\n+          if (!Strings.isNullOrEmpty(nodeId) && nodeId.equalsIgnoreCase(Constants.NODE_ID)) {\n+            //populate it in otherInfo\n+            JSONObject otherInfo = jsonObject.optJSONObject(Constants.OTHER_INFO);\n+            String nodeIdVal = subJsonObject.optString(Constants.ENTITY);\n+            if (otherInfo != null && nodeIdVal != null) {\n+              otherInfo.put(Constants.NODE_ID, nodeIdVal);\n+            }\n           }\n         }\n-      }\n \n-      subJsonObject = jsonObject.optJSONArray(Constants.RELATED_ENTITIES)\n-          .optJSONObject(1);\n-      if (subJsonObject != null) {\n-        String containerId = subJsonObject.optString(Constants.ENTITY_TYPE);\n-        if (!Strings.isNullOrEmpty(containerId) && containerId.equalsIgnoreCase(Constants.CONTAINER_ID)) {\n-          //populate it in otherInfo\n-          JSONObject otherInfo = jsonObject.optJSONObject(Constants.OTHER_INFO);\n-          String containerIdVal = subJsonObject.optString(Constants.ENTITY);\n-          if (otherInfo != null && containerIdVal != null) {\n-            otherInfo.put(Constants.CONTAINER_ID, containerIdVal);\n+        subJsonObject = relatedEntities.optJSONObject(1);\n+        if (subJsonObject != null) {\n+          String containerId = subJsonObject.optString(Constants.ENTITY_TYPE);\n+          if (!Strings.isNullOrEmpty(containerId) && containerId\n+              .equalsIgnoreCase(Constants.CONTAINER_ID)) {\n+            //populate it in otherInfo\n+            JSONObject otherInfo = jsonObject.optJSONObject(Constants.OTHER_INFO);\n+            String containerIdVal = subJsonObject.optString(Constants.ENTITY);\n+            if (otherInfo != null && containerIdVal != null) {\n+              otherInfo.put(Constants.CONTAINER_ID, containerIdVal);\n+            }\n           }\n         }\n       }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/b71ea4aabfc9007c2e485bc4cb30286c9ae34061",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/2c4ef9fe58395aa8e835a4c50cb65bbb26428638",
        "message": "TEZ-3536. NPE in WebUIService start when host resolution fails. (hitesh)",
        "bug_id": "tez_12",
        "file": [
            {
                "sha": "cac97f9ea518733db4d41e1e96cf56b3b0913d7c",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/b71ea4aabfc9007c2e485bc4cb30286c9ae34061/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/b71ea4aabfc9007c2e485bc4cb30286c9ae34061/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=b71ea4aabfc9007c2e485bc4cb30286c9ae34061",
                "patch": "@@ -7,6 +7,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3536. NPE in WebUIService start when host resolution fails.\n   TEZ-3269. Provide basic fair routing and scheduling functionality via custom VertexManager and EdgeManager.\n   TEZ-3534. Differentiate thread names on Fetchers, minor changes to shuffle shutdown code.\n   TEZ-3491. Tez job can hang due to container priority inversion.\n@@ -148,6 +149,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3536. NPE in WebUIService start when host resolution fails.\n   TEZ-3534. Differentiate thread names on Fetchers, minor changes to shuffle shutdown code.\n   TEZ-3491. Tez job can hang due to container priority inversion.\n   TEZ-3533. ShuffleScheduler should shutdown threadpool on exit.\n@@ -655,6 +657,7 @@ INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n \n+  TEZ-3536. NPE in WebUIService start when host resolution fails.\n   TEZ-3493. DAG submit timeout cannot be set to a month\n   TEZ-3505. Move license to the file header for TezBytesWritableSerialization\n   TEZ-3486. COMBINE_OUTPUT_RECORDS/COMBINE_INPUT_RECORDS are not correct"
            },
            {
                "sha": "1ac178b9f42970ba1bfa1392ffe927370b46ad32",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/web/WebUIService.java",
                "status": "modified",
                "additions": 12,
                "deletions": 2,
                "changes": 14,
                "blob_url": "https://github.com/apache/tez/blob/b71ea4aabfc9007c2e485bc4cb30286c9ae34061/tez-dag/src/main/java/org/apache/tez/dag/app/web/WebUIService.java",
                "raw_url": "https://github.com/apache/tez/raw/b71ea4aabfc9007c2e485bc4cb30286c9ae34061/tez-dag/src/main/java/org/apache/tez/dag/app/web/WebUIService.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/web/WebUIService.java?ref=b71ea4aabfc9007c2e485bc4cb30286c9ae34061",
                "patch": "@@ -94,8 +94,18 @@ protected void serviceStart() throws Exception {\n             .start(this.tezAMWebApp);\n         InetSocketAddress address = webApp.getListenerAddress();\n         if (address != null) {\n-          InetSocketAddress bindAddress = NetUtils.createSocketAddrForHost(context.getAppMaster().getAppNMHost(), address.getPort());\n-          trackingUrl = \"http://\" + bindAddress.getAddress().getCanonicalHostName() + \":\" + bindAddress.getPort() + \"/ui/\";\n+          InetSocketAddress bindAddress = NetUtils.createSocketAddrForHost(\n+              context.getAppMaster().getAppNMHost(), address.getPort());\n+          String hostname = context.getAppMaster().getAppNMHost();\n+          final int port = address.getPort();\n+          if (bindAddress.getAddress() != null\n+              && bindAddress.getAddress().getCanonicalHostName() != null) {\n+            hostname = bindAddress.getAddress().getCanonicalHostName();\n+          } else {\n+            LOG.warn(\"Failed to resolve canonical hostname for \"\n+                + context.getAppMaster().getAppNMHost());\n+          }\n+          trackingUrl = \"http://\" + hostname + \":\" + port + \"/ui/\";\n           LOG.info(\"Instantiated WebUIService at \" + trackingUrl);\n         }\n       } catch (Exception e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/4561b82524ca6ee484910349a6c95703883757b6",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/c07f284ac1c764b32841a872dca1addaf46906a2",
        "message": "TEZ-2952. NPE in TestOnFileUnorderedKVOutput (bikas)",
        "bug_id": "tez_13",
        "file": [
            {
                "sha": "9644a1ec2c9150f2c28564a241539625ce4091e6",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/4561b82524ca6ee484910349a6c95703883757b6/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/4561b82524ca6ee484910349a6c95703883757b6/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=4561b82524ca6ee484910349a6c95703883757b6",
                "patch": "@@ -8,6 +8,7 @@ INCOMPATIBLE CHANGES\n   TEZ-2948. Stop using dagName in the dagComplete notification to TaskCommunicators.\n \n ALL CHANGES:\n+  TEZ-2952. NPE in TestOnFileUnorderedKVOutput\n   TEZ-2480. Exception when closing output is ignored.\n   TEZ-2944. NPE in TestProcessorContext.\n   TEZ-2945. TEZ-2740 addendum to update API with currently supported parameters"
            },
            {
                "sha": "f0c1e66b3b70171ea018feffb4c54b6e3fb2918e",
                "filename": "tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java",
                "status": "modified",
                "additions": 15,
                "deletions": 5,
                "changes": 20,
                "blob_url": "https://github.com/apache/tez/blob/4561b82524ca6ee484910349a6c95703883757b6/tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java",
                "raw_url": "https://github.com/apache/tez/raw/4561b82524ca6ee484910349a6c95703883757b6/tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java?ref=4561b82524ca6ee484910349a6c95703883757b6",
                "patch": "@@ -16,17 +16,17 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n-import static org.mockito.Matchers.any;\n import static org.mockito.Mockito.*;\n \n+import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.Map;\n \n import com.google.common.collect.Maps;\n import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.yarn.api.records.ApplicationId;\n-import org.apache.tez.common.counters.TezCounters;\n import org.apache.tez.dag.api.ProcessorDescriptor;\n import org.apache.tez.dag.records.TezDAGID;\n import org.apache.tez.dag.records.TezTaskAttemptID;\n@@ -43,7 +43,7 @@\n public class TestProcessorContext {\n \n   @Test (timeout = 5000)\n-  public void testDagNumber() {\n+  public void testDagNumber() throws IOException {\n     String[] localDirs = new String[] {\"dummyLocalDir\"};\n     int appAttemptNumber = 1;\n     TezUmbilical tezUmbilical = mock(TezUmbilical.class);\n@@ -57,8 +57,14 @@ public void testDagNumber() {\n     TezTaskID taskId = TezTaskID.getInstance(vertexId, 4);\n     TezTaskAttemptID taskAttemptId = TezTaskAttemptID.getInstance(taskId, 2);\n \n-    LogicalIOProcessorRuntimeTask runtimeTask = mock(LogicalIOProcessorRuntimeTask.class);\n-    doReturn(new TezCounters()).when(runtimeTask).addAndGetTezCounter(any(String.class));\n+    TaskSpec mockSpec = mock(TaskSpec.class);\n+    when(mockSpec.getInputs()).thenReturn(Collections.singletonList(mock(InputSpec.class)));\n+    when(mockSpec.getOutputs()).thenReturn(Collections.singletonList(mock(OutputSpec.class)));\n+    LogicalIOProcessorRuntimeTask runtimeTask = new LogicalIOProcessorRuntimeTask(\n+        mockSpec, 1, \n+        new Configuration(), new String[]{\"/\"}, \n+        tezUmbilical, null, null, null, null, \"\", null, 1024, false);\n+    LogicalIOProcessorRuntimeTask mockTask = spy(runtimeTask);\n     Map<String, ByteBuffer> serviceConsumerMetadata = Maps.newHashMap();\n     Map<String, String> auxServiceEnv = Maps.newHashMap();\n     MemoryDistributor memDist = mock(MemoryDistributor.class);\n@@ -96,5 +102,9 @@ public void testDagNumber() {\n     assertEquals(vertexName, procContext.getTaskVertexName());\n     assertEquals(vertexId.getId(), procContext.getTaskVertexIndex());\n     assertTrue(Arrays.equals(localDirs, procContext.getWorkDirs()));\n+\n+     // test auto call of notifyProgress\n+     procContext.setProgress(0.1f);\n+     verify(mockTask, times(1)).notifyProgressInvocation();\n   }\n }"
            },
            {
                "sha": "32a3619c7810f68063d7649e68f55d80c08ec7b5",
                "filename": "tez-runtime-library/src/test/java/org/apache/tez/runtime/library/output/TestOnFileUnorderedKVOutput.java",
                "status": "modified",
                "additions": 19,
                "deletions": 12,
                "changes": 31,
                "blob_url": "https://github.com/apache/tez/blob/4561b82524ca6ee484910349a6c95703883757b6/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/output/TestOnFileUnorderedKVOutput.java",
                "raw_url": "https://github.com/apache/tez/raw/4561b82524ca6ee484910349a6c95703883757b6/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/output/TestOnFileUnorderedKVOutput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/output/TestOnFileUnorderedKVOutput.java?ref=4561b82524ca6ee484910349a6c95703883757b6",
                "patch": "@@ -33,6 +33,7 @@\n \n import java.io.IOException;\n import java.nio.ByteBuffer;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -49,7 +50,6 @@\n import org.apache.hadoop.io.Text;\n import org.apache.hadoop.yarn.util.AuxiliaryServiceHelper;\n import org.apache.tez.common.TezUtils;\n-import org.apache.tez.common.counters.TezCounters;\n import org.apache.tez.dag.api.OutputDescriptor;\n import org.apache.tez.dag.api.UserPayload;\n import org.apache.tez.dag.records.TezDAGID;\n@@ -62,7 +62,9 @@\n import org.apache.tez.runtime.api.OutputContext;\n import org.apache.tez.runtime.api.events.CompositeDataMovementEvent;\n import org.apache.tez.runtime.api.impl.ExecutionContextImpl;\n-import org.apache.tez.runtime.api.impl.TaskStatistics;\n+import org.apache.tez.runtime.api.impl.InputSpec;\n+import org.apache.tez.runtime.api.impl.OutputSpec;\n+import org.apache.tez.runtime.api.impl.TaskSpec;\n import org.apache.tez.runtime.api.impl.TezOutputContextImpl;\n import org.apache.tez.runtime.api.impl.TezUmbilical;\n import org.apache.tez.runtime.common.resources.MemoryDistributor;\n@@ -91,7 +93,7 @@\n   private static Path workDir = null;\n   private static final int shufflePort = 2112;\n \n-  TaskStatistics stats;\n+  LogicalIOProcessorRuntimeTask task;\n \n   static {\n     defaultConf.set(\"fs.defaultFS\", \"file:///\");\n@@ -108,7 +110,6 @@\n \n   @Before\n   public void setup() throws Exception {\n-    stats = new TaskStatistics();\n     localFs.mkdirs(workDir);\n   }\n \n@@ -139,8 +140,8 @@ public void testGeneratedDataMovementEvent() throws Exception {\n     }\n \n     events = kvOutput.close();\n-    assertEquals(45, stats.getIOStatistics().values().iterator().next().getDataSize());\n-    assertEquals(5, stats.getIOStatistics().values().iterator().next().getItemsProcessed());\n+    assertEquals(45, task.getTaskStatistics().getIOStatistics().values().iterator().next().getDataSize());\n+    assertEquals(5, task.getTaskStatistics().getIOStatistics().values().iterator().next().getItemsProcessed());\n     assertTrue(events != null && events.size() == 1);\n     CompositeDataMovementEvent dmEvent = (CompositeDataMovementEvent)events.get(0);\n \n@@ -212,12 +213,18 @@ private OutputContext createOutputContext(Configuration conf) throws IOException\n     TezVertexID vertexID = TezVertexID.getInstance(dagID, 1);\n     TezTaskID taskID = TezTaskID.getInstance(vertexID, 1);\n     TezTaskAttemptID taskAttemptID = TezTaskAttemptID.getInstance(taskID, 1);\n-    TezCounters counters = new TezCounters();\n     UserPayload userPayload = TezUtils.createUserPayloadFromConf(conf);\n-    LogicalIOProcessorRuntimeTask runtimeTask = mock(LogicalIOProcessorRuntimeTask.class);\n-    when(runtimeTask.addAndGetTezCounter(destinationVertexName)).thenReturn(counters);\n-    when(runtimeTask.getTaskStatistics()).thenReturn(stats);\n-\n+    \n+    TaskSpec mockSpec = mock(TaskSpec.class);\n+    when(mockSpec.getInputs()).thenReturn(Collections.singletonList(mock(InputSpec.class)));\n+    when(mockSpec.getOutputs()).thenReturn(Collections.singletonList(mock(OutputSpec.class)));\n+    task = new LogicalIOProcessorRuntimeTask(\n+        mockSpec, appAttemptNumber, \n+        new Configuration(), new String[]{\"/\"}, \n+        tezUmbilical, null, null, null, null, \"\", null, 1024, false);\n+    \n+    LogicalIOProcessorRuntimeTask runtimeTask = spy(task);\n+    \n     Map<String, String> auxEnv = new HashMap<String, String>();\n     ByteBuffer bb = ByteBuffer.allocate(4);\n     bb.putInt(shufflePort);\n@@ -236,7 +243,7 @@ private OutputContext createOutputContext(Configuration conf) throws IOException\n     verify(runtimeTask, times(1)).addAndGetTezCounter(destinationVertexName);\n     verify(runtimeTask, times(1)).getTaskStatistics();\n     // verify output stats object got created\n-    Assert.assertTrue(stats.getIOStatistics().containsKey(destinationVertexName));\n+    Assert.assertTrue(task.getTaskStatistics().getIOStatistics().containsKey(destinationVertexName));\n     OutputContext outputContext = spy(realOutputContext);\n     doAnswer(new Answer() {\n       @Override public Object answer(InvocationOnMock invocation) throws Throwable {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/0ac846ec5a41dd9f7839774eb9af4c8036e64a5b",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/4e44712448361e2e62262d4c297c67995ff2c520",
        "message": "TEZ-3587. Fetcher fetchInputs() can NPE on srcAttempt due to missing entry in pathToAttemptMap (Kuhu Shukla via jeagles)",
        "bug_id": "tez_14",
        "file": [
            {
                "sha": "d7c9e300c384a0e41bb3fbaae0fcb33f1e9f77aa",
                "filename": "TEZ-3334-CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/0ac846ec5a41dd9f7839774eb9af4c8036e64a5b/TEZ-3334-CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/0ac846ec5a41dd9f7839774eb9af4c8036e64a5b/TEZ-3334-CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/TEZ-3334-CHANGES.txt?ref=0ac846ec5a41dd9f7839774eb9af4c8036e64a5b",
                "patch": "@@ -4,6 +4,7 @@ Apache Tez Change Log\n INCOMPATIBLE CHANGES:\n \n ALL CHANGES:\n+  TEZ-3587. Fetcher fetchInputs() can NPE on srcAttempt due to missing entry in pathToAttemptMap\n   TEZ-3586. Remove fusesource.leveldbjni from the tez-auxservices shaded jar\n   TEZ-3532. Backport MAPREDUCE-6808. Log map attempts as part of shuffle handler audit log\n   TEZ-3563. Tez Shuffle Handler logging fails to initialize"
            },
            {
                "sha": "7b5ca17115705c9561c5f8592b229d57319bd0bb",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/0ac846ec5a41dd9f7839774eb9af4c8036e64a5b/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java",
                "raw_url": "https://github.com/apache/tez/raw/0ac846ec5a41dd9f7839774eb9af4c8036e64a5b/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/Fetcher.java?ref=0ac846ec5a41dd9f7839774eb9af4c8036e64a5b",
                "patch": "@@ -258,7 +258,7 @@ public FetchResult callInternal() throws Exception {\n       if (in instanceof CompositeInputAttemptIdentifier) {\n         CompositeInputAttemptIdentifier cin = (CompositeInputAttemptIdentifier)in;\n         for (int i = 0; i < cin.getInputIdentifierCount(); i++) {\n-          pathToAttemptMap.put(new PathPartition(cin.getPathComponent(), i), cin.expand(i));\n+          pathToAttemptMap.put(new PathPartition(cin.getPathComponent(), partition + i), cin.expand(i));\n         }\n       } else {\n         pathToAttemptMap.put(new PathPartition(in.getPathComponent(), 0), in);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/0c5ccb66afa1a972b2652ecd1d3f98c974f31add",
        "message": "TEZ-2798. NPE when executing TestMemoryWithEvents::testMemoryScatterGather. (sseth)",
        "bug_id": "tez_15",
        "file": [
            {
                "sha": "cc5ff5a8f3e6c0f9f1e031e117868bb847b08a80",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850",
                "patch": "@@ -9,6 +9,7 @@ INCOMPATIBLE CHANGES\n   TEZ-2949. Allow duplicate dag names within session for Tez.\n \n ALL CHANGES:\n+  TEZ-2798. NPE when executing TestMemoryWithEvents::testMemoryScatterGather.\n   TEZ-2963. RecoveryService#handleSummaryEvent exception with HDFS transparent encryption + kerberos authentication.\n   TEZ-2966. Tez does not honor mapreduce.task.timeout\n   TEZ-2979. FlakyTest: org.apache.tez.history.TestHistoryParser."
            },
            {
                "sha": "a2e0dd685eb3598399fe52c9f3a68100d631151a",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/ContainerLauncherContextImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850/tez-dag/src/main/java/org/apache/tez/dag/app/ContainerLauncherContextImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850/tez-dag/src/main/java/org/apache/tez/dag/app/ContainerLauncherContextImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/ContainerLauncherContextImpl.java?ref=aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850",
                "patch": "@@ -14,6 +14,7 @@\n \n package org.apache.tez.dag.app;\n \n+import com.google.common.base.Preconditions;\n import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;\n import org.apache.hadoop.yarn.api.records.ContainerId;\n import org.apache.tez.common.TezUtilsInternal;\n@@ -37,6 +38,8 @@\n   private final UserPayload initialUserPayload;\n \n   public ContainerLauncherContextImpl(AppContext appContext, TaskCommunicatorManagerInterface tal, UserPayload initialUserPayload) {\n+    Preconditions.checkNotNull(appContext, \"AppContext cannot be null\");\n+    Preconditions.checkNotNull(tal, \"TaskCommunicator cannot be null\");\n     this.context = appContext;\n     this.tal = tal;\n     this.initialUserPayload = initialUserPayload;"
            },
            {
                "sha": "bc7fa98e02d52399ae25b086c2d680db130a9339",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/MockDAGAppMaster.java",
                "status": "modified",
                "additions": 11,
                "deletions": 11,
                "changes": 22,
                "blob_url": "https://github.com/apache/tez/blob/aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850/tez-dag/src/test/java/org/apache/tez/dag/app/MockDAGAppMaster.java",
                "raw_url": "https://github.com/apache/tez/raw/aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850/tez-dag/src/test/java/org/apache/tez/dag/app/MockDAGAppMaster.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/MockDAGAppMaster.java?ref=aeb7038c35a5214d1ca5fe738da9bdeaf6e4a850",
                "patch": "@@ -87,8 +87,8 @@\n public class MockDAGAppMaster extends DAGAppMaster {\n   \n   private static final Logger LOG = LoggerFactory.getLogger(MockDAGAppMaster.class);\n-  ContainerLauncherContext containerLauncherContext;\n   MockContainerLauncher containerLauncher;\n+  private final AtomicBoolean launcherGoFlag;\n   boolean initFailFlag;\n   boolean startFailFlag;\n   boolean recoveryFatalError = false;\n@@ -488,17 +488,8 @@ public MockDAGAppMaster(ApplicationAttemptId applicationAttemptId, ContainerId c\n     super(applicationAttemptId, containerId, nmHost, nmPort, nmHttpPort, clock, appSubmitTime,\n         isSession, workingDirectory, localDirs, logDirs,  new TezApiVersionInfo().getVersion(), 1,\n         credentials, jobUserName, null);\n-    Configuration conf = new Configuration(false);\n-    UserPayload userPayload;\n-    try {\n-      userPayload = TezUtils.createUserPayloadFromConf(conf);\n-    } catch (IOException e) {\n-      throw new TezUncheckedException(e);\n-    }\n-    containerLauncherContext =\n-        new ContainerLauncherContextImpl(getContext(), getTaskCommunicatorManager(), userPayload);\n-    containerLauncher = new MockContainerLauncher(launcherGoFlag, containerLauncherContext);\n     shutdownHandler = new MockDAGAppMasterShutdownHandler();\n+    this.launcherGoFlag = launcherGoFlag;\n     this.initFailFlag = initFailFlag;\n     this.startFailFlag = startFailFlag;\n     Preconditions.checkArgument(handlerConcurrency > 0);\n@@ -512,6 +503,15 @@ protected ContainerLauncherManager createContainerLauncherManager(\n       List<NamedEntityDescriptor> containerLauncherDescirptors,\n       boolean isLocal)\n       throws UnknownHostException {\n+    UserPayload userPayload;\n+    try {\n+      userPayload = TezUtils.createUserPayloadFromConf(new Configuration(false));\n+    } catch (IOException e) {\n+      throw new TezUncheckedException(e);\n+    }\n+    ContainerLauncherContext containerLauncherContext =\n+        new ContainerLauncherContextImpl(getContext(), getTaskCommunicatorManager(), userPayload);\n+    containerLauncher = new MockContainerLauncher(launcherGoFlag, containerLauncherContext);\n     return new ContainerLauncherManager(containerLauncher, getContext());\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/28fb6522f4510cf62021c6dec55159d3b4de1b35",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/fd13f51b3f416dfe16da7279f10c3cbab21ff572",
        "message": "TEZ-2944. NPE in TestProcessorContext. (Bikas Saha via hitesh)",
        "bug_id": "tez_16",
        "file": [
            {
                "sha": "a6c4a63d0c83865f6f0e5cab2faaf2cce3a13970",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/tez/blob/28fb6522f4510cf62021c6dec55159d3b4de1b35/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/28fb6522f4510cf62021c6dec55159d3b4de1b35/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=28fb6522f4510cf62021c6dec55159d3b4de1b35",
                "patch": "@@ -8,8 +8,8 @@ INCOMPATIBLE CHANGES\n   TEZ-2948. Stop using dagName in the dagComplete notification to TaskCommunicators.\n \n ALL CHANGES:\n-  TEZ-2945. TEZ-2740 addendum to update API with currently supported\n-  parameters\n+  TEZ-2944. NPE in TestProcessorContext.\n+  TEZ-2945. TEZ-2740 addendum to update API with currently supported parameters\n   TEZ-2933. Tez UI: Load application details from RM when available\n   TEZ-2908. Tez UI: Errors are logged, but not displayed in the UI when AM fetch fails\n   TEZ-2923. Tez Live UI counters view empty for vertices, tasks, attempts"
            },
            {
                "sha": "40bc257b6b0d667624c400b2d1b643a086d84ead",
                "filename": "tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/apache/tez/blob/28fb6522f4510cf62021c6dec55159d3b4de1b35/tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java",
                "raw_url": "https://github.com/apache/tez/raw/28fb6522f4510cf62021c6dec55159d3b4de1b35/tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/test/java/org/apache/tez/runtime/api/impl/TestProcessorContext.java?ref=28fb6522f4510cf62021c6dec55159d3b4de1b35",
                "patch": "@@ -96,9 +96,5 @@ public void testDagNumber() {\n     assertEquals(vertexName, procContext.getTaskVertexName());\n     assertEquals(vertexId.getId(), procContext.getTaskVertexIndex());\n     assertTrue(Arrays.equals(localDirs, procContext.getWorkDirs()));\n-    \n-    // test auto call of notifyProgress\n-    procContext.setProgress(0.1f);\n-    verify(runtimeTask, times(1)).notifyProgressInvocation();\n   }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/36f358a85035b988dfc97b84a98c9d58c196bdaa",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/97e1d867d961c5ae277a00f55757b29bd7f82a87",
        "message": "TEZ-2860. NPE in DAGClientImpl (Jeff Zhang via hitesh)",
        "bug_id": "tez_17",
        "file": [
            {
                "sha": "12728d0d59ee1ffb54e9e1614b9775695bc1ddb2",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/36f358a85035b988dfc97b84a98c9d58c196bdaa/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/36f358a85035b988dfc97b84a98c9d58c196bdaa/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=36f358a85035b988dfc97b84a98c9d58c196bdaa",
                "patch": "@@ -7,6 +7,7 @@ Release 0.8.1: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n+  TEZ-2860. NPE in DAGClientImpl.\n   TEZ-2855. Fix a potential NPE while routing VertexManager events.\n   TEZ-2758. Remove append API in RecoveryService after TEZ-1909.\n   TEZ-2851. Support a way for upstream applications to pass in a caller context to Tez.\n@@ -197,6 +198,7 @@ Release 0.7.1: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES\n+  TEZ-2860. NPE in DAGClientImpl.\n   TEZ-2855. Fix a potential NPE while routing VertexManager events.\n   TEZ-2758. Remove append API in RecoveryService after TEZ-1909.\n   TEZ-2851. Support a way for upstream applications to pass in a caller context to Tez.\n@@ -470,6 +472,7 @@ Release 0.6.3: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n+  TEZ-2860. NPE in DAGClientImpl.\n   TEZ-2855. Fix a potential NPE while routing VertexManager events.\n   TEZ-2716. DefaultSorter.isRleNeeded not thread safe\n   TEZ-2758. Remove append API in RecoveryService after TEZ-1909."
            },
            {
                "sha": "fa22c324415150cbe65bd2ed0281ab0a820be6f6",
                "filename": "tez-api/src/main/java/org/apache/tez/dag/api/client/DAGClientImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/tez/blob/36f358a85035b988dfc97b84a98c9d58c196bdaa/tez-api/src/main/java/org/apache/tez/dag/api/client/DAGClientImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/36f358a85035b988dfc97b84a98c9d58c196bdaa/tez-api/src/main/java/org/apache/tez/dag/api/client/DAGClientImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/dag/api/client/DAGClientImpl.java?ref=36f358a85035b988dfc97b84a98c9d58c196bdaa",
                "patch": "@@ -467,8 +467,9 @@ protected DAGStatus getDAGStatusViaRM() throws TezException, IOException {\n         }\n       }\n     }\n-\n-    builder.addAllDiagnostics(Collections.singleton(appReport.getDiagnostics()));\n+    if (appReport.getDiagnostics() != null) {\n+      builder.addAllDiagnostics(Collections.singleton(appReport.getDiagnostics()));\n+    }\n     return dagStatus;\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/971e0957a1302e20fe241b4aeac278dc87111257",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/9e6bd7c8025c63cd919b94cf7a99137f2fc253b6",
        "message": "TEZ-2471. NPE in LogicalIOProcessorRuntimeTask while printing thread info. (sseth)",
        "bug_id": "tez_18",
        "file": [
            {
                "sha": "d651960646bbcc697affa3d0d32a484e1efbe45a",
                "filename": "TEZ-2003-CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/971e0957a1302e20fe241b4aeac278dc87111257/TEZ-2003-CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/971e0957a1302e20fe241b4aeac278dc87111257/TEZ-2003-CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/TEZ-2003-CHANGES.txt?ref=971e0957a1302e20fe241b4aeac278dc87111257",
                "patch": "@@ -27,5 +27,6 @@ ALL CHANGES:\n   TEZ-2434. Allow tasks to be killed in the Runtime.\n   TEZ-2443. TaskRunner2 should call abort, NPEs while cleaning up tasks.\n   TEZ-2465. Retrun the status of a kill request in TaskRunner2.\n+  TEZ-2471. NPE in LogicalIOProcessorRuntimeTask while printing thread info.\n \n INCOMPATIBLE CHANGES:"
            },
            {
                "sha": "449fa0fc7100e2a18291e7ce675d91510db9b5aa",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/tez/blob/971e0957a1302e20fe241b4aeac278dc87111257/tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java",
                "raw_url": "https://github.com/apache/tez/raw/971e0957a1302e20fe241b4aeac278dc87111257/tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java?ref=971e0957a1302e20fe241b4aeac278dc87111257",
                "patch": "@@ -936,7 +936,10 @@ void printThreads() {\n     long[] threadIds = threadMXBean.getAllThreadIds();\n     for (Long id : threadIds) {\n       ThreadInfo threadInfo = threadMXBean.getThreadInfo(id);\n-      LOG.info(\"ThreadId : \" + id + \", name=\" + threadInfo.getThreadName());\n+      // The thread could have been shutdown before we read info about it.\n+      if (threadInfo != null) {\n+        LOG.debug(\"ThreadId : \" + id + \", name=\" + threadInfo.getThreadName());\n+      }\n     }\n   }\n   "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/fac3222c768fbdfc8c1bbe55f94bc106900e6ae4",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/282eb724009faffb3a4f7a71b7b464f777fe5c3b",
        "message": "TEZ-2437. FilterLinesByWord NPEs when run in Localmode (zjffdu)",
        "bug_id": "tez_19",
        "file": [
            {
                "sha": "ff7550e30dea16f51b3a3abb8ea5c1111affc88a",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/fac3222c768fbdfc8c1bbe55f94bc106900e6ae4/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/fac3222c768fbdfc8c1bbe55f94bc106900e6ae4/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=fac3222c768fbdfc8c1bbe55f94bc106900e6ae4",
                "patch": "@@ -22,6 +22,7 @@ INCOMPATIBLE CHANGES\n     Default max limit increased. Should not affect existing users.\n \n ALL CHANGES:\n+  TEZ-2437. FilterLinesByWord NPEs when run in Localmode\n   TEZ-2432. Syntax error in DOAP file release section\n   TEZ-2445. Disable the object cleanup in local mode in LogicalIOProcessorRuntimeTask.\n   TEZ-2057. tez-dag/pom.xml contains versions for dependencies."
            },
            {
                "sha": "a5e8e15abf54be4914cd1d65c66f30ad5c5c572f",
                "filename": "tez-dag/src/main/java/org/apache/tez/client/LocalClient.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/fac3222c768fbdfc8c1bbe55f94bc106900e6ae4/tez-dag/src/main/java/org/apache/tez/client/LocalClient.java",
                "raw_url": "https://github.com/apache/tez/raw/fac3222c768fbdfc8c1bbe55f94bc106900e6ae4/tez-dag/src/main/java/org/apache/tez/client/LocalClient.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/client/LocalClient.java?ref=fac3222c768fbdfc8c1bbe55f94bc106900e6ae4",
                "patch": "@@ -112,7 +112,6 @@ public void close() throws IOException {\n     // the TezClient is stopped, in order not to leak.\n     if (dagAppMaster != null) {\n       dagAppMaster.stop();\n-      dagAppMaster = null;\n     }\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/c411e4edced690d111dac3cf2afcbb6cd39354f4",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/f6ea0fb3306faa709c445e4d76081de60545d760",
        "message": "TEZ-2405. PipelinedSorter can throw NPE with custom compartor (rbalamohan)",
        "bug_id": "tez_20",
        "file": [
            {
                "sha": "6c19770c3e8dff57f50fa9f2508f4b78b4315569",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/c411e4edced690d111dac3cf2afcbb6cd39354f4/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/c411e4edced690d111dac3cf2afcbb6cd39354f4/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=c411e4edced690d111dac3cf2afcbb6cd39354f4",
                "patch": "@@ -9,6 +9,7 @@ INCOMPATIBLE CHANGES\n   TEZ-1993. Implement a pluggable InputSizeEstimator for grouping fairly\n \n ALL CHANGES:\n+  TEZ-2405. PipelinedSorter can throw NPE with custom compartor.\n   TEZ-1897. Create a concurrent version of AsyncDispatcher\n   TEZ-2394. Issues when there is an error in VertexManager callbacks\n   TEZ-2386. Tez UI: Inconsistent usage of icon colors"
            },
            {
                "sha": "661f54cac719d7fc37a977ed78a72677159c19ea",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/sort/impl/PipelinedSorter.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/c411e4edced690d111dac3cf2afcbb6cd39354f4/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/sort/impl/PipelinedSorter.java",
                "raw_url": "https://github.com/apache/tez/raw/c411e4edced690d111dac3cf2afcbb6cd39354f4/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/sort/impl/PipelinedSorter.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/sort/impl/PipelinedSorter.java?ref=c411e4edced690d111dac3cf2afcbb6cd39354f4",
                "patch": "@@ -749,7 +749,7 @@ public int compareInternal(final DataInputBuffer needle, final int needlePart, f\n         cmp = comparator.compare(buf,\n             keystart + off , (valstart - keystart),\n             needle.getData(),\n-            needle.getPosition(), needle.getLength());\n+            needle.getPosition(), (needle.getLength() - needle.getPosition()));\n       }\n       return cmp;\n     }"
            },
            {
                "sha": "5de96c95e87a757a5ad540097c219e1418faaa92",
                "filename": "tez-runtime-library/src/test/java/org/apache/tez/runtime/library/common/sort/impl/TestPipelinedSorter.java",
                "status": "modified",
                "additions": 45,
                "deletions": 8,
                "changes": 53,
                "blob_url": "https://github.com/apache/tez/blob/c411e4edced690d111dac3cf2afcbb6cd39354f4/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/common/sort/impl/TestPipelinedSorter.java",
                "raw_url": "https://github.com/apache/tez/raw/c411e4edced690d111dac3cf2afcbb6cd39354f4/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/common/sort/impl/TestPipelinedSorter.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/common/sort/impl/TestPipelinedSorter.java?ref=c411e4edced690d111dac3cf2afcbb6cd39354f4",
                "patch": "@@ -8,6 +8,7 @@\n import org.apache.hadoop.io.DataInputBuffer;\n import org.apache.hadoop.io.DataOutputBuffer;\n import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.WritableComparator;\n import org.apache.hadoop.io.serializer.Deserializer;\n import org.apache.hadoop.io.serializer.SerializationFactory;\n import org.apache.hadoop.yarn.api.records.ApplicationId;\n@@ -22,6 +23,7 @@\n import org.apache.tez.runtime.library.conf.OrderedPartitionedKVOutputConfig.SorterImpl;\n import org.apache.tez.runtime.library.partitioner.HashPartitioner;\n import org.junit.After;\n+import org.junit.AfterClass;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n@@ -61,10 +63,10 @@\n   private static final Configuration conf = new Configuration();\n   private static FileSystem localFs = null;\n   private static Path workDir = null;\n+  private OutputContext outputContext;\n \n   private int numOutputs;\n   private long initialAvailableMem;\n-  private OutputContext outputContext;\n \n   //TODO: Need to make it nested structure so that multiple partition cases can be validated\n   private static TreeMap<String, String> sortedDataMap = Maps.newTreeMap();\n@@ -82,29 +84,35 @@\n     }\n   }\n \n+  @AfterClass\n+  public static void cleanup() throws IOException {\n+    localFs.delete(workDir, true);\n+  }\n+\n   @Before\n   public void setup() throws IOException {\n     ApplicationId appId = ApplicationId.newInstance(10000, 1);\n     TezCounters counters = new TezCounters();\n     String uniqueId = UUID.randomUUID().toString();\n     this.outputContext = createMockOutputContext(counters, appId, uniqueId);\n \n-    //To enable PipelinedSorter, set 2 threads\n+    //To enable PipelinedSorter\n     conf.set(TezRuntimeConfiguration.TEZ_RUNTIME_SORTER_CLASS, SorterImpl.PIPELINED.name());\n+\n     conf.set(TezRuntimeConfiguration.TEZ_RUNTIME_KEY_CLASS, Text.class.getName());\n     conf.set(TezRuntimeConfiguration.TEZ_RUNTIME_VALUE_CLASS, Text.class.getName());\n-    conf.set(TezRuntimeConfiguration.TEZ_RUNTIME_PARTITIONER_CLASS,\n-        HashPartitioner.class.getName());\n+    conf.set(TezRuntimeConfiguration.TEZ_RUNTIME_PARTITIONER_CLASS, HashPartitioner.class.getName());\n+\n+    conf.setBoolean(TezRuntimeConfiguration.TEZ_RUNTIME_ENABLE_FINAL_MERGE_IN_OUTPUT, true);\n \n     //Setup localdirs\n     String localDirs = workDir.toString();\n     conf.setStrings(TezRuntimeFrameworkConfigs.LOCAL_DIRS, localDirs);\n   }\n \n   @After\n-  public void cleanup() throws IOException {\n-    localFs.delete(workDir, true);\n-    sortedDataMap.clear();\n+  public void reset() throws IOException {\n+    cleanup();\n     localFs.mkdirs(workDir);\n   }\n \n@@ -132,6 +140,13 @@ public void basicTest() throws IOException {\n \n   }\n \n+  @Test\n+  public void testWithCustomComparator() throws IOException {\n+    //Test with custom comparator\n+    conf.set(TezRuntimeConfiguration.TEZ_RUNTIME_KEY_COMPARATOR_CLASS, CustomComparator.class.getName());\n+    basicTest(1, 100000, 100, (10 * 1024l * 1024l), 3 << 20);\n+  }\n+\n   @Test\n   public void testWithPipelinedShuffle() throws IOException {\n     this.numOutputs = 1;\n@@ -251,7 +266,7 @@ private void verifyData(IFile.Reader reader)\n     Assert.assertTrue(numRecordsRead == sortedDataMap.size());\n   }\n \n-  private OutputContext createMockOutputContext(TezCounters counters, ApplicationId appId,\n+  private static OutputContext createMockOutputContext(TezCounters counters, ApplicationId appId,\n       String uniqueId) throws IOException {\n     OutputContext outputContext = mock(OutputContext.class);\n \n@@ -280,4 +295,26 @@ private OutputContext createMockOutputContext(TezCounters counters, ApplicationI\n     doReturn(outDirs).when(outputContext).getWorkDirs();\n     return outputContext;\n   }\n+\n+  /**\n+   * E.g Hive uses TezBytesComparator which internally makes use of WritableComparator's comparison.\n+   * Any length mismatches are handled there.\n+   *\n+   * However, custom comparators can handle this differently and might throw\n+   * IndexOutOfBoundsException in case of invalid lengths.\n+   *\n+   * This comparator (similar to comparator in BinInterSedes of pig) would thrown exception when\n+   * wrong lengths are mentioned.\n+   */\n+  public static class CustomComparator extends WritableComparator {\n+    @Override\n+    public int compare(byte[] b1, int s1, int l1, byte[] b2, int s2, int l2) {\n+      //wrapping is done so that it would throw exceptions on wrong lengths\n+      ByteBuffer bb1 = ByteBuffer.wrap(b1, s1, l1);\n+      ByteBuffer bb2 = ByteBuffer.wrap(b2, s2, l2);\n+\n+      return bb1.compareTo(bb2);\n+    }\n+\n+  }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/61764323798385ec8d8103db2d4dcc24c2ebd1ae",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/9316fe627a9153a5caf8c653e97300c7b4bb8095",
        "message": "TEZ-2257. Fix potential NPEs in TaskReporter. (sseth)",
        "bug_id": "tez_21",
        "file": [
            {
                "sha": "dc28971462553026e26c583b1cd4c3f4ab4a9c28",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/61764323798385ec8d8103db2d4dcc24c2ebd1ae/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/61764323798385ec8d8103db2d4dcc24c2ebd1ae/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=61764323798385ec8d8103db2d4dcc24c2ebd1ae",
                "patch": "@@ -266,6 +266,7 @@ TEZ-UI CHANGES (TEZ-8):\n Release 0.5.4: Unreleased\n \n ALL CHANGES:\n+  TEZ-2257. Fix potential NPEs in TaskReporter.\n   TEZ-2192. Relocalization does not check for source.\n   TEZ-2224. EventQueue empty doesn't mean events are consumed in RecoveryService\n   TEZ-2240. Fix toUpperCase/toLowerCase to use Locale.ENGLISH."
            },
            {
                "sha": "4c07f5a46a52c4ee50070b45c611e0a863260a42",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskReporter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/61764323798385ec8d8103db2d4dcc24c2ebd1ae/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskReporter.java",
                "raw_url": "https://github.com/apache/tez/raw/61764323798385ec8d8103db2d4dcc24c2ebd1ae/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskReporter.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskReporter.java?ref=61764323798385ec8d8103db2d4dcc24c2ebd1ae",
                "patch": "@@ -374,16 +374,16 @@ public void onFailure(Throwable t) {\n     }\n   }\n \n-  public boolean taskSucceeded(TezTaskAttemptID taskAttemptID) throws IOException, TezException {\n+  public synchronized boolean taskSucceeded(TezTaskAttemptID taskAttemptID) throws IOException, TezException {\n     return currentCallable.taskSucceeded(taskAttemptID);\n   }\n \n-  public boolean taskFailed(TezTaskAttemptID taskAttemptID, Throwable t, String diagnostics,\n+  public synchronized boolean taskFailed(TezTaskAttemptID taskAttemptID, Throwable t, String diagnostics,\n       EventMetaData srcMeta) throws IOException, TezException {\n     return currentCallable.taskFailed(taskAttemptID, t, diagnostics, srcMeta);\n   }\n \n-  public void addEvents(TezTaskAttemptID taskAttemptID, Collection<TezEvent> events) {\n+  public synchronized void addEvents(TezTaskAttemptID taskAttemptID, Collection<TezEvent> events) {\n     currentCallable.addEvents(taskAttemptID, events);\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/b885eca7289fbc2e3419625ad972339b2e6ba351",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/c3b736fcd7891b5942f53accea3a4a992f8aba08",
        "message": "TEZ-636. NPE in ExampleDriver.printDAGStatus(). (hitesh)",
        "bug_id": "tez_22",
        "file": [
            {
                "sha": "cb34b2ae37692ce14d05e9c3e0fb4ef864eccf88",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/tez/blob/b885eca7289fbc2e3419625ad972339b2e6ba351/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "raw_url": "https://github.com/apache/tez/raw/b885eca7289fbc2e3419625ad972339b2e6ba351/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java?ref=b885eca7289fbc2e3419625ad972339b2e6ba351",
                "patch": "@@ -119,6 +119,11 @@ public static void printDAGStatus(DAGClient dagClient, String[] vertexNames,\n       for (String vertexName : vertexNames) {\n         VertexStatus vStatus = dagClient.getVertexStatus(vertexName,\n           (displayVertexCounters ? opts : null));\n+        if (vStatus == null) {\n+          System.out.println(\"Could not retrieve status for vertex: \"\n+            + vertexName);\n+          continue;\n+        }\n         Progress vProgress = vStatus.getProgress();\n         if (vProgress != null) {\n           vProgressFloat = 0.0f;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/1885b9ed252b7728eb7636a4a1c447a35504b4fa",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/f9c9c0c9c49ab973cea7920c26c494e23b788c3a",
        "message": "TEZ-629. NPE in MRAMSplitGenerator (bikas)",
        "bug_id": "tez_23",
        "file": [
            {
                "sha": "da9ce556dbee68022d9647c951423ad778728466",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java",
                "status": "modified",
                "additions": 12,
                "deletions": 6,
                "changes": 18,
                "blob_url": "https://github.com/apache/tez/blob/1885b9ed252b7728eb7636a4a1c447a35504b4fa/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java",
                "raw_url": "https://github.com/apache/tez/raw/1885b9ed252b7728eb7636a4a1c447a35504b4fa/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/common/MRInputAMSplitGenerator.java?ref=1885b9ed252b7728eb7636a4a1c447a35504b4fa",
                "patch": "@@ -104,14 +104,16 @@ public MRInputAMSplitGenerator() {\n           String rack = \n               ((org.apache.hadoop.mapreduce.split.TezGroupedSplit) split).getRack();\n           if (rack == null) {\n-            locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n-                .asList(split.getLocations())), null));\n+            if (split.getLocations() != null) {\n+              locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n+                  .asList(split.getLocations())), null));\n+            } else {\n+              locationHints.add(new TaskLocationHint(null, null));\n+            }\n           } else {\n             locationHints.add(new TaskLocationHint(null, \n                 Collections.singleton(rack)));\n           }\n-          locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n-              .asList(split.getLocations())), null));\n         }\n         inputSplitInfo = new InputSplitInfoMem(splitsBuilder.build(),\n             locationHints, splits.length);\n@@ -128,8 +130,12 @@ public MRInputAMSplitGenerator() {\n           String rack = \n               ((org.apache.hadoop.mapred.split.TezGroupedSplit) split).getRack();\n           if (rack == null) {\n-            locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n-                .asList(split.getLocations())), null));\n+            if (split.getLocations() != null) {\n+              locationHints.add(new TaskLocationHint(new HashSet<String>(Arrays\n+                  .asList(split.getLocations())), null));\n+            } else {\n+              locationHints.add(new TaskLocationHint(null, null));\n+            }\n           } else {\n             locationHints.add(new TaskLocationHint(null, \n                 Collections.singleton(rack)));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/1fc98d3335c09169e258851e4fff014819c00c31",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/71231c892deb40d4c7a0c9f948ea8d40ceb0ec6e",
        "message": "TEZ-1632. NPE at TestPreemption.testPreemptionWithoutSession (Alexander Pivovarov via bikas)",
        "bug_id": "tez_24",
        "file": [
            {
                "sha": "9ffc776de5c704e6c9d1a33740b57d62331888b4",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/1fc98d3335c09169e258851e4fff014819c00c31/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/1fc98d3335c09169e258851e4fff014819c00c31/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=1fc98d3335c09169e258851e4fff014819c00c31",
                "patch": "@@ -30,6 +30,7 @@ ALL CHANGES:\n   TEZ-1479. Disambiguate (refactor) between ShuffleInputEventHandlers and Fetchers.\n   TEZ-1665. DAGScheduler should provide a priority range instead of an exact\n   priority\n+  TEZ-1632. NPE at TestPreemption.testPreemptionWithoutSession\n \n Release 0.5.1: 2014-10-02\n "
            },
            {
                "sha": "0958c48171dc64a37accf82b106b6e4ed8105a7b",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/TestPreemption.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/1fc98d3335c09169e258851e4fff014819c00c31/tez-dag/src/test/java/org/apache/tez/dag/app/TestPreemption.java",
                "raw_url": "https://github.com/apache/tez/raw/1fc98d3335c09169e258851e4fff014819c00c31/tez-dag/src/test/java/org/apache/tez/dag/app/TestPreemption.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/TestPreemption.java?ref=1fc98d3335c09169e258851e4fff014819c00c31",
                "patch": "@@ -99,7 +99,11 @@ public void testPreemptionWithoutSession() throws Exception {\n     // now the MockApp has been started. sync with it to get the launcher\n     syncWithMockAppLauncher(false, mockAppLauncherGoFlag, tezClient);\n \n-    DAGImpl dagImpl = (DAGImpl) mockApp.getContext().getCurrentDAG();\n+    DAGImpl dagImpl;\n+    do {\n+      Thread.sleep(100); // usually needs to sleep 2-3 times\n+    } while ((dagImpl = (DAGImpl) mockApp.getContext().getCurrentDAG()) == null);\n+\n     int vertexIndex = 0;\n     int upToTaskVersion = 3;\n     TezVertexID vertexId = TezVertexID.getInstance(dagImpl.getID(), vertexIndex);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/62bbbdb78d6060688be33afe8dcec0a89eb0daa1",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/af1884a1254bb3208daf09b184004b5007f43a72",
        "message": "TEZ-1354. Fix NPE in FilterByWordOutputProcessor. Contributed by\nJonathan Eagles.",
        "bug_id": "tez_25",
        "file": [
            {
                "sha": "bf077358173e56dabb2e688d666d488d9fc43c18",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordOutputProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 4,
                "changes": 5,
                "blob_url": "https://github.com/apache/tez/blob/62bbbdb78d6060688be33afe8dcec0a89eb0daa1/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordOutputProcessor.java",
                "raw_url": "https://github.com/apache/tez/raw/62bbbdb78d6060688be33afe8dcec0a89eb0daa1/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordOutputProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordOutputProcessor.java?ref=62bbbdb78d6060688be33afe8dcec0a89eb0daa1",
                "patch": "@@ -26,9 +26,7 @@\n import org.apache.tez.mapreduce.output.MROutput;\n import org.apache.tez.mapreduce.processor.map.MapProcessor;\n import org.apache.tez.runtime.api.AbstractLogicalIOProcessor;\n-import org.apache.tez.runtime.api.AbstractLogicalInput;\n import org.apache.tez.runtime.api.Event;\n-import org.apache.tez.runtime.api.LogicalIOProcessor;\n import org.apache.tez.runtime.api.LogicalInput;\n import org.apache.tez.runtime.api.LogicalOutput;\n import org.apache.tez.runtime.api.TezProcessorContext;\n@@ -40,7 +38,6 @@\n public class FilterByWordOutputProcessor extends AbstractLogicalIOProcessor {\n \n   private static final Log LOG = LogFactory.getLog(MapProcessor.class);\n-  private TezProcessorContext processorContext;\n \n   public FilterByWordOutputProcessor(TezProcessorContext context) {\n     super(context);\n@@ -101,7 +98,7 @@ public void run(Map<String, LogicalInput> inputs,\n \n       kvWriter.write(key, value);\n     }\n-    if (processorContext.canCommit()) {\n+    if (getContext().canCommit()) {\n       mrOutput.commit();\n     } else {\n       mrOutput.abort();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/f3cea630e8329018a1e600859353576cb83cf77d",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/01ad29e44bfb3ca9d6bfff2cc82444e406721b2a",
        "message": "TEZ-2907. NPE in IFile.Reader.getLength during final merge operation (rbalamohan)",
        "bug_id": "tez_26",
        "file": [
            {
                "sha": "d19df34be6c53231053ae3d7ba78e367da6b186c",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/f3cea630e8329018a1e600859353576cb83cf77d/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/f3cea630e8329018a1e600859353576cb83cf77d/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=f3cea630e8329018a1e600859353576cb83cf77d",
                "patch": "@@ -6,6 +6,7 @@ Release 0.8.2: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n+  TEZ-2907. NPE in IFile.Reader.getLength during final merge operation\n   TEZ-2903. Stop using proprietary APIs in RPCLoadGen.\n   TEZ-2882. Consider improving fetch failure handling\n   TEZ-2850. Tez MergeManager OOM for small Map Outputs\n@@ -220,6 +221,7 @@ Release 0.7.1: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES\n+  TEZ-2907. NPE in IFile.Reader.getLength during final merge operation\n   TEZ-2850. Tez MergeManager OOM for small Map Outputs\n   TEZ-2886. Ability to merge AM credentials with DAG credentials.\n   TEZ-2896. Fix thread names used during Input/Output initialization.\n@@ -504,6 +506,7 @@ Release 0.6.3: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n+  TEZ-2907. NPE in IFile.Reader.getLength during final merge operation\n   TEZ-2850. Tez MergeManager OOM for small Map Outputs\n   TEZ-2781. Fallback to send only TaskAttemptFailedEvent if taskFailed heartbeat fails\n   TEZ-2855. Fix a potential NPE while routing VertexManager events."
            },
            {
                "sha": "fb9b2431e5a6f652614080b2f12d229d992d1a15",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/orderedgrouped/MergeManager.java",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/f3cea630e8329018a1e600859353576cb83cf77d/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/orderedgrouped/MergeManager.java",
                "raw_url": "https://github.com/apache/tez/raw/f3cea630e8329018a1e600859353576cb83cf77d/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/orderedgrouped/MergeManager.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/orderedgrouped/MergeManager.java?ref=f3cea630e8329018a1e600859353576cb83cf77d",
                "patch": "@@ -949,12 +949,14 @@ private long createInMemorySegments(List<MapOutput> inMemoryMapOutputs,\n   class RawKVIteratorReader extends IFile.Reader {\n \n     private final TezRawKeyValueIterator kvIter;\n+    private final long size;\n \n     public RawKVIteratorReader(TezRawKeyValueIterator kvIter, long size)\n         throws IOException {\n       super(null, size, null, spilledRecordsCounter, null, ifileReadAhead,\n           ifileReadAheadLength, ifileBufferSize);\n       this.kvIter = kvIter;\n+      this.size = size;\n     }\n     @Override\n     public KeyState readRawKey(DataInputBuffer key) throws IOException {\n@@ -982,6 +984,10 @@ public long getPosition() throws IOException {\n     public void close() throws IOException {\n       kvIter.close();\n     }\n+\n+    @Override public long getLength() {\n+      return size;\n+    }\n   }\n \n   private TezRawKeyValueIterator finalMerge(Configuration job, FileSystem fs,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/97e1d867d961c5ae277a00f55757b29bd7f82a87",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/427fa620cb2a27fe25c39c9e947471f1e319c400",
        "message": "TEZ-2855. Fix a potential NPE while routing VertexManager events. (sseth)",
        "bug_id": "tez_27",
        "file": [
            {
                "sha": "8e1c1b3e784eb4e73b3927dd3215067e476f5254",
                "filename": "CHANGES.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/97e1d867d961c5ae277a00f55757b29bd7f82a87/CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/97e1d867d961c5ae277a00f55757b29bd7f82a87/CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/CHANGES.txt?ref=97e1d867d961c5ae277a00f55757b29bd7f82a87",
                "patch": "@@ -7,6 +7,7 @@ Release 0.8.1: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n+  TEZ-2855. Fix a potential NPE while routing VertexManager events.\n   TEZ-2758. Remove append API in RecoveryService after TEZ-1909.\n   TEZ-2851. Support a way for upstream applications to pass in a caller context to Tez.\n   TEZ-2859. TestMergeManager.testLocalDiskMergeMultipleTasks failing\n@@ -196,6 +197,7 @@ Release 0.7.1: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES\n+  TEZ-2855. Fix a potential NPE while routing VertexManager events.\n   TEZ-2758. Remove append API in RecoveryService after TEZ-1909.\n   TEZ-2851. Support a way for upstream applications to pass in a caller context to Tez.\n   TEZ-2858. Stop using System.currentTimeMillis in TestInputReadyTracker.\n@@ -468,6 +470,7 @@ Release 0.6.3: Unreleased\n INCOMPATIBLE CHANGES\n \n ALL CHANGES:\n+  TEZ-2855. Fix a potential NPE while routing VertexManager events.\n   TEZ-2716. DefaultSorter.isRleNeeded not thread safe\n   TEZ-2758. Remove append API in RecoveryService after TEZ-1909.\n   TEZ-2851. Support a way for upstream applications to pass in a caller context to Tez."
            },
            {
                "sha": "af55049e701cf7fcb04eb90ef17a3f80bbeb881c",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 21,
                "deletions": 3,
                "changes": 24,
                "blob_url": "https://github.com/apache/tez/blob/97e1d867d961c5ae277a00f55757b29bd7f82a87/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/97e1d867d961c5ae277a00f55757b29bd7f82a87/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=97e1d867d961c5ae277a00f55757b29bd7f82a87",
                "patch": "@@ -288,6 +288,9 @@\n \n   @VisibleForTesting\n   final List<TezEvent> pendingInitializerEvents = new LinkedList<TezEvent>();\n+\n+  @VisibleForTesting\n+  final List<VertexManagerEvent> pendingVmEvents = new LinkedList<>();\n   \n   LegacySpeculator speculator;\n \n@@ -721,8 +724,8 @@ private void augmentStateMachine() {\n   private final ProcessorDescriptor processorDescriptor;\n   \n   private boolean vertexToBeReconfiguredByManager = false;\n-  AtomicBoolean vmIsInitialized = new AtomicBoolean(false);\n-  AtomicBoolean completelyConfiguredSent = new AtomicBoolean(false);\n+  final AtomicBoolean vmIsInitialized = new AtomicBoolean(false);\n+  final AtomicBoolean completelyConfiguredSent = new AtomicBoolean(false);\n \n   @VisibleForTesting\n   Map<Vertex, Edge> sourceVertices;\n@@ -2543,6 +2546,16 @@ private VertexState setupVertex(VertexInitializedEvent event) {\n     try {\n       vertexManager.initialize();\n       vmIsInitialized.set(true);\n+      if (!pendingVmEvents.isEmpty()) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Processing: \" + pendingVmEvents.size() + \" pending VMEvents for Vertex: \" +\n+              logIdentifier);\n+        }\n+        for (VertexManagerEvent vmEvent : pendingVmEvents) {\n+          vertexManager.onVertexManagerEventReceived(vmEvent);\n+        }\n+        pendingVmEvents.clear();\n+      }\n     } catch (AMUserCodeException e) {\n       String msg = \"Exception in \" + e.getSource()+ \", vertex:\" + logIdentifier;\n       LOG.error(msg, e);\n@@ -4506,7 +4519,12 @@ private void handleRoutedTezEvents(List<TezEvent> tezEvents, boolean recovered,\n               getTaskAttemptIdentifier(dag.getName(), getName(), srcTaId));\n         }\n         if (target == this) {\n-          vertexManager.onVertexManagerEventReceived(vmEvent);\n+          if (!vmIsInitialized.get()) {\n+            // The VM hasn't been setup yet, defer event consumption\n+            pendingVmEvents.add(vmEvent);\n+          } else {\n+            vertexManager.onVertexManagerEventReceived(vmEvent);\n+          }\n         } else {\n           checkEventSourceMetadata(this, sourceMeta);\n           eventHandler.handle(new VertexEventRouteEvent(target"
            },
            {
                "sha": "eb95bf9997cc44bd5372c497cba97f29ecdcd361",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "status": "modified",
                "additions": 171,
                "deletions": 1,
                "changes": 172,
                "blob_url": "https://github.com/apache/tez/blob/97e1d867d961c5ae277a00f55757b29bd7f82a87/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/97e1d867d961c5ae277a00f55757b29bd7f82a87/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java?ref=97e1d867d961c5ae277a00f55757b29bd7f82a87",
                "patch": "@@ -20,6 +20,7 @@\n \n import java.nio.ByteBuffer;\n \n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n import static org.mockito.Matchers.any;\n import static org.mockito.Matchers.anyInt;\n@@ -41,6 +42,7 @@\n import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.locks.Condition;\n import java.util.concurrent.locks.ReentrantLock;\n \n@@ -432,7 +434,92 @@ private DAGPlan createInvalidDAGPlan() {\n         .build();\n     return dag;\n   }\n-  \n+\n+  // Simple dag with a CountingVM on v3 (which has v1, v2 as inputs)\n+  // v1, v2 -> v3\n+  private DAGPlan createDAGPlanWithCountingVM() {\n+    LOG.info(\"Setting up dag plan with coutning VertexManager\");\n+    DAGPlan dag = DAGPlan.newBuilder()\n+        .setName(\"dagWithCountingVM\")\n+        .addVertex(\n+            VertexPlan.newBuilder()\n+                .setName(\"vertex1\")\n+                .setType(PlanVertexType.NORMAL)\n+                .setTaskConfig(\n+                    PlanTaskConfiguration.newBuilder()\n+                        .setNumTasks(1)\n+                        .setVirtualCores(4)\n+                        .setMemoryMb(1024)\n+                        .setJavaOpts(\"\")\n+                        .setTaskModule(\"x1.y1\")\n+                        .build()\n+                )\n+                .addOutEdgeId(\"e1\")\n+                .build()\n+        )\n+        .addVertex(\n+            VertexPlan.newBuilder()\n+                .setName(\"vertex2\")\n+                .setType(PlanVertexType.NORMAL)\n+                .setTaskConfig(\n+                    PlanTaskConfiguration.newBuilder()\n+                        .setNumTasks(1)\n+                        .setVirtualCores(4)\n+                        .setMemoryMb(1024)\n+                        .setJavaOpts(\"\")\n+                        .setTaskModule(\"x2.y2\")\n+                        .build()\n+                )\n+                .addOutEdgeId(\"e2\")\n+                .build()\n+        )\n+        .addVertex(\n+            VertexPlan.newBuilder()\n+                .setName(\"vertex3\")\n+                .setType(PlanVertexType.NORMAL)\n+                .setTaskConfig(\n+                    PlanTaskConfiguration.newBuilder()\n+                        .setNumTasks(1)\n+                        .setVirtualCores(4)\n+                        .setMemoryMb(1024)\n+                        .setJavaOpts(\"\")\n+                        .setTaskModule(\"x3.y3\")\n+                        .build()\n+                )\n+                .addInEdgeId(\"e1\")\n+                .addInEdgeId(\"e2\")\n+                .setVertexManagerPlugin(TezEntityDescriptorProto.newBuilder()\n+                    .setClassName(InvocationCountingVertexManager.class.getName()))\n+                .build()\n+        )\n+        .addEdge(\n+            EdgePlan.newBuilder()\n+                .setEdgeDestination(TezEntityDescriptorProto.newBuilder().setClassName(\"v1_v2\"))\n+                .setInputVertexName(\"vertex1\")\n+                .setEdgeSource(TezEntityDescriptorProto.newBuilder().setClassName(\"o2\"))\n+                .setOutputVertexName(\"vertex3\")\n+                .setDataMovementType(PlanEdgeDataMovementType.BROADCAST)\n+                .setId(\"e1\")\n+                .setDataSourceType(PlanEdgeDataSourceType.PERSISTED)\n+                .setSchedulingType(PlanEdgeSchedulingType.SEQUENTIAL)\n+                .build()\n+        )\n+        .addEdge(\n+            EdgePlan.newBuilder()\n+                .setEdgeDestination(TezEntityDescriptorProto.newBuilder().setClassName(\"v1_v3\"))\n+                .setInputVertexName(\"vertex2\")\n+                .setEdgeSource(TezEntityDescriptorProto.newBuilder().setClassName(\"o2\"))\n+                .setOutputVertexName(\"vertex3\")\n+                .setDataMovementType(PlanEdgeDataMovementType.BROADCAST)\n+                .setId(\"e2\")\n+                .setDataSourceType(PlanEdgeDataSourceType.PERSISTED)\n+                .setSchedulingType(PlanEdgeSchedulingType.SEQUENTIAL)\n+                .build()\n+        )\n+        .build();\n+    return dag;\n+  }\n+\n   /**\n    * v1 -> v2\n    */\n@@ -5815,6 +5902,63 @@ VertexManagerEvent getVertexManagerEvent(long[] sizes, long totalSize, String ve\n     return vmEvent;\n   }\n \n+  @Test(timeout = 5000)\n+  public void testVMEventBeforeVertexInitialized() throws Exception {\n+    useCustomInitializer = true;\n+    setupPreDagCreation();\n+    dagPlan = createDAGPlanWithCountingVM();\n+    setupPostDagCreation();\n+\n+    VertexImpl v1 = vertices.get(\"vertex1\");\n+    VertexImpl v2 = vertices.get(\"vertex2\");\n+    VertexImpl v3 = vertices.get(\"vertex3\");\n+    dispatcher.getEventHandler().handle(new VertexEvent(v1.getVertexId(),\n+        VertexEventType.V_INIT));\n+    dispatcher.await();\n+    assertEquals(VertexState.INITED, v1.getState());\n+    dispatcher.getEventHandler().handle(new VertexEvent(v1.getVertexId(), VertexEventType.V_START));\n+    dispatcher.await();\n+    assertEquals(VertexState.RUNNING, v1.getState());\n+\n+    assertEquals(VertexState.NEW, v3.getState());\n+    // Generate a VM event for v1, targeted at v3\n+    VertexManagerEvent vmEvent = VertexManagerEvent.create(\"vertex3\", ByteBuffer.wrap(new byte[0]));\n+    TezEvent tezVmEvent = new TezEvent(vmEvent,\n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex1\", null,\n+            TezTaskAttemptID.getInstance(\n+                TezTaskID.getInstance(v1.getVertexId(), 1), 1)));\n+    dispatcher.getEventHandler()\n+        .handle(new VertexEventRouteEvent(v1.getVertexId(), Collections.singletonList(tezVmEvent)));\n+    dispatcher.await();\n+\n+    assertEquals(1, v3.pendingVmEvents.size());\n+    assertEquals(0, InvocationCountingVertexManager.numVmEventsReceived.get());\n+\n+    // Initialize v2, which will trigger initialization of v3\n+    dispatcher.getEventHandler().handle(new VertexEvent(v2.getVertexId(),\n+        VertexEventType.V_INIT));\n+    dispatcher.await();\n+\n+    assertEquals(VertexState.INITED, v3.getState());\n+\n+    // The VM event should have been processed.\n+    assertEquals(0, v3.pendingVmEvents.size());\n+    assertEquals(1, InvocationCountingVertexManager.numVmEventsReceived.get());\n+\n+    // Send another VM event - make sure it's processed without additional events.\n+    vmEvent = VertexManagerEvent.create(\"vertex3\", ByteBuffer.wrap(new byte[0]));\n+    tezVmEvent = new TezEvent(vmEvent,\n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex1\", null,\n+            TezTaskAttemptID.getInstance(\n+                TezTaskID.getInstance(v1.getVertexId(), 1), 2)));\n+    dispatcher.getEventHandler()\n+        .handle(new VertexEventRouteEvent(v1.getVertexId(), Collections.singletonList(tezVmEvent)));\n+    dispatcher.await();\n+\n+    assertEquals(0, v3.pendingVmEvents.size());\n+    assertEquals(2, InvocationCountingVertexManager.numVmEventsReceived.get());\n+  }\n+\n   @Test(timeout = 5000)\n   public void testExceptionFromVM_Initialize() throws TezException {\n     useCustomInitializer = true;\n@@ -6316,6 +6460,32 @@ public void handleInputInitializerEvent(List<InputInitializerEvent> events) thro\n     }\n   }\n \n+  public static class InvocationCountingVertexManager extends VertexManagerPlugin {\n+\n+    static final AtomicInteger numVmEventsReceived = new AtomicInteger(0);\n+    static final AtomicInteger numInitializedInputs = new AtomicInteger(0);\n+\n+    public InvocationCountingVertexManager(VertexManagerPluginContext context) {\n+      super(context);\n+    }\n+\n+    @Override\n+    public void initialize() throws Exception {\n+\n+    }\n+\n+    @Override\n+    public void onVertexManagerEventReceived(VertexManagerEvent vmEvent) throws Exception {\n+      numVmEventsReceived.incrementAndGet();\n+    }\n+\n+    @Override\n+    public void onRootVertexInitialized(String inputName, InputDescriptor inputDescriptor,\n+                                        List<Event> events) throws Exception {\n+      numInitializedInputs.incrementAndGet();\n+    }\n+  }\n+\n   @InterfaceAudience.Private\n   public static class VertexManagerWithException extends RootInputVertexManager{\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/3d795d62c0d471ff866adb9002e8c6fe6ea9536a",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/7cf416ae8cb19757e42530d42a7ccc3532d2f927",
        "message": "TEZ-2443. TaskRunner2 should call abort, NPEs while cleaning up tasks. (sseth)",
        "bug_id": "tez_28",
        "file": [
            {
                "sha": "ed72d6befbb86a796bdefd7fabdf49e40d2eaa11",
                "filename": "TEZ-2003-CHANGES.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tez/blob/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/TEZ-2003-CHANGES.txt",
                "raw_url": "https://github.com/apache/tez/raw/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/TEZ-2003-CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/TEZ-2003-CHANGES.txt?ref=3d795d62c0d471ff866adb9002e8c6fe6ea9536a",
                "patch": "@@ -25,5 +25,6 @@ ALL CHANGES:\n   TEZ-2433. Fixes after rebase 05/08\n   TEZ-2438. tez-tools version in the branch is incorrect.\n   TEZ-2434. Allow tasks to be killed in the Runtime.\n+  TEZ-2443. TaskRunner2 should call abort, NPEs while cleaning up tasks.\n \n INCOMPATIBLE CHANGES:"
            },
            {
                "sha": "2651013cd9008b0ac18f311c43f3ed8cd81a6bbb",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/api/TaskCommunicator.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/tez/blob/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-dag/src/main/java/org/apache/tez/dag/api/TaskCommunicator.java",
                "raw_url": "https://github.com/apache/tez/raw/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-dag/src/main/java/org/apache/tez/dag/api/TaskCommunicator.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/api/TaskCommunicator.java?ref=3d795d62c0d471ff866adb9002e8c6fe6ea9536a",
                "patch": "@@ -48,6 +48,10 @@ public abstract void registerRunningTaskAttempt(ContainerId containerId, TaskSpe\n   // TODO TEZ-2003. Are additional APIs required to mark a container as completed ? - for completeness.\n \n   // TODO TEZ-2003 Remove reference to TaskAttemptID\n+  // TODO TEZ-2003 This needs some information about why the attempt is being unregistered.\n+  // e.g. preempted in which case the task may need to be informed. Alternately as a result of\n+  // a failed task.\n+  // In case of preemption - a killTask API is likely a better bet than trying to overload this method.\n   public abstract void unregisterRunningTaskAttempt(TezTaskAttemptID taskAttemptID);\n \n   // TODO TEZ-2003 This doesn't necessarily belong here. A server may not start within the AM."
            },
            {
                "sha": "de08e56ac4329f930d855fdc2d88e59ff0f40cec",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/tez/blob/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java",
                "raw_url": "https://github.com/apache/tez/raw/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/runtime/LogicalIOProcessorRuntimeTask.java?ref=3d795d62c0d471ff866adb9002e8c6fe6ea9536a",
                "patch": "@@ -704,7 +704,7 @@ public synchronized void handleEvents(Collection<TezEvent> events) {\n   }\n \n   @Override\n-  public synchronized void abortTask() throws Exception {\n+  public synchronized void abortTask() {\n     if (processor != null) {\n       processor.abort();\n     }\n@@ -803,6 +803,7 @@ public void cleanup() throws InterruptedException {\n       LOG.debug(\"Num of inputs to be closed={}\", initializedInputs.size());\n       LOG.debug(\"Num of outputs to be closed={}\", initializedOutputs.size());\n     }\n+\n     // Close processor\n     if (!processorClosed && processor != null) {\n       try {\n@@ -820,8 +821,8 @@ public void cleanup() throws InterruptedException {\n         Thread.currentThread().interrupt();\n       } catch (Throwable e) {\n         LOG.warn(\n-            \"Ignoring Exception when closing processor(cleanup). Exception class={}, message={}\",\n-                e.getClass().getName(), e.getMessage());\n+            \"Ignoring Exception when closing processor(cleanup). Exception class={}, message={}\" +\n+                e.getClass().getName(), e.getMessage(), e);\n       }\n     }\n \n@@ -842,7 +843,7 @@ public void cleanup() throws InterruptedException {\n       } catch (Throwable e) {\n         LOG.warn(\n             \"Ignoring exception when closing input {}(cleanup). Exception class={}, message={}\",\n-            srcVertexName, e.getClass().getName(), e.getMessage());\n+            srcVertexName, e.getClass().getName(), e.getMessage(), e);\n       } finally {\n         LOG.info(\"Close input for vertex={}, sourceVertex={}, interruptedStatus={}\", processor\n             .getContext().getTaskVertexName(), srcVertexName, Thread.currentThread().isInterrupted());\n@@ -866,7 +867,7 @@ public void cleanup() throws InterruptedException {\n       } catch (Throwable e) {\n         LOG.warn(\n             \"Ignoring exception when closing output {}(cleanup). Exception class={}, message={}\",\n-            destVertexName, e.getClass().getName(), e.getMessage());\n+            destVertexName, e.getClass().getName(), e.getMessage(), e);\n       } finally {\n         LOG.info(\"Close input for vertex={}, sourceVertex={}, interruptedStatus={}\", processor\n             .getContext().getTaskVertexName(), destVertexName, Thread.currentThread().isInterrupted());"
            },
            {
                "sha": "33c0113f1537ce81579d920b000bf70931da8f0a",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/runtime/RuntimeTask.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/RuntimeTask.java",
                "raw_url": "https://github.com/apache/tez/raw/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/RuntimeTask.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/runtime/RuntimeTask.java?ref=3d795d62c0d471ff866adb9002e8c6fe6ea9536a",
                "patch": "@@ -167,5 +167,5 @@ protected void setTaskDone() {\n     taskDone.set(true);\n   }\n \n-  public abstract void abortTask() throws Exception;\n+  public abstract void abortTask();\n }"
            },
            {
                "sha": "ab77635203f03cc3843a03a4a2304e3318389519",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskRunner2Callable.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/tez/blob/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskRunner2Callable.java",
                "raw_url": "https://github.com/apache/tez/raw/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskRunner2Callable.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TaskRunner2Callable.java?ref=3d795d62c0d471ff866adb9002e8c6fe6ea9536a",
                "patch": "@@ -63,26 +63,26 @@ public TaskRunner2CallableResult run() throws Exception {\n           if (stopRequested.get() || Thread.currentThread().isInterrupted()) {\n             return new TaskRunner2CallableResult(null);\n           }\n-          LOG.info(\"Initializing task\" + \", taskAttemptId=\" + task.getTaskAttemptID());\n+          LOG.info(\"Initializing task\" + \", taskAttemptId={}\", task.getTaskAttemptID());\n           task.initialize();\n \n           if (!stopRequested.get() && !Thread.currentThread().isInterrupted()) {\n-            LOG.info(\"Running task, taskAttemptId=\" + task.getTaskAttemptID());\n+            LOG.info(\"Running task, taskAttemptId={}\", task.getTaskAttemptID());\n             task.run();\n           } else {\n-            LOG.info(\"Stopped before running the processor.\");\n+            LOG.info(\"Stopped before running the processor taskAttemptId={}\", task.getTaskAttemptID());\n             return new TaskRunner2CallableResult(null);\n           }\n \n           if (!stopRequested.get() && !Thread.currentThread().isInterrupted()) {\n-            LOG.info(\"Closing task, taskAttemptId=\" + task.getTaskAttemptID());\n+            LOG.info(\"Closing task, taskAttemptId={}\", task.getTaskAttemptID());\n             task.close();\n             task.setFrameworkCounters();\n           } else {\n-            LOG.info(\"Stopped before closing the processor\");\n+            LOG.info(\"Stopped before closing the processor, taskAttemptId={}\", task.getTaskAttemptID());\n             return new TaskRunner2CallableResult(null);\n           }\n-          LOG.info(\"Task completed, taskAttemptId=\" + task.getTaskAttemptID() + \", askedToStop=\" + stopRequested.get());\n+          LOG.info(\"Task completed, taskAttemptId={}, askedToStop={}\", task.getTaskAttemptID(), stopRequested.get());\n \n \n           return new TaskRunner2CallableResult(null);\n@@ -115,6 +115,7 @@ private void maybeFixInterruptStatus() {\n   public void interruptTask() {\n     // Ensure the task is only interrupted once.\n     if (!stopRequested.getAndSet(true)) {\n+      task.abortTask();\n       if (ownThread != null) {\n         ownThread.interrupt();\n       }"
            },
            {
                "sha": "ffbc6e890801cffdeacc29b792ef9121e44d2831",
                "filename": "tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TezTaskRunner2.java",
                "status": "modified",
                "additions": 6,
                "deletions": 4,
                "changes": 10,
                "blob_url": "https://github.com/apache/tez/blob/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TezTaskRunner2.java",
                "raw_url": "https://github.com/apache/tez/raw/3d795d62c0d471ff866adb9002e8c6fe6ea9536a/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TezTaskRunner2.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-internals/src/main/java/org/apache/tez/runtime/task/TezTaskRunner2.java?ref=3d795d62c0d471ff866adb9002e8c6fe6ea9536a",
                "patch": "@@ -250,10 +250,12 @@ public TaskRunner2Result run() {\n   public void killTask() {\n     synchronized (this) {\n       if (isRunningState()) {\n-        trySettingEndReason(EndReason.KILL_REQUESTED);\n-        if (taskRunnerCallable != null) {\n-          taskKillStartTime = System.currentTimeMillis();\n-          taskRunnerCallable.interruptTask();\n+        if (trySettingEndReason(EndReason.KILL_REQUESTED)) {\n+          killTaskRequested.set(true);\n+          if (taskRunnerCallable != null) {\n+            taskKillStartTime = System.currentTimeMillis();\n+            taskRunnerCallable.interruptTask();\n+          }\n         }\n       }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/727431fe7b0051bcd1b2f3856fa95ef4192daa43",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
        "message": "TEZ-616. OrderedWordCount with -generateSplitsInClient true throws NPE. (hitesh)",
        "bug_id": "tez_29",
        "file": [
            {
                "sha": "190678f839815b1e93ccc0c3da65811cf84f1ecc",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/tez/blob/727431fe7b0051bcd1b2f3856fa95ef4192daa43/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "raw_url": "https://github.com/apache/tez/raw/727431fe7b0051bcd1b2f3856fa95ef4192daa43/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java?ref=727431fe7b0051bcd1b2f3856fa95ef4192daa43",
                "patch": "@@ -20,12 +20,14 @@\n \n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.EnumSet;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.StringTokenizer;\n+import java.util.TreeMap;\n \n import org.apache.commons.cli.ParseException;\n import org.apache.commons.logging.Log;\n@@ -383,8 +385,11 @@ public static void main(String[] args) throws Exception {\n             + \", inputPath=\" + inputPath\n             + \", outputPath=\" + outputPath);\n \n-        DAG dag = createDAG(fs, conf, null, stagingDir,\n-            dagIndex, inputPath, outputPath, generateSplitsInClient);\n+        Map<String, LocalResource> localResources =\n+          Collections.emptyMap();\n+        DAG dag = createDAG(fs, conf, localResources,\n+            stagingDir, dagIndex, inputPath, outputPath,\n+            generateSplitsInClient);\n \n         if (useTezSession) {\n           LOG.info(\"Waiting for TezSession to get into ready state\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/2debbca5921daa8fd4a9080e8390c0c086914d62",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/968e31f96e41ce4c4e7717c6264e70e627f99837",
        "message": "Addendum TEZ-510. Test MRRJobs failing with NPE (bikas)",
        "bug_id": "tez_30",
        "file": [
            {
                "sha": "99dbb872f633b1545ebc2af2d52931d1c19bcc15",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 6,
                "changes": 11,
                "blob_url": "https://github.com/apache/tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -250,19 +250,15 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n-              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n-              SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n           .addTransition(\n               VertexState.TERMINATING,\n               VertexState.ERROR, VertexEventType.V_INTERNAL_ERROR,\n               INTERNAL_ERROR_TRANSITION)\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n+                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -301,6 +297,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -311,6 +308,8 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n+                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,"
            },
            {
                "sha": "6c97430a889c5aab5beb9570b2b8fc6e833348ea",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -98,13 +98,14 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n-    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    if (fileName == null) {\n-      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    } else {\n-      srcFile.set(fileName);\n+    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    if (updatedConf != null) {\n+      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+      if (fileName != null) {\n+        LOG.info(\"Processing file: \" + fileName);\n+        srcFile.set(fileName);\n+      }\n     }\n \n     KVReader kvReader = mrInput.getReader();"
            },
            {
                "sha": "ed675a44ae397a5f552fd485391746410fc3b16d",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/tez/blob/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/tez/raw/2debbca5921daa8fd4a9080e8390c0c086914d62/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=2debbca5921daa8fd4a9080e8390c0c086914d62",
                "patch": "@@ -209,7 +209,10 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return new Configuration(incrementalConf);\n+    if (incrementalConf != null) {\n+      return new Configuration(incrementalConf);\n+    }\n+    return null;\n   }\n \n   public float getProgress() throws IOException, InterruptedException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/1795ea84fc899f5e522680119b1853f559030a14",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/38350663c4f367efb46f7cb488cd85607d1dfc24",
        "message": "TEZ-510. Test MRRJobs failing with NPE (bikas)",
        "bug_id": "tez_31",
        "file": [
            {
                "sha": "597acb2aa2545374a181e0df604e9aad1bea06bd",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -250,9 +250,6 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n-          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n-              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n-              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n               SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n@@ -263,6 +260,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -301,6 +299,7 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -311,6 +310,8 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n+                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n+                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,"
            },
            {
                "sha": "6c97430a889c5aab5beb9570b2b8fc6e833348ea",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -98,13 +98,14 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n-    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    if (fileName == null) {\n-      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    } else {\n-      srcFile.set(fileName);\n+    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    if (updatedConf != null) {\n+      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+      if (fileName != null) {\n+        LOG.info(\"Processing file: \" + fileName);\n+        srcFile.set(fileName);\n+      }\n     }\n \n     KVReader kvReader = mrInput.getReader();"
            },
            {
                "sha": "f0aea339ed7f7fe629d2adc4a6c9e08d72d94969",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/tez/raw/1795ea84fc899f5e522680119b1853f559030a14/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=1795ea84fc899f5e522680119b1853f559030a14",
                "patch": "@@ -209,7 +209,7 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return new Configuration(incrementalConf);\n+    return incrementalConf;\n   }\n \n   public float getProgress() throws IOException, InterruptedException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/c6177fbeeee89ddba1d447d0388b0003613b6101",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/31c37843ce47f95c818db56123a6fe20b2d35e48",
        "message": "TEZ-185. NPE in MRCombiner when updating progress. (hitesh)",
        "bug_id": "tez_32",
        "file": [
            {
                "sha": "dc7c53def951a08ae810afbe019067b5d73f93ea",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/c6177fbeeee89ddba1d447d0388b0003613b6101/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java",
                "raw_url": "https://github.com/apache/tez/raw/c6177fbeeee89ddba1d447d0388b0003613b6101/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/combine/MRCombiner.java?ref=c6177fbeeee89ddba1d447d0388b0003613b6101",
                "patch": "@@ -195,7 +195,8 @@ protected VALUE moveToNext() {\n     }\n \n     public void informReduceProgress() {\n-      combinePhase.set(super.in.getProgress().getProgress()); // update progress\n+      // FIXME implement correct progress updates for combiner TEZ-184\n+      // combinePhase.set(super.in.getProgress().getProgress()); // update progress\n       reporter.progress();\n     }\n   }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/171d4850443a9e67aa5a68d4c8482779c0caa8eb",
        "message": "TEZ-2782. VertexInfo.getAvgExecutionTimeInterval throws NPE when task does not have any valid attempts info (rbalamohan, bikas)",
        "bug_id": "tez_33",
        "file": [
            {
                "sha": "acbefea3b2e90309355e3812615baebbd6718ca6",
                "filename": "tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/TaskAttemptInfo.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/tez/blob/7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/TaskAttemptInfo.java",
                "raw_url": "https://github.com/apache/tez/raw/7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/TaskAttemptInfo.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/TaskAttemptInfo.java?ref=7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.tez.common.counters.DAGCounter;\n import org.apache.tez.common.counters.TaskCounter;\n import org.apache.tez.common.counters.TezCounter;\n+import org.apache.tez.dag.api.oldrecords.TaskAttemptState;\n import org.apache.tez.history.parser.utils.Utils;\n import org.codehaus.jettison.json.JSONException;\n import org.codehaus.jettison.json.JSONObject;\n@@ -45,6 +46,8 @@\n @Evolving\n public class TaskAttemptInfo extends BaseInfo {\n \n+  private static final String SUCCEEDED = StringInterner.weakIntern(TaskAttemptState.SUCCEEDED.name());\n+\n   private final String taskAttemptId;\n   private final long startTime;\n   private final long endTime;\n@@ -148,6 +151,10 @@ public final long getFinishTimeInterval() {\n     return endTime - (getTaskInfo().getVertexInfo().getDagInfo().getStartTime());\n   }\n   \n+  public final boolean isSucceeded() {\n+    return status.equals(SUCCEEDED);\n+  }\n+  \n   public final List<DataDependencyEvent> getLastDataEvents() {\n     return lastDataEvents;\n   }"
            },
            {
                "sha": "94547d4eec383e29ab6816e69c411fa43634bc42",
                "filename": "tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/VertexInfo.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/VertexInfo.java",
                "raw_url": "https://github.com/apache/tez/raw/7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/VertexInfo.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-plugins/tez-history-parser/src/main/java/org/apache/tez/history/parser/datamodel/VertexInfo.java?ref=7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12",
                "patch": "@@ -201,8 +201,10 @@ public final long getAvgExecutionTimeInterval() {\n       long totalAttempts = 0;\n       for (TaskInfo task : getTasks()) {\n         TaskAttemptInfo attempt = task.getSuccessfulTaskAttempt();\n-        totalExecutionTime += attempt.getExecutionTimeInterval();\n-        totalAttempts++;\n+        if (attempt != null) {\n+          totalExecutionTime += attempt.getExecutionTimeInterval();\n+          totalAttempts++;\n+        }\n       }\n       if (totalAttempts > 0) {\n         avgExecutionTimeInterval = Math.round(totalExecutionTime*1.0/totalAttempts);"
            },
            {
                "sha": "61b16761ba25e1a992bc7049ebe88877e003353a",
                "filename": "tez-tools/analyzers/job-analyzer/src/main/java/org/apache/tez/analyzer/utils/SVGUtils.java",
                "status": "modified",
                "additions": 12,
                "deletions": 10,
                "changes": 22,
                "blob_url": "https://github.com/apache/tez/blob/7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12/tez-tools/analyzers/job-analyzer/src/main/java/org/apache/tez/analyzer/utils/SVGUtils.java",
                "raw_url": "https://github.com/apache/tez/raw/7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12/tez-tools/analyzers/job-analyzer/src/main/java/org/apache/tez/analyzer/utils/SVGUtils.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-tools/analyzers/job-analyzer/src/main/java/org/apache/tez/analyzer/utils/SVGUtils.java?ref=7a4ed2a6a6939713e0587b811d2ecc5ef8bf0c12",
                "patch": "@@ -104,8 +104,9 @@ private void addRectStr(int x, int width, int y, int height,\n     svgLines.add(rectStr);    \n   }\n   \n-  private void addTextStr(int x, int y, String text, String anchor, int size, String title) {\n-    String textStyle = \"text-anchor: \" + anchor + \"; font-size: \" + size + \"px;\";\n+  private void addTextStr(int x, int y, String text, String anchor, int size, String title, boolean italic) {\n+    String textStyle = \"text-anchor: \" + anchor + \"; font-style: \" + (italic?\"italic\":\"normal\") +\n+        \"; font-size: \" + size + \"px;\";\n     String textStr = \"<text x=\\\"\" + addOffsetX(scaleDown(x)) + \"\\\" \"\n         + \"y=\\\"\" + addOffsetY(y) + \"\\\" \"\n         + \"style=\\\"\" + textStyle + \"\\\" transform=\\\"\\\">\"\n@@ -155,7 +156,7 @@ public void drawStep(CriticalPathStep step, long dagStartTime, int yOffset) {\n       addTextStr((stopTimeInterval + startTimeInterval) / 2,\n           (yOffset * STEP_GAP + STEP_GAP / 2),\n           text, \"middle\",\n-          TEXT_SIZE, titleStr);\n+          TEXT_SIZE, titleStr, false);\n     } else {\n       TaskAttemptInfo attempt = step.getAttempt();\n       int startCriticalTimeInterval = (int) (step.getStartCriticalTime() - dagStartTime);\n@@ -195,7 +196,8 @@ public void drawStep(CriticalPathStep step, long dagStartTime, int yOffset) {\n           STEP_GAP, RUNTIME_COLOR, BORDER_COLOR, RECT_OPACITY, titleStr);\n \n       addTextStr((finishTimeInterval + creationTimeInterval) / 2,\n-          (yOffset * STEP_GAP + STEP_GAP / 2),   attempt.getShortName(), \"middle\", TEXT_SIZE, titleStr);\n+          (yOffset * STEP_GAP + STEP_GAP / 2),   attempt.getShortName(), \"middle\", TEXT_SIZE, \n+          titleStr, !attempt.isSucceeded());\n     }\n   }\n \n@@ -212,12 +214,12 @@ private void drawCritical(DagInfo dagInfo, List<CriticalPathStep> criticalPath)\n     for (int i=0; i<11; ++i) {\n       int x = Math.round(((dagFinishTimeInterval - dagStartTimeInterval)/10.0f)*i);\n       addLineStr(x, 0, x, yGrid, BORDER_COLOR, \"\", TICK);  \n-      addTextStr(x, 0, getTimeStr(x), \"left\", TEXT_SIZE, \"\");\n+      addTextStr(x, 0, getTimeStr(x), \"left\", TEXT_SIZE, \"\", false);\n     }\n     addLineStr(dagStartTimeInterval, yGrid, dagFinishTimeInterval, yGrid, BORDER_COLOR, \"\", TICK);\n     addTextStr((dagFinishTimeInterval + dagStartTimeInterval) / 2, yGrid + STEP_GAP,\n         \"Critical Path for \" + dagInfo.getName() + \" (\" + dagInfo.getDagId() + \")\", \"middle\",\n-        TEXT_SIZE, \"\");\n+        TEXT_SIZE, \"\", false);\n \n     // draw steps\n     for (int i=1; i<=criticalPath.size(); ++i) {\n@@ -255,16 +257,16 @@ private void drawCritical(DagInfo dagInfo, List<CriticalPathStep> criticalPath)\n     int legendWidth = dagFinishTimeInterval/5;\n     \n     addRectStr(legendX, legendWidth, legendY, STEP_GAP/2, VERTEX_INIT_COMMIT_COLOR, BORDER_COLOR, RECT_OPACITY, \"\");\n-    addTextStr(legendX, legendY + STEP_GAP/3, \"Vertex Init/Commit Overhead\", \"left\", TEXT_SIZE, \"\");\n+    addTextStr(legendX, legendY + STEP_GAP/3, \"Vertex Init/Commit Overhead\", \"left\", TEXT_SIZE, \"\", false);\n     legendY += STEP_GAP/2;\n     addRectStr(legendX, legendWidth, legendY, STEP_GAP/2, ALLOCATION_OVERHEAD_COLOR, BORDER_COLOR, RECT_OPACITY, \"\");\n-    addTextStr(legendX, legendY + STEP_GAP/3, \"Task Allocation Overhead\", \"left\", TEXT_SIZE, \"\");\n+    addTextStr(legendX, legendY + STEP_GAP/3, \"Task Allocation Overhead\", \"left\", TEXT_SIZE, \"\", false);\n     legendY += STEP_GAP/2;\n     addRectStr(legendX, legendWidth, legendY, STEP_GAP/2, LAUNCH_OVERHEAD_COLOR, BORDER_COLOR, RECT_OPACITY, \"\");\n-    addTextStr(legendX, legendY + STEP_GAP/3, \"Task Launch Overhead\", \"left\", TEXT_SIZE, \"\");\n+    addTextStr(legendX, legendY + STEP_GAP/3, \"Task Launch Overhead\", \"left\", TEXT_SIZE, \"\", false);\n     legendY += STEP_GAP/2;\n     addRectStr(legendX, legendWidth, legendY, STEP_GAP/2, RUNTIME_COLOR, BORDER_COLOR, RECT_OPACITY, \"\");\n-    addTextStr(legendX, legendY + STEP_GAP/3, \"Task Execution Time\", \"left\", TEXT_SIZE, \"\");\n+    addTextStr(legendX, legendY + STEP_GAP/3, \"Task Execution Time\", \"left\", TEXT_SIZE, \"\", false);\n     \n     Y_MAX += Y_BASE*2;\n     X_MAX += X_BASE*2;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/3d0edf44e001e74ad50301e700ecdc807af8221e",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/2118e96446bd3ca8858c831a5cf7ebc07d683007",
        "message": "TEZ-928. NPE in last app attempt caused by registering for an RM unregister. (hitesh)",
        "bug_id": "tez_34",
        "file": [
            {
                "sha": "66ef81996034f4f6925964d43cdcc55bf944c986",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java",
                "status": "modified",
                "additions": 12,
                "deletions": 1,
                "changes": 13,
                "blob_url": "https://github.com/apache/tez/blob/3d0edf44e001e74ad50301e700ecdc807af8221e/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java",
                "raw_url": "https://github.com/apache/tez/raw/3d0edf44e001e74ad50301e700ecdc807af8221e/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskSchedulerEventHandler.java?ref=3d0edf44e001e74ad50301e700ecdc807af8221e",
                "patch": "@@ -24,6 +24,7 @@\n import java.util.Map;\n import java.util.concurrent.BlockingQueue;\n import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -81,6 +82,8 @@\n   final DAGClientServer clientService;\n   private final ContainerSignatureMatcher containerSignatureMatcher;\n   private int cachedNodeCount = -1;\n+  private AtomicBoolean shouldUnregisterFlag =\n+      new AtomicBoolean(false);\n \n   BlockingQueue<AMSchedulerEvent> eventQueue\n                               = new LinkedBlockingQueue<AMSchedulerEvent>();\n@@ -353,6 +356,11 @@ public synchronized void serviceStart() {\n         serviceAddr.getPort(), \"\", appContext);\n     taskScheduler.init(getConfig());\n     taskScheduler.start();\n+    if (shouldUnregisterFlag.get()) {\n+      // Flag may have been set earlier when task scheduler was not initialized\n+      taskScheduler.setShouldUnregister();\n+    }\n+\n     this.eventHandlingThread = new Thread(\"TaskSchedulerEventHandlerThread\") {\n       @Override\n       public void run() {\n@@ -552,8 +560,11 @@ public void preemptContainer(ContainerId containerId) {\n   }\n \n   public void setShouldUnregisterFlag() {\n-    this.taskScheduler.setShouldUnregister();\n     LOG.info(\"TaskScheduler notified that it should unregister from RM\");\n+    this.shouldUnregisterFlag.set(true);\n+    if (this.taskScheduler != null) {\n+      this.taskScheduler.setShouldUnregister();\n+    }\n   }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/0320cd7acef31d2518fe09f0d8ede4eca259537f",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/6480f1bda362419e6e975072d2e557231911c94a",
        "message": "TEZ-807. Build broken due to NPE (Patch by Gunther Hagleitner, reviewed by Siddharth Seth)",
        "bug_id": "tez_35",
        "file": [
            {
                "sha": "82cb0c7dd4c905a568cfa7191a395d805211c9c7",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "additions": 0,
                "deletions": 6,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -477,18 +477,12 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n     if(dag != null) {\n \n       for (Vertex v : dag.getVertices()) {\n-        if (v.getTaskLocalResources() == null) {\n-          v.setTaskLocalResources(new TreeMap<String, LocalResource>());\n-        }\n         if (tezJarResources != null) {\n           v.getTaskLocalResources().putAll(tezJarResources);\n         }\n         v.getTaskLocalResources().put(TezConfiguration.TEZ_PB_BINARY_CONF_NAME,\n             binaryConfLRsrc);\n \n-        if (v.getTaskEnvironment() == null) {\n-          v.setTaskEnvironment(new TreeMap<String, String>());\n-        }\n         Map<String, String> taskEnv = v.getTaskEnvironment();\n         for (Map.Entry<String, String> entry : environment.entrySet()) {\n           String key = entry.getKey();"
            },
            {
                "sha": "8f3101e2e31c5a523a6163e577b52f5afefc8a60",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezSession.java",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/apache/tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezSession.java",
                "raw_url": "https://github.com/apache/tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/client/TezSession.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/client/TezSession.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -153,10 +153,6 @@ public synchronized DAGClient submitDAG(DAG dag)\n         .getFrameworkClasspath(sessionConfig.getYarnConfiguration());\n     for (Vertex v : dag.getVertices()) {\n       Map<String, String> taskEnv = v.getTaskEnvironment();\n-      if (taskEnv == null) {\n-        taskEnv = Maps.newHashMap();\n-        v.setTaskEnvironment(taskEnv);\n-      }\n       Apps.addToEnvironment(taskEnv,\n           ApplicationConstants.Environment.CLASSPATH.name(),\n           classpath);"
            },
            {
                "sha": "6433dc8410cfac816ddb0c60c64e1b188d1eb1c9",
                "filename": "tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "status": "modified",
                "additions": 25,
                "deletions": 29,
                "changes": 54,
                "blob_url": "https://github.com/apache/tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "raw_url": "https://github.com/apache/tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -506,39 +506,35 @@ public DAGPlan createDag(Configuration dagConf) {\n \n       taskConfigBuilder.setTaskModule(vertex.getVertexName());\n       PlanLocalResource.Builder localResourcesBuilder = PlanLocalResource.newBuilder();\n-      if (vertex.getTaskLocalResources() != null) {\n-        localResourcesBuilder.clear();\n-        for (Entry<String, LocalResource> entry :\n-          vertex.getTaskLocalResources().entrySet()) {\n-          String key = entry.getKey();\n-          LocalResource lr = entry.getValue();\n-          localResourcesBuilder.setName(key);\n-          localResourcesBuilder.setUri(\n-            DagTypeConverters.convertToDAGPlan(lr.getResource()));\n-          localResourcesBuilder.setSize(lr.getSize());\n-          localResourcesBuilder.setTimeStamp(lr.getTimestamp());\n-          localResourcesBuilder.setType(\n-            DagTypeConverters.convertToDAGPlan(lr.getType()));\n-          localResourcesBuilder.setVisibility(\n-            DagTypeConverters.convertToDAGPlan(lr.getVisibility()));\n-          if (lr.getType() == LocalResourceType.PATTERN) {\n-            if (lr.getPattern() == null || lr.getPattern().isEmpty()) {\n-              throw new TezUncheckedException(\"LocalResource type set to pattern\"\n-                + \" but pattern is null or empty\");\n-            }\n-            localResourcesBuilder.setPattern(lr.getPattern());\n+      localResourcesBuilder.clear();\n+      for (Entry<String, LocalResource> entry :\n+             vertex.getTaskLocalResources().entrySet()) {\n+        String key = entry.getKey();\n+        LocalResource lr = entry.getValue();\n+        localResourcesBuilder.setName(key);\n+        localResourcesBuilder.setUri(\n+          DagTypeConverters.convertToDAGPlan(lr.getResource()));\n+        localResourcesBuilder.setSize(lr.getSize());\n+        localResourcesBuilder.setTimeStamp(lr.getTimestamp());\n+        localResourcesBuilder.setType(\n+          DagTypeConverters.convertToDAGPlan(lr.getType()));\n+        localResourcesBuilder.setVisibility(\n+          DagTypeConverters.convertToDAGPlan(lr.getVisibility()));\n+        if (lr.getType() == LocalResourceType.PATTERN) {\n+          if (lr.getPattern() == null || lr.getPattern().isEmpty()) {\n+            throw new TezUncheckedException(\"LocalResource type set to pattern\"\n+              + \" but pattern is null or empty\");\n           }\n-          taskConfigBuilder.addLocalResource(localResourcesBuilder);\n+          localResourcesBuilder.setPattern(lr.getPattern());\n         }\n+        taskConfigBuilder.addLocalResource(localResourcesBuilder);\n       }\n       \n-      if (vertex.getTaskEnvironment() != null) {\n-        for (String key : vertex.getTaskEnvironment().keySet()) {\n-          PlanKeyValuePair.Builder envSettingBuilder = PlanKeyValuePair.newBuilder();\n-          envSettingBuilder.setKey(key);\n-          envSettingBuilder.setValue(vertex.getTaskEnvironment().get(key));\n-          taskConfigBuilder.addEnvironmentSetting(envSettingBuilder);\n-        }\n+      for (String key : vertex.getTaskEnvironment().keySet()) {\n+        PlanKeyValuePair.Builder envSettingBuilder = PlanKeyValuePair.newBuilder();\n+        envSettingBuilder.setKey(key);\n+        envSettingBuilder.setValue(vertex.getTaskEnvironment().get(key));\n+        taskConfigBuilder.addEnvironmentSetting(envSettingBuilder);\n       }\n \n       if (vertex.getTaskLocationsHint() != null) {"
            },
            {
                "sha": "377f5514901f4df2577d15ca6b898b2aec802ac4",
                "filename": "tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java",
                "status": "modified",
                "additions": 14,
                "deletions": 4,
                "changes": 18,
                "blob_url": "https://github.com/apache/tez/blob/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java",
                "raw_url": "https://github.com/apache/tez/raw/0320cd7acef31d2518fe09f0d8ede4eca259537f/tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/dag/api/Vertex.java?ref=0320cd7acef31d2518fe09f0d8ede4eca259537f",
                "patch": "@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -42,8 +43,8 @@\n   private final int parallelism;\n   private VertexLocationHint taskLocationsHint;\n   private final Resource taskResource;\n-  private Map<String, LocalResource> taskLocalResources;\n-  private Map<String, String> taskEnvironment;\n+  private Map<String, LocalResource> taskLocalResources = new HashMap<String, LocalResource>();\n+  private Map<String, String> taskEnvironment = new HashMap<String, String>();\n   private final List<RootInputLeafOutput<InputDescriptor>> additionalInputs \n                       = new ArrayList<RootInputLeafOutput<InputDescriptor>>();\n   private final List<RootInputLeafOutput<OutputDescriptor>> additionalOutputs \n@@ -107,7 +108,11 @@ VertexLocationHint getTaskLocationsHint() {\n   }\n \n   public Vertex setTaskLocalResources(Map<String, LocalResource> localResources) {\n-    this.taskLocalResources = localResources;\n+    if (localResources == null) {\n+      this.taskLocalResources = new HashMap<String, LocalResource>();\n+    } else {\n+      this.taskLocalResources = localResources;\n+    }\n     return this;\n   }\n \n@@ -116,7 +121,12 @@ public Vertex setTaskLocalResources(Map<String, LocalResource> localResources) {\n   }\n \n   public Vertex setTaskEnvironment(Map<String, String> environment) {\n-    this.taskEnvironment = environment;\n+    if (environment == null) {\n+      this.taskEnvironment = new HashMap<String, String>();\n+    }\n+    else {\n+      this.taskEnvironment = environment;\n+    }\n     return this;\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/7b2a0e6f3427182e0c7d55f3da1c369500770ab0",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/6ccebe747217adcef05a7137eb8844c11e8ae18c",
        "message": "TEZ-616. Addendum patch for OrderedWordCount with -generateSplitsInClient true throws NPE. (hitesh)",
        "bug_id": "tez_36",
        "file": [
            {
                "sha": "c415f8ae49dc22cdc3371e1604e0c0d5e081362b",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tez/blob/7b2a0e6f3427182e0c7d55f3da1c369500770ab0/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/tez/raw/7b2a0e6f3427182e0c7d55f3da1c369500770ab0/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=7b2a0e6f3427182e0c7d55f3da1c369500770ab0",
                "patch": "@@ -373,7 +373,9 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n         if (v.getTaskLocalResources() == null) {\n           v.setTaskLocalResources(new TreeMap<String, LocalResource>());\n         }\n-        v.getTaskLocalResources().putAll(tezJarResources);\n+        if (tezJarResources != null) {\n+          v.getTaskLocalResources().putAll(tezJarResources);\n+        }\n         v.getTaskLocalResources().put(TezConfiguration.TEZ_PB_BINARY_CONF_NAME,\n             binaryConfLRsrc);\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/5ef639b1e97c3e8628c20ab826a399857fa6c276",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/40dfb77c9742561a2554c20343381114081575e4",
        "message": "TEZ-616. Addendum patch for OrderedWordCount with -generateSplitsInClient true throws NPE. (hitesh)",
        "bug_id": "tez_37",
        "file": [
            {
                "sha": "07a80d6cc5c128994ab7a6fb2a30d7a8bfd5936f",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/5ef639b1e97c3e8628c20ab826a399857fa6c276/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "raw_url": "https://github.com/apache/tez/raw/5ef639b1e97c3e8628c20ab826a399857fa6c276/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java?ref=5ef639b1e97c3e8628c20ab826a399857fa6c276",
                "patch": "@@ -386,7 +386,7 @@ public static void main(String[] args) throws Exception {\n             + \", outputPath=\" + outputPath);\n \n         Map<String, LocalResource> localResources =\n-          Collections.emptyMap();\n+          new TreeMap<String, LocalResource>();\n         DAG dag = createDAG(fs, conf, localResources,\n             stagingDir, dagIndex, inputPath, outputPath,\n             generateSplitsInClient);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/d4bb730eaa4b8b793b2c7f8b08e1faa50ed566e8",
        "message": "TEZ-615. OrderedWordCount with -DUSE_TEZ_SESSION=false throws NPE. (hitesh)",
        "bug_id": "tez_38",
        "file": [
            {
                "sha": "042ff91885e232ddf6a15a2ee127a020b0c46823",
                "filename": "tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/tez/blob/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "raw_url": "https://github.com/apache/tez/raw/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-api/src/main/java/org/apache/tez/client/TezClientUtils.java?ref=8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
                "patch": "@@ -364,9 +364,16 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n     if(dag != null) {\n \n       for (Vertex v : dag.getVertices()) {\n+        if (v.getTaskLocalResources() == null) {\n+          v.setTaskLocalResources(new TreeMap<String, LocalResource>());\n+        }\n         v.getTaskLocalResources().putAll(tezJarResources);\n         v.getTaskLocalResources().put(TezConfiguration.TEZ_PB_BINARY_CONF_NAME,\n             binaryConfLRsrc);\n+\n+        if (v.getTaskEnvironment() == null) {\n+          v.setTaskEnvironment(new TreeMap<String, String>());\n+        }\n         Map<String, String> taskEnv = v.getTaskEnvironment();\n         for (Map.Entry<String, String> entry : environment.entrySet()) {\n           String key = entry.getKey();\n@@ -399,9 +406,9 @@ static ApplicationSubmissionContext createApplicationSubmissionContext(\n       }\n \n       localResources.put(TezConfiguration.TEZ_PB_PLAN_BINARY_NAME,\n-          TezClientUtils.createLocalResource(fs,\n-              binaryPath, LocalResourceType.FILE,\n-              LocalResourceVisibility.APPLICATION));\n+        TezClientUtils.createLocalResource(fs,\n+          binaryPath, LocalResourceType.FILE,\n+          LocalResourceVisibility.APPLICATION));\n \n       if (Level.DEBUG.isGreaterOrEqual(Level.toLevel(amLogLevel))) {\n         Path textPath = localizeDagPlanAsText(dagPB, fs,"
            },
            {
                "sha": "6eedb15adab8267cc86ce5fd8cb42609a6ce8e0a",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "raw_url": "https://github.com/apache/tez/raw/8a3dcf4763ad1eaefd0b6d08685a3ade91977324/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/rm/TaskScheduler.java?ref=8a3dcf4763ad1eaefd0b6d08685a3ade91977324",
                "patch": "@@ -670,7 +670,7 @@ public void onContainersAllocated(List<Container> containers) {\n             boolean safeToRelease = true;\n             Priority topPendingPriority = amRmClient.getTopPriority();\n             Priority containerPriority = heldContainer.container.getPriority();\n-            if (topPendingPriority != null && \n+            if (isNew && topPendingPriority != null &&\n                 containerPriority.compareTo(topPendingPriority) < 0) {\n               // this container is of lower priority and given to us by the RM for\n               // a task that will be matched after the current top priority. Keep "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/968e31f96e41ce4c4e7717c6264e70e627f99837",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/1795ea84fc899f5e522680119b1853f559030a14",
        "message": "Revert \"TEZ-510. Test MRRJobs failing with NPE (bikas)\"\n\nThis reverts commit 1795ea84fc899f5e522680119b1853f559030a14.",
        "bug_id": "tez_39",
        "file": [
            {
                "sha": "67523284ecd9677245093934878a0ae22b114cae",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 4,
                "changes": 7,
                "blob_url": "https://github.com/apache/tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -250,6 +250,9 @@\n               EnumSet.of(VertexState.TERMINATING, VertexState.KILLED, VertexState.FAILED),\n               VertexEventType.V_TASK_COMPLETED,\n               new TaskCompletedTransition())\n+          .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n+              VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n+              TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION) // TODO shouldnt be done for KILL_WAIT vertex\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               VertexEventType.V_SOURCE_TASK_ATTEMPT_COMPLETED,\n               SOURCE_TASK_ATTEMPT_COMPLETED_EVENT_TRANSITION)\n@@ -260,7 +263,6 @@\n           // Ignore-able events\n           .addTransition(VertexState.TERMINATING, VertexState.TERMINATING,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n-                  VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n                   VertexEventType.V_TASK_RESCHEDULED))\n \n           // Transitions from SUCCEEDED state\n@@ -299,7 +301,6 @@\n           // Ignore-able events\n           .addTransition(VertexState.KILLED, VertexState.KILLED,\n               EnumSet.of(VertexEventType.V_TERMINATE,\n-                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n                   VertexEventType.V_START,\n                   VertexEventType.V_TASK_RESCHEDULED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,\n@@ -310,8 +311,6 @@\n               VertexState.ERROR,\n               VertexState.ERROR,\n               EnumSet.of(VertexEventType.V_INIT,\n-                  VertexEventType.V_SOURCE_VERTEX_STARTED,\n-                  VertexEventType.V_START,\n                   VertexEventType.V_TERMINATE,\n                   VertexEventType.V_TASK_COMPLETED,\n                   VertexEventType.V_TASK_ATTEMPT_COMPLETED,"
            },
            {
                "sha": "e8e315a536113b35b3ca2b2e337ee19ef206ba37",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "status": "modified",
                "additions": 6,
                "deletions": 7,
                "changes": 13,
                "blob_url": "https://github.com/apache/tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "raw_url": "https://github.com/apache/tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/processor/FilterByWordInputProcessor.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -98,14 +98,13 @@ public void run(Map<String, LogicalInput> inputs,\n     OnFileUnorderedKVOutput kvOutput = (OnFileUnorderedKVOutput) lo;\n \n     Configuration updatedConf = mrInput.getConfigUpdates();\n+    String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n+    LOG.info(\"Processing file: \" + fileName);\n     Text srcFile = new Text();\n-    srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n-    if (updatedConf != null) {\n-      String fileName = updatedConf.get(MRJobConfig.MAP_INPUT_FILE);\n-      if (fileName != null) {\n-        LOG.info(\"Processing file: \" + fileName);\n-        srcFile.set(fileName);\n-      }\n+    if (fileName == null) {\n+      srcFile.set(\"UNKNOWN_FILENAME_IN_PROCESSOR\");\n+    } else {\n+      srcFile.set(fileName);\n     }\n \n     KVReader kvReader = mrInput.getReader();"
            },
            {
                "sha": "b9f22421a40857c4f1117cefe25bcf8e7f57b725",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "raw_url": "https://github.com/apache/tez/raw/968e31f96e41ce4c4e7717c6264e70e627f99837/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/input/MRInput.java?ref=968e31f96e41ce4c4e7717c6264e70e627f99837",
                "patch": "@@ -209,7 +209,7 @@ public void setNumPhysicalInputs(int numInputs) {\n    * @return the additional fields set by {@link MRInput}\n    */\n   public Configuration getConfigUpdates() {\n-    return incrementalConf;\n+    return new Configuration(incrementalConf);\n   }\n \n   public float getProgress() throws IOException, InterruptedException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/5eb0c86f204aad1354e55192bc82e17320949acf",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
        "message": "TEZ-477. Fix NPEs etc caused by TEZ-433 (part of TEZ-398). (sseth)",
        "bug_id": "tez_40",
        "file": [
            {
                "sha": "2d3e4d1fdc6f6856230d491aff687f3f2f4c5bf7",
                "filename": "tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java",
                "raw_url": "https://github.com/apache/tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/hadoop/mapred/YarnTezDagChild.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -514,7 +514,7 @@ private static LogicalIOProcessorRuntimeTask createLogicalTask(int attemptNum,\n     }\n     String [] localDirs = StringUtils.getTrimmedStrings(System.getenv(Environment.LOCAL_DIRS.name()));\n     conf.setStrings(TezJobConfig.LOCAL_DIRS, localDirs);\n-    LOG.info(\"LocalDirs for child: \" + localDirs);\n+    LOG.info(\"LocalDirs for child: \" + Arrays.toString(localDirs));\n     return new LogicalIOProcessorRuntimeTask(taskSpec, attemptNum, conf,\n         tezUmbilical, jobToken);\n   }"
            },
            {
                "sha": "d7683121af8833780726c9747f9ffa52270705be",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java",
                "raw_url": "https://github.com/apache/tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MultiStageMRConfToTezTranslator.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -240,9 +240,9 @@ private static void convertVertexConfToTez(Configuration vertexConf,\n     Configuration confs[] = new Configuration[numStages];\n     Configuration nonItermediateConf = MultiStageMRConfigUtil.extractStageConf(\n         conf, \"\");\n-    confs[0].setBoolean(MRConfig.IS_MAP_PROCESSOR, true);\n     if (numStages == 1) {\n       confs[0] = nonItermediateConf;\n+      confs[0].setBoolean(MRConfig.IS_MAP_PROCESSOR, true);\n     } else {\n       confs[0] = nonItermediateConf;\n       confs[numStages - 1] = new Configuration(nonItermediateConf);"
            },
            {
                "sha": "5566fd8c0f28d3d62e71621ce40e739ce1e3ae31",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java",
                "raw_url": "https://github.com/apache/tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newcombine/MRCombiner.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -49,7 +49,7 @@\n import org.apache.tez.engine.common.sort.impl.TezRawKeyValueIterator;\n import org.apache.tez.engine.newapi.TezInputContext;\n import org.apache.tez.engine.newapi.TezOutputContext;\n-import org.apache.tez.engine.newapi.impl.TezTaskContextImpl;\n+import org.apache.tez.engine.newapi.TezTaskContext;\n import org.apache.tez.mapreduce.hadoop.MRConfig;\n import org.apache.tez.mapreduce.hadoop.MRJobConfig;\n import org.apache.tez.mapreduce.hadoop.mapred.MRCounters;\n@@ -72,13 +72,13 @@\n   private final MRTaskReporter reporter;\n   private final TaskAttemptID mrTaskAttemptID;\n \n-  public MRCombiner(TezTaskContextImpl taskContext) throws IOException {\n+  public MRCombiner(TezTaskContext taskContext) throws IOException {\n     this.conf = TezUtils.createConfFromUserPayload(taskContext.getUserPayload());\n \n     assert(taskContext instanceof TezInputContext || taskContext instanceof TezOutputContext);\n     if (taskContext instanceof TezOutputContext) {\n       this.keyClass = ConfigUtils.getIntermediateOutputKeyClass(conf);\n-      this.valClass = ConfigUtils.getIntermediateOutputKeyClass(conf);\n+      this.valClass = ConfigUtils.getIntermediateOutputValueClass(conf);\n       this.comparator = ConfigUtils.getIntermediateOutputKeyComparator(conf);\n       this.reporter = new MRTaskReporter((TezOutputContext)taskContext);\n     } else {"
            },
            {
                "sha": "a8fb9007ed0d7013da6b253521de5e8466b9297c",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "raw_url": "https://github.com/apache/tez/raw/5eb0c86f204aad1354e55192bc82e17320949acf/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java?ref=5eb0c86f204aad1354e55192bc82e17320949acf",
                "patch": "@@ -166,7 +166,7 @@\n     initCommitter(jobConf, useNewApi);\n \n     LOG.info(\"Initialized Simple Output\"\n-        + \", using_new_api\" + useNewApi);\n+        + \", using_new_api: \" + useNewApi);\n     return null;\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/eb0f6ffe5250b497f35909f8559682cbaa3621ae",
        "message": "TEZ-472. Various fixes including NPE in shuffle when run MR jobs using mapred apis. (hitesh)",
        "bug_id": "tez_41",
        "file": [
            {
                "sha": "eccd119a97b3f12229c432e5bf1f92191c843158",
                "filename": "tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java",
                "raw_url": "https://github.com/apache/tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-engine/src/main/java/org/apache/tez/engine/lib/input/ShuffledMergedInput.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -122,7 +122,7 @@ public void waitForInputReady() throws IOException, InterruptedException {\n    */\n   @Override\n   public KVReader getReader() throws IOException {\n-    if (rawIter != null) {\n+    if (rawIter == null) {\n       try {\n         waitForInputReady();\n       } catch (InterruptedException e) {"
            },
            {
                "sha": "6c062a46bb6c1be32ccf9c4f84978cf0c4296215",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "raw_url": "https://github.com/apache/tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/ExampleDriver.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -41,6 +41,9 @@ public static void main(String argv[]){\n     try {\n       pgd.addClass(\"wordcount\", WordCount.class,\n           \"A map/reduce program that counts the words in the input files.\");\n+      pgd.addClass(\"mapredwordcount\", MapredWordCount.class,\n+          \"A map/reduce program that counts the words in the input files\"\n+         + \" using the mapred apis.\");\n       pgd.addClass(\"wordcountmrrtest\", WordCountMRRTest.class,\n           \"A map/reduce program that counts the words in the input files.\"\n           + \" Map splits on spaces. First reduce splits on \\\".\\\"\");"
            },
            {
                "sha": "33aad89c357fc6cdb0ef79a57348c29b89a7388b",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java",
                "status": "added",
                "additions": 163,
                "deletions": 0,
                "changes": 163,
                "blob_url": "https://github.com/apache/tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java",
                "raw_url": "https://github.com/apache/tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MapredWordCount.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -0,0 +1,163 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.tez.mapreduce.examples;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.conf.Configured;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.io.IntWritable;\n+import org.apache.hadoop.io.LongWritable;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.mapred.FileInputFormat;\n+import org.apache.hadoop.mapred.FileOutputFormat;\n+import org.apache.hadoop.mapred.JobClient;\n+import org.apache.hadoop.mapred.JobConf;\n+import org.apache.hadoop.mapred.MapReduceBase;\n+import org.apache.hadoop.mapred.Mapper;\n+import org.apache.hadoop.mapred.OutputCollector;\n+import org.apache.hadoop.mapred.Reducer;\n+import org.apache.hadoop.mapred.Reporter;\n+import org.apache.hadoop.util.Tool;\n+import org.apache.hadoop.util.ToolRunner;\n+\n+/**\n+ * This is an example Hadoop Map/Reduce application using the mapred apis.\n+ * It reads the text input files, breaks each line into words\n+ * and counts them. The output is a locally sorted list of words and the\n+ * count of how often they occurred.\n+ *\n+ * To run: bin/hadoop jar examples.jar wordcount\n+ *            [-m <i>maps</i>] [-r <i>reduces</i>] <i>in-dir</i> <i>out-dir</i>\n+ */\n+public class MapredWordCount extends Configured implements Tool {\n+\n+  private static final Log LOG = LogFactory.getLog(MapredWordCount.class);\n+\n+  /**\n+   * Counts the words in each line.\n+   * For each line of input, break the line into words and emit them as\n+   * (<b>word</b>, <b>1</b>).\n+   */\n+  public static class MapClass extends MapReduceBase\n+    implements Mapper<LongWritable, Text, Text, IntWritable> {\n+\n+    private final static IntWritable one = new IntWritable(1);\n+    private Text word = new Text();\n+\n+    public void map(LongWritable key, Text value,\n+                    OutputCollector<Text, IntWritable> output,\n+                    Reporter reporter) throws IOException {\n+      String line = value.toString();\n+      StringTokenizer itr = new StringTokenizer(line);\n+      while (itr.hasMoreTokens()) {\n+        word.set(itr.nextToken());\n+        output.collect(word, one);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * A reducer class that just emits the sum of the input values.\n+   */\n+  public static class Reduce extends MapReduceBase\n+    implements Reducer<Text, IntWritable, Text, IntWritable> {\n+\n+    public void reduce(Text key, Iterator<IntWritable> values,\n+                       OutputCollector<Text, IntWritable> output,\n+                       Reporter reporter) throws IOException {\n+      int sum = 0;\n+      while (values.hasNext()) {\n+        sum += values.next().get();\n+      }\n+      output.collect(key, new IntWritable(sum));\n+    }\n+  }\n+\n+  static int printUsage() {\n+    System.out.println(\"wordcount [-m <maps>] [-r <reduces>] <input> <output>\");\n+    ToolRunner.printGenericCommandUsage(System.out);\n+    return -1;\n+  }\n+\n+  /**\n+   * The main driver for word count map/reduce program.\n+   * Invoke this method to submit the map/reduce job.\n+   * @throws IOException When there is communication problems with the\n+   *                     job tracker.\n+   */\n+  public int run(String[] args) throws Exception {\n+    JobConf conf = new JobConf(getConf(), WordCount.class);\n+    conf.setJobName(\"wordcount\");\n+    LOG.info(\"Running WordCount job using mapred apis\");\n+\n+    // the keys are words (strings)\n+    conf.setOutputKeyClass(Text.class);\n+    // the values are counts (ints)\n+    conf.setOutputValueClass(IntWritable.class);\n+\n+    conf.setMapperClass(MapClass.class);\n+    conf.setCombinerClass(Reduce.class);\n+    conf.setReducerClass(Reduce.class);\n+\n+    List<String> other_args = new ArrayList<String>();\n+    for(int i=0; i < args.length; ++i) {\n+      try {\n+        if (\"-m\".equals(args[i])) {\n+          conf.setNumMapTasks(Integer.parseInt(args[++i]));\n+        } else if (\"-r\".equals(args[i])) {\n+          conf.setNumReduceTasks(Integer.parseInt(args[++i]));\n+        } else {\n+          other_args.add(args[i]);\n+        }\n+      } catch (NumberFormatException except) {\n+        LOG.error(\"Integer expected instead of \" + args[i]);\n+        return printUsage();\n+      } catch (ArrayIndexOutOfBoundsException except) {\n+        LOG.error(\"Required parameter missing from \" + args[i-1]);\n+        return printUsage();\n+      }\n+    }\n+    // Make sure there are exactly 2 parameters left.\n+    if (other_args.size() != 2) {\n+      LOG.error(\"Wrong number of parameters: \" +\n+          other_args.size() + \" instead of 2.\");\n+      return printUsage();\n+    }\n+    FileInputFormat.setInputPaths(conf, other_args.get(0));\n+    FileOutputFormat.setOutputPath(conf, new Path(other_args.get(1)));\n+\n+    JobClient.runJob(conf);\n+    return 0;\n+  }\n+\n+  public static void main(String[] args) throws Exception {\n+    int res = ToolRunner.run(new Configuration(),\n+        new MapredWordCount(), args);\n+    System.exit(res);\n+  }\n+\n+}"
            },
            {
                "sha": "fc1103e58bb92862ea423ff4908c49346d6a47d8",
                "filename": "tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java",
                "raw_url": "https://github.com/apache/tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/WordCount.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.tez.mapreduce.examples;\n \n import java.io.IOException;\n@@ -32,14 +33,13 @@\n import org.apache.hadoop.util.GenericOptionsParser;\n \n public class WordCount {\n-  \n \n-  public static class TokenizerMapper \n+  public static class TokenizerMapper\n        extends Mapper<Object, Text, Text, IntWritable>{\n-    \n+\n     private final static IntWritable one = new IntWritable(1);\n     private Text word = new Text();\n-      \n+\n     public void map(Object key, Text value, Context context\n                     ) throws IOException, InterruptedException {\n       StringTokenizer itr = new StringTokenizer(value.toString());\n@@ -49,12 +49,12 @@ public void map(Object key, Text value, Context context\n       }\n     }\n   }\n-  \n-  public static class IntSumReducer \n+\n+  public static class IntSumReducer\n        extends Reducer<Text,IntWritable,Text,IntWritable> {\n     private IntWritable result = new IntWritable();\n \n-    public void reduce(Text key, Iterable<IntWritable> values, \n+    public void reduce(Text key, Iterable<IntWritable> values,\n                        Context context\n                        ) throws IOException, InterruptedException {\n       int sum = 0;"
            },
            {
                "sha": "1dd94e1a44fdffbc659ffd966d156d23e00b6a44",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "status": "modified",
                "additions": 19,
                "deletions": 4,
                "changes": 23,
                "blob_url": "https://github.com/apache/tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "raw_url": "https://github.com/apache/tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/newoutput/SimpleOutput.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -14,6 +14,7 @@\n import org.apache.hadoop.mapred.FileOutputCommitter;\n import org.apache.hadoop.mapred.FileOutputFormat;\n import org.apache.hadoop.mapred.JobConf;\n+import org.apache.hadoop.mapred.JobContext;\n import org.apache.hadoop.mapred.TaskAttemptID;\n import org.apache.hadoop.mapred.TaskID;\n import org.apache.hadoop.mapreduce.OutputCommitter;\n@@ -22,7 +23,6 @@\n import org.apache.hadoop.mapreduce.TaskType;\n import org.apache.hadoop.mapreduce.lib.output.FileOutputFormatCounter;\n import org.apache.hadoop.util.ReflectionUtils;\n-import org.apache.tez.common.TezJobConfig;\n import org.apache.tez.common.TezUtils;\n import org.apache.tez.common.counters.TaskCounter;\n import org.apache.tez.common.counters.TezCounter;\n@@ -129,6 +129,12 @@\n           (isMapperOutput ? TaskType.MAP : TaskType.REDUCE),\n           outputContext.getTaskIndex()),\n           outputContext.getTaskAttemptNumber());\n+      jobConf.set(JobContext.TASK_ATTEMPT_ID, taskAttemptId.toString());\n+      jobConf.set(JobContext.TASK_ID, taskAttemptId.getTaskID().toString());\n+      jobConf.setBoolean(JobContext.TASK_ISMAP, isMapperOutput);\n+      jobConf.setInt(JobContext.TASK_PARTITION,\n+          taskAttemptId.getTaskID().getId());\n+      jobConf.set(JobContext.ID, taskAttemptId.getJobID().toString());\n \n       oldApiTaskAttemptContext =\n           new org.apache.tez.mapreduce.hadoop.newmapred.TaskAttemptContextImpl(\n@@ -137,7 +143,8 @@\n       oldOutputFormat = jobConf.getOutputFormat();\n \n       List<Statistics> matchedStats = null;\n-      if (oldOutputFormat instanceof org.apache.hadoop.mapred.FileOutputFormat) {\n+      if (oldOutputFormat\n+          instanceof org.apache.hadoop.mapred.FileOutputFormat) {\n         matchedStats =\n             Utils.getFsStatistics(\n                 org.apache.hadoop.mapred.FileOutputFormat.getOutputPath(\n@@ -194,11 +201,19 @@ public void initCommitter(JobConf job, boolean useNewApi)\n         FileOutputFormat.setWorkOutputPath(job, outputPath);\n       }\n     }\n-    this.committer.setupTask(newApiTaskAttemptContext);\n+    if (useNewApi) {\n+      this.committer.setupTask(newApiTaskAttemptContext);\n+    } else {\n+      this.committer.setupTask(oldApiTaskAttemptContext);\n+    }\n   }\n \n   public boolean isCommitRequired() throws IOException {\n-    return committer.needsTaskCommit(newApiTaskAttemptContext);\n+    if (useNewApi) {\n+      return committer.needsTaskCommit(newApiTaskAttemptContext);\n+    } else {\n+      return committer.needsTaskCommit(oldApiTaskAttemptContext);\n+    }\n   }\n \n   private TaskAttemptContext createTaskAttemptContext() {"
            },
            {
                "sha": "0b768c01af45d0d4dcf48776ec942d06083daeda",
                "filename": "tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/apache/tez/blob/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java",
                "raw_url": "https://github.com/apache/tez/raw/9a7e7bccb3cdf1989945092c95c3b8e2a216946d/tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-yarn-client/src/main/java/org/apache/tez/mapreduce/DAGJobStatus.java?ref=9a7e7bccb3cdf1989945092c95c3b8e2a216946d",
                "patch": "@@ -42,14 +42,14 @@\n   private final String jobFile;\n   private final DAGStatus dagStatus;\n   private final ApplicationReport report;\n-  \n+\n   public DAGJobStatus(ApplicationReport report, DAGStatus dagStatus, String jobFile) {\n     super();\n     this.dagStatus = dagStatus;\n     this.jobFile = jobFile;\n     this.report = report;\n   }\n-  \n+\n   @Override\n   protected synchronized void setMapProgress(float p) {\n     throw new UnsupportedOperationException();\n@@ -149,7 +149,7 @@ public synchronized float getMapProgress() {\n   @Override\n   public synchronized float getCleanupProgress() {\n     if (dagStatus.getState() == DAGStatus.State.SUCCEEDED ||\n-        dagStatus.getState() == DAGStatus.State.FAILED || \n+        dagStatus.getState() == DAGStatus.State.FAILED ||\n         dagStatus.getState() == DAGStatus.State.KILLED ||\n         dagStatus.getState() == DAGStatus.State.ERROR) {\n       return 1.0f;\n@@ -237,7 +237,7 @@ public synchronized String getFailureInfo() {\n   @Override\n   public synchronized boolean isJobComplete() {\n     return (dagStatus.getState() == DAGStatus.State.SUCCEEDED ||\n-        dagStatus.getState() == DAGStatus.State.FAILED || \n+        dagStatus.getState() == DAGStatus.State.FAILED ||\n         dagStatus.getState() == DAGStatus.State.KILLED ||\n         dagStatus.getState() == DAGStatus.State.ERROR);\n   }\n@@ -369,7 +369,7 @@ public String toString() {\n     buffer.append(\"needed-mem\" + getNeededMem());\n     return buffer.toString();\n   }\n-  \n+\n   private float getProgress(String vertexName) {\n     Progress progress = dagStatus.getVertexProgress().get(vertexName);\n     if(progress == null) {\n@@ -380,7 +380,7 @@ private float getProgress(String vertexName) {\n     if(totalTasks != 0) {\n       return progress.getSucceededTaskCount()/totalTasks;\n     }\n-    return 1;\n+    return 0;\n   }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/efed85db1ec3e6920fde6599cf9b24b87f426c44",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/8dd3731bb4ef698f9c6d98efb05d02ec7a4e3c98",
        "message": "TEZ-377. Fix NPE in Task when logging user payload in debug mode. (hitesh)",
        "bug_id": "tez_42",
        "file": [
            {
                "sha": "435f33d6c92bff4f5324e52d6f9d0f8aeffa4068",
                "filename": "tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java",
                "status": "modified",
                "additions": 13,
                "deletions": 11,
                "changes": 24,
                "blob_url": "https://github.com/apache/tez/blob/efed85db1ec3e6920fde6599cf9b24b87f426c44/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java",
                "raw_url": "https://github.com/apache/tez/raw/efed85db1ec3e6920fde6599cf9b24b87f426c44/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/task/MRRuntimeTask.java?ref=efed85db1ec3e6920fde6599cf9b24b87f426c44",
                "patch": "@@ -80,17 +80,6 @@ public void initialize(Configuration conf, byte[] userPayload,\n     Configuration taskConf;\n     if (userPayload != null) {\n       taskConf = MRHelpers.createConfFromUserPayload(userPayload);\n-      if (LOG.isDebugEnabled()) {\n-        Iterator<Entry<String, String>> iter = taskConf.iterator();\n-        String taskIdStr = mrTask.getTaskAttemptId().getTaskID().toString();\n-        while (iter.hasNext()) {\n-          Entry<String, String> confEntry = iter.next();\n-          LOG.debug(\"TaskConf Entry\"\n-              + \", taskId=\" + taskIdStr\n-              + \", key=\" + confEntry.getKey()\n-              + \", value=\" + confEntry.getValue());\n-        }\n-      }\n     } else {\n       taskConf = new Configuration(false);\n     }\n@@ -114,6 +103,19 @@ public void initialize(Configuration conf, byte[] userPayload,\n \n     MRTask mrTask = (MRTask) getProcessor();\n     this.mrTask = mrTask;\n+\n+    if (LOG.isDebugEnabled() && userPayload != null) {\n+      Iterator<Entry<String, String>> iter = taskConf.iterator();\n+      String taskIdStr = mrTask.getTaskAttemptId().getTaskID().toString();\n+      while (iter.hasNext()) {\n+        Entry<String, String> confEntry = iter.next();\n+        LOG.debug(\"TaskConf Entry\"\n+            + \", taskId=\" + taskIdStr\n+            + \", key=\" + confEntry.getKey()\n+            + \", value=\" + confEntry.getValue());\n+      }\n+    }\n+\n     configureMRTask(job, mrTask);\n \n     this.conf = job;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/a9bace052a9dba4b1aa08c2e9310df73928dad84",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/f2f31e0eff3f654d51ca7001a3bf1784cf8d5e0b",
        "message": "TEZ-715. Auto Reduce Parallelism can rarely trigger NPE in AM at DAGAppMaster.handle(DAGAppMaster.java:1268) (bikas)",
        "bug_id": "tez_43",
        "file": [
            {
                "sha": "8243b7047e2aa349ba73b6814c64065e7faf6aa3",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/apache/tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "raw_url": "https://github.com/apache/tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/Task.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -78,8 +78,6 @@\n   public List<TezEvent> getTaskAttemptTezEvents(TezTaskAttemptID attemptID,\n       int fromEventId, int maxEvents);\n   \n-  public List<TezEvent> getAndClearTaskTezEvents();\n-\n   public List<String> getDiagnostics();\n \n }"
            },
            {
                "sha": "793c12a44bc129f5a8fa62431003bde9cbcda14d",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "status": "modified",
                "additions": 0,
                "deletions": 12,
                "changes": 12,
                "blob_url": "https://github.com/apache/tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -491,18 +491,6 @@ public float getProgress() {\n     }\n   }\n \n-  @Override\n-  public List<TezEvent> getAndClearTaskTezEvents() {\n-    readLock.lock();\n-    try {\n-      List<TezEvent> events = tezEventsForTaskAttempts;\n-      tezEventsForTaskAttempts = new ArrayList<TezEvent>();\n-      return events;\n-    } finally {\n-      readLock.unlock();\n-    }\n-  }\n-\n   @Override\n   public List<String> getDiagnostics() {\n     List<String> diagnostics = new ArrayList<String>(attempts.size());"
            },
            {
                "sha": "d3e07cb2d09783e606c5cb20de16c1530c0fe8b6",
                "filename": "tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "status": "modified",
                "additions": 27,
                "deletions": 35,
                "changes": 62,
                "blob_url": "https://github.com/apache/tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -462,7 +462,10 @@\n   private Set<String> inputsWithInitializers;\n   private int numInitializedInputs;\n   private boolean startSignalPending = false;\n-  List<TezEvent> pendingRouteEvents = null;\n+  private boolean tasksNotYetScheduled = true;\n+  // We may always store task events in the vertex for scalability\n+  List<TezEvent> pendingTaskEvents = Lists.newLinkedList();\n+  List<TezEvent> pendingRouteEventsWhileIniting = null;\n   List<TezTaskAttemptID> pendingReportedSrcCompletions = Lists.newLinkedList();\n \n   private RootInputInitializerRunner rootInputInitializer;\n@@ -803,6 +806,12 @@ public AppContext getAppContext() {\n   public void scheduleTasks(List<Integer> taskIDs) {\n     readLock.lock();\n     try {\n+      tasksNotYetScheduled = false;\n+      if (!pendingTaskEvents.isEmpty()) {\n+        VertexImpl.ROUTE_EVENT_TRANSITION.transition(this,\n+            new VertexEventRouteEvent(getVertexId(), pendingTaskEvents));\n+        pendingTaskEvents.clear();\n+      }\n       for (Integer taskID : taskIDs) {\n         if (tasks.size() <= taskID.intValue()) {\n           throw new TezUncheckedException(\n@@ -874,10 +883,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n           edge.startEventBuffering();\n         }\n   \n-        // Use a set since the same event may have been sent to multiple tasks\n-        // and we want to avoid duplicates\n-        Set<TezEvent> pendingEvents = new HashSet<TezEvent>();\n-  \n         LOG.info(\"Vertex \" + getVertexId() + \n             \" parallelism set to \" + parallelism + \" from \" + numTasks);\n         // assign to local variable of LinkedHashMap to make sure that changing\n@@ -896,7 +901,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n                     + \" for vertex: \" + getVertexId() + \" name: \" + getName());\n             return false;\n           }\n-          pendingEvents.addAll(task.getAndClearTaskTezEvents());\n           if (i <= parallelism) {\n             continue;\n           }\n@@ -913,7 +917,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n                 + entry.getKey() + \" destination: \" + getVertexId());\n             Vertex sourceVertex = appContext.getCurrentDAG().getVertex(entry.getKey());\n             Edge edge = sourceVertices.get(sourceVertex);\n-            EdgeProperty edgeProperty = edge.getEdgeProperty();\n             try {\n               edge.setCustomEdgeManager(entry.getValue());\n             } catch (Exception e) {\n@@ -926,21 +929,6 @@ public boolean setParallelism(int parallelism, VertexLocationHint vertexLocation\n           }\n         }\n   \n-        // Re-route all existing TezEvents according to new routing table\n-        // At this point only events attributed to source task attempts can be\n-        // re-routed. e.g. DataMovement or InputFailed events.\n-        // This assumption is fine for now since these tasks haven't been started.\n-        // So they can only get events generated from source task attempts that\n-        // have already been started.\n-        DAG dag = getDAG();\n-        for(TezEvent event : pendingEvents) {\n-          TezVertexID sourceVertexId = event.getSourceInfo().getTaskAttemptID()\n-              .getTaskID().getVertexID();\n-          Vertex sourceVertex = dag.getVertex(sourceVertexId);\n-          Edge sourceEdge = sourceVertices.get(sourceVertex);\n-          sourceEdge.sendTezEventToDestinationTasks(event);\n-        }\n-  \n         // stop buffering events\n         for (Edge edge : sourceVertices.values()) {\n           edge.stopEventBuffering();\n@@ -1550,10 +1538,10 @@ private VertexState initializeVertexInInitializingState() {\n     }\n \n     // Vertex will be moving to INITED state, safe to process pending route events.\n-    if (pendingRouteEvents != null) {\n+    if (pendingRouteEventsWhileIniting != null) {\n       VertexImpl.ROUTE_EVENT_TRANSITION.transition(this,\n-          new VertexEventRouteEvent(getVertexId(), pendingRouteEvents));\n-      pendingRouteEvents = null;\n+          new VertexEventRouteEvent(getVertexId(), pendingRouteEventsWhileIniting));\n+      pendingRouteEventsWhileIniting = null;\n     }\n     return vertexState;\n   }\n@@ -2032,12 +2020,12 @@ private static void checkEventSourceMetadata(Vertex vertex,\n     @Override\n     public void transition(VertexImpl vertex, VertexEvent event) {\n       VertexEventRouteEvent re = (VertexEventRouteEvent) event;\n-      if (vertex.pendingRouteEvents == null) {\n-        vertex.pendingRouteEvents = Lists.newLinkedList();\n+      if (vertex.pendingRouteEventsWhileIniting == null) {\n+        vertex.pendingRouteEventsWhileIniting = Lists.newLinkedList();\n       }\n       // Store the events for post-init routing, since INIT state is when\n       // initial task parallelism will be set\n-      vertex.pendingRouteEvents.addAll(re.getEvents());\n+      vertex.pendingRouteEventsWhileIniting.addAll(re.getEvents());\n     }\n   }\n \n@@ -2103,14 +2091,18 @@ public void transition(VertexImpl vertex, VertexEvent event) {\n             } else {\n               // event not from this vertex. must have come from source vertex.\n               // send to tasks\n-              Edge srcEdge = vertex.sourceVertices.get(vertex.getDAG().getVertex(\n-                  sourceMeta.getTaskVertexName()));\n-              if (srcEdge == null) {\n-                throw new TezUncheckedException(\"Bad source vertex: \" +\n-                    sourceMeta.getTaskVertexName() + \" for destination vertex: \" +\n-                    vertex.getVertexId());\n+              if (vertex.tasksNotYetScheduled) {\n+                vertex.pendingTaskEvents.add(tezEvent);\n+              } else {\n+                Edge srcEdge = vertex.sourceVertices.get(vertex.getDAG().getVertex(\n+                    sourceMeta.getTaskVertexName()));\n+                if (srcEdge == null) {\n+                  throw new TezUncheckedException(\"Bad source vertex: \" +\n+                      sourceMeta.getTaskVertexName() + \" for destination vertex: \" +\n+                      vertex.getVertexId());\n+                }\n+                srcEdge.sendTezEventToDestinationTasks(tezEvent);\n               }\n-              srcEdge.sendTezEventToDestinationTasks(tezEvent);\n             }\n           }\n           break;"
            },
            {
                "sha": "1a14b15b613b02082e02aaea2d02bf6ce8cab09d",
                "filename": "tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "status": "modified",
                "additions": 42,
                "deletions": 0,
                "changes": 42,
                "blob_url": "https://github.com/apache/tez/blob/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/a9bace052a9dba4b1aa08c2e9310df73928dad84/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java?ref=a9bace052a9dba4b1aa08c2e9310df73928dad84",
                "patch": "@@ -98,6 +98,7 @@\n import org.apache.tez.dag.app.dag.event.VertexEvent;\n import org.apache.tez.dag.app.dag.event.VertexEventRootInputFailed;\n import org.apache.tez.dag.app.dag.event.VertexEventRootInputInitialized;\n+import org.apache.tez.dag.app.dag.event.VertexEventRouteEvent;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskAttemptCompleted;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskCompleted;\n import org.apache.tez.dag.app.dag.event.VertexEventTaskReschedule;\n@@ -114,12 +115,16 @@\n import org.apache.tez.runtime.api.Event;\n import org.apache.tez.runtime.api.OutputCommitter;\n import org.apache.tez.runtime.api.OutputCommitterContext;\n+import org.apache.tez.runtime.api.events.CompositeDataMovementEvent;\n import org.apache.tez.runtime.api.events.DataMovementEvent;\n import org.apache.tez.runtime.api.events.InputReadErrorEvent;\n import org.apache.tez.runtime.api.events.RootInputConfigureVertexTasksEvent;\n import org.apache.tez.runtime.api.events.RootInputDataInformationEvent;\n import org.apache.tez.test.EdgeManagerForTest;\n+import org.apache.tez.runtime.api.impl.EventMetaData;\n+import org.apache.tez.runtime.api.impl.EventMetaData.EventProducerConsumerType;\n import org.apache.tez.runtime.api.impl.GroupInputSpec;\n+import org.apache.tez.runtime.api.impl.TezEvent;\n import org.junit.After;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -1419,6 +1424,43 @@ public void testVertexSetParallelism() {\n     Assert.assertTrue(tasks.keySet().iterator().next().equals(firstTask));\n \n   }\n+  \n+  @SuppressWarnings(\"unchecked\")\n+  @Test(timeout = 5000)\n+  public void testVertexPendingTaskEvents() {\n+    initAllVertices(VertexState.INITED);\n+    VertexImpl v3 = vertices.get(\"vertex3\");\n+    VertexImpl v2 = vertices.get(\"vertex2\");\n+    \n+    startVertex(v2);\n+    startVertex(v3);\n+    \n+    TezTaskID t0_v2 = TezTaskID.getInstance(v2.getVertexId(), 0);\n+    TezTaskAttemptID ta0_t0_v2 = TezTaskAttemptID.getInstance(t0_v2, 0);\n+\n+    List<TezEvent> taskEvents = Lists.newLinkedList();\n+    TezEvent tezEvent1 = new TezEvent(\n+        new CompositeDataMovementEvent(0, 1, new byte[0]), \n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex2\", \"vertex3\", ta0_t0_v2));\n+    TezEvent tezEvent2 = new TezEvent(\n+        new DataMovementEvent(0, new byte[0]), \n+        new EventMetaData(EventProducerConsumerType.OUTPUT, \"vertex2\", \"vertex3\", ta0_t0_v2));\n+    taskEvents.add(tezEvent1);\n+    taskEvents.add(tezEvent2);\n+    // send events and test that they are buffered until some task is scheduled\n+    dispatcher.getEventHandler().handle(\n+        new VertexEventRouteEvent(v3.getVertexId(), taskEvents));\n+    dispatcher.await();\n+    Assert.assertEquals(2, v3.pendingTaskEvents.size());\n+    v3.scheduleTasks(Collections.singletonList(new Integer(0)));\n+    dispatcher.await();\n+    Assert.assertEquals(0, v3.pendingTaskEvents.size());\n+    // send events and test that they are not buffered anymore\n+    dispatcher.getEventHandler().handle(\n+        new VertexEventRouteEvent(v3.getVertexId(), taskEvents));\n+    dispatcher.await();\n+    Assert.assertEquals(0, v3.pendingTaskEvents.size());\n+  }\n \n   @Test(timeout = 5000)\n   public void testSetCustomEdgeManager() throws UnsupportedEncodingException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/150ebd3c7934339f31a7b24012ece8e171e1f993",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/a786e41a3c0a164c649ef4922ebbc5a5f3d59201",
        "message": "TEZ-1048. Fix an NPE which can occur when the source task generates no\ndata for a partition, and runs multiple attempts. (sseth)",
        "bug_id": "tez_44",
        "file": [
            {
                "sha": "e0a416090b60f28e22e2c04124f23b0cc61ed144",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java",
                "raw_url": "https://github.com/apache/tez/raw/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleInputEventHandler.java?ref=150ebd3c7934339f31a7b24012ece8e171e1f993",
                "patch": "@@ -90,7 +90,8 @@ private void processDataMovementEvent(DataMovementEvent dmEvent) {\n         byte[] emptyPartitions = TezUtils.decompressByteStringToByteArray(shufflePayload.getEmptyPartitions());\n         BitSet emptyPartitionsBitSet = TezUtils.fromByteArray(emptyPartitions);\n         if (emptyPartitionsBitSet.get(partitionId)) {\n-          LOG.info(\"Source partition: \" + partitionId + \" did not generate any data. Not fetching.\");\n+          LOG.info(\"Source partition: \" + partitionId + \" did not generate any data. SrcAttempt: [\"\n+              + srcAttemptIdentifier + \"]. Not fetching.\");\n           scheduler.copySucceeded(srcAttemptIdentifier, null, 0, 0, 0, null);\n           return;\n         }"
            },
            {
                "sha": "45a50ad8394514d558a2d79eb1e8dce1ef689ea9",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java",
                "raw_url": "https://github.com/apache/tez/raw/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/shuffle/impl/ShuffleScheduler.java?ref=150ebd3c7934339f31a7b24012ece8e171e1f993",
                "patch": "@@ -203,7 +203,11 @@ public synchronized void copySucceeded(InputAttemptIdentifier srcAttemptIdentifi\n       // input is already finished. duplicate fetch.\n       LOG.warn(\"Duplicate fetch of input no longer needs to be fetched: \" + srcAttemptIdentifier);\n       // free the resource - specially memory\n-      output.abort();\n+      \n+      // If the src does not generate data, output will be null.\n+      if (output != null) {\n+        output.abort();\n+      }\n     }\n     // TODO NEWTEZ Should this be releasing the output, if not committed ? Possible memory leak in case of speculation.\n   }"
            },
            {
                "sha": "ac5da74ec0686acc2af40fca318eed3bc941cee4",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java",
                "raw_url": "https://github.com/apache/tez/raw/150ebd3c7934339f31a7b24012ece8e171e1f993/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleInputEventHandlerImpl.java?ref=150ebd3c7934339f31a7b24012ece8e171e1f993",
                "patch": "@@ -106,7 +106,8 @@ private void processDataMovementEvent(DataMovementEvent dme) throws IOException\n       if (emptyPartionsBitSet.get(srcIndex)) {\n         InputAttemptIdentifier srcAttemptIdentifier = new InputAttemptIdentifier(dme.getTargetIndex(),\n             dme.getVersion());\n-        LOG.info(\"Source partition: \" + srcIndex + \" did not generate any data. Not fetching.\");\n+        LOG.info(\"Source partition: \" + srcIndex + \" did not generate any data. SrcAttempt: [\"\n+            + srcAttemptIdentifier + \"]. Not fetching.\");\n         shuffleManager.addCompletedInputWithNoData(srcAttemptIdentifier);\n         return;\n       }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/238255b6941fa645bb5aab32ab78515cf6994c38",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/e4c2a82533fd8032e78a8c4dda3ff7216f85fc7a",
        "message": "TEZ-863 Addendum. Queue events for relevant inputs untill the Input has\nbeen started. Fixes a potential NPE in case of no auto start.\n(Contributed by Rajesh Balamohan)",
        "bug_id": "tez_45",
        "file": [
            {
                "sha": "d2d4e562797c54e8f1f07f7a5a95a8bf5760ac82",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tez/blob/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "raw_url": "https://github.com/apache/tez/raw/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java?ref=238255b6941fa645bb5aab32ab78515cf6994c38",
                "patch": "@@ -95,16 +95,20 @@\n   @Override\n   public void start() throws IOException {\n     synchronized (this) {\n-      if (!isStarted.getAndSet(true)) {\n+      if (!isStarted.get()) {\n         // Start the shuffle - copy and merge\n         shuffle.run();\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Initialized the handlers in shuffle..Safe to start processing..\");\n+        }\n         List<Event> pending = new LinkedList<Event>();\n         pendingEvents.drainTo(pending);\n         if (pending.size() > 0) {\n           LOG.info(\"NoAutoStart delay in processing first event: \"\n               + (System.currentTimeMillis() - firstEventReceivedTime));\n           shuffle.handleEvents(pending);\n         }\n+        isStarted.set(true);\n       }\n     }\n   }"
            },
            {
                "sha": "12416068bd571a389ad0851ae22fc45145e50fc7",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tez/blob/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "raw_url": "https://github.com/apache/tez/raw/238255b6941fa645bb5aab32ab78515cf6994c38/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java?ref=238255b6941fa645bb5aab32ab78515cf6994c38",
                "patch": "@@ -74,7 +74,7 @@ public ShuffledUnorderedKVInput() {\n   @Override\n   public void start() throws IOException {\n     synchronized (this) {\n-      if (!isStarted.getAndSet(true)) {\n+      if (!isStarted.get()) {\n         this.shuffleManager.run();\n         this.kvReader = this.shuffleManager.createReader();\n         List<Event> pending = new LinkedList<Event>();\n@@ -84,6 +84,7 @@ public void start() throws IOException {\n               + (System.currentTimeMillis() - firstEventReceivedTime));\n           shuffleManager.handleEvents(pending);\n         }\n+        isStarted.set(true);\n       }\n     }\n   }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tez/commit/7e1d11010802050182835f3cc7a3b86619ee2cb1",
        "repo": "tez",
        "parent": "https://github.com/apache/tez/commit/be0d3898864423b005c978d2ce4d810eb775728d",
        "message": "TEZ-863. Queue events for relevant inputs untill the Input has been\nstarted. Fixes a potential NPE in case of no auto start. (sseth)",
        "bug_id": "tez_46",
        "file": [
            {
                "sha": "d70924ad6fec5da9f7061fa679106908c6691815",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "status": "modified",
                "additions": 30,
                "deletions": 4,
                "changes": 34,
                "blob_url": "https://github.com/apache/tez/blob/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "raw_url": "https://github.com/apache/tez/raw/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java?ref=7e1d11010802050182835f3cc7a3b86619ee2cb1",
                "patch": "@@ -19,7 +19,10 @@\n \n import java.io.IOException;\n import java.util.Collections;\n+import java.util.LinkedList;\n import java.util.List;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.commons.logging.Log;\n@@ -60,6 +63,9 @@\n   protected Configuration conf;\n   protected int numInputs = 0;\n   protected Shuffle shuffle;\n+  private final BlockingQueue<Event> pendingEvents = new LinkedBlockingQueue<Event>();\n+  private volatile long firstEventReceivedTime = -1;\n+  // ZZZ LOG THIS TIME\n   @SuppressWarnings(\"rawtypes\")\n   protected ValuesIterator vIter;\n \n@@ -88,9 +94,18 @@\n \n   @Override\n   public void start() throws IOException {\n-    if (!isStarted.getAndSet(true)) {\n-      // Start the shuffle - copy and merge\n-      shuffle.run();\n+    synchronized (this) {\n+      if (!isStarted.getAndSet(true)) {\n+        // Start the shuffle - copy and merge\n+        shuffle.run();\n+        List<Event> pending = new LinkedList<Event>();\n+        pendingEvents.drainTo(pending);\n+        if (pending.size() > 0) {\n+          LOG.info(\"NoAutoStart delay in processing first event: \"\n+              + (System.currentTimeMillis() - firstEventReceivedTime));\n+          shuffle.handleEvents(pending);\n+        }\n+      }\n     }\n   }\n \n@@ -123,7 +138,7 @@ public void waitForInputReady() throws IOException, InterruptedException {\n \n   @Override\n   public List<Event> close() throws IOException {\n-    if (this.numInputs != 0) {\n+    if (this.numInputs != 0 && rawIter != null) {\n       rawIter.close();\n     }\n     return Collections.emptyList();\n@@ -192,6 +207,17 @@ public void handleEvents(List<Event> inputEvents) {\n     if (numInputs == 0) {\n       throw new RuntimeException(\"No input events expected as numInputs is 0\");\n     }\n+    if (!isStarted.get()) {\n+      synchronized (this) {\n+        if (!isStarted.get()) {\n+          if (firstEventReceivedTime == -1) {\n+            firstEventReceivedTime = System.currentTimeMillis();\n+          }\n+          pendingEvents.addAll(inputEvents);\n+          return;\n+        }\n+      }\n+    }\n     shuffle.handleEvents(inputEvents);\n   }\n "
            },
            {
                "sha": "f00ef3dc427726e9937598490cc3be21476f5f06",
                "filename": "tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "status": "modified",
                "additions": 28,
                "deletions": 3,
                "changes": 31,
                "blob_url": "https://github.com/apache/tez/blob/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "raw_url": "https://github.com/apache/tez/raw/7e1d11010802050182835f3cc7a3b86619ee2cb1/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java",
                "contents_url": "https://api.github.com/repos/apache/tez/contents/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledUnorderedKVInput.java?ref=7e1d11010802050182835f3cc7a3b86619ee2cb1",
                "patch": "@@ -20,7 +20,10 @@\n \n import java.io.IOException;\n import java.util.Collections;\n+import java.util.LinkedList;\n import java.util.List;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.commons.logging.Log;\n@@ -43,6 +46,8 @@\n   private Configuration conf;\n   private int numInputs = -1;\n   private BroadcastShuffleManager shuffleManager;\n+  private final BlockingQueue<Event> pendingEvents = new LinkedBlockingQueue<Event>();\n+  private volatile long firstEventReceivedTime = -1;\n   @SuppressWarnings(\"rawtypes\")\n   private BroadcastKVReader kvReader;\n   \n@@ -68,9 +73,18 @@ public ShuffledUnorderedKVInput() {\n \n   @Override\n   public void start() throws IOException {\n-    if (!isStarted.getAndSet(true)) {\n-      this.shuffleManager.run();\n-      this.kvReader = this.shuffleManager.createReader();\n+    synchronized (this) {\n+      if (!isStarted.getAndSet(true)) {\n+        this.shuffleManager.run();\n+        this.kvReader = this.shuffleManager.createReader();\n+        List<Event> pending = new LinkedList<Event>();\n+        pendingEvents.drainTo(pending);\n+        if (pending.size() > 0) {\n+          LOG.info(\"NoAutoStart delay in processing first event: \"\n+              + (System.currentTimeMillis() - firstEventReceivedTime));\n+          shuffleManager.handleEvents(pending);\n+        }\n+      }\n     }\n   }\n \n@@ -102,6 +116,17 @@ public void handleEvents(List<Event> inputEvents) throws IOException {\n     if (numInputs == 0) {\n       throw new RuntimeException(\"No input events expected as numInputs is 0\");\n     }\n+    if (!isStarted.get()) {\n+      synchronized(this) {\n+        if (!isStarted.get()) {\n+          if (firstEventReceivedTime == -1) {\n+            firstEventReceivedTime = System.currentTimeMillis();\n+          }\n+          pendingEvents.addAll(inputEvents);\n+          return;\n+        }\n+      }\n+    }\n     shuffleManager.handleEvents(inputEvents);\n   }\n "
            }
        ]
    }
]
