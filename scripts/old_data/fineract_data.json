[
    {
        "commit": "https://github.com/apache/fineract/commit/f739f919c795918ab6592adabe87d14ee54ac1fe",
        "repo": "fineract",
        "parent": "https://github.com/apache/fineract/commit/0da4cdd4121a411f86b2ea0241e5d880ad37645c",
        "message": "Merge pull request #672 from vorburger/fix-equals-NPE\n\nfix potential NPE in JobParameter.equals() (FINERACT-428)",
        "bug_id": "fineract_1",
        "file": [
            {
                "sha": "bf573e952e54b964f6dbd67b44561974a22ce3b2",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/fineract/blob/f739f919c795918ab6592adabe87d14ee54ac1fe/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "raw_url": "https://github.com/apache/fineract/raw/f739f919c795918ab6592adabe87d14ee54ac1fe/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java?ref=f739f919c795918ab6592adabe87d14ee54ac1fe",
                "patch": "@@ -18,12 +18,13 @@\n  */\n package org.apache.fineract.infrastructure.jobs.domain;\n \n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n+import java.util.Objects;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Table;\n-import java.util.Objects;\n+\n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n \n @Entity\n @Table(name = \"job_parameters\")\n@@ -78,9 +79,9 @@ public void setParameterValue(final String parameterValue) {\n     public boolean equals(Object obj) {\n         if (!obj.getClass().equals(getClass())) return false;\n         JobParameter jobParameter = (JobParameter) obj;\n-        return jobParameter.getJobId().equals(this.getJobId())\n-                && jobParameter.getParameterName().equals(this.getParameterName())\n-                && jobParameter.getParameterValue().equals(this.getParameterValue());\n+        return Objects.equals(jobParameter.getJobId(), this.getJobId())\n+                && Objects.equals(jobParameter.getParameterName(), this.getParameterName())\n+                && Objects.equals(jobParameter.getParameterValue(), this.getParameterValue());\n     }\n \n     @Override"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/fineract/commit/030d9c8bd8808f29f928e6018c7655474c13fc8f",
        "repo": "fineract",
        "parent": "https://github.com/apache/fineract/commit/0da4cdd4121a411f86b2ea0241e5d880ad37645c",
        "message": "fix potential NPE in JobParameter.equals() (FINERACT-428)",
        "bug_id": "fineract_2",
        "file": [
            {
                "sha": "bf573e952e54b964f6dbd67b44561974a22ce3b2",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/fineract/blob/030d9c8bd8808f29f928e6018c7655474c13fc8f/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "raw_url": "https://github.com/apache/fineract/raw/030d9c8bd8808f29f928e6018c7655474c13fc8f/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java?ref=030d9c8bd8808f29f928e6018c7655474c13fc8f",
                "patch": "@@ -18,12 +18,13 @@\n  */\n package org.apache.fineract.infrastructure.jobs.domain;\n \n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n+import java.util.Objects;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Table;\n-import java.util.Objects;\n+\n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n \n @Entity\n @Table(name = \"job_parameters\")\n@@ -78,9 +79,9 @@ public void setParameterValue(final String parameterValue) {\n     public boolean equals(Object obj) {\n         if (!obj.getClass().equals(getClass())) return false;\n         JobParameter jobParameter = (JobParameter) obj;\n-        return jobParameter.getJobId().equals(this.getJobId())\n-                && jobParameter.getParameterName().equals(this.getParameterName())\n-                && jobParameter.getParameterValue().equals(this.getParameterValue());\n+        return Objects.equals(jobParameter.getJobId(), this.getJobId())\n+                && Objects.equals(jobParameter.getParameterName(), this.getParameterName())\n+                && Objects.equals(jobParameter.getParameterValue(), this.getParameterValue());\n     }\n \n     @Override"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/fineract/commit/97ed2549dea48bf4eed0300ff3043e942f3df25d",
        "repo": "fineract",
        "parent": "https://github.com/apache/fineract/commit/cd5b3804a640818534faeb94ec6d192c26877fe0",
        "message": "Merge pull request #457 from wkk91193/fixing-formular-cell-evaluation-npe\n\nFixing Apache POI issue - Formula Cell evaluation nullpointer exception",
        "bug_id": "fineract_3",
        "file": [
            {
                "sha": "1e794ed347ae48186b90c4e541b111533832291e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java",
                "status": "modified",
                "additions": 33,
                "deletions": 7,
                "changes": 40,
                "blob_url": "https://github.com/apache/fineract/blob/97ed2549dea48bf4eed0300ff3043e942f3df25d/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java",
                "raw_url": "https://github.com/apache/fineract/raw/97ed2549dea48bf4eed0300ff3043e942f3df25d/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java",
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java?ref=97ed2549dea48bf4eed0300ff3043e942f3df25d",
                "patch": "@@ -63,8 +63,13 @@ public static Long readAsLong(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n             if(eval!=null) {\n-                CellValue val = eval.evaluate(c);\n-                return ((Double) val.getNumberValue()).longValue();\n+                CellValue val = null;\n+                try {\n+                    val = eval.evaluate(c);\n+                } catch (NullPointerException npe) {\n+                    return null;\n+                }\n+                return ((Double)val.getNumberValue()).longValue();\n             }\n         }\n         else if (c.getCellType()==Cell.CELL_TYPE_NUMERIC){\n@@ -85,7 +90,13 @@ public static String readAsString(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n             if (eval!=null) {\n-                CellValue val = eval.evaluate(c);\n+                CellValue val = null;\n+                try {\n+                    val = eval.evaluate(c);\n+                } catch(NullPointerException npe) {\n+                    return null;\n+                }\n+\n                 String res = trimEmptyDecimalPortion(val.getStringValue());\n                 if (res!=null) {\n                     if (!res.equals(\"\")) {\n@@ -136,7 +147,12 @@ public static Boolean readAsBoolean(int colIndex, Row row) {\n             FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n             if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if(eval!=null) {\n-                    CellValue val = eval.evaluate(c);\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return false;\n+                    }\n                     return val.getBooleanValue();\n                 }\n                 return false;\n@@ -158,8 +174,13 @@ public static Integer readAsInt(int colIndex, Row row) {\n             FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n             if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if(eval!=null) {\n-                   CellValue val = eval.evaluate(c);\n-                    return ((Double) val.getNumberValue()).intValue();\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return null;\n+                    }\n+                    return ((Double)val.getNumberValue()).intValue();\n                 }\n                 return null;\n             }else if (c.getCellType()==Cell.CELL_TYPE_NUMERIC) {\n@@ -176,7 +197,12 @@ public static Double readAsDouble(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if (eval!=null) {\n-                    CellValue val = eval.evaluate(c);\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return 0.0;\n+                    }\n                     return val.getNumberValue();\n                 }else {\n                     return 0.0;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/fineract/commit/f9a33c790e9d9a32ef257d93e3e5d6449f9f0133",
        "repo": "fineract",
        "parent": "https://github.com/apache/fineract/commit/3043d2ae992b382e31521953308fce8830af6288",
        "message": "MIFOSX-1875 Fix for NullPointerException,update build attributes before building commandRequest.",
        "bug_id": "fineract_4",
        "file": [
            {
                "sha": "00d19f977254b396574b13c101b9020534576706",
                "filename": "mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/fineract/blob/f9a33c790e9d9a32ef257d93e3e5d6449f9f0133/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "raw_url": "https://github.com/apache/fineract/raw/f9a33c790e9d9a32ef257d93e3e5d6449f9f0133/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java?ref=f9a33c790e9d9a32ef257d93e3e5d6449f9f0133",
                "patch": "@@ -75,6 +75,7 @@ public String retrieve(@Context final UriInfo uriInfo) {\n     public String update(final String apiRequestBodyAsJson) {\n \n         final CommandWrapper commandRequest = new CommandWrapperBuilder() //\n+                .updatePasswordPreferences() //\n                 .withJson(apiRequestBodyAsJson) //\n                 .build();\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/fineract/commit/237b96753773ab350d831607ad78084631539083",
        "repo": "fineract",
        "parent": "https://github.com/apache/fineract/commit/aaaf47c763cb18d61f2d57c27e3295967335ea76",
        "message": "Merge pull request #1321 from chandrikamohith/MIFOSX-1875\n\nMIFOSX-1875 Fix for NullPointerException,update build attributes before ...",
        "bug_id": "fineract_5",
        "file": [
            {
                "sha": "00d19f977254b396574b13c101b9020534576706",
                "filename": "mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/fineract/blob/237b96753773ab350d831607ad78084631539083/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "raw_url": "https://github.com/apache/fineract/raw/237b96753773ab350d831607ad78084631539083/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java?ref=237b96753773ab350d831607ad78084631539083",
                "patch": "@@ -75,6 +75,7 @@ public String retrieve(@Context final UriInfo uriInfo) {\n     public String update(final String apiRequestBodyAsJson) {\n \n         final CommandWrapper commandRequest = new CommandWrapperBuilder() //\n+                .updatePasswordPreferences() //\n                 .withJson(apiRequestBodyAsJson) //\n                 .build();\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/fineract/commit/df4a070123e1f031a87ea0a36f4646213a8d3686",
        "repo": "fineract",
        "parent": "https://github.com/apache/fineract/commit/9893563865723a9e40ecac5bda0748dcafacaf0e",
        "message": "Better error handling in case a scheduler job name listed in database\ncannot be found in the code (instead of the NPE currently happenig in\nsuch cases)\n \nSigned-off-by: Michael Vorburger <mike@vorburger.ch>",
        "bug_id": "fineract_6",
        "file": [
            {
                "sha": "35a639a72f21cd4483424d47c54a39a00913c802",
                "filename": "mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/fineract/blob/df4a070123e1f031a87ea0a36f4646213a8d3686/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/df4a070123e1f031a87ea0a36f4646213a8d3686/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java?ref=df4a070123e1f031a87ea0a36f4646213a8d3686",
                "patch": "@@ -302,6 +302,9 @@ private Scheduler createScheduler(final String name, final int noOfThreads, JobL\n     private JobDetail createJobDetail(final ScheduledJobDetail scheduledJobDetail) throws Exception {\n         final MifosPlatformTenant tenant = ThreadLocalContextUtil.getTenant();\n         final ClassMethodNamesPair jobDetails = CronMethodParser.findTargetMethodDetails(scheduledJobDetail.getJobName());\n+        if (jobDetails == null) { throw new IllegalArgumentException(\n+                \"Code has no @CronTarget with this job name (@see JobName); seems like DB/code are not in line: \"\n+                        + scheduledJobDetail.getJobName()); }\n         final Object targetObject = getBeanObject(Class.forName(jobDetails.className));\n         final MethodInvokingJobDetailFactoryBean jobDetailFactoryBean = new MethodInvokingJobDetailFactoryBean();\n         jobDetailFactoryBean.setName(scheduledJobDetail.getJobName() + \"JobDetail\" + tenant.getId());"
            }
        ]
    }
]
