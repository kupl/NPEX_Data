[
    {
        "commit": "https://github.com/apache/axis1-java/commit/dc059f317a321ef13acb44ca541b3c377787b915",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/97e0efd2752419a2cc30a2334b5e81b7479faf35",
        "message": "Fix for AXIS-1674 - NullPointerException on WebLogic81\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@259918 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_1",
        "file": [
            {
                "sha": "12bd3343adad23bf2f054e7bec211f1203319c37",
                "filename": "src/org/apache/axis/utils/XMLUtils.java",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc059f317a321ef13acb44ca541b3c377787b915/src/org/apache/axis/utils/XMLUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc059f317a321ef13acb44ca541b3c377787b915/src/org/apache/axis/utils/XMLUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/XMLUtils.java?ref=dc059f317a321ef13acb44ca541b3c377787b915",
                "patch": "@@ -231,8 +231,14 @@ public static DocumentBuilder getDocumentBuilder() throws ParserConfigurationExc\n      */ \n     public static void releaseDocumentBuilder(DocumentBuilder db) {\n         synchronized (documentBuilders) {\n-            db.setErrorHandler(null); // setting implementation default\n-            db.setEntityResolver(null); // setting implementation default\n+            try {\n+                db.setErrorHandler(null); // setting implementation default\n+            } catch (Throwable t) {\n+            }\n+            try {\n+                db.setEntityResolver(null); // setting implementation default\n+            } catch (Throwable t) {\n+            }\n             documentBuilders.push(db);\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c06fdadfa7e3e7f3706fcf1f969efc899b9a7dc9",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/03aa7195ecebd4bec14557db4d90466938186d44",
        "message": "remove(1) throws NullPointerExceptions under heavy load.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254286 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_2",
        "file": [
            {
                "sha": "09b2e2000973639b9edbac53c772b6dd8f1b6168",
                "filename": "src/org/apache/axis/utils/tcpmon.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/c06fdadfa7e3e7f3706fcf1f969efc899b9a7dc9/src/org/apache/axis/utils/tcpmon.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c06fdadfa7e3e7f3706fcf1f969efc899b9a7dc9/src/org/apache/axis/utils/tcpmon.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/tcpmon.java?ref=c06fdadfa7e3e7f3706fcf1f969efc899b9a7dc9",
                "patch": "@@ -1300,12 +1300,12 @@ public void actionPerformed(ActionEvent event) {\n         }\n \n         public void setLeft(Component left) {\n-            leftPanel.remove(1);\n+            leftPanel.removeAll();\n             leftPanel.add(left);\n         }\n \n         public void setRight(Component right) {\n-            rightPanel.remove(1);\n+            rightPanel.removeAll();\n             rightPanel.add(right);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/72efba13ea29baf5eb09d729c65acac00da83847",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/3c271aa9b603c1d988601ca0cbf07c87b841e284",
        "message": "remove(1) throws NullPointerExceptions under heavy load.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247213 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_3",
        "file": [
            {
                "sha": "09b2e2000973639b9edbac53c772b6dd8f1b6168",
                "filename": "src/org/apache/axis/utils/tcpmon.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/72efba13ea29baf5eb09d729c65acac00da83847/src/org/apache/axis/utils/tcpmon.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/72efba13ea29baf5eb09d729c65acac00da83847/src/org/apache/axis/utils/tcpmon.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/tcpmon.java?ref=72efba13ea29baf5eb09d729c65acac00da83847",
                "patch": "@@ -1300,12 +1300,12 @@ public void actionPerformed(ActionEvent event) {\n         }\n \n         public void setLeft(Component left) {\n-            leftPanel.remove(1);\n+            leftPanel.removeAll();\n             leftPanel.add(left);\n         }\n \n         public void setRight(Component right) {\n-            rightPanel.remove(1);\n+            rightPanel.removeAll();\n             rightPanel.add(right);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/596dfb68b9f7ff24bfe6ae8cb45139083217bbad",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/def033e1dab3117ea80d9d7cf84bab0a86f97235",
        "message": "NullPointerException => InternalException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253198 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_4",
        "file": [
            {
                "sha": "3034a41843f1843219b941c16a17b3b0d3d8babc",
                "filename": "src/org/apache/axis/AxisEngine.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/AxisEngine.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/AxisEngine.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=596dfb68b9f7ff24bfe6ae8cb45139083217bbad",
                "patch": "@@ -64,6 +64,7 @@\n import org.apache.axis.encoding.TypeMappingRegistry;\n import org.apache.axis.handlers.BasicHandler;\n import org.apache.axis.handlers.soap.SOAPService;\n+import org.apache.axis.InternalException;\n import org.apache.axis.session.Session;\n import org.apache.axis.session.SimpleSession;\n import org.apache.axis.utils.JavaUtils;\n@@ -176,8 +177,7 @@ public void init() {\n         try {\n             configProvider.configureEngine(this);\n         } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new NullPointerException(JavaUtils.getMessage(\"problemDeploying00\"));\n+            throw new InternalException(e);\n         }\n         \n         if (category.isDebugEnabled()) {"
            },
            {
                "sha": "1f7379fac325f7102b11ebfc4dd3566da640175a",
                "filename": "src/org/apache/axis/SimpleChain.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/SimpleChain.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/SimpleChain.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SimpleChain.java?ref=596dfb68b9f7ff24bfe6ae8cb45139083217bbad",
                "patch": "@@ -59,6 +59,7 @@\n import org.apache.axis.strategies.InvocationStrategy;\n import org.apache.axis.strategies.WSDLGenStrategy;\n import org.apache.axis.utils.JavaUtils;\n+import org.apache.axis.InternalException;\n import org.apache.log4j.Category;\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n@@ -171,11 +172,11 @@ public boolean canHandleBlock(QName qname) {\n \n     public void addHandler(Handler handler) {\n         if (handler == null)\n-            throw new NullPointerException(\n+            throw new InternalException(\n                     JavaUtils.getMessage(\"nullHandler00\", \"SimpleChain::addHandler\"));\n \n         if (invoked)\n-            throw new NullPointerException(\n+            throw new InternalException(\n                     JavaUtils.getMessage(\"addAfterInvoke00\", \"SimpleChain::addHandler\"));\n         \n         if ( handlers == null ) handlers = new Vector();"
            },
            {
                "sha": "804cb560a426f16972b7e5e4028d8087163b736d",
                "filename": "src/org/apache/axis/attachments/ManagedMemoryDataSource.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/attachments/ManagedMemoryDataSource.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/attachments/ManagedMemoryDataSource.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/attachments/ManagedMemoryDataSource.java?ref=596dfb68b9f7ff24bfe6ae8cb45139083217bbad",
                "patch": "@@ -55,7 +55,7 @@\n \n package org.apache.axis.attachments;\n import org.apache.log4j.Category;\n-\n+import org.apache.axis.InternalException;\n \n /**\n  * @author Rick Rineholt \n@@ -500,7 +500,7 @@ public int read(byte[] b, int off, int len) throws java.io.IOException {\n             if(debugEnabled) category.debug(hashCode() + \"read(\" + off + \", \" + len +\")\");\n             if(deleted) throw new java.io.IOException(\"Resource has been deleted.\");\n             if(readClosed) throw new java.io.IOException(\"Stream is closed.\");\n-            if (b == null) throw new NullPointerException(\n+            if (b == null) throw new InternalException(\n                  \"input buffer is null\");\n             if (off < 0)  throw new IndexOutOfBoundsException\n                 (\"Offset is negative: \" + off);"
            },
            {
                "sha": "a8184a48fc85c303df97ced9c62499d231f3a1a1",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=596dfb68b9f7ff24bfe6ae8cb45139083217bbad",
                "patch": "@@ -75,6 +75,7 @@\n import org.apache.axis.transport.http.HTTPConstants;\n import org.apache.axis.utils.JavaUtils;\n import org.apache.axis.attachments.AttachmentPart; \n+import org.apache.axis.InternalException;\n import javax.xml.rpc.encoding.XMLType ;\n \n import org.apache.log4j.Category;\n@@ -758,7 +759,7 @@ public static void setTransportForProtocol(String protocol,\n         if (Transport.class.isAssignableFrom(transportClass))\n             transports.put(protocol, transportClass);\n         else\n-            throw new NullPointerException();\n+            throw new InternalException(transportClass.toString());\n     }\n \n     /**"
            },
            {
                "sha": "2bb2b383e31d07237539a06841d245ff8a4d1ef3",
                "filename": "src/org/apache/axis/encoding/BeanSerializer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/encoding/BeanSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/encoding/BeanSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/BeanSerializer.java?ref=596dfb68b9f7ff24bfe6ae8cb45139083217bbad",
                "patch": "@@ -171,7 +171,7 @@ protected void setCls(Class cls) {\n                pd = processPropertyDescriptors(rawPd,cls);\n             } catch (Exception e) {\n                // this should never happen\n-               throw new NullPointerException(e.toString());\n+               throw new InternalException(e);\n             }\n             // If this is an enumeration class, delegate all serialization to the enum serializer\n             if (isEnumClass(cls)) {\n@@ -372,8 +372,7 @@ public Deserializer getDeserializer() {\n             try {\n                 bs.setValue(cls.newInstance());\n             } catch (Exception e) {\n-                // I'm not allowed to throw much, so I throw what I can!\n-                throw new NullPointerException(e.toString());\n+                throw new InternalException(e);\n             }\n \n             return bs;"
            },
            {
                "sha": "12eb620d37183a74502e2029cbbd4f9c90bce93d",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/596dfb68b9f7ff24bfe6ae8cb45139083217bbad/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=596dfb68b9f7ff24bfe6ae8cb45139083217bbad",
                "patch": "@@ -446,7 +446,6 @@ parseError00=Error in parsing:  {0}\n password00=Password:  {0}\n perhaps00=Perhaps there will be a form for invoking the service here...\n popHandler00=Popping handler {0}\n-problemDeploying00=Problem deploying!\n process00=Processing ''{0}''\n processFile00=Processing file {0}\n pushHandler00=Pushing handler {0}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/38b54116584973b87cb937faf914fcc0fe2c4e3a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/2776d977d4527ccd5feea5a82bde74ac96cc99e6",
        "message": "NullPointerException => InternalException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246126 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_5",
        "file": [
            {
                "sha": "3034a41843f1843219b941c16a17b3b0d3d8babc",
                "filename": "src/org/apache/axis/AxisEngine.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/AxisEngine.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/AxisEngine.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=38b54116584973b87cb937faf914fcc0fe2c4e3a",
                "patch": "@@ -64,6 +64,7 @@\n import org.apache.axis.encoding.TypeMappingRegistry;\n import org.apache.axis.handlers.BasicHandler;\n import org.apache.axis.handlers.soap.SOAPService;\n+import org.apache.axis.InternalException;\n import org.apache.axis.session.Session;\n import org.apache.axis.session.SimpleSession;\n import org.apache.axis.utils.JavaUtils;\n@@ -176,8 +177,7 @@ public void init() {\n         try {\n             configProvider.configureEngine(this);\n         } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new NullPointerException(JavaUtils.getMessage(\"problemDeploying00\"));\n+            throw new InternalException(e);\n         }\n         \n         if (category.isDebugEnabled()) {"
            },
            {
                "sha": "1f7379fac325f7102b11ebfc4dd3566da640175a",
                "filename": "src/org/apache/axis/SimpleChain.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/SimpleChain.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/SimpleChain.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SimpleChain.java?ref=38b54116584973b87cb937faf914fcc0fe2c4e3a",
                "patch": "@@ -59,6 +59,7 @@\n import org.apache.axis.strategies.InvocationStrategy;\n import org.apache.axis.strategies.WSDLGenStrategy;\n import org.apache.axis.utils.JavaUtils;\n+import org.apache.axis.InternalException;\n import org.apache.log4j.Category;\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n@@ -171,11 +172,11 @@ public boolean canHandleBlock(QName qname) {\n \n     public void addHandler(Handler handler) {\n         if (handler == null)\n-            throw new NullPointerException(\n+            throw new InternalException(\n                     JavaUtils.getMessage(\"nullHandler00\", \"SimpleChain::addHandler\"));\n \n         if (invoked)\n-            throw new NullPointerException(\n+            throw new InternalException(\n                     JavaUtils.getMessage(\"addAfterInvoke00\", \"SimpleChain::addHandler\"));\n         \n         if ( handlers == null ) handlers = new Vector();"
            },
            {
                "sha": "804cb560a426f16972b7e5e4028d8087163b736d",
                "filename": "src/org/apache/axis/attachments/ManagedMemoryDataSource.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/attachments/ManagedMemoryDataSource.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/attachments/ManagedMemoryDataSource.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/attachments/ManagedMemoryDataSource.java?ref=38b54116584973b87cb937faf914fcc0fe2c4e3a",
                "patch": "@@ -55,7 +55,7 @@\n \n package org.apache.axis.attachments;\n import org.apache.log4j.Category;\n-\n+import org.apache.axis.InternalException;\n \n /**\n  * @author Rick Rineholt \n@@ -500,7 +500,7 @@ public int read(byte[] b, int off, int len) throws java.io.IOException {\n             if(debugEnabled) category.debug(hashCode() + \"read(\" + off + \", \" + len +\")\");\n             if(deleted) throw new java.io.IOException(\"Resource has been deleted.\");\n             if(readClosed) throw new java.io.IOException(\"Stream is closed.\");\n-            if (b == null) throw new NullPointerException(\n+            if (b == null) throw new InternalException(\n                  \"input buffer is null\");\n             if (off < 0)  throw new IndexOutOfBoundsException\n                 (\"Offset is negative: \" + off);"
            },
            {
                "sha": "a8184a48fc85c303df97ced9c62499d231f3a1a1",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=38b54116584973b87cb937faf914fcc0fe2c4e3a",
                "patch": "@@ -75,6 +75,7 @@\n import org.apache.axis.transport.http.HTTPConstants;\n import org.apache.axis.utils.JavaUtils;\n import org.apache.axis.attachments.AttachmentPart; \n+import org.apache.axis.InternalException;\n import javax.xml.rpc.encoding.XMLType ;\n \n import org.apache.log4j.Category;\n@@ -758,7 +759,7 @@ public static void setTransportForProtocol(String protocol,\n         if (Transport.class.isAssignableFrom(transportClass))\n             transports.put(protocol, transportClass);\n         else\n-            throw new NullPointerException();\n+            throw new InternalException(transportClass.toString());\n     }\n \n     /**"
            },
            {
                "sha": "2bb2b383e31d07237539a06841d245ff8a4d1ef3",
                "filename": "src/org/apache/axis/encoding/BeanSerializer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/encoding/BeanSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/encoding/BeanSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/BeanSerializer.java?ref=38b54116584973b87cb937faf914fcc0fe2c4e3a",
                "patch": "@@ -171,7 +171,7 @@ protected void setCls(Class cls) {\n                pd = processPropertyDescriptors(rawPd,cls);\n             } catch (Exception e) {\n                // this should never happen\n-               throw new NullPointerException(e.toString());\n+               throw new InternalException(e);\n             }\n             // If this is an enumeration class, delegate all serialization to the enum serializer\n             if (isEnumClass(cls)) {\n@@ -372,8 +372,7 @@ public Deserializer getDeserializer() {\n             try {\n                 bs.setValue(cls.newInstance());\n             } catch (Exception e) {\n-                // I'm not allowed to throw much, so I throw what I can!\n-                throw new NullPointerException(e.toString());\n+                throw new InternalException(e);\n             }\n \n             return bs;"
            },
            {
                "sha": "12eb620d37183a74502e2029cbbd4f9c90bce93d",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/38b54116584973b87cb937faf914fcc0fe2c4e3a/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=38b54116584973b87cb937faf914fcc0fe2c4e3a",
                "patch": "@@ -446,7 +446,6 @@ parseError00=Error in parsing:  {0}\n password00=Password:  {0}\n perhaps00=Perhaps there will be a form for invoking the service here...\n popHandler00=Popping handler {0}\n-problemDeploying00=Problem deploying!\n process00=Processing ''{0}''\n processFile00=Processing file {0}\n pushHandler00=Pushing handler {0}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/485551e8b6f478c1056147cbe8739b54b5c8c6dc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/d0d0c9c481b673a4d5bd8b8f6cc714637e927193",
        "message": "fix NPE reported on axis-user, where classpath defined and extraClasses undefined caused the NPE. Fix is just a check first\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255824 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_6",
        "file": [
            {
                "sha": "6f6e7f6496074763c54fcb389cd68352dbd02f47",
                "filename": "tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/485551e8b6f478c1056147cbe8739b54b5c8c6dc/tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/485551e8b6f478c1056147cbe8739b54b5c8c6dc/tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java?ref=485551e8b6f478c1056147cbe8739b54b5c8c6dc",
                "patch": "@@ -173,10 +173,14 @@ public void execute() throws BuildException {\n               Project.MSG_VERBOSE);\n             ClassUtils.setClassLoader(className, cl);\n             ClassUtils.setClassLoader(implClass, cl);\n-            StringTokenizer tokenizer = new StringTokenizer(extraClasses, \" ,\");\n-            while (tokenizer.hasMoreTokens()) {\n-                String clsName = tokenizer.nextToken();\n-                ClassUtils.setClassLoader(clsName, cl);\n+            //add extra classes to the classpath when the classpath attr is not null\n+            //??why do we do this? Why don't we do this when the classpath is unset?\n+            if(extraClasses!=null) {\n+                StringTokenizer tokenizer = new StringTokenizer(extraClasses, \" ,\");\n+                while (tokenizer.hasMoreTokens()) {\n+                    String clsName = tokenizer.nextToken();\n+                    ClassUtils.setClassLoader(clsName, cl);\n+                }\n             }\n         }\n         try {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/43f88509e82ba688825ce5c9903c47b81e3aa1cb",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f2936c8da03f69d1aa398ed719af9d37626262aa",
        "message": "fix NPE reported on axis-user, where classpath defined and extraClasses undefined caused the NPE. Fix is just a check first\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248755 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_7",
        "file": [
            {
                "sha": "6f6e7f6496074763c54fcb389cd68352dbd02f47",
                "filename": "tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/43f88509e82ba688825ce5c9903c47b81e3aa1cb/tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/43f88509e82ba688825ce5c9903c47b81e3aa1cb/tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/tools/org/apache/axis/tools/ant/wsdl/Java2WsdlAntTask.java?ref=43f88509e82ba688825ce5c9903c47b81e3aa1cb",
                "patch": "@@ -173,10 +173,14 @@ public void execute() throws BuildException {\n               Project.MSG_VERBOSE);\n             ClassUtils.setClassLoader(className, cl);\n             ClassUtils.setClassLoader(implClass, cl);\n-            StringTokenizer tokenizer = new StringTokenizer(extraClasses, \" ,\");\n-            while (tokenizer.hasMoreTokens()) {\n-                String clsName = tokenizer.nextToken();\n-                ClassUtils.setClassLoader(clsName, cl);\n+            //add extra classes to the classpath when the classpath attr is not null\n+            //??why do we do this? Why don't we do this when the classpath is unset?\n+            if(extraClasses!=null) {\n+                StringTokenizer tokenizer = new StringTokenizer(extraClasses, \" ,\");\n+                while (tokenizer.hasMoreTokens()) {\n+                    String clsName = tokenizer.nextToken();\n+                    ClassUtils.setClassLoader(clsName, cl);\n+                }\n             }\n         }\n         try {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/75ec4fcd6b29963a1b9610fbffd873269a4b8a4d",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/7826c91a5eaa4616c9d9a8bf29dcca39198a83ae",
        "message": "Fix for AXIS-2129 - NullPointerException sending array of org.w3c.dom.Elements\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@261723 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_8",
        "file": [
            {
                "sha": "250ca24b195780da75d204bf6903f8178530ef43",
                "filename": "src/org/apache/axis/utils/ArrayUtil.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/75ec4fcd6b29963a1b9610fbffd873269a4b8a4d/src/org/apache/axis/utils/ArrayUtil.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/75ec4fcd6b29963a1b9610fbffd873269a4b8a4d/src/org/apache/axis/utils/ArrayUtil.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/ArrayUtil.java?ref=75ec4fcd6b29963a1b9610fbffd873269a4b8a4d",
                "patch": "@@ -150,7 +150,7 @@ private static BeanPropertyDescriptor getArrayComponentPD(Class clazz) {\n         BeanPropertyDescriptor bpd = null;\n         int count = 0;\n         Class cls = clazz;\n-        while (!cls.getName().equals(\"java.lang.Object\")) {                 \n+        while (cls != null && cls.getName() != null && !cls.getName().equals(\"java.lang.Object\")) {                 \n             BeanPropertyDescriptor bpds[] = BeanUtils.getPd(clazz);\n             for (int i = 0; i < bpds.length; i++) {             \n                 BeanPropertyDescriptor pd = bpds[i];"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/37cf25289aace1a653e34f0226c4bf0b2ea7da3e",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/ee93b345c36023fbeb235f8b7ce6fca633df649a",
        "message": "Fix for AXIS-1617 - WSDL2Java throw NullPointerException instead of useful error message when doesn't find Part\nfrom S\ufffdbastien Tardif\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@259542 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_9",
        "file": [
            {
                "sha": "f98848b39e46b8614bbc9c368a462b148b464992",
                "filename": "src/org/apache/axis/i18n/resource.properties",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/37cf25289aace1a653e34f0226c4bf0b2ea7da3e/src/org/apache/axis/i18n/resource.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/37cf25289aace1a653e34f0226c4bf0b2ea7da3e/src/org/apache/axis/i18n/resource.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/i18n/resource.properties?ref=37cf25289aace1a653e34f0226c4bf0b2ea7da3e",
                "patch": "@@ -1245,4 +1245,6 @@ incompatibleSEI00=Incompatible service endpoint interface: {0}\n \n indexOutOfBoundsException00=IndexOutOfBoundsException:\n \n-saxToDomFailed00=Exception caught while converting attributes from SAX to DOM\n\\ No newline at end of file\n+saxToDomFailed00=Exception caught while converting attributes from SAX to DOM\n+\n+cannotFindPartForOperation00=Cannot find part [{0}] for operation [{1}] using MIMEContent type [{2}] \n\\ No newline at end of file"
            },
            {
                "sha": "e4202a7c58b4a022ec33749a36f7cf7c090b7557",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/37cf25289aace1a653e34f0226c4bf0b2ea7da3e/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/37cf25289aace1a653e34f0226c4bf0b2ea7da3e/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=37cf25289aace1a653e34f0226c4bf0b2ea7da3e",
                "patch": "@@ -2879,6 +2879,10 @@ private Use addMIMETypes(\n                 if (obj instanceof MIMEContent) {\n                     MIMEContent content = (MIMEContent) obj;\n                     TypeEntry typeEntry = findPart(op, content.getPart());\n+                    if (typeEntry == null) {\n+                        throw new RuntimeException(Messages.getMessage(\"cannotFindPartForOperation00\", content.getPart(),\n+                                op.getName(), content.getType()));\n+                    }\n                     String dims = typeEntry.getDimensions();\n \n                     if ((dims.length() <= 0)"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/12be73c96b4512273601dede62bfbacc5bf90422",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/9530731e806aec29df9ba6a7faec1a580df65325",
        "message": "Fix for Bug 18321 - NullPointerException with Faults in early invocation stages\nfrom Oliver.Adler@syracom.de (Oliver Adler)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256115 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_10",
        "file": [
            {
                "sha": "79cc64f944808da7d3b21e543ee2e6db307f9efb",
                "filename": "src/org/apache/axis/message/SOAPFault.java",
                "status": "modified",
                "additions": 8,
                "deletions": 3,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/12be73c96b4512273601dede62bfbacc5bf90422/src/org/apache/axis/message/SOAPFault.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/12be73c96b4512273601dede62bfbacc5bf90422/src/org/apache/axis/message/SOAPFault.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFault.java?ref=12be73c96b4512273601dede62bfbacc5bf90422",
                "patch": "@@ -57,6 +57,7 @@\n import org.apache.axis.AxisFault;\n import org.apache.axis.Constants;\n import org.apache.axis.description.FaultDesc;\n+import org.apache.axis.description.OperationDesc;\n import org.apache.axis.encoding.DeserializationContext;\n import org.apache.axis.encoding.SerializationContext;\n import org.apache.axis.soap.SOAPConstants;\n@@ -180,9 +181,13 @@ public void outputImpl(SerializationContext context)\n             Class cls = fault.getClass();\n             QName qname = null;\n             if (! cls.equals(AxisFault.class)) {\n-                FaultDesc faultDesc = \n-                        context.getMessageContext().getOperation().getFaultByClass(cls);\n-\t\tif (faultDesc != null) {\n+\t\t\t\tFaultDesc faultDesc = null;\n+                OperationDesc op = context.getMessageContext().getOperation();\n+                if(op != null) {\n+\t\t\t\t\tfaultDesc = op.getFaultByClass(cls);\n+                }\n+                \n+\t\t\t\tif (faultDesc != null) {\n                     qname = faultDesc.getQName();\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7a12a509f0ee8874e1b715409cd78f94db17b18a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/898a93af0bef5cc40325a6886fba57c649574844",
        "message": "Fix for Bug 18321 - NullPointerException with Faults in early invocation stages\nfrom Oliver.Adler@syracom.de (Oliver Adler)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249046 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_11",
        "file": [
            {
                "sha": "79cc64f944808da7d3b21e543ee2e6db307f9efb",
                "filename": "src/org/apache/axis/message/SOAPFault.java",
                "status": "modified",
                "additions": 8,
                "deletions": 3,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/7a12a509f0ee8874e1b715409cd78f94db17b18a/src/org/apache/axis/message/SOAPFault.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7a12a509f0ee8874e1b715409cd78f94db17b18a/src/org/apache/axis/message/SOAPFault.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFault.java?ref=7a12a509f0ee8874e1b715409cd78f94db17b18a",
                "patch": "@@ -57,6 +57,7 @@\n import org.apache.axis.AxisFault;\n import org.apache.axis.Constants;\n import org.apache.axis.description.FaultDesc;\n+import org.apache.axis.description.OperationDesc;\n import org.apache.axis.encoding.DeserializationContext;\n import org.apache.axis.encoding.SerializationContext;\n import org.apache.axis.soap.SOAPConstants;\n@@ -180,9 +181,13 @@ public void outputImpl(SerializationContext context)\n             Class cls = fault.getClass();\n             QName qname = null;\n             if (! cls.equals(AxisFault.class)) {\n-                FaultDesc faultDesc = \n-                        context.getMessageContext().getOperation().getFaultByClass(cls);\n-\t\tif (faultDesc != null) {\n+\t\t\t\tFaultDesc faultDesc = null;\n+                OperationDesc op = context.getMessageContext().getOperation();\n+                if(op != null) {\n+\t\t\t\t\tfaultDesc = op.getFaultByClass(cls);\n+                }\n+                \n+\t\t\t\tif (faultDesc != null) {\n                     qname = faultDesc.getQName();\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/fa038fd7036c770410c6270230fd6e809f9232a0",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/cd56c0e0d3cd70fab3357454e7bf46704a4d1f37",
        "message": "Fix for Bug 17169 - NullPointerException when processing WSDL with attachments from MS SOAP Toolkit\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256027 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_12",
        "file": [
            {
                "sha": "d1f4f8117313e23645ed59875c602477b4072cc8",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/fa038fd7036c770410c6270230fd6e809f9232a0/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/fa038fd7036c770410c6270230fd6e809f9232a0/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=fa038fd7036c770410c6270230fd6e809f9232a0",
                "patch": "@@ -1947,11 +1947,13 @@ private void fillInDIMEInformation(UnknownExtensibilityElement unkElement, boole\n                              }\n                          }\n                      }\n-                     org.w3c.dom.Element e = (org.w3c.dom.Element)XMLUtils.findNode(element, new QName(Constants.URI_DIME_CONTENT, \"mediaType\"));\n-                     if(e != null){\n-                         String value = e.getAttribute(\"value\");\n-                         bEntry.setOperationDIME(operation.getName());\n-                         bEntry.setMIMEInfo(operation.getName(), part.getName(), value, dims);\n+                     if(element != null) {\n+                         org.w3c.dom.Element e = (org.w3c.dom.Element)XMLUtils.findNode(element, new QName(Constants.URI_DIME_CONTENT, \"mediaType\"));\n+                         if(e != null){\n+                             String value = e.getAttribute(\"value\");\n+                             bEntry.setOperationDIME(operation.getName());\n+                             bEntry.setMIMEInfo(operation.getName(), part.getName(), value, dims);\n+                         }\n                      }\n                  }\n              }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/dffcd326116fee6e0589342365da07991f4720c3",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/8922da88e7fbf8895dc7b81133d4ea821ad7e83b",
        "message": "Fix for Bug 17169 - NullPointerException when processing WSDL with attachments from MS SOAP Toolkit\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248958 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_13",
        "file": [
            {
                "sha": "d1f4f8117313e23645ed59875c602477b4072cc8",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/dffcd326116fee6e0589342365da07991f4720c3/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dffcd326116fee6e0589342365da07991f4720c3/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=dffcd326116fee6e0589342365da07991f4720c3",
                "patch": "@@ -1947,11 +1947,13 @@ private void fillInDIMEInformation(UnknownExtensibilityElement unkElement, boole\n                              }\n                          }\n                      }\n-                     org.w3c.dom.Element e = (org.w3c.dom.Element)XMLUtils.findNode(element, new QName(Constants.URI_DIME_CONTENT, \"mediaType\"));\n-                     if(e != null){\n-                         String value = e.getAttribute(\"value\");\n-                         bEntry.setOperationDIME(operation.getName());\n-                         bEntry.setMIMEInfo(operation.getName(), part.getName(), value, dims);\n+                     if(element != null) {\n+                         org.w3c.dom.Element e = (org.w3c.dom.Element)XMLUtils.findNode(element, new QName(Constants.URI_DIME_CONTENT, \"mediaType\"));\n+                         if(e != null){\n+                             String value = e.getAttribute(\"value\");\n+                             bEntry.setOperationDIME(operation.getName());\n+                             bEntry.setMIMEInfo(operation.getName(), part.getName(), value, dims);\n+                         }\n                      }\n                  }\n              }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/2592d16c77e3c4163b5e09ee1169be69ba0f1419",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a649012b89792f49567fdf824da9507dd9b948cf",
        "message": "Fix for  15669 - W2DL2Java - NullPointerException if PortType for Port is missing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255804 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_14",
        "file": [
            {
                "sha": "93345215b2c6fb37932bbe0bd0464baf09060415",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/2592d16c77e3c4163b5e09ee1169be69ba0f1419/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2592d16c77e3c4163b5e09ee1169be69ba0f1419/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=2592d16c77e3c4163b5e09ee1169be69ba0f1419",
                "patch": "@@ -2115,9 +2115,11 @@ private void setServiceReferences(\n         while (ports.hasNext()) {\n             Port port = (Port) ports.next();\n             Binding binding = port.getBinding();\n-            BindingEntry bEntry = getBindingEntry(binding.getQName());\n-            if (bEntry != null) {\n-                setBindingReferences(bEntry, def, doc);\n+            if(binding != null) {\n+                BindingEntry bEntry = getBindingEntry(binding.getQName());\n+                if (bEntry != null) {\n+                    setBindingReferences(bEntry, def, doc);\n+                }\n             }\n         }\n     } // setServiceReferences"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7ac07cf2f412ddc98de14f9d4b04f584c60992f3",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/329ad7a76a0db086792f66e6f9b5aa9c7a5f9861",
        "message": "Fix for  15669 - W2DL2Java - NullPointerException if PortType for Port is missing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248735 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_15",
        "file": [
            {
                "sha": "93345215b2c6fb37932bbe0bd0464baf09060415",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/7ac07cf2f412ddc98de14f9d4b04f584c60992f3/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7ac07cf2f412ddc98de14f9d4b04f584c60992f3/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=7ac07cf2f412ddc98de14f9d4b04f584c60992f3",
                "patch": "@@ -2115,9 +2115,11 @@ private void setServiceReferences(\n         while (ports.hasNext()) {\n             Port port = (Port) ports.next();\n             Binding binding = port.getBinding();\n-            BindingEntry bEntry = getBindingEntry(binding.getQName());\n-            if (bEntry != null) {\n-                setBindingReferences(bEntry, def, doc);\n+            if(binding != null) {\n+                BindingEntry bEntry = getBindingEntry(binding.getQName());\n+                if (bEntry != null) {\n+                    setBindingReferences(bEntry, def, doc);\n+                }\n             }\n         }\n     } // setServiceReferences"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f3223f270a93435d59451507ed8f1b3038b3c600",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/4c2010175da6588e9468b396282ec6a07a8924fe",
        "message": "Fix for Bug 14140 - getNamespacePrefixes of MessageElement throws a NullPointerException if no namespaces have been declared.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255637 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_16",
        "file": [
            {
                "sha": "7675c1a6d826cb51d09baa39255013352339ed37",
                "filename": "src/org/apache/axis/message/MessageElement.java",
                "status": "modified",
                "additions": 16,
                "deletions": 22,
                "changes": 38,
                "blob_url": "https://github.com/apache/axis1-java/blob/f3223f270a93435d59451507ed8f1b3038b3c600/src/org/apache/axis/message/MessageElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f3223f270a93435d59451507ed8f1b3038b3c600/src/org/apache/axis/message/MessageElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/MessageElement.java?ref=f3223f270a93435d59451507ed8f1b3038b3c600",
                "patch": "@@ -143,7 +143,7 @@\n \n     protected MessageElement parent = null;\n \n-    public ArrayList namespaces = null;\n+    public ArrayList namespaces = new ArrayList();\n \n     /** Our encoding style, if any */\n     protected String encodingStyle = null;\n@@ -301,9 +301,9 @@ public void setEndIndex(int endIndex)\n      * @return Attributes collection\n      */\n     public Attributes getCompleteAttributes() {\n-        if (namespaces == null)\n+        if (namespaces.size()==0)\n             return attributes;\n-\n+        \n         AttributesImpl attrs = null;\n         if (attributes == NullAttributes.singleton)\n             attrs = new AttributesImpl();\n@@ -447,7 +447,8 @@ public void setContentsIndex(int index)\n \n     public void setNSMappings(ArrayList namespaces)\n     {\n-        this.namespaces = namespaces;\n+        if(namespaces != null)\n+            this.namespaces = namespaces;\n     }\n \n     public String getPrefix(String namespaceURI) {\n@@ -458,12 +459,10 @@ public String getPrefix(String namespaceURI) {\n             return getRealElement().getPrefix(namespaceURI);\n         }\n \n-        if (namespaces != null) {\n-            for (int i = 0; i < namespaces.size(); i++) {\n-                Mapping map = (Mapping)namespaces.get(i);\n-                if (map.getNamespaceURI().equals(namespaceURI))\n-                    return map.getPrefix();\n-            }\n+        for (int i = 0; i < namespaces.size(); i++) {\n+            Mapping map = (Mapping)namespaces.get(i);\n+            if (map.getNamespaceURI().equals(namespaceURI))\n+                return map.getPrefix();\n         }\n \n         if (parent != null)\n@@ -480,12 +479,10 @@ public String getNamespaceURI(String prefix) {\n             return getRealElement().getNamespaceURI(prefix);\n         }\n \n-        if (namespaces != null) {\n-            for (int i = 0; i < namespaces.size(); i++) {\n-                Mapping map = (Mapping)namespaces.get(i);\n-                if (map.getPrefix().equals(prefix)) {\n-                    return map.getNamespaceURI();\n-                }\n+        for (int i = 0; i < namespaces.size(); i++) {\n+            Mapping map = (Mapping)namespaces.get(i);\n+            if (map.getPrefix().equals(prefix)) {\n+                return map.getNamespaceURI();\n             }\n         }\n \n@@ -783,11 +780,9 @@ protected void outputImpl(SerializationContext context) throws Exception\n         if (prefix != null)\n             context.registerPrefixForURI(prefix, namespaceURI);\n \n-        if (namespaces != null) {\n-            for (Iterator i = namespaces.iterator(); i.hasNext();) {\n-                Mapping mapping = (Mapping) i.next();\n-                context.registerPrefixForURI(mapping.getPrefix(), mapping.getNamespaceURI());\n-            }\n+        for (Iterator i = namespaces.iterator(); i.hasNext();) {\n+            Mapping mapping = (Mapping) i.next();\n+            context.registerPrefixForURI(mapping.getPrefix(), mapping.getNamespaceURI());\n         }\n \n         if (objectValue != null) {\n@@ -817,7 +812,6 @@ public String toString() {\n     }\n \n     public void addMapping(Mapping map) {\n-        if (namespaces == null) namespaces = new ArrayList();\n         namespaces.add(map);\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/78e9d10f0617ee3bd8922b662f79e6ea0e488cd6",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/aa6cd2080f59fe08fbc80ed7bf88d25a8f375e13",
        "message": "Fix for Bug 14140 - getNamespacePrefixes of MessageElement throws a NullPointerException if no namespaces have been declared.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248568 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_17",
        "file": [
            {
                "sha": "7675c1a6d826cb51d09baa39255013352339ed37",
                "filename": "src/org/apache/axis/message/MessageElement.java",
                "status": "modified",
                "additions": 16,
                "deletions": 22,
                "changes": 38,
                "blob_url": "https://github.com/apache/axis1-java/blob/78e9d10f0617ee3bd8922b662f79e6ea0e488cd6/src/org/apache/axis/message/MessageElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/78e9d10f0617ee3bd8922b662f79e6ea0e488cd6/src/org/apache/axis/message/MessageElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/MessageElement.java?ref=78e9d10f0617ee3bd8922b662f79e6ea0e488cd6",
                "patch": "@@ -143,7 +143,7 @@\n \n     protected MessageElement parent = null;\n \n-    public ArrayList namespaces = null;\n+    public ArrayList namespaces = new ArrayList();\n \n     /** Our encoding style, if any */\n     protected String encodingStyle = null;\n@@ -301,9 +301,9 @@ public void setEndIndex(int endIndex)\n      * @return Attributes collection\n      */\n     public Attributes getCompleteAttributes() {\n-        if (namespaces == null)\n+        if (namespaces.size()==0)\n             return attributes;\n-\n+        \n         AttributesImpl attrs = null;\n         if (attributes == NullAttributes.singleton)\n             attrs = new AttributesImpl();\n@@ -447,7 +447,8 @@ public void setContentsIndex(int index)\n \n     public void setNSMappings(ArrayList namespaces)\n     {\n-        this.namespaces = namespaces;\n+        if(namespaces != null)\n+            this.namespaces = namespaces;\n     }\n \n     public String getPrefix(String namespaceURI) {\n@@ -458,12 +459,10 @@ public String getPrefix(String namespaceURI) {\n             return getRealElement().getPrefix(namespaceURI);\n         }\n \n-        if (namespaces != null) {\n-            for (int i = 0; i < namespaces.size(); i++) {\n-                Mapping map = (Mapping)namespaces.get(i);\n-                if (map.getNamespaceURI().equals(namespaceURI))\n-                    return map.getPrefix();\n-            }\n+        for (int i = 0; i < namespaces.size(); i++) {\n+            Mapping map = (Mapping)namespaces.get(i);\n+            if (map.getNamespaceURI().equals(namespaceURI))\n+                return map.getPrefix();\n         }\n \n         if (parent != null)\n@@ -480,12 +479,10 @@ public String getNamespaceURI(String prefix) {\n             return getRealElement().getNamespaceURI(prefix);\n         }\n \n-        if (namespaces != null) {\n-            for (int i = 0; i < namespaces.size(); i++) {\n-                Mapping map = (Mapping)namespaces.get(i);\n-                if (map.getPrefix().equals(prefix)) {\n-                    return map.getNamespaceURI();\n-                }\n+        for (int i = 0; i < namespaces.size(); i++) {\n+            Mapping map = (Mapping)namespaces.get(i);\n+            if (map.getPrefix().equals(prefix)) {\n+                return map.getNamespaceURI();\n             }\n         }\n \n@@ -783,11 +780,9 @@ protected void outputImpl(SerializationContext context) throws Exception\n         if (prefix != null)\n             context.registerPrefixForURI(prefix, namespaceURI);\n \n-        if (namespaces != null) {\n-            for (Iterator i = namespaces.iterator(); i.hasNext();) {\n-                Mapping mapping = (Mapping) i.next();\n-                context.registerPrefixForURI(mapping.getPrefix(), mapping.getNamespaceURI());\n-            }\n+        for (Iterator i = namespaces.iterator(); i.hasNext();) {\n+            Mapping mapping = (Mapping) i.next();\n+            context.registerPrefixForURI(mapping.getPrefix(), mapping.getNamespaceURI());\n         }\n \n         if (objectValue != null) {\n@@ -817,7 +812,6 @@ public String toString() {\n     }\n \n     public void addMapping(Mapping map) {\n-        if (namespaces == null) namespaces = new ArrayList();\n         namespaces.add(map);\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/6193eb5a86436db89b1ad57b92852449de01ac39",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0dac465935eb1247d6c8359f3a2f7282de5b6881",
        "message": "Fix and test case from zeyn.saigol@mediasurface.com for Bug 11726 - Incorrect overloaded method invoked - NullPointerException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255087 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_18",
        "file": [
            {
                "sha": "1eaa0f72e5785c5a0a6f5f41053e839b6791cbec",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 17,
                "deletions": 0,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/6193eb5a86436db89b1ad57b92852449de01ac39/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6193eb5a86436db89b1ad57b92852449de01ac39/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=6193eb5a86436db89b1ad57b92852449de01ac39",
                "patch": "@@ -78,6 +78,8 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.StringTokenizer;\n+import java.util.Collections;\n+import java.util.Comparator;\n \n \n /**\n@@ -444,6 +446,21 @@ public OperationDesc getOperationByElementQName(QName qname)\n         getSyncedOperationsForName(implClass,\n                                    ((OperationDesc)overloads.get(0)).getName());\n \n+        // Sort the overloads by number of arguments - prevents us calling methods\n+        // with more parameters than supplied in the request (with missing parameters\n+        // defaulted to null) when a perfectly good method exists with exactly the\n+        // supplied parameters.\n+        Collections.sort(overloads,\n+            new Comparator() {\n+                public int compare(Object o1, Object o2)\n+                {\n+                    Method meth1 = ((OperationDesc)o1).getMethod();\n+                    Method meth2 = ((OperationDesc)o2).getMethod();\n+                    return (meth1.getParameterTypes().length -\n+                                         meth2.getParameterTypes().length);\n+                }\n+            });\n+\n         OperationDesc [] array = new OperationDesc [overloads.size()];\n         return (OperationDesc[])overloads.toArray(array);\n     }"
            },
            {
                "sha": "7440be44fa216128599bb256b6702e9049ce483b",
                "filename": "test/RPCDispatch/Service.java",
                "status": "modified",
                "additions": 28,
                "deletions": 4,
                "changes": 32,
                "blob_url": "https://github.com/apache/axis1-java/blob/6193eb5a86436db89b1ad57b92852449de01ac39/test/RPCDispatch/Service.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6193eb5a86436db89b1ad57b92852449de01ac39/test/RPCDispatch/Service.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/Service.java?ref=6193eb5a86436db89b1ad57b92852449de01ac39",
                "patch": "@@ -74,24 +74,48 @@ public String argAsDOM(Data input) throws Exception {\n     public Integer echoInt(Integer value) throws Exception {\n        return value;\n     }\n-    \n+\n+    /**\n+     * Return the boolean and String arguments concatenated\n+     */\n+    public String overloaded(boolean b, String s)\n+    {\n+        return b + s;\n+    }\n+\n+    /**\n+     * Return the String and boolean arguments concatenated\n+     */\n+    public String overloaded(String s, boolean b)\n+    {\n+        return s + b;\n+    }\n+\n     /**\n      * Return the boolean value passed in\n-     */ \n+     */\n     public boolean overloaded(boolean b)\n     {\n         return b;\n     }\n-    \n+\n     /**\n      * Return the int passed in (this and the function above test overloaded\n      * method dispatch)\n-     */ \n+     */\n     public int overloaded(int i)\n     {\n         return i;\n     }\n \n+    /**\n+     * Return the int and String arguments concatenated\n+     */\n+    public String overloaded(int i, String s)\n+    {\n+        return i + s;\n+    }\n+\n     /**\n      * Simple exception to be used in generating faults\n      */"
            },
            {
                "sha": "b5573b439d0335a8ae8f1c0ac5ebd9d9204996ab",
                "filename": "test/RPCDispatch/TestSerializedRPC.java",
                "status": "modified",
                "additions": 46,
                "deletions": 22,
                "changes": 68,
                "blob_url": "https://github.com/apache/axis1-java/blob/6193eb5a86436db89b1ad57b92852449de01ac39/test/RPCDispatch/TestSerializedRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6193eb5a86436db89b1ad57b92852449de01ac39/test/RPCDispatch/TestSerializedRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestSerializedRPC.java?ref=6193eb5a86436db89b1ad57b92852449de01ac39",
                "patch": "@@ -45,7 +45,7 @@\n \n     private SimpleProvider provider = new SimpleProvider();\n     private AxisServer engine = new AxisServer(provider);\n-    \n+\n     String firstParamName = null;\n     String secondParamName = null;\n \n@@ -60,7 +60,7 @@ public TestSerializedRPC(String name) throws Exception {\n         reverse.setOption(\"className\", \"test.RPCDispatch.Service\");\n         reverse.setOption(\"allowedMethods\", \"*\");\n         provider.deployService(SOAPAction, reverse);\n-        \n+\n         // And deploy the type mapping\n         Class javaType = Data.class;\n         QName xmlType = new QName(\"urn:foo\", \"Data\");\n@@ -78,14 +78,14 @@ public TestSerializedRPC(String name) throws Exception {\n         ServiceDesc desc = new ServiceDesc();\n         desc.loadServiceDescByIntrospection(Service.class, tm);\n         reverse.setServiceDescription(desc);\n-        \n+\n         // Now we've got the service description loaded up.  We're going to\n         // be testing parameter dispatch by name, so if debug info isn't\n         // compiled into the Service class, the names are going to be \"in0\",\n         // etc.  Make sure they match.\n         OperationDesc oper = desc.getOperationByName(\"concatenate\");\n         assertNotNull(oper);\n-        \n+\n         firstParamName = oper.getParameter(0).getName();\n         secondParamName = oper.getParameter(1).getName();\n     }\n@@ -103,7 +103,7 @@ private final Object rpc(String method, String bodyStr,\n \n         // Create the message context\n         MessageContext msgContext = new MessageContext(engine);\n-        \n+\n         // Set the dispatch either by SOAPAction or methodNS\n         String methodNS = \"urn:dont.match.me\";\n         if (setService) {\n@@ -120,7 +120,7 @@ private final Object rpc(String method, String bodyStr,\n                         bodyElemFoot + footer;\n         msgContext.setRequestMessage(new Message(msgStr));\n         msgContext.setTypeMappingRegistry(engine.getTypeMappingRegistry());\n-        \n+\n         // Invoke the Axis engine\n         try {\n             engine.invoke(msgContext);\n@@ -162,7 +162,7 @@ public void testSerReverseBodyDispatch() throws Exception {\n         // invoke the service and verify the result\n         assertEquals(\"Did not reverse the string as expected\", \"cba\", rpc(\"reverseString\", arg, false));\n     }\n-    \n+\n     /**\n      * Test a method that reverses a data structure\n      */\n@@ -174,7 +174,7 @@ public void testSerReverseData() throws Exception {\n         Data expected = new Data(3, \"cba\", 5);\n         assertEquals(\"Did not reverse data as expected\", expected, rpc(\"reverseData\", arg, true));\n     }\n-    \n+\n     /**\n      * Test a method that reverses a data structure\n      */\n@@ -208,30 +208,54 @@ public void testArgAsDOM() throws Exception {\n         String arg = \"<arg0 xmlns:foo=\\\"urn:foo\\\">\";\n         arg += \"<field1>5</field1><field2>abc</field2><field3>3</field3>\";\n         arg += \"</arg0>\";\n-        \n+\n         // invoke the service and verify the result\n         assertEquals(\"Did not echo arg correctly.\", arg, rpc(\"argAsDOM\", arg, true));\n     }\n-    \n+\n     /**\n      * Test overloaded method dispatch without the benefit of xsi:types\n-     */ \n+     */\n     public void testOverloadedMethodDispatch() throws Exception\n     {\n-        // invoke the service and verify the result\n+        // invoke the service for each overloaded method, and verify the results\n+\n+        // boolean\n         String arg = \"<arg0>true</arg0>\";\n-        Boolean expected = Boolean.TRUE;\n-        assertEquals(\"Overloaded method test failed with a boolean\", \n-                     expected, \n-                     rpc(\"overloaded\", arg, true));        \n-        \n+        Object expected = Boolean.TRUE;\n+        assertEquals(\"Overloaded method test failed with a boolean\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // boolean, string\n+        arg = \"<arg0>true</arg0><arg1>hello world</arg1>\";\n+        expected = Boolean.TRUE + \"hello world\";\n+        assertEquals(\"Overloaded method test failed with boolean, string\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // string, boolean\n+        arg = \"<arg0>hello world</arg0><arg1>true</arg1>\";\n+        expected = \"hello world\" + Boolean.TRUE;\n+        assertEquals(\"Overloaded method test failed with string, boolean\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // int\n         arg = \"<arg0>5</arg0>\";\n-        Integer expectedInt = new Integer(5);\n-        assertEquals(\"Overloaded method test failed with an int\", \n-                     expectedInt, \n-                     rpc(\"overloaded\", arg, true));        \n+        expected = new Integer(5);\n+        assertEquals(\"Overloaded method test failed with an int\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // int, string\n+        arg = \"<arg0>5</arg0><arg1>hello world</arg1>\";\n+        expected = 5 + \"hello world\";\n+        assertEquals(\"Overloaded method test failed with int, string\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n     }\n-    \n+\n     public static void main(String args[]) {\n       try {\n         TestSerializedRPC tester = new TestSerializedRPC(\"Test Serialized RPC\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/798ab4930334bcfcf37b3458f041313850ac5606",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/1900765ef641ac0d6b87668855272038e09466b3",
        "message": "Fix and test case from zeyn.saigol@mediasurface.com for Bug 11726 - Incorrect overloaded method invoked - NullPointerException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248016 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_19",
        "file": [
            {
                "sha": "1eaa0f72e5785c5a0a6f5f41053e839b6791cbec",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 17,
                "deletions": 0,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/798ab4930334bcfcf37b3458f041313850ac5606/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/798ab4930334bcfcf37b3458f041313850ac5606/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=798ab4930334bcfcf37b3458f041313850ac5606",
                "patch": "@@ -78,6 +78,8 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.StringTokenizer;\n+import java.util.Collections;\n+import java.util.Comparator;\n \n \n /**\n@@ -444,6 +446,21 @@ public OperationDesc getOperationByElementQName(QName qname)\n         getSyncedOperationsForName(implClass,\n                                    ((OperationDesc)overloads.get(0)).getName());\n \n+        // Sort the overloads by number of arguments - prevents us calling methods\n+        // with more parameters than supplied in the request (with missing parameters\n+        // defaulted to null) when a perfectly good method exists with exactly the\n+        // supplied parameters.\n+        Collections.sort(overloads,\n+            new Comparator() {\n+                public int compare(Object o1, Object o2)\n+                {\n+                    Method meth1 = ((OperationDesc)o1).getMethod();\n+                    Method meth2 = ((OperationDesc)o2).getMethod();\n+                    return (meth1.getParameterTypes().length -\n+                                         meth2.getParameterTypes().length);\n+                }\n+            });\n+\n         OperationDesc [] array = new OperationDesc [overloads.size()];\n         return (OperationDesc[])overloads.toArray(array);\n     }"
            },
            {
                "sha": "7440be44fa216128599bb256b6702e9049ce483b",
                "filename": "test/RPCDispatch/Service.java",
                "status": "modified",
                "additions": 28,
                "deletions": 4,
                "changes": 32,
                "blob_url": "https://github.com/apache/axis1-java/blob/798ab4930334bcfcf37b3458f041313850ac5606/test/RPCDispatch/Service.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/798ab4930334bcfcf37b3458f041313850ac5606/test/RPCDispatch/Service.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/Service.java?ref=798ab4930334bcfcf37b3458f041313850ac5606",
                "patch": "@@ -74,24 +74,48 @@ public String argAsDOM(Data input) throws Exception {\n     public Integer echoInt(Integer value) throws Exception {\n        return value;\n     }\n-    \n+\n+    /**\n+     * Return the boolean and String arguments concatenated\n+     */\n+    public String overloaded(boolean b, String s)\n+    {\n+        return b + s;\n+    }\n+\n+    /**\n+     * Return the String and boolean arguments concatenated\n+     */\n+    public String overloaded(String s, boolean b)\n+    {\n+        return s + b;\n+    }\n+\n     /**\n      * Return the boolean value passed in\n-     */ \n+     */\n     public boolean overloaded(boolean b)\n     {\n         return b;\n     }\n-    \n+\n     /**\n      * Return the int passed in (this and the function above test overloaded\n      * method dispatch)\n-     */ \n+     */\n     public int overloaded(int i)\n     {\n         return i;\n     }\n \n+    /**\n+     * Return the int and String arguments concatenated\n+     */\n+    public String overloaded(int i, String s)\n+    {\n+        return i + s;\n+    }\n+\n     /**\n      * Simple exception to be used in generating faults\n      */"
            },
            {
                "sha": "b5573b439d0335a8ae8f1c0ac5ebd9d9204996ab",
                "filename": "test/RPCDispatch/TestSerializedRPC.java",
                "status": "modified",
                "additions": 46,
                "deletions": 22,
                "changes": 68,
                "blob_url": "https://github.com/apache/axis1-java/blob/798ab4930334bcfcf37b3458f041313850ac5606/test/RPCDispatch/TestSerializedRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/798ab4930334bcfcf37b3458f041313850ac5606/test/RPCDispatch/TestSerializedRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestSerializedRPC.java?ref=798ab4930334bcfcf37b3458f041313850ac5606",
                "patch": "@@ -45,7 +45,7 @@\n \n     private SimpleProvider provider = new SimpleProvider();\n     private AxisServer engine = new AxisServer(provider);\n-    \n+\n     String firstParamName = null;\n     String secondParamName = null;\n \n@@ -60,7 +60,7 @@ public TestSerializedRPC(String name) throws Exception {\n         reverse.setOption(\"className\", \"test.RPCDispatch.Service\");\n         reverse.setOption(\"allowedMethods\", \"*\");\n         provider.deployService(SOAPAction, reverse);\n-        \n+\n         // And deploy the type mapping\n         Class javaType = Data.class;\n         QName xmlType = new QName(\"urn:foo\", \"Data\");\n@@ -78,14 +78,14 @@ public TestSerializedRPC(String name) throws Exception {\n         ServiceDesc desc = new ServiceDesc();\n         desc.loadServiceDescByIntrospection(Service.class, tm);\n         reverse.setServiceDescription(desc);\n-        \n+\n         // Now we've got the service description loaded up.  We're going to\n         // be testing parameter dispatch by name, so if debug info isn't\n         // compiled into the Service class, the names are going to be \"in0\",\n         // etc.  Make sure they match.\n         OperationDesc oper = desc.getOperationByName(\"concatenate\");\n         assertNotNull(oper);\n-        \n+\n         firstParamName = oper.getParameter(0).getName();\n         secondParamName = oper.getParameter(1).getName();\n     }\n@@ -103,7 +103,7 @@ private final Object rpc(String method, String bodyStr,\n \n         // Create the message context\n         MessageContext msgContext = new MessageContext(engine);\n-        \n+\n         // Set the dispatch either by SOAPAction or methodNS\n         String methodNS = \"urn:dont.match.me\";\n         if (setService) {\n@@ -120,7 +120,7 @@ private final Object rpc(String method, String bodyStr,\n                         bodyElemFoot + footer;\n         msgContext.setRequestMessage(new Message(msgStr));\n         msgContext.setTypeMappingRegistry(engine.getTypeMappingRegistry());\n-        \n+\n         // Invoke the Axis engine\n         try {\n             engine.invoke(msgContext);\n@@ -162,7 +162,7 @@ public void testSerReverseBodyDispatch() throws Exception {\n         // invoke the service and verify the result\n         assertEquals(\"Did not reverse the string as expected\", \"cba\", rpc(\"reverseString\", arg, false));\n     }\n-    \n+\n     /**\n      * Test a method that reverses a data structure\n      */\n@@ -174,7 +174,7 @@ public void testSerReverseData() throws Exception {\n         Data expected = new Data(3, \"cba\", 5);\n         assertEquals(\"Did not reverse data as expected\", expected, rpc(\"reverseData\", arg, true));\n     }\n-    \n+\n     /**\n      * Test a method that reverses a data structure\n      */\n@@ -208,30 +208,54 @@ public void testArgAsDOM() throws Exception {\n         String arg = \"<arg0 xmlns:foo=\\\"urn:foo\\\">\";\n         arg += \"<field1>5</field1><field2>abc</field2><field3>3</field3>\";\n         arg += \"</arg0>\";\n-        \n+\n         // invoke the service and verify the result\n         assertEquals(\"Did not echo arg correctly.\", arg, rpc(\"argAsDOM\", arg, true));\n     }\n-    \n+\n     /**\n      * Test overloaded method dispatch without the benefit of xsi:types\n-     */ \n+     */\n     public void testOverloadedMethodDispatch() throws Exception\n     {\n-        // invoke the service and verify the result\n+        // invoke the service for each overloaded method, and verify the results\n+\n+        // boolean\n         String arg = \"<arg0>true</arg0>\";\n-        Boolean expected = Boolean.TRUE;\n-        assertEquals(\"Overloaded method test failed with a boolean\", \n-                     expected, \n-                     rpc(\"overloaded\", arg, true));        \n-        \n+        Object expected = Boolean.TRUE;\n+        assertEquals(\"Overloaded method test failed with a boolean\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // boolean, string\n+        arg = \"<arg0>true</arg0><arg1>hello world</arg1>\";\n+        expected = Boolean.TRUE + \"hello world\";\n+        assertEquals(\"Overloaded method test failed with boolean, string\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // string, boolean\n+        arg = \"<arg0>hello world</arg0><arg1>true</arg1>\";\n+        expected = \"hello world\" + Boolean.TRUE;\n+        assertEquals(\"Overloaded method test failed with string, boolean\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // int\n         arg = \"<arg0>5</arg0>\";\n-        Integer expectedInt = new Integer(5);\n-        assertEquals(\"Overloaded method test failed with an int\", \n-                     expectedInt, \n-                     rpc(\"overloaded\", arg, true));        \n+        expected = new Integer(5);\n+        assertEquals(\"Overloaded method test failed with an int\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n+\n+        // int, string\n+        arg = \"<arg0>5</arg0><arg1>hello world</arg1>\";\n+        expected = 5 + \"hello world\";\n+        assertEquals(\"Overloaded method test failed with int, string\",\n+                     expected,\n+                     rpc(\"overloaded\", arg, true));\n     }\n-    \n+\n     public static void main(String args[]) {\n       try {\n         TestSerializedRPC tester = new TestSerializedRPC(\"Test Serialized RPC\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/4ac3b6d7fdc07587e2155279c8ac0a460a67db92",
        "message": "Fix for 10916 -  AXIS config crashes w/ NullPointerException when classloader = null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254641 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_20",
        "file": [
            {
                "sha": "6df2583a8fcf02252a17cdde9c864639b5d74294",
                "filename": "src/org/apache/axis/components/bytecode/BCEL.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2/src/org/apache/axis/components/bytecode/BCEL.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2/src/org/apache/axis/components/bytecode/BCEL.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/bytecode/BCEL.java?ref=95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2",
                "patch": "@@ -61,6 +61,7 @@\n import org.apache.bcel.classfile.LocalVariable;\n import org.apache.bcel.classfile.LocalVariableTable;\n import org.apache.bcel.classfile.Method;\n+import org.apache.axis.utils.ClassUtils;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -105,8 +106,7 @@\n             try {\n                 String className = c.getName();\n                 String classFile = className.replace('.', '/');\n-                InputStream is =\n-                        c.getClassLoader().getResourceAsStream(classFile + \".class\");\n+                InputStream is = ClassUtils.getResourceAsStream(c, classFile + \".class\");\n \n                 ClassParser parser = new ClassParser(is, className);\n                 bclass = parser.parse();"
            },
            {
                "sha": "6cc715a6e3b6f50dbb2252c4f230a570dbd95a32",
                "filename": "src/org/apache/axis/configuration/FileProvider.java",
                "status": "modified",
                "additions": 3,
                "deletions": 10,
                "changes": 13,
                "blob_url": "https://github.com/apache/axis1-java/blob/95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2/src/org/apache/axis/configuration/FileProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2/src/org/apache/axis/configuration/FileProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/configuration/FileProvider.java?ref=95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2",
                "patch": "@@ -69,6 +69,7 @@\n import org.apache.axis.utils.Admin;\n import org.apache.axis.utils.XMLUtils;\n import org.apache.axis.utils.JavaUtils;\n+import org.apache.axis.utils.ClassUtils;\n import org.apache.axis.InternalException;\n \n import org.apache.axis.components.logger.LogFactory;\n@@ -196,16 +197,8 @@ public void configureEngine(AxisEngine engine)\n                 try {\n                     myInputStream = new FileInputStream(configFile);\n                 } catch (Exception e) {\n-                    if (searchClasspath) {\n-                        // look for custom configuration files outside of engine package\n-                        myInputStream = engine.getClass().getClassLoader().\n-                                getResourceAsStream(filename);\n-                        if (myInputStream == null) { \n-                            // if not found in classpath fall back to default config file in engine package\n-                            myInputStream = engine.getClass().\n-                                getResourceAsStream(filename);\n-                        }\n-                    }\n+                    if (searchClasspath)\n+                        myInputStream = ClassUtils.getResourceAsStream(engine.getClass(), filename);\n                 }\n             }\n "
            },
            {
                "sha": "32aba72b1b581b01faa93be1aeecfc06c6d86f69",
                "filename": "src/org/apache/axis/utils/ClassUtils.java",
                "status": "modified",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/apache/axis1-java/blob/95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2/src/org/apache/axis/utils/ClassUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2/src/org/apache/axis/utils/ClassUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/ClassUtils.java?ref=95d5f3f750fb07c3ef07fc2be3cc64774b8c1cc2",
                "patch": "@@ -56,6 +56,7 @@\n \n import java.security.AccessController;\n import java.security.PrivilegedAction;\n+import java.io.InputStream;\n \n /**\n  * Utility methods for Class Loading.\n@@ -212,4 +213,21 @@ public Object run() {\n             throw new ClassNotFoundException(_className);\n         }\n     }\n+\n+    public static InputStream getResourceAsStream(Class clazz, String resource) {\n+        InputStream myInputStream = null;\n+\n+        if(clazz.getClass().getClassLoader()!=null) {\n+            // Try the class loader that loaded this class.\n+            myInputStream = clazz.getClassLoader().getResourceAsStream(resource);\n+        } else {\n+            // Try the system class loader.\n+            myInputStream = ClassLoader.getSystemClassLoader().getResourceAsStream(resource);\n+        }\n+        if (myInputStream == null) {\n+            // if not found in classpath fall back to default\n+            myInputStream = clazz.getResourceAsStream(resource);\n+        }\n+        return myInputStream;\n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/fa025f77b07bac8edef3549b03280cf3c7762d59",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/40e665507e86922a2b92117f39113d9954b4ccbe",
        "message": "Fix for 10916 -  AXIS config crashes w/ NullPointerException when classloader = null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247569 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_21",
        "file": [
            {
                "sha": "6df2583a8fcf02252a17cdde9c864639b5d74294",
                "filename": "src/org/apache/axis/components/bytecode/BCEL.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/fa025f77b07bac8edef3549b03280cf3c7762d59/src/org/apache/axis/components/bytecode/BCEL.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/fa025f77b07bac8edef3549b03280cf3c7762d59/src/org/apache/axis/components/bytecode/BCEL.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/bytecode/BCEL.java?ref=fa025f77b07bac8edef3549b03280cf3c7762d59",
                "patch": "@@ -61,6 +61,7 @@\n import org.apache.bcel.classfile.LocalVariable;\n import org.apache.bcel.classfile.LocalVariableTable;\n import org.apache.bcel.classfile.Method;\n+import org.apache.axis.utils.ClassUtils;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -105,8 +106,7 @@\n             try {\n                 String className = c.getName();\n                 String classFile = className.replace('.', '/');\n-                InputStream is =\n-                        c.getClassLoader().getResourceAsStream(classFile + \".class\");\n+                InputStream is = ClassUtils.getResourceAsStream(c, classFile + \".class\");\n \n                 ClassParser parser = new ClassParser(is, className);\n                 bclass = parser.parse();"
            },
            {
                "sha": "6cc715a6e3b6f50dbb2252c4f230a570dbd95a32",
                "filename": "src/org/apache/axis/configuration/FileProvider.java",
                "status": "modified",
                "additions": 3,
                "deletions": 10,
                "changes": 13,
                "blob_url": "https://github.com/apache/axis1-java/blob/fa025f77b07bac8edef3549b03280cf3c7762d59/src/org/apache/axis/configuration/FileProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/fa025f77b07bac8edef3549b03280cf3c7762d59/src/org/apache/axis/configuration/FileProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/configuration/FileProvider.java?ref=fa025f77b07bac8edef3549b03280cf3c7762d59",
                "patch": "@@ -69,6 +69,7 @@\n import org.apache.axis.utils.Admin;\n import org.apache.axis.utils.XMLUtils;\n import org.apache.axis.utils.JavaUtils;\n+import org.apache.axis.utils.ClassUtils;\n import org.apache.axis.InternalException;\n \n import org.apache.axis.components.logger.LogFactory;\n@@ -196,16 +197,8 @@ public void configureEngine(AxisEngine engine)\n                 try {\n                     myInputStream = new FileInputStream(configFile);\n                 } catch (Exception e) {\n-                    if (searchClasspath) {\n-                        // look for custom configuration files outside of engine package\n-                        myInputStream = engine.getClass().getClassLoader().\n-                                getResourceAsStream(filename);\n-                        if (myInputStream == null) { \n-                            // if not found in classpath fall back to default config file in engine package\n-                            myInputStream = engine.getClass().\n-                                getResourceAsStream(filename);\n-                        }\n-                    }\n+                    if (searchClasspath)\n+                        myInputStream = ClassUtils.getResourceAsStream(engine.getClass(), filename);\n                 }\n             }\n "
            },
            {
                "sha": "32aba72b1b581b01faa93be1aeecfc06c6d86f69",
                "filename": "src/org/apache/axis/utils/ClassUtils.java",
                "status": "modified",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/apache/axis1-java/blob/fa025f77b07bac8edef3549b03280cf3c7762d59/src/org/apache/axis/utils/ClassUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/fa025f77b07bac8edef3549b03280cf3c7762d59/src/org/apache/axis/utils/ClassUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/ClassUtils.java?ref=fa025f77b07bac8edef3549b03280cf3c7762d59",
                "patch": "@@ -56,6 +56,7 @@\n \n import java.security.AccessController;\n import java.security.PrivilegedAction;\n+import java.io.InputStream;\n \n /**\n  * Utility methods for Class Loading.\n@@ -212,4 +213,21 @@ public Object run() {\n             throw new ClassNotFoundException(_className);\n         }\n     }\n+\n+    public static InputStream getResourceAsStream(Class clazz, String resource) {\n+        InputStream myInputStream = null;\n+\n+        if(clazz.getClass().getClassLoader()!=null) {\n+            // Try the class loader that loaded this class.\n+            myInputStream = clazz.getClassLoader().getResourceAsStream(resource);\n+        } else {\n+            // Try the system class loader.\n+            myInputStream = ClassLoader.getSystemClassLoader().getResourceAsStream(resource);\n+        }\n+        if (myInputStream == null) {\n+            // if not found in classpath fall back to default\n+            myInputStream = clazz.getResourceAsStream(resource);\n+        }\n+        return myInputStream;\n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7b148df3123e1547e5d36346286f94eb3dd2dc67",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/1311291204787dc52bb6d5d3f5360d17737898d7",
        "message": "Throw a useful exception if the use attribute is missing from a\nsoap:operation.  It used to throw NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253817 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_22",
        "file": [
            {
                "sha": "cf96a7a631e9f034b9c5f321bc17057ad767e33f",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/7b148df3123e1547e5d36346286f94eb3dd2dc67/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/7b148df3123e1547e5d36346286f94eb3dd2dc67/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=7b148df3123e1547e5d36346286f94eb3dd2dc67",
                "patch": "@@ -775,3 +775,5 @@ mustSpecifyParms=No parameters specified to the Call object!  You must call addP\n noElemOrType=Error: Message part {0} of operation {1} should have either an element or a type attribute\n badTypeNode=Error: Missing type resolution for element {2}, in WSDL message part {0} of operation {1}\n \n+# NOTE:  in noUse, do no translate \"soap:operation\", \"binding operation\", \"use\".\n+noUse=The soap:operation for binding operation {0} must have a \"use\" attribute."
            },
            {
                "sha": "5650a7eed507fd06f53fe32b17574058f9fb347d",
                "filename": "src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "status": "modified",
                "additions": 12,
                "deletions": 0,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/7b148df3123e1547e5d36346286f94eb3dd2dc67/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7b148df3123e1547e5d36346286f94eb3dd2dc67/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/SymbolTable.java?ref=7b148df3123e1547e5d36346286f94eb3dd2dc67",
                "patch": "@@ -1236,6 +1236,10 @@ else if (obj instanceof HTTPBinding) {\n                             Object obj = inIter.next();\n                             if (obj instanceof SOAPBody) {\n                                 String use = ((SOAPBody) obj).getUse();\n+                                if (use == null) {\n+                                    throw new IOException(JavaUtils.getMessage(\n+                                            \"noUse\", bindOp.getName()));\n+                                }\n                                 if (use.equalsIgnoreCase(\"literal\")) {\n                                     inputBodyType = BindingEntry.USE_LITERAL;\n                                 }\n@@ -1253,6 +1257,10 @@ else if (obj instanceof HTTPBinding) {\n                             Object obj = outIter.next();\n                             if (obj instanceof SOAPBody) {\n                                 String use = ((SOAPBody) obj).getUse();\n+                                if (use == null) {\n+                                    throw new IOException(JavaUtils.getMessage(\n+                                            \"noUse\", bindOp.getName()));\n+                                }\n                                 if (use.equalsIgnoreCase(\"literal\")) {\n                                     outputBodyType = BindingEntry.USE_LITERAL;\n                                 }\n@@ -1278,6 +1286,10 @@ else if (obj instanceof HTTPBinding) {\n                         Object obj = faultIter.next();\n                         if (obj instanceof SOAPBody) {\n                             String use = ((SOAPBody) obj).getUse();\n+                            if (use == null) {\n+                                throw new IOException(JavaUtils.getMessage(\n+                                        \"noUse\", bindOp.getName()));\n+                            }\n                             if (use.equalsIgnoreCase(\"literal\")) {\n                                 faultBodyType = BindingEntry.USE_LITERAL;\n                             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/2d6d1bdf289a68e7a28621dc6230258daf00a2b0",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/9e2be2921434c9116ff6855e57d4bbf2f9b74e50",
        "message": "Throw a useful exception if the use attribute is missing from a\nsoap:operation.  It used to throw NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246744 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_23",
        "file": [
            {
                "sha": "cf96a7a631e9f034b9c5f321bc17057ad767e33f",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/2d6d1bdf289a68e7a28621dc6230258daf00a2b0/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/2d6d1bdf289a68e7a28621dc6230258daf00a2b0/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=2d6d1bdf289a68e7a28621dc6230258daf00a2b0",
                "patch": "@@ -775,3 +775,5 @@ mustSpecifyParms=No parameters specified to the Call object!  You must call addP\n noElemOrType=Error: Message part {0} of operation {1} should have either an element or a type attribute\n badTypeNode=Error: Missing type resolution for element {2}, in WSDL message part {0} of operation {1}\n \n+# NOTE:  in noUse, do no translate \"soap:operation\", \"binding operation\", \"use\".\n+noUse=The soap:operation for binding operation {0} must have a \"use\" attribute."
            },
            {
                "sha": "5650a7eed507fd06f53fe32b17574058f9fb347d",
                "filename": "src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "status": "modified",
                "additions": 12,
                "deletions": 0,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/2d6d1bdf289a68e7a28621dc6230258daf00a2b0/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2d6d1bdf289a68e7a28621dc6230258daf00a2b0/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/SymbolTable.java?ref=2d6d1bdf289a68e7a28621dc6230258daf00a2b0",
                "patch": "@@ -1236,6 +1236,10 @@ else if (obj instanceof HTTPBinding) {\n                             Object obj = inIter.next();\n                             if (obj instanceof SOAPBody) {\n                                 String use = ((SOAPBody) obj).getUse();\n+                                if (use == null) {\n+                                    throw new IOException(JavaUtils.getMessage(\n+                                            \"noUse\", bindOp.getName()));\n+                                }\n                                 if (use.equalsIgnoreCase(\"literal\")) {\n                                     inputBodyType = BindingEntry.USE_LITERAL;\n                                 }\n@@ -1253,6 +1257,10 @@ else if (obj instanceof HTTPBinding) {\n                             Object obj = outIter.next();\n                             if (obj instanceof SOAPBody) {\n                                 String use = ((SOAPBody) obj).getUse();\n+                                if (use == null) {\n+                                    throw new IOException(JavaUtils.getMessage(\n+                                            \"noUse\", bindOp.getName()));\n+                                }\n                                 if (use.equalsIgnoreCase(\"literal\")) {\n                                     outputBodyType = BindingEntry.USE_LITERAL;\n                                 }\n@@ -1278,6 +1286,10 @@ else if (obj instanceof HTTPBinding) {\n                         Object obj = faultIter.next();\n                         if (obj instanceof SOAPBody) {\n                             String use = ((SOAPBody) obj).getUse();\n+                            if (use == null) {\n+                                throw new IOException(JavaUtils.getMessage(\n+                                        \"noUse\", bindOp.getName()));\n+                            }\n                             if (use.equalsIgnoreCase(\"literal\")) {\n                                 faultBodyType = BindingEntry.USE_LITERAL;\n                             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/dca5c205b0cfa422dc9d28658ecd7aca0940c0cb",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/1286c450465263efaf52ff02d0952795548c002c",
        "message": "WSDL spec:  \"If the style attribute is omitted, it is assumed to be \"document\".\"\n\nWe were failing with a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253431 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_24",
        "file": [
            {
                "sha": "3ce97f88e9c3cc34bb2eb777a3aca0477720b942",
                "filename": "src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/dca5c205b0cfa422dc9d28658ecd7aca0940c0cb/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dca5c205b0cfa422dc9d28658ecd7aca0940c0cb/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/SymbolTable.java?ref=dca5c205b0cfa422dc9d28658ecd7aca0940c0cb",
                "patch": "@@ -1040,7 +1040,7 @@ protected void partStrings(Vector v, Collection parts, boolean literal) {\n     private void populateBindings(Definition def) throws IOException {\n         Iterator i = def.getBindings().values().iterator();\n         while (i.hasNext()) {\n-            int bindingStyle = BindingEntry.STYLE_RPC;\n+            int bindingStyle = BindingEntry.STYLE_DOCUMENT;\n             int bindingType = BindingEntry.TYPE_UNKNOWN;\n             Binding binding = (Binding) i.next();\n             Iterator extensibilityElementsIterator = binding.getExtensibilityElements().iterator();\n@@ -1050,8 +1050,8 @@ private void populateBindings(Definition def) throws IOException {\n                     bindingType = BindingEntry.TYPE_SOAP;\n                     SOAPBinding sb = (SOAPBinding) obj;\n                     String style = sb.getStyle();\n-                    if (style.equalsIgnoreCase(\"document\")) {\n-                        bindingStyle = BindingEntry.STYLE_DOCUMENT;\n+                    if (\"rpc\".equalsIgnoreCase(style)) {\n+                        bindingStyle = BindingEntry.STYLE_RPC;\n                     }\n                 }\n                 else if (obj instanceof HTTPBinding) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/64ec4908ce115a023540250c1cde9e2e9230ca8c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b3b1a945fad05edee832ff4576b25e5c8c9d92ab",
        "message": "WSDL spec:  \"If the style attribute is omitted, it is assumed to be \"document\".\"\n\nWe were failing with a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246359 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_25",
        "file": [
            {
                "sha": "3ce97f88e9c3cc34bb2eb777a3aca0477720b942",
                "filename": "src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/64ec4908ce115a023540250c1cde9e2e9230ca8c/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/64ec4908ce115a023540250c1cde9e2e9230ca8c/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/SymbolTable.java?ref=64ec4908ce115a023540250c1cde9e2e9230ca8c",
                "patch": "@@ -1040,7 +1040,7 @@ protected void partStrings(Vector v, Collection parts, boolean literal) {\n     private void populateBindings(Definition def) throws IOException {\n         Iterator i = def.getBindings().values().iterator();\n         while (i.hasNext()) {\n-            int bindingStyle = BindingEntry.STYLE_RPC;\n+            int bindingStyle = BindingEntry.STYLE_DOCUMENT;\n             int bindingType = BindingEntry.TYPE_UNKNOWN;\n             Binding binding = (Binding) i.next();\n             Iterator extensibilityElementsIterator = binding.getExtensibilityElements().iterator();\n@@ -1050,8 +1050,8 @@ private void populateBindings(Definition def) throws IOException {\n                     bindingType = BindingEntry.TYPE_SOAP;\n                     SOAPBinding sb = (SOAPBinding) obj;\n                     String style = sb.getStyle();\n-                    if (style.equalsIgnoreCase(\"document\")) {\n-                        bindingStyle = BindingEntry.STYLE_DOCUMENT;\n+                    if (\"rpc\".equalsIgnoreCase(style)) {\n+                        bindingStyle = BindingEntry.STYLE_RPC;\n                     }\n                 }\n                 else if (obj instanceof HTTPBinding) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/81ed54ff47f9c2519bc25b80a1a09bc0e9c0bf8a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/5e9eb9cb473e30a92c62dbc99494da21c20e55d5",
        "message": "Eliminate NullPointerException in SOAPFault - the Microsoft implementation\nchooses to format and indent their elements.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252054 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_26",
        "file": [
            {
                "sha": "f5ffa9380ae48da34be45f8fdce3e5a57561e5db",
                "filename": "src/org/apache/axis/message/SOAPFaultElement.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/81ed54ff47f9c2519bc25b80a1a09bc0e9c0bf8a/src/org/apache/axis/message/SOAPFaultElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/81ed54ff47f9c2519bc25b80a1a09bc0e9c0bf8a/src/org/apache/axis/message/SOAPFaultElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFaultElement.java?ref=81ed54ff47f9c2519bc25b80a1a09bc0e9c0bf8a",
                "patch": "@@ -100,7 +100,10 @@ public void onStartChild(String namespace, String name, String qName,\n     \n     public void characters(char [] chars, int start, int end)\n     {\n-        currentValue.append(chars, start, end);\n+        // Only capture characters between StartChild and EndChild (the\n+        // rest, presumably, is ignorable whitespace).\n+        if (currentValue != null)\n+            currentValue.append(chars, start, end);\n     }\n \n     public void onEndChild(String localName, DeserializerBase deserializer)\n@@ -123,6 +126,8 @@ public void onEndChild(String localName, DeserializerBase deserializer)\n             // !!! Not supported yet\n             // fault.setFaultDetails(...);\n         }\n+\n+        currentValue = null;\n     }\n \n     public DeserializerBase getContentHandler() { return this; }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f3691a979ae40e5fbea9fb3382080c0e2b05aea5",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/802b7e24250ca5877905c3278b3a81837429a639",
        "message": "Eliminate NullPointerException in SOAPFault - the Microsoft implementation\nchooses to format and indent their elements.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@244982 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_27",
        "file": [
            {
                "sha": "f5ffa9380ae48da34be45f8fdce3e5a57561e5db",
                "filename": "src/org/apache/axis/message/SOAPFaultElement.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/f3691a979ae40e5fbea9fb3382080c0e2b05aea5/src/org/apache/axis/message/SOAPFaultElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f3691a979ae40e5fbea9fb3382080c0e2b05aea5/src/org/apache/axis/message/SOAPFaultElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFaultElement.java?ref=f3691a979ae40e5fbea9fb3382080c0e2b05aea5",
                "patch": "@@ -100,7 +100,10 @@ public void onStartChild(String namespace, String name, String qName,\n     \n     public void characters(char [] chars, int start, int end)\n     {\n-        currentValue.append(chars, start, end);\n+        // Only capture characters between StartChild and EndChild (the\n+        // rest, presumably, is ignorable whitespace).\n+        if (currentValue != null)\n+            currentValue.append(chars, start, end);\n     }\n \n     public void onEndChild(String localName, DeserializerBase deserializer)\n@@ -123,6 +126,8 @@ public void onEndChild(String localName, DeserializerBase deserializer)\n             // !!! Not supported yet\n             // fault.setFaultDetails(...);\n         }\n+\n+        currentValue = null;\n     }\n \n     public DeserializerBase getContentHandler() { return this; }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/3f7e2786605bf6f2fed58c40ad3358a29fe09591",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/bef09139a4046ffc30c97016c72d7e15a60cd4e1",
        "message": "Prevent a NPE when curMsg is null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@354084 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_28",
        "file": [
            {
                "sha": "47fdf1c4298028d0029767730749a87e4a5d4cd3",
                "filename": "src/org/apache/axis/MessageContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f7e2786605bf6f2fed58c40ad3358a29fe09591/src/org/apache/axis/MessageContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f7e2786605bf6f2fed58c40ad3358a29fe09591/src/org/apache/axis/MessageContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=3f7e2786605bf6f2fed58c40ad3358a29fe09591",
                "patch": "@@ -627,7 +627,8 @@ public Message getCurrentMessage()\n      */\n     public void setCurrentMessage(Message curMsg)\n     {\n-        curMsg.setMessageContext(this);\n+        if ( curMsg != null )\n+            curMsg.setMessageContext(this);\n \n         if (havePassedPivot) {\n             responseMessage = curMsg;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/59db1de035050c2c9afe2bb488b5f9c24ee62529",
        "message": "Fixed NPE , due to Deployment->OM conversion\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@240389 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_29",
        "file": [
            {
                "sha": "2adc71519eb123a3ca31faf41eb540b14b4bc19e",
                "filename": "modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java",
                "status": "modified",
                "additions": 22,
                "deletions": 8,
                "changes": 30,
                "blob_url": "https://github.com/apache/axis1-java/blob/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/core/src/org/apache/axis2/deployment/AxisConfigBuilder.java?ref=be09a0c8faa2b092a54cbc2d15ba5715adc8e3af",
                "patch": "@@ -63,13 +63,18 @@ public void populateConfig() throws DeploymentException {\n             processParameters(itr,axisConfiguration);\r\n \r\n             //process MessageReciver\r\n-            OMElement messageReceiver = config_element.getFirstChildWithName(\r\n-                    new QName(MESSAGERECEIVER));\r\n-            MessageReceiver msgrecivere= loadMessageReceiver(\r\n-                    Thread.currentThread().getContextClassLoader(),messageReceiver);\r\n-            OMAttribute mepAtt = messageReceiver.getAttribute(new QName(MEP));\r\n-            ((AxisConfigurationImpl)axisConfiguration).addMessageReceiver(\r\n-                    mepAtt.getValue(),msgrecivere);\r\n+\r\n+            Iterator msgRecives = config_element.getChildrenWithName(new QName(MESSAGERECEIVER));\r\n+            while (msgRecives.hasNext()) {\r\n+                OMElement msgRev = (OMElement) msgRecives.next();\r\n+                MessageReceiver msgrecivere= loadMessageReceiver(\r\n+                        Thread.currentThread().getContextClassLoader(),msgRev);\r\n+                OMAttribute mepAtt = msgRev.getAttribute(new QName(MEP));\r\n+                ((AxisConfigurationImpl)axisConfiguration).addMessageReceiver(\r\n+                        mepAtt.getValue(),msgrecivere);\r\n+            }\r\n+\r\n+\r\n \r\n             //Process Module refs\r\n             Iterator moduleitr = config_element.getChildrenWithName(\r\n@@ -142,6 +147,10 @@ private void processTransportSenders(Iterator trs_senders) throws DeploymentExce\n                 //tranport impl class\r\n                 OMAttribute trsClas = transport.getAttribute(\r\n                         new QName(CLASSNAME));\r\n+                if(trsClas == null){\r\n+                    throw new DeploymentException(\"TransportSEnder Implementation class is required \" +\r\n+                            \"for the transport\" + name);\r\n+                }\r\n                 String clasName = trsClas.getValue();\r\n                 Class sender;\r\n                 try {\r\n@@ -294,7 +303,12 @@ private void processObservers(Iterator oservers) throws DeploymentException {\n             AxisObserver observer;\r\n             OMAttribute trsClas = observerelement.getAttribute(\r\n                     new QName(CLASSNAME));\r\n-            String clasName = trsClas.getValue();\r\n+            String clasName;\r\n+            if (trsClas !=null) {\r\n+                clasName = trsClas.getValue();\r\n+            } else {\r\n+                throw new DeploymentException(\"Observer Implementation Class is requird\");\r\n+            }\r\n             try {\r\n                 Class observerclass = Class.forName(clasName, true, Thread.currentThread().\r\n                         getContextClassLoader());\r"
            },
            {
                "sha": "ed395ad5ff15fad9dfbdef7c8a94d33b7d001380",
                "filename": "modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java",
                "status": "modified",
                "additions": 24,
                "deletions": 18,
                "changes": 42,
                "blob_url": "https://github.com/apache/axis1-java/blob/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/core/src/org/apache/axis2/deployment/DescriptionBuilder.java?ref=be09a0c8faa2b092a54cbc2d15ba5715adc8e3af",
                "patch": "@@ -174,12 +174,14 @@ protected void processModuleRefs(Iterator moduleRefs) throws DeploymentException\n                 OMElement moduleref = (OMElement) moduleRefs.next();\r\n                 OMAttribute moduleRefAttribute = moduleref.getAttribute(\r\n                         new QName(REF));\r\n-                String refName = moduleRefAttribute.getValue();\r\n-                if(engine.getModule(new QName(refName)) == null) {\r\n-                    throw new DeploymentException(Messages.getMessage(\r\n-                            DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n-                } else {\r\n-                    engine.getCurrentFileItem().addModule(new QName(refName));\r\n+                if(moduleRefAttribute !=null){\r\n+                    String refName = moduleRefAttribute.getValue();\r\n+                    if(engine.getModule(new QName(refName)) == null) {\r\n+                        throw new DeploymentException(Messages.getMessage(\r\n+                                DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n+                    } else {\r\n+                        engine.getCurrentFileItem().addModule(new QName(refName));\r\n+                    }\r\n                 }\r\n             }\r\n         }catch (AxisFault axisFault) {\r\n@@ -225,11 +227,13 @@ protected void processParameters(Iterator paramters, ParameterInclude parameterI\n             //setting locking attribute\r\n             OMAttribute paraLocked = paramterElement.getAttribute(\r\n                     new QName(ATTLOCKED));\r\n-            String lockedValue = paraLocked.getValue();\r\n-            if(\"true\".equals(lockedValue)){\r\n-                paramter.setLocked(true);\r\n-            } else {\r\n-                paramter.setLocked(false);\r\n+            if (paraLocked !=null) {\r\n+                String lockedValue = paraLocked.getValue();\r\n+                if(\"true\".equals(lockedValue)){\r\n+                    paramter.setLocked(true);\r\n+                } else {\r\n+                    paramter.setLocked(false);\r\n+                }\r\n             }\r\n             parameterInclude.addParameter(paramter);\r\n         }\r\n@@ -243,16 +247,18 @@ protected void processOpeasrtionModuleRefs(Iterator moduleRefs\n                 OMElement moduleref = (OMElement) moduleRefs.next();\r\n                 OMAttribute moduleRefAttribute = moduleref.getAttribute(\r\n                         new QName(REF));\r\n-                String refName = moduleRefAttribute.getValue();\r\n-                if(engine.getModule(new QName(refName)) == null) {\r\n-                    throw new DeploymentException(Messages.getMessage(\r\n-                            DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n-                } else {\r\n-                    opeartion.addModule(new QName(refName));\r\n+                if (moduleRefAttribute !=null) {\r\n+                    String refName = moduleRefAttribute.getValue();\r\n+                    if(engine.getModule(new QName(refName)) == null) {\r\n+                        throw new DeploymentException(Messages.getMessage(\r\n+                                DeploymentErrorMsgs.MODEULE_NOT_FOUND, refName));\r\n+                    } else {\r\n+                        opeartion.addModule(new QName(refName));\r\n+                    }\r\n                 }\r\n             }\r\n         }catch (AxisFault axisFault) {\r\n-            throw   new DeploymentException(axisFault);\r\n+            throw   new DeploymentException(\"Porcessing Operations Modules\" + axisFault);\r\n         }\r\n     }\r\n \r"
            },
            {
                "sha": "530d9ee8d561e28af2da8649bb1d3ec68c0598da",
                "filename": "modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java",
                "status": "modified",
                "additions": 13,
                "deletions": 11,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/be09a0c8faa2b092a54cbc2d15ba5715adc8e3af/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/core/src/org/apache/axis2/deployment/ServiceBuilder.java?ref=be09a0c8faa2b092a54cbc2d15ba5715adc8e3af",
                "patch": "@@ -86,17 +86,19 @@ public void populateService() throws DeploymentException {\n             //process service description\r\n             OMElement descriptionElement = service_element.getFirstChildWithName(\r\n                     new QName(DESCRIPTION));\r\n-            OMElement descriptionValue = descriptionElement.getFirstElement();\r\n-            if(descriptionValue !=null){\r\n-                StringWriter writer = new StringWriter();\r\n-                descriptionValue.build();\r\n-                descriptionValue.serializeWithCache(new\r\n-                        OMOutputImpl(XMLOutputFactory.newInstance().createXMLStreamWriter(writer)));\r\n-                writer.flush();\r\n-                service.setServiceDescription(writer.toString());\r\n-            } else {\r\n-                service.setServiceDescription(descriptionElement.getText());\r\n-            }\r\n+            if (descriptionElement !=null) {\r\n+                OMElement descriptionValue = descriptionElement.getFirstElement();\r\n+                if(descriptionValue !=null){\r\n+                    StringWriter writer = new StringWriter();\r\n+                    descriptionValue.build();\r\n+                    descriptionValue.serializeWithCache(new\r\n+                            OMOutputImpl(XMLOutputFactory.newInstance().createXMLStreamWriter(writer)));\r\n+                    writer.flush();\r\n+                    service.setServiceDescription(writer.toString());\r\n+                } else {\r\n+                    service.setServiceDescription(descriptionElement.getText());\r\n+                }\r\n+            } \r\n \r\n             //processing servicewide modules which required to engage gloabbly\r\n             Iterator moduleRefs = service_element.getChildrenWithName(\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/a945d8e27fe0f4366a31c4041cedc7af53b39218",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/dfddf77c587eb543ca745c8c142e03dddb9f2184",
        "message": "Prevent NPE in OMBodyTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@227034 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_30",
        "file": [
            {
                "sha": "e3526315e2bb03c57a4f01a741fc566141f95620",
                "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/a945d8e27fe0f4366a31c4041cedc7af53b39218/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a945d8e27fe0f4366a31c4041cedc7af53b39218/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/OMElementImpl.java?ref=a945d8e27fe0f4366a31c4041cedc7af53b39218",
                "patch": "@@ -515,7 +515,8 @@ public OMNode getFirstChild() {\n      */\n     public void setFirstChild(OMNode firstChild) {\n         this.firstChild = firstChild;\n-        firstChild.setParent(this);\n+        if (firstChild != null)\n+            firstChild.setParent(this);\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e2de057b38ddaac738abed572c821b34a42d980a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/05dbca40566e9a58d97b2e20e3ef0e497e2bb83f",
        "message": "- Prevent NPE in DocumentNavigator\n- Parse Comments and DTD\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@210000 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_31",
        "file": [
            {
                "sha": "30a01b639d09eff0b079a54121e8a7166317c095",
                "filename": "modules/xml/src/org/apache/axis2/om/OMNode.java",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/OMNode.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/OMNode.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/xml/src/org/apache/axis2/om/OMNode.java?ref=e2de057b38ddaac738abed572c821b34a42d980a",
                "patch": "@@ -42,7 +42,15 @@\n      */\r\n     public static final short COMMENT_NODE = 8;\r\n \r\n-    public static final short BLOB_NODE = 8;\r\n+    /**\r\n+     * This node is a <code>DTD</code>.\r\n+     */\r\n+    public static final short DTD_NODE = 9;\r\n+\r\n+    /**\r\n+     * This node is a <code>ProcessingInstruction</code>.\r\n+     */\r\n+    public static final short PI_NODE = 10;\r\n \r\n     /**\r\n      * This method should return the immediate parent of the node.\r"
            },
            {
                "sha": "f1d399e1890e50f5883a7920af24e1568f3595aa",
                "filename": "modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/xml/src/org/apache/axis2/om/impl/llom/builder/StAXOMBuilder.java?ref=e2de057b38ddaac738abed572c821b34a42d980a",
                "patch": "@@ -145,6 +145,14 @@ public int next() throws OMException {\n                 case XMLStreamConstants.SPACE:\r\n                     next();\r\n                     break;\r\n+                case XMLStreamConstants.COMMENT:\r\n+                    lastNode = createOMText();\r\n+                    lastNode.setType(OMNode.COMMENT_NODE);\r\n+                    break;\r\n+                case XMLStreamConstants.DTD:\r\n+                    lastNode = createOMText();\r\n+                    lastNode.setType(OMNode.DTD_NODE);\r\n+                    break;\r\n                 default :\r\n                     throw new OMException();\r\n             }\r"
            },
            {
                "sha": "fd1415b52a3a5b252a94eab72d4a3909b47f92b9",
                "filename": "modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e2de057b38ddaac738abed572c821b34a42d980a/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/xml/src/org/apache/axis2/om/xpath/DocumentNavigator.java?ref=e2de057b38ddaac738abed572c821b34a42d980a",
                "patch": "@@ -68,7 +68,10 @@ public String getElementName(Object object) {\n      */\n     public String getElementQName(Object object) {\n         OMElement attr = (OMElement) object;\n-        String prefix = attr.getNamespace().getPrefix();\n+        String prefix = null;\n+        if(attr.getNamespace()!=null) {\n+            prefix = attr.getNamespace().getPrefix();\n+        }\n         if (prefix == null || \"\".equals(prefix)) {\n             return attr.getQName().getLocalPart();\n         }\n@@ -178,7 +181,7 @@ public boolean isComment(Object object) {\n      */\n     public boolean isText(Object object) {\n         return (object instanceof OMNode) &&\n-                (((OMText) object).getType() == OMNode.TEXT_NODE);\n+                (((OMNode) object).getType() == OMNode.TEXT_NODE);\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/000014dc1999d5b010972da0d477d2c857f9d2d7",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0e8baf7767164527d09d5e4be919f25818ebd154",
        "message": "Prevent NPE - part of AXIS-1973\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@261270 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_32",
        "file": [
            {
                "sha": "dcea8cb1a00880d923195e1c48313868e64b593c",
                "filename": "src/org/apache/axis/encoding/TypeMappingImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/000014dc1999d5b010972da0d477d2c857f9d2d7/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/000014dc1999d5b010972da0d477d2c857f9d2d7/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingImpl.java?ref=000014dc1999d5b010972da0d477d2c857f9d2d7",
                "patch": "@@ -462,10 +462,10 @@ public DeserializerFactory finalGetDeserializer(Class javaType,\n             if (xmlType != null) {\n                 Class actualClass = start.getClassForQName(xmlType);\n                 if (actualClass == componentType ||\n-                    componentType.isAssignableFrom(actualClass))\n+                    (actualClass != null && componentType.isAssignableFrom(actualClass))) {\n                     return null;\n+                }\n             }\n-\n             Pair pair = (Pair) qName2Pair.get(Constants.SOAP_ARRAY);\n             df = (DeserializerFactory) pair2DF.get(pair);\n             if (df instanceof ArrayDeserializerFactory && javaType.isArray()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0e8baf7767164527d09d5e4be919f25818ebd154",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/45f4afc62d75f8eaa20d05659966feefa8ee738c",
        "message": "Prevent NPE - part of AXIS-1973\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@261269 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_33",
        "file": [
            {
                "sha": "f79d290d8363cd9a4bf38e99e32fdfef44541b54",
                "filename": "src/org/apache/axis/utils/ArrayUtil.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/0e8baf7767164527d09d5e4be919f25818ebd154/src/org/apache/axis/utils/ArrayUtil.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0e8baf7767164527d09d5e4be919f25818ebd154/src/org/apache/axis/utils/ArrayUtil.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/ArrayUtil.java?ref=0e8baf7767164527d09d5e4be919f25818ebd154",
                "patch": "@@ -259,7 +259,10 @@ public static Object convertArrayToObject(Object array, Class destClass) {\n             // set the destArray \n             for (int i = 0; i < arraylen; i++) {\n                 Object comp = Array.get(array, i);\n-                \n+\n+                if(comp == null)\n+                    continue;\n+\n                 if (comp.getClass().isArray()) {\n                     Class cls = Array.get(destArray, i).getClass();\n                     Array.set(destArray, i, convertArrayToObject(comp, cls));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/d7827784d19e0908f91ea1cb53ba1adbc631950f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b72fa9e0855d7b8987f79470716b487384673831",
        "message": "prevent NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@260973 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_34",
        "file": [
            {
                "sha": "cdd9bdc5357dfda1defc3e65c1cb05f4b0631dd6",
                "filename": "src/org/apache/axis/message/BodyBuilder.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/d7827784d19e0908f91ea1cb53ba1adbc631950f/src/org/apache/axis/message/BodyBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/d7827784d19e0908f91ea1cb53ba1adbc631950f/src/org/apache/axis/message/BodyBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/BodyBuilder.java?ref=d7827784d19e0908f91ea1cb53ba1adbc631950f",
                "patch": "@@ -182,8 +182,12 @@ public SOAPHandler onStartChild(String namespace,\n                 if (msgContext != null && !msgContext.isHighFidelity() &&\n                         (operations == null || operations.length == 1)) {\n                     ((RPCElement)element).setNeedDeser(false);\n+                    boolean isResponse = false;\n+                    if (msgContext.getCurrentMessage() != null &&\n+                                Message.RESPONSE.equals(msgContext.getCurrentMessage().getMessageType()))\n+                        isResponse = true;\n                     handler = new RPCHandler((RPCElement)element,\n-                                             Message.RESPONSE.equals(msgContext.getCurrentMessage().getMessageType()));\n+                                             isResponse);\n                     if (operations != null) {\n                         ((RPCHandler)handler).setOperation(operations[0]);\n                         msgContext.setOperation(operations[0]);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/d99b03ea2849a9e833ff327417218cc3798b3dbc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/c3b67fe37f3ed16ef960b09aa7bf44c385db7b56",
        "message": "Make explicit checks for NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@260608 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_35",
        "file": [
            {
                "sha": "89307ae5a6db3aeaafab9e374831082c7f06f4dc",
                "filename": "src/org/apache/axis/server/AxisServer.java",
                "status": "modified",
                "additions": 22,
                "deletions": 7,
                "changes": 29,
                "blob_url": "https://github.com/apache/axis1-java/blob/d99b03ea2849a9e833ff327417218cc3798b3dbc/src/org/apache/axis/server/AxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/d99b03ea2849a9e833ff327417218cc3798b3dbc/src/org/apache/axis/server/AxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/server/AxisServer.java?ref=d99b03ea2849a9e833ff327417218cc3798b3dbc",
                "patch": "@@ -25,6 +25,7 @@\n import org.apache.axis.Message;\n import org.apache.axis.MessageContext;\n import org.apache.axis.SimpleTargetedChain;\n+import org.apache.axis.message.SOAPEnvelope;\n import org.apache.axis.soap.SOAPConstants;\n import org.apache.axis.client.AxisClient;\n import org.apache.axis.components.logger.LogFactory;\n@@ -274,13 +275,8 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n                 if( tlog.isDebugEnabled() ) {\n                     t3=System.currentTimeMillis();\n                 }\n-\n-                // Ensure that if we get SOAP1.2, then reply using SOAP1.2 \n-                if(msgContext.getRequestMessage().getSOAPEnvelope().getSOAPConstants() != null) {\n-                    SOAPConstants soapConstants = msgContext.getRequestMessage().getSOAPEnvelope().getSOAPConstants();\n-                    msgContext.setSOAPConstants(soapConstants);\n-                }\n-                    \n+                \n+                initSOAPConstants(msgContext);\n                 try {\n                     h.invoke(msgContext);\n                 } catch (AxisFault ae) {\n@@ -337,6 +333,25 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         }\n     }\n \n+    /**\n+     * Extract ans store soap constants info from the envelope\n+     * @param msgContext\n+     * @throws AxisFault\n+     */ \n+    private void initSOAPConstants(MessageContext msgContext) throws AxisFault {\n+        Message msg = msgContext.getRequestMessage();\n+        if (msg == null)\n+            return;\n+        SOAPEnvelope env = msg.getSOAPEnvelope();\n+        if (env == null)\n+            return;\n+        SOAPConstants constants = env.getSOAPConstants();\n+        if (constants == null)\n+            return;\n+        // Ensure that if we get SOAP1.2, then reply using SOAP1.2\n+        msgContext.setSOAPConstants(constants);\n+    }\n+\n     /**\n      *\n      */"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c0f8d5ce3e5576235095ee2010885b5d5da9f084",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/822a1efd8130d104b1cc18b8b218667cb9f8d295",
        "message": "Prevent NPE's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@260605 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_36",
        "file": [
            {
                "sha": "e17e41832b0c3bff1958c0bc9fe624ddf6652539",
                "filename": "src/org/apache/axis/handlers/HandlerChainImpl.java",
                "status": "modified",
                "additions": 8,
                "deletions": 3,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/c0f8d5ce3e5576235095ee2010885b5d5da9f084/src/org/apache/axis/handlers/HandlerChainImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c0f8d5ce3e5576235095ee2010885b5d5da9f084/src/org/apache/axis/handlers/HandlerChainImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/HandlerChainImpl.java?ref=c0f8d5ce3e5576235095ee2010885b5d5da9f084",
                "patch": "@@ -81,7 +81,7 @@ public HandlerChainImpl(List handlerInfos) {\n     public void addNewHandler(String className, Map config) {\n         try {\n             HandlerInfo handlerInfo =\n-            new HandlerInfo(ClassUtils.forName(className), config, null);\n+                new HandlerInfo(ClassUtils.forName(className), config, null);\n             handlerInfos.add(handlerInfo);\n             add(newHandler(handlerInfo));\n         } catch (Exception ex) {\n@@ -113,6 +113,8 @@ public boolean handleFault(MessageContext _context) {\n     public ArrayList getMessageInfo(SOAPMessage message) {\n         ArrayList list = new ArrayList();\n         try {\n+            if(message == null || message.getSOAPPart() == null)\n+                return list;\n             SOAPEnvelope env = message.getSOAPPart().getEnvelope();\n             SOAPBody body = env.getBody();\n             Iterator it = body.getChildElements();\n@@ -176,7 +178,8 @@ private void preInvoke(SOAPMessageContext msgContext) {\n         try {\n             SOAPMessage message = msgContext.getMessage();\n             // Ensure that message is already in the form we want \n-            message.getSOAPPart().getEnvelope();\n+            if(message != null && message.getSOAPPart() != null)\n+                message.getSOAPPart().getEnvelope();\n             msgContext.setProperty(org.apache.axis.SOAPPart.ALLOW_FORM_OPTIMIZATION,\n                     Boolean.FALSE);\n             msgContext.setProperty(JAXRPC_METHOD_INFO, getMessageInfo(message));\n@@ -199,7 +202,9 @@ private void postInvoke(SOAPMessageContext msgContext) {\n             }\n         }\n         try {\n-            msgContext.getMessage().saveChanges();\n+            if (message != null) {\n+                message.saveChanges();\n+            }\n         } catch (SOAPException e) {\n             log.debug(\"Exception in postInvoke : \", e);\n             throw new RuntimeException(\"Exception in postInvoke : \", e);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b5b733ace9383495b256aa1a2e4996d32318f4ed",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/1aad0f43b997a4c0635d5d262798a37737d1745c",
        "message": "prevents NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@259267 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_37",
        "file": [
            {
                "sha": "14fe97842d20291b97e1a1622feeab58727f199b",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDDeployableItem.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/b5b733ace9383495b256aa1a2e4996d32318f4ed/src/org/apache/axis/deployment/wsdd/WSDDDeployableItem.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b5b733ace9383495b256aa1a2e4996d32318f4ed/src/org/apache/axis/deployment/wsdd/WSDDDeployableItem.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDDeployableItem.java?ref=b5b733ace9383495b256aa1a2e4996d32318f4ed",
                "patch": "@@ -169,8 +169,9 @@ public void setType(QName type)\n      */ \n     public void setParameter(String name, String value)\n     {\n-        if (parameters == null)\n+        if (parameters == null) {\n             parameters = new LockableHashtable();\n+        }\n         parameters.put(name, value);\n     }\n     \n@@ -179,8 +180,9 @@ public void setParameter(String name, String value)\n      */ \n     public String getParameter(String name)\n     {\n-        if (name == null)\n+        if (name == null || parameters == null) {\n             return null;\n+        }\n         \n         return (String)parameters.get(name);\n     }\n@@ -238,7 +240,9 @@ public void writeParamsToContext(SerializationContext context)\n      */\n     public void removeParameter(String name)\n     {\n-        parameters.remove(name);\n+        if (parameters != null) {\n+            parameters.remove(name);\n+        }\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/2aae4719f7476c0063cad6876b5c52a0559d5654",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/fef4e525eb9d188f19b6956c72f77119246c9416",
        "message": "better defence against NPEs in equality test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@259150 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_38",
        "file": [
            {
                "sha": "87f4c559e1d494f22aaaed3b2fea7ccecc9c1294",
                "filename": "src/org/apache/axis/types/Time.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/2aae4719f7476c0063cad6876b5c52a0559d5654/src/org/apache/axis/types/Time.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2aae4719f7476c0063cad6876b5c52a0559d5654/src/org/apache/axis/types/Time.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/types/Time.java?ref=2aae4719f7476c0063cad6876b5c52a0559d5654",
                "patch": "@@ -236,9 +236,9 @@ public String toString() {\n     }\n \n     public boolean equals(Object obj) {\n+        if (obj == null) return false;\n         if (!(obj instanceof Time)) return false;\n         Time other = (Time) obj;\n-        if (obj == null) return false;\n         if (this == obj) return true;\n \n         boolean _equals;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/ba53bdf1a551864b8467c45a49da049e4240ebd6",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/e7ffca1a6f188d0415a8f1d32bb5c060074159c8",
        "message": "Avoid NPE from activeDeserializers in addChildDeserializer(Deserializer).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@258582 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_39",
        "file": [
            {
                "sha": "8b98cac87b746392489ed6febba4570bc97b423c",
                "filename": "src/org/apache/axis/encoding/DeserializerImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/ba53bdf1a551864b8467c45a49da049e4240ebd6/src/org/apache/axis/encoding/DeserializerImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ba53bdf1a551864b8467c45a49da049e4240ebd6/src/org/apache/axis/encoding/DeserializerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DeserializerImpl.java?ref=ba53bdf1a551864b8467c45a49da049e4240ebd6",
                "patch": "@@ -261,8 +261,9 @@ public void addChildDeserializer(Deserializer dSer) {\n         // Keep track of our active deserializers.  This enables us to figure\n         // out whether or not we're really done in the case where we get to\n         // our end tag, but still have open hrefs for members.\n-        activeDeserializers.add(dSer);\n-        \n+    \tif (activeDeserializers != null) {\n+    \t\tactiveDeserializers.add(dSer);\n+    \t}        \n         // In concert with the above, we make sure each field deserializer\n         // lets us know when it's done so we can take it off our list.\n         dSer.registerValueTarget(new CallbackTarget(this, dSer));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/cfb109360457e157eb343c357fdfac408ea0d90b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/ed963334ef544fef7e80692eb7db053ef1192c02",
        "message": "avoid NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@258542 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_40",
        "file": [
            {
                "sha": "8bff470dae0f1ffe41688bc7346e56cbcf487c45",
                "filename": "src/org/apache/axis/message/NodeImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/cfb109360457e157eb343c357fdfac408ea0d90b/src/org/apache/axis/message/NodeImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/cfb109360457e157eb343c357fdfac408ea0d90b/src/org/apache/axis/message/NodeImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/NodeImpl.java?ref=cfb109360457e157eb343c357fdfac408ea0d90b",
                "patch": "@@ -406,6 +406,7 @@ public Node cloneNode(boolean deep) {\n      * nodes.\n      */\n     public NodeList getChildNodes() {\n+        initializeChildren();\n         return new NodeListImpl(children);\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/4eac24dd3f88c2c27780147b0ccbf554acbc0001",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a9ae58ca80f33f4d7701c905b941b3d7eea83fbb",
        "message": "Ignore NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@258458 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_41",
        "file": [
            {
                "sha": "a70865c1c90b6c4e84df32079bb597506f495e5c",
                "filename": "src/org/apache/axis/encoding/DeserializationContextImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/4eac24dd3f88c2c27780147b0ccbf554acbc0001/src/org/apache/axis/encoding/DeserializationContextImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4eac24dd3f88c2c27780147b0ccbf554acbc0001/src/org/apache/axis/encoding/DeserializationContextImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DeserializationContextImpl.java?ref=4eac24dd3f88c2c27780147b0ccbf554acbc0001",
                "patch": "@@ -220,7 +220,7 @@ public void parse() throws SAXException\n                 try {\n                     // cleanup - so that the parser can be reused.\n                     parser.setProperty(\"http://xml.org/sax/properties/lexical-handler\", null);\n-                } catch (SAXException se){\n+                } catch (Exception e){\n                     // Ignore.\n                 }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c23b3d49a3406515996ef3ee02795662a9498755",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/53ebaeea224a5a8048cb988acd53e29fdf040602",
        "message": "minor NPE bugs found with FindBugs tool\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@258442 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_42",
        "file": [
            {
                "sha": "5f88447b2c1428d0aa51be3bfe806ad0ce5eba17",
                "filename": "src/org/apache/axis/description/TypeDesc.java",
                "status": "modified",
                "additions": 11,
                "deletions": 11,
                "changes": 22,
                "blob_url": "https://github.com/apache/axis1-java/blob/c23b3d49a3406515996ef3ee02795662a9498755/src/org/apache/axis/description/TypeDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c23b3d49a3406515996ef3ee02795662a9498755/src/org/apache/axis/description/TypeDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/TypeDesc.java?ref=c23b3d49a3406515996ef3ee02795662a9498755",
                "patch": "@@ -255,10 +255,10 @@ public QName getElementNameForField(String fieldName)\n                     return parentDesc.getElementNameForField(fieldName);\n                 }\n             }\n-        } else if (!desc.isElement()) {\n-            return null;\n-        }\n-        return desc.getXmlName();\n+        } else if (desc.isElement()) {\n+            return desc.getXmlName();\n+        } \n+        return null;\n     }\n     \n     /**\n@@ -276,14 +276,14 @@ public QName getAttributeNameForField(String fieldName)\n                     return parentDesc.getAttributeNameForField(fieldName);\n                 }\n             }\n-        } else if (desc.isElement()) {\n-            return null;\n-        }\n-        QName ret = desc.getXmlName();\n-        if (ret == null) {\n-            ret = new QName(\"\", fieldName);\n+        } else if (!desc.isElement()) {\n+            QName ret = desc.getXmlName();\n+            if (ret == null) {\n+                ret = new QName(\"\", fieldName);\n+            }\n+            return ret;\n         }\n-        return ret;\n+        return null;\n     }\n \n     /**"
            },
            {
                "sha": "3c83795ccb0b288f48140790ac9db9985b134c0d",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/c23b3d49a3406515996ef3ee02795662a9498755/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c23b3d49a3406515996ef3ee02795662a9498755/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=c23b3d49a3406515996ef3ee02795662a9498755",
                "patch": "@@ -70,7 +70,7 @@ public RPCElement(String namespace,\n \n                 String lc = Utils.xmlNameToJava(name);\n                 if (serviceDesc == null) {\n-                    AxisFault.makeFault(\n+                    throw AxisFault.makeFault(\n                             new ClassNotFoundException(\n                                     Messages.getMessage(\"noClassForService00\",\n                                                          lc)));"
            },
            {
                "sha": "ead228a8a95cd010f05379290c754ffcb80dc080",
                "filename": "src/org/apache/axis/message/SOAPDocumentImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/c23b3d49a3406515996ef3ee02795662a9498755/src/org/apache/axis/message/SOAPDocumentImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c23b3d49a3406515996ef3ee02795662a9498755/src/org/apache/axis/message/SOAPDocumentImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPDocumentImpl.java?ref=c23b3d49a3406515996ef3ee02795662a9498755",
                "patch": "@@ -323,7 +323,7 @@ public NodeList getElementsByTagNameNS(\n                 SOAPBody body =\n                     (org.apache.axis.message.SOAPBody) soapEnv.getHeader();\n                 if (body != null) {\n-                    return header.getElementsByTagNameNS(\n+                    return body.getElementsByTagNameNS(\n                             namespaceURI,\n                             localName);\n                 }\n@@ -352,9 +352,9 @@ public NodeList getElementsByTagName(String localName) {\n                     return header.getElementsByTagName(localName);\n                 }\n                 SOAPBody body =\n-                    (org.apache.axis.message.SOAPBody) soapEnv.getHeader();\n+                    (org.apache.axis.message.SOAPBody) soapEnv.getBody();\n                 if (body != null) {\n-                    return header.getElementsByTagName(localName);\n+                    return body.getElementsByTagName(localName);\n                 }\n             }\n             return null;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/bf821cbfd1549e037ca6fd9cd75b2691fe453a94",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/470c0516dbd9de44caf4883bcc81eb509a25a27b",
        "message": "Fix NPE if we switch on logging.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257925 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_43",
        "file": [
            {
                "sha": "78b0aa931e0a475e07a11e79ef3c87288ff03901",
                "filename": "src/org/apache/axis/transport/http/HTTPSender.java",
                "status": "modified",
                "additions": 13,
                "deletions": 8,
                "changes": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/bf821cbfd1549e037ca6fd9cd75b2691fe453a94/src/org/apache/axis/transport/http/HTTPSender.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/bf821cbfd1549e037ca6fd9cd75b2691fe453a94/src/org/apache/axis/transport/http/HTTPSender.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/HTTPSender.java?ref=bf821cbfd1549e037ca6fd9cd75b2691fe453a94",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.axis.soap.SOAP12Constants;\n import org.apache.axis.soap.SOAPConstants;\n import org.apache.axis.utils.Messages;\n+import org.apache.axis.utils.TeeOutputStream;\n import org.apache.commons.logging.Log;\n \n import javax.xml.soap.MimeHeader;\n@@ -429,10 +430,19 @@ private InputStream writeToSocket(SocketHolder sockHolder,\n                 throw fault;\n             }\n         }\n+        ByteArrayOutputStream baos = null;\n+        if (log.isDebugEnabled()) {\n+            log.debug(Messages.getMessage(\"xmlSent00\"));\n+            log.debug(\"---------------------------------------------------\");\n+            baos = new ByteArrayOutputStream();\n+        }\n         if (httpChunkStream) {\n             ChunkedOutputStream chunkedOutputStream = new ChunkedOutputStream(out);\n             out = new BufferedOutputStream(chunkedOutputStream, Constants.HTTP_TXR_BUFFER_SIZE);\n             try {\n+                if(baos != null) {\n+                    out = new TeeOutputStream(out, baos);\n+                }\n                 reqMessage.writeTo(out);\n             } catch (SOAPException e) {\n                 log.error(Messages.getMessage(\"exception00\"), e);\n@@ -446,6 +456,9 @@ private InputStream writeToSocket(SocketHolder sockHolder,\n                     out.write(header.toString()\n                             .getBytes(HTTPConstants.HEADER_DEFAULT_CHAR_ENCODING));\n                 }\n+                if(baos != null) {\n+                    out = new TeeOutputStream(out, baos);\n+                }\n                 reqMessage.writeTo(out);\n             } catch (SOAPException e) {\n                 log.error(Messages.getMessage(\"exception00\"), e);\n@@ -454,14 +467,6 @@ private InputStream writeToSocket(SocketHolder sockHolder,\n             out.flush();\n         }\n         if (log.isDebugEnabled()) {\n-            log.debug(Messages.getMessage(\"xmlSent00\"));\n-            log.debug(\"---------------------------------------------------\");\n-            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-            try {\n-                reqMessage.writeTo(baos);\n-            } catch (SOAPException e) {\n-                log.error(Messages.getMessage(\"exception00\"), e);\n-            }\n             log.debug(header + new String(baos.toByteArray()));\n         }\n "
            },
            {
                "sha": "94a237b340013579174e488098372e1cd56309ad",
                "filename": "src/org/apache/axis/utils/TeeOutputStream.java",
                "status": "added",
                "additions": 55,
                "deletions": 0,
                "changes": 55,
                "blob_url": "https://github.com/apache/axis1-java/blob/bf821cbfd1549e037ca6fd9cd75b2691fe453a94/src/org/apache/axis/utils/TeeOutputStream.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/bf821cbfd1549e037ca6fd9cd75b2691fe453a94/src/org/apache/axis/utils/TeeOutputStream.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/TeeOutputStream.java?ref=bf821cbfd1549e037ca6fd9cd75b2691fe453a94",
                "patch": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2001-2004 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.axis.utils;\n+\n+import java.io.OutputStream;\n+import java.io.IOException;\n+\n+public class TeeOutputStream extends OutputStream {\n+    private OutputStream left;\n+    private OutputStream right;\n+\n+    public TeeOutputStream(OutputStream left, OutputStream right) {\n+        this.left = left;\n+        this.right = right;\n+    }\n+\n+    public void close() throws IOException {\n+        left.close();\n+        right.close();\n+    }\n+\n+    public void flush() throws IOException {\n+        left.flush();\n+        right.flush();\n+    }\n+\n+    public void write(byte[] b) throws IOException {\n+        left.write(b);\n+        right.write(b);\n+    }\n+\n+    public void write(byte[] b, int off, int len) throws IOException {\n+        left.write(b, off, len);\n+        right.write(b, off, len);\n+    }\n+\n+    public void write(int b) throws IOException {\n+        left.write(b);\n+        right.write(b);\n+    }\n+}\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f2e1a537378c931d2022ca938c8751e8330a863b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/87570267fc7b2d80f100115a9f8bdf0c9525fc69",
        "message": "Fix NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257898 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_44",
        "file": [
            {
                "sha": "227c1fef30f219f30ee8be51557fc04ff150d0bd",
                "filename": "src/org/apache/axis/components/encoding/XMLEncoderFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/f2e1a537378c931d2022ca938c8751e8330a863b/src/org/apache/axis/components/encoding/XMLEncoderFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f2e1a537378c931d2022ca938c8751e8330a863b/src/org/apache/axis/components/encoding/XMLEncoderFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/encoding/XMLEncoderFactory.java?ref=f2e1a537378c931d2022ca938c8751e8330a863b",
                "patch": "@@ -121,4 +121,4 @@ private static void loadPluggableEncoders() {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "67a2e21f174348b7f9c77851bf12c3b4d539be37",
                "filename": "src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/f2e1a537378c931d2022ca938c8751e8330a863b/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f2e1a537378c931d2022ca938c8751e8330a863b/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java?ref=f2e1a537378c931d2022ca938c8751e8330a863b",
                "patch": "@@ -119,7 +119,7 @@ public SOAPHandler onStartChild(String namespace,\n                 }\n             }\n \n-            if (faultDesc == null) {\n+            if (faultDesc == null && op.getFaults() != null) {\n                 Iterator i = op.getFaults().iterator();\n                 while(i.hasNext()) {\n                     FaultDesc fdesc = (FaultDesc) i.next();\n@@ -191,3 +191,5 @@ public void setValue(Object value, Object hint)\n         \n     }\n }\n+\n+"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/a85da300b367cbef41a9fd5eac1a7dfe53fdfae4",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b188cb6eebb7f642ce28ac3fd0118ce88e83f0c7",
        "message": "Fix NPE :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257793 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_45",
        "file": [
            {
                "sha": "2501ab211eee2eef889d9a22d90a69c21fe185da",
                "filename": "src/org/apache/axis/message/RPCHandler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/a85da300b367cbef41a9fd5eac1a7dfe53fdfae4/src/org/apache/axis/message/RPCHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a85da300b367cbef41a9fd5eac1a7dfe53fdfae4/src/org/apache/axis/message/RPCHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCHandler.java?ref=a85da300b367cbef41a9fd5eac1a7dfe53fdfae4",
                "patch": "@@ -227,7 +227,7 @@ public SOAPHandler onStartChild(String namespace,\n             }\n         }\n \n-        if (type.equals(XMLType.AXIS_VOID)) {\n+        if (type != null && type.equals(XMLType.AXIS_VOID)) {\n             Deserializer nilDSer =  new DeserializerImpl();\n             return (SOAPHandler) nilDSer;\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f9e7f1ba283c1e08e2d292c048364d1a5ea237b7",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/8ecb753cae769ef1e5147ec44a82cd4adee83d2c",
        "message": "prevent NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257364 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_46",
        "file": [
            {
                "sha": "d22e34fb48f06ec4bd819999727656855c9814e2",
                "filename": "src/org/apache/axis/providers/java/MsgProvider.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/f9e7f1ba283c1e08e2d292c048364d1a5ea237b7/src/org/apache/axis/providers/java/MsgProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f9e7f1ba283c1e08e2d292c048364d1a5ea237b7/src/org/apache/axis/providers/java/MsgProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/MsgProvider.java?ref=f9e7f1ba283c1e08e2d292c048364d1a5ea237b7",
                "patch": "@@ -111,23 +111,23 @@ public void processMessage (MessageContext msgContext,\n         OperationDesc operation = msgContext.getOperation();\n         SOAPService service = msgContext.getService();\n         ServiceDesc serviceDesc = service.getServiceDescription();\n+        QName opQName = null;\n         \n         if (operation == null) {\n             Vector bodyElements = reqEnv.getBodyElements();\n             if(bodyElements.size() > 0) {\n                 MessageElement element = (MessageElement) bodyElements.get(0);\n                 if (element != null) {\n-                    QName qname = new QName(element.getNamespaceURI(),\n+                    opQName = new QName(element.getNamespaceURI(),\n                             element.getLocalName());\n-                    operation = serviceDesc.getOperationByElementQName(qname);\n+                    operation = serviceDesc.getOperationByElementQName(opQName);\n                 }\n             }\n         }\n \n         if (operation == null) {\n             throw new AxisFault(Messages.getMessage(\"noOperationForQName\",\n-                                                    reqEnv.getFirstBody().\n-                                                        getQName().toString()));\n+                                opQName == null ? \"null\" : opQName.toString()));\n         }\n         \n         Method method = operation.getMethod();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/efd3c5aafdd03a8671ec25fdd3180635d89b0766",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/3191c0ad2864f359fd032df94e40a316c593229f",
        "message": "Fix for Bug 23712 - NPE in BeanUtils.processPropertyDescriptors\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256765 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_47",
        "file": [
            {
                "sha": "76a0eb0691a25bd62084fcbf7a5d6d93c62800cc",
                "filename": "src/org/apache/axis/utils/BeanUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/efd3c5aafdd03a8671ec25fdd3180635d89b0766/src/org/apache/axis/utils/BeanUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/efd3c5aafdd03a8671ec25fdd3180635d89b0766/src/org/apache/axis/utils/BeanUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/BeanUtils.java?ref=efd3c5aafdd03a8671ec25fdd3180635d89b0766",
                "patch": "@@ -121,7 +121,7 @@ public Object run() {\n                                 result = Introspector.\n                                         getBeanInfo(secJavaType,AxisFault.class).\n                                         getPropertyDescriptors();\n-                            } else if (Throwable.class.isAssignableFrom(secJavaType)) {\n+                            } else if (Throwable.class != secJavaType && Throwable.class.isAssignableFrom(secJavaType)) {\n                                 // Don't include Throwable data\n                                 result = Introspector.\n                                         getBeanInfo(secJavaType,Throwable.class)."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f40e99d830a009c140e8c9ec8be77c8b904edd02",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a557e9bdfd780ededf09b5d6df4ef35151b6fc3f",
        "message": "Fix for Bug 23712 - NPE in BeanUtils.processPropertyDescriptors\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249696 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_48",
        "file": [
            {
                "sha": "76a0eb0691a25bd62084fcbf7a5d6d93c62800cc",
                "filename": "src/org/apache/axis/utils/BeanUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/f40e99d830a009c140e8c9ec8be77c8b904edd02/src/org/apache/axis/utils/BeanUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f40e99d830a009c140e8c9ec8be77c8b904edd02/src/org/apache/axis/utils/BeanUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/BeanUtils.java?ref=f40e99d830a009c140e8c9ec8be77c8b904edd02",
                "patch": "@@ -121,7 +121,7 @@ public Object run() {\n                                 result = Introspector.\n                                         getBeanInfo(secJavaType,AxisFault.class).\n                                         getPropertyDescriptors();\n-                            } else if (Throwable.class.isAssignableFrom(secJavaType)) {\n+                            } else if (Throwable.class != secJavaType && Throwable.class.isAssignableFrom(secJavaType)) {\n                                 // Don't include Throwable data\n                                 result = Introspector.\n                                         getBeanInfo(secJavaType,Throwable.class)."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/a8b485b7cc6cd61dfa75d40e148104f8e72bb8a0",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/9838ef421770d2df2ff5215fbfac69a2bf685aa6",
        "message": "Fix NPE in recent patch...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256539 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_49",
        "file": [
            {
                "sha": "89a7aea48e2ae767c6fdf1e6498067cd68e18750",
                "filename": "src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/a8b485b7cc6cd61dfa75d40e148104f8e72bb8a0/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a8b485b7cc6cd61dfa75d40e148104f8e72bb8a0/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java?ref=a8b485b7cc6cd61dfa75d40e148104f8e72bb8a0",
                "patch": "@@ -148,7 +148,9 @@ public SOAPHandler onStartChild(String namespace,\n             // If we didn't get type information, look up QName of fault\n             if (faultDesc == null) {\n                 faultDesc = op.getFaultByQName(qn);\n-                faultXmlType = faultDesc.getXmlType();\n+                if (faultDesc != null) {\n+                    faultXmlType = faultDesc.getXmlType();\n+                }\n             }\n \n             // Set the class if we found a description"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/ce7981727f5ec1b6f2a2fa6abb784536db97cca6",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/5b6f5449c687283377825df173aaacd701529380",
        "message": "Fix NPE in recent patch...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249470 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_50",
        "file": [
            {
                "sha": "89a7aea48e2ae767c6fdf1e6498067cd68e18750",
                "filename": "src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/ce7981727f5ec1b6f2a2fa6abb784536db97cca6/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ce7981727f5ec1b6f2a2fa6abb784536db97cca6/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFaultDetailsBuilder.java?ref=ce7981727f5ec1b6f2a2fa6abb784536db97cca6",
                "patch": "@@ -148,7 +148,9 @@ public SOAPHandler onStartChild(String namespace,\n             // If we didn't get type information, look up QName of fault\n             if (faultDesc == null) {\n                 faultDesc = op.getFaultByQName(qn);\n-                faultXmlType = faultDesc.getXmlType();\n+                if (faultDesc != null) {\n+                    faultXmlType = faultDesc.getXmlType();\n+                }\n             }\n \n             // Set the class if we found a description"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/dd6a39bdbc48827426d84d1b438cf896c4d9ef7c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f90cddfb1bcebd10c1d19fb4180cc23779d76ee2",
        "message": "Prevent NPE if null is passed in.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256107 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_51",
        "file": [
            {
                "sha": "45a7b4b43005252d46256ec99127ae2802a20e27",
                "filename": "src/org/apache/axis/client/AxisClientProxy.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/dd6a39bdbc48827426d84d1b438cf896c4d9ef7c/src/org/apache/axis/client/AxisClientProxy.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dd6a39bdbc48827426d84d1b438cf896c4d9ef7c/src/org/apache/axis/client/AxisClientProxy.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClientProxy.java?ref=dd6a39bdbc48827426d84d1b438cf896c4d9ef7c",
                "patch": "@@ -115,7 +115,7 @@\n         }\n         \n         Vector paramsCall = new Vector();\n-        for (int i = 0; i < proxyParams.length;i++)\n+        for (int i = 0; proxyParams != null && i < proxyParams.length;i++)\n         {\n             Object param = proxyParams[i];\n             ParameterDesc paramDesc = operationDesc.getParameter(i);            "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/4da85300a7d9fd3eacb6b30ec3650c3e45ac8a5c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6a60612870cdf1ec5494c766265be79fca5dc553",
        "message": "Prevent NPE if null is passed in.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249038 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_52",
        "file": [
            {
                "sha": "45a7b4b43005252d46256ec99127ae2802a20e27",
                "filename": "src/org/apache/axis/client/AxisClientProxy.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/4da85300a7d9fd3eacb6b30ec3650c3e45ac8a5c/src/org/apache/axis/client/AxisClientProxy.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4da85300a7d9fd3eacb6b30ec3650c3e45ac8a5c/src/org/apache/axis/client/AxisClientProxy.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClientProxy.java?ref=4da85300a7d9fd3eacb6b30ec3650c3e45ac8a5c",
                "patch": "@@ -115,7 +115,7 @@\n         }\n         \n         Vector paramsCall = new Vector();\n-        for (int i = 0; i < proxyParams.length;i++)\n+        for (int i = 0; proxyParams != null && i < proxyParams.length;i++)\n         {\n             Object param = proxyParams[i];\n             ParameterDesc paramDesc = operationDesc.getParameter(i);            "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/33ecf56d16ac7806599959f2f66a3ad66dbac1af",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/3cc028b04da2ce3eb947ed8e7cc759d2be040b7e",
        "message": "Prevent NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256088 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_53",
        "file": [
            {
                "sha": "bfc61828efd0604afd7386ecb73b27cbf8a3c190",
                "filename": "src/org/apache/axis/message/SOAPHeader.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/33ecf56d16ac7806599959f2f66a3ad66dbac1af/src/org/apache/axis/message/SOAPHeader.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/33ecf56d16ac7806599959f2f66a3ad66dbac1af/src/org/apache/axis/message/SOAPHeader.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeader.java?ref=33ecf56d16ac7806599959f2f66a3ad66dbac1af",
                "patch": "@@ -94,7 +94,7 @@\n     SOAPHeader(SOAPEnvelope env, SOAPConstants soapConsts) {\n         super(Constants.ELEM_HEADER,\n               Constants.NS_PREFIX_SOAP_ENV,\n-              soapConsts.getEnvelopeURI());\n+              soapConsts != null? soapConsts.getEnvelopeURI() : SOAPConstants.SOAP11_CONSTANTS.getEnvelopeURI());\n         soapConstants = soapConsts;\n         try {\n             setParentElement(env);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/d48862e9424f6b1dec30dfa92dad2b6211f83640",
        "message": "Prevent NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249019 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_54",
        "file": [
            {
                "sha": "bfc61828efd0604afd7386ecb73b27cbf8a3c190",
                "filename": "src/org/apache/axis/message/SOAPHeader.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea/src/org/apache/axis/message/SOAPHeader.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea/src/org/apache/axis/message/SOAPHeader.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeader.java?ref=bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea",
                "patch": "@@ -94,7 +94,7 @@\n     SOAPHeader(SOAPEnvelope env, SOAPConstants soapConsts) {\n         super(Constants.ELEM_HEADER,\n               Constants.NS_PREFIX_SOAP_ENV,\n-              soapConsts.getEnvelopeURI());\n+              soapConsts != null? soapConsts.getEnvelopeURI() : SOAPConstants.SOAP11_CONSTANTS.getEnvelopeURI());\n         soapConstants = soapConsts;\n         try {\n             setParentElement(env);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e0311bf7bafe9c59e01ea3b94479aa94f54c9335",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/02392a47dfad631694f8b9fb275a7cc9c1b8ff25",
        "message": "minor NPE fix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255505 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_55",
        "file": [
            {
                "sha": "aa11eb8f9642d32972ec05066af8ff3619f6354b",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/e0311bf7bafe9c59e01ea3b94479aa94f54c9335/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e0311bf7bafe9c59e01ea3b94479aa94f54c9335/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=e0311bf7bafe9c59e01ea3b94479aa94f54c9335",
                "patch": "@@ -1062,7 +1062,7 @@ public Parameters getOperationParameters(Operation operation,\n \n         // Collect all the input parameters\n         Input input = operation.getInput();\n-        if (input != null) {\n+        if (input != null && input.getMessage() != null) {\n             getParametersFromParts(inputs,\n                                    input.getMessage().getOrderedParts(null),\n                                    literalInput,\n@@ -1072,7 +1072,7 @@ public Parameters getOperationParameters(Operation operation,\n \n         // Collect all the output parameters\n         Output output = operation.getOutput();\n-        if (output != null) {\n+        if (output != null && output.getMessage() != null) {\n             getParametersFromParts(outputs,\n                                    output.getMessage().getOrderedParts(null),\n                                    literalOutput,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/02392a47dfad631694f8b9fb275a7cc9c1b8ff25",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/729f5bca192a2fe7d3ea53fcf437b809073a73cf",
        "message": "setScopedProperty stub changes, skeleton change, NPE fix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255504 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_56",
        "file": [
            {
                "sha": "2bfd17724d26d3b18ae15d8fd078800a37c902e1",
                "filename": "src/org/apache/axis/wsdl/symbolTable/FaultInfo.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/02392a47dfad631694f8b9fb275a7cc9c1b8ff25/src/org/apache/axis/wsdl/symbolTable/FaultInfo.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/02392a47dfad631694f8b9fb275a7cc9c1b8ff25/src/org/apache/axis/wsdl/symbolTable/FaultInfo.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/FaultInfo.java?ref=02392a47dfad631694f8b9fb275a7cc9c1b8ff25",
                "patch": "@@ -209,7 +209,7 @@ private QName getFaultType(SymbolTable st, Part part) {\n             }\n             // Literal, so get the element's type\n             TypeEntry entry = st.getElement(part.getElementName());\n-            if (entry != null) {\n+            if (entry != null && entry.getRefType() != null) {\n                 return entry.getRefType().getQName();\n             }\n         }"
            },
            {
                "sha": "400426f26b6b1ef9d4cb5bbf6fbcef1cf31122ff",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/02392a47dfad631694f8b9fb275a7cc9c1b8ff25/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/02392a47dfad631694f8b9fb275a7cc9c1b8ff25/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java?ref=02392a47dfad631694f8b9fb275a7cc9c1b8ff25",
                "patch": "@@ -283,11 +283,16 @@ protected void writeFileBody(PrintWriter pw) throws IOException {\n                         FaultInfo faultInfo = (FaultInfo) it.next();\n                         QName faultQName = faultInfo.getQName();\n                         QName faultXMLType = faultInfo.getXMLType();\n+                        String faultName = faultInfo.getName();\n                         String className = \n                             Utils.getFullExceptionName(\n                                faultInfo.getMessage(), symbolTable);\n                         pw.println(\"        _fault = \" +\n                                    \"new org.apache.axis.description.FaultDesc();\");\n+                        if (faultName != null) {\n+                            pw.println(\"        _fault.setName(\\\"\" +\n+                                       faultName + \"\\\");\");\n+                        }\n                         if (faultQName != null) {\n                             pw.println(\"        _fault.setQName(\" +\n                                        Utils.getNewQName(faultQName)  + \");\");"
            },
            {
                "sha": "25c77b5acc5387853278b25c021c12e4325e5369",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 6,
                "changes": 9,
                "blob_url": "https://github.com/apache/axis1-java/blob/02392a47dfad631694f8b9fb275a7cc9c1b8ff25/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/02392a47dfad631694f8b9fb275a7cc9c1b8ff25/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java?ref=02392a47dfad631694f8b9fb275a7cc9c1b8ff25",
                "patch": "@@ -228,10 +228,7 @@ protected void writeFileBody(PrintWriter pw) throws IOException {\n         pw.println(\"            java.util.Enumeration keys = super.cachedProperties.keys();\");\n         pw.println(\"            while (keys.hasMoreElements()) {\");\n         pw.println(\"                java.lang.String key = (java.lang.String) keys.nextElement();\");\n-        pw.println(\"                if(_call.isPropertySupported(key))\");\n-        pw.println(\"                    _call.setProperty(key, super.cachedProperties.get(key));\");\n-        pw.println(\"                else\");\n-        pw.println(\"                    _call.setScopedProperty(key, super.cachedProperties.get(key));\");\n+        pw.println(\"                _call.setProperty(key, super.cachedProperties.get(key));\");\n         pw.println(\"            }\");\n         if (typeMappingCount > 0) {\n             pw.println(\"            // \" + Messages.getMessage(\"typeMap00\"));\n@@ -644,15 +641,15 @@ else if (p.getMode() == Parameter.INOUT) {\n             // Turn off encoding\n             pw.println(\"        _call.setEncodingStyle(null);\");\n             // turn off XSI types\n-            pw.println(\"        _call.setScopedProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);\");\n+            pw.println(\"        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);\");\n         }\n         if (hasMIME || use == Use.LITERAL) {\n             // If it is literal, turn off multirefs.\n             //\n             // If there are any MIME types, turn off multirefs.\n             // I don't know enough about the guts to know why\n             // attachments don't work with multirefs, but they don't.\n-            pw.println(\"        _call.setScopedProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);\");\n+            pw.println(\"        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);\");\n         }\n \n         Style style = Style.getStyle(opStyle, bEntry.getBindingStyle());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/79b59646e2385a2909ba7870953379ab5abfce35",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7",
        "message": "minor NPE fix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248435 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_57",
        "file": [
            {
                "sha": "aa11eb8f9642d32972ec05066af8ff3619f6354b",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/79b59646e2385a2909ba7870953379ab5abfce35/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/79b59646e2385a2909ba7870953379ab5abfce35/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=79b59646e2385a2909ba7870953379ab5abfce35",
                "patch": "@@ -1062,7 +1062,7 @@ public Parameters getOperationParameters(Operation operation,\n \n         // Collect all the input parameters\n         Input input = operation.getInput();\n-        if (input != null) {\n+        if (input != null && input.getMessage() != null) {\n             getParametersFromParts(inputs,\n                                    input.getMessage().getOrderedParts(null),\n                                    literalInput,\n@@ -1072,7 +1072,7 @@ public Parameters getOperationParameters(Operation operation,\n \n         // Collect all the output parameters\n         Output output = operation.getOutput();\n-        if (output != null) {\n+        if (output != null && output.getMessage() != null) {\n             getParametersFromParts(outputs,\n                                    output.getMessage().getOrderedParts(null),\n                                    literalOutput,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/4181639606bf00233cd99a17424c5b03fd38c953",
        "message": "setScopedProperty stub changes, skeleton change, NPE fix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248434 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_58",
        "file": [
            {
                "sha": "2bfd17724d26d3b18ae15d8fd078800a37c902e1",
                "filename": "src/org/apache/axis/wsdl/symbolTable/FaultInfo.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7/src/org/apache/axis/wsdl/symbolTable/FaultInfo.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7/src/org/apache/axis/wsdl/symbolTable/FaultInfo.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/FaultInfo.java?ref=0f3d891c69f4da06a727e72ff09b56af4f3ae1c7",
                "patch": "@@ -209,7 +209,7 @@ private QName getFaultType(SymbolTable st, Part part) {\n             }\n             // Literal, so get the element's type\n             TypeEntry entry = st.getElement(part.getElementName());\n-            if (entry != null) {\n+            if (entry != null && entry.getRefType() != null) {\n                 return entry.getRefType().getQName();\n             }\n         }"
            },
            {
                "sha": "400426f26b6b1ef9d4cb5bbf6fbcef1cf31122ff",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java?ref=0f3d891c69f4da06a727e72ff09b56af4f3ae1c7",
                "patch": "@@ -283,11 +283,16 @@ protected void writeFileBody(PrintWriter pw) throws IOException {\n                         FaultInfo faultInfo = (FaultInfo) it.next();\n                         QName faultQName = faultInfo.getQName();\n                         QName faultXMLType = faultInfo.getXMLType();\n+                        String faultName = faultInfo.getName();\n                         String className = \n                             Utils.getFullExceptionName(\n                                faultInfo.getMessage(), symbolTable);\n                         pw.println(\"        _fault = \" +\n                                    \"new org.apache.axis.description.FaultDesc();\");\n+                        if (faultName != null) {\n+                            pw.println(\"        _fault.setName(\\\"\" +\n+                                       faultName + \"\\\");\");\n+                        }\n                         if (faultQName != null) {\n                             pw.println(\"        _fault.setQName(\" +\n                                        Utils.getNewQName(faultQName)  + \");\");"
            },
            {
                "sha": "25c77b5acc5387853278b25c021c12e4325e5369",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 6,
                "changes": 9,
                "blob_url": "https://github.com/apache/axis1-java/blob/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0f3d891c69f4da06a727e72ff09b56af4f3ae1c7/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java?ref=0f3d891c69f4da06a727e72ff09b56af4f3ae1c7",
                "patch": "@@ -228,10 +228,7 @@ protected void writeFileBody(PrintWriter pw) throws IOException {\n         pw.println(\"            java.util.Enumeration keys = super.cachedProperties.keys();\");\n         pw.println(\"            while (keys.hasMoreElements()) {\");\n         pw.println(\"                java.lang.String key = (java.lang.String) keys.nextElement();\");\n-        pw.println(\"                if(_call.isPropertySupported(key))\");\n-        pw.println(\"                    _call.setProperty(key, super.cachedProperties.get(key));\");\n-        pw.println(\"                else\");\n-        pw.println(\"                    _call.setScopedProperty(key, super.cachedProperties.get(key));\");\n+        pw.println(\"                _call.setProperty(key, super.cachedProperties.get(key));\");\n         pw.println(\"            }\");\n         if (typeMappingCount > 0) {\n             pw.println(\"            // \" + Messages.getMessage(\"typeMap00\"));\n@@ -644,15 +641,15 @@ else if (p.getMode() == Parameter.INOUT) {\n             // Turn off encoding\n             pw.println(\"        _call.setEncodingStyle(null);\");\n             // turn off XSI types\n-            pw.println(\"        _call.setScopedProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);\");\n+            pw.println(\"        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);\");\n         }\n         if (hasMIME || use == Use.LITERAL) {\n             // If it is literal, turn off multirefs.\n             //\n             // If there are any MIME types, turn off multirefs.\n             // I don't know enough about the guts to know why\n             // attachments don't work with multirefs, but they don't.\n-            pw.println(\"        _call.setScopedProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);\");\n+            pw.println(\"        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);\");\n         }\n \n         Style style = Style.getStyle(opStyle, bEntry.getBindingStyle());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/54c36aaac2ce2e9d0f8585774966c011a7cfc463",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/fe21c68bf6d65b1926b717fbefca315ad63c1f71",
        "message": "Added initTMR() method back.\n\nAdded protection against NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255202 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_59",
        "file": [
            {
                "sha": "464667138ff095af9f275fc8953a05fe6c3cfba0",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDService.java",
                "status": "modified",
                "additions": 37,
                "deletions": 6,
                "changes": 43,
                "blob_url": "https://github.com/apache/axis1-java/blob/54c36aaac2ce2e9d0f8585774966c011a7cfc463/src/org/apache/axis/deployment/wsdd/WSDDService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54c36aaac2ce2e9d0f8585774966c011a7cfc463/src/org/apache/axis/deployment/wsdd/WSDDService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDService.java?ref=54c36aaac2ce2e9d0f8585774966c011a7cfc463",
                "patch": "@@ -100,7 +100,7 @@\n     extends WSDDTargetedChain\n     implements WSDDTypeMappingContainer\n {\n-    private TypeMappingRegistry tmr = new TypeMappingRegistryImpl();;\n+    private TypeMappingRegistry tmr = null;\n \n     private Vector faultFlows = new Vector();\n     private Vector typeMappings = new Vector();\n@@ -186,15 +186,13 @@ public WSDDService(Element e)\n             WSDDTypeMapping mapping =\n                     new WSDDTypeMapping(typeMappingElements[i]);\n             typeMappings.add(mapping);\n-            deployTypeMapping(mapping);\n         }\n \n         Element [] beanMappingElements = getChildElements(e, ELEM_WSDD_BEANMAPPING);\n         for (int i = 0; i < beanMappingElements.length; i++) {\n             WSDDBeanMapping mapping =\n                     new WSDDBeanMapping(beanMappingElements[i]);\n             typeMappings.add(mapping);\n-            deployTypeMapping(mapping);\n         }\n \n         Element [] namespaceElements = getChildElements(e, ELEM_WSDD_NAMESPACE);\n@@ -230,20 +228,47 @@ public WSDDService(Element e)\n \t// Add in JAX-RPC support for HandlerInfo chains\n         Element hcEl = getChildElement(e, ELEM_WSDD_JAXRPC_CHAIN);\n         if (hcEl != null) {\n-\t    \t_wsddHIchain = new WSDDJAXRPCHandlerInfoChain(hcEl);\n+            _wsddHIchain = new WSDDJAXRPCHandlerInfoChain(hcEl);\n         }\n \n+        // Initialize TypeMappingRegistry\n+        initTMR();\n+\n         // call to validate standard descriptors for this service\n         validateDescriptors();\n     }\n \n+    /**\n+     * Initialize a TypeMappingRegistry with the\n+     * WSDDTypeMappings.  \n+     * Note: Extensions of WSDDService may override\n+     * initTMR to popluate the tmr with different\n+     * type mappings.\n+     */\n+    protected void initTMR() throws WSDDException\n+    {\n+        // If not created, construct a tmr \n+        // and populate it with the type mappings.\n+        if (tmr == null) {\n+            tmr = new TypeMappingRegistryImpl();\n+            for (int i=0; i<typeMappings.size(); i++) {\n+                deployTypeMapping((WSDDTypeMapping)\n+                                  typeMappings.get(i));\n+            }\n+        }\n+    }\n+\n+\n     /**\n      * This method can be used for dynamic deployment using new WSDDService()\n      * etc.  It validates some standard parameters for some standard providers\n      * (if present).  Do this before deployment.deployService().\n      */\n-    public void validateDescriptors()\n+    public void validateDescriptors() throws WSDDException\n     {\n+        if (tmr == null) {\n+            initTMR();\n+        }\n         desc.setTypeMappingRegistry(tmr);\n         desc.setTypeMapping(getTypeMapping(desc.getStyle().getEncoding()));\n \n@@ -379,6 +404,9 @@ public Handler makeNewInstance(EngineConfiguration registry)\n             return cachedService;\n         }\n \n+        // Make sure tmr is initialized.\n+        initTMR();\n+\n         Handler reqHandler = null;\n         WSDDChain request = getRequestFlow();\n \n@@ -434,7 +462,6 @@ public Handler makeNewInstance(EngineConfiguration registry)\n \t}\n \n         AxisEngine.normaliseOptions(service);\n-\n         tmr.delegate(registry.getTypeMappingRegistry());\n \n         WSDDFaultFlow [] faultFlows = getFaultFlows();\n@@ -629,6 +656,10 @@ public void removeNamespaceMappings(WSDDDeployment registry)\n     }\n \n     public TypeMapping getTypeMapping(String encodingStyle) {\n+        // If type mapping registry not initialized yet, return null.\n+        if (tmr == null) {\n+            return null;\n+        } \n         return (TypeMapping) tmr.getTypeMapping(encodingStyle);\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f580a53962467f5c39a8a4ce94ff018f56d7b04a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/95e4752b4874776370b1d3a616e69734ea693598",
        "message": "Added initTMR() method back.\n\nAdded protection against NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248131 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_60",
        "file": [
            {
                "sha": "464667138ff095af9f275fc8953a05fe6c3cfba0",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDService.java",
                "status": "modified",
                "additions": 37,
                "deletions": 6,
                "changes": 43,
                "blob_url": "https://github.com/apache/axis1-java/blob/f580a53962467f5c39a8a4ce94ff018f56d7b04a/src/org/apache/axis/deployment/wsdd/WSDDService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f580a53962467f5c39a8a4ce94ff018f56d7b04a/src/org/apache/axis/deployment/wsdd/WSDDService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDService.java?ref=f580a53962467f5c39a8a4ce94ff018f56d7b04a",
                "patch": "@@ -100,7 +100,7 @@\n     extends WSDDTargetedChain\n     implements WSDDTypeMappingContainer\n {\n-    private TypeMappingRegistry tmr = new TypeMappingRegistryImpl();;\n+    private TypeMappingRegistry tmr = null;\n \n     private Vector faultFlows = new Vector();\n     private Vector typeMappings = new Vector();\n@@ -186,15 +186,13 @@ public WSDDService(Element e)\n             WSDDTypeMapping mapping =\n                     new WSDDTypeMapping(typeMappingElements[i]);\n             typeMappings.add(mapping);\n-            deployTypeMapping(mapping);\n         }\n \n         Element [] beanMappingElements = getChildElements(e, ELEM_WSDD_BEANMAPPING);\n         for (int i = 0; i < beanMappingElements.length; i++) {\n             WSDDBeanMapping mapping =\n                     new WSDDBeanMapping(beanMappingElements[i]);\n             typeMappings.add(mapping);\n-            deployTypeMapping(mapping);\n         }\n \n         Element [] namespaceElements = getChildElements(e, ELEM_WSDD_NAMESPACE);\n@@ -230,20 +228,47 @@ public WSDDService(Element e)\n \t// Add in JAX-RPC support for HandlerInfo chains\n         Element hcEl = getChildElement(e, ELEM_WSDD_JAXRPC_CHAIN);\n         if (hcEl != null) {\n-\t    \t_wsddHIchain = new WSDDJAXRPCHandlerInfoChain(hcEl);\n+            _wsddHIchain = new WSDDJAXRPCHandlerInfoChain(hcEl);\n         }\n \n+        // Initialize TypeMappingRegistry\n+        initTMR();\n+\n         // call to validate standard descriptors for this service\n         validateDescriptors();\n     }\n \n+    /**\n+     * Initialize a TypeMappingRegistry with the\n+     * WSDDTypeMappings.  \n+     * Note: Extensions of WSDDService may override\n+     * initTMR to popluate the tmr with different\n+     * type mappings.\n+     */\n+    protected void initTMR() throws WSDDException\n+    {\n+        // If not created, construct a tmr \n+        // and populate it with the type mappings.\n+        if (tmr == null) {\n+            tmr = new TypeMappingRegistryImpl();\n+            for (int i=0; i<typeMappings.size(); i++) {\n+                deployTypeMapping((WSDDTypeMapping)\n+                                  typeMappings.get(i));\n+            }\n+        }\n+    }\n+\n+\n     /**\n      * This method can be used for dynamic deployment using new WSDDService()\n      * etc.  It validates some standard parameters for some standard providers\n      * (if present).  Do this before deployment.deployService().\n      */\n-    public void validateDescriptors()\n+    public void validateDescriptors() throws WSDDException\n     {\n+        if (tmr == null) {\n+            initTMR();\n+        }\n         desc.setTypeMappingRegistry(tmr);\n         desc.setTypeMapping(getTypeMapping(desc.getStyle().getEncoding()));\n \n@@ -379,6 +404,9 @@ public Handler makeNewInstance(EngineConfiguration registry)\n             return cachedService;\n         }\n \n+        // Make sure tmr is initialized.\n+        initTMR();\n+\n         Handler reqHandler = null;\n         WSDDChain request = getRequestFlow();\n \n@@ -434,7 +462,6 @@ public Handler makeNewInstance(EngineConfiguration registry)\n \t}\n \n         AxisEngine.normaliseOptions(service);\n-\n         tmr.delegate(registry.getTypeMappingRegistry());\n \n         WSDDFaultFlow [] faultFlows = getFaultFlows();\n@@ -629,6 +656,10 @@ public void removeNamespaceMappings(WSDDDeployment registry)\n     }\n \n     public TypeMapping getTypeMapping(String encodingStyle) {\n+        // If type mapping registry not initialized yet, return null.\n+        if (tmr == null) {\n+            return null;\n+        } \n         return (TypeMapping) tmr.getTypeMapping(encodingStyle);\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0e27d7c3a3227703a6b400e0fbf230cca2a52fa4",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/9b1b9b5ed6d91fa3783e12cebee4879dda4e9b25",
        "message": "Fix NPE & security in logging\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255009 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_61",
        "file": [
            {
                "sha": "d1d32f158b08848153e89b6154d9e118b34d8582",
                "filename": "lib/commons-logging.jar",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/0e27d7c3a3227703a6b400e0fbf230cca2a52fa4/lib/commons-logging.jar",
                "raw_url": "https://github.com/apache/axis1-java/raw/0e27d7c3a3227703a6b400e0fbf230cca2a52fa4/lib/commons-logging.jar",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/lib/commons-logging.jar?ref=0e27d7c3a3227703a6b400e0fbf230cca2a52fa4"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/6706f16af96781a5a111bbff58c8fa2ef4f9cf46",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/736b947cdcf91ab048b8e5e771c5a27a7b89c05d",
        "message": "Fix NPE in discovery\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255002 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_62",
        "file": [
            {
                "sha": "2b22ff111ab7b8515da48501c7bfd9f7117c4951",
                "filename": "lib/commons-discovery.jar",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/6706f16af96781a5a111bbff58c8fa2ef4f9cf46/lib/commons-discovery.jar",
                "raw_url": "https://github.com/apache/axis1-java/raw/6706f16af96781a5a111bbff58c8fa2ef4f9cf46/lib/commons-discovery.jar",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/lib/commons-discovery.jar?ref=6706f16af96781a5a111bbff58c8fa2ef4f9cf46"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/8c3f864d5d73a80e02f30d07ea3fa92354b12ccc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/dab4393d17e033931241fc31ab8d4446bdb55c22",
        "message": "Fix NPE & security in logging\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247938 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_63",
        "file": [
            {
                "sha": "d1d32f158b08848153e89b6154d9e118b34d8582",
                "filename": "lib/commons-logging.jar",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/8c3f864d5d73a80e02f30d07ea3fa92354b12ccc/lib/commons-logging.jar",
                "raw_url": "https://github.com/apache/axis1-java/raw/8c3f864d5d73a80e02f30d07ea3fa92354b12ccc/lib/commons-logging.jar",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/lib/commons-logging.jar?ref=8c3f864d5d73a80e02f30d07ea3fa92354b12ccc"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/6c623859c630828b871c04abe07a3d5fc57e1385",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/eb3ee443151652e34a241e58b7a568c6ca42e1ed",
        "message": "Fix NPE in discovery\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247931 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_64",
        "file": [
            {
                "sha": "2b22ff111ab7b8515da48501c7bfd9f7117c4951",
                "filename": "lib/commons-discovery.jar",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/6c623859c630828b871c04abe07a3d5fc57e1385/lib/commons-discovery.jar",
                "raw_url": "https://github.com/apache/axis1-java/raw/6c623859c630828b871c04abe07a3d5fc57e1385/lib/commons-discovery.jar",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/lib/commons-discovery.jar?ref=6c623859c630828b871c04abe07a3d5fc57e1385"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/80f37b6605d0908d626617855420b03738c61da3",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/78981edaba99f98c997b158db4cb2106e25f6b95",
        "message": "Fix NPEs in equality check\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253377 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_65",
        "file": [
            {
                "sha": "ceed7b05862f5a4e5cd32686f4fd1380603046e1",
                "filename": "src/org/apache/axis/encoding/TypeMappingImpl.java",
                "status": "modified",
                "additions": 13,
                "deletions": 1,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/80f37b6605d0908d626617855420b03738c61da3/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/80f37b6605d0908d626617855420b03738c61da3/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingImpl.java?ref=80f37b6605d0908d626617855420b03738c61da3",
                "patch": "@@ -95,8 +95,20 @@ public Pair(Class javaType, QName xmlType) {\n             this.xmlType = xmlType;\n         }\n         public boolean equals(Object o) {\n+            if (o == null) return false;\n             Pair p = (Pair) o;\n-            return (p.xmlType.equals(this.xmlType) && p.javaType.equals(this.javaType));\n+            if (p.xmlType == null) {\n+                if (this.xmlType != null)\n+                    return false;\n+            } else {\n+                if (!p.xmlType.equals(this.xmlType))\n+                    return false;\n+            }\n+            if (p.javaType == null) {\n+                return (this.javaType == null);\n+            } else {\n+                return (p.javaType.equals(this.javaType));\n+            }\n         }\n         public int hashCode() {\n             return javaType.hashCode();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e2a1499914fcb4d4c11bf0908415629528b916be",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/196610aecac19ec06616dd0e2d9e43997b83f03c",
        "message": "Fix NPEs in equality check\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246305 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_66",
        "file": [
            {
                "sha": "ceed7b05862f5a4e5cd32686f4fd1380603046e1",
                "filename": "src/org/apache/axis/encoding/TypeMappingImpl.java",
                "status": "modified",
                "additions": 13,
                "deletions": 1,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/e2a1499914fcb4d4c11bf0908415629528b916be/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e2a1499914fcb4d4c11bf0908415629528b916be/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingImpl.java?ref=e2a1499914fcb4d4c11bf0908415629528b916be",
                "patch": "@@ -95,8 +95,20 @@ public Pair(Class javaType, QName xmlType) {\n             this.xmlType = xmlType;\n         }\n         public boolean equals(Object o) {\n+            if (o == null) return false;\n             Pair p = (Pair) o;\n-            return (p.xmlType.equals(this.xmlType) && p.javaType.equals(this.javaType));\n+            if (p.xmlType == null) {\n+                if (this.xmlType != null)\n+                    return false;\n+            } else {\n+                if (!p.xmlType.equals(this.xmlType))\n+                    return false;\n+            }\n+            if (p.javaType == null) {\n+                return (this.javaType == null);\n+            } else {\n+                return (p.javaType.equals(this.javaType));\n+            }\n         }\n         public int hashCode() {\n             return javaType.hashCode();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b27fbed0eda356cb8b3340fd930d1f826b6d9984",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/51ef5de69c5bc65fc605b1e2104662105451fb32",
        "message": "Fix some NPEs when args is empty\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253279 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_67",
        "file": [
            {
                "sha": "eb76fa3c94b609c3054e3d31c858d782503c5ea4",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/b27fbed0eda356cb8b3340fd930d1f826b6d9984/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b27fbed0eda356cb8b3340fd930d1f826b6d9984/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=b27fbed0eda356cb8b3340fd930d1f826b6d9984",
                "patch": "@@ -229,7 +229,8 @@ public void processMessage (MessageContext msgContext,\n                 \n                 {\n                     // Hm - maybe we can help this with a conversion or two...\n-                    for (int i = 0; i < params.length; i++) {\n+                    for (int i = 0; argValues != null && i < argValues.length &&\n+                                    i < params.length; i++) {\n                         Object thisArg = argValues[i];\n                         if (!params[i].isAssignableFrom(thisArg.getClass())) {\n                             // Attempt conversion for each non-assignable argument\n@@ -249,7 +250,8 @@ public void processMessage (MessageContext msgContext,\n                         msg.append( \"method name \\\"\" + method.getName() + \"\\\"\");\n                         msg.append(\" tried argument types: \"); \n                         String sep= \"\";\n-                        for(int i=0; i< argValues.length; ++i){\n+                        for(int i=0; argValues != null &&\n+                                     i< argValues.length; ++i){\n                             msg.append( sep);\n                             sep=\", \";\n                             msg.append( argValues[i] == null ? \"null\" : argValues[i].getClass().getName());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f3415b12a62cd9a57b981d14f420fa5b388ba922",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/324e6f420722d83b1adab9fdbdcce619297251e0",
        "message": "Fix some NPEs when args is empty\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246207 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_68",
        "file": [
            {
                "sha": "eb76fa3c94b609c3054e3d31c858d782503c5ea4",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/f3415b12a62cd9a57b981d14f420fa5b388ba922/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f3415b12a62cd9a57b981d14f420fa5b388ba922/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=f3415b12a62cd9a57b981d14f420fa5b388ba922",
                "patch": "@@ -229,7 +229,8 @@ public void processMessage (MessageContext msgContext,\n                 \n                 {\n                     // Hm - maybe we can help this with a conversion or two...\n-                    for (int i = 0; i < params.length; i++) {\n+                    for (int i = 0; argValues != null && i < argValues.length &&\n+                                    i < params.length; i++) {\n                         Object thisArg = argValues[i];\n                         if (!params[i].isAssignableFrom(thisArg.getClass())) {\n                             // Attempt conversion for each non-assignable argument\n@@ -249,7 +250,8 @@ public void processMessage (MessageContext msgContext,\n                         msg.append( \"method name \\\"\" + method.getName() + \"\\\"\");\n                         msg.append(\" tried argument types: \"); \n                         String sep= \"\";\n-                        for(int i=0; i< argValues.length; ++i){\n+                        for(int i=0; argValues != null &&\n+                                     i< argValues.length; ++i){\n                             msg.append( sep);\n                             sep=\", \";\n                             msg.append( argValues[i] == null ? \"null\" : argValues[i].getClass().getName());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/4e7620a4506d3c6aead7fc518047db2d415b784c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/191769b126d2ca31ba2f4526d71b6d0daedf0827",
        "message": "Fix NPE when generating WSDL.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253209 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_69",
        "file": [
            {
                "sha": "233e993f78c68250b0a358ea4c798c6a23ff233b",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 6,
                "deletions": 4,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/4e7620a4506d3c6aead7fc518047db2d415b784c/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4e7620a4506d3c6aead7fc518047db2d415b784c/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=4e7620a4506d3c6aead7fc518047db2d415b784c",
                "patch": "@@ -880,10 +880,12 @@ public Vector getAllowedMethods() {\n      * @param allowedMethods a space separated list of methods to export\n      */\n     public void setAllowedMethods(String text) {\n-        StringTokenizer tokenizer = new StringTokenizer(text, \" ,+\");\n-        allowedMethods = new Vector();\n-        while (tokenizer.hasMoreTokens()) {\n-            allowedMethods.add(tokenizer.nextToken());\n+        if (text != null) {\n+            StringTokenizer tokenizer = new StringTokenizer(text, \" ,+\");\n+            allowedMethods = new Vector();\n+            while (tokenizer.hasMoreTokens()) {\n+                allowedMethods.add(tokenizer.nextToken());\n+            }\n         }\n     }\n     "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b935ea8753011fcfc05c356248b1286fcc063f15",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/e86fe2d394286e1d954c51191d02c0a1f8b5c2d2",
        "message": "Fix NPE when generating WSDL.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246137 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_70",
        "file": [
            {
                "sha": "233e993f78c68250b0a358ea4c798c6a23ff233b",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 6,
                "deletions": 4,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/b935ea8753011fcfc05c356248b1286fcc063f15/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b935ea8753011fcfc05c356248b1286fcc063f15/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=b935ea8753011fcfc05c356248b1286fcc063f15",
                "patch": "@@ -880,10 +880,12 @@ public Vector getAllowedMethods() {\n      * @param allowedMethods a space separated list of methods to export\n      */\n     public void setAllowedMethods(String text) {\n-        StringTokenizer tokenizer = new StringTokenizer(text, \" ,+\");\n-        allowedMethods = new Vector();\n-        while (tokenizer.hasMoreTokens()) {\n-            allowedMethods.add(tokenizer.nextToken());\n+        if (text != null) {\n+            StringTokenizer tokenizer = new StringTokenizer(text, \" ,+\");\n+            allowedMethods = new Vector();\n+            while (tokenizer.hasMoreTokens()) {\n+                allowedMethods.add(tokenizer.nextToken());\n+            }\n         }\n     }\n     "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c2172c1b9cdd58eef089447fd4674367c6c929f0",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/30ecaedc15c97d00c5114a08ec33118c5aad1140",
        "message": "check for NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252989 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_71",
        "file": [
            {
                "sha": "5bc33822ffff2f92d8297d1c0b3bf946fa82e25b",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/c2172c1b9cdd58eef089447fd4674367c6c929f0/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c2172c1b9cdd58eef089447fd4674367c6c929f0/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=c2172c1b9cdd58eef089447fd4674367c6c929f0",
                "patch": "@@ -376,6 +376,9 @@ public void setOperation(QName portName, String opName)\n         ////////////////////////////////////////////////////////////////////\n         BindingOperation bop = binding.getBindingOperation(opName,\n                                                            null, null);\n+        if ( bop == null )\n+            throw new JAXRPCException( JavaUtils.getMessage(\"noOperation02\",\n+                                                            opName ));\n         this.removeProperty(HTTPConstants.MC_HTTP_SOAPACTION);\n         list = bop.getExtensibilityElements();\n         for ( int i = 0 ; list != null && i < list.size() ; i++ ) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/890021233deb2e34c38248309cd02ecfda381cd1",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a46eabe7811d6f1cab301f787ce3b817b084a0bd",
        "message": "check for NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245917 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_72",
        "file": [
            {
                "sha": "5bc33822ffff2f92d8297d1c0b3bf946fa82e25b",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/890021233deb2e34c38248309cd02ecfda381cd1/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/890021233deb2e34c38248309cd02ecfda381cd1/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=890021233deb2e34c38248309cd02ecfda381cd1",
                "patch": "@@ -376,6 +376,9 @@ public void setOperation(QName portName, String opName)\n         ////////////////////////////////////////////////////////////////////\n         BindingOperation bop = binding.getBindingOperation(opName,\n                                                            null, null);\n+        if ( bop == null )\n+            throw new JAXRPCException( JavaUtils.getMessage(\"noOperation02\",\n+                                                            opName ));\n         this.removeProperty(HTTPConstants.MC_HTTP_SOAPACTION);\n         list = bop.getExtensibilityElements();\n         for ( int i = 0 ; list != null && i < list.size() ; i++ ) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/01eb62a967397097e17d2f5f376b5c534bc6106f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/cc2f20ae2c796b6cf0cd78883f4344b548e01d97",
        "message": "Fix potential NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252193 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_73",
        "file": [
            {
                "sha": "cff0a3c55425ada1dc9d5fd44940562474030cbf",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 15,
                "deletions": 12,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/01eb62a967397097e17d2f5f376b5c534bc6106f/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/01eb62a967397097e17d2f5f376b5c534bc6106f/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=01eb62a967397097e17d2f5f376b5c534bc6106f",
                "patch": "@@ -279,22 +279,25 @@ public Document process(MessageContext msgContext, Element root)\n             /** For now, though - make sure we can only admin from our own\n              * IP, unless the remoteAdmin option is set.\n              */\n-            String remoteAdmin = (String)msgContext.getServiceHandler().\n+            Handler serviceHandler = msgContext.getServiceHandler();\n+            if (serviceHandler != null) {\n+                String remoteAdmin = (String)serviceHandler.\n                                             getOption(\"enableRemoteAdmin\");\n-            if ((remoteAdmin == null) ||\n-                !remoteAdmin.equals(\"true\")) {\n-                String remoteIP =\n+                if ((remoteAdmin == null) ||\n+                    !remoteAdmin.equals(\"true\")) {\n+                    String remoteIP =\n                             msgContext.getStrProp(Constants.MC_REMOTE_ADDR);\n-                if (remoteIP != null) {\n-                    if (!remoteIP.equals(\"127.0.0.1\")) {\n-                        InetAddress myAddr = InetAddress.getLocalHost();\n-                        InetAddress remoteAddr =\n+                    if (remoteIP != null) {\n+                        if (!remoteIP.equals(\"127.0.0.1\")) {\n+                            InetAddress myAddr = InetAddress.getLocalHost();\n+                            InetAddress remoteAddr =\n                                             InetAddress.getByName(remoteIP);\n                         \n-                        if (!myAddr.equals(remoteAddr))\n-                            throw new AxisFault(\"Server.Unauthorized\",\n-                                \"Remote admin access is not allowed! \",\n-                                null, null);\n+                            if (!myAddr.equals(remoteAddr))\n+                                throw new AxisFault(\"Server.Unauthorized\",\n+                                    \"Remote admin access is not allowed! \",\n+                                    null, null);\n+                        }\n                     }\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/df55966fe9172c7af910b2021e77b079846a8926",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/87e83836737f89644e7373a9df7514b8fec9e97a",
        "message": "Fix potential NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245121 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_74",
        "file": [
            {
                "sha": "cff0a3c55425ada1dc9d5fd44940562474030cbf",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 15,
                "deletions": 12,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/df55966fe9172c7af910b2021e77b079846a8926/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/df55966fe9172c7af910b2021e77b079846a8926/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=df55966fe9172c7af910b2021e77b079846a8926",
                "patch": "@@ -279,22 +279,25 @@ public Document process(MessageContext msgContext, Element root)\n             /** For now, though - make sure we can only admin from our own\n              * IP, unless the remoteAdmin option is set.\n              */\n-            String remoteAdmin = (String)msgContext.getServiceHandler().\n+            Handler serviceHandler = msgContext.getServiceHandler();\n+            if (serviceHandler != null) {\n+                String remoteAdmin = (String)serviceHandler.\n                                             getOption(\"enableRemoteAdmin\");\n-            if ((remoteAdmin == null) ||\n-                !remoteAdmin.equals(\"true\")) {\n-                String remoteIP =\n+                if ((remoteAdmin == null) ||\n+                    !remoteAdmin.equals(\"true\")) {\n+                    String remoteIP =\n                             msgContext.getStrProp(Constants.MC_REMOTE_ADDR);\n-                if (remoteIP != null) {\n-                    if (!remoteIP.equals(\"127.0.0.1\")) {\n-                        InetAddress myAddr = InetAddress.getLocalHost();\n-                        InetAddress remoteAddr =\n+                    if (remoteIP != null) {\n+                        if (!remoteIP.equals(\"127.0.0.1\")) {\n+                            InetAddress myAddr = InetAddress.getLocalHost();\n+                            InetAddress remoteAddr =\n                                             InetAddress.getByName(remoteIP);\n                         \n-                        if (!myAddr.equals(remoteAddr))\n-                            throw new AxisFault(\"Server.Unauthorized\",\n-                                \"Remote admin access is not allowed! \",\n-                                null, null);\n+                            if (!myAddr.equals(remoteAddr))\n+                                throw new AxisFault(\"Server.Unauthorized\",\n+                                    \"Remote admin access is not allowed! \",\n+                                    null, null);\n+                        }\n                     }\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c71c23f95a92e6a865db54e3c6b491be41b38784",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/38eec964741ad164cc665d1392a31728ccf92abe",
        "message": "AXIS-1581: Fixed a NullPointerException in org.apache.axis.client.Call. Test coverage will be provided by WhiteMesaSoap12AddTestSvcTestCase once we get it working again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis1/java/trunk@1393122 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_75",
        "file": [
            {
                "sha": "afe4dc529f00d448c915a296f60f06f042cde6ed",
                "filename": "axis/src/main/java/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/c71c23f95a92e6a865db54e3c6b491be41b38784/axis/src/main/java/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c71c23f95a92e6a865db54e3c6b491be41b38784/axis/src/main/java/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/axis/src/main/java/org/apache/axis/client/Call.java?ref=c71c23f95a92e6a865db54e3c6b491be41b38784",
                "patch": "@@ -2692,9 +2692,7 @@ public void invoke() throws AxisFault {\n                 // No direct config, so try the namespace of the first body.\n                 reqMsg = msgContext.getRequestMessage();\n                 \n-                boolean isStream = ((SOAPPart)reqMsg.getSOAPPart()).isBodyStream();\n-                \n-                if (reqMsg != null && !isStream) {\n+                if (reqMsg != null && !((SOAPPart)reqMsg.getSOAPPart()).isBodyStream()) {\n                     reqEnv = reqMsg.getSOAPEnvelope();\n \n                     SOAPBodyElement body = reqEnv.getFirstBody();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/2fdeef397a67c0c81816513b5132985ccd014dfc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f7c0b44fd25c958bc4b5b0bd928b54729597afc3",
        "message": "CVS Snapshot as of \"Sat Mar 27 07:18:17 EST 2004\" to fix  \t AXIS-1227 - NullPointerExceptions for updated classes from JBoss classloader.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257617 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_76",
        "file": [
            {
                "sha": "eff4db19efa325420603c878b75ea3e45b28b620",
                "filename": "lib/commons-discovery.jar",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/2fdeef397a67c0c81816513b5132985ccd014dfc/lib/commons-discovery.jar",
                "raw_url": "https://github.com/apache/axis1-java/raw/2fdeef397a67c0c81816513b5132985ccd014dfc/lib/commons-discovery.jar",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/lib/commons-discovery.jar?ref=2fdeef397a67c0c81816513b5132985ccd014dfc"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/ba68cf191dd878d3138a7884372e049ead3747b3",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/55c687cdd78a60b817d6b7c588157c5f2b00491d",
        "message": "Fix for Bug 16098 - NullPointerException in SOAPPart.setContent\nfrom cnc@trifork.com (Claus Nyhus Christensen)\n\nFix for Bug 16099 - currentContent not set in SOAPPart object when created\nfrom cnc@trifork.com (Claus Nyhus Christensen)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255893 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_77",
        "file": [
            {
                "sha": "471ae9933b394d9cb2361738b930f141774fe55d",
                "filename": "src/org/apache/axis/SOAPPart.java",
                "status": "modified",
                "additions": 51,
                "deletions": 5,
                "changes": 56,
                "blob_url": "https://github.com/apache/axis1-java/blob/ba68cf191dd878d3138a7884372e049ead3747b3/src/org/apache/axis/SOAPPart.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ba68cf191dd878d3138a7884372e049ead3747b3/src/org/apache/axis/SOAPPart.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SOAPPart.java?ref=ba68cf191dd878d3138a7884372e049ead3747b3",
                "patch": "@@ -72,13 +72,18 @@\n import javax.xml.soap.MimeHeaders;\n import javax.xml.soap.SOAPException;\n import javax.xml.transform.Source;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamSource;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.StringReader;\n import java.io.StringWriter;\n import java.io.UnsupportedEncodingException;\n import java.io.Writer;\n+import java.io.Reader;\n+import java.io.BufferedReader;\n+import java.io.ByteArrayInputStream;\n import java.util.Iterator;\n import java.util.Vector;\n \n@@ -112,9 +117,6 @@\n \n     //private Hashtable headers = new Hashtable();\n     private MimeHeaders mimeHeaders = new MimeHeaders();\n-    private String contentId;\n-    private String contentLocation;\n-\n \n     private static final String[] formNames =\n     { \"\", \"FORM_STRING\", \"FORM_INPUTSTREAM\", \"FORM_SOAPENVELOPE\",\n@@ -605,7 +607,6 @@ public void setContentLocation(String loc) {\n      * Sets Content-Id of this part.\n      *  already defined.\n      * @param newCid new Content-Id\n-     * @returns void\n      */\n     public void setContentId(String newCid){\n         setMimeHeader(HTTPConstants.HEADER_CONTENT_ID,newCid);\n@@ -659,7 +660,26 @@ public void setContent(Source source) throws SOAPException {\n \n         contentSource = source;\n         InputSource in = org.apache.axis.utils.XMLUtils.sourceToInputSource(contentSource);\n-        setCurrentMessage(in.getByteStream(), FORM_INPUTSTREAM);\n+        InputStream is = in.getByteStream();\n+        if(is != null) {\n+            setCurrentMessage(is, FORM_INPUTSTREAM);\n+        } else {\n+            Reader r = in.getCharacterStream();\n+            if(r == null) {\n+                throw new SOAPException(Messages.getMessage(\"noCharacterOrByteStream\"));\n+            }\n+            BufferedReader br = new BufferedReader(r);\n+            String line = null;\n+            StringBuffer sb = new StringBuffer();\n+            try {\n+                while((line = br.readLine()) != null) {\n+                    sb.append(line);\n+                }\n+            } catch (IOException e) {\n+                throw new SOAPException(Messages.getMessage(\"couldNotReadFromCharStream\"), e);\n+            }\n+            setCurrentMessage(sb.toString(), FORM_STRING);\n+        }    \n     }\n \n     /**\n@@ -672,6 +692,32 @@ public void setContent(Source source) throws SOAPException {\n      * @see #setContent(javax.xml.transform.Source) setContent(javax.xml.transform.Source)\n      */\n     public Source getContent() throws SOAPException {\n+    \tif(contentSource == null) {\n+            switch(currentForm) {\n+            case FORM_STRING:\n+                String s = (String)currentMessage;\n+                contentSource = new StreamSource(new StringReader(s));\n+                break;\n+            case FORM_INPUTSTREAM:\n+                contentSource = new StreamSource((InputStream)currentMessage);\n+                break;\n+            case FORM_SOAPENVELOPE:\n+                SOAPEnvelope se = (SOAPEnvelope)currentMessage;\n+                try {\n+                    contentSource = new DOMSource(se.getAsDocument());\n+                } catch (Exception e) {\n+                    throw new SOAPException(Messages.getMessage(\"errorGetDocFromSOAPEnvelope\"), e);\n+                }\n+                break;\t\n+            case FORM_BYTES:\n+                byte[] bytes = (byte[])currentMessage;\n+                contentSource = new StreamSource(new ByteArrayInputStream(bytes));\n+                break;\n+                case FORM_BODYINSTREAM:\n+                contentSource = new StreamSource((InputStream)currentMessage);\n+                break;\n+            }\n+       \t}        \n         return contentSource;\n     }\n "
            },
            {
                "sha": "d6781503cd5d1712f47b28d9df99fe215c90c322",
                "filename": "src/org/apache/axis/i18n/resource.properties",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/ba68cf191dd878d3138a7884372e049ead3747b3/src/org/apache/axis/i18n/resource.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/ba68cf191dd878d3138a7884372e049ead3747b3/src/org/apache/axis/i18n/resource.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/i18n/resource.properties?ref=ba68cf191dd878d3138a7884372e049ead3747b3",
                "patch": "@@ -1125,3 +1125,7 @@ acUsage26=http://localhost:8080/axis/servlet/AxisServlet\n foundJWS00=There is a Web Service here\n #NOTE in foundJWS01, do not translate WSDL\n foundJWS01=Click to see the WSDL\n+\n+noCharacterOrByteStream=InputSource has neither character stream nor byte stream\n+couldNotReadFromCharStream=Could not read from character stream\n+errorGetDocFromSOAPEnvelope=Could not get document from SOAPEnvelope\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7f52721c75b62aabe9a2443eafc598371fd36ac9",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/da1ceefe6aa623319ece4a414d95a3157829b0fb",
        "message": "Fix for Bug 16098 - NullPointerException in SOAPPart.setContent\nfrom cnc@trifork.com (Claus Nyhus Christensen)\n\nFix for Bug 16099 - currentContent not set in SOAPPart object when created\nfrom cnc@trifork.com (Claus Nyhus Christensen)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248824 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_78",
        "file": [
            {
                "sha": "471ae9933b394d9cb2361738b930f141774fe55d",
                "filename": "src/org/apache/axis/SOAPPart.java",
                "status": "modified",
                "additions": 51,
                "deletions": 5,
                "changes": 56,
                "blob_url": "https://github.com/apache/axis1-java/blob/7f52721c75b62aabe9a2443eafc598371fd36ac9/src/org/apache/axis/SOAPPart.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7f52721c75b62aabe9a2443eafc598371fd36ac9/src/org/apache/axis/SOAPPart.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SOAPPart.java?ref=7f52721c75b62aabe9a2443eafc598371fd36ac9",
                "patch": "@@ -72,13 +72,18 @@\n import javax.xml.soap.MimeHeaders;\n import javax.xml.soap.SOAPException;\n import javax.xml.transform.Source;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamSource;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.StringReader;\n import java.io.StringWriter;\n import java.io.UnsupportedEncodingException;\n import java.io.Writer;\n+import java.io.Reader;\n+import java.io.BufferedReader;\n+import java.io.ByteArrayInputStream;\n import java.util.Iterator;\n import java.util.Vector;\n \n@@ -112,9 +117,6 @@\n \n     //private Hashtable headers = new Hashtable();\n     private MimeHeaders mimeHeaders = new MimeHeaders();\n-    private String contentId;\n-    private String contentLocation;\n-\n \n     private static final String[] formNames =\n     { \"\", \"FORM_STRING\", \"FORM_INPUTSTREAM\", \"FORM_SOAPENVELOPE\",\n@@ -605,7 +607,6 @@ public void setContentLocation(String loc) {\n      * Sets Content-Id of this part.\n      *  already defined.\n      * @param newCid new Content-Id\n-     * @returns void\n      */\n     public void setContentId(String newCid){\n         setMimeHeader(HTTPConstants.HEADER_CONTENT_ID,newCid);\n@@ -659,7 +660,26 @@ public void setContent(Source source) throws SOAPException {\n \n         contentSource = source;\n         InputSource in = org.apache.axis.utils.XMLUtils.sourceToInputSource(contentSource);\n-        setCurrentMessage(in.getByteStream(), FORM_INPUTSTREAM);\n+        InputStream is = in.getByteStream();\n+        if(is != null) {\n+            setCurrentMessage(is, FORM_INPUTSTREAM);\n+        } else {\n+            Reader r = in.getCharacterStream();\n+            if(r == null) {\n+                throw new SOAPException(Messages.getMessage(\"noCharacterOrByteStream\"));\n+            }\n+            BufferedReader br = new BufferedReader(r);\n+            String line = null;\n+            StringBuffer sb = new StringBuffer();\n+            try {\n+                while((line = br.readLine()) != null) {\n+                    sb.append(line);\n+                }\n+            } catch (IOException e) {\n+                throw new SOAPException(Messages.getMessage(\"couldNotReadFromCharStream\"), e);\n+            }\n+            setCurrentMessage(sb.toString(), FORM_STRING);\n+        }    \n     }\n \n     /**\n@@ -672,6 +692,32 @@ public void setContent(Source source) throws SOAPException {\n      * @see #setContent(javax.xml.transform.Source) setContent(javax.xml.transform.Source)\n      */\n     public Source getContent() throws SOAPException {\n+    \tif(contentSource == null) {\n+            switch(currentForm) {\n+            case FORM_STRING:\n+                String s = (String)currentMessage;\n+                contentSource = new StreamSource(new StringReader(s));\n+                break;\n+            case FORM_INPUTSTREAM:\n+                contentSource = new StreamSource((InputStream)currentMessage);\n+                break;\n+            case FORM_SOAPENVELOPE:\n+                SOAPEnvelope se = (SOAPEnvelope)currentMessage;\n+                try {\n+                    contentSource = new DOMSource(se.getAsDocument());\n+                } catch (Exception e) {\n+                    throw new SOAPException(Messages.getMessage(\"errorGetDocFromSOAPEnvelope\"), e);\n+                }\n+                break;\t\n+            case FORM_BYTES:\n+                byte[] bytes = (byte[])currentMessage;\n+                contentSource = new StreamSource(new ByteArrayInputStream(bytes));\n+                break;\n+                case FORM_BODYINSTREAM:\n+                contentSource = new StreamSource((InputStream)currentMessage);\n+                break;\n+            }\n+       \t}        \n         return contentSource;\n     }\n "
            },
            {
                "sha": "d6781503cd5d1712f47b28d9df99fe215c90c322",
                "filename": "src/org/apache/axis/i18n/resource.properties",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/7f52721c75b62aabe9a2443eafc598371fd36ac9/src/org/apache/axis/i18n/resource.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/7f52721c75b62aabe9a2443eafc598371fd36ac9/src/org/apache/axis/i18n/resource.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/i18n/resource.properties?ref=7f52721c75b62aabe9a2443eafc598371fd36ac9",
                "patch": "@@ -1125,3 +1125,7 @@ acUsage26=http://localhost:8080/axis/servlet/AxisServlet\n foundJWS00=There is a Web Service here\n #NOTE in foundJWS01, do not translate WSDL\n foundJWS01=Click to see the WSDL\n+\n+noCharacterOrByteStream=InputSource has neither character stream nor byte stream\n+couldNotReadFromCharStream=Could not read from character stream\n+errorGetDocFromSOAPEnvelope=Could not get document from SOAPEnvelope\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/441b78b2bcaebe0975953440ca89fbb290ce8104",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f293fa682396401e3514f4a009299d265e886f33",
        "message": "Fix and test case for Bug 14666 - NullPointerException taken in ArraySerializer when specifying array as input parameter.\nfrom revans@viaserv.com (Randall Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255683 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_79",
        "file": [
            {
                "sha": "42af96146445cd0c2c225f9c005c60c7278ca44b",
                "filename": "src/org/apache/axis/encoding/ser/ArraySerializer.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/441b78b2bcaebe0975953440ca89fbb290ce8104/src/org/apache/axis/encoding/ser/ArraySerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/441b78b2bcaebe0975953440ca89fbb290ce8104/src/org/apache/axis/encoding/ser/ArraySerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/ArraySerializer.java?ref=441b78b2bcaebe0975953440ca89fbb290ce8104",
                "patch": "@@ -109,8 +109,12 @@ public void serialize(QName name, Attributes attributes,\n             throw new IOException(Messages.getMessage(\"cantDoNullArray00\"));\n \n         MessageContext msgContext = context.getMessageContext();\n-        SchemaVersion schema = msgContext.getSchemaVersion();\n-        SOAPConstants soap = msgContext.getSOAPConstants();\n+        SchemaVersion schema = SchemaVersion.SCHEMA_2001;\n+        SOAPConstants soap = SOAPConstants.SOAP11_CONSTANTS;\n+        if(msgContext != null) {\n+            schema = msgContext.getSchemaVersion();\n+            soap = msgContext.getSOAPConstants();\n+        }\n \n         Class cls = value.getClass();\n         Collection list = null;\n@@ -224,7 +228,7 @@ else if (dim2Len < 0) {\n         // actual schema array or for a maxOccurs usage.\n         // For the maxOccurs case, the currentXMLType of the context is\n         // the same as the componentQName.\n-        boolean maxOccursUsage = !context.getMessageContext().isEncoded() &&\n+        boolean maxOccursUsage = (msgContext != null && !msgContext.isEncoded()) &&\n                                           componentQName.equals(context.getCurrentXMLType());\n \n         if (!maxOccursUsage) {"
            },
            {
                "sha": "32f8d49420a313c41f9aa9cf1ffa7e68f1f31a97",
                "filename": "test/encoding/PackageTests.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/441b78b2bcaebe0975953440ca89fbb290ce8104/test/encoding/PackageTests.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/441b78b2bcaebe0975953440ca89fbb290ce8104/test/encoding/PackageTests.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/PackageTests.java?ref=441b78b2bcaebe0975953440ca89fbb290ce8104",
                "patch": "@@ -37,6 +37,7 @@ public static Test suite() throws Exception\n         suite.addTestSuite(TestRoundTrip.class);\n         suite.addTestSuite(TestOmittedValues.class);\n         suite.addTestSuite(TestMultiRefIdentity.class);\n+        suite.addTestSuite(TestArray.class);\n         return suite;\n     }\n }"
            },
            {
                "sha": "1b62179ef13f97643a541fcc5593336a0441157e",
                "filename": "test/encoding/TestArray.java",
                "status": "added",
                "additions": 60,
                "deletions": 0,
                "changes": 60,
                "blob_url": "https://github.com/apache/axis1-java/blob/441b78b2bcaebe0975953440ca89fbb290ce8104/test/encoding/TestArray.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/441b78b2bcaebe0975953440ca89fbb290ce8104/test/encoding/TestArray.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/TestArray.java?ref=441b78b2bcaebe0975953440ca89fbb290ce8104",
                "patch": "@@ -0,0 +1,60 @@\n+package test.encoding;\n+\n+import junit.framework.TestCase;\n+import org.apache.axis.Constants;\n+import org.apache.axis.Message;\n+import org.apache.axis.MessageContext;\n+import org.apache.axis.configuration.BasicServerConfig;\n+import org.apache.axis.encoding.SerializationContext;\n+import org.apache.axis.encoding.SerializationContextImpl;\n+import org.apache.axis.encoding.TypeMapping;\n+import org.apache.axis.encoding.TypeMappingRegistry;\n+import org.apache.axis.encoding.ser.BeanDeserializerFactory;\n+import org.apache.axis.encoding.ser.BeanSerializerFactory;\n+import org.apache.axis.encoding.ser.SimpleDeserializerFactory;\n+import org.apache.axis.encoding.ser.SimpleSerializerFactory;\n+import org.apache.axis.message.RPCElement;\n+import org.apache.axis.message.RPCParam;\n+import org.apache.axis.message.SOAPEnvelope;\n+import org.apache.axis.server.AxisServer;\n+\n+import org.apache.axis.components.logger.LogFactory;\n+import org.apache.commons.logging.Log;\n+\n+import javax.xml.namespace.QName;\n+import java.io.StringWriter;\n+import java.io.Writer;\n+import java.util.Vector;\n+\n+\n+/**\n+ *  Test the serialization of an array. Test case for Bug 14666\n+ *  (NullPointerException taken in ArraySerializer when specifying array as input parameter.)\n+ */\n+public class TestArray extends TestCase {\n+    static Log log =\n+            LogFactory.getLog(TestArray.class.getName());\n+\n+    public TestArray(String name) {\n+        super(name);\n+    }\n+    \n+    public void testArray1() {\n+        String tab_items [] = new String[4];\n+        tab_items[0] = \"table item 1\";\n+        tab_items[1] = \"table item 2\";\n+        tab_items[2] = \"table item 3\";\n+        tab_items[3] = \"table item 4\";\n+\n+        RPCParam in_table = new RPCParam(\"http://local_service.com/\", \"Input_Array\", tab_items);\n+        RPCElement input = new RPCElement(\"http://localhost:8000/tester\", \"echoString\",\n+                                  new Object[]{in_table});\n+        SOAPEnvelope env = new SOAPEnvelope();\n+        env.addBodyElement(input);\n+        String text = env.toString();\n+        assertTrue(text != null);\n+        for(int i=0;i<tab_items.length;i++){\n+            assertTrue(text.indexOf(tab_items[i])!=-1);\n+        }\n+    }\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/8347515e2e46d25670c69064ecc1b7012f1563e6",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0e2caf4c7f0aab83d037aec9ec5448cfeb8829d6",
        "message": "Fix and test case for Bug 14666 - NullPointerException taken in ArraySerializer when specifying array as input parameter.\nfrom revans@viaserv.com (Randall Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248614 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_80",
        "file": [
            {
                "sha": "42af96146445cd0c2c225f9c005c60c7278ca44b",
                "filename": "src/org/apache/axis/encoding/ser/ArraySerializer.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/8347515e2e46d25670c69064ecc1b7012f1563e6/src/org/apache/axis/encoding/ser/ArraySerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8347515e2e46d25670c69064ecc1b7012f1563e6/src/org/apache/axis/encoding/ser/ArraySerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/ArraySerializer.java?ref=8347515e2e46d25670c69064ecc1b7012f1563e6",
                "patch": "@@ -109,8 +109,12 @@ public void serialize(QName name, Attributes attributes,\n             throw new IOException(Messages.getMessage(\"cantDoNullArray00\"));\n \n         MessageContext msgContext = context.getMessageContext();\n-        SchemaVersion schema = msgContext.getSchemaVersion();\n-        SOAPConstants soap = msgContext.getSOAPConstants();\n+        SchemaVersion schema = SchemaVersion.SCHEMA_2001;\n+        SOAPConstants soap = SOAPConstants.SOAP11_CONSTANTS;\n+        if(msgContext != null) {\n+            schema = msgContext.getSchemaVersion();\n+            soap = msgContext.getSOAPConstants();\n+        }\n \n         Class cls = value.getClass();\n         Collection list = null;\n@@ -224,7 +228,7 @@ else if (dim2Len < 0) {\n         // actual schema array or for a maxOccurs usage.\n         // For the maxOccurs case, the currentXMLType of the context is\n         // the same as the componentQName.\n-        boolean maxOccursUsage = !context.getMessageContext().isEncoded() &&\n+        boolean maxOccursUsage = (msgContext != null && !msgContext.isEncoded()) &&\n                                           componentQName.equals(context.getCurrentXMLType());\n \n         if (!maxOccursUsage) {"
            },
            {
                "sha": "32f8d49420a313c41f9aa9cf1ffa7e68f1f31a97",
                "filename": "test/encoding/PackageTests.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/8347515e2e46d25670c69064ecc1b7012f1563e6/test/encoding/PackageTests.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8347515e2e46d25670c69064ecc1b7012f1563e6/test/encoding/PackageTests.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/PackageTests.java?ref=8347515e2e46d25670c69064ecc1b7012f1563e6",
                "patch": "@@ -37,6 +37,7 @@ public static Test suite() throws Exception\n         suite.addTestSuite(TestRoundTrip.class);\n         suite.addTestSuite(TestOmittedValues.class);\n         suite.addTestSuite(TestMultiRefIdentity.class);\n+        suite.addTestSuite(TestArray.class);\n         return suite;\n     }\n }"
            },
            {
                "sha": "1b62179ef13f97643a541fcc5593336a0441157e",
                "filename": "test/encoding/TestArray.java",
                "status": "added",
                "additions": 60,
                "deletions": 0,
                "changes": 60,
                "blob_url": "https://github.com/apache/axis1-java/blob/8347515e2e46d25670c69064ecc1b7012f1563e6/test/encoding/TestArray.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8347515e2e46d25670c69064ecc1b7012f1563e6/test/encoding/TestArray.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/TestArray.java?ref=8347515e2e46d25670c69064ecc1b7012f1563e6",
                "patch": "@@ -0,0 +1,60 @@\n+package test.encoding;\n+\n+import junit.framework.TestCase;\n+import org.apache.axis.Constants;\n+import org.apache.axis.Message;\n+import org.apache.axis.MessageContext;\n+import org.apache.axis.configuration.BasicServerConfig;\n+import org.apache.axis.encoding.SerializationContext;\n+import org.apache.axis.encoding.SerializationContextImpl;\n+import org.apache.axis.encoding.TypeMapping;\n+import org.apache.axis.encoding.TypeMappingRegistry;\n+import org.apache.axis.encoding.ser.BeanDeserializerFactory;\n+import org.apache.axis.encoding.ser.BeanSerializerFactory;\n+import org.apache.axis.encoding.ser.SimpleDeserializerFactory;\n+import org.apache.axis.encoding.ser.SimpleSerializerFactory;\n+import org.apache.axis.message.RPCElement;\n+import org.apache.axis.message.RPCParam;\n+import org.apache.axis.message.SOAPEnvelope;\n+import org.apache.axis.server.AxisServer;\n+\n+import org.apache.axis.components.logger.LogFactory;\n+import org.apache.commons.logging.Log;\n+\n+import javax.xml.namespace.QName;\n+import java.io.StringWriter;\n+import java.io.Writer;\n+import java.util.Vector;\n+\n+\n+/**\n+ *  Test the serialization of an array. Test case for Bug 14666\n+ *  (NullPointerException taken in ArraySerializer when specifying array as input parameter.)\n+ */\n+public class TestArray extends TestCase {\n+    static Log log =\n+            LogFactory.getLog(TestArray.class.getName());\n+\n+    public TestArray(String name) {\n+        super(name);\n+    }\n+    \n+    public void testArray1() {\n+        String tab_items [] = new String[4];\n+        tab_items[0] = \"table item 1\";\n+        tab_items[1] = \"table item 2\";\n+        tab_items[2] = \"table item 3\";\n+        tab_items[3] = \"table item 4\";\n+\n+        RPCParam in_table = new RPCParam(\"http://local_service.com/\", \"Input_Array\", tab_items);\n+        RPCElement input = new RPCElement(\"http://localhost:8000/tester\", \"echoString\",\n+                                  new Object[]{in_table});\n+        SOAPEnvelope env = new SOAPEnvelope();\n+        env.addBodyElement(input);\n+        String text = env.toString();\n+        assertTrue(text != null);\n+        for(int i=0;i<tab_items.length;i++){\n+            assertTrue(text.indexOf(tab_items[i])!=-1);\n+        }\n+    }\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/ff74c2e8325cfa4f5bb25c5a1d08398e2a2e9f7e",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/09d89b95a28317401fe1fc51b64cae6d01a35ba0",
        "message": "Fixed (sorta) http://nagoya.apache.org/bugzilla/show_bug.cgi?id=11781.\nThat bug turned out to be user error, but the user was getting a very\nunfriendly NullPointerException.  Now at least AXIS will tell the user:\n\njava.io.IOException: No support for attachments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255006 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_81",
        "file": [
            {
                "sha": "4d53da92713148b01f27dc6ee09442d62cfc2638",
                "filename": "src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/ff74c2e8325cfa4f5bb25c5a1d08398e2a2e9f7e/src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ff74c2e8325cfa4f5bb25c5a1d08398e2a2e9f7e/src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java?ref=ff74c2e8325cfa4f5bb25c5a1d08398e2a2e9f7e",
                "patch": "@@ -111,6 +111,14 @@ public void serialize(QName name, Attributes attributes,\n         DataHandler dh= (DataHandler)value;\n         //Add the attachment content to the message.\n         Attachments attachments= context.getCurrentMessage().getAttachmentsImpl();\n+\n+        if (attachments == null) {\n+            // Attachments apparently aren't supported.\n+            // Instead of throwing NullPointerException like\n+            // we used to do, throw something meaningful.\n+            throw new IOException(JavaUtils.getMessage(\"noAttachments\"));\n+        }\n+\n         Part attachmentPart= attachments.createAttachmentPart(dh);\n \n         AttributesImpl attrs = new AttributesImpl();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/005b4a8412b65fb3131b74dfdd03f73d50b973d8",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/680b27784fe332c31cadb9ec7d506edfccd657d4",
        "message": "Fixed (sorta) http://nagoya.apache.org/bugzilla/show_bug.cgi?id=11781.\nThat bug turned out to be user error, but the user was getting a very\nunfriendly NullPointerException.  Now at least AXIS will tell the user:\n\njava.io.IOException: No support for attachments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247935 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_82",
        "file": [
            {
                "sha": "4d53da92713148b01f27dc6ee09442d62cfc2638",
                "filename": "src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/005b4a8412b65fb3131b74dfdd03f73d50b973d8/src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/005b4a8412b65fb3131b74dfdd03f73d50b973d8/src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/JAFDataHandlerSerializer.java?ref=005b4a8412b65fb3131b74dfdd03f73d50b973d8",
                "patch": "@@ -111,6 +111,14 @@ public void serialize(QName name, Attributes attributes,\n         DataHandler dh= (DataHandler)value;\n         //Add the attachment content to the message.\n         Attachments attachments= context.getCurrentMessage().getAttachmentsImpl();\n+\n+        if (attachments == null) {\n+            // Attachments apparently aren't supported.\n+            // Instead of throwing NullPointerException like\n+            // we used to do, throw something meaningful.\n+            throw new IOException(JavaUtils.getMessage(\"noAttachments\"));\n+        }\n+\n         Part attachmentPart= attachments.createAttachmentPart(dh);\n \n         AttributesImpl attrs = new AttributesImpl();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b1be0dd46a69b18aa5bae6014581076e64f0213d",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/e4e1c86417ce1a04506f4fc6c3b1979554b674e3",
        "message": "Fix for Bug 9239 - Java2WSDL example in user guide fails following install/tutorial steps\n\nDon't ignore ClassNotFoundException, If the class is not found, stop right there!!! NullPointerException is likely to throw people off the track.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254368 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_83",
        "file": [
            {
                "sha": "b44e24f4e3966877253256eb48e817b1feb42297",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 7,
                "changes": 9,
                "blob_url": "https://github.com/apache/axis1-java/blob/b1be0dd46a69b18aa5bae6014581076e64f0213d/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b1be0dd46a69b18aa5bae6014581076e64f0213d/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=b1be0dd46a69b18aa5bae6014581076e64f0213d",
                "patch": "@@ -1080,13 +1080,8 @@ public void setClsSmart(Class cls, String location) {\n      * Sets the <code>Class</code> to export\n      * @param className the name of the <code>Class</code> to export\n      */\n-    public void setCls(String className) {\n-        try {\n-            cls = Class.forName(className);\n-        }\n-        catch (Exception ex) {\n-            ex.printStackTrace();\n-        }\n+    public void setCls(String className) throws ClassNotFoundException {\n+        cls = Class.forName(className);\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/9877a9569ca3ad4c85a4f6fb1683358cdbc8d460",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/54a476cf0e00b7db0bfbacfb95fb23e65262cf7d",
        "message": "Fix for Bug 9239 - Java2WSDL example in user guide fails following install/tutorial steps\n\nDon't ignore ClassNotFoundException, If the class is not found, stop right there!!! NullPointerException is likely to throw people off the track.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247295 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_84",
        "file": [
            {
                "sha": "b44e24f4e3966877253256eb48e817b1feb42297",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 7,
                "changes": 9,
                "blob_url": "https://github.com/apache/axis1-java/blob/9877a9569ca3ad4c85a4f6fb1683358cdbc8d460/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/9877a9569ca3ad4c85a4f6fb1683358cdbc8d460/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=9877a9569ca3ad4c85a4f6fb1683358cdbc8d460",
                "patch": "@@ -1080,13 +1080,8 @@ public void setClsSmart(Class cls, String location) {\n      * Sets the <code>Class</code> to export\n      * @param className the name of the <code>Class</code> to export\n      */\n-    public void setCls(String className) {\n-        try {\n-            cls = Class.forName(className);\n-        }\n-        catch (Exception ex) {\n-            ex.printStackTrace();\n-        }\n+    public void setCls(String className) throws ClassNotFoundException {\n+        cls = Class.forName(className);\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/5d2d93f205c4ed5f483c878b5100acb14f2949a6",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f4679e7356ca5a4c5dfec3eee6bcea6bef4383b7",
        "message": "Fix for Bug 9735 - NullPointerException when xsi:nil=\"true\" response\n\nNote: Don't check for isAssignableFrom as JavaUtils.convert takes care of such things.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254356 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_85",
        "file": [
            {
                "sha": "3141de0ba484790401af0cda114ed017324d7c30",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/5d2d93f205c4ed5f483c878b5100acb14f2949a6/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/5d2d93f205c4ed5f483c878b5100acb14f2949a6/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=5d2d93f205c4ed5f483c878b5100acb14f2949a6",
                "patch": "@@ -1794,8 +1794,7 @@ public Object invoke( RPCElement body ) throws AxisFault {\n         }\n \n         // Convert type if needed\n-        if (returnJavaType != null &&\n-                !(returnJavaType.isAssignableFrom(result.getClass()))) {\n+        if (returnJavaType != null) {\n             result = JavaUtils.convert(result, returnJavaType);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/402402ffccc3d4e2581bd3a6c01558a8fa3a0793",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/7a927232cf2e66b5d14aa976e5e87b7b389bc963",
        "message": "Fix for Bug 9735 - NullPointerException when xsi:nil=\"true\" response\n\nNote: Don't check for isAssignableFrom as JavaUtils.convert takes care of such things.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247283 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_86",
        "file": [
            {
                "sha": "3141de0ba484790401af0cda114ed017324d7c30",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/402402ffccc3d4e2581bd3a6c01558a8fa3a0793/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/402402ffccc3d4e2581bd3a6c01558a8fa3a0793/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=402402ffccc3d4e2581bd3a6c01558a8fa3a0793",
                "patch": "@@ -1794,8 +1794,7 @@ public Object invoke( RPCElement body ) throws AxisFault {\n         }\n \n         // Convert type if needed\n-        if (returnJavaType != null &&\n-                !(returnJavaType.isAssignableFrom(result.getClass()))) {\n+        if (returnJavaType != null) {\n             result = JavaUtils.convert(result, returnJavaType);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/d8411cb5c29672c0e678c0098c6dbfe0ec6a3b19",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b462c11168bb414503a40caa05cd0fb30aac5fb0",
        "message": "- Make sure that getParamList is called from only one spot.\n- Fix possible NullPointerException in getParamList\n- Fix getParamList such that if RPCParam already exists in the object array it is used as-is.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247183 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_87",
        "file": [
            {
                "sha": "d7d4bd7f5a45a71e33ffb84e6d852c6fd4017eed",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 17,
                "deletions": 10,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/d8411cb5c29672c0e678c0098c6dbfe0ec6a3b19/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/d8411cb5c29672c0e678c0098c6dbfe0ec6a3b19/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=d8411cb5c29672c0e678c0098c6dbfe0ec6a3b19",
                "patch": "@@ -1172,14 +1172,14 @@ public Object invoke(Object[] params) throws java.rmi.RemoteException {\n             throw new AxisFault( JavaUtils.getMessage(\"noOperation00\") );\n         try {\n             return this.invoke(operationName.getNamespaceURI(),\n-                    operationName.getLocalPart(), getParamList(params));\n+                    operationName.getLocalPart(), params);\n         }\n         catch( AxisFault af) {\n             throw af;\n         }\n         catch( Exception exp ) {\n             //if ( exp instanceof AxisFault ) throw (AxisFault) exp ;\n-\n+            exp.printStackTrace();\n             throw new AxisFault( JavaUtils.getMessage(\"errorInvoking00\", \"\\n\" + exp) );\n         }\n     }\n@@ -1197,7 +1197,7 @@ public Object invoke(Object[] params) throws java.rmi.RemoteException {\n      */\n     public void invokeOneWay(Object[] params) {\n         try {\n-            invoke( getParamList(params) );\n+            invoke( params );\n         }\n         catch( Exception exp ) {\n             throw new JAXRPCException( exp.toString() );\n@@ -1333,7 +1333,6 @@ public static synchronized void addTransportPackage(String packageName) {\n \n         // If we never set-up any names... then just return what was passed in\n         //////////////////////////////////////////////////////////////////////\n-        log.debug( \"getParamList number of params: \" + params.length);\n         log.debug( \"operation=\" + operation);\n         if(operation != null) log.debug(\"operation.getNumParams()=\" +operation.getNumParams());\n         if ( operation.getNumParams() == 0 ) return( params );\n@@ -1343,11 +1342,13 @@ public static synchronized void addTransportPackage(String packageName) {\n         /////////////////////////////////////////////////////////////////////\n         numParams = operation.getNumInParams();\n \n-        if ( numParams != params.length )\n+        if ( params == null || numParams != params.length )\n             throw new JAXRPCException(\n                     JavaUtils.getMessage(\"parmMismatch00\",\n                     \"\" + params.length, \"\" + numParams) );\n \n+        log.debug( \"getParamList number of params: \" + params.length);\n+\n         // All ok - so now produce an array of RPCParams\n         //////////////////////////////////////////////////\n         Vector result = new Vector();\n@@ -1360,14 +1361,20 @@ public static synchronized void addTransportPackage(String packageName) {\n                 continue ;\n \n             QName paramQName = param.getQName();\n-            RPCParam p = new RPCParam(paramQName.getNamespaceURI(),\n+            RPCParam rpcParam = null;\n+            Object p = params[j++];\n+            if(p instanceof RPCParam) {\n+                rpcParam = (RPCParam)p;\n+            } else {\n+                rpcParam = new RPCParam(paramQName.getNamespaceURI(),\n                                       paramQName.getLocalPart(),\n-                                      params[j++] );\n+                                      p );\n+            }\n             // Attach the ParameterDescription to the RPCParam\n             // so that the serializer can use the (javaType, xmlType) \n             // information.\n-            p.setParamDesc(param);\n-            result.add( p );\n+            rpcParam.setParamDesc(param);\n+            result.add( rpcParam );\n         }\n \n         return( result.toArray() );\n@@ -1607,7 +1614,7 @@ public Object invoke(String namespace, String method, Object[] args)\n             throw new AxisFault(JavaUtils.getMessage(\"mustSpecifyParms\"));\n         }\n \n-        RPCElement  body = new RPCElement(namespace, method, args);\n+        RPCElement  body = new RPCElement(namespace, method, getParamList(args));\n \n         Object ret = invoke( body );\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/4131d98cc58fb2531bbd51692ff15dbb615eddca",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/143f97c1ee0f6889626c3be7df2a0beb382f8f67",
        "message": "- Make sure that getParamList is called from only one spot.\n- Fix possible NullPointerException in getParamList\n- Fix getParamList such that if RPCParam already exists in the object array it is used as-is.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254256 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_88",
        "file": [
            {
                "sha": "d7d4bd7f5a45a71e33ffb84e6d852c6fd4017eed",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 17,
                "deletions": 10,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/4131d98cc58fb2531bbd51692ff15dbb615eddca/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4131d98cc58fb2531bbd51692ff15dbb615eddca/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=4131d98cc58fb2531bbd51692ff15dbb615eddca",
                "patch": "@@ -1172,14 +1172,14 @@ public Object invoke(Object[] params) throws java.rmi.RemoteException {\n             throw new AxisFault( JavaUtils.getMessage(\"noOperation00\") );\n         try {\n             return this.invoke(operationName.getNamespaceURI(),\n-                    operationName.getLocalPart(), getParamList(params));\n+                    operationName.getLocalPart(), params);\n         }\n         catch( AxisFault af) {\n             throw af;\n         }\n         catch( Exception exp ) {\n             //if ( exp instanceof AxisFault ) throw (AxisFault) exp ;\n-\n+            exp.printStackTrace();\n             throw new AxisFault( JavaUtils.getMessage(\"errorInvoking00\", \"\\n\" + exp) );\n         }\n     }\n@@ -1197,7 +1197,7 @@ public Object invoke(Object[] params) throws java.rmi.RemoteException {\n      */\n     public void invokeOneWay(Object[] params) {\n         try {\n-            invoke( getParamList(params) );\n+            invoke( params );\n         }\n         catch( Exception exp ) {\n             throw new JAXRPCException( exp.toString() );\n@@ -1333,7 +1333,6 @@ public static synchronized void addTransportPackage(String packageName) {\n \n         // If we never set-up any names... then just return what was passed in\n         //////////////////////////////////////////////////////////////////////\n-        log.debug( \"getParamList number of params: \" + params.length);\n         log.debug( \"operation=\" + operation);\n         if(operation != null) log.debug(\"operation.getNumParams()=\" +operation.getNumParams());\n         if ( operation.getNumParams() == 0 ) return( params );\n@@ -1343,11 +1342,13 @@ public static synchronized void addTransportPackage(String packageName) {\n         /////////////////////////////////////////////////////////////////////\n         numParams = operation.getNumInParams();\n \n-        if ( numParams != params.length )\n+        if ( params == null || numParams != params.length )\n             throw new JAXRPCException(\n                     JavaUtils.getMessage(\"parmMismatch00\",\n                     \"\" + params.length, \"\" + numParams) );\n \n+        log.debug( \"getParamList number of params: \" + params.length);\n+\n         // All ok - so now produce an array of RPCParams\n         //////////////////////////////////////////////////\n         Vector result = new Vector();\n@@ -1360,14 +1361,20 @@ public static synchronized void addTransportPackage(String packageName) {\n                 continue ;\n \n             QName paramQName = param.getQName();\n-            RPCParam p = new RPCParam(paramQName.getNamespaceURI(),\n+            RPCParam rpcParam = null;\n+            Object p = params[j++];\n+            if(p instanceof RPCParam) {\n+                rpcParam = (RPCParam)p;\n+            } else {\n+                rpcParam = new RPCParam(paramQName.getNamespaceURI(),\n                                       paramQName.getLocalPart(),\n-                                      params[j++] );\n+                                      p );\n+            }\n             // Attach the ParameterDescription to the RPCParam\n             // so that the serializer can use the (javaType, xmlType) \n             // information.\n-            p.setParamDesc(param);\n-            result.add( p );\n+            rpcParam.setParamDesc(param);\n+            result.add( rpcParam );\n         }\n \n         return( result.toArray() );\n@@ -1607,7 +1614,7 @@ public Object invoke(String namespace, String method, Object[] args)\n             throw new AxisFault(JavaUtils.getMessage(\"mustSpecifyParms\"));\n         }\n \n-        RPCElement  body = new RPCElement(namespace, method, args);\n+        RPCElement  body = new RPCElement(namespace, method, getParamList(args));\n \n         Object ret = invoke( body );\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/d70a4edcd5d0d59bca81e12fe36cd8a50ed0417f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6493f04af335ed13945da0ac60d0ddf06b639446",
        "message": "Set the \"parsing\" flag on the MessageContext to avoid an exception\nwhen RPCElement asks for the serviceHandler.  If we didn't, another\n(recursive) parse would kick off and generate a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@251970 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_89",
        "file": [
            {
                "sha": "44d341f6a3f90a94f38e3580ad5a6649d6481166",
                "filename": "src/org/apache/axis/message/SAXAdapter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/d70a4edcd5d0d59bca81e12fe36cd8a50ed0417f/src/org/apache/axis/message/SAXAdapter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/d70a4edcd5d0d59bca81e12fe36cd8a50ed0417f/src/org/apache/axis/message/SAXAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SAXAdapter.java?ref=d70a4edcd5d0d59bca81e12fe36cd8a50ed0417f",
                "patch": "@@ -32,7 +32,9 @@ public SAXAdapter(InputSource inputSource,\n     public void parse()\n     {\n       try {\n+        context.getMessageContext().setParsing(true);\n         _parser.parse(inputSource, this);\n+        context.getMessageContext().setParsing(false);\n       } catch (Exception e) {\n         e.printStackTrace();\n       }"
            },
            {
                "sha": "c2e3e874db43fed67d4b8037417b49e4e684ae52",
                "filename": "src/org/apache/axis/message/ThreadedSAXAdapter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/d70a4edcd5d0d59bca81e12fe36cd8a50ed0417f/src/org/apache/axis/message/ThreadedSAXAdapter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/d70a4edcd5d0d59bca81e12fe36cd8a50ed0417f/src/org/apache/axis/message/ThreadedSAXAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/ThreadedSAXAdapter.java?ref=d70a4edcd5d0d59bca81e12fe36cd8a50ed0417f",
                "patch": "@@ -31,7 +31,9 @@\n         public void run()\n         {\n             try {\n+                context.getMessageContext().setParsing(true);\n                 _parser.parse(inputSource, ThreadedSAXAdapter.this);\n+                context.getMessageContext().setParsing(false);\n             } catch (Exception e) {\n                 e.printStackTrace();\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7d321e462e5c08c1fbafda54c15b0597e111c7ab",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0698a740b18ae7c55c084c805360139d2cc6d219",
        "message": "Set the \"parsing\" flag on the MessageContext to avoid an exception\nwhen RPCElement asks for the serviceHandler.  If we didn't, another\n(recursive) parse would kick off and generate a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@244898 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_90",
        "file": [
            {
                "sha": "44d341f6a3f90a94f38e3580ad5a6649d6481166",
                "filename": "src/org/apache/axis/message/SAXAdapter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/7d321e462e5c08c1fbafda54c15b0597e111c7ab/src/org/apache/axis/message/SAXAdapter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7d321e462e5c08c1fbafda54c15b0597e111c7ab/src/org/apache/axis/message/SAXAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SAXAdapter.java?ref=7d321e462e5c08c1fbafda54c15b0597e111c7ab",
                "patch": "@@ -32,7 +32,9 @@ public SAXAdapter(InputSource inputSource,\n     public void parse()\n     {\n       try {\n+        context.getMessageContext().setParsing(true);\n         _parser.parse(inputSource, this);\n+        context.getMessageContext().setParsing(false);\n       } catch (Exception e) {\n         e.printStackTrace();\n       }"
            },
            {
                "sha": "c2e3e874db43fed67d4b8037417b49e4e684ae52",
                "filename": "src/org/apache/axis/message/ThreadedSAXAdapter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/7d321e462e5c08c1fbafda54c15b0597e111c7ab/src/org/apache/axis/message/ThreadedSAXAdapter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7d321e462e5c08c1fbafda54c15b0597e111c7ab/src/org/apache/axis/message/ThreadedSAXAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/ThreadedSAXAdapter.java?ref=7d321e462e5c08c1fbafda54c15b0597e111c7ab",
                "patch": "@@ -31,7 +31,9 @@\n         public void run()\n         {\n             try {\n+                context.getMessageContext().setParsing(true);\n                 _parser.parse(inputSource, ThreadedSAXAdapter.this);\n+                context.getMessageContext().setParsing(false);\n             } catch (Exception e) {\n                 e.printStackTrace();\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/dcaea20ff8c7e4e129567b12ba3be17384001c4a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6c17b9b7e28d3632928f2f36cd51fcc799890be7",
        "message": "Added an assertion to avoid NPE if the test fails.\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis1/java/trunk@1571317 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_91",
        "file": [
            {
                "sha": "d71d95c78a9e37803fe771f89226c913ab8de598",
                "filename": "integration/src/test/java/test/wsdl/attachments/AttachmentTestCase.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/dcaea20ff8c7e4e129567b12ba3be17384001c4a/integration/src/test/java/test/wsdl/attachments/AttachmentTestCase.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dcaea20ff8c7e4e129567b12ba3be17384001c4a/integration/src/test/java/test/wsdl/attachments/AttachmentTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/integration/src/test/java/test/wsdl/attachments/AttachmentTestCase.java?ref=dcaea20ff8c7e4e129567b12ba3be17384001c4a",
                "patch": "@@ -56,6 +56,7 @@ public void testGetCompanyInfo() throws Exception {\n         getBinding().getCompanyInfo(\"IBM\", result, docs, logo);\n         assertEquals(134, (int)(result.value*10));\n         assertEquals(\"IBM\", docs.value);\n+        assertNotNull(logo.value);\n         assertEquals(24, logo.value.getWidth(null));\n         assertEquals(24, logo.value.getHeight(null));\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/be215977dc326db354868dc8fb9e77bdeec979bc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/75c676ff2a3c86aec275e24b65448ce5ccab0fc1",
        "message": "Patch from John Brothers [johnbr@undefined.com]:\n\nI have been learning SOAP via Axis, and I encountered a\nNullPointerException in RPCElement() when trying to test\nout a new service that I had written.  I eventually discovered\nthat this was caused by Axis's inability to find the class file(s)\nfor my service (I had used a link instead of copying the directory).\n\nI submit that it would be more informative to the user\n(and more elegant) to throw a ClassNotFoundException instead\nof a NullPointerException in that case, to help the user more\nquickly discover the \"directory tree copy\" requirement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254251 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_92",
        "file": [
            {
                "sha": "e8b7ccb97b69a2ac9726a01080ac3fde8647fe7b",
                "filename": "src/org/apache/axis/message/BodyBuilder.java",
                "status": "modified",
                "additions": 13,
                "deletions": 2,
                "changes": 15,
                "blob_url": "https://github.com/apache/axis1-java/blob/be215977dc326db354868dc8fb9e77bdeec979bc/src/org/apache/axis/message/BodyBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/be215977dc326db354868dc8fb9e77bdeec979bc/src/org/apache/axis/message/BodyBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/BodyBuilder.java?ref=be215977dc326db354868dc8fb9e77bdeec979bc",
                "patch": "@@ -155,8 +155,19 @@ public SOAPHandler onStartChild(String namespace,\n                  (operations[0].getStyle() !=\n                   ServiceDesc.STYLE_MESSAGE))) {\n                 gotRPCElement = true;\n-                element = new RPCElement(namespace, localName, prefix,\n-                                         attributes, context, operations);\n+                \n+                try {\n+                    \n+                    element = new RPCElement(namespace, localName, prefix,\n+                            attributes, context, operations);\n+                    \n+                } catch (ClassNotFoundException e) {\n+                    // SAXException is already known to this method, so I\n+                    // don't have an exception-handling propogation explosion.\n+                    //\n+                    throw new SAXException(e);\n+                }\n+                \n                 // Only deserialize this way if there is a unique operation\n                 // for this QName.  If there are overloads,\n                 // we'll need to start recording.  If we're making a high-"
            },
            {
                "sha": "24f39fbff142be80393d6f3f9e85008bd7461ff7",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/be215977dc326db354868dc8fb9e77bdeec979bc/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/be215977dc326db354868dc8fb9e77bdeec979bc/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=be215977dc326db354868dc8fb9e77bdeec979bc",
                "patch": "@@ -83,7 +83,7 @@ public RPCElement(String namespace,\n                       String prefix,\n                       Attributes attributes,\n                       DeserializationContext context,\n-                      OperationDesc [] operations)\n+                      OperationDesc [] operations) throws ClassNotFoundException\n     {\n         super(namespace, localName, prefix, attributes, context);\n \n@@ -101,8 +101,12 @@ public RPCElement(String namespace,\n             SOAPService service    = msgContext.getService();\n             if (service != null) {\n                 ServiceDesc serviceDesc = service.getInitializedServiceDesc(msgContext);\n-\n+                \n                 String lc = Utils.xmlNameToJava(name);\n+                if (serviceDesc == null) {\n+                    throw new ClassNotFoundException(JavaUtils.getMessage(\"noClassForService00\", lc));\n+                }\n+\n                 operations = serviceDesc.getOperationsByName(lc);\n             }\n         }"
            },
            {
                "sha": "0e3b4134bca1ec7fa993ae7c1c6839b40f2bdc30",
                "filename": "src/org/apache/axis/utils/axisNLS.properties",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/be215977dc326db354868dc8fb9e77bdeec979bc/src/org/apache/axis/utils/axisNLS.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/be215977dc326db354868dc8fb9e77bdeec979bc/src/org/apache/axis/utils/axisNLS.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/axisNLS.properties?ref=be215977dc326db354868dc8fb9e77bdeec979bc",
                "patch": "@@ -853,3 +853,6 @@ ftsf05=getAcceptedIssuers: none\n \n j2woptStyle00=The style of binding in the WSDL.  Values are DOCUMENT or LITERAL.\n j2woptBadStyle00=The value of --style must be DOCUMENT or LITERAL.\n+\n+noClassForService00=Could not find class for the service named: {0}\\nHint: you may need to copy your class files/tree into the right location (which depends on the servlet system you are using).\n+"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/4e2960db95884fdeb930a17073922d34eb31ea20",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f2721977cdaab77ab9fe4ae55a3469e3ec9a413b",
        "message": "Patch from John Brothers [johnbr@undefined.com]:\n\nI have been learning SOAP via Axis, and I encountered a\nNullPointerException in RPCElement() when trying to test\nout a new service that I had written.  I eventually discovered\nthat this was caused by Axis's inability to find the class file(s)\nfor my service (I had used a link instead of copying the directory).\n\nI submit that it would be more informative to the user\n(and more elegant) to throw a ClassNotFoundException instead\nof a NullPointerException in that case, to help the user more\nquickly discover the \"directory tree copy\" requirement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247178 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_93",
        "file": [
            {
                "sha": "e8b7ccb97b69a2ac9726a01080ac3fde8647fe7b",
                "filename": "src/org/apache/axis/message/BodyBuilder.java",
                "status": "modified",
                "additions": 13,
                "deletions": 2,
                "changes": 15,
                "blob_url": "https://github.com/apache/axis1-java/blob/4e2960db95884fdeb930a17073922d34eb31ea20/src/org/apache/axis/message/BodyBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4e2960db95884fdeb930a17073922d34eb31ea20/src/org/apache/axis/message/BodyBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/BodyBuilder.java?ref=4e2960db95884fdeb930a17073922d34eb31ea20",
                "patch": "@@ -155,8 +155,19 @@ public SOAPHandler onStartChild(String namespace,\n                  (operations[0].getStyle() !=\n                   ServiceDesc.STYLE_MESSAGE))) {\n                 gotRPCElement = true;\n-                element = new RPCElement(namespace, localName, prefix,\n-                                         attributes, context, operations);\n+                \n+                try {\n+                    \n+                    element = new RPCElement(namespace, localName, prefix,\n+                            attributes, context, operations);\n+                    \n+                } catch (ClassNotFoundException e) {\n+                    // SAXException is already known to this method, so I\n+                    // don't have an exception-handling propogation explosion.\n+                    //\n+                    throw new SAXException(e);\n+                }\n+                \n                 // Only deserialize this way if there is a unique operation\n                 // for this QName.  If there are overloads,\n                 // we'll need to start recording.  If we're making a high-"
            },
            {
                "sha": "24f39fbff142be80393d6f3f9e85008bd7461ff7",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/4e2960db95884fdeb930a17073922d34eb31ea20/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4e2960db95884fdeb930a17073922d34eb31ea20/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=4e2960db95884fdeb930a17073922d34eb31ea20",
                "patch": "@@ -83,7 +83,7 @@ public RPCElement(String namespace,\n                       String prefix,\n                       Attributes attributes,\n                       DeserializationContext context,\n-                      OperationDesc [] operations)\n+                      OperationDesc [] operations) throws ClassNotFoundException\n     {\n         super(namespace, localName, prefix, attributes, context);\n \n@@ -101,8 +101,12 @@ public RPCElement(String namespace,\n             SOAPService service    = msgContext.getService();\n             if (service != null) {\n                 ServiceDesc serviceDesc = service.getInitializedServiceDesc(msgContext);\n-\n+                \n                 String lc = Utils.xmlNameToJava(name);\n+                if (serviceDesc == null) {\n+                    throw new ClassNotFoundException(JavaUtils.getMessage(\"noClassForService00\", lc));\n+                }\n+\n                 operations = serviceDesc.getOperationsByName(lc);\n             }\n         }"
            },
            {
                "sha": "0e3b4134bca1ec7fa993ae7c1c6839b40f2bdc30",
                "filename": "src/org/apache/axis/utils/axisNLS.properties",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/4e2960db95884fdeb930a17073922d34eb31ea20/src/org/apache/axis/utils/axisNLS.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/4e2960db95884fdeb930a17073922d34eb31ea20/src/org/apache/axis/utils/axisNLS.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/axisNLS.properties?ref=4e2960db95884fdeb930a17073922d34eb31ea20",
                "patch": "@@ -853,3 +853,6 @@ ftsf05=getAcceptedIssuers: none\n \n j2woptStyle00=The style of binding in the WSDL.  Values are DOCUMENT or LITERAL.\n j2woptBadStyle00=The value of --style must be DOCUMENT or LITERAL.\n+\n+noClassForService00=Could not find class for the service named: {0}\\nHint: you may need to copy your class files/tree into the right location (which depends on the servlet system you are using).\n+"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f08449c5f262bb6750dcd7d8ed6e1f5eeb77bbd2",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/cef1f9609a38941371734ee8598da4d496eb29c6",
        "message": "Fixed AXIS-2649: the TestSrcContent test now ignores .svn directories, avoiding an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@609819 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_94",
        "file": [
            {
                "sha": "1c578b06a6af86f42d2f35117be9f55fc471c6e2",
                "filename": "test/utils/TestSrcContent.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/f08449c5f262bb6750dcd7d8ed6e1f5eeb77bbd2/test/utils/TestSrcContent.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f08449c5f262bb6750dcd7d8ed6e1f5eeb77bbd2/test/utils/TestSrcContent.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/utils/TestSrcContent.java?ref=f08449c5f262bb6750dcd7d8ed6e1f5eeb77bbd2",
                "patch": "@@ -73,8 +73,10 @@ public void testSourceFiles() {\n     private void walkTree(File srcDir) {\n         File[] files = srcDir.listFiles();\n         for (int i = 0; i < files.length; ++i) {\n-            if (files[i].isDirectory()) {\n-                walkTree(files[i]);\n+\t    if (files[i].getName().equals(\".svn\")) {\n+\t\tcontinue;\n+            } else if (files[i].isDirectory()) {\n+\t\twalkTree(files[i]);\n             }\n             else {\n                 checkFile(files[i]);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/9ed25e765ba44d195ca6ed5e3220ef19b5c26c52",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/021f968c59a3cef71bf83d4f4282c810f8470663",
        "message": "Optimization for my previous commit for avoiding NPE while writing operation. This was working fine with Axis RC2.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@261794 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_95",
        "file": [
            {
                "sha": "bf2338be5908bf8a1f7c8ef5b97060437cca9ad7",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "status": "modified",
                "additions": 26,
                "deletions": 24,
                "changes": 50,
                "blob_url": "https://github.com/apache/axis1-java/blob/9ed25e765ba44d195ca6ed5e3220ef19b5c26c52/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/9ed25e765ba44d195ca6ed5e3220ef19b5c26c52/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java?ref=9ed25e765ba44d195ca6ed5e3220ef19b5c26c52",
                "patch": "@@ -1033,6 +1033,10 @@ protected void writeOperation(PrintWriter pw, BindingOperation operation,\n                                 String opStyle, boolean oneway, int opIndex) {\n \n         writeComment(pw, operation.getDocumentationElement(), true);\n+        \n+        if (parms.signature == null) {\n+        \treturn;\n+        }\n         pw.println(parms.signature + \" {\");\n         pw.println(\"        if (super.cachedEndpoint == null) {\");\n         pw.println(\n@@ -1289,31 +1293,29 @@ protected void writeResponseHandling(PrintWriter pw, Parameters parms) {\n         // Get faults of signature\n         List exceptionsThrowsList = new ArrayList();\n         \n-        if (parms.signature != null) {\n-\t        int index = parms.signature.indexOf(\"throws\");\n-\t        if (index != -1) {\n-\t            String[] thrExcep = StringUtils.split(parms.signature.substring(index+6),',');\n-\t            for (int i = 0; i < thrExcep.length; i++) {\n-\t                exceptionsThrowsList.add(thrExcep[i].trim());\n-\t            }\n-\t        }\n-\t        pw.println(\"  } catch (org.apache.axis.AxisFault axisFaultException) {\");\n-\t        if (faults != null && faults.size() > 0) {\n-\t            pw.println(\"    if (axisFaultException.detail != null) {\");\n-\t            for (Iterator faultIt = exceptionsThrowsList.iterator(); faultIt\n-\t                    .hasNext();) {\n-\t                String exceptionFullName = (String) faultIt.next();\n-\t                pw.println(\"        if (axisFaultException.detail instanceof \"\n-\t                        + exceptionFullName + \") {\");\n-\t                pw.println(\"              throw (\" + exceptionFullName\n-\t                        + \") axisFaultException.detail;\");\n-\t                pw.println(\"         }\");\n-\t            }\n-\t            pw.println(\"   }\");\n-\t        }\n-\t        pw.println(\"  throw axisFaultException;\");\n-\t        pw.println(\"}\");\n+        int index = parms.signature.indexOf(\"throws\");\n+        if (index != -1) {\n+            String[] thrExcep = StringUtils.split(parms.signature.substring(index+6),',');\n+            for (int i = 0; i < thrExcep.length; i++) {\n+                exceptionsThrowsList.add(thrExcep[i].trim());\n+            }\n+        }\n+        pw.println(\"  } catch (org.apache.axis.AxisFault axisFaultException) {\");\n+        if (faults != null && faults.size() > 0) {\n+            pw.println(\"    if (axisFaultException.detail != null) {\");\n+            for (Iterator faultIt = exceptionsThrowsList.iterator(); faultIt\n+                    .hasNext();) {\n+                String exceptionFullName = (String) faultIt.next();\n+                pw.println(\"        if (axisFaultException.detail instanceof \"\n+                        + exceptionFullName + \") {\");\n+                pw.println(\"              throw (\" + exceptionFullName\n+                        + \") axisFaultException.detail;\");\n+                pw.println(\"         }\");\n+            }\n+            pw.println(\"   }\");\n         }\n+        pw.println(\"  throw axisFaultException;\");\n+        pw.println(\"}\");\n     }    // writeResponseHandling\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/db456c67bbbffe6e71bcf03e7360e1ced4f85947",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6943149cb1b46b44673305188823d109d593a16a",
        "message": "revert the chanegs to the AxisServlet (.. sorry I am responsible for the NPE)\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@220110 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_96",
        "file": [
            {
                "sha": "9324001ec20638eaf3f63c5e7dea98ecfd2422a7",
                "filename": "modules/core/src/org/apache/axis2/transport/http/AxisServlet.java",
                "status": "modified",
                "additions": 2,
                "deletions": 9,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/db456c67bbbffe6e71bcf03e7360e1ced4f85947/modules/core/src/org/apache/axis2/transport/http/AxisServlet.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/db456c67bbbffe6e71bcf03e7360e1ced4f85947/modules/core/src/org/apache/axis2/transport/http/AxisServlet.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/core/src/org/apache/axis2/transport/http/AxisServlet.java?ref=db456c67bbbffe6e71bcf03e7360e1ced4f85947",
                "patch": "@@ -43,6 +43,7 @@\n public class AxisServlet extends HttpServlet {\r\n     private ListingAgent lister;\r\n     private static final String CONFIGURATION_CONTEXT = \"CONFIGURATION_CONTEXT\";\r\n+    private ConfigurationContext configContext;\r\n \r\n     /**\r\n      * Method init\r\n@@ -56,7 +57,7 @@ public void init(ServletConfig config) throws ServletException {\n             String repoDir = context.getRealPath(\"/WEB-INF\");\r\n             ConfigurationContextFactory erfac =\r\n                 new ConfigurationContextFactory();\r\n-            ConfigurationContext configContext =\r\n+            configContext =\r\n                 erfac.buildConfigurationContext(repoDir);\r\n             configContext.setProperty(\r\n                 Constants.CONTAINER_MANAGED,\r\n@@ -81,11 +82,6 @@ protected void doGet(\n         HttpServletRequest httpServletRequest,\r\n         HttpServletResponse httpServletResponse)\r\n         throws ServletException, IOException {\r\n-\r\n-        ConfigurationContext configContext =\r\n-            (ConfigurationContext) getServletContext().getAttribute(\r\n-                CONFIGURATION_CONTEXT);\r\n-\r\n         httpServletResponse.setContentType(\"text/xml; charset=utf-8\");\r\n         MessageContext msgContext = null;\r\n         OutputStream out = null;\r\n@@ -168,9 +164,6 @@ protected void doGet(\n     protected void doPost(HttpServletRequest req, HttpServletResponse res)\r\n         throws ServletException, IOException {\r\n         MessageContext msgContext = null;\r\n-        ConfigurationContext configContext =\r\n-            (ConfigurationContext) getServletContext().getAttribute(\r\n-                CONFIGURATION_CONTEXT);\r\n         try {\r\n             Object sessionContext =\r\n                 req.getSession().getAttribute(\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e04748a02bc18f363416e25e7b5fd0cf537610a0",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/4778bdf9a36ef861ec336d2708a04eab3b02c547",
        "message": "Fix for NPE in Emitter when extraClasses args are given\nfrom Sudheer Tumuluru <stumuluru@real.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@261636 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_97",
        "file": [
            {
                "sha": "8c10ac00a0ad30995f93180c1301476a05d0566b",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/e04748a02bc18f363416e25e7b5fd0cf537610a0/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e04748a02bc18f363416e25e7b5fd0cf537610a0/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=e04748a02bc18f363416e25e7b5fd0cf537610a0",
                "patch": "@@ -2732,6 +2732,7 @@ public void setExtraClasses(String text) throws ClassNotFoundException {\n \n         // Allocate the new array\n         Class[] ec;\n+        int startOffset = 0;\n \n         if (extraClasses != null) {\n             ec = new Class[clsList.size() + extraClasses.length];\n@@ -2742,6 +2743,7 @@ public void setExtraClasses(String text) throws ClassNotFoundException {\n \n                 ec[i] = c;\n             }\n+            startOffset = extraClasses.length;\n         } else {\n             ec = new Class[clsList.size()];\n         }\n@@ -2750,7 +2752,7 @@ public void setExtraClasses(String text) throws ClassNotFoundException {\n         for (int i = 0; i < clsList.size(); i++) {\n             Class c = (Class) clsList.get(i);\n \n-            ec[i] = c;\n+            ec[startOffset + i] = c;\n         }\n \n         // set the member variable"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/03dce22de0d4d893ef3ffe52702674fff4e90dbf",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/d0c9a2e911cdf61882692bbe3badaafc4e8c42c8",
        "message": "Fix NPE. Note to self, think before you check-in :)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@260066 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_98",
        "file": [
            {
                "sha": "01c904b695d7f24ed829129d20d169553ec0c269",
                "filename": "src/org/apache/axis/components/encoding/XMLEncoderFactory.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/03dce22de0d4d893ef3ffe52702674fff4e90dbf/src/org/apache/axis/components/encoding/XMLEncoderFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/03dce22de0d4d893ef3ffe52702674fff4e90dbf/src/org/apache/axis/components/encoding/XMLEncoderFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/encoding/XMLEncoderFactory.java?ref=03dce22de0d4d893ef3ffe52702674fff4e90dbf",
                "patch": "@@ -78,7 +78,8 @@ public static XMLEncoder getDefaultEncoder() {\n     public static XMLEncoder getEncoder(String encoding) throws UnsupportedEncodingException {\n         XMLEncoder encoder = (XMLEncoder) encoderMap.get(encoding);\n         if (encoder == null) {\n-            encoderMap.put(encoding, new DefaultXMLEncoder(encoding));\n+            encoder = new DefaultXMLEncoder(encoding);\n+            encoderMap.put(encoding, encoder);\n         }\n         return encoder;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/3552b578524b281379c9b3335ce812adf565e25b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/60b09fe547d61db6d99b2f3dc85500be1d936971",
        "message": "Fix for AXIS-1632 - NPE Using DeserializationContext\nfrom Steve Green (steve.green@epok.net)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@259608 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_99",
        "file": [
            {
                "sha": "60b0f635f9443b2ed5c64007c1dce95ae0ec8559",
                "filename": "src/org/apache/axis/encoding/DeserializationContext.java",
                "status": "modified",
                "additions": 16,
                "deletions": 10,
                "changes": 26,
                "blob_url": "https://github.com/apache/axis1-java/blob/3552b578524b281379c9b3335ce812adf565e25b/src/org/apache/axis/encoding/DeserializationContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3552b578524b281379c9b3335ce812adf565e25b/src/org/apache/axis/encoding/DeserializationContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DeserializationContext.java?ref=3552b578524b281379c9b3335ce812adf565e25b",
                "patch": "@@ -21,6 +21,7 @@\n import org.apache.axis.Constants;\n import org.apache.axis.Message;\n import org.apache.axis.AxisFault;\n+import org.apache.axis.constants.Use;\n import org.apache.axis.attachments.Attachments;\n import org.apache.axis.description.TypeDesc;\n import org.apache.axis.soap.SOAPConstants;\n@@ -269,6 +270,19 @@ public MessageContext getMessageContext()\n         return msgContext;\n     }\n \n+    /**\n+     * Returns this context's encoding style.  If we've got a message\n+     * context then we'll get the style from that; otherwise we'll\n+     * return a default.\n+     *\n+     * @return a <code>String</code> value\n+     */\n+    public String getEncodingStyle() \n+    {\n+        return msgContext == null ?\n+                Use.ENCODED.getEncoding() : msgContext.getEncodingStyle();\n+    }    \n+\n     /**\n      * Get Envelope\n      */\n@@ -490,7 +504,7 @@ public Deserializer getDeserializerForClass(Class cls) {\n                 TypeDesc typedesc = TypeDesc.getTypeDescForClass(cls);\n                 if (typedesc != null) {\n                     dser = (Deserializer) method.invoke(null,\n-                        new Object[] {msgContext.getEncodingStyle(), cls, typedesc.getXmlType()});\n+                        new Object[] {getEncodingStyle(), cls, typedesc.getXmlType()});\n                 }\n             }\n         } catch (Exception e) {\n@@ -539,15 +553,7 @@ public TypeMapping getTypeMapping()\n                     null);\n         }\n         TypeMappingRegistry tmr = msgContext.getTypeMappingRegistry();\n-        return (TypeMapping) tmr.getTypeMapping(msgContext.getEncodingStyle());\n-        /*\n-         * TODO: This code doesn't yet work, but we aren't looking up the right\n-         * TypeMapping by just using SOAP_ENC.\n-\n-        String encStyle = curElement == null ? Constants.NS_URI_CURRENT_SOAP_ENC :\n-                                               curElement.getEncodingStyle();\n-        return (TypeMapping) tmr.getTypeMapping(encStyle);\n-        */\n+        return (TypeMapping) tmr.getTypeMapping(getEncodingStyle());\n     }\n \n     /**"
            },
            {
                "sha": "e2609af6afd684815b59a3eff2edd1a82c48158b",
                "filename": "src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/3552b578524b281379c9b3335ce812adf565e25b/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3552b578524b281379c9b3335ce812adf565e25b/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanDeserializer.java?ref=3552b578524b281379c9b3335ce812adf565e25b",
                "patch": "@@ -156,7 +156,7 @@ public SOAPHandler onStartChild(String namespace,\n         FieldDesc fieldDesc = null;\n \n         SOAPConstants soapConstants = context.getSOAPConstants();\n-        String encodingStyle = context.getMessageContext().getEncodingStyle();\n+        String encodingStyle = context.getEncodingStyle();\n         boolean isEncoded = Constants.isSOAP_ENC(encodingStyle);\n \n         QName elemQName = new QName(namespace, localName);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/8b938eb764df6034019a8ec044690e24c2356743",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/d075da8e9419e09e0dc01eaee6c4158a72bc6fbe",
        "message": "Fix for AXIS-1585 - npe after using SerializationContext one-arg constructor\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@259431 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_100",
        "file": [
            {
                "sha": "7765cb225fecf6565df8daa42001c1d5ee55acb8",
                "filename": "src/org/apache/axis/encoding/SerializationContext.java",
                "status": "modified",
                "additions": 29,
                "deletions": 4,
                "changes": 33,
                "blob_url": "https://github.com/apache/axis1-java/blob/8b938eb764df6034019a8ec044690e24c2356743/src/org/apache/axis/encoding/SerializationContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8b938eb764df6034019a8ec044690e24c2356743/src/org/apache/axis/encoding/SerializationContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/SerializationContext.java?ref=8b938eb764df6034019a8ec044690e24c2356743",
                "patch": "@@ -18,6 +18,9 @@\n \n import java.io.IOException;\n import java.io.Writer;\n+import java.lang.IllegalAccessException;\n+import java.lang.NoSuchMethodException;\n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Calendar;\n@@ -456,6 +459,26 @@ public MessageContext getMessageContext() {\n         return msgContext;\n     }\n \n+    /**\n+     * Returns this context's encoding style.  If we've got a message\n+     * context then we'll get the style from that; otherwise we'll\n+     * return a default.\n+     *\n+     * @return a <code>String</code> value\n+     */\n+    public String getEncodingStyle() {\n+        return msgContext == null ? Use.ENCODED.getEncoding() : msgContext.getEncodingStyle();\n+    }\n+\n+    /**\n+     * Returns whether this context should be encoded or not.\n+     *\n+     * @return a <code>boolean</code> value\n+     */\n+    public boolean isEncoded() {\n+        return msgContext == null ? true : msgContext.isEncoded();\n+    }\n+\n     /**\n      * Convert QName to a string of the form <prefix>:<localpart>\n      * @param qName\n@@ -698,7 +721,7 @@ public void serialize(QName elemQName,\n         // hashCode() and equals() methods have been overloaded to make two\n         // Objects appear equal.\n \n-        if (doMultiRefs && (msgContext == null || msgContext.isEncoded()) &&\n+        if (doMultiRefs && isEncoded() &&\n                 (value != forceSer) && !isPrimitive(value)) {\n             if (multiRefIndex == -1)\n                 multiRefValues = new HashMap();\n@@ -1277,9 +1300,11 @@ private Serializer getSerializerFromClass(Class javaType, QName qname) {\n                     SERIALIZER_METHOD, SERIALIZER_CLASSES);\n             if (method != null) {\n                 serializer = (Serializer) method.invoke(null,\n-                     new Object[] {msgContext.getEncodingStyle(), javaType, qname});\n+                    new Object[] {getEncodingStyle(), javaType, qname});\n             }\n-       } catch (Exception e) {\n+       } catch (NoSuchMethodException e) {\n+       } catch (IllegalAccessException e) {\n+       } catch (InvocationTargetException e) {\n        }\n        return serializer;\n     }\n@@ -1363,7 +1388,7 @@ private Serializer getSerializer(Class javaType, QName xmlType,\n                     actualXMLType.value =\n                         ((BaseSerializerFactory) serFactory).getXMLType();\n                 }\n-                boolean encoded = (msgContext == null || msgContext.isEncoded());\n+                boolean encoded = isEncoded();\n                 if (actualXMLType.value == null ||\n                         (!encoded && actualXMLType.value.equals(soapConstants.getArrayType()))) {\n                     actualXMLType.value = tm.getXMLType(javaType,"
            },
            {
                "sha": "1cb5b5dab17ce72c60b8ab570f3a3bb475110390",
                "filename": "src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/8b938eb764df6034019a8ec044690e24c2356743/src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8b938eb764df6034019a8ec044690e24c2356743/src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanSerializer.java?ref=8b938eb764df6034019a8ec044690e24c2356743",
                "patch": "@@ -103,11 +103,11 @@ public void serialize(QName name, Attributes attributes,\n         Attributes beanAttrs = getObjectAttributes(value, attributes, context);\n \n         // Get the encoding style\n-        String encodingStyle = context.getMessageContext().getEncodingStyle();\n+        String encodingStyle = context.getEncodingStyle();\n         boolean isEncoded = Constants.isSOAP_ENC(encodingStyle);\n \n         // check whether we have and xsd:any namespace=\"##any\" type\n-        boolean suppressElement = !context.getMessageContext().isEncoded() &&\n+        boolean suppressElement = !context.isEncoded() &&\n                                   name.getNamespaceURI().equals(\"\") &&\n                                   name.getLocalPart().equals(\"any\");\n "
            }
        ]
    }
]
[
    {
        "commit": "https://github.com/apache/axis1-java/commit/d99bb76b53b0c8561545173a849e687d9dfa703f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/265f8bf10e56c0e23a70af6113689b4cba90021d",
        "message": "Fix for (AXIS-1356) CommonsHTTPSender NPE when proxy is set\nfrom Dominik Westner\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@258008 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_101",
        "file": [
            {
                "sha": "d4db6a49a515747eb509f9a4787e54e2888274e2",
                "filename": "src/org/apache/axis/transport/http/CommonsHTTPSender.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/d99bb76b53b0c8561545173a849e687d9dfa703f/src/org/apache/axis/transport/http/CommonsHTTPSender.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/d99bb76b53b0c8561545173a849e687d9dfa703f/src/org/apache/axis/transport/http/CommonsHTTPSender.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/CommonsHTTPSender.java?ref=d99bb76b53b0c8561545173a849e687d9dfa703f",
                "patch": "@@ -278,9 +278,9 @@ private HostConfiguration getHostConfiguration(HttpClient client, URL targetURL)\n         if (port == -1) {\n             port = 80;          // even for https\n         }\n-        if (tcp.getProxyHost().length() == 0 ||\n-        tcp.getProxyPort().length() == 0 ||\n-        hostInNonProxyList) {\n+        if (tcp.getProxyHost().length() > 0 &&\n+        tcp.getProxyPort().length() > 0 &&\n+        !hostInNonProxyList) {\n             config.setHost(targetURL.getHost(), port, targetURL.getProtocol());\n         } else {\n             if (tcp.getProxyUser().length() != 0) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/8014683ff9351b5aaceda2a240ce8abc247e10fc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/59cc99e8e5a8e8bc50a0975a3c6ea173eb1a58be",
        "message": "Fix for Bug 24092 - Generating WSDL out of non-Java Web Services causes NPE\nfrom bayer@oio.de (Thomas Bayer)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256874 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_102",
        "file": [
            {
                "sha": "221ca77bfc1a8d39919ac65a5f9fd2377e384391",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 1,
                "deletions": 6,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=8014683ff9351b5aaceda2a240ce8abc247e10fc",
                "patch": "@@ -660,12 +660,7 @@ public static boolean isWSDLSOAP(String s) {\n      * the no-service fault value\n      */\n     public static final QName QNAME_NO_SERVICE_FAULT_CODE\n-            = new QName(NS_URI_AXIS, \"Server.NoService\");\n-\n-    /**\n-     * the provider for the service does not support WSDL generation\n-     */\n-    public static final QName QNAME_NO_WSDLGENERATOR_FAULT_CODE = new QName( NS_URI_AXIS, \"Server.NoWSDLSupport\");          \n+            = new QName(NS_URI_AXIS, \"Server.NoService\");         \n     \n     // Misc Strings\n     //////////////////////////////////////////////////////////////////////////"
            },
            {
                "sha": "54246f6b453e3416c0f29384d101cb167fabfde4",
                "filename": "src/org/apache/axis/i18n/resource.properties",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/i18n/resource.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/i18n/resource.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/i18n/resource.properties?ref=8014683ff9351b5aaceda2a240ce8abc247e10fc",
                "patch": "@@ -474,8 +474,6 @@ noWSDL00=Could not generate WSDL!\n noWSDL01=There is no SOAP service at this location\n # NOTE:  in noWSDL02, do not translate \"WSDL\"\n noWSDL02=There is a service at this location, but Axis did not generate the WSDL for it. Perhaps it is is misconfigured. \n-# NOTE:   in noWSDL03, do not translate \"WSDL\"\n-noWSDL03=The provider of this service does not support WSDL generation\n \n null00={0} is null\n "
            },
            {
                "sha": "9d9c61c801e9a144aa9ad2a65d10c4483aebc468",
                "filename": "src/org/apache/axis/providers/BasicProvider.java",
                "status": "modified",
                "additions": 140,
                "deletions": 14,
                "changes": 154,
                "blob_url": "https://github.com/apache/axis1-java/blob/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/providers/BasicProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/providers/BasicProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/BasicProvider.java?ref=8014683ff9351b5aaceda2a240ce8abc247e10fc",
                "patch": "@@ -55,17 +55,22 @@\n \n package org.apache.axis.providers;\n \n+import java.util.Hashtable;\n+\n+import javax.xml.namespace.QName;\n+\n import org.apache.axis.AxisFault;\n import org.apache.axis.Constants;\n import org.apache.axis.MessageContext;\n import org.apache.axis.components.logger.LogFactory;\n+import org.apache.axis.description.ServiceDesc;\n+import org.apache.axis.encoding.TypeMapping;\n import org.apache.axis.handlers.BasicHandler;\n import org.apache.axis.handlers.soap.SOAPService;\n import org.apache.axis.utils.Messages;\n+import org.apache.axis.wsdl.fromJava.Emitter;\n import org.apache.commons.logging.Log;\n-\n-import javax.xml.namespace.QName;\n-import java.util.Hashtable;\n+import org.w3c.dom.Document;\n \n /**\n  * This class has one way of keeping track of the\n@@ -133,18 +138,139 @@ public String getOperationName(QName qname) {\n     /**\n      * Generate the WSDL for this service.\n      *\n-     * This method can be overwritten in a subclass with\n-     * code that put in the \"WSDL\" property of the message \n-     * context as a org.w3c.dom.Document\n+     * Put in the \"WSDL\" property of the message context\n+     * as a org.w3c.dom.Document\n      */\n     public void generateWSDL(MessageContext msgContext) throws AxisFault {\n-         \n-      AxisFault fault = new AxisFault( Messages.getMessage(\"noWSDL03\"));\n-      \n-      // set the fault code, so that QSWSDLHandler could deside to report \"nowsdl\"\n-      // instead of throwing an AxisFault\n-      fault.setFaultCode( Constants.QNAME_NO_WSDLGENERATOR_FAULT_CODE);\n-      \n-      throw fault;\n+        if (log.isDebugEnabled())\n+            log.debug(\"Enter: BasicProvider::generateWSDL (\" + this +\")\");\n+\n+        /* Find the service we're invoking so we can grab it's options */\n+        /***************************************************************/\n+        SOAPService service = msgContext.getService();\n+        ServiceDesc serviceDesc = service.getInitializedServiceDesc(msgContext);\n+\n+        // Calculate the appropriate namespaces for the WSDL we're going\n+        // to put out.\n+        //\n+        // If we've been explicitly told which namespaces to use, respect\n+        // that.  If not:\n+        //\n+        // The \"interface namespace\" should be either:\n+        // 1) The namespace of the ServiceDesc\n+        // 2) The transport URL (if there's no ServiceDesc ns)\n+\n+        try {\n+            // Location URL is whatever is explicitly set in the MC\n+            String locationUrl = msgContext.getStrProp(MessageContext.WSDLGEN_SERV_LOC_URL);\n+\n+            if (locationUrl == null) {\n+                // If nothing, try what's explicitly set in the ServiceDesc\n+                locationUrl = serviceDesc.getEndpointURL();\n+            }\n+\n+            if (locationUrl == null) {\n+                // If nothing, use the actual transport URL\n+                locationUrl = msgContext.getStrProp(MessageContext.TRANS_URL);\n+            }\n+\n+            // Interface namespace is whatever is explicitly set\n+            String interfaceNamespace = msgContext.getStrProp(MessageContext.WSDLGEN_INTFNAMESPACE);\n+\n+            if (interfaceNamespace == null) {\n+                // If nothing, use the default namespace of the ServiceDesc\n+                interfaceNamespace = serviceDesc.getDefaultNamespace();\n+            }\n+\n+            if (interfaceNamespace == null) {\n+                // If nothing still, use the location URL determined above\n+                interfaceNamespace = locationUrl;\n+            }\n+\n+            //Do we want to do this?\n+            //\n+            //          if (locationUrl == null) {\n+            //              locationUrl = url;\n+            //          } else {\n+            //              try {\n+            //                  URL urlURL = new URL(url);\n+            //                  URL locationURL = new URL(locationUrl);\n+            //                  URL urlTemp = new URL(urlURL.getProtocol(),\n+            //                          locationURL.getHost(),\n+            //                          locationURL.getPort(),\n+            //                          urlURL.getFile());\n+            //                  interfaceNamespace += urlURL.getFile();\n+            //                  locationUrl = urlTemp.toString();\n+            //              } catch (Exception e) {\n+            //                  locationUrl = url;\n+            //                  interfaceNamespace = url;\n+            //              }\n+            //          }\n+\n+            Emitter emitter = new Emitter();\n+\n+            // This seems like a good idea, but in fact isn't because the\n+            // emitter will figure out a reasonable name (<classname>Service)\n+            // for the WSDL service element name.  We provide the 'alias'\n+            // setting to explicitly set this name. See bug 13262 for more info.\n+            //emitter.setServiceElementName(serviceDesc.getName());\n+\n+            // service alias may be provided if exact naming is required,\n+            // otherwise Axis will name it according to the implementing class name\n+            String alias = (String) service.getOption(\"alias\");\n+            if (alias != null)\n+                emitter.setServiceElementName(alias);\n+\n+            // Set style/use\n+            emitter.setStyle(serviceDesc.getStyle());\n+            emitter.setUse(serviceDesc.getUse());\n+\n+            emitter.setClsSmart(serviceDesc.getImplClass(), locationUrl);\n+\n+            // If a wsdl target namespace was provided, use the targetNamespace.\n+            // Otherwise use the interfaceNamespace constructed above.\n+            String targetNamespace = (String) service.getOption(OPTION_WSDL_TARGETNAMESPACE);\n+            if (targetNamespace == null || targetNamespace.length() == 0) {\n+                targetNamespace = interfaceNamespace;\n+            }\n+            emitter.setIntfNamespace(targetNamespace);\n+\n+            emitter.setLocationUrl(locationUrl);\n+            emitter.setServiceDesc(serviceDesc);\n+            emitter.setTypeMapping((TypeMapping) msgContext.getTypeMappingRegistry().getTypeMapping(serviceDesc.getUse().getEncoding()));\n+            emitter.setDefaultTypeMapping((TypeMapping) msgContext.getTypeMappingRegistry().getDefaultTypeMapping());\n+\n+            String wsdlPortType = (String) service.getOption(OPTION_WSDL_PORTTYPE);\n+            String wsdlServiceElement = (String) service.getOption(OPTION_WSDL_SERVICEELEMENT);\n+            String wsdlServicePort = (String) service.getOption(OPTION_WSDL_SERVICEPORT);\n+\n+            if (wsdlPortType != null && wsdlPortType.length() > 0) {\n+                emitter.setPortTypeName(wsdlPortType);\n+            }\n+            if (wsdlServiceElement != null && wsdlServiceElement.length() > 0) {\n+                emitter.setServiceElementName(wsdlServiceElement);\n+            }\n+            if (wsdlServicePort != null && wsdlServicePort.length() > 0) {\n+                emitter.setServicePortName(wsdlServicePort);\n+            }\n+\n+            String wsdlInputSchema = (String) service.getOption(OPTION_WSDL_INPUTSCHEMA);\n+            if (null != wsdlInputSchema && wsdlInputSchema.length() > 0) {\n+                emitter.setInputSchema(wsdlInputSchema);\n+            }\n+\n+            Document doc = emitter.emit(Emitter.MODE_ALL);\n+\n+            msgContext.setProperty(\"WSDL\", doc);\n+        } catch (NoClassDefFoundError e) {\n+            entLog.info(Messages.getMessage(\"toAxisFault00\"), e);\n+            throw new AxisFault(e.toString(), e);\n+        } catch (Exception e) {\n+            entLog.info(Messages.getMessage(\"toAxisFault00\"), e);\n+            throw AxisFault.makeFault(e);\n+        }\n+\n+        if (log.isDebugEnabled())\n+            log.debug(\"Exit: BasicProvider::generateWSDL (\" + this +\")\");\n     }\n }"
            },
            {
                "sha": "391b82ee6a4787e2da66629542b33e5fc97a931f",
                "filename": "src/org/apache/axis/providers/java/JavaProvider.java",
                "status": "modified",
                "additions": 0,
                "deletions": 144,
                "changes": 144,
                "blob_url": "https://github.com/apache/axis1-java/blob/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/providers/java/JavaProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/providers/java/JavaProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/JavaProvider.java?ref=8014683ff9351b5aaceda2a240ce8abc247e10fc",
                "patch": "@@ -357,150 +357,6 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n             log.debug(\"Exit: JavaProvider::invoke (\" + this + \")\");\n     }\n \n-    /**\n-     * Generate the WSDL for this service.\n-     *\n-     * Put in the \"WSDL\" property of the message context\n-     * as a org.w3c.dom.Document\n-     */\n-    public void generateWSDL(MessageContext msgContext) throws AxisFault {\n-        if (log.isDebugEnabled())\n-            log.debug(\"Enter: JavaProvider::generateWSDL (\" + this + \")\");\n-\n-        /* Find the service we're invoking so we can grab it's options */\n-        /***************************************************************/\n-        SOAPService service = msgContext.getService();\n-        ServiceDesc serviceDesc = service.getInitializedServiceDesc(msgContext);\n-\n-        // Calculate the appropriate namespaces for the WSDL we're going\n-        // to put out.\n-        //\n-        // If we've been explicitly told which namespaces to use, respect\n-        // that.  If not:\n-        //\n-        // The \"interface namespace\" should be either:\n-        // 1) The namespace of the ServiceDesc\n-        // 2) The transport URL (if there's no ServiceDesc ns)\n-\n-        try {\n-            // Location URL is whatever is explicitly set in the MC\n-            String locationUrl =\n-                    msgContext.getStrProp(MessageContext.WSDLGEN_SERV_LOC_URL);\n-\n-            if (locationUrl == null) {\n-                // If nothing, try what's explicitly set in the ServiceDesc\n-                locationUrl = serviceDesc.getEndpointURL();\n-            }\n-\n-            if (locationUrl == null) {\n-                // If nothing, use the actual transport URL\n-                locationUrl = msgContext.getStrProp(MessageContext.TRANS_URL);\n-            }\n-\n-            // Interface namespace is whatever is explicitly set\n-            String interfaceNamespace =\n-                    msgContext.getStrProp(MessageContext.WSDLGEN_INTFNAMESPACE);\n-\n-            if (interfaceNamespace == null) {\n-                // If nothing, use the default namespace of the ServiceDesc\n-                interfaceNamespace = serviceDesc.getDefaultNamespace();\n-            }\n-\n-            if (interfaceNamespace == null) {\n-                // If nothing still, use the location URL determined above\n-                interfaceNamespace = locationUrl;\n-            }\n-\n-//  Do we want to do this?\n-//\n-//            if (locationUrl == null) {\n-//                locationUrl = url;\n-//            } else {\n-//                try {\n-//                    URL urlURL = new URL(url);\n-//                    URL locationURL = new URL(locationUrl);\n-//                    URL urlTemp = new URL(urlURL.getProtocol(),\n-//                            locationURL.getHost(),\n-//                            locationURL.getPort(),\n-//                            urlURL.getFile());\n-//                    interfaceNamespace += urlURL.getFile();\n-//                    locationUrl = urlTemp.toString();\n-//                } catch (Exception e) {\n-//                    locationUrl = url;\n-//                    interfaceNamespace = url;\n-//                }\n-//            }\n-\n-            Emitter emitter = new Emitter();\n-\n-            // This seems like a good idea, but in fact isn't because the\n-            // emitter will figure out a reasonable name (<classname>Service)\n-            // for the WSDL service element name.  We provide the 'alias'\n-            // setting to explicitly set this name. See bug 13262 for more info.\n-            //emitter.setServiceElementName(serviceDesc.getName());\n-            \n-            // service alias may be provided if exact naming is required,\n-            // otherwise Axis will name it according to the implementing class name\n-            String alias = (String)service.getOption(\"alias\");\n-            if(alias != null) emitter.setServiceElementName(alias);\n-\n-            // Set style/use\n-            emitter.setStyle(serviceDesc.getStyle());\n-            emitter.setUse(serviceDesc.getUse());\n-\n-            emitter.setClsSmart(serviceDesc.getImplClass(), locationUrl);\n-\n-            // If a wsdl target namespace was provided, use the targetNamespace.\n-            // Otherwise use the interfaceNamespace constructed above.\n-            String targetNamespace = (String) service.getOption(OPTION_WSDL_TARGETNAMESPACE);\n-            if (targetNamespace == null ||\n-                targetNamespace.length() == 0) {\n-                targetNamespace = interfaceNamespace;\n-            }\n-            emitter.setIntfNamespace(targetNamespace);\n-\n-            emitter.setLocationUrl(locationUrl);\n-            emitter.setServiceDesc(serviceDesc);\n-            emitter.setTypeMapping((TypeMapping)msgContext.getTypeMappingRegistry()\n-                                       .getTypeMapping(serviceDesc.getUse().getEncoding()));\n-            emitter.setDefaultTypeMapping((TypeMapping)msgContext.getTypeMappingRegistry().\n-                                          getDefaultTypeMapping());\n-\n-            String wsdlPortType = (String) service.getOption(OPTION_WSDL_PORTTYPE);\n-            String wsdlServiceElement = (String) service.getOption(OPTION_WSDL_SERVICEELEMENT);\n-            String wsdlServicePort = (String) service.getOption(OPTION_WSDL_SERVICEPORT);\n-\n-            if (wsdlPortType != null && wsdlPortType.length() > 0) {\n-                emitter.setPortTypeName(wsdlPortType);\n-            }\n-            if (wsdlServiceElement != null && wsdlServiceElement.length() > 0) {\n-                emitter.setServiceElementName(wsdlServiceElement);\n-            }\n-            if (wsdlServicePort != null && wsdlServicePort.length() > 0) {\n-                emitter.setServicePortName(wsdlServicePort);\n-            }\n-\n-            String wsdlInputSchema = (String)\n-                service.getOption(OPTION_WSDL_INPUTSCHEMA);\n-            if (null != wsdlInputSchema && wsdlInputSchema.length() > 0) {\n-                emitter.setInputSchema(wsdlInputSchema);\n-            }\n-\n-            Document  doc = emitter.emit(Emitter.MODE_ALL);\n-\n-            msgContext.setProperty(\"WSDL\", doc);\n-        } catch (NoClassDefFoundError e) {\n-            entLog.info( Messages.getMessage(\"toAxisFault00\"), e );\n-            throw new AxisFault(e.toString(), e);\n-        } catch (Exception e) {\n-            entLog.info( Messages.getMessage(\"toAxisFault00\"), e );\n-            throw AxisFault.makeFault(e);\n-        }\n-\n-        if (log.isDebugEnabled())\n-            log.debug(\"Exit: JavaProvider::generateWSDL (\" + this + \")\");\n-    }\n-\n     private String getAllowedMethods(Handler service)\n     {\n         String val = (String)service.getOption(OPTION_ALLOWEDMETHODS);"
            },
            {
                "sha": "466f6a29d3f917e8fa4be6dc48676f2604243ecd",
                "filename": "src/org/apache/axis/transport/http/QSWSDLHandler.java",
                "status": "modified",
                "additions": 3,
                "deletions": 8,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/transport/http/QSWSDLHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/transport/http/QSWSDLHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/QSWSDLHandler.java?ref=8014683ff9351b5aaceda2a240ce8abc247e10fc",
                "patch": "@@ -136,14 +136,9 @@ public void invoke (MessageContext msgContext) throws AxisFault {\n                 response.setStatus (HttpURLConnection.HTTP_NOT_FOUND);\n \n                 reportNoWSDL (response, writer, \"noWSDL01\", axisFault);\n-                \n-            } else if (axisFault.getFaultCode().equals(Constants.QNAME_NO_WSDLGENERATOR_FAULT_CODE)) {              \n-              // the provider for the service doesn't support WSDL generation\n-              response.setStatus (HttpURLConnection.HTTP_NOT_FOUND);\n-           \n-              // report WSDL support is missing                 \n-              reportNoWSDL (response, writer, \"noWSDL03\", axisFault);\n-            } else {\n+            }\n+\n+            else {\n                 //all other faults get thrown\n \n                 throw axisFault;"
            },
            {
                "sha": "e4ecb1bea212292c848d6f661755d7331eef210e",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/axis1-java/blob/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8014683ff9351b5aaceda2a240ce8abc247e10fc/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=8014683ff9351b5aaceda2a240ce8abc247e10fc",
                "patch": "@@ -521,9 +521,16 @@ protected void init(int mode) {\n         }\n \n         if (encodingList == null) {\n-            clsName = cls.getName();\n-            clsName = clsName.substring(clsName.lastIndexOf('.') + 1);\n-\n+          \n+            // if cls contains a Class object with the service implementation use the Name of the\n+            // class else use the service name\n+            if ( cls != null ) {            \n+                clsName = cls.getName();                  \n+                clsName = clsName.substring(clsName.lastIndexOf('.') + 1);\n+            } else {              \n+                clsName = getServiceDesc().getName();\n+            }\n+            \n             // Default the portType name\n             if (getPortTypeName() == null) {\n                 setPortTypeName(clsName);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/dc7e3039aab68290a889d0e5e9b262d00feac1fe",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6f00506a76e6bb6119ffc8e9e8ad7bbbe57e724d",
        "message": "Fix for Bug 24092 - Generating WSDL out of non-Java Web Services causes NPE\nfrom bayer@oio.de (Thomas Bayer)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249805 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_103",
        "file": [
            {
                "sha": "221ca77bfc1a8d39919ac65a5f9fd2377e384391",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 1,
                "deletions": 6,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=dc7e3039aab68290a889d0e5e9b262d00feac1fe",
                "patch": "@@ -660,12 +660,7 @@ public static boolean isWSDLSOAP(String s) {\n      * the no-service fault value\n      */\n     public static final QName QNAME_NO_SERVICE_FAULT_CODE\n-            = new QName(NS_URI_AXIS, \"Server.NoService\");\n-\n-    /**\n-     * the provider for the service does not support WSDL generation\n-     */\n-    public static final QName QNAME_NO_WSDLGENERATOR_FAULT_CODE = new QName( NS_URI_AXIS, \"Server.NoWSDLSupport\");          \n+            = new QName(NS_URI_AXIS, \"Server.NoService\");         \n     \n     // Misc Strings\n     //////////////////////////////////////////////////////////////////////////"
            },
            {
                "sha": "54246f6b453e3416c0f29384d101cb167fabfde4",
                "filename": "src/org/apache/axis/i18n/resource.properties",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/i18n/resource.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/i18n/resource.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/i18n/resource.properties?ref=dc7e3039aab68290a889d0e5e9b262d00feac1fe",
                "patch": "@@ -474,8 +474,6 @@ noWSDL00=Could not generate WSDL!\n noWSDL01=There is no SOAP service at this location\n # NOTE:  in noWSDL02, do not translate \"WSDL\"\n noWSDL02=There is a service at this location, but Axis did not generate the WSDL for it. Perhaps it is is misconfigured. \n-# NOTE:   in noWSDL03, do not translate \"WSDL\"\n-noWSDL03=The provider of this service does not support WSDL generation\n \n null00={0} is null\n "
            },
            {
                "sha": "9d9c61c801e9a144aa9ad2a65d10c4483aebc468",
                "filename": "src/org/apache/axis/providers/BasicProvider.java",
                "status": "modified",
                "additions": 140,
                "deletions": 14,
                "changes": 154,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/providers/BasicProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/providers/BasicProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/BasicProvider.java?ref=dc7e3039aab68290a889d0e5e9b262d00feac1fe",
                "patch": "@@ -55,17 +55,22 @@\n \n package org.apache.axis.providers;\n \n+import java.util.Hashtable;\n+\n+import javax.xml.namespace.QName;\n+\n import org.apache.axis.AxisFault;\n import org.apache.axis.Constants;\n import org.apache.axis.MessageContext;\n import org.apache.axis.components.logger.LogFactory;\n+import org.apache.axis.description.ServiceDesc;\n+import org.apache.axis.encoding.TypeMapping;\n import org.apache.axis.handlers.BasicHandler;\n import org.apache.axis.handlers.soap.SOAPService;\n import org.apache.axis.utils.Messages;\n+import org.apache.axis.wsdl.fromJava.Emitter;\n import org.apache.commons.logging.Log;\n-\n-import javax.xml.namespace.QName;\n-import java.util.Hashtable;\n+import org.w3c.dom.Document;\n \n /**\n  * This class has one way of keeping track of the\n@@ -133,18 +138,139 @@ public String getOperationName(QName qname) {\n     /**\n      * Generate the WSDL for this service.\n      *\n-     * This method can be overwritten in a subclass with\n-     * code that put in the \"WSDL\" property of the message \n-     * context as a org.w3c.dom.Document\n+     * Put in the \"WSDL\" property of the message context\n+     * as a org.w3c.dom.Document\n      */\n     public void generateWSDL(MessageContext msgContext) throws AxisFault {\n-         \n-      AxisFault fault = new AxisFault( Messages.getMessage(\"noWSDL03\"));\n-      \n-      // set the fault code, so that QSWSDLHandler could deside to report \"nowsdl\"\n-      // instead of throwing an AxisFault\n-      fault.setFaultCode( Constants.QNAME_NO_WSDLGENERATOR_FAULT_CODE);\n-      \n-      throw fault;\n+        if (log.isDebugEnabled())\n+            log.debug(\"Enter: BasicProvider::generateWSDL (\" + this +\")\");\n+\n+        /* Find the service we're invoking so we can grab it's options */\n+        /***************************************************************/\n+        SOAPService service = msgContext.getService();\n+        ServiceDesc serviceDesc = service.getInitializedServiceDesc(msgContext);\n+\n+        // Calculate the appropriate namespaces for the WSDL we're going\n+        // to put out.\n+        //\n+        // If we've been explicitly told which namespaces to use, respect\n+        // that.  If not:\n+        //\n+        // The \"interface namespace\" should be either:\n+        // 1) The namespace of the ServiceDesc\n+        // 2) The transport URL (if there's no ServiceDesc ns)\n+\n+        try {\n+            // Location URL is whatever is explicitly set in the MC\n+            String locationUrl = msgContext.getStrProp(MessageContext.WSDLGEN_SERV_LOC_URL);\n+\n+            if (locationUrl == null) {\n+                // If nothing, try what's explicitly set in the ServiceDesc\n+                locationUrl = serviceDesc.getEndpointURL();\n+            }\n+\n+            if (locationUrl == null) {\n+                // If nothing, use the actual transport URL\n+                locationUrl = msgContext.getStrProp(MessageContext.TRANS_URL);\n+            }\n+\n+            // Interface namespace is whatever is explicitly set\n+            String interfaceNamespace = msgContext.getStrProp(MessageContext.WSDLGEN_INTFNAMESPACE);\n+\n+            if (interfaceNamespace == null) {\n+                // If nothing, use the default namespace of the ServiceDesc\n+                interfaceNamespace = serviceDesc.getDefaultNamespace();\n+            }\n+\n+            if (interfaceNamespace == null) {\n+                // If nothing still, use the location URL determined above\n+                interfaceNamespace = locationUrl;\n+            }\n+\n+            //Do we want to do this?\n+            //\n+            //          if (locationUrl == null) {\n+            //              locationUrl = url;\n+            //          } else {\n+            //              try {\n+            //                  URL urlURL = new URL(url);\n+            //                  URL locationURL = new URL(locationUrl);\n+            //                  URL urlTemp = new URL(urlURL.getProtocol(),\n+            //                          locationURL.getHost(),\n+            //                          locationURL.getPort(),\n+            //                          urlURL.getFile());\n+            //                  interfaceNamespace += urlURL.getFile();\n+            //                  locationUrl = urlTemp.toString();\n+            //              } catch (Exception e) {\n+            //                  locationUrl = url;\n+            //                  interfaceNamespace = url;\n+            //              }\n+            //          }\n+\n+            Emitter emitter = new Emitter();\n+\n+            // This seems like a good idea, but in fact isn't because the\n+            // emitter will figure out a reasonable name (<classname>Service)\n+            // for the WSDL service element name.  We provide the 'alias'\n+            // setting to explicitly set this name. See bug 13262 for more info.\n+            //emitter.setServiceElementName(serviceDesc.getName());\n+\n+            // service alias may be provided if exact naming is required,\n+            // otherwise Axis will name it according to the implementing class name\n+            String alias = (String) service.getOption(\"alias\");\n+            if (alias != null)\n+                emitter.setServiceElementName(alias);\n+\n+            // Set style/use\n+            emitter.setStyle(serviceDesc.getStyle());\n+            emitter.setUse(serviceDesc.getUse());\n+\n+            emitter.setClsSmart(serviceDesc.getImplClass(), locationUrl);\n+\n+            // If a wsdl target namespace was provided, use the targetNamespace.\n+            // Otherwise use the interfaceNamespace constructed above.\n+            String targetNamespace = (String) service.getOption(OPTION_WSDL_TARGETNAMESPACE);\n+            if (targetNamespace == null || targetNamespace.length() == 0) {\n+                targetNamespace = interfaceNamespace;\n+            }\n+            emitter.setIntfNamespace(targetNamespace);\n+\n+            emitter.setLocationUrl(locationUrl);\n+            emitter.setServiceDesc(serviceDesc);\n+            emitter.setTypeMapping((TypeMapping) msgContext.getTypeMappingRegistry().getTypeMapping(serviceDesc.getUse().getEncoding()));\n+            emitter.setDefaultTypeMapping((TypeMapping) msgContext.getTypeMappingRegistry().getDefaultTypeMapping());\n+\n+            String wsdlPortType = (String) service.getOption(OPTION_WSDL_PORTTYPE);\n+            String wsdlServiceElement = (String) service.getOption(OPTION_WSDL_SERVICEELEMENT);\n+            String wsdlServicePort = (String) service.getOption(OPTION_WSDL_SERVICEPORT);\n+\n+            if (wsdlPortType != null && wsdlPortType.length() > 0) {\n+                emitter.setPortTypeName(wsdlPortType);\n+            }\n+            if (wsdlServiceElement != null && wsdlServiceElement.length() > 0) {\n+                emitter.setServiceElementName(wsdlServiceElement);\n+            }\n+            if (wsdlServicePort != null && wsdlServicePort.length() > 0) {\n+                emitter.setServicePortName(wsdlServicePort);\n+            }\n+\n+            String wsdlInputSchema = (String) service.getOption(OPTION_WSDL_INPUTSCHEMA);\n+            if (null != wsdlInputSchema && wsdlInputSchema.length() > 0) {\n+                emitter.setInputSchema(wsdlInputSchema);\n+            }\n+\n+            Document doc = emitter.emit(Emitter.MODE_ALL);\n+\n+            msgContext.setProperty(\"WSDL\", doc);\n+        } catch (NoClassDefFoundError e) {\n+            entLog.info(Messages.getMessage(\"toAxisFault00\"), e);\n+            throw new AxisFault(e.toString(), e);\n+        } catch (Exception e) {\n+            entLog.info(Messages.getMessage(\"toAxisFault00\"), e);\n+            throw AxisFault.makeFault(e);\n+        }\n+\n+        if (log.isDebugEnabled())\n+            log.debug(\"Exit: BasicProvider::generateWSDL (\" + this +\")\");\n     }\n }"
            },
            {
                "sha": "391b82ee6a4787e2da66629542b33e5fc97a931f",
                "filename": "src/org/apache/axis/providers/java/JavaProvider.java",
                "status": "modified",
                "additions": 0,
                "deletions": 144,
                "changes": 144,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/providers/java/JavaProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/providers/java/JavaProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/JavaProvider.java?ref=dc7e3039aab68290a889d0e5e9b262d00feac1fe",
                "patch": "@@ -357,150 +357,6 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n             log.debug(\"Exit: JavaProvider::invoke (\" + this + \")\");\n     }\n \n-    /**\n-     * Generate the WSDL for this service.\n-     *\n-     * Put in the \"WSDL\" property of the message context\n-     * as a org.w3c.dom.Document\n-     */\n-    public void generateWSDL(MessageContext msgContext) throws AxisFault {\n-        if (log.isDebugEnabled())\n-            log.debug(\"Enter: JavaProvider::generateWSDL (\" + this + \")\");\n-\n-        /* Find the service we're invoking so we can grab it's options */\n-        /***************************************************************/\n-        SOAPService service = msgContext.getService();\n-        ServiceDesc serviceDesc = service.getInitializedServiceDesc(msgContext);\n-\n-        // Calculate the appropriate namespaces for the WSDL we're going\n-        // to put out.\n-        //\n-        // If we've been explicitly told which namespaces to use, respect\n-        // that.  If not:\n-        //\n-        // The \"interface namespace\" should be either:\n-        // 1) The namespace of the ServiceDesc\n-        // 2) The transport URL (if there's no ServiceDesc ns)\n-\n-        try {\n-            // Location URL is whatever is explicitly set in the MC\n-            String locationUrl =\n-                    msgContext.getStrProp(MessageContext.WSDLGEN_SERV_LOC_URL);\n-\n-            if (locationUrl == null) {\n-                // If nothing, try what's explicitly set in the ServiceDesc\n-                locationUrl = serviceDesc.getEndpointURL();\n-            }\n-\n-            if (locationUrl == null) {\n-                // If nothing, use the actual transport URL\n-                locationUrl = msgContext.getStrProp(MessageContext.TRANS_URL);\n-            }\n-\n-            // Interface namespace is whatever is explicitly set\n-            String interfaceNamespace =\n-                    msgContext.getStrProp(MessageContext.WSDLGEN_INTFNAMESPACE);\n-\n-            if (interfaceNamespace == null) {\n-                // If nothing, use the default namespace of the ServiceDesc\n-                interfaceNamespace = serviceDesc.getDefaultNamespace();\n-            }\n-\n-            if (interfaceNamespace == null) {\n-                // If nothing still, use the location URL determined above\n-                interfaceNamespace = locationUrl;\n-            }\n-\n-//  Do we want to do this?\n-//\n-//            if (locationUrl == null) {\n-//                locationUrl = url;\n-//            } else {\n-//                try {\n-//                    URL urlURL = new URL(url);\n-//                    URL locationURL = new URL(locationUrl);\n-//                    URL urlTemp = new URL(urlURL.getProtocol(),\n-//                            locationURL.getHost(),\n-//                            locationURL.getPort(),\n-//                            urlURL.getFile());\n-//                    interfaceNamespace += urlURL.getFile();\n-//                    locationUrl = urlTemp.toString();\n-//                } catch (Exception e) {\n-//                    locationUrl = url;\n-//                    interfaceNamespace = url;\n-//                }\n-//            }\n-\n-            Emitter emitter = new Emitter();\n-\n-            // This seems like a good idea, but in fact isn't because the\n-            // emitter will figure out a reasonable name (<classname>Service)\n-            // for the WSDL service element name.  We provide the 'alias'\n-            // setting to explicitly set this name. See bug 13262 for more info.\n-            //emitter.setServiceElementName(serviceDesc.getName());\n-            \n-            // service alias may be provided if exact naming is required,\n-            // otherwise Axis will name it according to the implementing class name\n-            String alias = (String)service.getOption(\"alias\");\n-            if(alias != null) emitter.setServiceElementName(alias);\n-\n-            // Set style/use\n-            emitter.setStyle(serviceDesc.getStyle());\n-            emitter.setUse(serviceDesc.getUse());\n-\n-            emitter.setClsSmart(serviceDesc.getImplClass(), locationUrl);\n-\n-            // If a wsdl target namespace was provided, use the targetNamespace.\n-            // Otherwise use the interfaceNamespace constructed above.\n-            String targetNamespace = (String) service.getOption(OPTION_WSDL_TARGETNAMESPACE);\n-            if (targetNamespace == null ||\n-                targetNamespace.length() == 0) {\n-                targetNamespace = interfaceNamespace;\n-            }\n-            emitter.setIntfNamespace(targetNamespace);\n-\n-            emitter.setLocationUrl(locationUrl);\n-            emitter.setServiceDesc(serviceDesc);\n-            emitter.setTypeMapping((TypeMapping)msgContext.getTypeMappingRegistry()\n-                                       .getTypeMapping(serviceDesc.getUse().getEncoding()));\n-            emitter.setDefaultTypeMapping((TypeMapping)msgContext.getTypeMappingRegistry().\n-                                          getDefaultTypeMapping());\n-\n-            String wsdlPortType = (String) service.getOption(OPTION_WSDL_PORTTYPE);\n-            String wsdlServiceElement = (String) service.getOption(OPTION_WSDL_SERVICEELEMENT);\n-            String wsdlServicePort = (String) service.getOption(OPTION_WSDL_SERVICEPORT);\n-\n-            if (wsdlPortType != null && wsdlPortType.length() > 0) {\n-                emitter.setPortTypeName(wsdlPortType);\n-            }\n-            if (wsdlServiceElement != null && wsdlServiceElement.length() > 0) {\n-                emitter.setServiceElementName(wsdlServiceElement);\n-            }\n-            if (wsdlServicePort != null && wsdlServicePort.length() > 0) {\n-                emitter.setServicePortName(wsdlServicePort);\n-            }\n-\n-            String wsdlInputSchema = (String)\n-                service.getOption(OPTION_WSDL_INPUTSCHEMA);\n-            if (null != wsdlInputSchema && wsdlInputSchema.length() > 0) {\n-                emitter.setInputSchema(wsdlInputSchema);\n-            }\n-\n-            Document  doc = emitter.emit(Emitter.MODE_ALL);\n-\n-            msgContext.setProperty(\"WSDL\", doc);\n-        } catch (NoClassDefFoundError e) {\n-            entLog.info( Messages.getMessage(\"toAxisFault00\"), e );\n-            throw new AxisFault(e.toString(), e);\n-        } catch (Exception e) {\n-            entLog.info( Messages.getMessage(\"toAxisFault00\"), e );\n-            throw AxisFault.makeFault(e);\n-        }\n-\n-        if (log.isDebugEnabled())\n-            log.debug(\"Exit: JavaProvider::generateWSDL (\" + this + \")\");\n-    }\n-\n     private String getAllowedMethods(Handler service)\n     {\n         String val = (String)service.getOption(OPTION_ALLOWEDMETHODS);"
            },
            {
                "sha": "466f6a29d3f917e8fa4be6dc48676f2604243ecd",
                "filename": "src/org/apache/axis/transport/http/QSWSDLHandler.java",
                "status": "modified",
                "additions": 3,
                "deletions": 8,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/transport/http/QSWSDLHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/transport/http/QSWSDLHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/QSWSDLHandler.java?ref=dc7e3039aab68290a889d0e5e9b262d00feac1fe",
                "patch": "@@ -136,14 +136,9 @@ public void invoke (MessageContext msgContext) throws AxisFault {\n                 response.setStatus (HttpURLConnection.HTTP_NOT_FOUND);\n \n                 reportNoWSDL (response, writer, \"noWSDL01\", axisFault);\n-                \n-            } else if (axisFault.getFaultCode().equals(Constants.QNAME_NO_WSDLGENERATOR_FAULT_CODE)) {              \n-              // the provider for the service doesn't support WSDL generation\n-              response.setStatus (HttpURLConnection.HTTP_NOT_FOUND);\n-           \n-              // report WSDL support is missing                 \n-              reportNoWSDL (response, writer, \"noWSDL03\", axisFault);\n-            } else {\n+            }\n+\n+            else {\n                 //all other faults get thrown\n \n                 throw axisFault;"
            },
            {
                "sha": "e4ecb1bea212292c848d6f661755d7331eef210e",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc7e3039aab68290a889d0e5e9b262d00feac1fe/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=dc7e3039aab68290a889d0e5e9b262d00feac1fe",
                "patch": "@@ -521,9 +521,16 @@ protected void init(int mode) {\n         }\n \n         if (encodingList == null) {\n-            clsName = cls.getName();\n-            clsName = clsName.substring(clsName.lastIndexOf('.') + 1);\n-\n+          \n+            // if cls contains a Class object with the service implementation use the Name of the\n+            // class else use the service name\n+            if ( cls != null ) {            \n+                clsName = cls.getName();                  \n+                clsName = clsName.substring(clsName.lastIndexOf('.') + 1);\n+            } else {              \n+                clsName = getServiceDesc().getName();\n+            }\n+            \n             // Default the portType name\n             if (getPortTypeName() == null) {\n                 setPortTypeName(clsName);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/107a08b66021484c7966f124cdc9564d7d42f26a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/39b2ab809d0687be226518068e2e3a28fa18b426",
        "message": "Prevent NPE (http://marc.theaimsgroup.com/?t=105967684700009&r=1&w=2)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256631 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_104",
        "file": [
            {
                "sha": "7a60adfe15195dac74d7dce4c34a61f993e591c6",
                "filename": "src/org/apache/axis/message/SOAPHeaderElement.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/107a08b66021484c7966f124cdc9564d7d42f26a/src/org/apache/axis/message/SOAPHeaderElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/107a08b66021484c7966f124cdc9564d7d42f26a/src/org/apache/axis/message/SOAPHeaderElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeaderElement.java?ref=107a08b66021484c7966f124cdc9564d7d42f26a",
                "patch": "@@ -106,7 +106,7 @@ public SOAPHeaderElement(Element elem)\n         // TLS (SOAPConstants.getCurrentVersion() ?)\n         SOAPConstants soapConstants = SOAPConstants.SOAP11_CONSTANTS;\n \n-        if (getNamespaceURI().equals(SOAPConstants.SOAP12_CONSTANTS.getEnvelopeURI()))\n+        if (getNamespaceURI() != null && getNamespaceURI().equals(SOAPConstants.SOAP12_CONSTANTS.getEnvelopeURI()))\n             soapConstants = SOAPConstants.SOAP12_CONSTANTS;\n \n         String val = elem.getAttributeNS(soapConstants.getEnvelopeURI(),"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b5e5b69492d103f726b64aeffd45e559fe744d51",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/7bc7a7d8dab031bc835b6cc1b244e83197d9b166",
        "message": "Prevent NPE (http://marc.theaimsgroup.com/?t=105967684700009&r=1&w=2)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249562 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_105",
        "file": [
            {
                "sha": "7a60adfe15195dac74d7dce4c34a61f993e591c6",
                "filename": "src/org/apache/axis/message/SOAPHeaderElement.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/b5e5b69492d103f726b64aeffd45e559fe744d51/src/org/apache/axis/message/SOAPHeaderElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b5e5b69492d103f726b64aeffd45e559fe744d51/src/org/apache/axis/message/SOAPHeaderElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeaderElement.java?ref=b5e5b69492d103f726b64aeffd45e559fe744d51",
                "patch": "@@ -106,7 +106,7 @@ public SOAPHeaderElement(Element elem)\n         // TLS (SOAPConstants.getCurrentVersion() ?)\n         SOAPConstants soapConstants = SOAPConstants.SOAP11_CONSTANTS;\n \n-        if (getNamespaceURI().equals(SOAPConstants.SOAP12_CONSTANTS.getEnvelopeURI()))\n+        if (getNamespaceURI() != null && getNamespaceURI().equals(SOAPConstants.SOAP12_CONSTANTS.getEnvelopeURI()))\n             soapConstants = SOAPConstants.SOAP12_CONSTANTS;\n \n         String val = elem.getAttributeNS(soapConstants.getEnvelopeURI(),"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/6b39fcc8631fc085ead94299f15a82afa66aca62",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6b31b93aab678956d9f3a3241d6b34f92eaeaa5f",
        "message": "bug ID#22725; NPE when scanning a directory specified by a string\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256582 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_106",
        "file": [
            {
                "sha": "644359e572038e9c2d0865340112dbb87c5a0665",
                "filename": "webapps/axis/fingerprint.jsp",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/6b39fcc8631fc085ead94299f15a82afa66aca62/webapps/axis/fingerprint.jsp",
                "raw_url": "https://github.com/apache/axis1-java/raw/6b39fcc8631fc085ead94299f15a82afa66aca62/webapps/axis/fingerprint.jsp",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/webapps/axis/fingerprint.jsp?ref=6b39fcc8631fc085ead94299f15a82afa66aca62",
                "patch": "@@ -90,8 +90,11 @@\n \n     /** scan a directory for jars */    \n     public File[] scanDir(String dir) throws IOException \n-        { \n-        return scanDir(new File(dir)); \n+        {\n+        if(dir==null) {\n+            return NO_FILES;\n+        }\n+        return scanDir(new File(dir));\n         }\n         \n     public File[] scanDir(File dir) throws IOException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/087040791bfac2ea0cf44a43d693f6e8b892933e",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/19bf3667f8b9eb3ffa44efe420d4af1bae7ace88",
        "message": "bug ID#22725; NPE when scanning a directory specified by a string\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249513 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_107",
        "file": [
            {
                "sha": "644359e572038e9c2d0865340112dbb87c5a0665",
                "filename": "webapps/axis/fingerprint.jsp",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/087040791bfac2ea0cf44a43d693f6e8b892933e/webapps/axis/fingerprint.jsp",
                "raw_url": "https://github.com/apache/axis1-java/raw/087040791bfac2ea0cf44a43d693f6e8b892933e/webapps/axis/fingerprint.jsp",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/webapps/axis/fingerprint.jsp?ref=087040791bfac2ea0cf44a43d693f6e8b892933e",
                "patch": "@@ -90,8 +90,11 @@\n \n     /** scan a directory for jars */    \n     public File[] scanDir(String dir) throws IOException \n-        { \n-        return scanDir(new File(dir)); \n+        {\n+        if(dir==null) {\n+            return NO_FILES;\n+        }\n+        return scanDir(new File(dir));\n         }\n         \n     public File[] scanDir(File dir) throws IOException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/be8ce0bfd312d790f2ce9246df23e57e553e7c03",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/d55d54c442988e0e6a1a932043147389fd45d058",
        "message": "Fix for Bug 20653 - AxisFault during config processing gives NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256216 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_108",
        "file": [
            {
                "sha": "7d8a4227ae10c094b6a566e0ae9ee474d04a1b8d",
                "filename": "src/org/apache/axis/message/SOAPFault.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/be8ce0bfd312d790f2ce9246df23e57e553e7c03/src/org/apache/axis/message/SOAPFault.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/be8ce0bfd312d790f2ce9246df23e57e553e7c03/src/org/apache/axis/message/SOAPFault.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFault.java?ref=be8ce0bfd312d790f2ce9246df23e57e553e7c03",
                "patch": "@@ -212,9 +212,11 @@ private QName getFaultQName(Class cls, SerializationContext context) {\n         QName qname = null;       \n         if (! cls.equals(AxisFault.class)) {\n             FaultDesc faultDesc = null;\n-            OperationDesc op = context.getMessageContext().getOperation();\n-            if(op != null) {\n-                faultDesc = op.getFaultByClass(cls);\n+            if (context.getMessageContext() != null) {\n+                OperationDesc op = context.getMessageContext().getOperation();\n+                if (op != null) {\n+                    faultDesc = op.getFaultByClass(cls);\n+                }\n             }\n                 \n             if (faultDesc != null) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/90e6077cfa5cfda8270128056197910a18ad87a0",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/69671f43ab6f13a92f0192f95a78a482e74ea1f5",
        "message": "Fix for Bug 20653 - AxisFault during config processing gives NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249147 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_109",
        "file": [
            {
                "sha": "7d8a4227ae10c094b6a566e0ae9ee474d04a1b8d",
                "filename": "src/org/apache/axis/message/SOAPFault.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/90e6077cfa5cfda8270128056197910a18ad87a0/src/org/apache/axis/message/SOAPFault.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/90e6077cfa5cfda8270128056197910a18ad87a0/src/org/apache/axis/message/SOAPFault.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFault.java?ref=90e6077cfa5cfda8270128056197910a18ad87a0",
                "patch": "@@ -212,9 +212,11 @@ private QName getFaultQName(Class cls, SerializationContext context) {\n         QName qname = null;       \n         if (! cls.equals(AxisFault.class)) {\n             FaultDesc faultDesc = null;\n-            OperationDesc op = context.getMessageContext().getOperation();\n-            if(op != null) {\n-                faultDesc = op.getFaultByClass(cls);\n+            if (context.getMessageContext() != null) {\n+                OperationDesc op = context.getMessageContext().getOperation();\n+                if (op != null) {\n+                    faultDesc = op.getFaultByClass(cls);\n+                }\n             }\n                 \n             if (faultDesc != null) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/49fd755fa00ac64425a7100d10bcd16759d2930b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/c55ef243d5139650e8fc5526a7cfcef1ac23ccbe",
        "message": "Prevent NPE in case there are problems finding the paramClass\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256207 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_110",
        "file": [
            {
                "sha": "0f82326b9c1914680d74a6a0033be3be3f81563f",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 12,
                "deletions": 10,
                "changes": 22,
                "blob_url": "https://github.com/apache/axis1-java/blob/49fd755fa00ac64425a7100d10bcd16759d2930b/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/49fd755fa00ac64425a7100d10bcd16759d2930b/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=49fd755fa00ac64425a7100d10bcd16759d2930b",
                "patch": "@@ -657,16 +657,18 @@ private void syncOperationToClass(OperationDesc oper, Class implClass)\n                             paramClass = tm.getClassForQName(param.getTypeQName());\n                         }\n \n-                        // This is a match if the paramClass is somehow\n-                        // convertable to the \"real\" parameter type.  If not,\n-                        // break out of this loop.\n-                        if (!JavaUtils.isConvertable(paramClass, actualType)) {\n-                            break;\n-                        }\n-                        \n-                        if (!actualType.isAssignableFrom(paramClass)) {\n-                            // This doesn't fit without conversion\n-                            conversionNecessary = true;\n+                        if (paramClass != null) {\n+                            // This is a match if the paramClass is somehow\n+                            // convertable to the \"real\" parameter type.  If not,\n+                            // break out of this loop.\n+                            if (!JavaUtils.isConvertable(paramClass, actualType)) {\n+                                break;\n+                            }\n+                            \n+                            if (!actualType.isAssignableFrom(paramClass)) {\n+                                // This doesn't fit without conversion\n+                                conversionNecessary = true;\n+                            }\n                         }\n                     }\n                     // In all scenarios the ParameterDesc javaType is set to"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/a552384659d5b51af6fcbca48eb2b545c30d1701",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6a9d74e072f38bb6639efd1c8de79e288ed11800",
        "message": "Prevent NPE in case there are problems finding the paramClass\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249138 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_111",
        "file": [
            {
                "sha": "0f82326b9c1914680d74a6a0033be3be3f81563f",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 12,
                "deletions": 10,
                "changes": 22,
                "blob_url": "https://github.com/apache/axis1-java/blob/a552384659d5b51af6fcbca48eb2b545c30d1701/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a552384659d5b51af6fcbca48eb2b545c30d1701/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=a552384659d5b51af6fcbca48eb2b545c30d1701",
                "patch": "@@ -657,16 +657,18 @@ private void syncOperationToClass(OperationDesc oper, Class implClass)\n                             paramClass = tm.getClassForQName(param.getTypeQName());\n                         }\n \n-                        // This is a match if the paramClass is somehow\n-                        // convertable to the \"real\" parameter type.  If not,\n-                        // break out of this loop.\n-                        if (!JavaUtils.isConvertable(paramClass, actualType)) {\n-                            break;\n-                        }\n-                        \n-                        if (!actualType.isAssignableFrom(paramClass)) {\n-                            // This doesn't fit without conversion\n-                            conversionNecessary = true;\n+                        if (paramClass != null) {\n+                            // This is a match if the paramClass is somehow\n+                            // convertable to the \"real\" parameter type.  If not,\n+                            // break out of this loop.\n+                            if (!JavaUtils.isConvertable(paramClass, actualType)) {\n+                                break;\n+                            }\n+                            \n+                            if (!actualType.isAssignableFrom(paramClass)) {\n+                                // This doesn't fit without conversion\n+                                conversionNecessary = true;\n+                            }\n                         }\n                     }\n                     // In all scenarios the ParameterDesc javaType is set to"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f5930ea20e2677317246bff6a70ec697d7c5f1a8",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0e1be749680b42da64d3dda310ab38a749049ddb",
        "message": "fix NPE if value of token is empty string\nPR:19592\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256180 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_112",
        "file": [
            {
                "sha": "7713ed565d4c87c47baf6880ea79ff3ef5198e33",
                "filename": "src/org/apache/axis/types/Token.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/f5930ea20e2677317246bff6a70ec697d7c5f1a8/src/org/apache/axis/types/Token.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f5930ea20e2677317246bff6a70ec697d7c5f1a8/src/org/apache/axis/types/Token.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/types/Token.java?ref=f5930ea20e2677317246bff6a70ec697d7c5f1a8",
                "patch": "@@ -101,7 +101,10 @@ public Token(String stValue) throws IllegalArgumentException {\n      */\n     public boolean isValid(String stValue) {\n         int scan;\n-\n+        // check to see if we have a string to review\n+        if (  (stValue == null) || (stValue.length() == 0)  )\n+            return true;\n+            \n         // no leading space\n         if (stValue.charAt(0) == 0x20)\n             return false;"
            },
            {
                "sha": "1f6cec42077d4da7d7760902d3ac6c1ed2f071cc",
                "filename": "test/types/TestToken.java",
                "status": "modified",
                "additions": 14,
                "deletions": 0,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/f5930ea20e2677317246bff6a70ec697d7c5f1a8/test/types/TestToken.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f5930ea20e2677317246bff6a70ec697d7c5f1a8/test/types/TestToken.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/types/TestToken.java?ref=f5930ea20e2677317246bff6a70ec697d7c5f1a8",
                "patch": "@@ -152,4 +152,18 @@ public void testStringWithLeadingAndTrailingSpaces() throws Exception {\n     public void testDoubleSpace() throws Exception {\n         runFailTest(\"a   B\"); // note: \\r fails\n     }\n+    \n+    /**\n+     * Test an empty string\n+     */\n+    public void testEmptyString() throws Exception {\n+        runPassTest(\"\"); \n+    }\n+    \n+    /**\n+     * Test an empty string\n+     */\n+    public void testNull() throws Exception {\n+        runPassTest(null); \n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c71fd21ad5deeeacc381023857ec6d3f33b818be",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/2d1226b5daa8822deae3f13d5a0a807639d7e841",
        "message": "fix NPE if value of token is empty string\nPR:19592\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249111 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_113",
        "file": [
            {
                "sha": "7713ed565d4c87c47baf6880ea79ff3ef5198e33",
                "filename": "src/org/apache/axis/types/Token.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/c71fd21ad5deeeacc381023857ec6d3f33b818be/src/org/apache/axis/types/Token.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c71fd21ad5deeeacc381023857ec6d3f33b818be/src/org/apache/axis/types/Token.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/types/Token.java?ref=c71fd21ad5deeeacc381023857ec6d3f33b818be",
                "patch": "@@ -101,7 +101,10 @@ public Token(String stValue) throws IllegalArgumentException {\n      */\n     public boolean isValid(String stValue) {\n         int scan;\n-\n+        // check to see if we have a string to review\n+        if (  (stValue == null) || (stValue.length() == 0)  )\n+            return true;\n+            \n         // no leading space\n         if (stValue.charAt(0) == 0x20)\n             return false;"
            },
            {
                "sha": "1f6cec42077d4da7d7760902d3ac6c1ed2f071cc",
                "filename": "test/types/TestToken.java",
                "status": "modified",
                "additions": 14,
                "deletions": 0,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/c71fd21ad5deeeacc381023857ec6d3f33b818be/test/types/TestToken.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c71fd21ad5deeeacc381023857ec6d3f33b818be/test/types/TestToken.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/types/TestToken.java?ref=c71fd21ad5deeeacc381023857ec6d3f33b818be",
                "patch": "@@ -152,4 +152,18 @@ public void testStringWithLeadingAndTrailingSpaces() throws Exception {\n     public void testDoubleSpace() throws Exception {\n         runFailTest(\"a   B\"); // note: \\r fails\n     }\n+    \n+    /**\n+     * Test an empty string\n+     */\n+    public void testEmptyString() throws Exception {\n+        runPassTest(\"\"); \n+    }\n+    \n+    /**\n+     * Test an empty string\n+     */\n+    public void testNull() throws Exception {\n+        runPassTest(null); \n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/9e4867233f8a1f566421295217f4e11775663770",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a6834b3f316f1f0aa1905738250730604ba095cd",
        "message": "Fix for Bug 15288 - NPE in HTTPSender.getSocket() (when using \"https\" protocol)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255782 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_114",
        "file": [
            {
                "sha": "9a182605565c4d9a290c3e7bcff6e1d3682b0e3e",
                "filename": "src/org/apache/axis/components/net/IBMJSSESocketFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/9e4867233f8a1f566421295217f4e11775663770/src/org/apache/axis/components/net/IBMJSSESocketFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/9e4867233f8a1f566421295217f4e11775663770/src/org/apache/axis/components/net/IBMJSSESocketFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/net/IBMJSSESocketFactory.java?ref=9e4867233f8a1f566421295217f4e11775663770",
                "patch": "@@ -83,7 +83,7 @@\n  *\n  * @author Davanum Srinivas (dims@yahoo.com)\n  */\n-public class IBMJSSESocketFactory extends DefaultSocketFactory {\n+public class IBMJSSESocketFactory extends DefaultSocketFactory implements SecureSocketFactory {\n \n     /** Field keystoreType           */\n     private String keystoreType;"
            },
            {
                "sha": "b7f15ba00f990cd982d9070dce4767cc50c879d7",
                "filename": "src/org/apache/axis/components/net/JSSESocketFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/9e4867233f8a1f566421295217f4e11775663770/src/org/apache/axis/components/net/JSSESocketFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/9e4867233f8a1f566421295217f4e11775663770/src/org/apache/axis/components/net/JSSESocketFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/net/JSSESocketFactory.java?ref=9e4867233f8a1f566421295217f4e11775663770",
                "patch": "@@ -77,7 +77,7 @@\n  *\n  * @author Davanum Srinivas (dims@yahoo.com)\n  */\n-public class JSSESocketFactory extends DefaultSocketFactory {\n+public class JSSESocketFactory extends DefaultSocketFactory implements SecureSocketFactory {\n \n     /** Field sslFactory           */\n     private static final SSLSocketFactory sslFactory = (SSLSocketFactory)SSLSocketFactory.getDefault();"
            },
            {
                "sha": "1713f4be8f6b3af5ad6334713f6fda38424436c5",
                "filename": "src/org/apache/axis/components/net/SunJSSESocketFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/9e4867233f8a1f566421295217f4e11775663770/src/org/apache/axis/components/net/SunJSSESocketFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/9e4867233f8a1f566421295217f4e11775663770/src/org/apache/axis/components/net/SunJSSESocketFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/net/SunJSSESocketFactory.java?ref=9e4867233f8a1f566421295217f4e11775663770",
                "patch": "@@ -79,7 +79,7 @@\n  *\n  * @author Davanum Srinivas (dims@yahoo.com)\n  */\n-public class SunJSSESocketFactory extends DefaultSocketFactory {\n+public class SunJSSESocketFactory extends DefaultSocketFactory implements SecureSocketFactory {\n \n     /** Field keystoreType           */\n     private String keystoreType;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e81b6f2120dd572dcdd663605edb46e8df59e1fc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/60e668a70c689bd1e96e90d71bcf83f6d0172f4c",
        "message": "Fix for Bug 15288 - NPE in HTTPSender.getSocket() (when using \"https\" protocol)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248713 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_115",
        "file": [
            {
                "sha": "9a182605565c4d9a290c3e7bcff6e1d3682b0e3e",
                "filename": "src/org/apache/axis/components/net/IBMJSSESocketFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/e81b6f2120dd572dcdd663605edb46e8df59e1fc/src/org/apache/axis/components/net/IBMJSSESocketFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e81b6f2120dd572dcdd663605edb46e8df59e1fc/src/org/apache/axis/components/net/IBMJSSESocketFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/net/IBMJSSESocketFactory.java?ref=e81b6f2120dd572dcdd663605edb46e8df59e1fc",
                "patch": "@@ -83,7 +83,7 @@\n  *\n  * @author Davanum Srinivas (dims@yahoo.com)\n  */\n-public class IBMJSSESocketFactory extends DefaultSocketFactory {\n+public class IBMJSSESocketFactory extends DefaultSocketFactory implements SecureSocketFactory {\n \n     /** Field keystoreType           */\n     private String keystoreType;"
            },
            {
                "sha": "b7f15ba00f990cd982d9070dce4767cc50c879d7",
                "filename": "src/org/apache/axis/components/net/JSSESocketFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/e81b6f2120dd572dcdd663605edb46e8df59e1fc/src/org/apache/axis/components/net/JSSESocketFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e81b6f2120dd572dcdd663605edb46e8df59e1fc/src/org/apache/axis/components/net/JSSESocketFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/net/JSSESocketFactory.java?ref=e81b6f2120dd572dcdd663605edb46e8df59e1fc",
                "patch": "@@ -77,7 +77,7 @@\n  *\n  * @author Davanum Srinivas (dims@yahoo.com)\n  */\n-public class JSSESocketFactory extends DefaultSocketFactory {\n+public class JSSESocketFactory extends DefaultSocketFactory implements SecureSocketFactory {\n \n     /** Field sslFactory           */\n     private static final SSLSocketFactory sslFactory = (SSLSocketFactory)SSLSocketFactory.getDefault();"
            },
            {
                "sha": "1713f4be8f6b3af5ad6334713f6fda38424436c5",
                "filename": "src/org/apache/axis/components/net/SunJSSESocketFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/e81b6f2120dd572dcdd663605edb46e8df59e1fc/src/org/apache/axis/components/net/SunJSSESocketFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e81b6f2120dd572dcdd663605edb46e8df59e1fc/src/org/apache/axis/components/net/SunJSSESocketFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/net/SunJSSESocketFactory.java?ref=e81b6f2120dd572dcdd663605edb46e8df59e1fc",
                "patch": "@@ -79,7 +79,7 @@\n  *\n  * @author Davanum Srinivas (dims@yahoo.com)\n  */\n-public class SunJSSESocketFactory extends DefaultSocketFactory {\n+public class SunJSSESocketFactory extends DefaultSocketFactory implements SecureSocketFactory {\n \n     /** Field keystoreType           */\n     private String keystoreType;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/782b6d451fe3c9dae423f897b55d931784b7e157",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/82efd1758922c2b3baf1c6623ec51b7e4175bbb2",
        "message": "Fix bugzilla 9987.\n\n(Also tweak Emitter.java to pinpoint intermittent NPE in Java2Wsdl.)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254483 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_116",
        "file": [
            {
                "sha": "d6f985e9bcad7bd0614cc4f7798bd5c5dc075c24",
                "filename": "TODO.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/782b6d451fe3c9dae423f897b55d931784b7e157/TODO.txt",
                "raw_url": "https://github.com/apache/axis1-java/raw/782b6d451fe3c9dae423f897b55d931784b7e157/TODO.txt",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/TODO.txt?ref=782b6d451fe3c9dae423f897b55d931784b7e157",
                "patch": "@@ -49,7 +49,7 @@ _ 9882 - nice - Russell\n X 9952 - must - Glyn\n _ 9966 - nice - Tom (like 9717)\n _ 9967 - nice - Tom (like 9717 and 9966)\n-M 9987 - must - Glen\n+X 9987 - must - Glyn\n X 9992 - must - dims\n _ 10003 - post\n "
            },
            {
                "sha": "7f537af4edb0994e89eb627de76956051d2aa0d0",
                "filename": "src/org/apache/axis/description/TypeDesc.java",
                "status": "modified",
                "additions": 1,
                "deletions": 5,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/782b6d451fe3c9dae423f897b55d931784b7e157/src/org/apache/axis/description/TypeDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/782b6d451fe3c9dae423f897b55d931784b7e157/src/org/apache/axis/description/TypeDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/TypeDesc.java?ref=782b6d451fe3c9dae423f897b55d931784b7e157",
                "patch": "@@ -180,11 +180,7 @@ public void setFields(FieldDesc [] newFields)\n     public void addFieldDesc(FieldDesc field)\n     {\n         if (field == null) {\n-            //XXX TypeDesc is published and should not throw NPEs\n-            // An exception has been coded in the source code checks\n-            // in test.utils.TestSrcContent which should be removed\n-            // when this NPE is removed.\n-            throw new NullPointerException(\n+            throw new IllegalArgumentException(\n                     JavaUtils.getMessage(\"nullFieldDesc\"));\n         }\n         "
            },
            {
                "sha": "8ba9d08315b043faae87672ff408a8910521e87c",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/782b6d451fe3c9dae423f897b55d931784b7e157/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/782b6d451fe3c9dae423f897b55d931784b7e157/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=782b6d451fe3c9dae423f897b55d931784b7e157",
                "patch": "@@ -584,7 +584,9 @@ private void writePortType(Definition def, Binding binding)\n         portType.setUndefined(false);\n \n         // PortType name is the name of the class being processed\n-        portType.setQName(new QName(intfNS, getPortTypeName()));\n+        // Split statement to isolate NPE\n+        QName tempqn = new QName(intfNS, getPortTypeName());\n+        portType.setQName(tempqn);\n \n         ArrayList operations = serviceDesc.getOperations();\n         for (Iterator i = operations.iterator(); i.hasNext();) {"
            },
            {
                "sha": "738036331c06f72fafd3f893c5b58c9fbc5a45e3",
                "filename": "test/utils/TestSrcContent.java",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/782b6d451fe3c9dae423f897b55d931784b7e157/test/utils/TestSrcContent.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/782b6d451fe3c9dae423f897b55d931784b7e157/test/utils/TestSrcContent.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/utils/TestSrcContent.java?ref=782b6d451fe3c9dae423f897b55d931784b7e157",
                "patch": "@@ -204,11 +204,9 @@ boolean noMatch(String name, String content)\n                                        false),\n \n             // Verify that we don't explicitly create NPEs.\n-            // NPE in TypeDesc needs removing.\n \n             new FileNameContentPattern(\".+([\\\\\\\\/])\"\n                                        + \"java\\\\1src\\\\1org\\\\1apache\\\\1axis\\\\1\"\n-                                       + \"(?!description\\\\1TypeDesc\\\\.java)\"\n                                        + \"([a-zA-Z0-9_]+\\\\1)*\"\n                                        + \"[^\\\\\\\\/]+\\\\.java\",\n                                        \"new[ \\\\t]+\""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/6ba5866f8f654ab334d1f789cd5c963440655b62",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/109b14bde4ff27d4d27d30137893c6fd9519d9cb",
        "message": "Fix bugzilla 9987.\n\n(Also tweak Emitter.java to pinpoint intermittent NPE in Java2Wsdl.)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247410 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_117",
        "file": [
            {
                "sha": "d6f985e9bcad7bd0614cc4f7798bd5c5dc075c24",
                "filename": "TODO.txt",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/6ba5866f8f654ab334d1f789cd5c963440655b62/TODO.txt",
                "raw_url": "https://github.com/apache/axis1-java/raw/6ba5866f8f654ab334d1f789cd5c963440655b62/TODO.txt",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/TODO.txt?ref=6ba5866f8f654ab334d1f789cd5c963440655b62",
                "patch": "@@ -49,7 +49,7 @@ _ 9882 - nice - Russell\n X 9952 - must - Glyn\n _ 9966 - nice - Tom (like 9717)\n _ 9967 - nice - Tom (like 9717 and 9966)\n-M 9987 - must - Glen\n+X 9987 - must - Glyn\n X 9992 - must - dims\n _ 10003 - post\n "
            },
            {
                "sha": "7f537af4edb0994e89eb627de76956051d2aa0d0",
                "filename": "src/org/apache/axis/description/TypeDesc.java",
                "status": "modified",
                "additions": 1,
                "deletions": 5,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/6ba5866f8f654ab334d1f789cd5c963440655b62/src/org/apache/axis/description/TypeDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6ba5866f8f654ab334d1f789cd5c963440655b62/src/org/apache/axis/description/TypeDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/TypeDesc.java?ref=6ba5866f8f654ab334d1f789cd5c963440655b62",
                "patch": "@@ -180,11 +180,7 @@ public void setFields(FieldDesc [] newFields)\n     public void addFieldDesc(FieldDesc field)\n     {\n         if (field == null) {\n-            //XXX TypeDesc is published and should not throw NPEs\n-            // An exception has been coded in the source code checks\n-            // in test.utils.TestSrcContent which should be removed\n-            // when this NPE is removed.\n-            throw new NullPointerException(\n+            throw new IllegalArgumentException(\n                     JavaUtils.getMessage(\"nullFieldDesc\"));\n         }\n         "
            },
            {
                "sha": "8ba9d08315b043faae87672ff408a8910521e87c",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/6ba5866f8f654ab334d1f789cd5c963440655b62/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6ba5866f8f654ab334d1f789cd5c963440655b62/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=6ba5866f8f654ab334d1f789cd5c963440655b62",
                "patch": "@@ -584,7 +584,9 @@ private void writePortType(Definition def, Binding binding)\n         portType.setUndefined(false);\n \n         // PortType name is the name of the class being processed\n-        portType.setQName(new QName(intfNS, getPortTypeName()));\n+        // Split statement to isolate NPE\n+        QName tempqn = new QName(intfNS, getPortTypeName());\n+        portType.setQName(tempqn);\n \n         ArrayList operations = serviceDesc.getOperations();\n         for (Iterator i = operations.iterator(); i.hasNext();) {"
            },
            {
                "sha": "738036331c06f72fafd3f893c5b58c9fbc5a45e3",
                "filename": "test/utils/TestSrcContent.java",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/6ba5866f8f654ab334d1f789cd5c963440655b62/test/utils/TestSrcContent.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6ba5866f8f654ab334d1f789cd5c963440655b62/test/utils/TestSrcContent.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/utils/TestSrcContent.java?ref=6ba5866f8f654ab334d1f789cd5c963440655b62",
                "patch": "@@ -204,11 +204,9 @@ boolean noMatch(String name, String content)\n                                        false),\n \n             // Verify that we don't explicitly create NPEs.\n-            // NPE in TypeDesc needs removing.\n \n             new FileNameContentPattern(\".+([\\\\\\\\/])\"\n                                        + \"java\\\\1src\\\\1org\\\\1apache\\\\1axis\\\\1\"\n-                                       + \"(?!description\\\\1TypeDesc\\\\.java)\"\n                                        + \"([a-zA-Z0-9_]+\\\\1)*\"\n                                        + \"[^\\\\\\\\/]+\\\\.java\",\n                                        \"new[ \\\\t]+\""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/25374360a59b146fd32912917ea2f0b532665a5a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b740a231cc91d639999f0e3699065a5c3b35a78a",
        "message": "- Fix for Bug 10091 Message with 3 headers causes NPE\n- Testcase for making sure this does not happen again :-)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254388 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_118",
        "file": [
            {
                "sha": "623fba3e157655f13d4059d6a5156b0feb97976c",
                "filename": "src/org/apache/axis/message/HeaderBuilder.java",
                "status": "modified",
                "additions": 16,
                "deletions": 32,
                "changes": 48,
                "blob_url": "https://github.com/apache/axis1-java/blob/25374360a59b146fd32912917ea2f0b532665a5a/src/org/apache/axis/message/HeaderBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/25374360a59b146fd32912917ea2f0b532665a5a/src/org/apache/axis/message/HeaderBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/HeaderBuilder.java?ref=25374360a59b146fd32912917ea2f0b532665a5a",
                "patch": "@@ -2,31 +2,31 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001 The Apache Software Foundation.  All rights \n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -56,7 +56,7 @@\n package org.apache.axis.message;\n \n /**\n- * \n+ *\n  * @author Glen Daniels (gdaniels@allaire.com)\n  */\n \n@@ -66,30 +66,26 @@\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n \n-public class HeaderBuilder extends SOAPHandler\n-{\n+public class HeaderBuilder extends SOAPHandler {\n     protected static Log log =\n-        LogFactory.getLog(HeaderBuilder.class.getName());\n+            LogFactory.getLog(HeaderBuilder.class.getName());\n \n-    private SOAPHeaderElement header;\n     private SOAPEnvelope envelope;\n-    \n-    HeaderBuilder(SOAPEnvelope envelope)\n-    {\n+\n+    HeaderBuilder(SOAPEnvelope envelope) {\n         this.envelope = envelope;\n     }\n-    \n+\n     public void startElement(String namespace, String localName,\n                              String qName, Attributes attributes,\n                              DeserializationContext context)\n-        throws SAXException\n-    {\n+            throws SAXException {\n         if (!context.isDoneParsing()) {\n             if (myElement == null) {\n                 myElement = new SOAPHeader(namespace, localName, qName,\n-                                           attributes, context,\n-                                           envelope.getSOAPConstants());\n-                envelope.setHeader((SOAPHeader)myElement);\n+                        attributes, context,\n+                        envelope.getSOAPConstants());\n+                envelope.setHeader((SOAPHeader) myElement);\n             }\n             context.pushNewElement(myElement);\n         }\n@@ -100,20 +96,8 @@ public SOAPHandler onStartChild(String namespace,\n                                     String prefix,\n                                     Attributes attributes,\n                                     DeserializationContext context)\n-        throws SAXException\n-    {\n-        header = new SOAPHeaderElement(namespace, localName, prefix,\n-                                       attributes, context);\n-        \n-        SOAPHandler handler = new SOAPHandler();\n-        handler.myElement = header;\n-\n+            throws SAXException {\n+        HeaderElementBuilder handler = new HeaderElementBuilder((SOAPHeader) myElement);\n         return handler;\n     }\n-    \n-    public void onEndChild(String namespace, String localName,\n-                           DeserializationContext context)\n-    {\n-        envelope.addHeader(header);\n-    }\n }"
            },
            {
                "sha": "e80fa2f23d2cd1905c7fd7fb9da47f93c6e5de13",
                "filename": "src/org/apache/axis/message/HeaderElementBuilder.java",
                "status": "added",
                "additions": 93,
                "deletions": 0,
                "changes": 93,
                "blob_url": "https://github.com/apache/axis1-java/blob/25374360a59b146fd32912917ea2f0b532665a5a/src/org/apache/axis/message/HeaderElementBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/25374360a59b146fd32912917ea2f0b532665a5a/src/org/apache/axis/message/HeaderElementBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/HeaderElementBuilder.java?ref=25374360a59b146fd32912917ea2f0b532665a5a",
                "patch": "@@ -0,0 +1,93 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n+ *    not be used to endorse or promote products derived from this\n+ *    software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    nor may \"Apache\" appear in their name, without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.axis.message;\n+\n+/**\n+ *\n+ * @author Davanum Srinivas (dims@yahoo.com)\n+ */\n+\n+import org.apache.axis.encoding.DeserializationContext;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+\n+public class HeaderElementBuilder extends SOAPHandler {\n+    protected static Log log =\n+            LogFactory.getLog(HeaderElementBuilder.class.getName());\n+\n+    private SOAPHeader header;\n+\n+    HeaderElementBuilder(SOAPHeader header) {\n+        this.header = header;\n+    }\n+\n+    public void startElement(String namespace, String localName,\n+                             String qName, Attributes attributes,\n+                             DeserializationContext context)\n+            throws SAXException {\n+        if (!context.isDoneParsing()) {\n+            if (myElement == null) {\n+                myElement = new SOAPHeaderElement(namespace, localName, \"\",\n+                        attributes, context);\n+                header.addHeader((SOAPHeaderElement) myElement);\n+            }\n+            context.pushNewElement(myElement);\n+        }\n+    }\n+}\n+"
            },
            {
                "sha": "36b0406759e2203c108ed52abc671491269c6e21",
                "filename": "test/encoding/TestDOM.java",
                "status": "modified",
                "additions": 32,
                "deletions": 1,
                "changes": 33,
                "blob_url": "https://github.com/apache/axis1-java/blob/25374360a59b146fd32912917ea2f0b532665a5a/test/encoding/TestDOM.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/25374360a59b146fd32912917ea2f0b532665a5a/test/encoding/TestDOM.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/TestDOM.java?ref=25374360a59b146fd32912917ea2f0b532665a5a",
                "patch": "@@ -8,6 +8,7 @@\n import org.apache.axis.MessageContext;\n import org.apache.axis.message.SOAPBodyElement;\n import org.apache.axis.message.SOAPEnvelope;\n+import org.apache.axis.message.SOAPHeaderElement;\n import org.apache.axis.server.AxisServer;\n import org.apache.axis.utils.XMLUtils;\n \n@@ -53,7 +54,7 @@ public void testDOM() throws Exception {\n        AxisEngine engine = new AxisServer();\n        engine.init();\n        MessageContext msgContext = new MessageContext(engine);\n-        msgContext.setHighFidelity(true);\n+       msgContext.setHighFidelity(true);\n        Message message = new Message(request);\n        message.setMessageContext(msgContext);\n \n@@ -65,6 +66,35 @@ public void testDOM() throws Exception {\n        assertEquals(\"Request is not the same as the result.\", request, result);\n     }\n \n+    public void testHeaders() throws Exception {\n+       AxisEngine engine = new AxisServer();\n+       engine.init();\n+       MessageContext msgContext = new MessageContext(engine);\n+       msgContext.setHighFidelity(true);\n+       Message message = new Message(request);\n+       message.setMessageContext(msgContext);\n+\n+       // Now completely round trip it\n+       SOAPEnvelope envelope = message.getSOAPEnvelope();\n+       envelope.addHeader(new SOAPHeaderElement(\"foo1\", \"foo1\"));\n+       envelope.addHeader(new SOAPHeaderElement(\"foo2\", \"foo2\"));\n+       envelope.addHeader(new SOAPHeaderElement(\"foo3\", \"foo3\"));\n+       String result = message.getSOAPPartAsString();\n+\n+       assertTrue(result.indexOf(\"foo1\")!=-1);\n+       assertTrue(result.indexOf(\"foo2\")!=-1);\n+       assertTrue(result.indexOf(\"foo3\")!=-1);\n+\n+       Message message2 = new Message(result);\n+       message2.setMessageContext(msgContext);\n+       SOAPEnvelope envelope2 = message2.getSOAPEnvelope();\n+       String result2 = message2.getSOAPPartAsString();\n+\n+       assertTrue(result2.indexOf(\"foo1\")!=-1);\n+       assertTrue(result2.indexOf(\"foo2\")!=-1);\n+       assertTrue(result2.indexOf(\"foo3\")!=-1);\n+    }\n+\n     public void testEmptyNode() throws Exception\n     {\n         SOAPBodyElement body = new SOAPBodyElement(XMLUtils.newDocument().createElement(\"tmp\"));\n@@ -82,6 +112,7 @@ public void testNodeWithAttribute() throws Exception\n     public static void main(String [] args) throws Exception\n     {\n         TestDOM tester = new TestDOM(\"TestDOM\");\n+        tester.testHeaders();\n         tester.testNodeWithAttribute();\n         tester.testEmptyNode();\n         tester.testDOM();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e0da5abc551665c45ae85fd9b3be37092675e4ff",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/60d5c1a3e3fb9217250557658456c0c5fa8d3f0c",
        "message": "- Fix for Bug 10091 Message with 3 headers causes NPE\n- Testcase for making sure this does not happen again :-)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247315 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_119",
        "file": [
            {
                "sha": "623fba3e157655f13d4059d6a5156b0feb97976c",
                "filename": "src/org/apache/axis/message/HeaderBuilder.java",
                "status": "modified",
                "additions": 16,
                "deletions": 32,
                "changes": 48,
                "blob_url": "https://github.com/apache/axis1-java/blob/e0da5abc551665c45ae85fd9b3be37092675e4ff/src/org/apache/axis/message/HeaderBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e0da5abc551665c45ae85fd9b3be37092675e4ff/src/org/apache/axis/message/HeaderBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/HeaderBuilder.java?ref=e0da5abc551665c45ae85fd9b3be37092675e4ff",
                "patch": "@@ -2,31 +2,31 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 2001 The Apache Software Foundation.  All rights \n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -56,7 +56,7 @@\n package org.apache.axis.message;\n \n /**\n- * \n+ *\n  * @author Glen Daniels (gdaniels@allaire.com)\n  */\n \n@@ -66,30 +66,26 @@\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n \n-public class HeaderBuilder extends SOAPHandler\n-{\n+public class HeaderBuilder extends SOAPHandler {\n     protected static Log log =\n-        LogFactory.getLog(HeaderBuilder.class.getName());\n+            LogFactory.getLog(HeaderBuilder.class.getName());\n \n-    private SOAPHeaderElement header;\n     private SOAPEnvelope envelope;\n-    \n-    HeaderBuilder(SOAPEnvelope envelope)\n-    {\n+\n+    HeaderBuilder(SOAPEnvelope envelope) {\n         this.envelope = envelope;\n     }\n-    \n+\n     public void startElement(String namespace, String localName,\n                              String qName, Attributes attributes,\n                              DeserializationContext context)\n-        throws SAXException\n-    {\n+            throws SAXException {\n         if (!context.isDoneParsing()) {\n             if (myElement == null) {\n                 myElement = new SOAPHeader(namespace, localName, qName,\n-                                           attributes, context,\n-                                           envelope.getSOAPConstants());\n-                envelope.setHeader((SOAPHeader)myElement);\n+                        attributes, context,\n+                        envelope.getSOAPConstants());\n+                envelope.setHeader((SOAPHeader) myElement);\n             }\n             context.pushNewElement(myElement);\n         }\n@@ -100,20 +96,8 @@ public SOAPHandler onStartChild(String namespace,\n                                     String prefix,\n                                     Attributes attributes,\n                                     DeserializationContext context)\n-        throws SAXException\n-    {\n-        header = new SOAPHeaderElement(namespace, localName, prefix,\n-                                       attributes, context);\n-        \n-        SOAPHandler handler = new SOAPHandler();\n-        handler.myElement = header;\n-\n+            throws SAXException {\n+        HeaderElementBuilder handler = new HeaderElementBuilder((SOAPHeader) myElement);\n         return handler;\n     }\n-    \n-    public void onEndChild(String namespace, String localName,\n-                           DeserializationContext context)\n-    {\n-        envelope.addHeader(header);\n-    }\n }"
            },
            {
                "sha": "e80fa2f23d2cd1905c7fd7fb9da47f93c6e5de13",
                "filename": "src/org/apache/axis/message/HeaderElementBuilder.java",
                "status": "added",
                "additions": 93,
                "deletions": 0,
                "changes": 93,
                "blob_url": "https://github.com/apache/axis1-java/blob/e0da5abc551665c45ae85fd9b3be37092675e4ff/src/org/apache/axis/message/HeaderElementBuilder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e0da5abc551665c45ae85fd9b3be37092675e4ff/src/org/apache/axis/message/HeaderElementBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/HeaderElementBuilder.java?ref=e0da5abc551665c45ae85fd9b3be37092675e4ff",
                "patch": "@@ -0,0 +1,93 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n+ *    not be used to endorse or promote products derived from this\n+ *    software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    nor may \"Apache\" appear in their name, without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.axis.message;\n+\n+/**\n+ *\n+ * @author Davanum Srinivas (dims@yahoo.com)\n+ */\n+\n+import org.apache.axis.encoding.DeserializationContext;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+\n+public class HeaderElementBuilder extends SOAPHandler {\n+    protected static Log log =\n+            LogFactory.getLog(HeaderElementBuilder.class.getName());\n+\n+    private SOAPHeader header;\n+\n+    HeaderElementBuilder(SOAPHeader header) {\n+        this.header = header;\n+    }\n+\n+    public void startElement(String namespace, String localName,\n+                             String qName, Attributes attributes,\n+                             DeserializationContext context)\n+            throws SAXException {\n+        if (!context.isDoneParsing()) {\n+            if (myElement == null) {\n+                myElement = new SOAPHeaderElement(namespace, localName, \"\",\n+                        attributes, context);\n+                header.addHeader((SOAPHeaderElement) myElement);\n+            }\n+            context.pushNewElement(myElement);\n+        }\n+    }\n+}\n+"
            },
            {
                "sha": "36b0406759e2203c108ed52abc671491269c6e21",
                "filename": "test/encoding/TestDOM.java",
                "status": "modified",
                "additions": 32,
                "deletions": 1,
                "changes": 33,
                "blob_url": "https://github.com/apache/axis1-java/blob/e0da5abc551665c45ae85fd9b3be37092675e4ff/test/encoding/TestDOM.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e0da5abc551665c45ae85fd9b3be37092675e4ff/test/encoding/TestDOM.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/TestDOM.java?ref=e0da5abc551665c45ae85fd9b3be37092675e4ff",
                "patch": "@@ -8,6 +8,7 @@\n import org.apache.axis.MessageContext;\n import org.apache.axis.message.SOAPBodyElement;\n import org.apache.axis.message.SOAPEnvelope;\n+import org.apache.axis.message.SOAPHeaderElement;\n import org.apache.axis.server.AxisServer;\n import org.apache.axis.utils.XMLUtils;\n \n@@ -53,7 +54,7 @@ public void testDOM() throws Exception {\n        AxisEngine engine = new AxisServer();\n        engine.init();\n        MessageContext msgContext = new MessageContext(engine);\n-        msgContext.setHighFidelity(true);\n+       msgContext.setHighFidelity(true);\n        Message message = new Message(request);\n        message.setMessageContext(msgContext);\n \n@@ -65,6 +66,35 @@ public void testDOM() throws Exception {\n        assertEquals(\"Request is not the same as the result.\", request, result);\n     }\n \n+    public void testHeaders() throws Exception {\n+       AxisEngine engine = new AxisServer();\n+       engine.init();\n+       MessageContext msgContext = new MessageContext(engine);\n+       msgContext.setHighFidelity(true);\n+       Message message = new Message(request);\n+       message.setMessageContext(msgContext);\n+\n+       // Now completely round trip it\n+       SOAPEnvelope envelope = message.getSOAPEnvelope();\n+       envelope.addHeader(new SOAPHeaderElement(\"foo1\", \"foo1\"));\n+       envelope.addHeader(new SOAPHeaderElement(\"foo2\", \"foo2\"));\n+       envelope.addHeader(new SOAPHeaderElement(\"foo3\", \"foo3\"));\n+       String result = message.getSOAPPartAsString();\n+\n+       assertTrue(result.indexOf(\"foo1\")!=-1);\n+       assertTrue(result.indexOf(\"foo2\")!=-1);\n+       assertTrue(result.indexOf(\"foo3\")!=-1);\n+\n+       Message message2 = new Message(result);\n+       message2.setMessageContext(msgContext);\n+       SOAPEnvelope envelope2 = message2.getSOAPEnvelope();\n+       String result2 = message2.getSOAPPartAsString();\n+\n+       assertTrue(result2.indexOf(\"foo1\")!=-1);\n+       assertTrue(result2.indexOf(\"foo2\")!=-1);\n+       assertTrue(result2.indexOf(\"foo3\")!=-1);\n+    }\n+\n     public void testEmptyNode() throws Exception\n     {\n         SOAPBodyElement body = new SOAPBodyElement(XMLUtils.newDocument().createElement(\"tmp\"));\n@@ -82,6 +112,7 @@ public void testNodeWithAttribute() throws Exception\n     public static void main(String [] args) throws Exception\n     {\n         TestDOM tester = new TestDOM(\"TestDOM\");\n+        tester.testHeaders();\n         tester.testNodeWithAttribute();\n         tester.testEmptyNode();\n         tester.testDOM();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0721cd2e14100cbfd4c7dafab7aa03f554110be4",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b15a908001570d480f4d77da33e11e5fdb24199f",
        "message": "Fix NPE in weird cases where a SerializationContext doesn't have an\nassociated MessageContext (testing, mostly).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253857 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_120",
        "file": [
            {
                "sha": "daa12845f6df9aeee5a64bfb964f33a38be8bd95",
                "filename": "src/org/apache/axis/message/MessageElement.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/0721cd2e14100cbfd4c7dafab7aa03f554110be4/src/org/apache/axis/message/MessageElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0721cd2e14100cbfd4c7dafab7aa03f554110be4/src/org/apache/axis/message/MessageElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/MessageElement.java?ref=0721cd2e14100cbfd4c7dafab7aa03f554110be4",
                "patch": "@@ -620,8 +620,10 @@ public final void output(SerializationContext context) throws Exception\n          * whatever encoding style is in scope....\n          */ \n         if (encodingStyle != null) {\n-            SOAPConstants soapConstants = context.getMessageContext().\n-                                                        getSOAPConstants();\n+            MessageContext mc = context.getMessageContext();\n+            SOAPConstants soapConstants = (mc != null) ?\n+                                            mc.getSOAPConstants() :\n+                                            SOAPConstants.SOAP11_CONSTANTS;\n             if (parent == null) {\n                 // don't emit an encoding style if its \"\" (literal)\n                 if (!encodingStyle.equals(\"\")) { "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0895bf0eac090e22dd7f6e0de0d3e4b2c020f098",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b67d0b30cc0ccded69b6407c6ed46b6ef5573706",
        "message": "Fix NPE in weird cases where a SerializationContext doesn't have an\nassociated MessageContext (testing, mostly).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246784 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_121",
        "file": [
            {
                "sha": "daa12845f6df9aeee5a64bfb964f33a38be8bd95",
                "filename": "src/org/apache/axis/message/MessageElement.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/0895bf0eac090e22dd7f6e0de0d3e4b2c020f098/src/org/apache/axis/message/MessageElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0895bf0eac090e22dd7f6e0de0d3e4b2c020f098/src/org/apache/axis/message/MessageElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/MessageElement.java?ref=0895bf0eac090e22dd7f6e0de0d3e4b2c020f098",
                "patch": "@@ -620,8 +620,10 @@ public final void output(SerializationContext context) throws Exception\n          * whatever encoding style is in scope....\n          */ \n         if (encodingStyle != null) {\n-            SOAPConstants soapConstants = context.getMessageContext().\n-                                                        getSOAPConstants();\n+            MessageContext mc = context.getMessageContext();\n+            SOAPConstants soapConstants = (mc != null) ?\n+                                            mc.getSOAPConstants() :\n+                                            SOAPConstants.SOAP11_CONSTANTS;\n             if (parent == null) {\n                 // don't emit an encoding style if its \"\" (literal)\n                 if (!encodingStyle.equals(\"\")) { "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/bf6dc8c25ede297ba221dba4601dcfcb0d9e296d",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/7cbbc8dc182ce3f901edcb783f0592bc9bf4cd33",
        "message": "Check for NPE\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253799 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_122",
        "file": [
            {
                "sha": "7bb31a180dd189f02cda913d8944f9b87a931189",
                "filename": "src/org/apache/axis/transport/http/HTTPSender.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/bf6dc8c25ede297ba221dba4601dcfcb0d9e296d/src/org/apache/axis/transport/http/HTTPSender.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/bf6dc8c25ede297ba221dba4601dcfcb0d9e296d/src/org/apache/axis/transport/http/HTTPSender.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/HTTPSender.java?ref=bf6dc8c25ede297ba221dba4601dcfcb0d9e296d",
                "patch": "@@ -461,7 +461,7 @@ else if ( b == '\\r' )\n \n             if (returnCode > 199 && returnCode < 300) {\n                 // SOAP return is OK - so fall through\n-            } else if (!contentType.equals(\"text/html\") &&\n+            } else if (contentType!=null && !contentType.equals(\"text/html\") &&\n                        (returnCode > 499 && returnCode < 600) ) {\n                 // SOAP Fault should be in here - so fall through\n             } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/07a3200e0124b40464c6386a19283b73ec25d06e",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/5413c58bd0d85c15dcb581b616a4b16357c9ddab",
        "message": "Check for NPE\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246726 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_123",
        "file": [
            {
                "sha": "7bb31a180dd189f02cda913d8944f9b87a931189",
                "filename": "src/org/apache/axis/transport/http/HTTPSender.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/07a3200e0124b40464c6386a19283b73ec25d06e/src/org/apache/axis/transport/http/HTTPSender.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/07a3200e0124b40464c6386a19283b73ec25d06e/src/org/apache/axis/transport/http/HTTPSender.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/HTTPSender.java?ref=07a3200e0124b40464c6386a19283b73ec25d06e",
                "patch": "@@ -461,7 +461,7 @@ else if ( b == '\\r' )\n \n             if (returnCode > 199 && returnCode < 300) {\n                 // SOAP return is OK - so fall through\n-            } else if (!contentType.equals(\"text/html\") &&\n+            } else if (contentType!=null && !contentType.equals(\"text/html\") &&\n                        (returnCode > 499 && returnCode < 600) ) {\n                 // SOAP Fault should be in here - so fall through\n             } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f7f4d4bfb60d561201fef1c19707cdb8bdd15a3b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0fa1e09b9e2815c0d5b8bb425da4a43b6fc0f4b3",
        "message": "Following changes are made:\n  * Fixed EchoService to comply with Russell's meta data change.\n  * Fixed JavaStubWriter to remove NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253606 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_124",
        "file": [
            {
                "sha": "8d79c2cf599c55c7451c7c405d516b75e82eed56",
                "filename": "samples/echo/EchoService.java",
                "status": "modified",
                "additions": 21,
                "deletions": 21,
                "changes": 42,
                "blob_url": "https://github.com/apache/axis1-java/blob/f7f4d4bfb60d561201fef1c19707cdb8bdd15a3b/samples/echo/EchoService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f7f4d4bfb60d561201fef1c19707cdb8bdd15a3b/samples/echo/EchoService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/EchoService.java?ref=f7f4d4bfb60d561201fef1c19707cdb8bdd15a3b",
                "patch": "@@ -109,7 +109,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStringArray\",\n                  new String[] {\n                      \"return\",\n@@ -118,7 +118,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoInteger\",\n                  new String[] {\n                      \"return\",\n@@ -127,7 +127,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoIntegerArray\",\n                  new String[] {\n                      \"return\",\n@@ -136,7 +136,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoFloat\",\n                  new String[] {\n                      \"return\",\n@@ -145,7 +145,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoFloatArray\",\n                  new String[] {\n                      \"return\",\n@@ -154,7 +154,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStruct\",\n                  new String[] {\n                      \"return\",\n@@ -163,7 +163,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStructArray\",\n                  new String[] {\n                      \"return\",\n@@ -172,11 +172,11 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoVoid\",\n                  new String[] {\n                  },\n-                 new ParameterMode[] {});\n+                 new ParameterMode[] {}, null, null, null);\n         skel.add(\"echoBase64\",\n                  new String[] {\n                      \"return\",\n@@ -185,7 +185,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoHexBinary\",\n                  new String[] {\n                      \"return\",\n@@ -194,7 +194,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoDate\",\n                  new String[] {\n                      \"return\",\n@@ -203,7 +203,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoDecimal\",\n                  new String[] {\n                      \"return\",\n@@ -212,7 +212,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoBoolean\",\n                  new String[] {\n                      \"return\",\n@@ -221,7 +221,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoMap\",\n                  new String[] {\n                      \"return\",\n@@ -230,7 +230,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoMapArray\",\n                  new String[] {\n                      \"return\",\n@@ -239,7 +239,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStructAsSimpleTypes\",\n                  new String[] {\n                  null,\n@@ -254,7 +254,7 @@ protected static void init() {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_OUT,\n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoSimpleTypesAsStruct\",\n                  new String[] {\n                  \"return\",\n@@ -267,7 +267,7 @@ protected static void init() {\n                      ParameterMode.PARAM_MODE_IN,                     \n                      ParameterMode.PARAM_MODE_IN,                     \n                      ParameterMode.PARAM_MODE_IN,                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echo2DStringArray\",\n                  new String[] {\n                  \"return\",\n@@ -276,7 +276,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoNestedStruct\",\n                  new String[] {\n                  \"return\",\n@@ -285,7 +285,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoNestedArray\",\n                  new String[] {\n                  \"return\",\n@@ -294,7 +294,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n     }\n     \n     /**"
            },
            {
                "sha": "8039e078fa4e6409d2520ef755c8f24a7662e09f",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/f7f4d4bfb60d561201fef1c19707cdb8bdd15a3b/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/f7f4d4bfb60d561201fef1c19707cdb8bdd15a3b/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java?ref=f7f4d4bfb60d561201fef1c19707cdb8bdd15a3b",
                "patch": "@@ -471,7 +471,10 @@ private void writeOperation(\n             QName qn = p.type.getQName();\n             if (p.type instanceof DefinedElement) {\n                 Node node = symbolTable.getTypeEntry(p.type.getQName(), true).getNode();\n-                qn = Utils.getNodeTypeRefQName(node, \"type\");\n+                QName qn2 = Utils.getNodeTypeRefQName(node, \"type\");\n+                if (qn2 != null) {\n+                    qn = qn2;\n+                }\n             }\n \n             String typeString = \"new javax.xml.rpc.namespace.QName(\\\"\" +\n@@ -501,8 +504,11 @@ else if (p.mode == Parameter.INOUT) {\n             QName qn = parms.returnType.getQName();\n             if (parms.returnType instanceof DefinedElement) {\n                 Node node = symbolTable.getTypeEntry(parms.returnType.getQName(), true).getNode();\n-                qn = Utils.getNodeTypeRefQName(node, \"type\");\n-            }\n+                QName qn2 = Utils.getNodeTypeRefQName(node, \"type\");\n+                if (qn2 != null) {\n+                    qn = qn2;\n+                }\n+           }\n             \n             String outputType = \"new javax.xml.rpc.namespace.QName(\\\"\" +\n                 qn.getNamespaceURI() + \"\\\", \\\"\" +"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/6b766ecb14f4054b876dd43735d98cffa669565c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/3c4f9bff83a23514494cbfd223fdd152c144d690",
        "message": "Following changes are made:\n  * Fixed EchoService to comply with Russell's meta data change.\n  * Fixed JavaStubWriter to remove NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246533 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_125",
        "file": [
            {
                "sha": "8d79c2cf599c55c7451c7c405d516b75e82eed56",
                "filename": "samples/echo/EchoService.java",
                "status": "modified",
                "additions": 21,
                "deletions": 21,
                "changes": 42,
                "blob_url": "https://github.com/apache/axis1-java/blob/6b766ecb14f4054b876dd43735d98cffa669565c/samples/echo/EchoService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6b766ecb14f4054b876dd43735d98cffa669565c/samples/echo/EchoService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/EchoService.java?ref=6b766ecb14f4054b876dd43735d98cffa669565c",
                "patch": "@@ -109,7 +109,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStringArray\",\n                  new String[] {\n                      \"return\",\n@@ -118,7 +118,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoInteger\",\n                  new String[] {\n                      \"return\",\n@@ -127,7 +127,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoIntegerArray\",\n                  new String[] {\n                      \"return\",\n@@ -136,7 +136,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoFloat\",\n                  new String[] {\n                      \"return\",\n@@ -145,7 +145,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoFloatArray\",\n                  new String[] {\n                      \"return\",\n@@ -154,7 +154,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStruct\",\n                  new String[] {\n                      \"return\",\n@@ -163,7 +163,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStructArray\",\n                  new String[] {\n                      \"return\",\n@@ -172,11 +172,11 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoVoid\",\n                  new String[] {\n                  },\n-                 new ParameterMode[] {});\n+                 new ParameterMode[] {}, null, null, null);\n         skel.add(\"echoBase64\",\n                  new String[] {\n                      \"return\",\n@@ -185,7 +185,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoHexBinary\",\n                  new String[] {\n                      \"return\",\n@@ -194,7 +194,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoDate\",\n                  new String[] {\n                      \"return\",\n@@ -203,7 +203,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoDecimal\",\n                  new String[] {\n                      \"return\",\n@@ -212,7 +212,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoBoolean\",\n                  new String[] {\n                      \"return\",\n@@ -221,7 +221,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoMap\",\n                  new String[] {\n                      \"return\",\n@@ -230,7 +230,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoMapArray\",\n                  new String[] {\n                      \"return\",\n@@ -239,7 +239,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoStructAsSimpleTypes\",\n                  new String[] {\n                  null,\n@@ -254,7 +254,7 @@ protected static void init() {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_OUT,\n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoSimpleTypesAsStruct\",\n                  new String[] {\n                  \"return\",\n@@ -267,7 +267,7 @@ protected static void init() {\n                      ParameterMode.PARAM_MODE_IN,                     \n                      ParameterMode.PARAM_MODE_IN,                     \n                      ParameterMode.PARAM_MODE_IN,                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echo2DStringArray\",\n                  new String[] {\n                  \"return\",\n@@ -276,7 +276,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoNestedStruct\",\n                  new String[] {\n                  \"return\",\n@@ -285,7 +285,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n         skel.add(\"echoNestedArray\",\n                  new String[] {\n                  \"return\",\n@@ -294,7 +294,7 @@ protected static void init() {\n                  new ParameterMode[] {\n                      ParameterMode.PARAM_MODE_OUT,\n                      ParameterMode.PARAM_MODE_IN                     \n-                 });\n+                 }, null, null, null);\n     }\n     \n     /**"
            },
            {
                "sha": "8039e078fa4e6409d2520ef755c8f24a7662e09f",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/6b766ecb14f4054b876dd43735d98cffa669565c/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/6b766ecb14f4054b876dd43735d98cffa669565c/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java?ref=6b766ecb14f4054b876dd43735d98cffa669565c",
                "patch": "@@ -471,7 +471,10 @@ private void writeOperation(\n             QName qn = p.type.getQName();\n             if (p.type instanceof DefinedElement) {\n                 Node node = symbolTable.getTypeEntry(p.type.getQName(), true).getNode();\n-                qn = Utils.getNodeTypeRefQName(node, \"type\");\n+                QName qn2 = Utils.getNodeTypeRefQName(node, \"type\");\n+                if (qn2 != null) {\n+                    qn = qn2;\n+                }\n             }\n \n             String typeString = \"new javax.xml.rpc.namespace.QName(\\\"\" +\n@@ -501,8 +504,11 @@ else if (p.mode == Parameter.INOUT) {\n             QName qn = parms.returnType.getQName();\n             if (parms.returnType instanceof DefinedElement) {\n                 Node node = symbolTable.getTypeEntry(parms.returnType.getQName(), true).getNode();\n-                qn = Utils.getNodeTypeRefQName(node, \"type\");\n-            }\n+                QName qn2 = Utils.getNodeTypeRefQName(node, \"type\");\n+                if (qn2 != null) {\n+                    qn = qn2;\n+                }\n+           }\n             \n             String outputType = \"new javax.xml.rpc.namespace.QName(\\\"\" +\n                 qn.getNamespaceURI() + \"\\\", \\\"\" +"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/3a4360e9bba592601aa1cf2d446ade5e278258ee",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a87914989c48837bd646567db9eb63245f75962a",
        "message": "Fix NPE.\nChange order of build - seemed odd that we ran junit before we built\neverything.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252785 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_126",
        "file": [
            {
                "sha": "cfa78eb315a6e87f8637b97a4b7187e467af32ee",
                "filename": "build.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/3a4360e9bba592601aa1cf2d446ade5e278258ee/build.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3a4360e9bba592601aa1cf2d446ade5e278258ee/build.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/build.xml?ref=3a4360e9bba592601aa1cf2d446ade5e278258ee",
                "patch": "@@ -352,7 +352,7 @@ Copyright:\n   <!-- =================================================================== -->\n   <!-- Creates the binary distribution                                     -->\n   <!-- =================================================================== -->\n-  <target name=\"dist\" depends=\"compile, junit, samples, javadocs\" >\n+  <target name=\"dist\" depends=\"compile, javadocs, samples, junit\" >\n     <mkdir dir=\"${dist.dir}\"/>\n     <mkdir dir=\"${dist.dir}/docs\"/>\n     <mkdir dir=\"${dist.dir}/docs/apiDocs\"/>"
            },
            {
                "sha": "2db593def8632b03e3a725dbe36e2009ca31c1d9",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/3a4360e9bba592601aa1cf2d446ade5e278258ee/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3a4360e9bba592601aa1cf2d446ade5e278258ee/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=3a4360e9bba592601aa1cf2d446ade5e278258ee",
                "patch": "@@ -383,7 +383,7 @@ public Document process(MessageContext msgContext, Element root)\n         AxisEngine engine = msgContext.getAxisEngine();\n         \n         // If this is WSDD, process it correctly.\n-        if (rootNS.equals(WSDDConstants.WSDD_NS)) {\n+        if (rootNS != null && rootNS.equals(WSDDConstants.WSDD_NS)) {\n             return processWSDD(engine, root);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/afda30bd0d2c04d7181278e00fc034c82c912b2a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/3150b9829baf5888cb2ed7dbd89b0ad3dfd9e626",
        "message": "Fix NPE.\nChange order of build - seemed odd that we ran junit before we built\neverything.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245713 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_127",
        "file": [
            {
                "sha": "cfa78eb315a6e87f8637b97a4b7187e467af32ee",
                "filename": "build.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/afda30bd0d2c04d7181278e00fc034c82c912b2a/build.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/afda30bd0d2c04d7181278e00fc034c82c912b2a/build.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/build.xml?ref=afda30bd0d2c04d7181278e00fc034c82c912b2a",
                "patch": "@@ -352,7 +352,7 @@ Copyright:\n   <!-- =================================================================== -->\n   <!-- Creates the binary distribution                                     -->\n   <!-- =================================================================== -->\n-  <target name=\"dist\" depends=\"compile, junit, samples, javadocs\" >\n+  <target name=\"dist\" depends=\"compile, javadocs, samples, junit\" >\n     <mkdir dir=\"${dist.dir}\"/>\n     <mkdir dir=\"${dist.dir}/docs\"/>\n     <mkdir dir=\"${dist.dir}/docs/apiDocs\"/>"
            },
            {
                "sha": "2db593def8632b03e3a725dbe36e2009ca31c1d9",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/afda30bd0d2c04d7181278e00fc034c82c912b2a/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/afda30bd0d2c04d7181278e00fc034c82c912b2a/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=afda30bd0d2c04d7181278e00fc034c82c912b2a",
                "patch": "@@ -383,7 +383,7 @@ public Document process(MessageContext msgContext, Element root)\n         AxisEngine engine = msgContext.getAxisEngine();\n         \n         // If this is WSDD, process it correctly.\n-        if (rootNS.equals(WSDDConstants.WSDD_NS)) {\n+        if (rootNS != null && rootNS.equals(WSDDConstants.WSDD_NS)) {\n             return processWSDD(engine, root);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/ba5f9b2f6a6b551b5e6339363af575e63a52f113",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/810a7b733eba4850a30e2c83d873ceb7076f4f2d",
        "message": "Remove NPE from DateDeser - found by Mark Roder(mroder@wamnet.com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252656 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_128",
        "file": [
            {
                "sha": "82f712324e35f9cf32f76029d75fe6b4463c656a",
                "filename": "src/org/apache/axis/encoding/DateSerializer.java",
                "status": "modified",
                "additions": 63,
                "deletions": 54,
                "changes": 117,
                "blob_url": "https://github.com/apache/axis1-java/blob/ba5f9b2f6a6b551b5e6339363af575e63a52f113/src/org/apache/axis/encoding/DateSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ba5f9b2f6a6b551b5e6339363af575e63a52f113/src/org/apache/axis/encoding/DateSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DateSerializer.java?ref=ba5f9b2f6a6b551b5e6339363af575e63a52f113",
                "patch": "@@ -84,78 +84,87 @@ public Object makeValue(String source) {\n             Date result;\n \n             // validate fixed portion of format\n-            if (source.length() < 19) \n-                throw new NumberFormatException(\"invalid dateTime\");\n-\n-            if (source.charAt(4) != '-' || source.charAt(7) != '-' ||\n-                source.charAt(10) != 'T')\n-                throw new NumberFormatException(\"invalid date\");\n-\n-            if (source.charAt(13) != ':' || source.charAt(16) != ':')\n-                throw new NumberFormatException(\"invalid time\");\n+            if ( source != null ) {\n+                if (source.length() < 19) \n+                    throw new NumberFormatException(\"invalid dateTime\");\n+    \n+                if (source.charAt(4) != '-' || source.charAt(7) != '-' ||\n+                    source.charAt(10) != 'T')\n+                    throw new NumberFormatException(\"invalid date\");\n+    \n+                if (source.charAt(13) != ':' || source.charAt(16) != ':')\n+                    throw new NumberFormatException(\"invalid time\");\n+            }\n \n             // convert what we have validated so far\n             try {\n-                result=zulu.parse(source.substring(0,19)+\".000Z\"); \n+                result = zulu.parse(source == null ? null :\n+                                       (source.substring(0,19)+\".000Z\") );\n             } catch (Exception e) {\n                 throw new NumberFormatException(e.toString());\n             }\n \n             int pos = 19;\n \n             // parse optional milliseconds\n-            if (pos < source.length() && source.charAt(pos)=='.') {\n-                int milliseconds = 0;\n-                int start = ++pos;\n-                while (pos<source.length() && Character.isDigit(source.charAt(pos)))\n-                    pos++;\n-\n-                String decimal=source.substring(start,pos);\n-                if (decimal.length()==3) {\n-                    milliseconds=Integer.parseInt(decimal);\n-                } else if (decimal.length() < 3) {\n-                    milliseconds=Integer.parseInt((decimal+\"000\").substring(0,3));\n-                } else {\n-                    milliseconds=Integer.parseInt(decimal.substring(0,3));\n-                    if (decimal.charAt(3)>='5') ++milliseconds;\n+            if ( source != null ) {\n+                if (pos < source.length() && source.charAt(pos)=='.') {\n+                    int milliseconds = 0;\n+                    int start = ++pos;\n+                    while (pos<source.length() && \n+                           Character.isDigit(source.charAt(pos)))\n+                        pos++;\n+    \n+                    String decimal=source.substring(start,pos);\n+                    if (decimal.length()==3) {\n+                        milliseconds=Integer.parseInt(decimal);\n+                    } else if (decimal.length() < 3) {\n+                        milliseconds=Integer.parseInt((decimal+\"000\")\n+                                            .substring(0,3));\n+                    } else {\n+                        milliseconds=Integer.parseInt(decimal.substring(0,3));\n+                        if (decimal.charAt(3)>='5') ++milliseconds;\n+                    }\n+    \n+                    // add milliseconds to the current result\n+                    result.setTime(result.getTime()+milliseconds);\n                 }\n-\n-                // add milliseconds to the current result\n-                result.setTime(result.getTime()+milliseconds);\n-            }\n-\n-            // parse optional timezone\n-            if (pos+5 < source.length() &&\n-                (source.charAt(pos)=='+' || (source.charAt(pos)=='-')))\n-            {\n-                if (!Character.isDigit(source.charAt(pos+1)) || \n-                    !Character.isDigit(source.charAt(pos+2)) || \n-                    source.charAt(pos+3) != ':'              || \n-                    !Character.isDigit(source.charAt(pos+4)) || \n-                    !Character.isDigit(source.charAt(pos+5)))\n-                    throw new NumberFormatException(\"invalid timezone\");\n-\n-                int hours = (source.charAt(pos+1)-'0')*10+source.charAt(pos+2)-'0';\n-                int mins  = (source.charAt(pos+4)-'0')*10+source.charAt(pos+5)-'0';\n-                int milliseconds = (hours*60+mins)*60*1000;\n-\n-                // subtract milliseconds from the current result to obtain GMT\n-                if (source.charAt(pos)=='+') milliseconds=-milliseconds;\n-                result.setTime(result.getTime()+milliseconds);\n-                pos+=6;  \n+    \n+                // parse optional timezone\n+                if (pos+5 < source.length() &&\n+                    (source.charAt(pos)=='+' || (source.charAt(pos)=='-')))\n+                {\n+                    if (!Character.isDigit(source.charAt(pos+1)) || \n+                        !Character.isDigit(source.charAt(pos+2)) || \n+                        source.charAt(pos+3) != ':'              || \n+                        !Character.isDigit(source.charAt(pos+4)) || \n+                        !Character.isDigit(source.charAt(pos+5)))\n+                        throw new NumberFormatException(\"invalid timezone\");\n+    \n+                    int hours = (source.charAt(pos+1)-'0')*10\n+                                            +source.charAt(pos+2)-'0';\n+                    int mins  = (source.charAt(pos+4)-'0')*10\n+                                            +source.charAt(pos+5)-'0';\n+                    int milliseconds = (hours*60+mins)*60*1000;\n+    \n+                    // subtract milliseconds from current result to obtain GMT\n+                    if (source.charAt(pos)=='+') milliseconds=-milliseconds;\n+                    result.setTime(result.getTime()+milliseconds);\n+                    pos+=6;  \n+                }\n+    \n+                if (pos < source.length() && source.charAt(pos)=='Z') pos++;\n+    \n+                if (pos < source.length())\n+                    throw new NumberFormatException(\"unexpected characters\");\n             }\n \n-            if (pos < source.length() && source.charAt(pos)=='Z') pos++;\n-\n-            if (pos < source.length())\n-                throw new NumberFormatException(\"unexpected characters\");\n-\n             return result;\n         }\n     }\n \n     static public class DateDeserializerFactory implements DeserializerFactory {\n-        public Deserializer getDeserializer(Class cls) { return new DateDeser(); }\n+        public Deserializer getDeserializer(Class cls) {return new DateDeser();}\n     }\n \n     /** "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/10bc93d91801bb67339d52318a0b58fe92c2283e",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/ac2c6ad7bf4f84531a695324c5686b35a039a7ea",
        "message": "Remove NPE from DateDeser - found by Mark Roder(mroder@wamnet.com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245584 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_129",
        "file": [
            {
                "sha": "82f712324e35f9cf32f76029d75fe6b4463c656a",
                "filename": "src/org/apache/axis/encoding/DateSerializer.java",
                "status": "modified",
                "additions": 63,
                "deletions": 54,
                "changes": 117,
                "blob_url": "https://github.com/apache/axis1-java/blob/10bc93d91801bb67339d52318a0b58fe92c2283e/src/org/apache/axis/encoding/DateSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/10bc93d91801bb67339d52318a0b58fe92c2283e/src/org/apache/axis/encoding/DateSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DateSerializer.java?ref=10bc93d91801bb67339d52318a0b58fe92c2283e",
                "patch": "@@ -84,78 +84,87 @@ public Object makeValue(String source) {\n             Date result;\n \n             // validate fixed portion of format\n-            if (source.length() < 19) \n-                throw new NumberFormatException(\"invalid dateTime\");\n-\n-            if (source.charAt(4) != '-' || source.charAt(7) != '-' ||\n-                source.charAt(10) != 'T')\n-                throw new NumberFormatException(\"invalid date\");\n-\n-            if (source.charAt(13) != ':' || source.charAt(16) != ':')\n-                throw new NumberFormatException(\"invalid time\");\n+            if ( source != null ) {\n+                if (source.length() < 19) \n+                    throw new NumberFormatException(\"invalid dateTime\");\n+    \n+                if (source.charAt(4) != '-' || source.charAt(7) != '-' ||\n+                    source.charAt(10) != 'T')\n+                    throw new NumberFormatException(\"invalid date\");\n+    \n+                if (source.charAt(13) != ':' || source.charAt(16) != ':')\n+                    throw new NumberFormatException(\"invalid time\");\n+            }\n \n             // convert what we have validated so far\n             try {\n-                result=zulu.parse(source.substring(0,19)+\".000Z\"); \n+                result = zulu.parse(source == null ? null :\n+                                       (source.substring(0,19)+\".000Z\") );\n             } catch (Exception e) {\n                 throw new NumberFormatException(e.toString());\n             }\n \n             int pos = 19;\n \n             // parse optional milliseconds\n-            if (pos < source.length() && source.charAt(pos)=='.') {\n-                int milliseconds = 0;\n-                int start = ++pos;\n-                while (pos<source.length() && Character.isDigit(source.charAt(pos)))\n-                    pos++;\n-\n-                String decimal=source.substring(start,pos);\n-                if (decimal.length()==3) {\n-                    milliseconds=Integer.parseInt(decimal);\n-                } else if (decimal.length() < 3) {\n-                    milliseconds=Integer.parseInt((decimal+\"000\").substring(0,3));\n-                } else {\n-                    milliseconds=Integer.parseInt(decimal.substring(0,3));\n-                    if (decimal.charAt(3)>='5') ++milliseconds;\n+            if ( source != null ) {\n+                if (pos < source.length() && source.charAt(pos)=='.') {\n+                    int milliseconds = 0;\n+                    int start = ++pos;\n+                    while (pos<source.length() && \n+                           Character.isDigit(source.charAt(pos)))\n+                        pos++;\n+    \n+                    String decimal=source.substring(start,pos);\n+                    if (decimal.length()==3) {\n+                        milliseconds=Integer.parseInt(decimal);\n+                    } else if (decimal.length() < 3) {\n+                        milliseconds=Integer.parseInt((decimal+\"000\")\n+                                            .substring(0,3));\n+                    } else {\n+                        milliseconds=Integer.parseInt(decimal.substring(0,3));\n+                        if (decimal.charAt(3)>='5') ++milliseconds;\n+                    }\n+    \n+                    // add milliseconds to the current result\n+                    result.setTime(result.getTime()+milliseconds);\n                 }\n-\n-                // add milliseconds to the current result\n-                result.setTime(result.getTime()+milliseconds);\n-            }\n-\n-            // parse optional timezone\n-            if (pos+5 < source.length() &&\n-                (source.charAt(pos)=='+' || (source.charAt(pos)=='-')))\n-            {\n-                if (!Character.isDigit(source.charAt(pos+1)) || \n-                    !Character.isDigit(source.charAt(pos+2)) || \n-                    source.charAt(pos+3) != ':'              || \n-                    !Character.isDigit(source.charAt(pos+4)) || \n-                    !Character.isDigit(source.charAt(pos+5)))\n-                    throw new NumberFormatException(\"invalid timezone\");\n-\n-                int hours = (source.charAt(pos+1)-'0')*10+source.charAt(pos+2)-'0';\n-                int mins  = (source.charAt(pos+4)-'0')*10+source.charAt(pos+5)-'0';\n-                int milliseconds = (hours*60+mins)*60*1000;\n-\n-                // subtract milliseconds from the current result to obtain GMT\n-                if (source.charAt(pos)=='+') milliseconds=-milliseconds;\n-                result.setTime(result.getTime()+milliseconds);\n-                pos+=6;  \n+    \n+                // parse optional timezone\n+                if (pos+5 < source.length() &&\n+                    (source.charAt(pos)=='+' || (source.charAt(pos)=='-')))\n+                {\n+                    if (!Character.isDigit(source.charAt(pos+1)) || \n+                        !Character.isDigit(source.charAt(pos+2)) || \n+                        source.charAt(pos+3) != ':'              || \n+                        !Character.isDigit(source.charAt(pos+4)) || \n+                        !Character.isDigit(source.charAt(pos+5)))\n+                        throw new NumberFormatException(\"invalid timezone\");\n+    \n+                    int hours = (source.charAt(pos+1)-'0')*10\n+                                            +source.charAt(pos+2)-'0';\n+                    int mins  = (source.charAt(pos+4)-'0')*10\n+                                            +source.charAt(pos+5)-'0';\n+                    int milliseconds = (hours*60+mins)*60*1000;\n+    \n+                    // subtract milliseconds from current result to obtain GMT\n+                    if (source.charAt(pos)=='+') milliseconds=-milliseconds;\n+                    result.setTime(result.getTime()+milliseconds);\n+                    pos+=6;  \n+                }\n+    \n+                if (pos < source.length() && source.charAt(pos)=='Z') pos++;\n+    \n+                if (pos < source.length())\n+                    throw new NumberFormatException(\"unexpected characters\");\n             }\n \n-            if (pos < source.length() && source.charAt(pos)=='Z') pos++;\n-\n-            if (pos < source.length())\n-                throw new NumberFormatException(\"unexpected characters\");\n-\n             return result;\n         }\n     }\n \n     static public class DateDeserializerFactory implements DeserializerFactory {\n-        public Deserializer getDeserializer(Class cls) { return new DateDeser(); }\n+        public Deserializer getDeserializer(Class cls) {return new DateDeser();}\n     }\n \n     /** "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/00665e120fb916799e690b762437bc6ab0fe43cb",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/81b394044b3ddb0647efe8f4c3258ee5a18a3cbf",
        "message": "Fix bugzilla bug 9952 by supplying message text whenever exceptions\nare created. Ensure this doesn't creep in again by instituting source\ncheck. Also police the use of new NullPointerException. The only\nexception to the latter is in TypeDesc and this is the subject of\nbugzilla bug 9987.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254370 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_130",
        "file": [
            {
                "sha": "24b115aaea82b087b99f947424822d323bd1e6fd",
                "filename": "src/org/apache/axis/MessageContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/MessageContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/MessageContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -685,7 +685,8 @@ public boolean isPropertyTrue(String propName, boolean defaultVal) {\n     public void setProperty(String name, Object value) {\n         if (name == null || value == null) {\n             return;\n-            // Is this right?  Shouldn't we throw an exception like: throw new IllegalArgumentException();\n+            // Is this right?  Shouldn't we throw an exception like: \n+            // throw new IllegalArgumentException(msg);\n         }\n         else if (name.equals(Call.USERNAME_PROPERTY)) {\n             if (!(value instanceof String)) {"
            },
            {
                "sha": "839857dbb57d5388b6a5ee6df9c02a1aef69f9f7",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 14,
                "deletions": 7,
                "changes": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -259,7 +259,9 @@ public Call(URL url) {\n      */\n     public void setProperty(String name, Object value) {\n         if (name == null || value == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(name == null ?\n+                                         \"badProp03\" : \"badProp04\"));\n         }\n         else if (name.equals(USERNAME_PROPERTY)) {\n             if (!(value instanceof String)) {\n@@ -346,7 +348,8 @@ else if ( name.equals(TRANSPORT_NAME) ) {\n                 transport.setTransportName((String) value);\n         }\n         else {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"badProp05\", name));\n         }\n         callProperties.put(name, value);\n     } // setProperty\n@@ -359,7 +362,9 @@ else if ( name.equals(TRANSPORT_NAME) ) {\n      */\n     public Object getProperty(String name) {\n         if (name == null || !isPropertySupported(name))\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(name == null ?\n+                  JavaUtils.getMessage(\"badProp03\") :\n+                  JavaUtils.getMessage(\"badProp05\", name));\n         return callProperties.get(name);\n     } // getProperty\n \n@@ -375,7 +380,9 @@ public void removeProperty(String name) {\n \n     public void setScopedProperty(String name, Object value) {\n         if (name == null || value == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(name == null ?\n+                                         \"badProp03\" : \"badProp04\"));\n         }\n         scopedProperties.put(name, value);\n     } // setScopedProperty\n@@ -705,7 +712,7 @@ public void addParameter(QName paramName, QName xmlType,\n             operation.addParameter(param);\n         }\n         else {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(JavaUtils.getMessage(\"noParmAndRetReq\"));\n         }\n     }\n \n@@ -788,7 +795,7 @@ public void setReturnType(QName type) {\n             operation.setReturnClass(tm.getClassForQName(type));\n         }\n         else {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(JavaUtils.getMessage(\"noParmAndRetReq\"));\n         }\n     }\n \n@@ -847,7 +854,7 @@ public void removeAllParameters() {\n             operation = new OperationDesc();\n         }\n         else {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(JavaUtils.getMessage(\"noParmAndRetReq\"));\n         }\n     }\n "
            },
            {
                "sha": "7a952512ea4263faca5bf8f1f2615c0d227c32bd",
                "filename": "src/org/apache/axis/client/Service.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/client/Service.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/client/Service.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Service.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -509,7 +509,7 @@ private Remote getPort(String endpoint, QName portName,\n      */\n     public javax.xml.rpc.Call[] getCalls(QName portName) throws ServiceException {\n         if (wsdlLocation == null) {\n-            throw new ServiceException();\n+            throw new ServiceException(JavaUtils.getMessage(\"wsdlMissing00\"));\n         }\n         else {\n             return new javax.xml.rpc.Call[0];\n@@ -530,7 +530,8 @@ private Remote getPort(String endpoint, QName portName,\n      *         HandlerRegistry.\n      */\n     public HandlerRegistry getHandlerRegistry() {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(\n+                JavaUtils.getMessage(\"handlerRegistryConfig\"));\n     }\n \n     /**"
            },
            {
                "sha": "e0c1779c3b0052b5772c46fc4d164846455baeda",
                "filename": "src/org/apache/axis/client/Stub.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/client/Stub.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/client/Stub.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Stub.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -120,7 +120,9 @@ protected boolean firstCall() {\n      */\n     public void _setProperty(String name, Object value) {\n         if (name == null || value == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(name == null ?\n+                                         \"badProp03\" : \"badProp04\"));\n         }\n         else if (name.equals(Call.USERNAME_PROPERTY)) {\n             if (!(value instanceof String)) {"
            },
            {
                "sha": "e6ec56be9cded125b3d652df2f0104432cd06e8b",
                "filename": "src/org/apache/axis/description/TypeDesc.java",
                "status": "modified",
                "additions": 10,
                "deletions": 2,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/description/TypeDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/description/TypeDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/TypeDesc.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -55,6 +55,8 @@\n \n package org.apache.axis.description;\n \n+import org.apache.axis.utils.JavaUtils;\n+\n import javax.xml.namespace.QName;\n import java.lang.reflect.Method;\n import java.util.HashMap;\n@@ -177,8 +179,14 @@ public void setFields(FieldDesc [] newFields)\n      */\n     public void addFieldDesc(FieldDesc field)\n     {\n-        if (field == null)\n-            throw new NullPointerException();\n+        if (field == null) {\n+            //XXX TypeDesc is published and should not throw NPEs\n+            // An exception has been coded in the source code checks\n+            // in test.utils.TestSrcContent which should be removed\n+            // when this NPE is removed.\n+            throw new NullPointerException(\n+                    JavaUtils.getMessage(\"nullFieldDesc\"));\n+        }\n         \n         int numFields = 0;\n         if (fields != null) {"
            },
            {
                "sha": "b810440369f9558c5157e66a8c0cccd27b8322ec",
                "filename": "src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -57,6 +57,7 @@\n \n import org.apache.axis.Constants;\n import org.apache.axis.encoding.ser.*;\n+import org.apache.axis.utils.JavaUtils;\n \n import javax.xml.namespace.QName;\n import javax.xml.rpc.JAXRPCException;\n@@ -429,15 +430,15 @@ public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.DeserializerFactory dsf)\n         throws JAXRPCException {\n \n-        throw new JAXRPCException();\n+        throw new JAXRPCException(JavaUtils.getMessage(\"fixedTypeMapping\"));\n     }\n     public void removeSerializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(JavaUtils.getMessage(\"fixedTypeMapping\"));\n     }\n     public void removeDeserializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(JavaUtils.getMessage(\"fixedTypeMapping\"));\n     }\n     public void setSupportedEncodings(String[] namespaceURIs) {\n     }"
            },
            {
                "sha": "d44069acab47ec0661aaccd559fc9bb5893ac833",
                "filename": "src/org/apache/axis/encoding/TypeMappingDelegate.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/TypeMappingDelegate.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/TypeMappingDelegate.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingDelegate.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -56,6 +56,7 @@\n package org.apache.axis.encoding;\n \n import org.apache.axis.Constants;\n+import org.apache.axis.utils.JavaUtils;\n \n import javax.xml.namespace.QName;\n import javax.xml.rpc.JAXRPCException;\n@@ -101,7 +102,8 @@ public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.DeserializerFactory dsf)\n         throws JAXRPCException {        \n \n-        throw new JAXRPCException();\n+        throw new JAXRPCException(\n+                JavaUtils.getMessage(\"delegatedTypeMapping\"));\n     }\n     \n     public javax.xml.rpc.encoding.SerializerFactory \n@@ -138,12 +140,14 @@ public void register(Class javaType, QName xmlType,\n \n     public void removeSerializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(\n+                JavaUtils.getMessage(\"delegatedTypeMapping\"));\n     }\n \n     public void removeDeserializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(\n+                JavaUtils.getMessage(\"delegatedTypeMapping\"));\n     }\n \n    public boolean isRegistered(Class javaType, QName xmlType) {"
            },
            {
                "sha": "1960f32eed6f79f186975eefcd20942a10c4ebfb",
                "filename": "src/org/apache/axis/encoding/TypeMappingImpl.java",
                "status": "modified",
                "additions": 24,
                "deletions": 10,
                "changes": 34,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingImpl.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -56,6 +56,7 @@\n package org.apache.axis.encoding;\n \n import org.apache.axis.Constants;\n+import org.apache.axis.utils.JavaUtils;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -202,7 +203,9 @@ public boolean isRegistered(Class javaType, QName xmlType) {\n         if (javaType == null || xmlType == null) {\n             // REMOVED_FOR_TCK\n             // return false;\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n         }\n         if (pair2SF.keySet().contains(new Pair(javaType, xmlType))) {\n             return true;\n@@ -229,21 +232,28 @@ public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.DeserializerFactory dsf)\n         throws JAXRPCException {\n \n-        // Both javaType and xmlType must be specified, and\n-        // at least a serializer or deserializer factory must be specified.\n-        if (javaType == null || xmlType == null ||\n-            (sf == null && dsf == null)) {\n-            throw new JAXRPCException();\n+        // Both javaType and xmlType must be specified.\n+        if (javaType == null || xmlType == null) {\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n+        }\n+\n+        // At least a serializer or deserializer factory must be specified.\n+        if (sf == null && dsf == null) {\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(sf == null ?\n+                                         \"badSerFac\" : \"badDeserFac\"));\n         }\n \n         //REMOVED_FOR_TCK\n         //if (sf != null &&\n         //    !(sf instanceof javax.xml.rpc.encoding.SerializerFactory)) {\n-        //    throw new JAXRPCException();\n+        //    throw new JAXRPCException(message text);\n         //}\n         //if (dsf != null &&\n         //    !(dsf instanceof javax.xml.rpc.encoding.DeserializerFactory)) {\n-        //    throw new JAXRPCException();\n+        //    throw new JAXRPCException(message text);\n         //}\n \n         Pair pair = new Pair(javaType, xmlType);\n@@ -350,7 +360,9 @@ public void register(Class javaType, QName xmlType,\n     public void removeSerializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n         if (javaType == null || xmlType == null) {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n         }\n \n         Pair pair = new Pair(javaType, xmlType);\n@@ -370,7 +382,9 @@ public void removeSerializer(Class javaType, QName xmlType)\n     public void removeDeserializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n         if (javaType == null || xmlType == null) {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n         }\n         Pair pair = new Pair(javaType, xmlType);\n         pair2DF.remove(pair);"
            },
            {
                "sha": "684525cd43b57e39422f529e21f596db5dc7d80b",
                "filename": "src/org/apache/axis/encoding/TypeMappingRegistryImpl.java",
                "status": "modified",
                "additions": 18,
                "deletions": 9,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/TypeMappingRegistryImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/encoding/TypeMappingRegistryImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingRegistryImpl.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -249,10 +249,12 @@ public void delegate(TypeMappingRegistry secondaryTMR) {\n //        namespaceURI = \"\";\n         if (mapping == null || \n             !(mapping instanceof TypeMapping)) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"badTypeMapping\"));\n         } \n         if (namespaceURI == null) {\n-            throw new java.lang.IllegalArgumentException();\n+            throw new java.lang.IllegalArgumentException(\n+                    JavaUtils.getMessage(\"nullNamespaceURI\"));\n         }\n         // Get or create a TypeMappingDelegate and set it to \n         // delegate to the new mapping.\n@@ -274,17 +276,24 @@ public void delegate(TypeMappingRegistry secondaryTMR) {\n      * @param mapping - TypeMapping for specific type namespaces\n      *\n      * java.lang.IllegalArgumentException - \n-     * if an invalid namespace URI is specified\n+     * if an invalid type mapping is specified or the delegate is already set\n      */\n     public void registerDefault(javax.xml.rpc.encoding.TypeMapping mapping) {\n         if (mapping == null || \n-            !(mapping instanceof TypeMapping) ||\n-            // Don't allow this call after the delegate() method since\n-            // the TMR's TypeMappings will be using the default type mapping\n-            // of the secondary TMR.\n-            defaultDelTM.getDelegate() instanceof TypeMappingDelegate) {\n-            throw new IllegalArgumentException();\n+            !(mapping instanceof TypeMapping)) {\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"badTypeMapping\"));\n+        }\n+\n+        /* Don't allow this call after the delegate() method since\n+         * the TMR's TypeMappings will be using the default type mapping\n+         * of the secondary TMR.\n+         */\n+        if (defaultDelTM.getDelegate() instanceof TypeMappingDelegate) {\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"defaultTypeMappingSet\"));\n         }\n+\n         defaultDelTM.setDelegate((TypeMapping) mapping);\n     }\n         "
            },
            {
                "sha": "cbf4f79b8a608cda39bf0cff641d07a7fba0aa19",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -155,7 +155,7 @@ public void processMessage (MessageContext msgContext,\n \n         if (body == null) {\n             // throw something\n-            throw new Exception();\n+            throw new Exception(JavaUtils.getMessage(\"noBody00\"));\n         }\n         String methodName = body.getMethodName();\n         Vector args = body.getParams();"
            },
            {
                "sha": "8f6339c3423632b4019984eadb8244c7d0aeb255",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -290,9 +290,11 @@ public static void main(String args[]) throws Exception {\n             log.error( \"<list/>\" );\n \n \n-            // throw an Exception which will go uncaught!  this way, a test suite\n-            // can invoke main() and detect the exception\n-            throw new IllegalArgumentException();\n+            // throw an Exception which will go uncaught!  this way, a test\n+            // suite can invoke main() and detect the exception\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"usage00\", \n+                                         \"Admin client|server <xml-file>\"));\n             // System.exit( 1 );\n         }\n "
            },
            {
                "sha": "3b362d2a30396da84c4d3d7276772bcf8bb37428",
                "filename": "src/org/apache/axis/utils/BeanPropertyDescriptor.java",
                "status": "modified",
                "additions": 11,
                "deletions": 3,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/BeanPropertyDescriptor.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/BeanPropertyDescriptor.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/BeanPropertyDescriptor.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -101,7 +101,11 @@ public BeanPropertyDescriptor(String _name,\n         getter = _getter;\n         setter = _setter;\n         if (_getter == null || _setter == null || _name == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(_getter == null ?\n+                                         \"badGetter00\" :\n+                                         (_setter == null ?\n+                                         \"badSetter00\" : \"badProp03\")));\n         }\n     }\n \n@@ -123,7 +127,9 @@ public BeanPropertyDescriptor(String _name,\n         getterIndexed = _getterIndexed;\n         setterIndexed = _setterIndexed;\n         if (_getterIndexed == null || _setterIndexed == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(_getterIndexed == null ?\n+                                         \"badAccessor00\" : \"badModifier00\"));\n         }\n     }\n \n@@ -138,7 +144,9 @@ public BeanPropertyDescriptor(String _name,\n         name = _name;\n         field = _field;\n         if (_field == null || _name == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(_field == null ?\n+                                         \"badField00\" : \"badProp03\"));\n         }\n     }\n     "
            },
            {
                "sha": "f27f2880df21fcb35d929386382e2cf3feeac22d",
                "filename": "src/org/apache/axis/utils/JavaUtils.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/JavaUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/JavaUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/JavaUtils.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -809,13 +809,13 @@ public static Class getHolderValueType(Class type) {\n      */\n     public static Object getHolderValue(Object holder) throws HolderException {\n         if (!(holder instanceof javax.xml.rpc.holders.Holder)) {\n-            throw new HolderException();\n+            throw new HolderException(getMessage(\"badHolder00\"));\n         }\n         try {\n             Field valueField = holder.getClass().getField(\"value\");\n             return valueField.get(holder);\n         } catch (Exception e) {\n-            throw new HolderException();\n+          throw new HolderException(getMessage(\"exception01\", e.getMessage()));\n         }\n     }\n \n@@ -826,7 +826,7 @@ public static Object getHolderValue(Object holder) throws HolderException {\n      */\n     public static void setHolderValue(Object holder, Object value) throws HolderException {\n         if (!(holder instanceof javax.xml.rpc.holders.Holder)) {\n-            throw new HolderException();\n+            throw new HolderException(getMessage(\"badHolder00\"));\n         }\n         try {\n             Field valueField = holder.getClass().getField(\"value\");\n@@ -839,12 +839,13 @@ public static void setHolderValue(Object holder, Object value) throws HolderExce\n                 valueField.set(holder, value);\n             }\n         } catch (Exception e) {\n-            throw new HolderException();\n+          throw new HolderException(getMessage(\"exception01\", e.getMessage()));\n         }\n     }\n     public static class HolderException extends Exception\n     {\n-        public HolderException () {}\n+        private HolderException () {}\n+        public HolderException(String msg) { super(msg); }\n     };\n \n "
            },
            {
                "sha": "00336b7ca2b807c4a3ac7d00dfc1af7f641047d8",
                "filename": "src/org/apache/axis/utils/axisNLS.properties",
                "status": "modified",
                "additions": 29,
                "deletions": 0,
                "changes": 29,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/axisNLS.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/utils/axisNLS.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/axisNLS.properties?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -43,6 +43,7 @@ badDate00=Invalid date\n badDateTime00=Invalid date/time\n badElem00=Invalid element in {0} - {1}\n badHandlerClass00=Class ''{0}'' is not a Handler (can't be used in HandlerProvider)!\n+badHolder00=Holder of wrong type.\n badInteger00=Explicit array length is not a valid integer ''{0}''.\n \n # NOTE:  in badMsgCtx00, do not translate \"--messageContext\", \"--skeleton\"\n@@ -52,6 +53,8 @@ badNameAttr00=No ''name'' attribute was specified in an undeployment element\n badNamespace00=Bad envelope namespace:  {0}\n badOffset00=Malformed offset attribute ''{0}''.\n badpackage00=Error: --NStoPKG and --package switch can't be used together\n+# NOTE:  in badParmMode00, do not translate \"Parameter\".\n+badParmMode00=Invalid Parameter mode {0}.\n badPosition00=Malformed position attribute ''{0}''.\n badProxy00=Proxy port number, \"{0}\", incorrectly formatted\n \n@@ -222,6 +225,7 @@ gotPrincipal00=Got principal:  {0}\n gotResponse00=Got response message\n gotType00={0} got type {1}\n gotValue00={0} got value {1}\n+handlerRegistryConfig=Service does not support configuration of a HandlerRegistry \n headers00=headers\n headerPresent=Header already present\n \n@@ -275,6 +279,9 @@ noArrayType00=No arrayType attribute for array!\n # NOTE:  in noBeanHome00, do not translate \"EJBProvider\"\n noBeanHome00=EJBProvider cannot get Bean Home\n \n+# NOTE:  in noBody00, do not translate \"Body\"\n+noBody00=Body not found.\n+\n noChains00=Services must use targeted chains\n noClass00=Could not create class {0}\n \n@@ -434,6 +441,7 @@ nullCall00=AdminClient did not initialize correctly: ''call'' is null!\n nullEJBUser00=Null user in EJBProvider\n \n nullHandler00={0}:  Null handler;\n+nullNamespaceURI=Null namespace URI specified.\n nullParent00=null parent!\n \n nullProvider00=Null provider type passed to WSDDProvider!\n@@ -685,6 +693,19 @@ builtOn=Built on #today#\n badProp00=Bad property.  The value for {0} should be of type {1}, but it is of type {2}.\n badProp01=Bad property.  {0} should be {1}; but it is {2}.\n badProp02=Cannot set {0} property when {1} property is not {2}.\n+badProp03=Null property name specified.\n+badProp04=Null property value specified.\n+badProp05=Property name {0} not supported.\n+badGetter00=Null getter method specified.\n+badAccessor00=Null accessor method specified.\n+badSetter00=Null setter method specified.\n+badModifier00=Null modifier method specified.\n+badField00=Null public instance field specified.\n+\n+badJavaType=Null java class specified.\n+badXmlType=Null qualified name specified.\n+badSerFac=Null serializer factory specified.\n+badDeserFac=Null deserializer factory specified.\n \n literalTypePart00=Error: Message part {0} of operation or fault {1} is specified as a type and the soap:body use of binding \"{2}\" is literal.  This WSDL is not currently supported.\n BadServiceName00=Error: Empty or missing service name\n@@ -707,7 +728,9 @@ noTransport02=Couldn't find transport {0}\n noCompiler00=Compiler found in your classpath.  Make sure you added 'tools.jar'\n compilerFail00=Please ensure that you have your JDK's rt.jar listed in your classpath. Jikes needs it to operate.\n \n+nullFieldDesc=Null FieldDesc specified\n exception00=Exception:\n+exception01=Exception: {0}\n axisConfigurationException00=ConfigurationException:\n parserConfigurationException00=ParserConfigurationException:\n SAXException00=SAXException:\n@@ -787,6 +810,8 @@ compilerClass=Javac compiler class:  {0}\n noMoreTokens=no more tokens - could not parse error message:  {0}\n cantParse=could not parse error message:  {0}\n \n+noParmAndRetReq=Parameter or return type inferred from WSDL and may not be updated.\n+\n # NOTE:  in sunJavac, do not translate \"Sun Javac\"\n sunJavac=Sun Javac Compiler\n \n@@ -813,6 +838,10 @@ badTypeNode=Error: Missing type resolution for element {2}, in WSDL message part\n # NOTE:  in noUse, do no translate \"soap:operation\", \"binding operation\", \"use\".\n noUse=The soap:operation for binding operation {0} must have a \"use\" attribute.\n \n+fixedTypeMapping=Default type mapping cannot be modified.\n+delegatedTypeMapping=Type mapping cannot be modified via delegate.\n+badTypeMapping=Invalid TypeMapping specified: wrong type or null.\n+defaultTypeMappingSet=Default type mapping from secondary type mapping registry is already in use.\n getPortDoc00=For the given interface, get the stub implementation.\n getPortDoc01=If this service has no port for the given interface,\n getPortDoc02=then ServiceException is thrown."
            },
            {
                "sha": "9fcd19ed279c961a63991963febccf8c8418317b",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -303,7 +303,8 @@ public void generate() throws IOException {\n                     gen = (Generator) ctor.newInstance(actualArgs);\n                 }\n                 catch (Throwable t) {\n-                    throw new IOException();\n+                    throw new IOException(\n+                        JavaUtils.getMessage(\"exception01\", t.getMessage()));\n                 }\n                 gen.generate();\n             }"
            },
            {
                "sha": "694a7f7ef8d434ae6090cc03e0b85687ce1a3364",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -81,6 +81,8 @@\n import org.apache.axis.wsdl.symbolTable.SymbolTable;\n import org.apache.axis.wsdl.symbolTable.TypeEntry;\n \n+import org.apache.axis.utils.JavaUtils;\n+\n /**\n * This is Wsdl2java's skeleton writer.  It writes the <BindingName>Skeleton.java\n * file which contains the <bindingName>Skeleton class.\n@@ -171,7 +173,9 @@ protected void writeFileBody(PrintWriter pw) throws IOException {\n                             modeStr = \"org.apache.axis.description.ParameterDesc.INOUT\";\n                             break;\n                         default:\n-                            throw new IOException();\n+                            throw new IOException(\n+                                JavaUtils.getMessage(\"badParmMode00\", \n+                                        (new Byte(p.getMode())).toString()));\n                     }\n                     // Construct a parameter with the parameter name, mode, type qname\n                     // a type javaType."
            },
            {
                "sha": "07a1dd44a06c9c95eeae57a6b7fb08207583d365",
                "filename": "test/utils/TestSrcContent.java",
                "status": "modified",
                "additions": 24,
                "deletions": 0,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/00665e120fb916799e690b762437bc6ab0fe43cb/test/utils/TestSrcContent.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/00665e120fb916799e690b762437bc6ab0fe43cb/test/utils/TestSrcContent.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/utils/TestSrcContent.java?ref=00665e120fb916799e690b762437bc6ab0fe43cb",
                "patch": "@@ -37,6 +37,8 @@\n  * - Verify that log.info(), log.warn(), log.error(), and log.fatal()\n  *   use JavaUtils.getMessage() (i18n).\n  *\n+ * - Verify that exceptions are created with JavaUtils.getMessage() (i18n).\n+ *\n  * To add new patterns, search for and append to the\n  * private attribute 'avoidPatterns'.\n  *\n@@ -187,6 +189,28 @@ boolean noMatch(String name, String content)\n                                        + \"(?![ \\\\t]*JavaUtils\\\\.getMessage)\",\n                                        false),\n \n+            // Verify that exceptions are built with messages.\n+\n+            new FileNameContentPattern(\".+([\\\\\\\\/])\"\n+                                       + \"java\\\\1src\\\\1org\\\\1apache\\\\1axis\\\\1\"\n+                                       + \"([a-zA-Z0-9_]+\\\\1)*\"\n+                                       + \"[^\\\\\\\\/]+\\\\.java\",\n+                                       \"new[ \\\\t]+[a-zA-Z0-9_]*\"\n+                                       + \"Exception\\\\(\\\\)\",\n+                                       false),\n+\n+            // Verify that we don't explicitly create NPEs.\n+            // NPE in TypeDesc needs removing.\n+\n+            new FileNameContentPattern(\".+([\\\\\\\\/])\"\n+                                       + \"java\\\\1src\\\\1org\\\\1apache\\\\1axis\\\\1\"\n+                                       + \"(?!description\\\\1TypeDesc\\\\.java)\"\n+                                       + \"([a-zA-Z0-9_]+\\\\1)*\"\n+                                       + \"[^\\\\\\\\/]+\\\\.java\",\n+                                       \"new[ \\\\t]+\"\n+                                       + \"NullPointerException\",\n+                                       false),\n+\n         };\n \n     private void checkFile(File file) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/890e4f1705f06cbc735eeaa524c6357ba3cb4853",
        "message": "Fix bugzilla bug 9952 by supplying message text whenever exceptions\nare created. Ensure this doesn't creep in again by instituting source\ncheck. Also police the use of new NullPointerException. The only\nexception to the latter is in TypeDesc and this is the subject of\nbugzilla bug 9987.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247297 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_131",
        "file": [
            {
                "sha": "24b115aaea82b087b99f947424822d323bd1e6fd",
                "filename": "src/org/apache/axis/MessageContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/MessageContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/MessageContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -685,7 +685,8 @@ public boolean isPropertyTrue(String propName, boolean defaultVal) {\n     public void setProperty(String name, Object value) {\n         if (name == null || value == null) {\n             return;\n-            // Is this right?  Shouldn't we throw an exception like: throw new IllegalArgumentException();\n+            // Is this right?  Shouldn't we throw an exception like: \n+            // throw new IllegalArgumentException(msg);\n         }\n         else if (name.equals(Call.USERNAME_PROPERTY)) {\n             if (!(value instanceof String)) {"
            },
            {
                "sha": "839857dbb57d5388b6a5ee6df9c02a1aef69f9f7",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 14,
                "deletions": 7,
                "changes": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -259,7 +259,9 @@ public Call(URL url) {\n      */\n     public void setProperty(String name, Object value) {\n         if (name == null || value == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(name == null ?\n+                                         \"badProp03\" : \"badProp04\"));\n         }\n         else if (name.equals(USERNAME_PROPERTY)) {\n             if (!(value instanceof String)) {\n@@ -346,7 +348,8 @@ else if ( name.equals(TRANSPORT_NAME) ) {\n                 transport.setTransportName((String) value);\n         }\n         else {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"badProp05\", name));\n         }\n         callProperties.put(name, value);\n     } // setProperty\n@@ -359,7 +362,9 @@ else if ( name.equals(TRANSPORT_NAME) ) {\n      */\n     public Object getProperty(String name) {\n         if (name == null || !isPropertySupported(name))\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(name == null ?\n+                  JavaUtils.getMessage(\"badProp03\") :\n+                  JavaUtils.getMessage(\"badProp05\", name));\n         return callProperties.get(name);\n     } // getProperty\n \n@@ -375,7 +380,9 @@ public void removeProperty(String name) {\n \n     public void setScopedProperty(String name, Object value) {\n         if (name == null || value == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(name == null ?\n+                                         \"badProp03\" : \"badProp04\"));\n         }\n         scopedProperties.put(name, value);\n     } // setScopedProperty\n@@ -705,7 +712,7 @@ public void addParameter(QName paramName, QName xmlType,\n             operation.addParameter(param);\n         }\n         else {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(JavaUtils.getMessage(\"noParmAndRetReq\"));\n         }\n     }\n \n@@ -788,7 +795,7 @@ public void setReturnType(QName type) {\n             operation.setReturnClass(tm.getClassForQName(type));\n         }\n         else {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(JavaUtils.getMessage(\"noParmAndRetReq\"));\n         }\n     }\n \n@@ -847,7 +854,7 @@ public void removeAllParameters() {\n             operation = new OperationDesc();\n         }\n         else {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(JavaUtils.getMessage(\"noParmAndRetReq\"));\n         }\n     }\n "
            },
            {
                "sha": "7a952512ea4263faca5bf8f1f2615c0d227c32bd",
                "filename": "src/org/apache/axis/client/Service.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/client/Service.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/client/Service.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Service.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -509,7 +509,7 @@ private Remote getPort(String endpoint, QName portName,\n      */\n     public javax.xml.rpc.Call[] getCalls(QName portName) throws ServiceException {\n         if (wsdlLocation == null) {\n-            throw new ServiceException();\n+            throw new ServiceException(JavaUtils.getMessage(\"wsdlMissing00\"));\n         }\n         else {\n             return new javax.xml.rpc.Call[0];\n@@ -530,7 +530,8 @@ private Remote getPort(String endpoint, QName portName,\n      *         HandlerRegistry.\n      */\n     public HandlerRegistry getHandlerRegistry() {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(\n+                JavaUtils.getMessage(\"handlerRegistryConfig\"));\n     }\n \n     /**"
            },
            {
                "sha": "e0c1779c3b0052b5772c46fc4d164846455baeda",
                "filename": "src/org/apache/axis/client/Stub.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/client/Stub.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/client/Stub.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Stub.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -120,7 +120,9 @@ protected boolean firstCall() {\n      */\n     public void _setProperty(String name, Object value) {\n         if (name == null || value == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(name == null ?\n+                                         \"badProp03\" : \"badProp04\"));\n         }\n         else if (name.equals(Call.USERNAME_PROPERTY)) {\n             if (!(value instanceof String)) {"
            },
            {
                "sha": "e6ec56be9cded125b3d652df2f0104432cd06e8b",
                "filename": "src/org/apache/axis/description/TypeDesc.java",
                "status": "modified",
                "additions": 10,
                "deletions": 2,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/description/TypeDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/description/TypeDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/TypeDesc.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -55,6 +55,8 @@\n \n package org.apache.axis.description;\n \n+import org.apache.axis.utils.JavaUtils;\n+\n import javax.xml.namespace.QName;\n import java.lang.reflect.Method;\n import java.util.HashMap;\n@@ -177,8 +179,14 @@ public void setFields(FieldDesc [] newFields)\n      */\n     public void addFieldDesc(FieldDesc field)\n     {\n-        if (field == null)\n-            throw new NullPointerException();\n+        if (field == null) {\n+            //XXX TypeDesc is published and should not throw NPEs\n+            // An exception has been coded in the source code checks\n+            // in test.utils.TestSrcContent which should be removed\n+            // when this NPE is removed.\n+            throw new NullPointerException(\n+                    JavaUtils.getMessage(\"nullFieldDesc\"));\n+        }\n         \n         int numFields = 0;\n         if (fields != null) {"
            },
            {
                "sha": "b810440369f9558c5157e66a8c0cccd27b8322ec",
                "filename": "src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -57,6 +57,7 @@\n \n import org.apache.axis.Constants;\n import org.apache.axis.encoding.ser.*;\n+import org.apache.axis.utils.JavaUtils;\n \n import javax.xml.namespace.QName;\n import javax.xml.rpc.JAXRPCException;\n@@ -429,15 +430,15 @@ public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.DeserializerFactory dsf)\n         throws JAXRPCException {\n \n-        throw new JAXRPCException();\n+        throw new JAXRPCException(JavaUtils.getMessage(\"fixedTypeMapping\"));\n     }\n     public void removeSerializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(JavaUtils.getMessage(\"fixedTypeMapping\"));\n     }\n     public void removeDeserializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(JavaUtils.getMessage(\"fixedTypeMapping\"));\n     }\n     public void setSupportedEncodings(String[] namespaceURIs) {\n     }"
            },
            {
                "sha": "d44069acab47ec0661aaccd559fc9bb5893ac833",
                "filename": "src/org/apache/axis/encoding/TypeMappingDelegate.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/TypeMappingDelegate.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/TypeMappingDelegate.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingDelegate.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -56,6 +56,7 @@\n package org.apache.axis.encoding;\n \n import org.apache.axis.Constants;\n+import org.apache.axis.utils.JavaUtils;\n \n import javax.xml.namespace.QName;\n import javax.xml.rpc.JAXRPCException;\n@@ -101,7 +102,8 @@ public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.DeserializerFactory dsf)\n         throws JAXRPCException {        \n \n-        throw new JAXRPCException();\n+        throw new JAXRPCException(\n+                JavaUtils.getMessage(\"delegatedTypeMapping\"));\n     }\n     \n     public javax.xml.rpc.encoding.SerializerFactory \n@@ -138,12 +140,14 @@ public void register(Class javaType, QName xmlType,\n \n     public void removeSerializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(\n+                JavaUtils.getMessage(\"delegatedTypeMapping\"));\n     }\n \n     public void removeDeserializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n-        throw new JAXRPCException();\n+        throw new JAXRPCException(\n+                JavaUtils.getMessage(\"delegatedTypeMapping\"));\n     }\n \n    public boolean isRegistered(Class javaType, QName xmlType) {"
            },
            {
                "sha": "1960f32eed6f79f186975eefcd20942a10c4ebfb",
                "filename": "src/org/apache/axis/encoding/TypeMappingImpl.java",
                "status": "modified",
                "additions": 24,
                "deletions": 10,
                "changes": 34,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingImpl.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -56,6 +56,7 @@\n package org.apache.axis.encoding;\n \n import org.apache.axis.Constants;\n+import org.apache.axis.utils.JavaUtils;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -202,7 +203,9 @@ public boolean isRegistered(Class javaType, QName xmlType) {\n         if (javaType == null || xmlType == null) {\n             // REMOVED_FOR_TCK\n             // return false;\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n         }\n         if (pair2SF.keySet().contains(new Pair(javaType, xmlType))) {\n             return true;\n@@ -229,21 +232,28 @@ public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.DeserializerFactory dsf)\n         throws JAXRPCException {\n \n-        // Both javaType and xmlType must be specified, and\n-        // at least a serializer or deserializer factory must be specified.\n-        if (javaType == null || xmlType == null ||\n-            (sf == null && dsf == null)) {\n-            throw new JAXRPCException();\n+        // Both javaType and xmlType must be specified.\n+        if (javaType == null || xmlType == null) {\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n+        }\n+\n+        // At least a serializer or deserializer factory must be specified.\n+        if (sf == null && dsf == null) {\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(sf == null ?\n+                                         \"badSerFac\" : \"badDeserFac\"));\n         }\n \n         //REMOVED_FOR_TCK\n         //if (sf != null &&\n         //    !(sf instanceof javax.xml.rpc.encoding.SerializerFactory)) {\n-        //    throw new JAXRPCException();\n+        //    throw new JAXRPCException(message text);\n         //}\n         //if (dsf != null &&\n         //    !(dsf instanceof javax.xml.rpc.encoding.DeserializerFactory)) {\n-        //    throw new JAXRPCException();\n+        //    throw new JAXRPCException(message text);\n         //}\n \n         Pair pair = new Pair(javaType, xmlType);\n@@ -350,7 +360,9 @@ public void register(Class javaType, QName xmlType,\n     public void removeSerializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n         if (javaType == null || xmlType == null) {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n         }\n \n         Pair pair = new Pair(javaType, xmlType);\n@@ -370,7 +382,9 @@ public void removeSerializer(Class javaType, QName xmlType)\n     public void removeDeserializer(Class javaType, QName xmlType)\n         throws JAXRPCException {\n         if (javaType == null || xmlType == null) {\n-            throw new JAXRPCException();\n+            throw new JAXRPCException(\n+                    JavaUtils.getMessage(javaType == null ?\n+                                         \"badJavaType\" : \"badXmlType\"));\n         }\n         Pair pair = new Pair(javaType, xmlType);\n         pair2DF.remove(pair);"
            },
            {
                "sha": "684525cd43b57e39422f529e21f596db5dc7d80b",
                "filename": "src/org/apache/axis/encoding/TypeMappingRegistryImpl.java",
                "status": "modified",
                "additions": 18,
                "deletions": 9,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/TypeMappingRegistryImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/encoding/TypeMappingRegistryImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingRegistryImpl.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -249,10 +249,12 @@ public void delegate(TypeMappingRegistry secondaryTMR) {\n //        namespaceURI = \"\";\n         if (mapping == null || \n             !(mapping instanceof TypeMapping)) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"badTypeMapping\"));\n         } \n         if (namespaceURI == null) {\n-            throw new java.lang.IllegalArgumentException();\n+            throw new java.lang.IllegalArgumentException(\n+                    JavaUtils.getMessage(\"nullNamespaceURI\"));\n         }\n         // Get or create a TypeMappingDelegate and set it to \n         // delegate to the new mapping.\n@@ -274,17 +276,24 @@ public void delegate(TypeMappingRegistry secondaryTMR) {\n      * @param mapping - TypeMapping for specific type namespaces\n      *\n      * java.lang.IllegalArgumentException - \n-     * if an invalid namespace URI is specified\n+     * if an invalid type mapping is specified or the delegate is already set\n      */\n     public void registerDefault(javax.xml.rpc.encoding.TypeMapping mapping) {\n         if (mapping == null || \n-            !(mapping instanceof TypeMapping) ||\n-            // Don't allow this call after the delegate() method since\n-            // the TMR's TypeMappings will be using the default type mapping\n-            // of the secondary TMR.\n-            defaultDelTM.getDelegate() instanceof TypeMappingDelegate) {\n-            throw new IllegalArgumentException();\n+            !(mapping instanceof TypeMapping)) {\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"badTypeMapping\"));\n+        }\n+\n+        /* Don't allow this call after the delegate() method since\n+         * the TMR's TypeMappings will be using the default type mapping\n+         * of the secondary TMR.\n+         */\n+        if (defaultDelTM.getDelegate() instanceof TypeMappingDelegate) {\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"defaultTypeMappingSet\"));\n         }\n+\n         defaultDelTM.setDelegate((TypeMapping) mapping);\n     }\n         "
            },
            {
                "sha": "cbf4f79b8a608cda39bf0cff641d07a7fba0aa19",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -155,7 +155,7 @@ public void processMessage (MessageContext msgContext,\n \n         if (body == null) {\n             // throw something\n-            throw new Exception();\n+            throw new Exception(JavaUtils.getMessage(\"noBody00\"));\n         }\n         String methodName = body.getMethodName();\n         Vector args = body.getParams();"
            },
            {
                "sha": "8f6339c3423632b4019984eadb8244c7d0aeb255",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -290,9 +290,11 @@ public static void main(String args[]) throws Exception {\n             log.error( \"<list/>\" );\n \n \n-            // throw an Exception which will go uncaught!  this way, a test suite\n-            // can invoke main() and detect the exception\n-            throw new IllegalArgumentException();\n+            // throw an Exception which will go uncaught!  this way, a test\n+            // suite can invoke main() and detect the exception\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(\"usage00\", \n+                                         \"Admin client|server <xml-file>\"));\n             // System.exit( 1 );\n         }\n "
            },
            {
                "sha": "3b362d2a30396da84c4d3d7276772bcf8bb37428",
                "filename": "src/org/apache/axis/utils/BeanPropertyDescriptor.java",
                "status": "modified",
                "additions": 11,
                "deletions": 3,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/BeanPropertyDescriptor.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/BeanPropertyDescriptor.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/BeanPropertyDescriptor.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -101,7 +101,11 @@ public BeanPropertyDescriptor(String _name,\n         getter = _getter;\n         setter = _setter;\n         if (_getter == null || _setter == null || _name == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(_getter == null ?\n+                                         \"badGetter00\" :\n+                                         (_setter == null ?\n+                                         \"badSetter00\" : \"badProp03\")));\n         }\n     }\n \n@@ -123,7 +127,9 @@ public BeanPropertyDescriptor(String _name,\n         getterIndexed = _getterIndexed;\n         setterIndexed = _setterIndexed;\n         if (_getterIndexed == null || _setterIndexed == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(_getterIndexed == null ?\n+                                         \"badAccessor00\" : \"badModifier00\"));\n         }\n     }\n \n@@ -138,7 +144,9 @@ public BeanPropertyDescriptor(String _name,\n         name = _name;\n         field = _field;\n         if (_field == null || _name == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\n+                    JavaUtils.getMessage(_field == null ?\n+                                         \"badField00\" : \"badProp03\"));\n         }\n     }\n     "
            },
            {
                "sha": "f27f2880df21fcb35d929386382e2cf3feeac22d",
                "filename": "src/org/apache/axis/utils/JavaUtils.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/JavaUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/JavaUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/JavaUtils.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -809,13 +809,13 @@ public static Class getHolderValueType(Class type) {\n      */\n     public static Object getHolderValue(Object holder) throws HolderException {\n         if (!(holder instanceof javax.xml.rpc.holders.Holder)) {\n-            throw new HolderException();\n+            throw new HolderException(getMessage(\"badHolder00\"));\n         }\n         try {\n             Field valueField = holder.getClass().getField(\"value\");\n             return valueField.get(holder);\n         } catch (Exception e) {\n-            throw new HolderException();\n+          throw new HolderException(getMessage(\"exception01\", e.getMessage()));\n         }\n     }\n \n@@ -826,7 +826,7 @@ public static Object getHolderValue(Object holder) throws HolderException {\n      */\n     public static void setHolderValue(Object holder, Object value) throws HolderException {\n         if (!(holder instanceof javax.xml.rpc.holders.Holder)) {\n-            throw new HolderException();\n+            throw new HolderException(getMessage(\"badHolder00\"));\n         }\n         try {\n             Field valueField = holder.getClass().getField(\"value\");\n@@ -839,12 +839,13 @@ public static void setHolderValue(Object holder, Object value) throws HolderExce\n                 valueField.set(holder, value);\n             }\n         } catch (Exception e) {\n-            throw new HolderException();\n+          throw new HolderException(getMessage(\"exception01\", e.getMessage()));\n         }\n     }\n     public static class HolderException extends Exception\n     {\n-        public HolderException () {}\n+        private HolderException () {}\n+        public HolderException(String msg) { super(msg); }\n     };\n \n "
            },
            {
                "sha": "00336b7ca2b807c4a3ac7d00dfc1af7f641047d8",
                "filename": "src/org/apache/axis/utils/axisNLS.properties",
                "status": "modified",
                "additions": 29,
                "deletions": 0,
                "changes": 29,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/axisNLS.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/utils/axisNLS.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/axisNLS.properties?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -43,6 +43,7 @@ badDate00=Invalid date\n badDateTime00=Invalid date/time\n badElem00=Invalid element in {0} - {1}\n badHandlerClass00=Class ''{0}'' is not a Handler (can't be used in HandlerProvider)!\n+badHolder00=Holder of wrong type.\n badInteger00=Explicit array length is not a valid integer ''{0}''.\n \n # NOTE:  in badMsgCtx00, do not translate \"--messageContext\", \"--skeleton\"\n@@ -52,6 +53,8 @@ badNameAttr00=No ''name'' attribute was specified in an undeployment element\n badNamespace00=Bad envelope namespace:  {0}\n badOffset00=Malformed offset attribute ''{0}''.\n badpackage00=Error: --NStoPKG and --package switch can't be used together\n+# NOTE:  in badParmMode00, do not translate \"Parameter\".\n+badParmMode00=Invalid Parameter mode {0}.\n badPosition00=Malformed position attribute ''{0}''.\n badProxy00=Proxy port number, \"{0}\", incorrectly formatted\n \n@@ -222,6 +225,7 @@ gotPrincipal00=Got principal:  {0}\n gotResponse00=Got response message\n gotType00={0} got type {1}\n gotValue00={0} got value {1}\n+handlerRegistryConfig=Service does not support configuration of a HandlerRegistry \n headers00=headers\n headerPresent=Header already present\n \n@@ -275,6 +279,9 @@ noArrayType00=No arrayType attribute for array!\n # NOTE:  in noBeanHome00, do not translate \"EJBProvider\"\n noBeanHome00=EJBProvider cannot get Bean Home\n \n+# NOTE:  in noBody00, do not translate \"Body\"\n+noBody00=Body not found.\n+\n noChains00=Services must use targeted chains\n noClass00=Could not create class {0}\n \n@@ -434,6 +441,7 @@ nullCall00=AdminClient did not initialize correctly: ''call'' is null!\n nullEJBUser00=Null user in EJBProvider\n \n nullHandler00={0}:  Null handler;\n+nullNamespaceURI=Null namespace URI specified.\n nullParent00=null parent!\n \n nullProvider00=Null provider type passed to WSDDProvider!\n@@ -685,6 +693,19 @@ builtOn=Built on #today#\n badProp00=Bad property.  The value for {0} should be of type {1}, but it is of type {2}.\n badProp01=Bad property.  {0} should be {1}; but it is {2}.\n badProp02=Cannot set {0} property when {1} property is not {2}.\n+badProp03=Null property name specified.\n+badProp04=Null property value specified.\n+badProp05=Property name {0} not supported.\n+badGetter00=Null getter method specified.\n+badAccessor00=Null accessor method specified.\n+badSetter00=Null setter method specified.\n+badModifier00=Null modifier method specified.\n+badField00=Null public instance field specified.\n+\n+badJavaType=Null java class specified.\n+badXmlType=Null qualified name specified.\n+badSerFac=Null serializer factory specified.\n+badDeserFac=Null deserializer factory specified.\n \n literalTypePart00=Error: Message part {0} of operation or fault {1} is specified as a type and the soap:body use of binding \"{2}\" is literal.  This WSDL is not currently supported.\n BadServiceName00=Error: Empty or missing service name\n@@ -707,7 +728,9 @@ noTransport02=Couldn't find transport {0}\n noCompiler00=Compiler found in your classpath.  Make sure you added 'tools.jar'\n compilerFail00=Please ensure that you have your JDK's rt.jar listed in your classpath. Jikes needs it to operate.\n \n+nullFieldDesc=Null FieldDesc specified\n exception00=Exception:\n+exception01=Exception: {0}\n axisConfigurationException00=ConfigurationException:\n parserConfigurationException00=ParserConfigurationException:\n SAXException00=SAXException:\n@@ -787,6 +810,8 @@ compilerClass=Javac compiler class:  {0}\n noMoreTokens=no more tokens - could not parse error message:  {0}\n cantParse=could not parse error message:  {0}\n \n+noParmAndRetReq=Parameter or return type inferred from WSDL and may not be updated.\n+\n # NOTE:  in sunJavac, do not translate \"Sun Javac\"\n sunJavac=Sun Javac Compiler\n \n@@ -813,6 +838,10 @@ badTypeNode=Error: Missing type resolution for element {2}, in WSDL message part\n # NOTE:  in noUse, do no translate \"soap:operation\", \"binding operation\", \"use\".\n noUse=The soap:operation for binding operation {0} must have a \"use\" attribute.\n \n+fixedTypeMapping=Default type mapping cannot be modified.\n+delegatedTypeMapping=Type mapping cannot be modified via delegate.\n+badTypeMapping=Invalid TypeMapping specified: wrong type or null.\n+defaultTypeMappingSet=Default type mapping from secondary type mapping registry is already in use.\n getPortDoc00=For the given interface, get the stub implementation.\n getPortDoc01=If this service has no port for the given interface,\n getPortDoc02=then ServiceException is thrown."
            },
            {
                "sha": "9fcd19ed279c961a63991963febccf8c8418317b",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -303,7 +303,8 @@ public void generate() throws IOException {\n                     gen = (Generator) ctor.newInstance(actualArgs);\n                 }\n                 catch (Throwable t) {\n-                    throw new IOException();\n+                    throw new IOException(\n+                        JavaUtils.getMessage(\"exception01\", t.getMessage()));\n                 }\n                 gen.generate();\n             }"
            },
            {
                "sha": "694a7f7ef8d434ae6090cc03e0b85687ce1a3364",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaSkelWriter.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -81,6 +81,8 @@\n import org.apache.axis.wsdl.symbolTable.SymbolTable;\n import org.apache.axis.wsdl.symbolTable.TypeEntry;\n \n+import org.apache.axis.utils.JavaUtils;\n+\n /**\n * This is Wsdl2java's skeleton writer.  It writes the <BindingName>Skeleton.java\n * file which contains the <bindingName>Skeleton class.\n@@ -171,7 +173,9 @@ protected void writeFileBody(PrintWriter pw) throws IOException {\n                             modeStr = \"org.apache.axis.description.ParameterDesc.INOUT\";\n                             break;\n                         default:\n-                            throw new IOException();\n+                            throw new IOException(\n+                                JavaUtils.getMessage(\"badParmMode00\", \n+                                        (new Byte(p.getMode())).toString()));\n                     }\n                     // Construct a parameter with the parameter name, mode, type qname\n                     // a type javaType."
            },
            {
                "sha": "07a1dd44a06c9c95eeae57a6b7fb08207583d365",
                "filename": "test/utils/TestSrcContent.java",
                "status": "modified",
                "additions": 24,
                "deletions": 0,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/test/utils/TestSrcContent.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140/test/utils/TestSrcContent.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/utils/TestSrcContent.java?ref=dc25b4b9ffeba0cb519f25f3ca1ec311f6a18140",
                "patch": "@@ -37,6 +37,8 @@\n  * - Verify that log.info(), log.warn(), log.error(), and log.fatal()\n  *   use JavaUtils.getMessage() (i18n).\n  *\n+ * - Verify that exceptions are created with JavaUtils.getMessage() (i18n).\n+ *\n  * To add new patterns, search for and append to the\n  * private attribute 'avoidPatterns'.\n  *\n@@ -187,6 +189,28 @@ boolean noMatch(String name, String content)\n                                        + \"(?![ \\\\t]*JavaUtils\\\\.getMessage)\",\n                                        false),\n \n+            // Verify that exceptions are built with messages.\n+\n+            new FileNameContentPattern(\".+([\\\\\\\\/])\"\n+                                       + \"java\\\\1src\\\\1org\\\\1apache\\\\1axis\\\\1\"\n+                                       + \"([a-zA-Z0-9_]+\\\\1)*\"\n+                                       + \"[^\\\\\\\\/]+\\\\.java\",\n+                                       \"new[ \\\\t]+[a-zA-Z0-9_]*\"\n+                                       + \"Exception\\\\(\\\\)\",\n+                                       false),\n+\n+            // Verify that we don't explicitly create NPEs.\n+            // NPE in TypeDesc needs removing.\n+\n+            new FileNameContentPattern(\".+([\\\\\\\\/])\"\n+                                       + \"java\\\\1src\\\\1org\\\\1apache\\\\1axis\\\\1\"\n+                                       + \"(?!description\\\\1TypeDesc\\\\.java)\"\n+                                       + \"([a-zA-Z0-9_]+\\\\1)*\"\n+                                       + \"[^\\\\\\\\/]+\\\\.java\",\n+                                       \"new[ \\\\t]+\"\n+                                       + \"NullPointerException\",\n+                                       false),\n+\n         };\n \n     private void checkFile(File file) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/3f4de3105947c9525ac77f37b7d9430ed1f031d8",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/512cdf13dcdcf9b4c400f359f91680814866186d",
        "message": "Moving whitemesa interop tests to a separate maven goal. Please run \"maven itest\" from modules/integration to run that test. i will hook it up better (\"maven all-tests\" from root) tomorrow.\n\nFYI, right now it fails with an NPE. Gayan, PLEASE fix it ASAP!\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis/trunk/java@239510 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_132",
        "file": [
            {
                "sha": "6affbedd72d32ce16f03126462b7240ce9a1c9ca",
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resBaseStrutFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resBaseStrutFault.xml"
            },
            {
                "sha": "78069365b6efce9ca3a5306b4bc1daeeb9c2f2c9",
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resExtendedStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resExtendedStructFault.xml"
            },
            {
                "sha": "32332c4b1c9b47ad41f354d70e416e6a9b298a07",
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resMultipleFaults1.xml"
            },
            {
                "sha": "f09c81feb09d57373046e25abd1a2814b71c24d9",
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resMultipleFaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resMultipleFaults2.xml"
            },
            {
                "sha": "1f8db5952b5b2ed7d2b9ddd880b0a4471a5244cb",
                "filename": "modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/sun/round4/complex/resSoapStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/sun/round4/complex/resSoapStructFault.xml"
            },
            {
                "sha": "981546c922c977b14080503854104cc4347bb363",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1FloatArrayRes.xml"
            },
            {
                "sha": "a61d026227436910fb861c9f18ba186f25475656",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1FloatRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1FloatRes.xml"
            },
            {
                "sha": "743bab8718b4975a92620d3954d0fd4c098ba6de",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1IntArrayRes.xml"
            },
            {
                "sha": "97ea17c73b674e7a46ceff2f0ad7f173f634f747",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1IntegerRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1IntegerRes.xml"
            },
            {
                "sha": "8d8dc2496a06ef8c81c839222e550f9ddcf1781a",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StringArrayRes.xml"
            },
            {
                "sha": "d4f5263ea126d26b297b9d6b5dfe029c62bfeb0b",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StringUtilRes.xml"
            },
            {
                "sha": "528605af78add6c3c58eae850e4ae482a296b567",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StructArrayRes.xml"
            },
            {
                "sha": "044498b82666ec9bd78700c4251912725ef76bbd",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1StructRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1StructRes.xml"
            },
            {
                "sha": "2f2761fdc5d27dc5ecfed7a4db0d586ed8c523c7",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round1/Round1VoidUtilRes.xml"
            },
            {
                "sha": "2168cf98d8c180cd652c7337b09926283ca4a62f",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resBaseStructFault.xml"
            },
            {
                "sha": "5f442bc53c5edcae27a0ebbfa1f034b9b04ef6e2",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resExtendedStructFault.xml"
            },
            {
                "sha": "5c8b7787c5e22a3234e1874ebba1d540808aadbb",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resMultipleFaults1.xml"
            },
            {
                "sha": "f09c81feb09d57373046e25abd1a2814b71c24d9",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resMultipleFaults2.xml"
            },
            {
                "sha": "b5bb77651eb16e410cc55a7afeb2d0767ce37211",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/complex/resSoapStructFault.xml"
            },
            {
                "sha": "7adf3a262eab88d9a8c2c1b27a1e2992ce202056",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resEmptyFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resEmptyFault.xml"
            },
            {
                "sha": "5fadd30dad0ed27639836fcf997712bef89c8aae",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resIntArray.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resIntArray.xml"
            },
            {
                "sha": "eb56f608d176b618b7dc184b35ee36b81b4ecdcd",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults1.xml"
            },
            {
                "sha": "6d972cca1bb3a290ce5023f2d9a3a8c80074c840",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults3.xml"
            },
            {
                "sha": "b4e8d045c18221e6c4ab0941c4eda7ecf8fa9974",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultipleFaults4.xml"
            },
            {
                "sha": "88585bed552c5ebf5711c650213acb682ae7954b",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resMultiplefaults2.xml"
            },
            {
                "sha": "88a1bf84e206ee5e7237a87f17b557c14de30bc5",
                "filename": "modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest-resources/interopt/whitemesa/round4/res/resStringFault.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test-resources/interopt/whitemesa/round4/res/resStringFault.xml"
            },
            {
                "sha": "a8639649ebba93ed121f1cf1ac9a3ebf02263bc9",
                "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round1/Round1InteropTest.java"
            },
            {
                "sha": "a2635a3fe276a5476dbebc2b90e4557946e26fcc",
                "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round4/complex/WhitemesaR4ComplexTest.java"
            },
            {
                "sha": "84ada44f2dbd92eab44522b7dd0cefe86fe70888",
                "filename": "modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/itest/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "previous_filename": "modules/integration/test/org/apache/axis2/interopt/whitmesa/round4/simple/WhitemesaR4SimpleTest.java"
            },
            {
                "sha": "3c4a4a956362b656bdc5ab81c4ed41238967697f",
                "filename": "modules/integration/maven.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/maven.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/maven.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/maven.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "patch": "@@ -8,6 +8,13 @@\n     xmlns:deploy=\"deploy\"\r\n     xmlns:ant=\"jelly:ant\">\r\n     <j:set var=\"samples.dir\" value=\"target/samples\"/>\r\n+\r\n+    <postGoal name=\"itest:compile\">\r\n+        <mkdir dir=\"target/itest-classes/modules\"/>\r\n+        <copy file=\"../addressing/target/addressing.mar\"\r\n+              tofile=\"target/itest-classes/modules/addressing.mar\"/>\r\n+    </postGoal>\r\n+\r\n     <postGoal name=\"test:compile\">\r\n         <mkdir dir=\"target/test-resources/samples/modules\"/>\r\n         <mkdir dir=\"target/test-resources/repository-client/modules\"/>\r"
            },
            {
                "sha": "aff99ab3bd17a73f01e0f693e07be1e43aa85456",
                "filename": "modules/integration/project.properties",
                "status": "added",
                "additions": 25,
                "deletions": 0,
                "changes": 25,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/project.properties?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "patch": "@@ -0,0 +1,25 @@\n+# -------------------------------------------------------------------\n+# Copyright 2001-2004 The Apache Software Foundation.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -------------------------------------------------------------------\n+\n+maven.repo.remote=http://cvs.apache.org/repository/, http://www.ibiblio.org/maven,http://www.apache.org/dist/java-repository/,http://www.openejb.org/maven\n+maven.multiproject.type=jar\n+\n+maven.itest.resources=${basedir}/itest-resources\n+maven.itest.src=${basedir}/itest\n+maven.itest.includes=**/*.java\n+\n+maven.junit.fork=true\n+maven.junit.jvmargs=-ea"
            },
            {
                "sha": "b253f88721267b43446081eb93b3573d7f9c63f4",
                "filename": "modules/integration/project.xml",
                "status": "modified",
                "additions": 14,
                "deletions": 0,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/project.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/project.xml?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "patch": "@@ -162,6 +162,20 @@\n                 <module>true</module>\r\n             </properties>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>maven-itest-plugin</groupId>\r\n+            <artifactId>maven-itest-plugin</artifactId>\r\n+            <version>1.0</version>\r\n+            <type>plugin</type>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>junit</groupId>\r\n+            <artifactId>junit</artifactId>\r\n+            <version>3.8.1</version>\r\n+                <properties>\r\n+                    <classloader>root</classloader>\r\n+            </properties>\r\n+        </dependency>\r\n \r\n     </dependencies>\r\n \r"
            },
            {
                "sha": "b708d8c8d30225e9c13da17b26a36151e2382999",
                "filename": "modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/src/org/apache/axis2/interopt/whitemesa/round1/Round1Client.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "patch": "@@ -29,7 +29,7 @@ public SOAPEnvelope sendMsg(Round1ClientUtil util, String epUrl, String soapActi\n             throw new AxisFault(e);\r\n         }\r\n \r\n-        Call call = new Call(\"target/test-resources/intregrationRepo\");\r\n+        Call call = new Call(\"target/itest-resources/intregrationRepo\");\r\n         call.setTo(new EndpointReference(url.toString()));\r\n         call.setSoapAction(soapAction);\r\n         call.setTransportInfo(Constants.TRANSPORT_HTTP, Constants.TRANSPORT_HTTP, false);\r"
            },
            {
                "sha": "b5963673e4e72620281c3d8ceab30bb84eddc164",
                "filename": "modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/3f4de3105947c9525ac77f37b7d9430ed1f031d8/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/modules/integration/test/org/apache/axis2/engine/CallUnregisteredServiceTest.java?ref=3f4de3105947c9525ac77f37b7d9430ed1f031d8",
                "patch": "@@ -79,7 +79,7 @@ public void testEchoXMLSync() throws Exception {\n             method.addChild(value);\n //            reqEnv.getBody().addChild(method);\n \n-            Call call = new Call(\"target/test-resources/intregrationRepo\");\n+            Call call = new Call();\n             EndpointReference targetEPR =\n                     new EndpointReference(\"http://127.0.0.1:\"\n                     + (UtilServer.TESTING_PORT)"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/021f968c59a3cef71bf83d4f4282c810f8470663",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/bcb65df36f62756b26b1a8d8b906e2b46c2dd6fa",
        "message": "Patch for a regression issue introduced by revision 1.43, resulting NPE.\nBasically adding two lines for null check, but the diff might show lot of lines with white space modifications due to adjusting indentation after adding the check.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@261793 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_133",
        "file": [
            {
                "sha": "3e47fb0fbf74733ac914356b5c417c8245153b77",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "status": "modified",
                "additions": 26,
                "deletions": 22,
                "changes": 48,
                "blob_url": "https://github.com/apache/axis1-java/blob/021f968c59a3cef71bf83d4f4282c810f8470663/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/021f968c59a3cef71bf83d4f4282c810f8470663/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaStubWriter.java?ref=021f968c59a3cef71bf83d4f4282c810f8470663",
                "patch": "@@ -1284,32 +1284,36 @@ protected void writeResponseHandling(PrintWriter pw, Parameters parms) {\n         }\n         // End catch\n         // Get faults\n+        \n         Map faults = parms.faults;\n         // Get faults of signature\n         List exceptionsThrowsList = new ArrayList();\n-        int index = parms.signature.indexOf(\"throws\");\n-        if (index != -1) {\n-            String[] thrExcep = StringUtils.split(parms.signature.substring(index+6),',');\n-            for (int i = 0; i < thrExcep.length; i++) {\n-                exceptionsThrowsList.add(thrExcep[i].trim());\n-            }\n-        }\n-        pw.println(\"  } catch (org.apache.axis.AxisFault axisFaultException) {\");\n-        if (faults != null && faults.size() > 0) {\n-            pw.println(\"    if (axisFaultException.detail != null) {\");\n-            for (Iterator faultIt = exceptionsThrowsList.iterator(); faultIt\n-                    .hasNext();) {\n-                String exceptionFullName = (String) faultIt.next();\n-                pw.println(\"        if (axisFaultException.detail instanceof \"\n-                        + exceptionFullName + \") {\");\n-                pw.println(\"              throw (\" + exceptionFullName\n-                        + \") axisFaultException.detail;\");\n-                pw.println(\"         }\");\n-            }\n-            pw.println(\"   }\");\n+        \n+        if (parms.signature != null) {\n+\t        int index = parms.signature.indexOf(\"throws\");\n+\t        if (index != -1) {\n+\t            String[] thrExcep = StringUtils.split(parms.signature.substring(index+6),',');\n+\t            for (int i = 0; i < thrExcep.length; i++) {\n+\t                exceptionsThrowsList.add(thrExcep[i].trim());\n+\t            }\n+\t        }\n+\t        pw.println(\"  } catch (org.apache.axis.AxisFault axisFaultException) {\");\n+\t        if (faults != null && faults.size() > 0) {\n+\t            pw.println(\"    if (axisFaultException.detail != null) {\");\n+\t            for (Iterator faultIt = exceptionsThrowsList.iterator(); faultIt\n+\t                    .hasNext();) {\n+\t                String exceptionFullName = (String) faultIt.next();\n+\t                pw.println(\"        if (axisFaultException.detail instanceof \"\n+\t                        + exceptionFullName + \") {\");\n+\t                pw.println(\"              throw (\" + exceptionFullName\n+\t                        + \") axisFaultException.detail;\");\n+\t                pw.println(\"         }\");\n+\t            }\n+\t            pw.println(\"   }\");\n+\t        }\n+\t        pw.println(\"  throw axisFaultException;\");\n+\t        pw.println(\"}\");\n         }\n-        pw.println(\"  throw axisFaultException;\");\n-        pw.println(\"}\");\n     }    // writeResponseHandling\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/485d154afef77a9c9f047d52224d038100fb2399",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a6326ea2021983f9b346705f9ffcb1801647cff5",
        "message": "Partial fix for AXIS-1932 - global configuration properties axis.disableServiceList and axis.servicesPath don't work\n\nNotes:\n- just prevent the NPE for now to take this off the blocker list.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@261179 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_134",
        "file": [
            {
                "sha": "1ebbd40bc99d3ac8dfd22bde8fcee0f3651dda3e",
                "filename": "src/org/apache/axis/transport/http/AxisServlet.java",
                "status": "modified",
                "additions": 51,
                "deletions": 49,
                "changes": 100,
                "blob_url": "https://github.com/apache/axis1-java/blob/485d154afef77a9c9f047d52224d038100fb2399/src/org/apache/axis/transport/http/AxisServlet.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/485d154afef77a9c9f047d52224d038100fb2399/src/org/apache/axis/transport/http/AxisServlet.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/AxisServlet.java?ref=485d154afef77a9c9f047d52224d038100fb2399",
                "patch": "@@ -251,58 +251,60 @@ public void doGet(HttpServletRequest request, HttpServletResponse response) thro\n             }\n \n             boolean hasNoPath = (pathInfo == null || pathInfo.equals(\"\"));\n-            if (!disableServicesList && hasNoPath) {\n-                // If the user requested the servlet (i.e. /axis/servlet/AxisServlet)\n-                // with no service name, present the user with a list of deployed\n-                // services to be helpful\n-                // Don't do this if has been turned off\n-                reportAvailableServices(response, writer, request);\n-            } else if (realpath != null) {\n-                // We have a pathname, so now we perform WSDL or list operations\n-\n-                // get message context w/ various properties set\n-                MessageContext msgContext = createMessageContext(engine,\n-                        request, response);\n-\n-                // NOTE:  HttpUtils.getRequestURL has been deprecated.\n-                // This line SHOULD be:\n-                //    String url = req.getRequestURL().toString()\n-                // HOWEVER!!!!  DON'T REPLACE IT!  There's a bug in\n-                // req.getRequestURL that is not in HttpUtils.getRequestURL\n-                // req.getRequestURL returns \"localhost\" in the remote\n-                // scenario rather than the actual host name.\n-                //\n-                // But more importantly, getRequestURL() is a servlet 2.3\n-                // API and to support servlet 2.2 (aka WebSphere 4)\n-                // we need to leave this in for a while longer. tomj 10/14/2004\n-                //\n-                String url = HttpUtils.getRequestURL(request).toString();\n-\n-                msgContext.setProperty(MessageContext.TRANS_URL, url);\n-\n-                // See if we can locate the desired service.  If we\n-                // can't, return a 404 Not Found.  Otherwise, just\n-                // print the placeholder message.\n-\n-                String serviceName;\n-                if (pathInfo.startsWith(\"/\")) {\n-                    serviceName = pathInfo.substring(1);\n-                } else {\n-                    serviceName = pathInfo;\n-                }\n-\n-                SOAPService s = engine.getService(serviceName);\n-                if (s == null) {\n-                    //no service: report it\n-                    if (isJWSPage) {\n-                        reportCantGetJWSService(request, response, writer);\n+            if (!disableServicesList) {\n+                if(hasNoPath) {\n+                    // If the user requested the servlet (i.e. /axis/servlet/AxisServlet)\n+                    // with no service name, present the user with a list of deployed\n+                    // services to be helpful\n+                    // Don't do this if has been turned off\n+                    reportAvailableServices(response, writer, request);\n+                } else if (realpath != null) {\n+                    // We have a pathname, so now we perform WSDL or list operations\n+\n+                    // get message context w/ various properties set\n+                    MessageContext msgContext = createMessageContext(engine,\n+                            request, response);\n+\n+                    // NOTE:  HttpUtils.getRequestURL has been deprecated.\n+                    // This line SHOULD be:\n+                    //    String url = req.getRequestURL().toString()\n+                    // HOWEVER!!!!  DON'T REPLACE IT!  There's a bug in\n+                    // req.getRequestURL that is not in HttpUtils.getRequestURL\n+                    // req.getRequestURL returns \"localhost\" in the remote\n+                    // scenario rather than the actual host name.\n+                    //\n+                    // But more importantly, getRequestURL() is a servlet 2.3\n+                    // API and to support servlet 2.2 (aka WebSphere 4)\n+                    // we need to leave this in for a while longer. tomj 10/14/2004\n+                    //\n+                    String url = HttpUtils.getRequestURL(request).toString();\n+\n+                    msgContext.setProperty(MessageContext.TRANS_URL, url);\n+\n+                    // See if we can locate the desired service.  If we\n+                    // can't, return a 404 Not Found.  Otherwise, just\n+                    // print the placeholder message.\n+\n+                    String serviceName;\n+                    if (pathInfo.startsWith(\"/\")) {\n+                        serviceName = pathInfo.substring(1);\n                     } else {\n-                        reportCantGetAxisService(request, response, writer);\n+                        serviceName = pathInfo;\n                     }\n \n-                } else {\n-                    //print a snippet of service info.\n-                    reportServiceInfo(response, writer, s, serviceName);\n+                    SOAPService s = engine.getService(serviceName);\n+                    if (s == null) {\n+                        //no service: report it\n+                        if (isJWSPage) {\n+                            reportCantGetJWSService(request, response, writer);\n+                        } else {\n+                            reportCantGetAxisService(request, response, writer);\n+                        }\n+\n+                    } else {\n+                        //print a snippet of service info.\n+                        reportServiceInfo(response, writer, s, serviceName);\n+                    }\n                 }\n             } else {\n                 // We didn't have a real path in the request, so just"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/44e158aabcc766b7e9b9dac13e0d67ab1c0e464b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/7a7be93a6869850532e9e1719dc8de0647299d64",
        "message": "Fix for AXIS-1714 - Java2WSDL throws NPE on WSDLs that import schema from a file\nfrom Mark Hansen (m.hansen23@verizon.net)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@260501 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_135",
        "file": [
            {
                "sha": "133a1aa958b8fb2841e9980275cb7aedbe4834df",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/44e158aabcc766b7e9b9dac13e0d67ab1c0e464b/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/44e158aabcc766b7e9b9dac13e0d67ab1c0e464b/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=44e158aabcc766b7e9b9dac13e0d67ab1c0e464b",
                "patch": "@@ -795,9 +795,11 @@ private static URL getFileURL(URL contextURL, String path)\n             // get the parent directory of the contextURL, and append\n             // the spec string to the end.\n             String contextFileName = contextURL.getFile();\n-            URL parent =\n-                    new File(contextFileName).getParentFile().toURL();\n-\n+            URL parent = null;\n+            File parentFile = new File(contextFileName).getParentFile(); \n+            if ( parentFile != null ) {\n+                parent = parentFile.toURL(); \n+            }\n             if (parent != null) {\n                 return new URL(parent, path);\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0646069ca2a051f3be8b1082f4b128d32aa83cfd",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/7319a606fa1639b048a6e6df91a7f0aa81706abe",
        "message": "Fix for AXIS-1568 - NPE from wsdl2java if message element in WSDL file is wrong\nreported by Ian Dickinson (ian.dickinson@hp.com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@259448 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_136",
        "file": [
            {
                "sha": "2b256b58dc14615e885a490982ff1d7a265f17d2",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/0646069ca2a051f3be8b1082f4b128d32aa83cfd/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0646069ca2a051f3be8b1082f4b128d32aa83cfd/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=0646069ca2a051f3be8b1082f4b128d32aa83cfd",
                "patch": "@@ -2345,7 +2345,7 @@ private void setMIMEInfo(Parameter p, MimeInfo mimeInfo) {\n \n         // If there is no binding MIME construct (ie., the mimeType parameter is\n         // null), then get the MIME type from the AXIS-specific xml MIME type.\n-        if (mimeInfo == null) {\n+        if (mimeInfo == null && p.getType() != null) {\n             QName mimeQName = p.getType().getQName();\n \n             if (mimeQName.getNamespaceURI().equals(Constants.NS_URI_XMLSOAP)) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0e1cc2864952d690b15018f483bdcc0c752abe07",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/d5896b76df59057fb126925b275bf71268877c9e",
        "message": "Bug fix of AXIS-1248 at http://issues.apache.org/jira/secure/ViewIssue.jspa?key=AXIS-1248\n- Prevent NPE during detachNode in case of parent's null.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257482 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_137",
        "file": [
            {
                "sha": "39ea569e46afcb155d86962209cd670b4a916e97",
                "filename": "src/org/apache/axis/message/SOAPBody.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPBody.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPBody.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPBody.java?ref=0e1cc2864952d690b15018f483bdcc0c752abe07",
                "patch": "@@ -91,7 +91,9 @@ public void setParentElement(SOAPElement parent) throws SOAPException {\n     }\n \n     public void detachNode() {\n-        ((SOAPEnvelope)parent).removeBody();\n+        if (parent != null) {\n+            ((SOAPEnvelope)parent).removeBody();\n+        }\n         super.detachNode();\n     }\n    "
            },
            {
                "sha": "d8cec150597520ed1510230dc2bde2bc641c5b41",
                "filename": "src/org/apache/axis/message/SOAPBodyElement.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPBodyElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPBodyElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPBodyElement.java?ref=0e1cc2864952d690b15018f483bdcc0c752abe07",
                "patch": "@@ -93,7 +93,9 @@ public void setParentElement(SOAPElement parent) throws SOAPException {\n     }\n \n     public void detachNode() {\n-        ((SOAPBody)parent).removeBodyElement(this);\n+        if (parent != null) {\n+            ((SOAPBody)parent).removeBodyElement(this);\n+        }\n         super.detachNode();\n     }\n }"
            },
            {
                "sha": "7dae66707d6b80ed19a9a0cc009f218acf37c16c",
                "filename": "src/org/apache/axis/message/SOAPHeader.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPHeader.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPHeader.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeader.java?ref=0e1cc2864952d690b15018f483bdcc0c752abe07",
                "patch": "@@ -87,7 +87,9 @@ public void setParentElement(SOAPElement parent) throws SOAPException {\n     }\n \n     public void detachNode() {\n-        ((SOAPEnvelope)parent).removeHeaders();\n+        if (parent != null) {\n+            ((SOAPEnvelope)parent).removeHeaders();\n+        }\n         super.detachNode();\n     }\n "
            },
            {
                "sha": "81074378f78a31d1c204fe9dcec934aac4b76857",
                "filename": "src/org/apache/axis/message/SOAPHeaderElement.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPHeaderElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0e1cc2864952d690b15018f483bdcc0c752abe07/src/org/apache/axis/message/SOAPHeaderElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeaderElement.java?ref=0e1cc2864952d690b15018f483bdcc0c752abe07",
                "patch": "@@ -110,7 +110,9 @@ public void setParentElement(SOAPElement parent) throws SOAPException {\n     }\n \n     public void detachNode() {\n-        ((SOAPHeader)parent).removeHeader(this);\n+        if (parent != null) {\n+            ((SOAPHeader)parent).removeHeader(this);\n+        }\n         super.detachNode();\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7fa58c3fb7313cc1f151084010e654a3d87b1ea2",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/1af09865e4a68fc61ef40bd4ab8f4e032dc077b3",
        "message": "Fix NPE reported by Srinath - http://marc.theaimsgroup.com/?t=107668701700009&r=1&w=2\n\nTest case in Bug 18409 has a side effect of repro the problem reported by Srinath.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257431 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_138",
        "file": [
            {
                "sha": "d961784a2d7e284a20a1f5db6d24971ffe26650a",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/7fa58c3fb7313cc1f151084010e654a3d87b1ea2/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7fa58c3fb7313cc1f151084010e654a3d87b1ea2/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=7fa58c3fb7313cc1f151084010e654a3d87b1ea2",
                "patch": "@@ -597,7 +597,8 @@ protected void init(int mode) {\n             if (tm != null) {\n                 serviceDesc.setTypeMapping(tm);\n             } else {\n-                serviceDesc.setTypeMapping(getDefaultTypeMapping());\n+                tm = getDefaultTypeMapping();\n+                serviceDesc.setTypeMapping(tm);\n             }\n \n             javaServiceDesc.setStopClasses(stopClasses);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/5c0bc424e511419f4cc5977c186075b0e2855072",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/2141675724b4822ad4ed79a53c8e83d0a7b67b31",
        "message": "Fix NPE in BeanSerializer.  The schema-writing\ncode will handle missing XmlTypes (it'll use\nthe default mapping for the JavaType), but this\nline of code didn't...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256176 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_139",
        "file": [
            {
                "sha": "2b6dadfa177ed9da6ba5c7ee935e0b59613c6ae2",
                "filename": "src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/5c0bc424e511419f4cc5977c186075b0e2855072/src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/5c0bc424e511419f4cc5977c186075b0e2855072/src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanSerializer.java?ref=5c0bc424e511419f4cc5977c186075b0e2855072",
                "patch": "@@ -371,7 +371,7 @@ public Element writeSchema(Class javaType, Types types) throws Exception {\n                 if (field != null) {\n                     QName qname = field.getXmlName();\n                     QName fieldXmlType = field.getXmlType();\n-                    boolean isAnonymous = fieldXmlType.getLocalPart().startsWith(\">\");\n+                    boolean isAnonymous = fieldXmlType != null && fieldXmlType.getLocalPart().startsWith(\">\");\n \n                     if (qname != null) {\n                         // FIXME!\n@@ -386,7 +386,7 @@ public Element writeSchema(Class javaType, Types types) throws Exception {\n                         writeAttribute(types,\n                                        propName,\n                                        fieldType,\n-                                       field.getXmlType(),\n+                                       fieldXmlType,\n                                        complexType);\n                     } else {\n                         writeField(types,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0f70f27e5129f1711754ab50f78e3b2e9048f649",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0f0281f3c1a09bc2841316f676f758758cebeabd",
        "message": "Fix NPE in BeanSerializer.  The schema-writing\ncode will handle missing XmlTypes (it'll use\nthe default mapping for the JavaType), but this\nline of code didn't...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249107 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_140",
        "file": [
            {
                "sha": "2b6dadfa177ed9da6ba5c7ee935e0b59613c6ae2",
                "filename": "src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/0f70f27e5129f1711754ab50f78e3b2e9048f649/src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0f70f27e5129f1711754ab50f78e3b2e9048f649/src/org/apache/axis/encoding/ser/BeanSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanSerializer.java?ref=0f70f27e5129f1711754ab50f78e3b2e9048f649",
                "patch": "@@ -371,7 +371,7 @@ public Element writeSchema(Class javaType, Types types) throws Exception {\n                 if (field != null) {\n                     QName qname = field.getXmlName();\n                     QName fieldXmlType = field.getXmlType();\n-                    boolean isAnonymous = fieldXmlType.getLocalPart().startsWith(\">\");\n+                    boolean isAnonymous = fieldXmlType != null && fieldXmlType.getLocalPart().startsWith(\">\");\n \n                     if (qname != null) {\n                         // FIXME!\n@@ -386,7 +386,7 @@ public Element writeSchema(Class javaType, Types types) throws Exception {\n                         writeAttribute(types,\n                                        propName,\n                                        fieldType,\n-                                       field.getXmlType(),\n+                                       fieldXmlType,\n                                        complexType);\n                     } else {\n                         writeField(types,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/96721d8fb9412690f0732be7ed1db7e85e848993",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/903fdf73ce2fefbf9b18f8c9e4e810ec0c0b2b91",
        "message": "client side calls to getAttachments() threw NPE if no attachments are present.  added a check.\nreported by Vlad <vumansky@adjoin.com>\nPR:18984\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256149 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_141",
        "file": [
            {
                "sha": "e1fd3b865759bf532c4b22f578e2841bfbeddce5",
                "filename": "src/org/apache/axis/Message.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/96721d8fb9412690f0732be7ed1db7e85e848993/src/org/apache/axis/Message.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/96721d8fb9412690f0732be7ed1db7e85e848993/src/org/apache/axis/Message.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Message.java?ref=96721d8fb9412690f0732be7ed1db7e85e848993",
                "patch": "@@ -192,7 +192,7 @@ public Message(Object initialContents, boolean bodyInStream) {\n     public Message(Object initialContents, boolean bodyInStream, MimeHeaders headers) {\n         setup(initialContents, bodyInStream, null, null, headers);\n     }\n-    \n+\n     /**\n      * Construct a Message, using the provided initialContents as the\n      * contents of the Message's SOAPPart.\n@@ -562,7 +562,9 @@ public int countAttachments(){\n      */\n     public Iterator getAttachments(){\n         try {\n-            return mAttachments.getAttachments().iterator();\n+\t\t\t\t\t \tif (mAttachments != null && 0 != mAttachments.getAttachmentCount()) {\n+           \t\treturn mAttachments.getAttachments().iterator();\n+\t\t\t\t\t   }\n         } catch (AxisFault af){\n             log.error(Messages.getMessage(\"exception00\"), af);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/415938c0be492b9735fda5b8c21a8bf1a8715cfa",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/c5159808407c4a2cd45fa9fbe88ec023b483b493",
        "message": "client side calls to getAttachments() threw NPE if no attachments are present.  added a check.\nreported by Vlad <vumansky@adjoin.com>\nPR:18984\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249080 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_142",
        "file": [
            {
                "sha": "e1fd3b865759bf532c4b22f578e2841bfbeddce5",
                "filename": "src/org/apache/axis/Message.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/415938c0be492b9735fda5b8c21a8bf1a8715cfa/src/org/apache/axis/Message.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/415938c0be492b9735fda5b8c21a8bf1a8715cfa/src/org/apache/axis/Message.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Message.java?ref=415938c0be492b9735fda5b8c21a8bf1a8715cfa",
                "patch": "@@ -192,7 +192,7 @@ public Message(Object initialContents, boolean bodyInStream) {\n     public Message(Object initialContents, boolean bodyInStream, MimeHeaders headers) {\n         setup(initialContents, bodyInStream, null, null, headers);\n     }\n-    \n+\n     /**\n      * Construct a Message, using the provided initialContents as the\n      * contents of the Message's SOAPPart.\n@@ -562,7 +562,9 @@ public int countAttachments(){\n      */\n     public Iterator getAttachments(){\n         try {\n-            return mAttachments.getAttachments().iterator();\n+\t\t\t\t\t \tif (mAttachments != null && 0 != mAttachments.getAttachmentCount()) {\n+           \t\treturn mAttachments.getAttachments().iterator();\n+\t\t\t\t\t   }\n         } catch (AxisFault af){\n             log.error(Messages.getMessage(\"exception00\"), af);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/234700c28af2d2cd7ded7d49e085d40e409b931c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/2571b58e5d25aaa1fb6eff59f530337f8ac86cc3",
        "message": "Fix for Bug 16083 - WSDL2Java suddenly breaking with NPE\n\nNotes:\n- If we dont find type=\"???\" in mime:content set it by default to text/plain.\n- probably broke when i was adding dime/mime support in wsdl.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255891 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_143",
        "file": [
            {
                "sha": "0e4b95f20d82ea3922c8d3cc3b47393d26c9bcd6",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/234700c28af2d2cd7ded7d49e085d40e409b931c/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/234700c28af2d2cd7ded7d49e085d40e409b931c/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=234700c28af2d2cd7ded7d49e085d40e409b931c",
                "patch": "@@ -2001,7 +2001,10 @@ private Use addMIMETypes(BindingEntry bEntry, MIMEMultipartRelated mpr,\n                         if(getInnerCollectionComponentQName(node)!=null)\n                             dims += \"[]\";    \n                     }\n-                    bEntry.setMIMEInfo(op.getName(), content.getPart(), content.getType(), dims);\n+                    String type = content.getType();\n+                    if(type == null || type.length() == 0)\n+                        type = \"text/plain\";\n+                    bEntry.setMIMEInfo(op.getName(), content.getPart(), type, dims);\n                 }\n                 else if (obj instanceof SOAPBody) {\n                     String use = ((SOAPBody) obj).getUse();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7d1961442368524e7f7a6793dcb37b69c23212e3",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/38865c310d64a5ef693d3d80dcd9e5185d63b1bd",
        "message": "Fix for Bug 16083 - WSDL2Java suddenly breaking with NPE\n\nNotes:\n- If we dont find type=\"???\" in mime:content set it by default to text/plain.\n- probably broke when i was adding dime/mime support in wsdl.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248822 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_144",
        "file": [
            {
                "sha": "0e4b95f20d82ea3922c8d3cc3b47393d26c9bcd6",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/7d1961442368524e7f7a6793dcb37b69c23212e3/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7d1961442368524e7f7a6793dcb37b69c23212e3/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=7d1961442368524e7f7a6793dcb37b69c23212e3",
                "patch": "@@ -2001,7 +2001,10 @@ private Use addMIMETypes(BindingEntry bEntry, MIMEMultipartRelated mpr,\n                         if(getInnerCollectionComponentQName(node)!=null)\n                             dims += \"[]\";    \n                     }\n-                    bEntry.setMIMEInfo(op.getName(), content.getPart(), content.getType(), dims);\n+                    String type = content.getType();\n+                    if(type == null || type.length() == 0)\n+                        type = \"text/plain\";\n+                    bEntry.setMIMEInfo(op.getName(), content.getPart(), type, dims);\n                 }\n                 else if (obj instanceof SOAPBody) {\n                     String use = ((SOAPBody) obj).getUse();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b4c50c2fcc2634189fab79cf963926918df8b83c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/0b2831c4e71411bef4a574a48c798ca6c89e3d9e",
        "message": "Fix for Bug 13901 - Null pointer exception occurred while parsing WSDL\n\nNotes:\n- Am throwing exception with information instead of NPE.\n- SOAP:Array in lu.wsdl mentioned in bug report is incorrect (should be SOAP-ENC:Array)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255715 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_145",
        "file": [
            {
                "sha": "ea882771a79fdff36efaf924f70f604fda698673",
                "filename": "src/org/apache/axis/i18n/resource.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/b4c50c2fcc2634189fab79cf963926918df8b83c/src/org/apache/axis/i18n/resource.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/b4c50c2fcc2634189fab79cf963926918df8b83c/src/org/apache/axis/i18n/resource.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/i18n/resource.properties?ref=b4c50c2fcc2634189fab79cf963926918df8b83c",
                "patch": "@@ -1037,6 +1037,7 @@ noValidHeader=qname attribute is missing.\n badNonNegInt00=Invalid nonNegativeInteger\n undefinedElem00=Element {0} is referenced but not defined.\n emptyref00=Error: missing type or ref attribute for node ''{0}''\n+absentRef00=Error: Cannot find referenced type ''{0}'' for type ''{1}''\n \n cannotConnectError=Unable to connect\n "
            },
            {
                "sha": "41a9675c252bf0edb9cedb35b75139ca2498a38f",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/b4c50c2fcc2634189fab79cf963926918df8b83c/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b4c50c2fcc2634189fab79cf963926918df8b83c/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=b4c50c2fcc2634189fab79cf963926918df8b83c",
                "patch": "@@ -820,6 +820,9 @@ private void createTypeFromDef(Node node, boolean isElement,\n \n                 // Now get the TypeEntry\n                 TypeEntry refType = getTypeEntry(refQName, forElement.value);\n+                if (refType == null) {\n+                    throw new IOException(Messages.getMessage(\"absentRef00\", refQName.toString(), qName.toString()));\n+                }\n \n                 if (!belowSchemaLevel) {\n                     symbolTablePut(new DefinedElement(qName, refType, node, \"\"));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/9611e7048546ab6a518ce7e0cb353240f0e0d487",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/8ba429a104a08476819aef93d287502faee148d1",
        "message": "Fix for Bug 13901 - Null pointer exception occurred while parsing WSDL\n\nNotes:\n- Am throwing exception with information instead of NPE.\n- SOAP:Array in lu.wsdl mentioned in bug report is incorrect (should be SOAP-ENC:Array)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@248646 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_146",
        "file": [
            {
                "sha": "ea882771a79fdff36efaf924f70f604fda698673",
                "filename": "src/org/apache/axis/i18n/resource.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/9611e7048546ab6a518ce7e0cb353240f0e0d487/src/org/apache/axis/i18n/resource.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/9611e7048546ab6a518ce7e0cb353240f0e0d487/src/org/apache/axis/i18n/resource.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/i18n/resource.properties?ref=9611e7048546ab6a518ce7e0cb353240f0e0d487",
                "patch": "@@ -1037,6 +1037,7 @@ noValidHeader=qname attribute is missing.\n badNonNegInt00=Invalid nonNegativeInteger\n undefinedElem00=Element {0} is referenced but not defined.\n emptyref00=Error: missing type or ref attribute for node ''{0}''\n+absentRef00=Error: Cannot find referenced type ''{0}'' for type ''{1}''\n \n cannotConnectError=Unable to connect\n "
            },
            {
                "sha": "41a9675c252bf0edb9cedb35b75139ca2498a38f",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/9611e7048546ab6a518ce7e0cb353240f0e0d487/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/9611e7048546ab6a518ce7e0cb353240f0e0d487/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=9611e7048546ab6a518ce7e0cb353240f0e0d487",
                "patch": "@@ -820,6 +820,9 @@ private void createTypeFromDef(Node node, boolean isElement,\n \n                 // Now get the TypeEntry\n                 TypeEntry refType = getTypeEntry(refQName, forElement.value);\n+                if (refType == null) {\n+                    throw new IOException(Messages.getMessage(\"absentRef00\", refQName.toString(), qName.toString()));\n+                }\n \n                 if (!belowSchemaLevel) {\n                     symbolTablePut(new DefinedElement(qName, refType, node, \"\"));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/50376ac6594df10304201c0b4ca78c37f7010c45",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/1a21e91a4a7966f077f50ac4cab5ba32d85528bd",
        "message": "Test case for \"NPE with multithreaded client in RC1\" problem from \"Volanis, Alexander\" <AVolanis@rsasecurity.com>\n\nDetails:\n- http://marc.theaimsgroup.com/?t=103124516800009&r=1&w=2\n- http://marc.theaimsgroup.com/?t=103120473600002&r=1&w=2\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255063 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_147",
        "file": [
            {
                "sha": "263c26415b63543a1a583652500ec14a96496ae3",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=50376ac6594df10304201c0b4ca78c37f7010c45",
                "patch": "@@ -987,6 +987,13 @@\n                serverSide=\"no\"\n                testcase=\"no\">\n     </wsdl2java>\n+\n+    <wsdl2java url=\"test/wsdl/session/session.wsdl\"\n+               output=\"build/work\"\n+               serverSide=\"yes\"\n+               testcase=\"no\">\n+    </wsdl2java>\n+\n     <!-- Copy modified files to work directory -->\n     <copy todir=\"${build.dir}/work/test/wsdl/jaxrpchandler\" overwrite=\"yes\">\n       <fileset dir=\"${test.dir}/wsdl/jaxrpchandler\">"
            },
            {
                "sha": "b534183dd2f9d1c69ecb0dd68d4ab936206ccdf0",
                "filename": "test/wsdl/session/SessionTestCase.java",
                "status": "added",
                "additions": 131,
                "deletions": 0,
                "changes": 131,
                "blob_url": "https://github.com/apache/axis1-java/blob/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/session/SessionTestCase.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/session/SessionTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/session/SessionTestCase.java?ref=50376ac6594df10304201c0b4ca78c37f7010c45",
                "patch": "@@ -0,0 +1,131 @@\n+/**\n+ * SessionTestServerServiceTestCase.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis WSDL2Java emitter.\n+ */\n+package test.wsdl.session;\n+\n+/**\n+ * Class SessionTestCase\n+ */\n+public class SessionTestCase extends junit.framework.TestCase {\n+\n+    /**\n+     * Constructor SessionTestCase\n+     * @param name\n+     */\n+    public SessionTestCase(java.lang.String name) {\n+        super(name);\n+    }\n+\n+    /**\n+     * Method test1SessionTestDoSomething\n+     */\n+    public void test1SessionTestDoSomething() {\n+        // Threads array\n+        SessionTest[] clients = new SessionTest[numThreads];\n+\n+        for (int i = 0; i < numThreads; i++) {\n+            clients[i] = new SessionTest();\n+        }\n+        for (int j = 0; j < numThreads; j++) {\n+            clients[j].start();\n+            try {\n+                Thread.currentThread().sleep(150);\n+            } catch (InterruptedException e) {\n+                System.out.println(\"Threads interrupted\");\n+            }\n+        }\n+        try {\n+            synchronized (lock) {\n+                while (count != 0) {\n+                    lock.wait();\n+                }\n+            }\n+        } catch (InterruptedException ie) {\n+            System.out.println(\"Threads interrupted\");\n+        }\n+        System.out.println(\"Succeeded \" + succeeded + \" times.\");\n+        System.out.println(\"Failed \" + failed + \" times.\");\n+        assertTrue(\"found session failures\", (failed == 0));\n+    }\n+\n+    /**\n+     * Class SessionTest\n+     */\n+    public class SessionTest extends Thread {\n+        /**\n+         * run the thread until done.\n+         */\n+        public void run() {\n+            try {\n+                // Create an instance of the Web service interface.\n+                SessionTestServerServiceLocator wsloc =\n+                        new SessionTestServerServiceLocator();\n+                SessionTestServer ws = wsloc.getSessionTest();\n+\n+                // Maintain sessions for test calls.\n+                ((org.apache.axis.client.Stub) ws).setMaintainSession(true);\n+                for (int i = 0; i < NO_OF_CALLS; i++) {\n+                    if (ws.doSomething() == false) {\n+                        synchronized (testLock) {\n+                            failed++;\n+                        }\n+                    } else {\n+                        synchronized (testLock) {\n+                            succeeded++;\n+                        }\n+                    }\n+                }\n+            } catch (javax.xml.rpc.ServiceException e) {\n+                e.printStackTrace();\n+            } catch (java.rmi.RemoteException e) {\n+                e.printStackTrace();\n+            }\n+            // checkout\n+            synchronized (lock) {\n+                count--;\n+                lock.notifyAll();\n+            }\n+        }\n+    }\n+\n+    /** Field lock           */\n+    private static Object lock = new Object();\n+\n+    /** Field testLock           */\n+    private static Object testLock = new Object();\n+\n+    /** Field NO_OF_THREADS           */\n+    private static final int NO_OF_THREADS = 3;\n+\n+    /** Field NO_OF_CALLS           */\n+    private static final int NO_OF_CALLS = 6;\n+\n+    /** Field numThreads           */\n+    private static int numThreads = NO_OF_THREADS;\n+\n+    /** Field count           */\n+    private static int count = NO_OF_THREADS;\n+\n+    /** Field failed           */\n+    private static int failed = 0;\n+\n+    /** Field succeeded           */\n+    private static int succeeded = 0;\n+\n+    /**\n+     * Main entry point for the application.\n+     * Takes number of threads as argument.\n+     *\n+     * @param args\n+     *\n+     * @throws Exception\n+     */\n+    public static void main(String[] args) throws Exception {\n+        numThreads = count = Integer.parseInt(args[0]);\n+        SessionTestCase testCase = new SessionTestCase(\"SessionTestCase\");\n+        testCase.test1SessionTestDoSomething();\n+    }\n+}"
            },
            {
                "sha": "9ab89fa6cb3dc7c178e91d1cdca4b50f5163e14c",
                "filename": "test/wsdl/session/SessionTestSoapBindingImpl.java",
                "status": "added",
                "additions": 70,
                "deletions": 0,
                "changes": 70,
                "blob_url": "https://github.com/apache/axis1-java/blob/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/session/SessionTestSoapBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/session/SessionTestSoapBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/session/SessionTestSoapBindingImpl.java?ref=50376ac6594df10304201c0b4ca78c37f7010c45",
                "patch": "@@ -0,0 +1,70 @@\n+/**\n+ * SessionTestSoapBindingImpl.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis WSDL2Java emitter.\n+ */\n+package test.wsdl.session;\n+\n+/**\n+ * Class SessionTestSoapBindingImpl\n+ */\n+public class SessionTestSoapBindingImpl\n+        implements test.wsdl.session.SessionTestServer {\n+\n+    /**\n+     * Method doSomething\n+     *\n+     * @return\n+     *\n+     * @throws java.rmi.RemoteException\n+     */\n+    public boolean doSomething() throws java.rmi.RemoteException {\n+\n+        // if this is my session only then the data will be 0\n+        boolean succeeded = true;\n+        int count = countUp();\n+\n+        if (count != 1) {\n+            System.out.println(\"Failed with count=\" + count);\n+            succeeded = false;\n+        }\n+        try {\n+            // simulate some busy processing\n+            Thread.currentThread().sleep(999);\n+        } catch (InterruptedException e) {\n+            // ignore\n+        }\n+\n+        // check exit count\n+        count = countDown();\n+        if (count != 0) {\n+            System.out.println(\"Failed with count=\" + count);\n+            succeeded = false;\n+        }\n+        return succeeded;\n+    }\n+\n+    /**\n+     * Count one caller\n+     *\n+     * @return Number of simultaneous session callers.\n+     */\n+    private synchronized int countUp() {\n+        sessionCallers++;\n+        return sessionCallers;\n+    }\n+\n+    /**\n+     * Count down one caller\n+     *\n+     * @return Number of callers left.\n+     */\n+    private synchronized int countDown() {\n+        sessionCallers--;\n+        return sessionCallers;\n+    }\n+\n+    /** count simultaneous session callers           */\n+    private int sessionCallers = 0;\n+}"
            },
            {
                "sha": "598c722accd3b1906bec8c05638a300a4ae14819",
                "filename": "test/wsdl/session/session.wsdl",
                "status": "added",
                "additions": 31,
                "deletions": 0,
                "changes": 31,
                "blob_url": "https://github.com/apache/axis1-java/blob/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/session/session.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/50376ac6594df10304201c0b4ca78c37f7010c45/test/wsdl/session/session.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/session/session.wsdl?ref=50376ac6594df10304201c0b4ca78c37f7010c45",
                "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<wsdl:definitions targetNamespace=\"http://session.wsdl.test:8080/axis/services/SessionTest\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apachesoap=\"http://xml.apache.org/xml-soap\" xmlns:impl=\"http://session.wsdl.test:8080/axis/services/SessionTest\" xmlns:intf=\"http://session.wsdl.test:8080/axis/services/SessionTest\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsdlsoap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <wsdl:message name=\"doSomethingResponse\">\n+    <wsdl:part name=\"doSomethingReturn\" type=\"xsd:boolean\"/>\n+  </wsdl:message>\n+  <wsdl:message name=\"doSomethingRequest\">\n+  </wsdl:message>\n+  <wsdl:portType name=\"SessionTestServer\">\n+    <wsdl:operation name=\"doSomething\">\n+      <wsdl:input message=\"intf:doSomethingRequest\" name=\"doSomethingRequest\"/>\n+      <wsdl:output message=\"intf:doSomethingResponse\" name=\"doSomethingResponse\"/>\n+    </wsdl:operation>\n+  </wsdl:portType>\n+  <wsdl:binding name=\"SessionTestSoapBinding\" type=\"intf:SessionTestServer\">\n+    <wsdlsoap:binding style=\"rpc\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n+    <wsdl:operation name=\"doSomething\">\n+      <wsdlsoap:operation soapAction=\"\"/>\n+      <wsdl:input name=\"doSomethingRequest\">\n+        <wsdlsoap:body encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"http://session.wsdl.test:8080/axis/services/SessionTest\" use=\"encoded\"/>\n+      </wsdl:input>\n+      <wsdl:output name=\"doSomethingResponse\">\n+        <wsdlsoap:body encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"http://session.wsdl.test:8080/axis/services/SessionTest\" use=\"encoded\"/>\n+      </wsdl:output>\n+    </wsdl:operation>\n+  </wsdl:binding>\n+  <wsdl:service name=\"SessionTestServerService\">\n+    <wsdl:port binding=\"intf:SessionTestSoapBinding\" name=\"SessionTest\">\n+      <wsdlsoap:address location=\"http://localhost:8080/axis/services/SessionTest\"/>\n+    </wsdl:port>\n+  </wsdl:service>\n+</wsdl:definitions>\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/de759625997ca65f551e54abe83cf29797e92d37",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6e887ab0c7ba6a42fdd875e73c7ab61bc4bfbc99",
        "message": "Test case for \"NPE with multithreaded client in RC1\" problem from \"Volanis, Alexander\" <AVolanis@rsasecurity.com>\n\nDetails:\n- http://marc.theaimsgroup.com/?t=103124516800009&r=1&w=2\n- http://marc.theaimsgroup.com/?t=103120473600002&r=1&w=2\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247992 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_148",
        "file": [
            {
                "sha": "263c26415b63543a1a583652500ec14a96496ae3",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=de759625997ca65f551e54abe83cf29797e92d37",
                "patch": "@@ -987,6 +987,13 @@\n                serverSide=\"no\"\n                testcase=\"no\">\n     </wsdl2java>\n+\n+    <wsdl2java url=\"test/wsdl/session/session.wsdl\"\n+               output=\"build/work\"\n+               serverSide=\"yes\"\n+               testcase=\"no\">\n+    </wsdl2java>\n+\n     <!-- Copy modified files to work directory -->\n     <copy todir=\"${build.dir}/work/test/wsdl/jaxrpchandler\" overwrite=\"yes\">\n       <fileset dir=\"${test.dir}/wsdl/jaxrpchandler\">"
            },
            {
                "sha": "b534183dd2f9d1c69ecb0dd68d4ab936206ccdf0",
                "filename": "test/wsdl/session/SessionTestCase.java",
                "status": "added",
                "additions": 131,
                "deletions": 0,
                "changes": 131,
                "blob_url": "https://github.com/apache/axis1-java/blob/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/session/SessionTestCase.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/session/SessionTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/session/SessionTestCase.java?ref=de759625997ca65f551e54abe83cf29797e92d37",
                "patch": "@@ -0,0 +1,131 @@\n+/**\n+ * SessionTestServerServiceTestCase.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis WSDL2Java emitter.\n+ */\n+package test.wsdl.session;\n+\n+/**\n+ * Class SessionTestCase\n+ */\n+public class SessionTestCase extends junit.framework.TestCase {\n+\n+    /**\n+     * Constructor SessionTestCase\n+     * @param name\n+     */\n+    public SessionTestCase(java.lang.String name) {\n+        super(name);\n+    }\n+\n+    /**\n+     * Method test1SessionTestDoSomething\n+     */\n+    public void test1SessionTestDoSomething() {\n+        // Threads array\n+        SessionTest[] clients = new SessionTest[numThreads];\n+\n+        for (int i = 0; i < numThreads; i++) {\n+            clients[i] = new SessionTest();\n+        }\n+        for (int j = 0; j < numThreads; j++) {\n+            clients[j].start();\n+            try {\n+                Thread.currentThread().sleep(150);\n+            } catch (InterruptedException e) {\n+                System.out.println(\"Threads interrupted\");\n+            }\n+        }\n+        try {\n+            synchronized (lock) {\n+                while (count != 0) {\n+                    lock.wait();\n+                }\n+            }\n+        } catch (InterruptedException ie) {\n+            System.out.println(\"Threads interrupted\");\n+        }\n+        System.out.println(\"Succeeded \" + succeeded + \" times.\");\n+        System.out.println(\"Failed \" + failed + \" times.\");\n+        assertTrue(\"found session failures\", (failed == 0));\n+    }\n+\n+    /**\n+     * Class SessionTest\n+     */\n+    public class SessionTest extends Thread {\n+        /**\n+         * run the thread until done.\n+         */\n+        public void run() {\n+            try {\n+                // Create an instance of the Web service interface.\n+                SessionTestServerServiceLocator wsloc =\n+                        new SessionTestServerServiceLocator();\n+                SessionTestServer ws = wsloc.getSessionTest();\n+\n+                // Maintain sessions for test calls.\n+                ((org.apache.axis.client.Stub) ws).setMaintainSession(true);\n+                for (int i = 0; i < NO_OF_CALLS; i++) {\n+                    if (ws.doSomething() == false) {\n+                        synchronized (testLock) {\n+                            failed++;\n+                        }\n+                    } else {\n+                        synchronized (testLock) {\n+                            succeeded++;\n+                        }\n+                    }\n+                }\n+            } catch (javax.xml.rpc.ServiceException e) {\n+                e.printStackTrace();\n+            } catch (java.rmi.RemoteException e) {\n+                e.printStackTrace();\n+            }\n+            // checkout\n+            synchronized (lock) {\n+                count--;\n+                lock.notifyAll();\n+            }\n+        }\n+    }\n+\n+    /** Field lock           */\n+    private static Object lock = new Object();\n+\n+    /** Field testLock           */\n+    private static Object testLock = new Object();\n+\n+    /** Field NO_OF_THREADS           */\n+    private static final int NO_OF_THREADS = 3;\n+\n+    /** Field NO_OF_CALLS           */\n+    private static final int NO_OF_CALLS = 6;\n+\n+    /** Field numThreads           */\n+    private static int numThreads = NO_OF_THREADS;\n+\n+    /** Field count           */\n+    private static int count = NO_OF_THREADS;\n+\n+    /** Field failed           */\n+    private static int failed = 0;\n+\n+    /** Field succeeded           */\n+    private static int succeeded = 0;\n+\n+    /**\n+     * Main entry point for the application.\n+     * Takes number of threads as argument.\n+     *\n+     * @param args\n+     *\n+     * @throws Exception\n+     */\n+    public static void main(String[] args) throws Exception {\n+        numThreads = count = Integer.parseInt(args[0]);\n+        SessionTestCase testCase = new SessionTestCase(\"SessionTestCase\");\n+        testCase.test1SessionTestDoSomething();\n+    }\n+}"
            },
            {
                "sha": "9ab89fa6cb3dc7c178e91d1cdca4b50f5163e14c",
                "filename": "test/wsdl/session/SessionTestSoapBindingImpl.java",
                "status": "added",
                "additions": 70,
                "deletions": 0,
                "changes": 70,
                "blob_url": "https://github.com/apache/axis1-java/blob/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/session/SessionTestSoapBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/session/SessionTestSoapBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/session/SessionTestSoapBindingImpl.java?ref=de759625997ca65f551e54abe83cf29797e92d37",
                "patch": "@@ -0,0 +1,70 @@\n+/**\n+ * SessionTestSoapBindingImpl.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis WSDL2Java emitter.\n+ */\n+package test.wsdl.session;\n+\n+/**\n+ * Class SessionTestSoapBindingImpl\n+ */\n+public class SessionTestSoapBindingImpl\n+        implements test.wsdl.session.SessionTestServer {\n+\n+    /**\n+     * Method doSomething\n+     *\n+     * @return\n+     *\n+     * @throws java.rmi.RemoteException\n+     */\n+    public boolean doSomething() throws java.rmi.RemoteException {\n+\n+        // if this is my session only then the data will be 0\n+        boolean succeeded = true;\n+        int count = countUp();\n+\n+        if (count != 1) {\n+            System.out.println(\"Failed with count=\" + count);\n+            succeeded = false;\n+        }\n+        try {\n+            // simulate some busy processing\n+            Thread.currentThread().sleep(999);\n+        } catch (InterruptedException e) {\n+            // ignore\n+        }\n+\n+        // check exit count\n+        count = countDown();\n+        if (count != 0) {\n+            System.out.println(\"Failed with count=\" + count);\n+            succeeded = false;\n+        }\n+        return succeeded;\n+    }\n+\n+    /**\n+     * Count one caller\n+     *\n+     * @return Number of simultaneous session callers.\n+     */\n+    private synchronized int countUp() {\n+        sessionCallers++;\n+        return sessionCallers;\n+    }\n+\n+    /**\n+     * Count down one caller\n+     *\n+     * @return Number of callers left.\n+     */\n+    private synchronized int countDown() {\n+        sessionCallers--;\n+        return sessionCallers;\n+    }\n+\n+    /** count simultaneous session callers           */\n+    private int sessionCallers = 0;\n+}"
            },
            {
                "sha": "598c722accd3b1906bec8c05638a300a4ae14819",
                "filename": "test/wsdl/session/session.wsdl",
                "status": "added",
                "additions": 31,
                "deletions": 0,
                "changes": 31,
                "blob_url": "https://github.com/apache/axis1-java/blob/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/session/session.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/de759625997ca65f551e54abe83cf29797e92d37/test/wsdl/session/session.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/session/session.wsdl?ref=de759625997ca65f551e54abe83cf29797e92d37",
                "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<wsdl:definitions targetNamespace=\"http://session.wsdl.test:8080/axis/services/SessionTest\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apachesoap=\"http://xml.apache.org/xml-soap\" xmlns:impl=\"http://session.wsdl.test:8080/axis/services/SessionTest\" xmlns:intf=\"http://session.wsdl.test:8080/axis/services/SessionTest\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsdlsoap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <wsdl:message name=\"doSomethingResponse\">\n+    <wsdl:part name=\"doSomethingReturn\" type=\"xsd:boolean\"/>\n+  </wsdl:message>\n+  <wsdl:message name=\"doSomethingRequest\">\n+  </wsdl:message>\n+  <wsdl:portType name=\"SessionTestServer\">\n+    <wsdl:operation name=\"doSomething\">\n+      <wsdl:input message=\"intf:doSomethingRequest\" name=\"doSomethingRequest\"/>\n+      <wsdl:output message=\"intf:doSomethingResponse\" name=\"doSomethingResponse\"/>\n+    </wsdl:operation>\n+  </wsdl:portType>\n+  <wsdl:binding name=\"SessionTestSoapBinding\" type=\"intf:SessionTestServer\">\n+    <wsdlsoap:binding style=\"rpc\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n+    <wsdl:operation name=\"doSomething\">\n+      <wsdlsoap:operation soapAction=\"\"/>\n+      <wsdl:input name=\"doSomethingRequest\">\n+        <wsdlsoap:body encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"http://session.wsdl.test:8080/axis/services/SessionTest\" use=\"encoded\"/>\n+      </wsdl:input>\n+      <wsdl:output name=\"doSomethingResponse\">\n+        <wsdlsoap:body encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"http://session.wsdl.test:8080/axis/services/SessionTest\" use=\"encoded\"/>\n+      </wsdl:output>\n+    </wsdl:operation>\n+  </wsdl:binding>\n+  <wsdl:service name=\"SessionTestServerService\">\n+    <wsdl:port binding=\"intf:SessionTestSoapBinding\" name=\"SessionTest\">\n+      <wsdlsoap:address location=\"http://localhost:8080/axis/services/SessionTest\"/>\n+    </wsdl:port>\n+  </wsdl:service>\n+</wsdl:definitions>\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/0db98a3b76859e789337a3106f926c57d55ccf36",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/9e423365202afa6b9251669b9e30fbf78ad6ed02",
        "message": "Fix NPE in JRE when server-config.wsdd is not found.\n\nBegs two questions:\n  (1) Should server-config.wsdd be required?\n  (2) Why isn't server-config.wsdd copied into ${build.webapp}?\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247167 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_149",
        "file": [
            {
                "sha": "0a91334ad0ac6b06c83efeb5942b0c08050860ee",
                "filename": "src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/0db98a3b76859e789337a3106f926c57d55ccf36/src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/0db98a3b76859e789337a3106f926c57d55ccf36/src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java?ref=0db98a3b76859e789337a3106f926c57d55ccf36",
                "patch": "@@ -124,9 +124,12 @@ private EngineConfiguration getServerEngineConfig(ServletContext ctx) {\n                 InputStream is = ctx.getResourceAsStream(\"/WEB-INF/\"+\n                                                          SERVER_CONFIG_FILE);\n                 if (is == null) {\n-                    // !!! THROW EXCEPTION\n+                    log.error(JavaUtils.getMessage\n+                              (\"servletEngineWebInfError01\", \n+                               webInfPath + \"/\" + SERVER_CONFIG_FILE));\n+                } else {\n+                    config = new FileProvider(is);\n                 }\n-                config = new FileProvider(is);\n             }\n             if ( config == null ) {\n                 try {"
            },
            {
                "sha": "68fb7babcdbfaf792bb0397e0e641b6ac39ba460",
                "filename": "src/org/apache/axis/utils/axisNLS.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/0db98a3b76859e789337a3106f926c57d55ccf36/src/org/apache/axis/utils/axisNLS.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/0db98a3b76859e789337a3106f926c57d55ccf36/src/org/apache/axis/utils/axisNLS.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/axisNLS.properties?ref=0db98a3b76859e789337a3106f926c57d55ccf36",
                "patch": "@@ -537,6 +537,7 @@ serverRun00=Server is running\n serverStop00=Server is stopped\n \n servletEngineWebInfError00=Problem with servlet engine /WEB-INF directory\n+servletEngineWebInfError01=Problem with servlet engine config file: {0}\n \n setCurrMsg00=Setting current message form to: {0} (current message is now {1})\n setProp00=Setting {0} property in {1}\n@@ -851,4 +852,4 @@ ftsf04=isServerTrusted: yes\n ftsf05=getAcceptedIssuers: none\n \n j2woptStyle00=The style of binding in the WSDL.  Values are DOCUMENT or LITERAL.\n-j2woptBadStyle00=The value of --style must be DOCUMENT or LITERAL.\n\\ No newline at end of file\n+j2woptBadStyle00=The value of --style must be DOCUMENT or LITERAL."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7644ce9402f44e5ad4013636dc478853a84f9403",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/c54433345f744c9516d058e1f822f9d51be657a0",
        "message": "Fix NPE in JRE when server-config.wsdd is not found.\n\nBegs two questions:\n  (1) Should server-config.wsdd be required?\n  (2) Why isn't server-config.wsdd copied into ${build.webapp}?\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254240 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_150",
        "file": [
            {
                "sha": "0a91334ad0ac6b06c83efeb5942b0c08050860ee",
                "filename": "src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/7644ce9402f44e5ad4013636dc478853a84f9403/src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7644ce9402f44e5ad4013636dc478853a84f9403/src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/configuration/ServletEngineConfigurationFactory.java?ref=7644ce9402f44e5ad4013636dc478853a84f9403",
                "patch": "@@ -124,9 +124,12 @@ private EngineConfiguration getServerEngineConfig(ServletContext ctx) {\n                 InputStream is = ctx.getResourceAsStream(\"/WEB-INF/\"+\n                                                          SERVER_CONFIG_FILE);\n                 if (is == null) {\n-                    // !!! THROW EXCEPTION\n+                    log.error(JavaUtils.getMessage\n+                              (\"servletEngineWebInfError01\", \n+                               webInfPath + \"/\" + SERVER_CONFIG_FILE));\n+                } else {\n+                    config = new FileProvider(is);\n                 }\n-                config = new FileProvider(is);\n             }\n             if ( config == null ) {\n                 try {"
            },
            {
                "sha": "68fb7babcdbfaf792bb0397e0e641b6ac39ba460",
                "filename": "src/org/apache/axis/utils/axisNLS.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/7644ce9402f44e5ad4013636dc478853a84f9403/src/org/apache/axis/utils/axisNLS.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/7644ce9402f44e5ad4013636dc478853a84f9403/src/org/apache/axis/utils/axisNLS.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/axisNLS.properties?ref=7644ce9402f44e5ad4013636dc478853a84f9403",
                "patch": "@@ -537,6 +537,7 @@ serverRun00=Server is running\n serverStop00=Server is stopped\n \n servletEngineWebInfError00=Problem with servlet engine /WEB-INF directory\n+servletEngineWebInfError01=Problem with servlet engine config file: {0}\n \n setCurrMsg00=Setting current message form to: {0} (current message is now {1})\n setProp00=Setting {0} property in {1}\n@@ -851,4 +852,4 @@ ftsf04=isServerTrusted: yes\n ftsf05=getAcceptedIssuers: none\n \n j2woptStyle00=The style of binding in the WSDL.  Values are DOCUMENT or LITERAL.\n-j2woptBadStyle00=The value of --style must be DOCUMENT or LITERAL.\n\\ No newline at end of file\n+j2woptBadStyle00=The value of --style must be DOCUMENT or LITERAL."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/f4fe16eed54ef9965204da7ab461b6ef979582f4",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/359300639dabf09524a9928bbe5909c467f58d79",
        "message": "Added 2 more wsdl's where Wsdl2java fails (Commented out!!!)\n- In FortuneService, not all necessary files get generated.\n- In realtime.wsdl, we throw an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253040 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_151",
        "file": [
            {
                "sha": "b5402f50ecd5f58d6c31714b4f14682e6c4919e2",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 23,
                "deletions": 0,
                "changes": 23,
                "blob_url": "https://github.com/apache/axis1-java/blob/f4fe16eed54ef9965204da7ab461b6ef979582f4/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/f4fe16eed54ef9965204da7ab461b6ef979582f4/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=f4fe16eed54ef9965204da7ab461b6ef979582f4",
                "patch": "@@ -374,6 +374,29 @@\n         <mapping namespace=\"http://test.com/reference\" package=\"test.filegen\"/>\n     </wsdl2java>\n     -->\n+\n+    <!--\n+    <wsdl2java url=\"http://www.lemurlabs.com/projects/soap/fortune/FortuneService.wsdl\"\n+               output=\"build/work\"\n+               testcase=\"no\"\n+               deployscope=\"none\"\n+               skeleton=\"yes\"\n+               messagecontext=\"no\"\n+               verbose=\"yes\"\n+               noimports=\"no\">\n+    </wsdl2java>\n+\n+    <wsdl2java url=\"http://services.xmltoday.com/vx_engine/wsdl_publish.vep/realtime.wsdl\"\n+               output=\"build/work\"\n+               testcase=\"no\"\n+               deployscope=\"none\"\n+               skeleton=\"yes\"\n+               messagecontext=\"no\"\n+               verbose=\"yes\"\n+               noimports=\"no\">\n+    </wsdl2java>\n+    -->    \n+\n   </target>\n </project>\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/3cff166794bc2cffd495bc07c935e6f8360d5c23",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/4170f5afa315d31ddccefcfbcf7bf02644c8091a",
        "message": "Added 2 more wsdl's where Wsdl2java fails (Commented out!!!)\n- In FortuneService, not all necessary files get generated.\n- In realtime.wsdl, we throw an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245968 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_152",
        "file": [
            {
                "sha": "b5402f50ecd5f58d6c31714b4f14682e6c4919e2",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 23,
                "deletions": 0,
                "changes": 23,
                "blob_url": "https://github.com/apache/axis1-java/blob/3cff166794bc2cffd495bc07c935e6f8360d5c23/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/3cff166794bc2cffd495bc07c935e6f8360d5c23/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=3cff166794bc2cffd495bc07c935e6f8360d5c23",
                "patch": "@@ -374,6 +374,29 @@\n         <mapping namespace=\"http://test.com/reference\" package=\"test.filegen\"/>\n     </wsdl2java>\n     -->\n+\n+    <!--\n+    <wsdl2java url=\"http://www.lemurlabs.com/projects/soap/fortune/FortuneService.wsdl\"\n+               output=\"build/work\"\n+               testcase=\"no\"\n+               deployscope=\"none\"\n+               skeleton=\"yes\"\n+               messagecontext=\"no\"\n+               verbose=\"yes\"\n+               noimports=\"no\">\n+    </wsdl2java>\n+\n+    <wsdl2java url=\"http://services.xmltoday.com/vx_engine/wsdl_publish.vep/realtime.wsdl\"\n+               output=\"build/work\"\n+               testcase=\"no\"\n+               deployscope=\"none\"\n+               skeleton=\"yes\"\n+               messagecontext=\"no\"\n+               verbose=\"yes\"\n+               noimports=\"no\">\n+    </wsdl2java>\n+    -->    \n+\n   </target>\n </project>\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/ad325d23030d3b70c54fedf34f80de2d139535b8",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/92d854ac757f5ed25de61b1916188c7ce6e2c2eb",
        "message": "Move checkForUndefined so that it checks each imported WSDL file for\nthings undefined within it.  We used to get a NullPointerException for a\nsample that Sam had.  Now it generates a reasonable error.  Sam's sample\nwas:\nX.WSDL\nY.WSDL - depends on stuff from X but doesn't import X (bad wsdl)\nZ.WSDL - imports X.WSDL and Y.WSDL.\n\nWe used to call checkForUndefined after processing all files.  Because of\na quirk within WSDL4J, none of the types in Z are undefined, so we have\nto check each imported file.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253966 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_153",
        "file": [
            {
                "sha": "c3a7b2ddf438473bf2186894ff0afd75cb0cba7d",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/ad325d23030d3b70c54fedf34f80de2d139535b8/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/ad325d23030d3b70c54fedf34f80de2d139535b8/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=ad325d23030d3b70c54fedf34f80de2d139535b8",
                "patch": "@@ -150,8 +150,10 @@ emitFailNoBinding01=Emitter failure.  No binding found for port {0}\n emitFailNoBindingEntry01=Emitter failure. No binding entry found for {0}\n emitFailNoPortType01=Emitter failure.  No portType entry found for {0}\n emitFailtUndefinedBinding01=Emitter failure.  There is an undefined binding ({0}) in the WSDL document.\\nHint: make sure <port binding=\\\"..\\\"> is fully qualified.\n+emitFailtUndefinedBinding02=Emitter failure.  There is an undefined binding ({0}) in the WSDL document {1}.\\nHint: make sure <port binding=\\\"..\\\"> is fully qualified.\n emitFailtUndefinedMessage01=Emitter failure.  There is an undefined message ({0}) in the WSDL document.\\nHint: make sure <input message=\\\"..\\\"> and <output message=\"..\"> are fully qualified.\n emitFailtUndefinedPort01=Emitter failure.  There is an undefined portType ({0}) in the WSDL document.\\nHint: make sure <binding type=\\\"..\\\"> is fully qualified.\n+emitFailtUndefinedPort02=Emitter failure.  There is an undefined portType ({0}) in the WSDL document {1}.\\nHint: make sure <binding type=\\\"..\\\"> is fully qualified.\n \n emitter00=emitter\n empty00=empty"
            },
            {
                "sha": "471c89b828a3b20934a421ee4ab569714426de77",
                "filename": "src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "status": "modified",
                "additions": 29,
                "deletions": 11,
                "changes": 40,
                "blob_url": "https://github.com/apache/axis1-java/blob/ad325d23030d3b70c54fedf34f80de2d139535b8/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ad325d23030d3b70c54fedf34f80de2d139535b8/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/SymbolTable.java?ref=ad325d23030d3b70c54fedf34f80de2d139535b8",
                "patch": "@@ -326,9 +326,8 @@ public void dump(java.io.PrintStream out) {\n      */\n     protected void add(String context, Definition def, Document doc)\n             throws IOException {\n-        checkForUndefined(def);\n         URL contextURL = context == null ? null : getURL(null, context);\n-        populate(contextURL, def, doc);\n+        populate(contextURL, def, doc, null);\n         checkForUndefined();\n         populateParameters();\n         setReferences(def, doc);  // uses wrapped flag set in populateParameters\n@@ -337,16 +336,23 @@ protected void add(String context, Definition def, Document doc)\n     /**\n      * Scan the Definition for undefined objects and throw an error.\n      */ \n-    private void checkForUndefined(Definition def) throws IOException {\n+    private void checkForUndefined(Definition def, String filename) throws IOException {\n         if (def != null) {\n             // Bindings\n             Iterator ib = def.getBindings().values().iterator();\n             while (ib.hasNext()) {\n                 Binding binding = (Binding) ib.next();\n                 if (binding.isUndefined()) {\n-                    throw new IOException(\n+                    if (filename == null) {\n+                        throw new IOException(\n                             JavaUtils.getMessage(\"emitFailtUndefinedBinding01\",\n                                     binding.getQName().getLocalPart()));\n+                    }\n+                    else {\n+                        throw new IOException(\n+                            JavaUtils.getMessage(\"emitFailtUndefinedBinding02\",\n+                                    binding.getQName().getLocalPart(), filename));\n+                    }\n                 }\n             }\n \n@@ -355,9 +361,16 @@ private void checkForUndefined(Definition def) throws IOException {\n             while (ip.hasNext()) {\n                 PortType portType = (PortType) ip.next();\n                 if (portType.isUndefined()) {\n-                    throw new IOException(\n+                    if (filename == null) {\n+                        throw new IOException(\n                             JavaUtils.getMessage(\"emitFailtUndefinedPort01\",\n                                     portType.getQName().getLocalPart()));\n+                    }\n+                    else {\n+                        throw new IOException(\n+                            JavaUtils.getMessage(\"emitFailtUndefinedPort02\",\n+                                    portType.getQName().getLocalPart(), filename));\n+                    }\n                 }\n             }\n             \n@@ -400,10 +413,13 @@ private void checkForUndefined() throws IOException {\n     /**\n      * Add the given Definition and Document information to the symbol table (including imported\n      * symbols), populating it with SymTabEntries for each of the top-level symbols.\n+     * NOTE:  filename is used only by checkForUndefined so that it can report which WSDL file\n+     * has the problem.  If we're on the primary WSDL file, then we don't know the name and\n+     * filename will be null.  But we know the names of all imported files.\n      */\n     private HashSet importedFiles = new HashSet();\n-    private void populate(URL context, Definition def, Document doc)\n-            throws IOException {\n+    private void populate(URL context, Definition def, Document doc,\n+            String filename) throws IOException {\n         if (doc != null) {\n             populateTypes(doc);\n \n@@ -413,6 +429,7 @@ private void populate(URL context, Definition def, Document doc)\n             }\n         }\n         if (def != null) {\n+            checkForUndefined(def, filename);\n             if (addImports) {\n                 // Add the symbols from the wsdl:import'ed WSDL documents\n                 Map imports = def.getImports();\n@@ -425,7 +442,8 @@ private void populate(URL context, Definition def, Document doc)\n                             importedFiles.add(imp.getLocationURI());\n                             URL url = getURL(context, imp.getLocationURI());\n                             populate(url, imp.getDefinition(),\n-                                    XMLUtils.newDocument(url.toString()));\n+                                    XMLUtils.newDocument(url.toString()),\n+                                    url.toString());\n                         }\n                     }\n                 }\n@@ -496,10 +514,10 @@ private void lookForImports(URL context, Node node) throws IOException {\n                 NamedNodeMap attributes = child.getAttributes();\n                 Node importFile = attributes.getNamedItem(\"schemaLocation\");\n                 if (importFile != null) {\n+                    String filename = getURL(context,\n+                            importFile.getNodeValue()).toString();\n                     populate(context, null,\n-                            XMLUtils.newDocument(\n-                                    getURL(context,\n-                                    importFile.getNodeValue()).toString()));\n+                            XMLUtils.newDocument(filename), filename);\n                 }\n             }\n             lookForImports(context, child);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/2528629004a4db87bf92ca748748686902713ddc",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/c618a454dd33f8b2e2d072c9c13821ad00c5f682",
        "message": "Move checkForUndefined so that it checks each imported WSDL file for\nthings undefined within it.  We used to get a NullPointerException for a\nsample that Sam had.  Now it generates a reasonable error.  Sam's sample\nwas:\nX.WSDL\nY.WSDL - depends on stuff from X but doesn't import X (bad wsdl)\nZ.WSDL - imports X.WSDL and Y.WSDL.\n\nWe used to call checkForUndefined after processing all files.  Because of\na quirk within WSDL4J, none of the types in Z are undefined, so we have\nto check each imported file.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246893 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_154",
        "file": [
            {
                "sha": "c3a7b2ddf438473bf2186894ff0afd75cb0cba7d",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/2528629004a4db87bf92ca748748686902713ddc/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/2528629004a4db87bf92ca748748686902713ddc/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=2528629004a4db87bf92ca748748686902713ddc",
                "patch": "@@ -150,8 +150,10 @@ emitFailNoBinding01=Emitter failure.  No binding found for port {0}\n emitFailNoBindingEntry01=Emitter failure. No binding entry found for {0}\n emitFailNoPortType01=Emitter failure.  No portType entry found for {0}\n emitFailtUndefinedBinding01=Emitter failure.  There is an undefined binding ({0}) in the WSDL document.\\nHint: make sure <port binding=\\\"..\\\"> is fully qualified.\n+emitFailtUndefinedBinding02=Emitter failure.  There is an undefined binding ({0}) in the WSDL document {1}.\\nHint: make sure <port binding=\\\"..\\\"> is fully qualified.\n emitFailtUndefinedMessage01=Emitter failure.  There is an undefined message ({0}) in the WSDL document.\\nHint: make sure <input message=\\\"..\\\"> and <output message=\"..\"> are fully qualified.\n emitFailtUndefinedPort01=Emitter failure.  There is an undefined portType ({0}) in the WSDL document.\\nHint: make sure <binding type=\\\"..\\\"> is fully qualified.\n+emitFailtUndefinedPort02=Emitter failure.  There is an undefined portType ({0}) in the WSDL document {1}.\\nHint: make sure <binding type=\\\"..\\\"> is fully qualified.\n \n emitter00=emitter\n empty00=empty"
            },
            {
                "sha": "471c89b828a3b20934a421ee4ab569714426de77",
                "filename": "src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "status": "modified",
                "additions": 29,
                "deletions": 11,
                "changes": 40,
                "blob_url": "https://github.com/apache/axis1-java/blob/2528629004a4db87bf92ca748748686902713ddc/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2528629004a4db87bf92ca748748686902713ddc/src/org/apache/axis/wsdl/toJava/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/SymbolTable.java?ref=2528629004a4db87bf92ca748748686902713ddc",
                "patch": "@@ -326,9 +326,8 @@ public void dump(java.io.PrintStream out) {\n      */\n     protected void add(String context, Definition def, Document doc)\n             throws IOException {\n-        checkForUndefined(def);\n         URL contextURL = context == null ? null : getURL(null, context);\n-        populate(contextURL, def, doc);\n+        populate(contextURL, def, doc, null);\n         checkForUndefined();\n         populateParameters();\n         setReferences(def, doc);  // uses wrapped flag set in populateParameters\n@@ -337,16 +336,23 @@ protected void add(String context, Definition def, Document doc)\n     /**\n      * Scan the Definition for undefined objects and throw an error.\n      */ \n-    private void checkForUndefined(Definition def) throws IOException {\n+    private void checkForUndefined(Definition def, String filename) throws IOException {\n         if (def != null) {\n             // Bindings\n             Iterator ib = def.getBindings().values().iterator();\n             while (ib.hasNext()) {\n                 Binding binding = (Binding) ib.next();\n                 if (binding.isUndefined()) {\n-                    throw new IOException(\n+                    if (filename == null) {\n+                        throw new IOException(\n                             JavaUtils.getMessage(\"emitFailtUndefinedBinding01\",\n                                     binding.getQName().getLocalPart()));\n+                    }\n+                    else {\n+                        throw new IOException(\n+                            JavaUtils.getMessage(\"emitFailtUndefinedBinding02\",\n+                                    binding.getQName().getLocalPart(), filename));\n+                    }\n                 }\n             }\n \n@@ -355,9 +361,16 @@ private void checkForUndefined(Definition def) throws IOException {\n             while (ip.hasNext()) {\n                 PortType portType = (PortType) ip.next();\n                 if (portType.isUndefined()) {\n-                    throw new IOException(\n+                    if (filename == null) {\n+                        throw new IOException(\n                             JavaUtils.getMessage(\"emitFailtUndefinedPort01\",\n                                     portType.getQName().getLocalPart()));\n+                    }\n+                    else {\n+                        throw new IOException(\n+                            JavaUtils.getMessage(\"emitFailtUndefinedPort02\",\n+                                    portType.getQName().getLocalPart(), filename));\n+                    }\n                 }\n             }\n             \n@@ -400,10 +413,13 @@ private void checkForUndefined() throws IOException {\n     /**\n      * Add the given Definition and Document information to the symbol table (including imported\n      * symbols), populating it with SymTabEntries for each of the top-level symbols.\n+     * NOTE:  filename is used only by checkForUndefined so that it can report which WSDL file\n+     * has the problem.  If we're on the primary WSDL file, then we don't know the name and\n+     * filename will be null.  But we know the names of all imported files.\n      */\n     private HashSet importedFiles = new HashSet();\n-    private void populate(URL context, Definition def, Document doc)\n-            throws IOException {\n+    private void populate(URL context, Definition def, Document doc,\n+            String filename) throws IOException {\n         if (doc != null) {\n             populateTypes(doc);\n \n@@ -413,6 +429,7 @@ private void populate(URL context, Definition def, Document doc)\n             }\n         }\n         if (def != null) {\n+            checkForUndefined(def, filename);\n             if (addImports) {\n                 // Add the symbols from the wsdl:import'ed WSDL documents\n                 Map imports = def.getImports();\n@@ -425,7 +442,8 @@ private void populate(URL context, Definition def, Document doc)\n                             importedFiles.add(imp.getLocationURI());\n                             URL url = getURL(context, imp.getLocationURI());\n                             populate(url, imp.getDefinition(),\n-                                    XMLUtils.newDocument(url.toString()));\n+                                    XMLUtils.newDocument(url.toString()),\n+                                    url.toString());\n                         }\n                     }\n                 }\n@@ -496,10 +514,10 @@ private void lookForImports(URL context, Node node) throws IOException {\n                 NamedNodeMap attributes = child.getAttributes();\n                 Node importFile = attributes.getNamedItem(\"schemaLocation\");\n                 if (importFile != null) {\n+                    String filename = getURL(context,\n+                            importFile.getNodeValue()).toString();\n                     populate(context, null,\n-                            XMLUtils.newDocument(\n-                                    getURL(context,\n-                                    importFile.getNodeValue()).toString()));\n+                            XMLUtils.newDocument(filename), filename);\n                 }\n             }\n             lookForImports(context, child);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/a9f80baf15c5b81be5f56aa4927ec26679b45e9a",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f4ad0ff9566133a4849c22d9329d45ac2a8b1d80",
        "message": "A few days ago Java2WSDL -p option didn't work.  I fixed Emitter so it did.\nBut that fix broke Java2WSDL for classes in the default (no-name) package.\nIt would throw a NullPointerException.  For classes in the default package\nit USED to generate the namespace \"http://DefaultNamespace\".  It now does\nthat again.  But I wonder whether that'll be a problem.  It certainly doesn't\nroundtrip properly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253865 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_155",
        "file": [
            {
                "sha": "ac641d67e7f4e4f8efe8726b1307d3d1034afb59",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/a9f80baf15c5b81be5f56aa4927ec26679b45e9a/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a9f80baf15c5b81be5f56aa4927ec26679b45e9a/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=a9f80baf15c5b81be5f56aa4927ec26679b45e9a",
                "patch": "@@ -415,8 +415,11 @@ private void init() throws Exception {\n                 defaultTM = DefaultSOAP12TypeMappingImpl.create();\n             }\n \n-            if (intfNS == null) \n-                intfNS = namespaces.getCreate(cls.getPackage().getName());\n+            if (intfNS == null) {\n+                Package pkg = cls.getPackage();\n+                intfNS = namespaces.getCreate(\n+                        pkg == null ? null : pkg.getName());\n+            }\n             if (implNS == null)\n                 implNS = intfNS + \"-impl\";\n "
            },
            {
                "sha": "f18bce5aba56e328d7bab0d5d0b4788301ed7a06",
                "filename": "src/org/apache/axis/wsdl/fromJava/Namespaces.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/a9f80baf15c5b81be5f56aa4927ec26679b45e9a/src/org/apache/axis/wsdl/fromJava/Namespaces.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a9f80baf15c5b81be5f56aa4927ec26679b45e9a/src/org/apache/axis/wsdl/fromJava/Namespaces.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Namespaces.java?ref=a9f80baf15c5b81be5f56aa4927ec26679b45e9a",
                "patch": "@@ -204,7 +204,7 @@ private static String makeNamespaceFromPackageName(String packageName) {\n     \n     \n     private static String makeNamespaceFromPackageName(String packageName, String protocol) {\n-        if (packageName.equals(\"\") ||packageName == null)\n+        if (packageName == null || packageName.equals(\"\"))\n             return protocol + \"://\" + \"DefaultNamespace\";\n         StringTokenizer st = new StringTokenizer( packageName, \".\" );\n         String[] words = new String[ st.countTokens() ];"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e632cce9f399584befe798d6e332bebdcbca7365",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/957ea4803987d54c7ad4e5c628f3165c4868d8b1",
        "message": "A few days ago Java2WSDL -p option didn't work.  I fixed Emitter so it did.\nBut that fix broke Java2WSDL for classes in the default (no-name) package.\nIt would throw a NullPointerException.  For classes in the default package\nit USED to generate the namespace \"http://DefaultNamespace\".  It now does\nthat again.  But I wonder whether that'll be a problem.  It certainly doesn't\nroundtrip properly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246792 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_156",
        "file": [
            {
                "sha": "ac641d67e7f4e4f8efe8726b1307d3d1034afb59",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/e632cce9f399584befe798d6e332bebdcbca7365/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e632cce9f399584befe798d6e332bebdcbca7365/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=e632cce9f399584befe798d6e332bebdcbca7365",
                "patch": "@@ -415,8 +415,11 @@ private void init() throws Exception {\n                 defaultTM = DefaultSOAP12TypeMappingImpl.create();\n             }\n \n-            if (intfNS == null) \n-                intfNS = namespaces.getCreate(cls.getPackage().getName());\n+            if (intfNS == null) {\n+                Package pkg = cls.getPackage();\n+                intfNS = namespaces.getCreate(\n+                        pkg == null ? null : pkg.getName());\n+            }\n             if (implNS == null)\n                 implNS = intfNS + \"-impl\";\n "
            },
            {
                "sha": "f18bce5aba56e328d7bab0d5d0b4788301ed7a06",
                "filename": "src/org/apache/axis/wsdl/fromJava/Namespaces.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/e632cce9f399584befe798d6e332bebdcbca7365/src/org/apache/axis/wsdl/fromJava/Namespaces.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e632cce9f399584befe798d6e332bebdcbca7365/src/org/apache/axis/wsdl/fromJava/Namespaces.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Namespaces.java?ref=e632cce9f399584befe798d6e332bebdcbca7365",
                "patch": "@@ -204,7 +204,7 @@ private static String makeNamespaceFromPackageName(String packageName) {\n     \n     \n     private static String makeNamespaceFromPackageName(String packageName, String protocol) {\n-        if (packageName.equals(\"\") ||packageName == null)\n+        if (packageName == null || packageName.equals(\"\"))\n             return protocol + \"://\" + \"DefaultNamespace\";\n         StringTokenizer st = new StringTokenizer( packageName, \".\" );\n         String[] words = new String[ st.countTokens() ];"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/52b3e10e9c5c536f10b95b9414031d720688ec5c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/81ed54ff47f9c2519bc25b80a1a09bc0e9c0bf8a",
        "message": "Fix bug whereby the AdminClient would cause NullPointerExceptions in\nany call which attempted to read from a URL.  Note: no unit or\nfunction tests were affected by the removal of the offending function,\nso ***GLEN*** please review this change.\n\nRe-introduced the function test, but treat the fault generated by being\noff the net as a success (Note: this surfaced another bug, so adding\nintentional fault tests is on my todo list).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252055 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_157",
        "file": [
            {
                "sha": "84271b57e925966d5e92025a907815eb306e09bc",
                "filename": "src/org/apache/axis/client/AdminClient.java",
                "status": "modified",
                "additions": 0,
                "deletions": 6,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/52b3e10e9c5c536f10b95b9414031d720688ec5c/src/org/apache/axis/client/AdminClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/52b3e10e9c5c536f10b95b9414031d720688ec5c/src/org/apache/axis/client/AdminClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AdminClient.java?ref=52b3e10e9c5c536f10b95b9414031d720688ec5c",
                "patch": "@@ -80,12 +80,6 @@\n \n public abstract class AdminClient {\n \n-    // Temporary home until we find something better.\n-    static {\n-        // System.out.println(\"Registering URL stream handler factory.\");\n-        URL.setURLStreamHandlerFactory(Transport.getURLStreamHandlerFactory());\n-    }\n-    \n     // do the real work, and throw exception if fubar\n     // this is reused by the TestHTTPDeploy functional tests\n     public void doAdmin (String[] args)"
            },
            {
                "sha": "6e17e4512c51a42cb9ca17e7129d08b8192c1d0a",
                "filename": "src/org/apache/axis/client/Transport.java",
                "status": "modified",
                "additions": 0,
                "deletions": 24,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/52b3e10e9c5c536f10b95b9414031d720688ec5c/src/org/apache/axis/client/Transport.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/52b3e10e9c5c536f10b95b9414031d720688ec5c/src/org/apache/axis/client/Transport.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Transport.java?ref=52b3e10e9c5c536f10b95b9414031d720688ec5c",
                "patch": "@@ -64,30 +64,6 @@\n import org.apache.axis.Handler;\n \n public abstract class Transport {\n-    static class AxisURLHandler extends URLStreamHandler {\n-        /** This is just for parsing purposes, so don't really open any\n-         * connections.  At some point we may actually want to do something\n-         * here...\n-         */\n-        public URLConnection openConnection(URL url) throws IOException\n-        {\n-            return null;\n-        }\n-    }\n-    \n-    static class AxisURLStreamHandlerFactory implements URLStreamHandlerFactory {\n-        public URLStreamHandler createURLStreamHandler(String protocol)\n-        {\n-            // For now, just accept anything.  Later we might want to\n-            // generate MalformedURLExceptions for non-supported protocols.\n-            return new AxisURLHandler();\n-        }\n-    }\n-    \n-    public static URLStreamHandlerFactory getURLStreamHandlerFactory()\n-    {\n-        return new AxisURLStreamHandlerFactory();\n-    }\n     \n     /**\n      * Synonyms for MessageContext userid / password."
            },
            {
                "sha": "23a07e00b6e13500bb346b2d9cc90dfad517ad29",
                "filename": "test/functional/TestTransportSample.java",
                "status": "modified",
                "additions": 12,
                "deletions": 8,
                "changes": 20,
                "blob_url": "https://github.com/apache/axis1-java/blob/52b3e10e9c5c536f10b95b9414031d720688ec5c/test/functional/TestTransportSample.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/52b3e10e9c5c536f10b95b9414031d720688ec5c/test/functional/TestTransportSample.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/functional/TestTransportSample.java?ref=52b3e10e9c5c536f10b95b9414031d720688ec5c",
                "patch": "@@ -60,7 +60,6 @@\n import java.util.*;\n \n import org.apache.axis.AxisFault ;\n-import org.apache.axis.client.http.AdminClient;\n import org.apache.axis.utils.Debug ;\n import org.apache.axis.utils.Options ;\n import org.apache.axis.utils.QName ;\n@@ -92,16 +91,23 @@ public void doTestDeploy () throws Exception {\n     }\n     \n     /* NOT RECOMMENDED -- this calls out to xmltoday.com which is flaky.\n-       Do not do this in regular regression tests since it can result in\n-       spurious failures due to no fault of Axis code. -- RobJ\n+       Verify that it either succeeds, or that it produces a specific\n+       failure. */\n     \n     public void doTestIBM () throws Exception {\n         String[] args = { \"IBM\" };\n-        FileTest.main(args);\n+        try {\n+            FileTest.main(args);\n+        } catch (AxisFault e) {\n+            String fault = e.getFaultString();\n+            if (fault == null || fault.indexOf(\"java.net.UnknownHost\")<0)\n+                throw e;\n+            int start = fault.indexOf(\": \");\n+            int eol   = fault.indexOf('\\n', start+1);\n+            System.out.println(fault.substring(start+2, eol));\n+        }\n     }\n     \n-     */\n-    \n     public void doTestXXX () throws Exception {\n         String[] args = { \"XXX\" };\n         FileTest.main(args);\n@@ -114,10 +120,8 @@ public void testService () throws Exception {\n             doTestClientDeploy();\n             System.out.println(\"Testing deployment...\");\n             doTestDeploy();\n-            /*\n             System.out.println(\"Testing service with symbol IBM...\");\n             doTestIBM();\n-             */\n             System.out.println(\"Testing service with symbol XXX...\");\n             doTestXXX();\n             System.out.println(\"Test complete.\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/302b060c73ceb6515d2cc76133477397c19e0ba2",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f3691a979ae40e5fbea9fb3382080c0e2b05aea5",
        "message": "Fix bug whereby the AdminClient would cause NullPointerExceptions in\nany call which attempted to read from a URL.  Note: no unit or\nfunction tests were affected by the removal of the offending function,\nso ***GLEN*** please review this change.\n\nRe-introduced the function test, but treat the fault generated by being\noff the net as a success (Note: this surfaced another bug, so adding\nintentional fault tests is on my todo list).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@244983 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_158",
        "file": [
            {
                "sha": "84271b57e925966d5e92025a907815eb306e09bc",
                "filename": "src/org/apache/axis/client/AdminClient.java",
                "status": "modified",
                "additions": 0,
                "deletions": 6,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/302b060c73ceb6515d2cc76133477397c19e0ba2/src/org/apache/axis/client/AdminClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/302b060c73ceb6515d2cc76133477397c19e0ba2/src/org/apache/axis/client/AdminClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AdminClient.java?ref=302b060c73ceb6515d2cc76133477397c19e0ba2",
                "patch": "@@ -80,12 +80,6 @@\n \n public abstract class AdminClient {\n \n-    // Temporary home until we find something better.\n-    static {\n-        // System.out.println(\"Registering URL stream handler factory.\");\n-        URL.setURLStreamHandlerFactory(Transport.getURLStreamHandlerFactory());\n-    }\n-    \n     // do the real work, and throw exception if fubar\n     // this is reused by the TestHTTPDeploy functional tests\n     public void doAdmin (String[] args)"
            },
            {
                "sha": "6e17e4512c51a42cb9ca17e7129d08b8192c1d0a",
                "filename": "src/org/apache/axis/client/Transport.java",
                "status": "modified",
                "additions": 0,
                "deletions": 24,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/302b060c73ceb6515d2cc76133477397c19e0ba2/src/org/apache/axis/client/Transport.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/302b060c73ceb6515d2cc76133477397c19e0ba2/src/org/apache/axis/client/Transport.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Transport.java?ref=302b060c73ceb6515d2cc76133477397c19e0ba2",
                "patch": "@@ -64,30 +64,6 @@\n import org.apache.axis.Handler;\n \n public abstract class Transport {\n-    static class AxisURLHandler extends URLStreamHandler {\n-        /** This is just for parsing purposes, so don't really open any\n-         * connections.  At some point we may actually want to do something\n-         * here...\n-         */\n-        public URLConnection openConnection(URL url) throws IOException\n-        {\n-            return null;\n-        }\n-    }\n-    \n-    static class AxisURLStreamHandlerFactory implements URLStreamHandlerFactory {\n-        public URLStreamHandler createURLStreamHandler(String protocol)\n-        {\n-            // For now, just accept anything.  Later we might want to\n-            // generate MalformedURLExceptions for non-supported protocols.\n-            return new AxisURLHandler();\n-        }\n-    }\n-    \n-    public static URLStreamHandlerFactory getURLStreamHandlerFactory()\n-    {\n-        return new AxisURLStreamHandlerFactory();\n-    }\n     \n     /**\n      * Synonyms for MessageContext userid / password."
            },
            {
                "sha": "23a07e00b6e13500bb346b2d9cc90dfad517ad29",
                "filename": "test/functional/TestTransportSample.java",
                "status": "modified",
                "additions": 12,
                "deletions": 8,
                "changes": 20,
                "blob_url": "https://github.com/apache/axis1-java/blob/302b060c73ceb6515d2cc76133477397c19e0ba2/test/functional/TestTransportSample.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/302b060c73ceb6515d2cc76133477397c19e0ba2/test/functional/TestTransportSample.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/functional/TestTransportSample.java?ref=302b060c73ceb6515d2cc76133477397c19e0ba2",
                "patch": "@@ -60,7 +60,6 @@\n import java.util.*;\n \n import org.apache.axis.AxisFault ;\n-import org.apache.axis.client.http.AdminClient;\n import org.apache.axis.utils.Debug ;\n import org.apache.axis.utils.Options ;\n import org.apache.axis.utils.QName ;\n@@ -92,16 +91,23 @@ public void doTestDeploy () throws Exception {\n     }\n     \n     /* NOT RECOMMENDED -- this calls out to xmltoday.com which is flaky.\n-       Do not do this in regular regression tests since it can result in\n-       spurious failures due to no fault of Axis code. -- RobJ\n+       Verify that it either succeeds, or that it produces a specific\n+       failure. */\n     \n     public void doTestIBM () throws Exception {\n         String[] args = { \"IBM\" };\n-        FileTest.main(args);\n+        try {\n+            FileTest.main(args);\n+        } catch (AxisFault e) {\n+            String fault = e.getFaultString();\n+            if (fault == null || fault.indexOf(\"java.net.UnknownHost\")<0)\n+                throw e;\n+            int start = fault.indexOf(\": \");\n+            int eol   = fault.indexOf('\\n', start+1);\n+            System.out.println(fault.substring(start+2, eol));\n+        }\n     }\n     \n-     */\n-    \n     public void doTestXXX () throws Exception {\n         String[] args = { \"XXX\" };\n         FileTest.main(args);\n@@ -114,10 +120,8 @@ public void testService () throws Exception {\n             doTestClientDeploy();\n             System.out.println(\"Testing deployment...\");\n             doTestDeploy();\n-            /*\n             System.out.println(\"Testing service with symbol IBM...\");\n             doTestIBM();\n-             */\n             System.out.println(\"Testing service with symbol XXX...\");\n             doTestXXX();\n             System.out.println(\"Test complete.\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/360a3a4ca9607aa140fdbba29bd581669b9886b1",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/eb3715f53f4989c0d3a8ea36d835889bea3603f7",
        "message": "Problem:\necho?wsdl dies with an NPE.  The source of the problem is\necho's deploy.wsdd which contains echoMapArray meta data that no longer\nmatches what is produced by Java2WSDL.  The net effect was two\nOperationDescs being produced from the same operation...one of\nthe OperationDescs (the one from the deploy.wsdd) resulted in the\nNPE.\n\nAll of these problems may have been exposed by recent HashMap/Hashtable\nchanges.\n\n\nSolution:\n\n1) The echo deploy.wsdd contains the qname ArrayOfMap.\n   Changed the qname to ArrayOf_apachesoap_Map\n   to comply with the current array naming conventions in Java2WSDL.\n\n2) Made sure that Java2WSDL emits a http://xml.apache.org/xml-soap namespace\n   and associates it with the prefix apachesoap.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254464 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_159",
        "file": [
            {
                "sha": "35e2051a245144f053c2ff308601f252bb282f8e",
                "filename": "samples/echo/deploy.wsdd",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/360a3a4ca9607aa140fdbba29bd581669b9886b1/samples/echo/deploy.wsdd",
                "raw_url": "https://github.com/apache/axis1-java/raw/360a3a4ca9607aa140fdbba29bd581669b9886b1/samples/echo/deploy.wsdd",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/deploy.wsdd?ref=360a3a4ca9607aa140fdbba29bd581669b9886b1",
                "patch": "@@ -65,7 +65,7 @@\n       />\n       <typeMapping\n         xmlns:ns=\"http://soapinterop.org/\"\n-        qname=\"ns:ArrayOf_tns2_Map\"\n+        qname=\"ns:ArrayOf_apachesoap_Map\"\n         type=\"java:java.util.HashMap[]\"\n         serializer=\"org.apache.axis.encoding.ser.ArraySerializerFactory\"\n         deserializer=\"org.apache.axis.encoding.ser.ArrayDeserializerFactory\"\n@@ -161,8 +161,8 @@\n       <operation name=\"echoMap\" returnQName=\"return\" returnType=\"RTypeNS:Map\" xmlns:RTypeNS=\"http://xml.apache.org/xml-soap\" >\n         <parameter name=\"input\" type=\"tns:Map\" xmlns:tns=\"http://xml.apache.org/xml-soap\"/>\n       </operation>\n-      <operation name=\"echoMapArray\" returnQName=\"return\" returnType=\"RTypeNS:ArrayOfMap\" xmlns:RTypeNS=\"http://soapinterop.org/xsd\" >\n-        <parameter name=\"input\" type=\"tns:ArrayOfMap\" xmlns:tns=\"http://soapinterop.org/xsd\"/>\n+      <operation name=\"echoMapArray\" returnQName=\"return\" returnType=\"RTypeNS:ArrayOf_apachesoap_Map\" xmlns:RTypeNS=\"http://soapinterop.org/\" >\n+        <parameter name=\"input\" type=\"tns:ArrayOf_apachesoap_Map\" xmlns:tns=\"http://soapinterop.org/\"/>\n       </operation>\n   </service>\n </deployment>"
            },
            {
                "sha": "ed4eab8c9083cc3ea6ca9b26f81057a209c1a846",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/360a3a4ca9607aa140fdbba29bd581669b9886b1/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/360a3a4ca9607aa140fdbba29bd581669b9886b1/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=360a3a4ca9607aa140fdbba29bd581669b9886b1",
                "patch": "@@ -74,14 +74,14 @@\n     public static final String NS_PREFIX_SCHEMA_XSD = \"xsd\" ;\n     public static final String NS_PREFIX_WSDL       = \"wsdl\" ;\n     public static final String NS_PREFIX_WSDL_SOAP  = \"wsdlsoap\";\n+    public static final String NS_PREFIX_XMLSOAP    = \"apachesoap\";\n \n \n     // Axis Namespaces\n     public static final String NS_URI_AXIS = \"http://xml.apache.org/axis/\";\n     public static final String NS_URI_XMLSOAP = \"http://xml.apache.org/xml-soap\";\n \n \n-\n     //\n     // SOAP-ENV Namespaces\n     //"
            },
            {
                "sha": "eabbb2ed271c8173f1ec60ca06483fbeee10cb8f",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/360a3a4ca9607aa140fdbba29bd581669b9886b1/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/360a3a4ca9607aa140fdbba29bd581669b9886b1/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=360a3a4ca9607aa140fdbba29bd581669b9886b1",
                "patch": "@@ -489,6 +489,11 @@ private void writeDefinitions(Definition def, String tns)\n                          Constants.URI_DEFAULT_SCHEMA_XSD);\n         namespaces.putPrefix(Constants.URI_DEFAULT_SCHEMA_XSD,\n                              Constants.NS_PREFIX_SCHEMA_XSD);\n+\n+        def.addNamespace(Constants.NS_PREFIX_XMLSOAP,\n+                         Constants.NS_URI_XMLSOAP);\n+        namespaces.putPrefix(Constants.NS_URI_XMLSOAP,\n+                             Constants.NS_PREFIX_XMLSOAP);\n     }\n \n    /**"
            },
            {
                "sha": "c1d7b79a644cd1c16ef49d6fc0f542b754b30159",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/360a3a4ca9607aa140fdbba29bd581669b9886b1/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/360a3a4ca9607aa140fdbba29bd581669b9886b1/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java?ref=360a3a4ca9607aa140fdbba29bd581669b9886b1",
                "patch": "@@ -845,6 +845,7 @@ else if (type == OperationType.NOTIFICATION) {\n      */\n     private String constructSignature(Parameters parms, String opName) {\n         String name  = Utils.xmlNameToJava(opName);\n+\n         String ret = parms.returnType == null ? \"void\" : parms.returnType.getName();\n         String signature = \"    public \" + ret + \" \" + name + \"(\";\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/8ea431f3dd1a871f0b2db0500995baa1d991d12e",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b6c10a2f10a8d0d599d894092fe870cadae3a389",
        "message": "Problem:\necho?wsdl dies with an NPE.  The source of the problem is\necho's deploy.wsdd which contains echoMapArray meta data that no longer\nmatches what is produced by Java2WSDL.  The net effect was two\nOperationDescs being produced from the same operation...one of\nthe OperationDescs (the one from the deploy.wsdd) resulted in the\nNPE.\n\nAll of these problems may have been exposed by recent HashMap/Hashtable\nchanges.\n\n\nSolution:\n\n1) The echo deploy.wsdd contains the qname ArrayOfMap.\n   Changed the qname to ArrayOf_apachesoap_Map\n   to comply with the current array naming conventions in Java2WSDL.\n\n2) Made sure that Java2WSDL emits a http://xml.apache.org/xml-soap namespace\n   and associates it with the prefix apachesoap.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247391 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_160",
        "file": [
            {
                "sha": "35e2051a245144f053c2ff308601f252bb282f8e",
                "filename": "samples/echo/deploy.wsdd",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/8ea431f3dd1a871f0b2db0500995baa1d991d12e/samples/echo/deploy.wsdd",
                "raw_url": "https://github.com/apache/axis1-java/raw/8ea431f3dd1a871f0b2db0500995baa1d991d12e/samples/echo/deploy.wsdd",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/deploy.wsdd?ref=8ea431f3dd1a871f0b2db0500995baa1d991d12e",
                "patch": "@@ -65,7 +65,7 @@\n       />\n       <typeMapping\n         xmlns:ns=\"http://soapinterop.org/\"\n-        qname=\"ns:ArrayOf_tns2_Map\"\n+        qname=\"ns:ArrayOf_apachesoap_Map\"\n         type=\"java:java.util.HashMap[]\"\n         serializer=\"org.apache.axis.encoding.ser.ArraySerializerFactory\"\n         deserializer=\"org.apache.axis.encoding.ser.ArrayDeserializerFactory\"\n@@ -161,8 +161,8 @@\n       <operation name=\"echoMap\" returnQName=\"return\" returnType=\"RTypeNS:Map\" xmlns:RTypeNS=\"http://xml.apache.org/xml-soap\" >\n         <parameter name=\"input\" type=\"tns:Map\" xmlns:tns=\"http://xml.apache.org/xml-soap\"/>\n       </operation>\n-      <operation name=\"echoMapArray\" returnQName=\"return\" returnType=\"RTypeNS:ArrayOfMap\" xmlns:RTypeNS=\"http://soapinterop.org/xsd\" >\n-        <parameter name=\"input\" type=\"tns:ArrayOfMap\" xmlns:tns=\"http://soapinterop.org/xsd\"/>\n+      <operation name=\"echoMapArray\" returnQName=\"return\" returnType=\"RTypeNS:ArrayOf_apachesoap_Map\" xmlns:RTypeNS=\"http://soapinterop.org/\" >\n+        <parameter name=\"input\" type=\"tns:ArrayOf_apachesoap_Map\" xmlns:tns=\"http://soapinterop.org/\"/>\n       </operation>\n   </service>\n </deployment>"
            },
            {
                "sha": "ed4eab8c9083cc3ea6ca9b26f81057a209c1a846",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/8ea431f3dd1a871f0b2db0500995baa1d991d12e/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8ea431f3dd1a871f0b2db0500995baa1d991d12e/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=8ea431f3dd1a871f0b2db0500995baa1d991d12e",
                "patch": "@@ -74,14 +74,14 @@\n     public static final String NS_PREFIX_SCHEMA_XSD = \"xsd\" ;\n     public static final String NS_PREFIX_WSDL       = \"wsdl\" ;\n     public static final String NS_PREFIX_WSDL_SOAP  = \"wsdlsoap\";\n+    public static final String NS_PREFIX_XMLSOAP    = \"apachesoap\";\n \n \n     // Axis Namespaces\n     public static final String NS_URI_AXIS = \"http://xml.apache.org/axis/\";\n     public static final String NS_URI_XMLSOAP = \"http://xml.apache.org/xml-soap\";\n \n \n-\n     //\n     // SOAP-ENV Namespaces\n     //"
            },
            {
                "sha": "eabbb2ed271c8173f1ec60ca06483fbeee10cb8f",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/8ea431f3dd1a871f0b2db0500995baa1d991d12e/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8ea431f3dd1a871f0b2db0500995baa1d991d12e/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=8ea431f3dd1a871f0b2db0500995baa1d991d12e",
                "patch": "@@ -489,6 +489,11 @@ private void writeDefinitions(Definition def, String tns)\n                          Constants.URI_DEFAULT_SCHEMA_XSD);\n         namespaces.putPrefix(Constants.URI_DEFAULT_SCHEMA_XSD,\n                              Constants.NS_PREFIX_SCHEMA_XSD);\n+\n+        def.addNamespace(Constants.NS_PREFIX_XMLSOAP,\n+                         Constants.NS_URI_XMLSOAP);\n+        namespaces.putPrefix(Constants.NS_URI_XMLSOAP,\n+                             Constants.NS_PREFIX_XMLSOAP);\n     }\n \n    /**"
            },
            {
                "sha": "c1d7b79a644cd1c16ef49d6fc0f542b754b30159",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/8ea431f3dd1a871f0b2db0500995baa1d991d12e/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/8ea431f3dd1a871f0b2db0500995baa1d991d12e/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaGeneratorFactory.java?ref=8ea431f3dd1a871f0b2db0500995baa1d991d12e",
                "patch": "@@ -845,6 +845,7 @@ else if (type == OperationType.NOTIFICATION) {\n      */\n     private String constructSignature(Parameters parms, String opName) {\n         String name  = Utils.xmlNameToJava(opName);\n+\n         String ret = parms.returnType == null ? \"void\" : parms.returnType.getName();\n         String signature = \"    public \" + ret + \" \" + name + \"(\";\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/370c115114cf39486018e17ee0d620db0800c942",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/8828a68c5a8f8da6bc54bde5540ff67cda3370a6",
        "message": "Call log.debug ONLY if log.isDebugEnabled is true. This seems to fix \"NPE with multithreaded client in RC1\" problem reported by \"Volanis, Alexander\" <AVolanis@rsasecurity.com>\n\nDetails:\n- http://marc.theaimsgroup.com/?t=103124516800009&r=1&w=2\n- http://marc.theaimsgroup.com/?t=103120473600002&r=1&w=2\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@255055 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_161",
        "file": [
            {
                "sha": "c64f6e2385c700fc4bfe0505b394e794d0043625",
                "filename": "src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/370c115114cf39486018e17ee0d620db0800c942/src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/370c115114cf39486018e17ee0d620db0800c942/src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java?ref=370c115114cf39486018e17ee0d620db0800c942",
                "patch": "@@ -176,7 +176,8 @@ public static EngineConfigurationFactory newFactory(Object obj) {\n         }\n \n         if (factory != null) {\n-            log.debug(JavaUtils.getMessage(\"engineFactory\", factory.getClass().getName()));\n+            if(log.isDebugEnabled())\n+                log.debug(JavaUtils.getMessage(\"engineFactory\", factory.getClass().getName()));\n         } else {\n             log.error(JavaUtils.getMessage(\"engineConfigFactoryMissing\"));\n             // we should be throwing an exception here,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/11755e5db2061c13c2611a35283ea0473b0c43e1",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/f0b6c3d6b2b444d3559a6f7c145c050ce7734af8",
        "message": "Call log.debug ONLY if log.isDebugEnabled is true. This seems to fix \"NPE with multithreaded client in RC1\" problem reported by \"Volanis, Alexander\" <AVolanis@rsasecurity.com>\n\nDetails:\n- http://marc.theaimsgroup.com/?t=103124516800009&r=1&w=2\n- http://marc.theaimsgroup.com/?t=103120473600002&r=1&w=2\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247984 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_162",
        "file": [
            {
                "sha": "c64f6e2385c700fc4bfe0505b394e794d0043625",
                "filename": "src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/11755e5db2061c13c2611a35283ea0473b0c43e1/src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/11755e5db2061c13c2611a35283ea0473b0c43e1/src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/configuration/EngineConfigurationFactoryFinder.java?ref=11755e5db2061c13c2611a35283ea0473b0c43e1",
                "patch": "@@ -176,7 +176,8 @@ public static EngineConfigurationFactory newFactory(Object obj) {\n         }\n \n         if (factory != null) {\n-            log.debug(JavaUtils.getMessage(\"engineFactory\", factory.getClass().getName()));\n+            if(log.isDebugEnabled())\n+                log.debug(JavaUtils.getMessage(\"engineFactory\", factory.getClass().getName()));\n         } else {\n             log.error(JavaUtils.getMessage(\"engineConfigFactoryMissing\"));\n             // we should be throwing an exception here,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/7e75f3e9ce2b22af1072ca13779297acd4127f5e",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/85b732bc66a2e1ff2bb769fc2d25fac6e679425e",
        "message": "Fixed NPE in SOAPService.\n\nAdded --soapAction option to Java2WSDL.  Option values are\n   DEFAULT:  uses the information in the OperationDesc to set soapAction\n             (which is probably \"\").  This is also the default.\n   NONE:     forces soapAction=\"\"\n   OPERATION: sets the soapAction to the name of the operation.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254148 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_163",
        "file": [
            {
                "sha": "31e9506ea26d064a5c739fafaf0445acea7520a5",
                "filename": "src/org/apache/axis/handlers/soap/SOAPService.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/handlers/soap/SOAPService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/handlers/soap/SOAPService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/soap/SOAPService.java?ref=7e75f3e9ce2b22af1072ca13779297acd4127f5e",
                "patch": "@@ -313,6 +313,9 @@ public void setServiceDescription(ServiceDesc serviceDescription) {\n \n     public void setPropertyParent(Hashtable parent)\n     {\n+        if (options == null) {\n+            options = new LockableHashtable();\n+        }\n         ((LockableHashtable)options).setParent(parent);\n     }\n "
            },
            {
                "sha": "17f65b1816a306445b5a451d5132c3ba883e62b4",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=7e75f3e9ce2b22af1072ca13779297acd4127f5e",
                "patch": "@@ -838,3 +838,5 @@ implAlreadySet=Attempt to set implementation class on a ServiceDesc which has al\n cantCreateBean00=Unable to create JavaBean of type {0}.  Missing default constructor?  Error was: {1}.\n faultDuringCleanup=AxisEngine faulted during cleanup!\n \n+j2woptsoapAction00=value of the operation's soapAction field. Values are DEFAULT, OPERATION or NONE. OPERATION forces soapAction to the name of the operation.  DEFAULT causes the soapAction to be set according to the operation's meta data (usually \"\").  NONE forces the soapAction to \"\".  The default is DEFAULT.\n+j2wBadSoapAction00=The value of --soapAction must be DEFAULT, NONE or OPERATION."
            },
            {
                "sha": "902d91a05835e55262aed2e288f95f660bcdbd22",
                "filename": "src/org/apache/axis/wsdl/Java2WSDL.java",
                "status": "modified",
                "additions": 21,
                "deletions": 1,
                "changes": 22,
                "blob_url": "https://github.com/apache/axis1-java/blob/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/wsdl/Java2WSDL.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/wsdl/Java2WSDL.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/Java2WSDL.java?ref=7e75f3e9ce2b22af1072ca13779297acd4127f5e",
                "patch": "@@ -95,6 +95,7 @@\n     protected static final int METHODS_NOTALLOWED_OPT = 'x';\n     protected static final int STOP_CLASSES_OPT = 'c';\n     protected static final int TYPEMAPPING_OPT = 'T';\n+    protected static final int SOAPACTION_OPT = 'A';\n \n     /**\n      *  Define the understood options. Each CLOptionDescriptor contains:\n@@ -177,7 +178,11 @@\n         new CLOptionDescriptor(\"typeMappingVersion\",\n                 CLOptionDescriptor.ARGUMENT_REQUIRED,\n                 TYPEMAPPING_OPT,\n-                JavaUtils.getMessage(\"j2wopttypeMapping00\"))\n+                JavaUtils.getMessage(\"j2wopttypeMapping00\")),\n+        new CLOptionDescriptor(\"soapAction\",\n+                CLOptionDescriptor.ARGUMENT_REQUIRED,\n+                SOAPACTION_OPT,\n+                JavaUtils.getMessage(\"j2woptsoapAction00\"))\n     };\n \n     protected Emitter emitter;\n@@ -327,6 +332,21 @@ else if (\"Implementation\".equalsIgnoreCase(modeArg))\n             }\n             break;\n             \n+        case SOAPACTION_OPT:\n+            value = option.getArgument();\n+            if (value.equalsIgnoreCase(\"DEFAULT\")) {\n+                emitter.setSoapAction(\"DEFAULT\");\n+            } else if (value.equalsIgnoreCase(\"OPERATION\")) {\n+                emitter.setSoapAction(\"OPERATION\");\n+            } else if (value.equalsIgnoreCase(\"NONE\")) {\n+                emitter.setSoapAction(\"NONE\");\n+            } else {\n+                System.out.println(JavaUtils.getMessage(\"j2wBadSoapAction00\"));\n+            }\n+            break;\n+\n+        default: \n+            break;\n         }\n     }        \n "
            },
            {
                "sha": "34989a31f6dceeb6f289f83b78298a3336fa5247",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 32,
                "deletions": 3,
                "changes": 35,
                "blob_url": "https://github.com/apache/axis1-java/blob/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/7e75f3e9ce2b22af1072ca13779297acd4127f5e/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=7e75f3e9ce2b22af1072ca13779297acd4127f5e",
                "patch": "@@ -1,4 +1,3 @@\n-\n /*\n  * The Apache Software License, Version 1.1\n  *\n@@ -143,6 +142,7 @@\n \n     private ServiceDesc serviceDesc;\n     private ServiceDesc serviceDesc2;\n+    private String soapAction = \"DEFAULT\";\n \n     /**\n      * Construct Emitter.\n@@ -732,9 +732,22 @@ private BindingOperation writeBindingOperation (Definition def,\n         bindingOper.setOperation(oper);\n \n         SOAPOperation soapOper = new SOAPOperationImpl();\n-        String soapAction = desc.getSoapAction();\n-        if (soapAction == null) {\n+\n+        \n+        // If the soapAction option is OPERATION, force\n+        // soapAction to the name of the operation. If NONE,\n+        // force soapAction to \"\".\n+        // Otherwise use the information in the operationDesc.\n+        String soapAction = \"\";\n+        if (getSoapAction().equals(\"OPERATION\")) {\n+            soapAction = oper.getName();\n+        } else if (getSoapAction().equals(\"NONE\")) {\n             soapAction = \"\";\n+        } else {\n+            soapAction = desc.getSoapAction();\n+            if (soapAction == null) {\n+                soapAction = \"\";\n+            }\n         }\n         soapOper.setSoapActionURI(soapAction);\n \n@@ -1365,6 +1378,22 @@ public void setDescription(String description) {\n         this.description = description;\n     }\n \n+    /**\n+     * Returns the soapAction option value\n+     * @return the String DEFAULT, NONE or OPERATION\n+     */\n+    public String getSoapAction() {\n+        return soapAction;\n+    }\n+\n+    /**\n+     * Sets the soapAction option value\n+     * @param must be DEFAULT, NONE, or OPERATION\n+     */\n+    public void setSoapAction(String value) {\n+        soapAction = value;\n+    }\n+\n     /**\n      * Returns the <code>TypeMapping</code> used by the service\n      * @return the <code>TypeMapping</code> used by the service"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b52d4f8cfa8e82e31341a449af758d27530bc81b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/ab3cb829273b8b6bf8ec116af434f889c674b050",
        "message": "Fixed NPE in SOAPService.\n\nAdded --soapAction option to Java2WSDL.  Option values are\n   DEFAULT:  uses the information in the OperationDesc to set soapAction\n             (which is probably \"\").  This is also the default.\n   NONE:     forces soapAction=\"\"\n   OPERATION: sets the soapAction to the name of the operation.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247075 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_164",
        "file": [
            {
                "sha": "31e9506ea26d064a5c739fafaf0445acea7520a5",
                "filename": "src/org/apache/axis/handlers/soap/SOAPService.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/handlers/soap/SOAPService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/handlers/soap/SOAPService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/soap/SOAPService.java?ref=b52d4f8cfa8e82e31341a449af758d27530bc81b",
                "patch": "@@ -313,6 +313,9 @@ public void setServiceDescription(ServiceDesc serviceDescription) {\n \n     public void setPropertyParent(Hashtable parent)\n     {\n+        if (options == null) {\n+            options = new LockableHashtable();\n+        }\n         ((LockableHashtable)options).setParent(parent);\n     }\n "
            },
            {
                "sha": "17f65b1816a306445b5a451d5132c3ba883e62b4",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=b52d4f8cfa8e82e31341a449af758d27530bc81b",
                "patch": "@@ -838,3 +838,5 @@ implAlreadySet=Attempt to set implementation class on a ServiceDesc which has al\n cantCreateBean00=Unable to create JavaBean of type {0}.  Missing default constructor?  Error was: {1}.\n faultDuringCleanup=AxisEngine faulted during cleanup!\n \n+j2woptsoapAction00=value of the operation's soapAction field. Values are DEFAULT, OPERATION or NONE. OPERATION forces soapAction to the name of the operation.  DEFAULT causes the soapAction to be set according to the operation's meta data (usually \"\").  NONE forces the soapAction to \"\".  The default is DEFAULT.\n+j2wBadSoapAction00=The value of --soapAction must be DEFAULT, NONE or OPERATION."
            },
            {
                "sha": "902d91a05835e55262aed2e288f95f660bcdbd22",
                "filename": "src/org/apache/axis/wsdl/Java2WSDL.java",
                "status": "modified",
                "additions": 21,
                "deletions": 1,
                "changes": 22,
                "blob_url": "https://github.com/apache/axis1-java/blob/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/wsdl/Java2WSDL.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/wsdl/Java2WSDL.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/Java2WSDL.java?ref=b52d4f8cfa8e82e31341a449af758d27530bc81b",
                "patch": "@@ -95,6 +95,7 @@\n     protected static final int METHODS_NOTALLOWED_OPT = 'x';\n     protected static final int STOP_CLASSES_OPT = 'c';\n     protected static final int TYPEMAPPING_OPT = 'T';\n+    protected static final int SOAPACTION_OPT = 'A';\n \n     /**\n      *  Define the understood options. Each CLOptionDescriptor contains:\n@@ -177,7 +178,11 @@\n         new CLOptionDescriptor(\"typeMappingVersion\",\n                 CLOptionDescriptor.ARGUMENT_REQUIRED,\n                 TYPEMAPPING_OPT,\n-                JavaUtils.getMessage(\"j2wopttypeMapping00\"))\n+                JavaUtils.getMessage(\"j2wopttypeMapping00\")),\n+        new CLOptionDescriptor(\"soapAction\",\n+                CLOptionDescriptor.ARGUMENT_REQUIRED,\n+                SOAPACTION_OPT,\n+                JavaUtils.getMessage(\"j2woptsoapAction00\"))\n     };\n \n     protected Emitter emitter;\n@@ -327,6 +332,21 @@ else if (\"Implementation\".equalsIgnoreCase(modeArg))\n             }\n             break;\n             \n+        case SOAPACTION_OPT:\n+            value = option.getArgument();\n+            if (value.equalsIgnoreCase(\"DEFAULT\")) {\n+                emitter.setSoapAction(\"DEFAULT\");\n+            } else if (value.equalsIgnoreCase(\"OPERATION\")) {\n+                emitter.setSoapAction(\"OPERATION\");\n+            } else if (value.equalsIgnoreCase(\"NONE\")) {\n+                emitter.setSoapAction(\"NONE\");\n+            } else {\n+                System.out.println(JavaUtils.getMessage(\"j2wBadSoapAction00\"));\n+            }\n+            break;\n+\n+        default: \n+            break;\n         }\n     }        \n "
            },
            {
                "sha": "34989a31f6dceeb6f289f83b78298a3336fa5247",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 32,
                "deletions": 3,
                "changes": 35,
                "blob_url": "https://github.com/apache/axis1-java/blob/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b52d4f8cfa8e82e31341a449af758d27530bc81b/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=b52d4f8cfa8e82e31341a449af758d27530bc81b",
                "patch": "@@ -1,4 +1,3 @@\n-\n /*\n  * The Apache Software License, Version 1.1\n  *\n@@ -143,6 +142,7 @@\n \n     private ServiceDesc serviceDesc;\n     private ServiceDesc serviceDesc2;\n+    private String soapAction = \"DEFAULT\";\n \n     /**\n      * Construct Emitter.\n@@ -732,9 +732,22 @@ private BindingOperation writeBindingOperation (Definition def,\n         bindingOper.setOperation(oper);\n \n         SOAPOperation soapOper = new SOAPOperationImpl();\n-        String soapAction = desc.getSoapAction();\n-        if (soapAction == null) {\n+\n+        \n+        // If the soapAction option is OPERATION, force\n+        // soapAction to the name of the operation. If NONE,\n+        // force soapAction to \"\".\n+        // Otherwise use the information in the operationDesc.\n+        String soapAction = \"\";\n+        if (getSoapAction().equals(\"OPERATION\")) {\n+            soapAction = oper.getName();\n+        } else if (getSoapAction().equals(\"NONE\")) {\n             soapAction = \"\";\n+        } else {\n+            soapAction = desc.getSoapAction();\n+            if (soapAction == null) {\n+                soapAction = \"\";\n+            }\n         }\n         soapOper.setSoapActionURI(soapAction);\n \n@@ -1365,6 +1378,22 @@ public void setDescription(String description) {\n         this.description = description;\n     }\n \n+    /**\n+     * Returns the soapAction option value\n+     * @return the String DEFAULT, NONE or OPERATION\n+     */\n+    public String getSoapAction() {\n+        return soapAction;\n+    }\n+\n+    /**\n+     * Sets the soapAction option value\n+     * @param must be DEFAULT, NONE, or OPERATION\n+     */\n+    public void setSoapAction(String value) {\n+        soapAction = value;\n+    }\n+\n     /**\n      * Returns the <code>TypeMapping</code> used by the service\n      * @return the <code>TypeMapping</code> used by the service"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/77c76425e23619e4f7d1249f5718f9acbb171cf5",
        "message": "* First part of inheritance code in ServiceDesc - walk up the inheritance\n  tree when syncing/creating methods, stopping at \"java.*\" or \"javax.*\"\n  classes.  Will add configurable \"stop classes\" to this soon.\n\n* Add unit test to make sure inheritance code works, and that we\n  correctly resolve methods in a few situations.\n\n* Make code a little tighter in a few places, throw faults instead of\n  potential NPEs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253899 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_165",
        "file": [
            {
                "sha": "5e6952d1578c2831b9ec82ec780c701b2909bde9",
                "filename": "src/org/apache/axis/description/OperationDesc.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/description/OperationDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/description/OperationDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/OperationDesc.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -205,6 +205,9 @@ public void addParameter(ParameterDesc param)\n \n     public ParameterDesc getParameter(int i)\n     {\n+        if (parameters.size() <= i)\n+            return null;\n+\n         return (ParameterDesc)parameters.get(i);\n     }\n "
            },
            {
                "sha": "661eda728f0c1d5de67a6bab207592d8b7bbb294",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 37,
                "deletions": 6,
                "changes": 43,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -318,7 +318,7 @@ public OperationDesc getOperationByElementQName(QName qname)\n      * Search the declared methods on the implementation class to find one\n      * with an argument list which matches our parameter list.\n      */\n-    private void syncOperationToClass(OperationDesc oper)\n+    private void syncOperationToClass(OperationDesc oper, Class implClass)\n     {\n         // If we're already mapped to a Java method, no need to do anything.\n         if (oper.getMethod() != null)\n@@ -372,6 +372,13 @@ private void syncOperationToClass(OperationDesc oper)\n                 return;\n             }\n         }\n+\n+        // Didn't find a match.  Try the superclass, if appropriate\n+        Class superClass = implClass.getSuperclass();\n+        if (!superClass.getName().startsWith(\"java.\") &&\n+                !superClass.getName().startsWith(\"javax.\")) {\n+            syncOperationToClass(oper, superClass);\n+        }\n     }\n \n     /**\n@@ -467,14 +474,14 @@ private void getSyncedOperationsForName(String methodName)\n         // OK, go find any current OperationDescs for this method name and\n         // make sure they're synced with the actual class.\n         if (name2OperationsMap != null) {\n-            ArrayList currentOverloads = \n+            ArrayList currentOverloads =\n                     (ArrayList)name2OperationsMap.get(methodName);\n             if (currentOverloads != null) {\n                 // For each one, sync it to the implementation class' methods\n                 for (Iterator i = currentOverloads.iterator(); i.hasNext();) {\n                     OperationDesc oper = (OperationDesc) i.next();\n                     if (oper.getMethod() == null) {\n-                        syncOperationToClass(oper);\n+                        syncOperationToClass(oper, implClass);\n                     }\n                 }\n             }\n@@ -483,16 +490,40 @@ private void getSyncedOperationsForName(String methodName)\n         // Now all OperationDescs from deployment data have been completely\n         // filled in.  So we now make new OperationDescs for any method\n         // overloads which were not covered above.\n+        // NOTE : This is the \"lenient\" approach, which allows you to\n+        // specify one overload and still get the others by introspection.\n+        // We could equally well return above if we found OperationDescs,\n+        // and have a rule that if you specify any overloads, you must specify\n+        // all the ones you want accessible.\n+\n+        createOperationsForName(implClass, methodName);\n+\n+        // Note that we never have to look at this method name again.\n+        completedNames.add(methodName);\n+    }\n+\n+    /**\n+     * Look for methods matching this name, and for each one, create an\n+     * OperationDesc (if it's not already in our list).\n+     *\n+     * TODO: Make this more efficient\n+     */\n+    private void createOperationsForName(Class implClass, String methodName)\n+    {\n         Method [] methods = implClass.getDeclaredMethods();\n \n         for (int i = 0; i < methods.length; i++) {\n             Method method = methods[i];\n-            if (method.getName().equals(methodName))\n+            if (method.getName().equals(methodName)) {\n                 createOperationForMethod(method);\n+            }\n         }\n \n-        // Note that we never have to look at this method name again.\n-        completedNames.add(methodName);\n+        Class superClass = implClass.getSuperclass();\n+        if (!superClass.getName().startsWith(\"java.\") &&\n+                !superClass.getName().startsWith(\"javax.\")) {\n+            createOperationsForName(superClass, methodName);\n+        }\n     }\n \n     /**"
            },
            {
                "sha": "95ce64cbeb48bb4d4f55cfaeaae25fb439987a9d",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -234,6 +234,9 @@ public void deserialize() throws SAXException\n                     }\n                 }\n             }\n+\n+            throw new SAXException(\n+                    JavaUtils.getMessage(\"noSuchOperation\", name));\n         }\n \n         if (elementIsFirstParam) {"
            },
            {
                "sha": "2a0c1d29b80f75f056cae4dd6bdc110a7d409dc1",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -153,6 +153,11 @@ public void processMessage (MessageContext msgContext,\n                 operation = serviceDesc.getOperationByElementQName(qname);\n             }\n \n+            if (operation == null) {\n+                throw new AxisFault(JavaUtils.getMessage(\"noSuchOperation\",\n+                                                         methodName));\n+            }\n+\n             // Create the array we'll use to hold the actual parameter\n             // values.  We know how big to make it from the metadata.\n             Object[]     argValues  =  new Object [operation.getNumParams()];"
            },
            {
                "sha": "d15874139e77724a15b8ffd8d6171e1a9b5d595c",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -795,3 +795,4 @@ optionHelper00=emits separate Helper classes for meta data\n badParameterMode=Invalid parameter mode byte ({0}) passed to getModeAsString().\n \n attach.bounday.mns=Marking streams not supported.\n+noSuchOperation=No such operation ''{0}''\n\\ No newline at end of file"
            },
            {
                "sha": "f53c5c604790cfebf5b35adaae76ccd916b4f2bd",
                "filename": "test/inheritance/Child.java",
                "status": "added",
                "additions": 16,
                "deletions": 0,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/Child.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/Child.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/Child.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -0,0 +1,16 @@\n+package test.inheritance;\n+\n+public class Child extends Parent {\n+    public static final String HELLO_MSG = \"Hello from the Child class\";\n+    public static final String OVERLOAD_MSG = \"The Child got \";\n+\n+    public String normal()\n+    {\n+        return HELLO_MSG;\n+    }\n+\n+    public String overloaded(int i)\n+    {\n+        return OVERLOAD_MSG + i;\n+    }\n+}"
            },
            {
                "sha": "641928dff1f15a00bc0768bd98e0f13812cb6484",
                "filename": "test/inheritance/PackageTests.java",
                "status": "added",
                "additions": 73,
                "deletions": 0,
                "changes": 73,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/PackageTests.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/PackageTests.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/PackageTests.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n+ *    not be used to endorse or promote products derived from this\n+ *    software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    nor may \"Apache\" appear in their name, without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package test.inheritance;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+public class PackageTests extends TestCase {\n+\n+    public PackageTests(String name) {\n+        super(name);\n+    }\n+\n+    public static Test suite() throws Exception {\n+        TestSuite suite = new TestSuite();\n+        suite.addTestSuite(TestInheritance.class);\n+        return suite;\n+    }\n+}"
            },
            {
                "sha": "8fcceb2a6eca5c90b8fe7e7e59643ec5a5f5aa3c",
                "filename": "test/inheritance/Parent.java",
                "status": "added",
                "additions": 16,
                "deletions": 0,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/Parent.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/Parent.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/Parent.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -0,0 +1,16 @@\n+package test.inheritance;\n+\n+public class Parent {\n+    public static final String HELLO_MSG = \"Hello from the Parent class!\";\n+    public static final String OVERLOAD_MSG = \"The Parent got \";\n+\n+    public String inherited()\n+    {\n+        return HELLO_MSG;\n+    }\n+\n+    public String overloaded(String param)\n+    {\n+        return OVERLOAD_MSG + param;\n+    }\n+}"
            },
            {
                "sha": "d1edde858e4c2fcef284627c291b38b71ae106aa",
                "filename": "test/inheritance/TestInheritance.java",
                "status": "added",
                "additions": 54,
                "deletions": 0,
                "changes": 54,
                "blob_url": "https://github.com/apache/axis1-java/blob/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/TestInheritance.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/1aa65d4b428062d3d897a499f1c6e5640ecadb0b/test/inheritance/TestInheritance.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/TestInheritance.java?ref=1aa65d4b428062d3d897a499f1c6e5640ecadb0b",
                "patch": "@@ -0,0 +1,54 @@\n+package test.inheritance;\n+\n+import junit.framework.TestCase;\n+import org.apache.axis.handlers.soap.SOAPService;\n+import org.apache.axis.providers.java.RPCProvider;\n+import org.apache.axis.configuration.SimpleProvider;\n+import org.apache.axis.server.AxisServer;\n+import org.apache.axis.transport.local.LocalTransport;\n+import org.apache.axis.client.Call;\n+import org.apache.axis.client.Service;\n+\n+public class TestInheritance extends TestCase {\n+    private AxisServer server;\n+    private LocalTransport transport;\n+\n+    public TestInheritance(String s) {\n+        super(s);\n+    }\n+\n+    protected void setUp() throws Exception {\n+        SimpleProvider config = new SimpleProvider();\n+\n+        SOAPService service = new SOAPService(new RPCProvider());\n+        service.setOption(\"className\", \"test.inheritance.Child\");\n+        service.setOption(\"allowedMethods\", \"*\");\n+        config.deployService(\"inheritanceTest\", service);\n+\n+        server = new AxisServer(config);\n+        transport = new LocalTransport(server);\n+        transport.setRemoteService(\"inheritanceTest\");\n+    }\n+\n+    public void testInheritance() throws Exception {\n+        Call call = new Call(new Service());\n+        call.setTransport(transport);\n+\n+        String ret = (String)call.invoke(\"inherited\", null);\n+        assertEquals(\"Inherited method returned bad result\",\n+                Parent.HELLO_MSG, ret);\n+\n+        ret = (String)call.invoke(\"normal\", null);\n+        assertEquals(\"Child method returned bad result\",\n+                Child.HELLO_MSG, ret);\n+\n+        ret = (String)call.invoke(\"overloaded\", new Object [] { \"test\" });\n+        assertTrue(\"Overloaded (String) method returned bad result\",\n+                ret.startsWith(Parent.OVERLOAD_MSG));\n+        ret = (String)call.invoke(\"overloaded\",\n+                                  new Object [] { new Integer(5) });\n+        assertTrue(\"Overloaded (int) method returned bad result\",\n+                ret.startsWith(Child.OVERLOAD_MSG));\n+\n+    }\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/69dec1dea1774b5e7740bfbba966b3eba4e6af02",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/e25bb4cf5003470ceb5886c87456217a324e0d39",
        "message": "* First part of inheritance code in ServiceDesc - walk up the inheritance\n  tree when syncing/creating methods, stopping at \"java.*\" or \"javax.*\"\n  classes.  Will add configurable \"stop classes\" to this soon.\n\n* Add unit test to make sure inheritance code works, and that we\n  correctly resolve methods in a few situations.\n\n* Make code a little tighter in a few places, throw faults instead of\n  potential NPEs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246826 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_166",
        "file": [
            {
                "sha": "5e6952d1578c2831b9ec82ec780c701b2909bde9",
                "filename": "src/org/apache/axis/description/OperationDesc.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/description/OperationDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/description/OperationDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/OperationDesc.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -205,6 +205,9 @@ public void addParameter(ParameterDesc param)\n \n     public ParameterDesc getParameter(int i)\n     {\n+        if (parameters.size() <= i)\n+            return null;\n+\n         return (ParameterDesc)parameters.get(i);\n     }\n "
            },
            {
                "sha": "661eda728f0c1d5de67a6bab207592d8b7bbb294",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 37,
                "deletions": 6,
                "changes": 43,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -318,7 +318,7 @@ public OperationDesc getOperationByElementQName(QName qname)\n      * Search the declared methods on the implementation class to find one\n      * with an argument list which matches our parameter list.\n      */\n-    private void syncOperationToClass(OperationDesc oper)\n+    private void syncOperationToClass(OperationDesc oper, Class implClass)\n     {\n         // If we're already mapped to a Java method, no need to do anything.\n         if (oper.getMethod() != null)\n@@ -372,6 +372,13 @@ private void syncOperationToClass(OperationDesc oper)\n                 return;\n             }\n         }\n+\n+        // Didn't find a match.  Try the superclass, if appropriate\n+        Class superClass = implClass.getSuperclass();\n+        if (!superClass.getName().startsWith(\"java.\") &&\n+                !superClass.getName().startsWith(\"javax.\")) {\n+            syncOperationToClass(oper, superClass);\n+        }\n     }\n \n     /**\n@@ -467,14 +474,14 @@ private void getSyncedOperationsForName(String methodName)\n         // OK, go find any current OperationDescs for this method name and\n         // make sure they're synced with the actual class.\n         if (name2OperationsMap != null) {\n-            ArrayList currentOverloads = \n+            ArrayList currentOverloads =\n                     (ArrayList)name2OperationsMap.get(methodName);\n             if (currentOverloads != null) {\n                 // For each one, sync it to the implementation class' methods\n                 for (Iterator i = currentOverloads.iterator(); i.hasNext();) {\n                     OperationDesc oper = (OperationDesc) i.next();\n                     if (oper.getMethod() == null) {\n-                        syncOperationToClass(oper);\n+                        syncOperationToClass(oper, implClass);\n                     }\n                 }\n             }\n@@ -483,16 +490,40 @@ private void getSyncedOperationsForName(String methodName)\n         // Now all OperationDescs from deployment data have been completely\n         // filled in.  So we now make new OperationDescs for any method\n         // overloads which were not covered above.\n+        // NOTE : This is the \"lenient\" approach, which allows you to\n+        // specify one overload and still get the others by introspection.\n+        // We could equally well return above if we found OperationDescs,\n+        // and have a rule that if you specify any overloads, you must specify\n+        // all the ones you want accessible.\n+\n+        createOperationsForName(implClass, methodName);\n+\n+        // Note that we never have to look at this method name again.\n+        completedNames.add(methodName);\n+    }\n+\n+    /**\n+     * Look for methods matching this name, and for each one, create an\n+     * OperationDesc (if it's not already in our list).\n+     *\n+     * TODO: Make this more efficient\n+     */\n+    private void createOperationsForName(Class implClass, String methodName)\n+    {\n         Method [] methods = implClass.getDeclaredMethods();\n \n         for (int i = 0; i < methods.length; i++) {\n             Method method = methods[i];\n-            if (method.getName().equals(methodName))\n+            if (method.getName().equals(methodName)) {\n                 createOperationForMethod(method);\n+            }\n         }\n \n-        // Note that we never have to look at this method name again.\n-        completedNames.add(methodName);\n+        Class superClass = implClass.getSuperclass();\n+        if (!superClass.getName().startsWith(\"java.\") &&\n+                !superClass.getName().startsWith(\"javax.\")) {\n+            createOperationsForName(superClass, methodName);\n+        }\n     }\n \n     /**"
            },
            {
                "sha": "95ce64cbeb48bb4d4f55cfaeaae25fb439987a9d",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -234,6 +234,9 @@ public void deserialize() throws SAXException\n                     }\n                 }\n             }\n+\n+            throw new SAXException(\n+                    JavaUtils.getMessage(\"noSuchOperation\", name));\n         }\n \n         if (elementIsFirstParam) {"
            },
            {
                "sha": "2a0c1d29b80f75f056cae4dd6bdc110a7d409dc1",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -153,6 +153,11 @@ public void processMessage (MessageContext msgContext,\n                 operation = serviceDesc.getOperationByElementQName(qname);\n             }\n \n+            if (operation == null) {\n+                throw new AxisFault(JavaUtils.getMessage(\"noSuchOperation\",\n+                                                         methodName));\n+            }\n+\n             // Create the array we'll use to hold the actual parameter\n             // values.  We know how big to make it from the metadata.\n             Object[]     argValues  =  new Object [operation.getNumParams()];"
            },
            {
                "sha": "d15874139e77724a15b8ffd8d6171e1a9b5d595c",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -795,3 +795,4 @@ optionHelper00=emits separate Helper classes for meta data\n badParameterMode=Invalid parameter mode byte ({0}) passed to getModeAsString().\n \n attach.bounday.mns=Marking streams not supported.\n+noSuchOperation=No such operation ''{0}''\n\\ No newline at end of file"
            },
            {
                "sha": "f53c5c604790cfebf5b35adaae76ccd916b4f2bd",
                "filename": "test/inheritance/Child.java",
                "status": "added",
                "additions": 16,
                "deletions": 0,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/Child.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/Child.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/Child.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -0,0 +1,16 @@\n+package test.inheritance;\n+\n+public class Child extends Parent {\n+    public static final String HELLO_MSG = \"Hello from the Child class\";\n+    public static final String OVERLOAD_MSG = \"The Child got \";\n+\n+    public String normal()\n+    {\n+        return HELLO_MSG;\n+    }\n+\n+    public String overloaded(int i)\n+    {\n+        return OVERLOAD_MSG + i;\n+    }\n+}"
            },
            {
                "sha": "641928dff1f15a00bc0768bd98e0f13812cb6484",
                "filename": "test/inheritance/PackageTests.java",
                "status": "added",
                "additions": 73,
                "deletions": 0,
                "changes": 73,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/PackageTests.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/PackageTests.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/PackageTests.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n+ *    not be used to endorse or promote products derived from this\n+ *    software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    nor may \"Apache\" appear in their name, without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package test.inheritance;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+public class PackageTests extends TestCase {\n+\n+    public PackageTests(String name) {\n+        super(name);\n+    }\n+\n+    public static Test suite() throws Exception {\n+        TestSuite suite = new TestSuite();\n+        suite.addTestSuite(TestInheritance.class);\n+        return suite;\n+    }\n+}"
            },
            {
                "sha": "8fcceb2a6eca5c90b8fe7e7e59643ec5a5f5aa3c",
                "filename": "test/inheritance/Parent.java",
                "status": "added",
                "additions": 16,
                "deletions": 0,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/Parent.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/Parent.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/Parent.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -0,0 +1,16 @@\n+package test.inheritance;\n+\n+public class Parent {\n+    public static final String HELLO_MSG = \"Hello from the Parent class!\";\n+    public static final String OVERLOAD_MSG = \"The Parent got \";\n+\n+    public String inherited()\n+    {\n+        return HELLO_MSG;\n+    }\n+\n+    public String overloaded(String param)\n+    {\n+        return OVERLOAD_MSG + param;\n+    }\n+}"
            },
            {
                "sha": "d1edde858e4c2fcef284627c291b38b71ae106aa",
                "filename": "test/inheritance/TestInheritance.java",
                "status": "added",
                "additions": 54,
                "deletions": 0,
                "changes": 54,
                "blob_url": "https://github.com/apache/axis1-java/blob/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/TestInheritance.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/69dec1dea1774b5e7740bfbba966b3eba4e6af02/test/inheritance/TestInheritance.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/inheritance/TestInheritance.java?ref=69dec1dea1774b5e7740bfbba966b3eba4e6af02",
                "patch": "@@ -0,0 +1,54 @@\n+package test.inheritance;\n+\n+import junit.framework.TestCase;\n+import org.apache.axis.handlers.soap.SOAPService;\n+import org.apache.axis.providers.java.RPCProvider;\n+import org.apache.axis.configuration.SimpleProvider;\n+import org.apache.axis.server.AxisServer;\n+import org.apache.axis.transport.local.LocalTransport;\n+import org.apache.axis.client.Call;\n+import org.apache.axis.client.Service;\n+\n+public class TestInheritance extends TestCase {\n+    private AxisServer server;\n+    private LocalTransport transport;\n+\n+    public TestInheritance(String s) {\n+        super(s);\n+    }\n+\n+    protected void setUp() throws Exception {\n+        SimpleProvider config = new SimpleProvider();\n+\n+        SOAPService service = new SOAPService(new RPCProvider());\n+        service.setOption(\"className\", \"test.inheritance.Child\");\n+        service.setOption(\"allowedMethods\", \"*\");\n+        config.deployService(\"inheritanceTest\", service);\n+\n+        server = new AxisServer(config);\n+        transport = new LocalTransport(server);\n+        transport.setRemoteService(\"inheritanceTest\");\n+    }\n+\n+    public void testInheritance() throws Exception {\n+        Call call = new Call(new Service());\n+        call.setTransport(transport);\n+\n+        String ret = (String)call.invoke(\"inherited\", null);\n+        assertEquals(\"Inherited method returned bad result\",\n+                Parent.HELLO_MSG, ret);\n+\n+        ret = (String)call.invoke(\"normal\", null);\n+        assertEquals(\"Child method returned bad result\",\n+                Child.HELLO_MSG, ret);\n+\n+        ret = (String)call.invoke(\"overloaded\", new Object [] { \"test\" });\n+        assertTrue(\"Overloaded (String) method returned bad result\",\n+                ret.startsWith(Parent.OVERLOAD_MSG));\n+        ret = (String)call.invoke(\"overloaded\",\n+                                  new Object [] { new Integer(5) });\n+        assertTrue(\"Overloaded (int) method returned bad result\",\n+                ret.startsWith(Child.OVERLOAD_MSG));\n+\n+    }\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/313c619c2c0d4bebac0e416d1bbfea96f138fa1f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b04df7640c17a84bc17279628958d28b66ad2e37",
        "message": "Patch from \"Jim Stafford\" <jim.stafford@raba.com>. see details below:\n\n* org.apache.axis.client.Stub.extractAttachements() - defended against\nNullPointerException when no response message present\n\n* org.apache.axis.components.JMSVendorAdapter - populate MessageContext\nwith application-specific properties from the jmsurl, the\nMessageContext, and Call.\n\n* org.apache.axis.transport.jms.JMSConstants - added a few properties to\nidentify application-specific property prefix in URL and Map of\nproperties within the MessageContext properties.\n\n* org.apache.axis.transport.jms.JMSServer - expanded the role of\ncreateSendProperties() such that it grabs the application-specific\nproperties as well as the JMS-defined.\n\n* org.apache.axis.transport.jms.JMSURLHelper.java - added ability to\nseparately track/process application-specific properties as well as\nre-generate itself into a String again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@257283 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_167",
        "file": [
            {
                "sha": "49d8e56e12b9104274ab46f05b8357dd29f7aab9",
                "filename": "src/org/apache/axis/client/Stub.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/client/Stub.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/client/Stub.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Stub.java?ref=313c619c2c0d4bebac0e416d1bbfea96f138fa1f",
                "patch": "@@ -328,7 +328,8 @@ public void setHeader(SOAPHeaderElement header) {\n      */ \n     public void extractAttachments(Call call) {\n         attachments.clear();\n-        if(call.getResponseMessage().countAttachments()>0) {\n+        if(call.getResponseMessage() != null &&\n+           call.getResponseMessage().countAttachments()>0) {\n             Iterator iterator = call.getResponseMessage().getAttachments();\n             while(iterator.hasNext()){\n                 attachments.add(iterator.next());"
            },
            {
                "sha": "c721c4d38573bc856badeb479718611443cb32eb",
                "filename": "src/org/apache/axis/components/jms/JMSVendorAdapter.java",
                "status": "modified",
                "additions": 34,
                "deletions": 0,
                "changes": 34,
                "blob_url": "https://github.com/apache/axis1-java/blob/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/components/jms/JMSVendorAdapter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/components/jms/JMSVendorAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/components/jms/JMSVendorAdapter.java?ref=313c619c2c0d4bebac0e416d1bbfea96f138fa1f",
                "patch": "@@ -57,6 +57,7 @@\n \n import java.util.HashMap;\n import java.util.Iterator;\n+import java.util.Map;\n \n import javax.jms.InvalidDestinationException;\n import javax.jms.JMSException;\n@@ -325,5 +326,38 @@ else if (delivMode.equalsIgnoreCase(JMSConstants.DELIVERY_MODE_NONPERSISTENT))\n             else\n                 context.removeProperty(JMSConstants.WAIT_FOR_RESPONSE);\n         }\n+        setupApplicationProperties(context, call, jmsurl);\n+    }\n+    \n+    public void setupApplicationProperties(MessageContext context,\n+                                    Call call,\n+                                    JMSURLHelper jmsurl)\n+    {\n+        //start with application properties from the URL\n+        Map appProps = new HashMap();\n+        if (jmsurl != null && jmsurl.getApplicationProperties() != null) {\n+            for(Iterator itr=jmsurl.getApplicationProperties().iterator();\n+                itr.hasNext();) {\n+                String name = (String)itr.next();\n+                appProps.put(name,jmsurl.getPropertyValue(name));\n+            }\n+        }\n+        \n+        //next add application properties from the message context\n+        Map ctxProps = \n+           (Map)context.getProperty(JMSConstants.JMS_APPLICATION_MSG_PROPS);\n+        if (ctxProps != null) {\n+            appProps.putAll(ctxProps);\n+        }\n+        \n+        //finally add the properties from the call\n+        Map callProps = \n+            (Map)call.getProperty(JMSConstants.JMS_APPLICATION_MSG_PROPS);\n+        if (callProps != null) {\n+            appProps.putAll(callProps);\n+        }\n+        \n+        //now tore these properties within the context\n+        context.setProperty(JMSConstants.JMS_APPLICATION_MSG_PROPS,appProps);\n     }\n }\n\\ No newline at end of file"
            },
            {
                "sha": "857cd3e50716c3721c7ca632eb57bede0645a9a6",
                "filename": "src/org/apache/axis/transport/jms/JMSConstants.java",
                "status": "modified",
                "additions": 10,
                "deletions": 0,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/transport/jms/JMSConstants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/transport/jms/JMSConstants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/jms/JMSConstants.java?ref=313c619c2c0d4bebac0e416d1bbfea96f138fa1f",
                "patch": "@@ -102,6 +102,10 @@\n     final static String _INTERACT_RETRY_INTERVAL      = \"interactRetryInterval\";\n     final static String _TIMEOUT_TIME                 = \"timeoutTime\";\n     final static String _MIN_TIMEOUT_TIME             = \"minTimeoutTime\";\n+    /** Defines a prefix added to each application-specific property in the \n+     * JMS URL that should be added to the JMS Message when issued.\n+     */\n+    final static String _MSG_PROP_PREFIX              = \"msgProp.\";\n \n     public static String JMS_PROPERTY_PREFIX = \"transport.jms.\";\n \n@@ -291,6 +295,12 @@\n \n     // key used to store the JMS URL string in the message context\n     final static String JMS_URL         = JMS_PROPERTY_PREFIX + \"EndpointAddress\";\n+    \n+    /** A property that carries a Map of application-specific properties to be\n+     * added to the JMS messages when issued. \n+     */\n+    final static String JMS_APPLICATION_MSG_PROPS = \n+        JMS_PROPERTY_PREFIX + \"msgProps\";\n \n     final static String ADAPTER_POSTFIX = \"VendorAdapter\";\n }\n\\ No newline at end of file"
            },
            {
                "sha": "f612720878ac62237fae7f7c13aee4fed72c937c",
                "filename": "src/org/apache/axis/transport/jms/JMSSender.java",
                "status": "modified",
                "additions": 19,
                "deletions": 9,
                "changes": 28,
                "blob_url": "https://github.com/apache/axis1-java/blob/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/transport/jms/JMSSender.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/transport/jms/JMSSender.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/jms/JMSSender.java?ref=313c619c2c0d4bebac0e416d1bbfea96f138fa1f",
                "patch": "@@ -63,6 +63,7 @@\n import javax.jms.Destination;\n import java.io.ByteArrayOutputStream;\n import java.util.HashMap;\n+import java.util.Map;\n \n /**\n  * This is meant to be used on a SOAP Client to call a SOAP server.\n@@ -137,15 +138,12 @@ public void invoke(MessageContext msgContext) throws AxisFault\n \n     private HashMap createSendProperties(MessageContext context)\n     {\n+        //I'm not sure why this helper method is private, but \n+        //we need to delegate to factory method that can build the\n+        //application-specific map of properties so make a change to\n+        //delegate here. \n+        HashMap props = createApplicationProperties(context);\n \n-        if(!context.containsProperty(JMSConstants.PRIORITY) &&\n-           !context.containsProperty(JMSConstants.DELIVERY_MODE) &&\n-           !context.containsProperty(JMSConstants.TIME_TO_LIVE))\n-        {\n-            return null;\n-        }\n-\n-        HashMap props = new HashMap();\n         if(context.containsProperty(JMSConstants.PRIORITY))\n             props.put(JMSConstants.PRIORITY,\n             context.getProperty(JMSConstants.PRIORITY));\n@@ -158,5 +156,17 @@ private HashMap createSendProperties(MessageContext context)\n         return props;\n     }\n \n-\n+    /** Return a map of properties that makeup the application-specific\n+        for the JMS Messages.\n+     */\n+    protected HashMap createApplicationProperties(MessageContext context) {\n+        HashMap props = null;\n+        if (context.containsProperty(\n+            JMSConstants.JMS_APPLICATION_MSG_PROPS)) {\n+            props = new HashMap();\n+            props.putAll((Map)context.getProperty(\n+                JMSConstants.JMS_APPLICATION_MSG_PROPS));\n+        }\n+        return props;\n+    }\n }\n\\ No newline at end of file"
            },
            {
                "sha": "cc6660e83b79a39e49b9f699cb5672756daee844",
                "filename": "src/org/apache/axis/transport/jms/JMSURLHelper.java",
                "status": "modified",
                "additions": 71,
                "deletions": 1,
                "changes": 72,
                "blob_url": "https://github.com/apache/axis1-java/blob/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/transport/jms/JMSURLHelper.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/313c619c2c0d4bebac0e416d1bbfea96f138fa1f/src/org/apache/axis/transport/jms/JMSURLHelper.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/jms/JMSURLHelper.java?ref=313c619c2c0d4bebac0e416d1bbfea96f138fa1f",
                "patch": "@@ -55,8 +55,11 @@\n \n package org.apache.axis.transport.jms;\n \n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n import java.util.StringTokenizer;\n import java.util.Vector;\n \n@@ -75,17 +78,21 @@\n \n     // vendor-specific properties\n     private HashMap properties;\n-\n+    \n     // required properties\n     private Vector requiredProperties;\n \n+    //application-specific JMS message properties\n+    private Vector appProperties;\n+\n     public JMSURLHelper(java.net.URL url) throws java.net.MalformedURLException {\n         this(url, null);\n     }\n \n     public JMSURLHelper(java.net.URL url, String[] requiredProperties) throws java.net.MalformedURLException {\n         this.url = url;\n         properties = new HashMap();\n+        appProperties = new Vector();\n \n         // the path should be something like '/SampleQ1'\n         // clip the leading '/' if there is one\n@@ -106,6 +113,11 @@ public JMSURLHelper(java.net.URL url, String[] requiredProperties) throws java.n\n             {\n                 String key = keyValue.substring(0, eqIndex);\n                 String value = keyValue.substring(eqIndex+1);\n+                if (key.startsWith(JMSConstants._MSG_PROP_PREFIX)) {\n+                    key = key.substring(\n+                        JMSConstants._MSG_PROP_PREFIX.length());\n+                    addAppplicationProperty(key);\n+                }\n                 properties.put(key, value);\n             }\n         }\n@@ -118,6 +130,10 @@ public JMSURLHelper(java.net.URL url, String[] requiredProperties) throws java.n\n     public String getDestination() {\n         return destination;\n     }\n+    \n+    public void setDestination(String destination) {\n+        this.destination = destination;\n+    }\n \n     public String getVendor() {\n         return getPropertyValue(JMSConstants._VENDOR);\n@@ -160,6 +176,60 @@ public Vector getRequiredProperties() {\n         return requiredProperties;\n     }\n \n+    /** Adds the name of a property from the url properties that should\n+     * be added to the JMS message.\n+     */\n+    public void addAppplicationProperty(String property) {\n+        if (property == null)\n+            return;\n+\n+        if (appProperties == null)\n+            appProperties = new Vector();\n+\n+        appProperties.addElement(property);\n+    }\n+\n+    /** Returns a collection of properties that are defined within the\n+     * JMS URL to be added directly to the JMS messages.\n+        @return collection or null depending on presence of elements\n+     */\n+    public Vector getApplicationProperties() {\n+        return appProperties;\n+    }\n+    \n+    \n+    /**\n+        Returns a URL formatted String. The properties of the URL may not \n+        end up in the same order as the JMS URL that was originally used to\n+        create this object.\n+    */\n+    public String getURLString() {\n+        StringBuffer text = new StringBuffer(\"jms:/\");\n+        text.append(getDestination());\n+        text.append(\"?\");\n+        Map props = (Map)properties.clone();\n+        boolean firstEntry = true;\n+        for(Iterator itr=properties.keySet().iterator(); itr.hasNext();) {\n+            String key = (String)itr.next();\n+            if (!firstEntry) {\n+                text.append(\"&\");\n+            }\n+            if (appProperties.contains(key)) {\n+                text.append(JMSConstants._MSG_PROP_PREFIX);\n+            }\n+            text.append(key);\n+            text.append(\"=\");\n+            text.append(props.get(key));\n+            firstEntry = false;\n+        }\n+        return text.toString();\n+    }\n+    \n+    /** Returns a formatted URL String with the assigned properties */\n+    public String toString() {\n+        return getURLString();\n+    }\n+\n     private void validateURL()\n         throws java.net.MalformedURLException {\n         Vector required = getRequiredProperties();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/01deb28e3add13f364cf07be5f46747b98551a0b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/6fc1a7adb3b05c00c653a413b6ab2b2c60dce84e",
        "message": "Problem:\n   The class passed to Java2WSDL may contain methods that\n   throw exceptions that are not allowed in an SEI.\n\n   The operations in the SEI must throw RemoteException\n   plus application specific exceptions.  General exceptions\n   (like java.lang.Exception or java.lang.NullPointerException)\n   are not allowed in the SEI.\n\nSolution:\n   Changed the ServiceDesc code that creates the FaultDesc objects.\n   A FaultDesc is not created for exceptions in the 'java' or 'javax'\n   packages.  (Simple Change)\n\n   I recently added an addrNoImplSEI testcase which tests proper\n   processing if the server-side impl does not implement the SEI.\n   (This test is meant to somewhat simulate a server-side EJB).\n\n   I enhanced this testcase to roundtrip Java2WSDL and WSDL2Java.\n   I added some general purpose throw clauses to the Impl class to\n   make sure tht Java2WSDL properly ignored the exceptions when\n   generating the SEI.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254338 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_168",
        "file": [
            {
                "sha": "4485a5cb121a63c0deff51c3cb48d936d5c278cb",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 11,
                "deletions": 6,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/01deb28e3add13f364cf07be5f46747b98551a0b/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/01deb28e3add13f364cf07be5f46747b98551a0b/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=01deb28e3add13f364cf07be5f46747b98551a0b",
                "patch": "@@ -740,7 +740,12 @@ private void createOperationForMethod(Method method) {\n \n         for (int i=0; i < exceptionTypes.length; i++) {\n             // Every remote method declares a java.rmi.RemoteException\n-            if (exceptionTypes[i] != java.rmi.RemoteException.class) {\n+            // Only interested in application specific exceptions.\n+            // Ignore java and javax package exceptions.\n+            Class ex = exceptionTypes[i];\n+            if (ex != java.rmi.RemoteException.class &&\n+                !ex.getName().startsWith(\"java.\") &&\n+                !ex.getName().startsWith(\"javax.\")) {\n                 \n                 // For JSR 101 v.1.0, there is a simple fault mapping\n                 // and a complexType fault mapping...both mappings\n@@ -756,7 +761,7 @@ private void createOperationForMethod(Method method) {\n                 \n \n                 /* Old Simple Type Mode                  \n-                Field[] f = exceptionTypes[i].getDeclaredFields();\n+                Field[] f = ex.getDeclaredFields();\n                 ArrayList exceptionParams = new ArrayList();\n                 for (int j = 0; j < f.length; j++) {\n                     int mod = f[j].getModifiers();\n@@ -771,7 +776,7 @@ private void createOperationForMethod(Method method) {\n                         exceptionParams.add(param);\n                     }\n                 }\n-                String pkgAndClsName = exceptionTypes[i].getName();\n+                String pkgAndClsName = ex.getName();\n                 FaultDesc fault = new FaultDesc();\n                 fault.setName(pkgAndClsName);\n                 fault.setParameters(exceptionParams);                \n@@ -783,12 +788,12 @@ private void createOperationForMethod(Method method) {\n                 ParameterDesc param = new ParameterDesc(\n                      new QName(\"\", \"fault\"),\n                      ParameterDesc.IN,\n-                     tm.getTypeQName(exceptionTypes[i]));\n-                param.setJavaType(exceptionTypes[i]);\n+                     tm.getTypeQName(ex));\n+                param.setJavaType(ex);\n                 ArrayList exceptionParams = new ArrayList();\n                 exceptionParams.add(param);\n \n-                String pkgAndClsName = exceptionTypes[i].getName();\n+                String pkgAndClsName = ex.getName();\n                 FaultDesc fault = new FaultDesc();\n                 fault.setName(pkgAndClsName);\n                 fault.setParameters(exceptionParams);                "
            },
            {
                "sha": "5e4d154dc2268ab76b7fdc5b1541b0b41b60c6b0",
                "filename": "src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/01deb28e3add13f364cf07be5f46747b98551a0b/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/01deb28e3add13f364cf07be5f46747b98551a0b/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanDeserializer.java?ref=01deb28e3add13f364cf07be5f46747b98551a0b",
                "patch": "@@ -301,15 +301,15 @@ public SOAPHandler onStartChild(String namespace,\n                 // Success!  Register the target and deserializer.\n                 collectionIndex = -1;\n                 dSer.registerValueTarget(\n-                    new BeanPropertyTarget(value, propDesc));\n+                                         new BeanPropertyTarget(value, propDesc));\n             } else {\n                 // Success! This is a collection of properties so use the index\n                 collectionIndex++;\n                 dSer.registerValueTarget(\n-                     new BeanPropertyTarget(value, \n+                                         new BeanPropertyTarget(value, \n                                             propDesc, \n                                             collectionIndex));\n-        }\n+            }\n         }\n         return (SOAPHandler)dSer;\n     }"
            },
            {
                "sha": "1695bc9e3f8aca8d198eea3c736cbca316e0b1ba",
                "filename": "test/wsdl/Java2WsdlAntTask.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/Java2WsdlAntTask.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/Java2WsdlAntTask.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Java2WsdlAntTask.java?ref=01deb28e3add13f364cf07be5f46747b98551a0b",
                "patch": "@@ -78,6 +78,7 @@\n     private String output = \".\" ;\n     private String className = \".\" ;\n     private String servicePortName = null ;\n+    private String portTypeName = null ;\n     private String implClass = null;\n     private boolean useInheritedMethods = false;\n     private String exclude = null;\n@@ -109,6 +110,8 @@ public void execute() throws BuildException {\n             }\n             if (servicePortName != null)\n                 emitter.setServicePortName(servicePortName);\n+            if (portTypeName != null)\n+                emitter.setPortTypeName(portTypeName);\n             log(\"Java2WSDL \" + className, Project.MSG_INFO);\n             emitter.setCls(className);\n             if (implClass != null)\n@@ -167,6 +170,11 @@ public void setServicePortName(String parameter) {\n         this.servicePortName = parameter;\n     }\n \n+    // The setter for the \"portTypeName\" attribute\n+    public void setPortTypeName(String parameter) {\n+        this.portTypeName = parameter;\n+    }\n+\n     // The setter for the \"namespace\" attribute\n     public void setNamespace(String parameter) {\n         this.namespace = parameter;"
            },
            {
                "sha": "fa842136b0e6d909995fe8c42db7f4db3a87df89",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 57,
                "deletions": 1,
                "changes": 58,
                "blob_url": "https://github.com/apache/axis1-java/blob/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=01deb28e3add13f364cf07be5f46747b98551a0b",
                "patch": "@@ -73,7 +73,19 @@\n         <mapping namespace=\"urn:MultiRefTest2\" package=\"test.wsdl.multiref\"/>\n     </wsdl2java>\n \n-    <!-- AddressBook Sample -->\n+    <!-- AddressBook roundtrip example that does not implement SEI -->\n+    <!-- Summary -->\n+    <!-- Bootstrap the process by creating java classes from the original wsdl -->\n+    <!-- Compile the classes plus the provided Impl class -->\n+    <!--   The Impl class is supposed to simulate a server-side EJB -->\n+    <!--   It does not implement the SEI and it contains some additional throw clauses -->\n+    <!-- Run Java2WSDL on the Impl class to ensure a valid wsdl is generated -->\n+    <!-- Run WSDL2Java on the new wsdl to ensure valid java artifacts are generated -->\n+    <!--   This will ensure that java classes are not generated for NullPointerException -->\n+    <!-- Copy back over the original Impl and test classes.  -->\n+    <!--   They will be compiled and run as part of the test. -->\n+    <delete dir=\"${build.dir}/classes/test/wsdl/addrNoImplSEI\"/>\n+    <delete dir=\"${build.dir}/work/test/wsdl/addrNoImplSEI\"/>\n     <wsdl2java url=\"test/wsdl/addrNoImplSEI/AddressBook.wsdl\"\n                output=\"build/work\"\n                deployscope=\"session\"\n@@ -86,6 +98,50 @@\n         <mapping namespace=\"urn:AddrNoImplSEI\" package=\"test.wsdl.addrNoImplSEI\"/>\n     </wsdl2java>\n \n+    <!-- Copy over original classes -->\n+    <copy todir=\"${build.dir}/work/test/wsdl/addrNoImplSEI\" overwrite=\"yes\">\n+      <fileset dir=\"${test.dir}/wsdl/addrNoImplSEI\">\n+        <include name=\"*.java\"/>\n+      </fileset>\n+    </copy>\n+\n+    <!-- Compile the Web Service -->\n+    <javac srcdir=\"${build.dir}/work\" destdir=\"${build.dest}\" debug=\"${debug}\">\n+      <classpath refid=\"test-classpath\" />\n+      <include name=\"test/wsdl/addrNoImplSEI/**.java\" />\n+      <exclude name=\"test/wsdl/addrNoImplSEI/*TestCase.java\" />\n+      <exclude name=\"test/wsdl/addrNoImplSEI/Main.java\" />\n+    </javac>\n+\n+    <!-- Now run java to wsdl to make sure we don't have any strange artifacts -->\n+    <java2wsdl output=\"build/work/test/wsdl/addrNoImplSEI/AddressBook.wsdl\"\n+               className= \"test.wsdl.addrNoImplSEI.AddressBookNoImplSEISoapBindingImpl\"\n+               useInheritedMethods=\"false\"\n+               portTypeName=\"AddressBookNoImplSEI\"\n+               namespace=\"http://addrNoImplSEI.wsdl.test\"\n+               location=\"http://localhost:8080/axis/services/AddressBookNoImplSEI\">\n+        <mapping namespace=\"urn:AddrNoImplSEI\" package=\"test.wsdl.addrNoImplSEI\"/>\n+    </java2wsdl> \n+\n+    <!-- Now run wsdl to java to make sure we don't have any strange artifacts -->\n+    <wsdl2java url=\"build/work/test/wsdl/addrNoImplSEI/AddressBook.wsdl\"\n+               output=\"build/work\"\n+               deployscope=\"session\"\n+               serverSide=\"yes\"\n+               skeletonDeploy=\"no\"\n+               noimports=\"no\"\n+               verbose=\"no\"\n+               typeMappingVersion=\"1.1\"\n+               testcase=\"no\">\n+        <mapping namespace=\"urn:AddrNoImplSEI\" package=\"test.wsdl.addrNoImplSEI\"/>\n+    </wsdl2java>\n+    <!-- Copy over original classes -->\n+    <copy todir=\"${build.dir}/work/test/wsdl/addrNoImplSEI\" overwrite=\"yes\">\n+      <fileset dir=\"${test.dir}/wsdl/addrNoImplSEI\">\n+        <include name=\"*.java\"/>\n+      </fileset>\n+    </copy>\n+\n     <!-- Operation style test (oneway, request/response, -->\n     <!-- solicit/response, notification -->\n     <wsdl2java url=\"test/wsdl/opStyles/opStyles.wsdl\""
            },
            {
                "sha": "a4b42e03973f36a2fcd8f3a32c3349a794c1bd7a",
                "filename": "test/wsdl/addrNoImplSEI/AddressBook.wsdl",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/addrNoImplSEI/AddressBook.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/addrNoImplSEI/AddressBook.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/addrNoImplSEI/AddressBook.wsdl?ref=01deb28e3add13f364cf07be5f46747b98551a0b",
                "patch": "@@ -57,7 +57,7 @@\n   </message>\n \n   <!-- port type declns -->\n-  <portType name=\"AddressBook\">\n+  <portType name=\"AddressBookNoImplSEI\">\n     <operation name=\"addEntry\">\n       <input message=\"tns:AddEntryRequest\"/>\n     </operation>\n@@ -68,7 +68,7 @@\n   </portType>\n \n   <!-- binding declns -->\n-  <binding name=\"AddressBookSOAPBinding\" type=\"tns:AddressBook\">\n+  <binding name=\"AddressBookNoImplSEISoapBinding\" type=\"tns:AddressBookNoImplSEI\">\n     <soap:binding style=\"rpc\"\n                   transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n     <operation name=\"addEntry\">\n@@ -100,8 +100,8 @@\n   </binding>\n \n   <!-- service decln -->\n-  <service name=\"AddressBookService\">\n-    <port name=\"AddressBookNoImplSEI\" binding=\"tns:AddressBookSOAPBinding\">\n+  <service name=\"AddressBookNoImplSEIService\">\n+    <port name=\"AddressBookNoImplSEI\" binding=\"tns:AddressBookNoImplSEISoapBinding\">\n       <soap:address location=\"http://localhost:8080/axis/services/AddressBookNoImplSEI\"/>\n     </port>\n   </service>"
            },
            {
                "sha": "d6cc162de29aec29d67d50727031524a1e707aca",
                "filename": "test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java",
                "status": "renamed",
                "additions": 13,
                "deletions": 4,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java?ref=01deb28e3add13f364cf07be5f46747b98551a0b",
                "patch": "@@ -1,5 +1,5 @@\n /**\n- * AddressBookSOAPBindingImpl.java\n+ * AddressBookNoImplSEISOAPBindingImpl.java\n  *\n  * This file was hand modified from the Emmitter generated code.\n  */\n@@ -10,13 +10,22 @@\n import java.util.Map;\n \n // Don't implement the AddressBook interface\n-public class AddressBookSOAPBindingImpl {\n+public class AddressBookNoImplSEISoapBindingImpl {\n     private Map addresses = new Hashtable();\n \n-    public void addEntry(java.lang.String name, test.wsdl.addrNoImplSEI.Address address) throws java.rmi.RemoteException {\n+    public void addEntry(java.lang.String name, test.wsdl.addrNoImplSEI.Address address) \n+        throws java.rmi.RemoteException, \n+               java.lang.IllegalArgumentException  // This should be accepted\n+    {\n+        if (address == null) {\n+            throw new java.lang.IllegalArgumentException(); \n+        }\n         this.addresses.put(name, address);\n     }\n-    public test.wsdl.addrNoImplSEI.Address getAddressFromName(java.lang.String name) throws java.rmi.RemoteException {\n+    public test.wsdl.addrNoImplSEI.Address getAddressFromName(java.lang.String name) \n+        throws java.rmi.RemoteException,\n+               javax.xml.rpc.JAXRPCException // This should be accepted\n+    {\n         return (test.wsdl.addrNoImplSEI.Address) this.addresses.get(name);\n     }\n }",
                "previous_filename": "test/wsdl/addrNoImplSEI/AddressBookSOAPBindingImpl.java"
            },
            {
                "sha": "2685234f9b967f6a9366cafcde20dad468d53644",
                "filename": "test/wsdl/addrNoImplSEI/Main.java",
                "status": "modified",
                "additions": 18,
                "deletions": 5,
                "changes": 23,
                "blob_url": "https://github.com/apache/axis1-java/blob/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/addrNoImplSEI/Main.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/01deb28e3add13f364cf07be5f46747b98551a0b/test/wsdl/addrNoImplSEI/Main.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/addrNoImplSEI/Main.java?ref=01deb28e3add13f364cf07be5f46747b98551a0b",
                "patch": "@@ -106,7 +106,7 @@ private static void printAddress (Address ad) {\n                                 ph.getExchange() + \"-\" + ph.getNumber());\n     }\n     \n-    private static Object doit (AddressBook ab) throws Exception {\n+    private static Object doit (AddressBookNoImplSEI ab) throws Exception {\n         System.err.println (\">> Storing address for '\" + name1 + \"'\");\n         ab.addEntry (name1, addr1);\n         System.err.println (\">> Querying address for '\" + name1 + \"'\");\n@@ -121,6 +121,19 @@ private static Object doit (AddressBook ab) throws Exception {\n         resp = ab.getAddressFromName (name1);\n         System.err.println (\">> Response is:\");\n         printAddress (resp);\n+        \n+        // Test NPE\n+        try {\n+            ab.addEntry(null, null);\n+            throw new Exception(\"Expected exception when calling addEntry with null params\");\n+        } catch (java.rmi.RemoteException e) {\n+            if (e.detail instanceof java.lang.IllegalArgumentException) {\n+                // Good! Expected this!\n+            } else {\n+                throw e;  // This is not right!\n+            }            \n+        }\n+        \n         return resp;\n     }\n     \n@@ -131,11 +144,11 @@ public static void main (String[] args) throws Exception {\n             System.err.println (\"Using proxy without session maintenance.\");\n             System.err.println (\"(queries without session should say:  \\\"ADDRESS NOT FOUND!\\\")\");\n \n-            AddressBookService abs = new AddressBookServiceLocator();\n+            AddressBookNoImplSEIService abs = new AddressBookNoImplSEIServiceLocator();\n             opts.setDefaultURL( abs.getAddressBookNoImplSEIAddress() );\n             URL serviceURL = new URL(opts.getURL());\n \n-            AddressBook ab1 = null;\n+            AddressBookNoImplSEI ab1 = null;\n             if (serviceURL == null) {\n                 ab1 = abs.getAddressBookNoImplSEI();\n             }\n@@ -148,14 +161,14 @@ public static void main (String[] args) throws Exception {\n             }\n \n             System.err.println (\"\\n\\nUsing proxy with session maintenance.\");\n-            AddressBook ab2 = null;\n+            AddressBookNoImplSEI ab2 = null;\n             if (serviceURL == null) {\n                 ab2 = abs.getAddressBookNoImplSEI();\n             }\n             else {\n                 ab2 = abs.getAddressBookNoImplSEI(serviceURL);\n             }\n-            ((AddressBookSOAPBindingStub) ab2).setMaintainSession (true);\n+            ((AddressBookNoImplSEISoapBindingStub) ab2).setMaintainSession (true);\n             ret = doit (ab2);\n             if (ret == null) {\n                 throw new Exception(\"session test expected non-null response, got \"+ret);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/eff31316a77a03b95900ebea54b09d65a2f7b97f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/b837f0498e42b2cb2bd5fce04670dbae9376ddd9",
        "message": "Problem:\n   The class passed to Java2WSDL may contain methods that\n   throw exceptions that are not allowed in an SEI.\n\n   The operations in the SEI must throw RemoteException\n   plus application specific exceptions.  General exceptions\n   (like java.lang.Exception or java.lang.NullPointerException)\n   are not allowed in the SEI.\n\nSolution:\n   Changed the ServiceDesc code that creates the FaultDesc objects.\n   A FaultDesc is not created for exceptions in the 'java' or 'javax'\n   packages.  (Simple Change)\n\n   I recently added an addrNoImplSEI testcase which tests proper\n   processing if the server-side impl does not implement the SEI.\n   (This test is meant to somewhat simulate a server-side EJB).\n\n   I enhanced this testcase to roundtrip Java2WSDL and WSDL2Java.\n   I added some general purpose throw clauses to the Impl class to\n   make sure tht Java2WSDL properly ignored the exceptions when\n   generating the SEI.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247265 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_169",
        "file": [
            {
                "sha": "4485a5cb121a63c0deff51c3cb48d936d5c278cb",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 11,
                "deletions": 6,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/eff31316a77a03b95900ebea54b09d65a2f7b97f/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eff31316a77a03b95900ebea54b09d65a2f7b97f/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=eff31316a77a03b95900ebea54b09d65a2f7b97f",
                "patch": "@@ -740,7 +740,12 @@ private void createOperationForMethod(Method method) {\n \n         for (int i=0; i < exceptionTypes.length; i++) {\n             // Every remote method declares a java.rmi.RemoteException\n-            if (exceptionTypes[i] != java.rmi.RemoteException.class) {\n+            // Only interested in application specific exceptions.\n+            // Ignore java and javax package exceptions.\n+            Class ex = exceptionTypes[i];\n+            if (ex != java.rmi.RemoteException.class &&\n+                !ex.getName().startsWith(\"java.\") &&\n+                !ex.getName().startsWith(\"javax.\")) {\n                 \n                 // For JSR 101 v.1.0, there is a simple fault mapping\n                 // and a complexType fault mapping...both mappings\n@@ -756,7 +761,7 @@ private void createOperationForMethod(Method method) {\n                 \n \n                 /* Old Simple Type Mode                  \n-                Field[] f = exceptionTypes[i].getDeclaredFields();\n+                Field[] f = ex.getDeclaredFields();\n                 ArrayList exceptionParams = new ArrayList();\n                 for (int j = 0; j < f.length; j++) {\n                     int mod = f[j].getModifiers();\n@@ -771,7 +776,7 @@ private void createOperationForMethod(Method method) {\n                         exceptionParams.add(param);\n                     }\n                 }\n-                String pkgAndClsName = exceptionTypes[i].getName();\n+                String pkgAndClsName = ex.getName();\n                 FaultDesc fault = new FaultDesc();\n                 fault.setName(pkgAndClsName);\n                 fault.setParameters(exceptionParams);                \n@@ -783,12 +788,12 @@ private void createOperationForMethod(Method method) {\n                 ParameterDesc param = new ParameterDesc(\n                      new QName(\"\", \"fault\"),\n                      ParameterDesc.IN,\n-                     tm.getTypeQName(exceptionTypes[i]));\n-                param.setJavaType(exceptionTypes[i]);\n+                     tm.getTypeQName(ex));\n+                param.setJavaType(ex);\n                 ArrayList exceptionParams = new ArrayList();\n                 exceptionParams.add(param);\n \n-                String pkgAndClsName = exceptionTypes[i].getName();\n+                String pkgAndClsName = ex.getName();\n                 FaultDesc fault = new FaultDesc();\n                 fault.setName(pkgAndClsName);\n                 fault.setParameters(exceptionParams);                "
            },
            {
                "sha": "5e4d154dc2268ab76b7fdc5b1541b0b41b60c6b0",
                "filename": "src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/eff31316a77a03b95900ebea54b09d65a2f7b97f/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eff31316a77a03b95900ebea54b09d65a2f7b97f/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanDeserializer.java?ref=eff31316a77a03b95900ebea54b09d65a2f7b97f",
                "patch": "@@ -301,15 +301,15 @@ public SOAPHandler onStartChild(String namespace,\n                 // Success!  Register the target and deserializer.\n                 collectionIndex = -1;\n                 dSer.registerValueTarget(\n-                    new BeanPropertyTarget(value, propDesc));\n+                                         new BeanPropertyTarget(value, propDesc));\n             } else {\n                 // Success! This is a collection of properties so use the index\n                 collectionIndex++;\n                 dSer.registerValueTarget(\n-                     new BeanPropertyTarget(value, \n+                                         new BeanPropertyTarget(value, \n                                             propDesc, \n                                             collectionIndex));\n-        }\n+            }\n         }\n         return (SOAPHandler)dSer;\n     }"
            },
            {
                "sha": "1695bc9e3f8aca8d198eea3c736cbca316e0b1ba",
                "filename": "test/wsdl/Java2WsdlAntTask.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/Java2WsdlAntTask.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/Java2WsdlAntTask.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Java2WsdlAntTask.java?ref=eff31316a77a03b95900ebea54b09d65a2f7b97f",
                "patch": "@@ -78,6 +78,7 @@\n     private String output = \".\" ;\n     private String className = \".\" ;\n     private String servicePortName = null ;\n+    private String portTypeName = null ;\n     private String implClass = null;\n     private boolean useInheritedMethods = false;\n     private String exclude = null;\n@@ -109,6 +110,8 @@ public void execute() throws BuildException {\n             }\n             if (servicePortName != null)\n                 emitter.setServicePortName(servicePortName);\n+            if (portTypeName != null)\n+                emitter.setPortTypeName(portTypeName);\n             log(\"Java2WSDL \" + className, Project.MSG_INFO);\n             emitter.setCls(className);\n             if (implClass != null)\n@@ -167,6 +170,11 @@ public void setServicePortName(String parameter) {\n         this.servicePortName = parameter;\n     }\n \n+    // The setter for the \"portTypeName\" attribute\n+    public void setPortTypeName(String parameter) {\n+        this.portTypeName = parameter;\n+    }\n+\n     // The setter for the \"namespace\" attribute\n     public void setNamespace(String parameter) {\n         this.namespace = parameter;"
            },
            {
                "sha": "fa842136b0e6d909995fe8c42db7f4db3a87df89",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 57,
                "deletions": 1,
                "changes": 58,
                "blob_url": "https://github.com/apache/axis1-java/blob/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=eff31316a77a03b95900ebea54b09d65a2f7b97f",
                "patch": "@@ -73,7 +73,19 @@\n         <mapping namespace=\"urn:MultiRefTest2\" package=\"test.wsdl.multiref\"/>\n     </wsdl2java>\n \n-    <!-- AddressBook Sample -->\n+    <!-- AddressBook roundtrip example that does not implement SEI -->\n+    <!-- Summary -->\n+    <!-- Bootstrap the process by creating java classes from the original wsdl -->\n+    <!-- Compile the classes plus the provided Impl class -->\n+    <!--   The Impl class is supposed to simulate a server-side EJB -->\n+    <!--   It does not implement the SEI and it contains some additional throw clauses -->\n+    <!-- Run Java2WSDL on the Impl class to ensure a valid wsdl is generated -->\n+    <!-- Run WSDL2Java on the new wsdl to ensure valid java artifacts are generated -->\n+    <!--   This will ensure that java classes are not generated for NullPointerException -->\n+    <!-- Copy back over the original Impl and test classes.  -->\n+    <!--   They will be compiled and run as part of the test. -->\n+    <delete dir=\"${build.dir}/classes/test/wsdl/addrNoImplSEI\"/>\n+    <delete dir=\"${build.dir}/work/test/wsdl/addrNoImplSEI\"/>\n     <wsdl2java url=\"test/wsdl/addrNoImplSEI/AddressBook.wsdl\"\n                output=\"build/work\"\n                deployscope=\"session\"\n@@ -86,6 +98,50 @@\n         <mapping namespace=\"urn:AddrNoImplSEI\" package=\"test.wsdl.addrNoImplSEI\"/>\n     </wsdl2java>\n \n+    <!-- Copy over original classes -->\n+    <copy todir=\"${build.dir}/work/test/wsdl/addrNoImplSEI\" overwrite=\"yes\">\n+      <fileset dir=\"${test.dir}/wsdl/addrNoImplSEI\">\n+        <include name=\"*.java\"/>\n+      </fileset>\n+    </copy>\n+\n+    <!-- Compile the Web Service -->\n+    <javac srcdir=\"${build.dir}/work\" destdir=\"${build.dest}\" debug=\"${debug}\">\n+      <classpath refid=\"test-classpath\" />\n+      <include name=\"test/wsdl/addrNoImplSEI/**.java\" />\n+      <exclude name=\"test/wsdl/addrNoImplSEI/*TestCase.java\" />\n+      <exclude name=\"test/wsdl/addrNoImplSEI/Main.java\" />\n+    </javac>\n+\n+    <!-- Now run java to wsdl to make sure we don't have any strange artifacts -->\n+    <java2wsdl output=\"build/work/test/wsdl/addrNoImplSEI/AddressBook.wsdl\"\n+               className= \"test.wsdl.addrNoImplSEI.AddressBookNoImplSEISoapBindingImpl\"\n+               useInheritedMethods=\"false\"\n+               portTypeName=\"AddressBookNoImplSEI\"\n+               namespace=\"http://addrNoImplSEI.wsdl.test\"\n+               location=\"http://localhost:8080/axis/services/AddressBookNoImplSEI\">\n+        <mapping namespace=\"urn:AddrNoImplSEI\" package=\"test.wsdl.addrNoImplSEI\"/>\n+    </java2wsdl> \n+\n+    <!-- Now run wsdl to java to make sure we don't have any strange artifacts -->\n+    <wsdl2java url=\"build/work/test/wsdl/addrNoImplSEI/AddressBook.wsdl\"\n+               output=\"build/work\"\n+               deployscope=\"session\"\n+               serverSide=\"yes\"\n+               skeletonDeploy=\"no\"\n+               noimports=\"no\"\n+               verbose=\"no\"\n+               typeMappingVersion=\"1.1\"\n+               testcase=\"no\">\n+        <mapping namespace=\"urn:AddrNoImplSEI\" package=\"test.wsdl.addrNoImplSEI\"/>\n+    </wsdl2java>\n+    <!-- Copy over original classes -->\n+    <copy todir=\"${build.dir}/work/test/wsdl/addrNoImplSEI\" overwrite=\"yes\">\n+      <fileset dir=\"${test.dir}/wsdl/addrNoImplSEI\">\n+        <include name=\"*.java\"/>\n+      </fileset>\n+    </copy>\n+\n     <!-- Operation style test (oneway, request/response, -->\n     <!-- solicit/response, notification -->\n     <wsdl2java url=\"test/wsdl/opStyles/opStyles.wsdl\""
            },
            {
                "sha": "a4b42e03973f36a2fcd8f3a32c3349a794c1bd7a",
                "filename": "test/wsdl/addrNoImplSEI/AddressBook.wsdl",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/addrNoImplSEI/AddressBook.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/addrNoImplSEI/AddressBook.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/addrNoImplSEI/AddressBook.wsdl?ref=eff31316a77a03b95900ebea54b09d65a2f7b97f",
                "patch": "@@ -57,7 +57,7 @@\n   </message>\n \n   <!-- port type declns -->\n-  <portType name=\"AddressBook\">\n+  <portType name=\"AddressBookNoImplSEI\">\n     <operation name=\"addEntry\">\n       <input message=\"tns:AddEntryRequest\"/>\n     </operation>\n@@ -68,7 +68,7 @@\n   </portType>\n \n   <!-- binding declns -->\n-  <binding name=\"AddressBookSOAPBinding\" type=\"tns:AddressBook\">\n+  <binding name=\"AddressBookNoImplSEISoapBinding\" type=\"tns:AddressBookNoImplSEI\">\n     <soap:binding style=\"rpc\"\n                   transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n     <operation name=\"addEntry\">\n@@ -100,8 +100,8 @@\n   </binding>\n \n   <!-- service decln -->\n-  <service name=\"AddressBookService\">\n-    <port name=\"AddressBookNoImplSEI\" binding=\"tns:AddressBookSOAPBinding\">\n+  <service name=\"AddressBookNoImplSEIService\">\n+    <port name=\"AddressBookNoImplSEI\" binding=\"tns:AddressBookNoImplSEISoapBinding\">\n       <soap:address location=\"http://localhost:8080/axis/services/AddressBookNoImplSEI\"/>\n     </port>\n   </service>"
            },
            {
                "sha": "d6cc162de29aec29d67d50727031524a1e707aca",
                "filename": "test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java",
                "status": "renamed",
                "additions": 13,
                "deletions": 4,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/addrNoImplSEI/AddressBookNoImplSEISoapBindingImpl.java?ref=eff31316a77a03b95900ebea54b09d65a2f7b97f",
                "patch": "@@ -1,5 +1,5 @@\n /**\n- * AddressBookSOAPBindingImpl.java\n+ * AddressBookNoImplSEISOAPBindingImpl.java\n  *\n  * This file was hand modified from the Emmitter generated code.\n  */\n@@ -10,13 +10,22 @@\n import java.util.Map;\n \n // Don't implement the AddressBook interface\n-public class AddressBookSOAPBindingImpl {\n+public class AddressBookNoImplSEISoapBindingImpl {\n     private Map addresses = new Hashtable();\n \n-    public void addEntry(java.lang.String name, test.wsdl.addrNoImplSEI.Address address) throws java.rmi.RemoteException {\n+    public void addEntry(java.lang.String name, test.wsdl.addrNoImplSEI.Address address) \n+        throws java.rmi.RemoteException, \n+               java.lang.IllegalArgumentException  // This should be accepted\n+    {\n+        if (address == null) {\n+            throw new java.lang.IllegalArgumentException(); \n+        }\n         this.addresses.put(name, address);\n     }\n-    public test.wsdl.addrNoImplSEI.Address getAddressFromName(java.lang.String name) throws java.rmi.RemoteException {\n+    public test.wsdl.addrNoImplSEI.Address getAddressFromName(java.lang.String name) \n+        throws java.rmi.RemoteException,\n+               javax.xml.rpc.JAXRPCException // This should be accepted\n+    {\n         return (test.wsdl.addrNoImplSEI.Address) this.addresses.get(name);\n     }\n }",
                "previous_filename": "test/wsdl/addrNoImplSEI/AddressBookSOAPBindingImpl.java"
            },
            {
                "sha": "2685234f9b967f6a9366cafcde20dad468d53644",
                "filename": "test/wsdl/addrNoImplSEI/Main.java",
                "status": "modified",
                "additions": 18,
                "deletions": 5,
                "changes": 23,
                "blob_url": "https://github.com/apache/axis1-java/blob/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/addrNoImplSEI/Main.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eff31316a77a03b95900ebea54b09d65a2f7b97f/test/wsdl/addrNoImplSEI/Main.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/addrNoImplSEI/Main.java?ref=eff31316a77a03b95900ebea54b09d65a2f7b97f",
                "patch": "@@ -106,7 +106,7 @@ private static void printAddress (Address ad) {\n                                 ph.getExchange() + \"-\" + ph.getNumber());\n     }\n     \n-    private static Object doit (AddressBook ab) throws Exception {\n+    private static Object doit (AddressBookNoImplSEI ab) throws Exception {\n         System.err.println (\">> Storing address for '\" + name1 + \"'\");\n         ab.addEntry (name1, addr1);\n         System.err.println (\">> Querying address for '\" + name1 + \"'\");\n@@ -121,6 +121,19 @@ private static Object doit (AddressBook ab) throws Exception {\n         resp = ab.getAddressFromName (name1);\n         System.err.println (\">> Response is:\");\n         printAddress (resp);\n+        \n+        // Test NPE\n+        try {\n+            ab.addEntry(null, null);\n+            throw new Exception(\"Expected exception when calling addEntry with null params\");\n+        } catch (java.rmi.RemoteException e) {\n+            if (e.detail instanceof java.lang.IllegalArgumentException) {\n+                // Good! Expected this!\n+            } else {\n+                throw e;  // This is not right!\n+            }            \n+        }\n+        \n         return resp;\n     }\n     \n@@ -131,11 +144,11 @@ public static void main (String[] args) throws Exception {\n             System.err.println (\"Using proxy without session maintenance.\");\n             System.err.println (\"(queries without session should say:  \\\"ADDRESS NOT FOUND!\\\")\");\n \n-            AddressBookService abs = new AddressBookServiceLocator();\n+            AddressBookNoImplSEIService abs = new AddressBookNoImplSEIServiceLocator();\n             opts.setDefaultURL( abs.getAddressBookNoImplSEIAddress() );\n             URL serviceURL = new URL(opts.getURL());\n \n-            AddressBook ab1 = null;\n+            AddressBookNoImplSEI ab1 = null;\n             if (serviceURL == null) {\n                 ab1 = abs.getAddressBookNoImplSEI();\n             }\n@@ -148,14 +161,14 @@ public static void main (String[] args) throws Exception {\n             }\n \n             System.err.println (\"\\n\\nUsing proxy with session maintenance.\");\n-            AddressBook ab2 = null;\n+            AddressBookNoImplSEI ab2 = null;\n             if (serviceURL == null) {\n                 ab2 = abs.getAddressBookNoImplSEI();\n             }\n             else {\n                 ab2 = abs.getAddressBookNoImplSEI(serviceURL);\n             }\n-            ((AddressBookSOAPBindingStub) ab2).setMaintainSession (true);\n+            ((AddressBookNoImplSEISoapBindingStub) ab2).setMaintainSession (true);\n             ret = doit (ab2);\n             if (ret == null) {\n                 throw new Exception(\"session test expected non-null response, got \"+ret);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/bfb4639cf9215a50ad9b171f9d30242a1c8fa301",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/47f719efcee79967f4fe33dbd38e57939c734660",
        "message": "From section 5.1 of the SOAP Specification, rule #8 in the rules for\nserialization states:\n\nThe \"asize\" construct contains a comma separated list of zero, one, or\nmore integers indicating the lengths of each dimension of the array. A\nvalue of zero integers indicates that no particular quantity is\nasserted but that the size may be determined by inspection of the\nactual members.\n\nThe ZSI endpoint seems to send responses without lengths specified, and\nother clients (e.g., WhiteMesa) accept such responses.  Without this\nchange, the Axis client dies with a NullPointerException.\n\nNote: with this change, Axis may be too lenient.  Pass more actual elements\nthan you declare, and the array will be grown to fit.  If you pass less\nactual elements than declared, the array will continue to be padded with\nnulls.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252886 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_170",
        "file": [
            {
                "sha": "729e5b3059e14b22d5b7e60cc8242ed8dc406fed",
                "filename": "src/org/apache/axis/encoding/ArraySerializer.java",
                "status": "modified",
                "additions": 15,
                "deletions": 1,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/bfb4639cf9215a50ad9b171f9d30242a1c8fa301/src/org/apache/axis/encoding/ArraySerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/bfb4639cf9215a50ad9b171f9d30242a1c8fa301/src/org/apache/axis/encoding/ArraySerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ArraySerializer.java?ref=bfb4639cf9215a50ad9b171f9d30242a1c8fa301",
                "patch": "@@ -186,6 +186,12 @@ public void onStartElement(String namespace, String localName,\n                         JavaUtils.getMessage(\"badInteger00\", lengthStr));\n             }\n         }\n+        else\n+        {\n+            // asize with no integers: size must be determined by inspection\n+            // of the actual members.\n+            value = new ArrayList();\n+        }\n         \n         String offset = attributes.getValue(Constants.URI_SOAP_ENC,\n                                             Constants.ATTR_OFFSET);\n@@ -264,7 +270,15 @@ public void valueReady(Object value, Object hint)\n             category.debug(JavaUtils.getMessage(\"gotValue00\", \"ArraySerializer\", \"[\" + hint +\n                                \"] = \" + value));\n         }\n-        ((ArrayList)this.value).set(((Integer)hint).intValue(), value);\n+        ArrayList list = (ArrayList)this.value;\n+        int offset = ((Integer)hint).intValue();\n+\n+        // grow the list if necessary to accomodate the new member\n+        while (list.size() <= offset) {\n+          list.add(null);\n+        }\n+\n+        list.set(offset, value);\n     }\n \n     public void serialize(QName name, Attributes attributes,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c0c023f1a2e39c48ef7f2e6b3f57cefbcf1f5cdf",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a56dbb9d9aff90b21bf7c4bf5592bf22422e49e6",
        "message": "From section 5.1 of the SOAP Specification, rule #8 in the rules for\nserialization states:\n\nThe \"asize\" construct contains a comma separated list of zero, one, or\nmore integers indicating the lengths of each dimension of the array. A\nvalue of zero integers indicates that no particular quantity is\nasserted but that the size may be determined by inspection of the\nactual members.\n\nThe ZSI endpoint seems to send responses without lengths specified, and\nother clients (e.g., WhiteMesa) accept such responses.  Without this\nchange, the Axis client dies with a NullPointerException.\n\nNote: with this change, Axis may be too lenient.  Pass more actual elements\nthan you declare, and the array will be grown to fit.  If you pass less\nactual elements than declared, the array will continue to be padded with\nnulls.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245814 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_171",
        "file": [
            {
                "sha": "729e5b3059e14b22d5b7e60cc8242ed8dc406fed",
                "filename": "src/org/apache/axis/encoding/ArraySerializer.java",
                "status": "modified",
                "additions": 15,
                "deletions": 1,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/c0c023f1a2e39c48ef7f2e6b3f57cefbcf1f5cdf/src/org/apache/axis/encoding/ArraySerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c0c023f1a2e39c48ef7f2e6b3f57cefbcf1f5cdf/src/org/apache/axis/encoding/ArraySerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ArraySerializer.java?ref=c0c023f1a2e39c48ef7f2e6b3f57cefbcf1f5cdf",
                "patch": "@@ -186,6 +186,12 @@ public void onStartElement(String namespace, String localName,\n                         JavaUtils.getMessage(\"badInteger00\", lengthStr));\n             }\n         }\n+        else\n+        {\n+            // asize with no integers: size must be determined by inspection\n+            // of the actual members.\n+            value = new ArrayList();\n+        }\n         \n         String offset = attributes.getValue(Constants.URI_SOAP_ENC,\n                                             Constants.ATTR_OFFSET);\n@@ -264,7 +270,15 @@ public void valueReady(Object value, Object hint)\n             category.debug(JavaUtils.getMessage(\"gotValue00\", \"ArraySerializer\", \"[\" + hint +\n                                \"] = \" + value));\n         }\n-        ((ArrayList)this.value).set(((Integer)hint).intValue(), value);\n+        ArrayList list = (ArrayList)this.value;\n+        int offset = ((Integer)hint).intValue();\n+\n+        // grow the list if necessary to accomodate the new member\n+        while (list.size() <= offset) {\n+          list.add(null);\n+        }\n+\n+        list.set(offset, value);\n     }\n \n     public void serialize(QName name, Attributes attributes,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/c2be5fa17e172872b6e2d7178215c2ec3f963ba6",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/52b3e10e9c5c536f10b95b9414031d720688ec5c",
        "message": "Fix a number of ArrayOutOfBounds and NullPointerExceptions primarily due\nto the values of RPCElement and namespace being either never set or set\nlate.\n\nAdditionally, support the serviceDescription for setting the names of\ninput parameters.\n\n***ALL*** normally the server is pretty much content to ignore the name\nof the individual params, but this is not the currently the case for the\nclient.  However, I will contend that a fairly common case is that there\nis a single output parameter, and we can easily provide the ability to\nbe insensitive to the name returned in that case.  From the interop tests,\nthis makes the client able to talk to more servers who have their own\npreference for naming conventions.  I welcome criticism of both the overall\nidea, and the way in which I chose to implement it at this time.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252056 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_172",
        "file": [
            {
                "sha": "b735a99b3e5cb51d740b05f094566091280d03a4",
                "filename": "src/org/apache/axis/client/ServiceClient.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/c2be5fa17e172872b6e2d7178215c2ec3f963ba6/src/org/apache/axis/client/ServiceClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c2be5fa17e172872b6e2d7178215c2ec3f963ba6/src/org/apache/axis/client/ServiceClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/ServiceClient.java?ref=c2be5fa17e172872b6e2d7178215c2ec3f963ba6",
                "patch": "@@ -235,8 +235,7 @@ public void addDeserializerFactory(QName qName, Class _class,\n     \n     public Object invoke( String namespace, String method, Object[] args ) throws AxisFault {\n         Debug.Print( 1, \"Enter: ServiceClient::invoke(ns, meth, args)\" );\n-        RPCElement  body  = new RPCElement( method, args );\n-        body.setNamespaceURI(namespace);\n+        RPCElement  body = new RPCElement(namespace, method, args, serviceDesc);\n         Object ret = invoke( body );\n         Debug.Print( 1, \"Exit: ServiceClient::invoke(ns, meth, args)\" );\n         return ret;"
            },
            {
                "sha": "f57efbe1362ae21a13fbe9d27da2c47da49d8eb8",
                "filename": "src/org/apache/axis/encoding/ServiceDescription.java",
                "status": "modified",
                "additions": 23,
                "deletions": 1,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/c2be5fa17e172872b6e2d7178215c2ec3f963ba6/src/org/apache/axis/encoding/ServiceDescription.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c2be5fa17e172872b6e2d7178215c2ec3f963ba6/src/org/apache/axis/encoding/ServiceDescription.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ServiceDescription.java?ref=c2be5fa17e172872b6e2d7178215c2ec3f963ba6",
                "patch": "@@ -122,6 +122,11 @@ public void addOutputParam(String name, QName type)\n         outputParams.addElement(new Param(name, type));\n     }\n     \n+    public void setOutputParam(QName type)\n+    {\n+        outputParams.addElement(new Param(null, type));\n+    }\n+    \n     public void setSendTypeAttr(boolean sendType)\n     {\n         sendXsiType = sendType;\n@@ -137,7 +142,7 @@ Param findByName(String name, Vector list)\n         Enumeration e = list.elements();\n         while (e.hasMoreElements()) {\n             Param p = (Param)e.nextElement();\n-            if (p.name.equals(name))\n+            if ((p.name==null) || (p.name.equals(name)))\n                 return p;\n         }\n         \n@@ -154,12 +159,26 @@ public QName getInputParamTypeByName(String paramName)\n     \n     public QName getInputParamTypeByPos(int position)\n     {\n+        if (inputParams.size() <= position)\n+            return null;\n+\n         Param param = (Param)inputParams.elementAt(position);\n         if (param != null)\n             return param.type;\n         return null;\n     }\n     \n+    public String getInputParamNameByPos(int position)\n+    {\n+        if (inputParams.size() <= position)\n+            return null;\n+\n+        Param param = (Param)inputParams.elementAt(position);\n+        if (param != null)\n+            return param.name;\n+        return null;\n+    }\n+    \n     /** This one is what the outside world wants to use, I think.\n      */\n     public QName getParamTypeByName(String messageType, String paramName)\n@@ -186,6 +205,9 @@ public QName getOutputParamTypeByName(String paramName)\n     \n     public QName getOutputParamTypeByPos(int position)\n     {\n+        if (inputParams.size() <= position)\n+            return null;\n+\n         Param param = (Param)outputParams.elementAt(position);\n         if (param != null)\n             return param.type;"
            },
            {
                "sha": "bd308112205b5204606bc646af2629f88cdf0fb4",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 12,
                "deletions": 15,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/c2be5fa17e172872b6e2d7178215c2ec3f963ba6/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/c2be5fa17e172872b6e2d7178215c2ec3f963ba6/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=c2be5fa17e172872b6e2d7178215c2ec3f963ba6",
                "patch": "@@ -102,32 +102,28 @@ public RPCElement(String namespace, String localName, Attributes attrs,\n         this.methodName = localName;\n     }\n \n-    public RPCElement(String methodName, Object [] args)\n+    public RPCElement(String namespace, String methodName, Object [] args)\n     {\n-        this.methodName = methodName;\n-        this.name = methodName;\n-        \n-        for (int i = 0; args != null && i < args.length; i++) {\n-            if (args[i] instanceof RPCParam) {\n-                addParam((RPCParam)args[i]);\n-            } else {\n-                addParam(new RPCParam(\"arg\" + i, args[i]));\n-            }\n-        }\n+        this(namespace, methodName, args, null);\n     }\n-    \n-    public RPCElement(String namespace, String methodName, Object[] args ) {\n+\n+    public RPCElement(String namespace, String methodName, Object [] args,\n+                      ServiceDescription service)\n+    {\n+        this.setNamespaceURI(namespace);\n         this.methodName = methodName;\n         this.name = methodName;\n         \n         for (int i = 0; args != null && i < args.length; i++) {\n             if (args[i] instanceof RPCParam) {\n                 addParam((RPCParam)args[i]);\n             } else {\n-                addParam(new RPCParam(\"arg\" + i, args[i]));\n+                String name = null;\n+                if (service != null) name = service.getInputParamNameByPos(i);\n+                if (name == null) name = \"arg\" + i;\n+                addParam(new RPCParam(name, args[i]));\n             }\n         }\n-        this.setNamespaceURI( namespace );\n     }\n     \n     public RPCElement(String methodName)\n@@ -172,6 +168,7 @@ public void onStartChild(String namespace, String name, String qName,\n     {\n         // Start of an arg...\n         RPCParam param = new RPCParam(namespace, name, attributes, context);\n+        param.setRPCElement(this);\n         \n         // See if we can default xsi:type...\n         if (params.size()==0) determineDefaultParams();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/aba15f3c66ca8f885f83d463f52f99e5bdb6f552",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/302b060c73ceb6515d2cc76133477397c19e0ba2",
        "message": "Fix a number of ArrayOutOfBounds and NullPointerExceptions primarily due\nto the values of RPCElement and namespace being either never set or set\nlate.\n\nAdditionally, support the serviceDescription for setting the names of\ninput parameters.\n\n***ALL*** normally the server is pretty much content to ignore the name\nof the individual params, but this is not the currently the case for the\nclient.  However, I will contend that a fairly common case is that there\nis a single output parameter, and we can easily provide the ability to\nbe insensitive to the name returned in that case.  From the interop tests,\nthis makes the client able to talk to more servers who have their own\npreference for naming conventions.  I welcome criticism of both the overall\nidea, and the way in which I chose to implement it at this time.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@244984 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_173",
        "file": [
            {
                "sha": "b735a99b3e5cb51d740b05f094566091280d03a4",
                "filename": "src/org/apache/axis/client/ServiceClient.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/aba15f3c66ca8f885f83d463f52f99e5bdb6f552/src/org/apache/axis/client/ServiceClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aba15f3c66ca8f885f83d463f52f99e5bdb6f552/src/org/apache/axis/client/ServiceClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/ServiceClient.java?ref=aba15f3c66ca8f885f83d463f52f99e5bdb6f552",
                "patch": "@@ -235,8 +235,7 @@ public void addDeserializerFactory(QName qName, Class _class,\n     \n     public Object invoke( String namespace, String method, Object[] args ) throws AxisFault {\n         Debug.Print( 1, \"Enter: ServiceClient::invoke(ns, meth, args)\" );\n-        RPCElement  body  = new RPCElement( method, args );\n-        body.setNamespaceURI(namespace);\n+        RPCElement  body = new RPCElement(namespace, method, args, serviceDesc);\n         Object ret = invoke( body );\n         Debug.Print( 1, \"Exit: ServiceClient::invoke(ns, meth, args)\" );\n         return ret;"
            },
            {
                "sha": "f57efbe1362ae21a13fbe9d27da2c47da49d8eb8",
                "filename": "src/org/apache/axis/encoding/ServiceDescription.java",
                "status": "modified",
                "additions": 23,
                "deletions": 1,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/aba15f3c66ca8f885f83d463f52f99e5bdb6f552/src/org/apache/axis/encoding/ServiceDescription.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aba15f3c66ca8f885f83d463f52f99e5bdb6f552/src/org/apache/axis/encoding/ServiceDescription.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ServiceDescription.java?ref=aba15f3c66ca8f885f83d463f52f99e5bdb6f552",
                "patch": "@@ -122,6 +122,11 @@ public void addOutputParam(String name, QName type)\n         outputParams.addElement(new Param(name, type));\n     }\n     \n+    public void setOutputParam(QName type)\n+    {\n+        outputParams.addElement(new Param(null, type));\n+    }\n+    \n     public void setSendTypeAttr(boolean sendType)\n     {\n         sendXsiType = sendType;\n@@ -137,7 +142,7 @@ Param findByName(String name, Vector list)\n         Enumeration e = list.elements();\n         while (e.hasMoreElements()) {\n             Param p = (Param)e.nextElement();\n-            if (p.name.equals(name))\n+            if ((p.name==null) || (p.name.equals(name)))\n                 return p;\n         }\n         \n@@ -154,12 +159,26 @@ public QName getInputParamTypeByName(String paramName)\n     \n     public QName getInputParamTypeByPos(int position)\n     {\n+        if (inputParams.size() <= position)\n+            return null;\n+\n         Param param = (Param)inputParams.elementAt(position);\n         if (param != null)\n             return param.type;\n         return null;\n     }\n     \n+    public String getInputParamNameByPos(int position)\n+    {\n+        if (inputParams.size() <= position)\n+            return null;\n+\n+        Param param = (Param)inputParams.elementAt(position);\n+        if (param != null)\n+            return param.name;\n+        return null;\n+    }\n+    \n     /** This one is what the outside world wants to use, I think.\n      */\n     public QName getParamTypeByName(String messageType, String paramName)\n@@ -186,6 +205,9 @@ public QName getOutputParamTypeByName(String paramName)\n     \n     public QName getOutputParamTypeByPos(int position)\n     {\n+        if (inputParams.size() <= position)\n+            return null;\n+\n         Param param = (Param)outputParams.elementAt(position);\n         if (param != null)\n             return param.type;"
            },
            {
                "sha": "bd308112205b5204606bc646af2629f88cdf0fb4",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 12,
                "deletions": 15,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/aba15f3c66ca8f885f83d463f52f99e5bdb6f552/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aba15f3c66ca8f885f83d463f52f99e5bdb6f552/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=aba15f3c66ca8f885f83d463f52f99e5bdb6f552",
                "patch": "@@ -102,32 +102,28 @@ public RPCElement(String namespace, String localName, Attributes attrs,\n         this.methodName = localName;\n     }\n \n-    public RPCElement(String methodName, Object [] args)\n+    public RPCElement(String namespace, String methodName, Object [] args)\n     {\n-        this.methodName = methodName;\n-        this.name = methodName;\n-        \n-        for (int i = 0; args != null && i < args.length; i++) {\n-            if (args[i] instanceof RPCParam) {\n-                addParam((RPCParam)args[i]);\n-            } else {\n-                addParam(new RPCParam(\"arg\" + i, args[i]));\n-            }\n-        }\n+        this(namespace, methodName, args, null);\n     }\n-    \n-    public RPCElement(String namespace, String methodName, Object[] args ) {\n+\n+    public RPCElement(String namespace, String methodName, Object [] args,\n+                      ServiceDescription service)\n+    {\n+        this.setNamespaceURI(namespace);\n         this.methodName = methodName;\n         this.name = methodName;\n         \n         for (int i = 0; args != null && i < args.length; i++) {\n             if (args[i] instanceof RPCParam) {\n                 addParam((RPCParam)args[i]);\n             } else {\n-                addParam(new RPCParam(\"arg\" + i, args[i]));\n+                String name = null;\n+                if (service != null) name = service.getInputParamNameByPos(i);\n+                if (name == null) name = \"arg\" + i;\n+                addParam(new RPCParam(name, args[i]));\n             }\n         }\n-        this.setNamespaceURI( namespace );\n     }\n     \n     public RPCElement(String methodName)\n@@ -172,6 +168,7 @@ public void onStartChild(String namespace, String name, String qName,\n     {\n         // Start of an arg...\n         RPCParam param = new RPCParam(namespace, name, attributes, context);\n+        param.setRPCElement(this);\n         \n         // See if we can default xsi:type...\n         if (params.size()==0) determineDefaultParams();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/2d67fe7cc2b08a7dd3b78a429f2ccdc8eb1a2d5f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/691b0a23b2f7fc9c6f2113c213f3eef9923e2803",
        "message": "This change is in response to defect\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=9352\n\nThe defect indicates that an NPE is thrown if a bean\ncannot be constructed (possibly due to a private default constructor).\n\nTom made some changes that may have fixed this problem.\n\nThese additional changes ensure that the bean is constructed\nor an exception is thrown prior to the href/id processing.\n\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@254193 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_174",
        "file": [
            {
                "sha": "e7a58c13fa3a967f198c3af9784b5b9011297b72",
                "filename": "src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "status": "modified",
                "additions": 40,
                "deletions": 7,
                "changes": 47,
                "blob_url": "https://github.com/apache/axis1-java/blob/2d67fe7cc2b08a7dd3b78a429f2ccdc8eb1a2d5f/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2d67fe7cc2b08a7dd3b78a429f2ccdc8eb1a2d5f/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanDeserializer.java?ref=2d67fe7cc2b08a7dd3b78a429f2ccdc8eb1a2d5f",
                "patch": "@@ -122,14 +122,47 @@ public BeanDeserializer(Class javaType, QName xmlType, TypeDesc typeDesc ) {\n         try {\n             value=javaType.newInstance();\n         } catch (Exception e) {\n-/*\n-            throw new SAXException(JavaUtils.getMessage(\"cantCreateBean00\", \n-                                                        javaType.getName(), \n-                                                        e.toString()));\n-*/\n+            // Don't process the exception at this point.\n+            // This is defered until the call to startElement\n+            // which will throw the exception.\n         }\n     }\n \n+    /**\n+     * startElement\n+     * \n+     * The ONLY reason that this method is overridden is so that\n+     * the object value can be set or a reasonable exception is thrown\n+     * indicating that the object cannot be created.  This is done\n+     * at this point so that it occurs BEFORE href/id processing.\n+     * @param namespace is the namespace of the element\n+     * @param localName is the name of the element\n+     * @param qName is the prefixed qName of the element\n+     * @param attributes are the attributes on the element...used to get the type\n+     * @param context is the DeserializationContext\n+     */\n+    public void startElement(String namespace, String localName,\n+                             String qName, Attributes attributes,\n+                             DeserializationContext context)\n+        throws SAXException\n+    {\n+        // Create the bean object if it was not already\n+        // created in the constructor.\n+        if (value == null) {\n+            try {\n+                value=javaType.newInstance();\n+            } catch (Exception e) {\n+                // Failed to create an object.\n+                throw new SAXException(JavaUtils.getMessage(\"cantCreateBean00\", \n+                                                            javaType.getName(), \n+                                                            e.toString()));\n+            }\n+        }\n+        // Invoke super.startElement to do the href/id processing.\n+        super.startElement(namespace, localName, \n+                           qName, attributes, context);\n+    }\n+\n     /**\n      * Deserializer interface called on each child element encountered in\n      * the XML stream.\n@@ -307,6 +340,8 @@ public void onStartElement(String namespace, String localName,\n                                DeserializationContext context)\n             throws SAXException {\n \n+        // The value should have been created or assigned already.\n+        // This code may no longer be needed.\n         if (value == null) {\n             // create a value\n             try {\n@@ -332,8 +367,6 @@ public void onStartElement(String namespace, String localName,\n             if (fieldName == null)\n                 continue;\n \n-//            String attrName = attributes.getLocalName(i);\n-\n             // look for the attribute property\n             BeanPropertyDescriptor bpd =\n                     (BeanPropertyDescriptor) propertyMap.get(fieldName);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/85ca65f85ae1bdb61b265a4b4a57cdbbdd637ac3",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/897e2824ffc34ec1656911a3b5bf42ba23fc0909",
        "message": "This change is in response to defect\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=9352\n\nThe defect indicates that an NPE is thrown if a bean\ncannot be constructed (possibly due to a private default constructor).\n\nTom made some changes that may have fixed this problem.\n\nThese additional changes ensure that the bean is constructed\nor an exception is thrown prior to the href/id processing.\n\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@247120 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_175",
        "file": [
            {
                "sha": "e7a58c13fa3a967f198c3af9784b5b9011297b72",
                "filename": "src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "status": "modified",
                "additions": 40,
                "deletions": 7,
                "changes": 47,
                "blob_url": "https://github.com/apache/axis1-java/blob/85ca65f85ae1bdb61b265a4b4a57cdbbdd637ac3/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/85ca65f85ae1bdb61b265a4b4a57cdbbdd637ac3/src/org/apache/axis/encoding/ser/BeanDeserializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/BeanDeserializer.java?ref=85ca65f85ae1bdb61b265a4b4a57cdbbdd637ac3",
                "patch": "@@ -122,14 +122,47 @@ public BeanDeserializer(Class javaType, QName xmlType, TypeDesc typeDesc ) {\n         try {\n             value=javaType.newInstance();\n         } catch (Exception e) {\n-/*\n-            throw new SAXException(JavaUtils.getMessage(\"cantCreateBean00\", \n-                                                        javaType.getName(), \n-                                                        e.toString()));\n-*/\n+            // Don't process the exception at this point.\n+            // This is defered until the call to startElement\n+            // which will throw the exception.\n         }\n     }\n \n+    /**\n+     * startElement\n+     * \n+     * The ONLY reason that this method is overridden is so that\n+     * the object value can be set or a reasonable exception is thrown\n+     * indicating that the object cannot be created.  This is done\n+     * at this point so that it occurs BEFORE href/id processing.\n+     * @param namespace is the namespace of the element\n+     * @param localName is the name of the element\n+     * @param qName is the prefixed qName of the element\n+     * @param attributes are the attributes on the element...used to get the type\n+     * @param context is the DeserializationContext\n+     */\n+    public void startElement(String namespace, String localName,\n+                             String qName, Attributes attributes,\n+                             DeserializationContext context)\n+        throws SAXException\n+    {\n+        // Create the bean object if it was not already\n+        // created in the constructor.\n+        if (value == null) {\n+            try {\n+                value=javaType.newInstance();\n+            } catch (Exception e) {\n+                // Failed to create an object.\n+                throw new SAXException(JavaUtils.getMessage(\"cantCreateBean00\", \n+                                                            javaType.getName(), \n+                                                            e.toString()));\n+            }\n+        }\n+        // Invoke super.startElement to do the href/id processing.\n+        super.startElement(namespace, localName, \n+                           qName, attributes, context);\n+    }\n+\n     /**\n      * Deserializer interface called on each child element encountered in\n      * the XML stream.\n@@ -307,6 +340,8 @@ public void onStartElement(String namespace, String localName,\n                                DeserializationContext context)\n             throws SAXException {\n \n+        // The value should have been created or assigned already.\n+        // This code may no longer be needed.\n         if (value == null) {\n             // create a value\n             try {\n@@ -332,8 +367,6 @@ public void onStartElement(String namespace, String localName,\n             if (fieldName == null)\n                 continue;\n \n-//            String attrName = attributes.getLocalName(i);\n-\n             // look for the attribute property\n             BeanPropertyDescriptor bpd =\n                     (BeanPropertyDescriptor) propertyMap.get(fieldName);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/30d5f96f9c56888b773bd2bcd1c7b67e7501786c",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/4b4bcd74185291787414576777c9b2d77ec04e4c",
        "message": "Patches from \"Theodore W. Leung\" <twleung@sauria.com> for SOAP Envelope Signing and Verification\n\n- The src-patch fixes problems with our use of C14n and has the server check whether an incoming message claims to be signed\n- The test-patch changes some of the namespaces used in the wsdl test to be absolute -- this was causing c14n to break.\n- The test suite can deploy all the examples with transparent signing. However, when it actually comes to invoking the tests via MultithreadTestCase#Run I'm seeing some weird NPE's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253322 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_176",
        "file": [
            {
                "sha": "0378b8535a76ec7ed33691cab0c76aec3b27c0eb",
                "filename": "samples/security/LogHandler.java",
                "status": "modified",
                "additions": 20,
                "deletions": 4,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/samples/security/LogHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/samples/security/LogHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/security/LogHandler.java?ref=30d5f96f9c56888b773bd2bcd1c7b67e7501786c",
                "patch": "@@ -89,8 +89,10 @@ public void invoke(MessageContext msgContext) throws AxisFault\n         /** Log an access each time we get invoked.\n          */\n         try {\n+System.out.println(\"Starting Server verification\");            \n             Handler serviceHandler = msgContext.getServiceHandler();\n             String filename = (String)getOption(\"filename\");\n+\n             if ((filename == null) || (filename.equals(\"\")))\n                 throw new AxisFault(\"Server.NoLogFile\",\n                                  \"No log file configured for the LogHandler!\",\n@@ -99,13 +101,19 @@ public void invoke(MessageContext msgContext) throws AxisFault\n             \n \t    PrintWriter writer = new PrintWriter(fos);\n             \n-            Integer numAccesses =\n-                             (Integer)serviceHandler.getOption(\"accesses\");\n+            Integer numAccesses = null;\n+\n+            try {\n+                 numAccesses = (Integer)serviceHandler.getOption(\"accesses\");\n+            } catch (ClassCastException cce) {\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n             if (numAccesses == null)\n                 numAccesses = new Integer(0);\n             \n             numAccesses = new Integer(numAccesses.intValue() + 1);\n-            \n+\n             Date date = new Date();\n             String result = date + \": service \" +\n                             msgContext.getTargetService() +\n@@ -124,12 +132,20 @@ public void invoke(MessageContext msgContext) throws AxisFault\n \n             Element nsctx = doc.createElement(\"nsctx\");\n             nsctx.setAttribute(\"xmlns:ds\", Constants.SignatureSpecNS);\n-\t    \n+\n             Element signatureElem = (Element) xpathAPI.selectSingleNode(doc,\n \t\t\t\t\t\t\t\t\t\"//ds:Signature\", nsctx);\n+\n+\t    // check to make sure that the document claims to have been signed\n+\t    if (signatureElem == null) {\n+\t\twriter.println(\"The document is not signed\"); writer.flush();\n+\t\treturn;\n+\t    }\n+\n             XMLSignature sig = new XMLSignature(signatureElem, BaseURI);\n \t    \n             boolean verify = sig.checkSignatureValue(sig.getKeyInfo().getPublicKey());\n+System.out.println(\"Server verification complete.\");            \n \n             writer.println(\"The signature is\" + (verify\n                                                ? \" \""
            },
            {
                "sha": "c1ed22c50dca731646c7fc023b6aac20d112e9f6",
                "filename": "samples/security/SignedSOAPEnvelope.java",
                "status": "modified",
                "additions": 12,
                "deletions": 4,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/samples/security/SignedSOAPEnvelope.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/samples/security/SignedSOAPEnvelope.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/security/SignedSOAPEnvelope.java?ref=30d5f96f9c56888b773bd2bcd1c7b67e7501786c",
                "patch": "@@ -76,6 +76,7 @@\n import org.apache.axis.transport.http.HTTPTransport ;\n import org.apache.axis.utils.*;\n import org.apache.xml.security.signature.XMLSignature;\n+import org.apache.xml.security.c14n.Canonicalizer;\n import org.w3c.dom.Element;\n import org.w3c.dom.Document;\n import org.xml.sax.InputSource;\n@@ -106,14 +107,15 @@ public SignedSOAPEnvelope (SOAPEnvelope env, String baseURI) {\n \n     private void init (SOAPEnvelope env, String baseURI, String keystoreFile) {\n         try {\n+System.out.println(\"Beginning Client signing...\");\n             env.addMapping(new Mapping(SOAPSECNS,SOAPSECprefix));\n             env.addAttribute(Constants.URI_SOAP_ENV,\"actor\",\"some-uri\");\n             env.addAttribute(Constants.URI_SOAP_ENV,\"mustUnderstand\",\"1\");\n \n             SOAPHeader header = new SOAPHeader(XMLUtils.StringToElement(SOAPSECNS,\"Signature\", \"\"));\n             env.addHeader(header);\n \n-            Document doc = env.getAsDocument();\n+\t    Document doc = env.getAsDocument();\n \n             KeyStore ks = KeyStore.getInstance(keystoreType);\n             FileInputStream fis = new FileInputStream(keystoreFile);\n@@ -125,28 +127,34 @@ private void init (SOAPEnvelope env, String baseURI, String keystoreFile) {\n \n             Element soapHeaderElement = (Element)((Element)doc.getFirstChild()).getElementsByTagNameNS(\"*\",\"Header\").item(0);\n             Element soapSignatureElement = (Element)soapHeaderElement.getElementsByTagNameNS(\"*\",\"Signature\").item(0);\n+\n             XMLSignature sig = new XMLSignature(doc, baseURI,\n                                                 XMLSignature.ALGO_ID_SIGNATURE_DSA);\n+\n             soapSignatureElement.appendChild(sig.getElement());\n             sig.addDocument(\"#Body\");\n \n+\n             X509Certificate cert =\n                   (X509Certificate) ks.getCertificate(certificateAlias);\n \n+\n             sig.addKeyInfo(cert);\n             sig.addKeyInfo(cert.getPublicKey());\n             sig.sign(privateKey);\n \n-            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-            org.apache.xml.security.utils.XMLUtils.outputDOMc14nWithComments(doc, baos);\n+            Canonicalizer c14n = Canonicalizer.getInstance(Canonicalizer.ALGO_ID_C14N_WITH_COMMENTS);\n+            byte[] canonicalMessage = c14n.canonicalizeDocument(doc);\n \n-            InputSource is = new InputSource(new java.io.ByteArrayInputStream(baos.toByteArray()));\n+            InputSource is = new InputSource(new java.io.ByteArrayInputStream(canonicalMessage));\n             DeserializationContext dser = null ;\n             AxisClient     tmpEngine = new AxisClient(new NullProvider());\n             MessageContext msgContext = new MessageContext(tmpEngine);\n             dser = new DeserializationContext(is, msgContext,\n                                               Message.REQUEST, this );\n+\n             dser.parse();\n+System.out.println(\"Client signing complete.\");\n         }\n         catch( Exception e ) {\n             e.printStackTrace();"
            },
            {
                "sha": "262aeb7a5957cadbb5dc74e27178c3323c3a1604",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=30d5f96f9c56888b773bd2bcd1c7b67e7501786c",
                "patch": "@@ -90,8 +90,8 @@\n                noimports=\"no\"\n                verbose=\"no\"\n                testcase=\"no\">\n-        <mapping namespace=\"ref.types.test\" package=\"test.wsdl.refattr\"/>\n-        <mapping namespace=\"ref.types\" package=\"test.wsdl.refattr\"/>\n+        <mapping namespace=\"urn:ref.types.test\" package=\"test.wsdl.refattr\"/>\n+        <mapping namespace=\"urn:ref.types\" package=\"test.wsdl.refattr\"/>\n     </wsdl2java>\n \n     <!-- Sequence Test -->"
            },
            {
                "sha": "2b371d3bc982cac3201b8dd271d2222f14b7b4ab",
                "filename": "test/wsdl/multithread/AddressBook.wsdl",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/multithread/AddressBook.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/multithread/AddressBook.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/multithread/AddressBook.wsdl?ref=30d5f96f9c56888b773bd2bcd1c7b67e7501786c",
                "patch": "@@ -1,16 +1,16 @@\n <?xml version=\"1.0\" ?>\n \n <definitions name=\"urn:AddressFetcher\"\n-             targetNamespace=\"multithread.wsdl.test\"\n-             xmlns:tns=\"multithread.wsdl.test\"\n-             xmlns:typens=\"multithread.wsdl.test\"\n+             targetNamespace=\"urn:multithread.wsdl.test\"\n+             xmlns:tns=\"urn:multithread.wsdl.test\"\n+             xmlns:typens=\"urn:multithread.wsdl.test\"\n              xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\"\n              xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n              xmlns=\"http://schemas.xmlsoap.org/wsdl/\">\n \n   <!-- type defs -->\n   <types>\n-    <xsd:schema targetNamespace=\"multithread.wsdl.test\"\n+    <xsd:schema targetNamespace=\"urn:multithread.wsdl.test\"\n                 xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n \n       <xsd:simpleType name=\"stateType\">"
            },
            {
                "sha": "c0563cd8d1e642a879906c01b7f872a0a95531c5",
                "filename": "test/wsdl/refattr/refattr.wsdl",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/refattr/refattr.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/refattr/refattr.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/refattr/refattr.wsdl?ref=30d5f96f9c56888b773bd2bcd1c7b67e7501786c",
                "patch": "@@ -2,9 +2,9 @@\n \n <definitions \n     name=\"ref types test\"\n-    targetNamespace=\"ref.types.test\"\n-    xmlns:tns=\"ref.types.test\"\n-    xmlns:typens=\"ref.types\"\n+    targetNamespace=\"urn:ref.types.test\"\n+    xmlns:tns=\"urn:ref.types.test\"\n+    xmlns:typens=\"urn:ref.types\"\n     xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n     xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n     xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"\n@@ -13,7 +13,7 @@\n   <!-- type defs -->\n   <types>\n     <xsd:schema \n-        targetNamespace=\"ref.types\"\n+        targetNamespace=\"urn:ref.types\"\n         xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n \n       <xsd:simpleType name=\"enum\">"
            },
            {
                "sha": "7cad654aba0e90edea4a726ea9d33a9779fecd70",
                "filename": "test/wsdl/types/ComprehensiveTypes.wsdl",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/types/ComprehensiveTypes.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/30d5f96f9c56888b773bd2bcd1c7b67e7501786c/test/wsdl/types/ComprehensiveTypes.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/types/ComprehensiveTypes.wsdl?ref=30d5f96f9c56888b773bd2bcd1c7b67e7501786c",
                "patch": "@@ -2,10 +2,10 @@\n \n <definitions \n     name=\"comprehensive types test\"\n-    targetNamespace=\"comprehensive-service.types.wsdl.test\"\n-    xmlns:tns=\"comprehensive-service.types.wsdl.test\"\n-    xmlns:typens=\"comprehensive-types.types.wsdl.test\"\n-    xmlns:typens2=\"comprehensive-types2.types.wsdl.test\"\n+    targetNamespace=\"urn:comprehensive-service.types.wsdl.test\"\n+    xmlns:tns=\"urn:comprehensive-service.types.wsdl.test\"\n+    xmlns:typens=\"urn:comprehensive-types.types.wsdl.test\"\n+    xmlns:typens2=\"urn:comprehensive-types2.types.wsdl.test\"\n     xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n     xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n     xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"\n@@ -15,7 +15,7 @@\n   <!-- type defs -->\n   <types>\n     <xsd:schema \n-        targetNamespace=\"comprehensive-types.types.wsdl.test\"\n+        targetNamespace=\"urn:comprehensive-types.types.wsdl.test\"\n         xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n \n       <xsd:simpleType name=\"enum\">\n@@ -185,7 +185,7 @@\n \n \n     <xsd:schema \n-        targetNamespace=\"comprehensive-types2.types.wsdl.test\"\n+        targetNamespace=\"urn:comprehensive-types2.types.wsdl.test\"\n         xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n         <xsd:complexType name=\"fwd\">\n           <xsd:complexContent>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/a59ec9caa9cbe4e324e6396a7abdc916e75c793b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/15f68c833c24bd26143310d9e888cc32eb7cbc90",
        "message": "Patches from \"Theodore W. Leung\" <twleung@sauria.com> for SOAP Envelope Signing and Verification\n\n- The src-patch fixes problems with our use of C14n and has the server check whether an incoming message claims to be signed\n- The test-patch changes some of the namespaces used in the wsdl test to be absolute -- this was causing c14n to break.\n- The test suite can deploy all the examples with transparent signing. However, when it actually comes to invoking the tests via MultithreadTestCase#Run I'm seeing some weird NPE's.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246250 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_177",
        "file": [
            {
                "sha": "0378b8535a76ec7ed33691cab0c76aec3b27c0eb",
                "filename": "samples/security/LogHandler.java",
                "status": "modified",
                "additions": 20,
                "deletions": 4,
                "changes": 24,
                "blob_url": "https://github.com/apache/axis1-java/blob/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/samples/security/LogHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/samples/security/LogHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/security/LogHandler.java?ref=a59ec9caa9cbe4e324e6396a7abdc916e75c793b",
                "patch": "@@ -89,8 +89,10 @@ public void invoke(MessageContext msgContext) throws AxisFault\n         /** Log an access each time we get invoked.\n          */\n         try {\n+System.out.println(\"Starting Server verification\");            \n             Handler serviceHandler = msgContext.getServiceHandler();\n             String filename = (String)getOption(\"filename\");\n+\n             if ((filename == null) || (filename.equals(\"\")))\n                 throw new AxisFault(\"Server.NoLogFile\",\n                                  \"No log file configured for the LogHandler!\",\n@@ -99,13 +101,19 @@ public void invoke(MessageContext msgContext) throws AxisFault\n             \n \t    PrintWriter writer = new PrintWriter(fos);\n             \n-            Integer numAccesses =\n-                             (Integer)serviceHandler.getOption(\"accesses\");\n+            Integer numAccesses = null;\n+\n+            try {\n+                 numAccesses = (Integer)serviceHandler.getOption(\"accesses\");\n+            } catch (ClassCastException cce) {\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n             if (numAccesses == null)\n                 numAccesses = new Integer(0);\n             \n             numAccesses = new Integer(numAccesses.intValue() + 1);\n-            \n+\n             Date date = new Date();\n             String result = date + \": service \" +\n                             msgContext.getTargetService() +\n@@ -124,12 +132,20 @@ public void invoke(MessageContext msgContext) throws AxisFault\n \n             Element nsctx = doc.createElement(\"nsctx\");\n             nsctx.setAttribute(\"xmlns:ds\", Constants.SignatureSpecNS);\n-\t    \n+\n             Element signatureElem = (Element) xpathAPI.selectSingleNode(doc,\n \t\t\t\t\t\t\t\t\t\"//ds:Signature\", nsctx);\n+\n+\t    // check to make sure that the document claims to have been signed\n+\t    if (signatureElem == null) {\n+\t\twriter.println(\"The document is not signed\"); writer.flush();\n+\t\treturn;\n+\t    }\n+\n             XMLSignature sig = new XMLSignature(signatureElem, BaseURI);\n \t    \n             boolean verify = sig.checkSignatureValue(sig.getKeyInfo().getPublicKey());\n+System.out.println(\"Server verification complete.\");            \n \n             writer.println(\"The signature is\" + (verify\n                                                ? \" \""
            },
            {
                "sha": "c1ed22c50dca731646c7fc023b6aac20d112e9f6",
                "filename": "samples/security/SignedSOAPEnvelope.java",
                "status": "modified",
                "additions": 12,
                "deletions": 4,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/samples/security/SignedSOAPEnvelope.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/samples/security/SignedSOAPEnvelope.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/security/SignedSOAPEnvelope.java?ref=a59ec9caa9cbe4e324e6396a7abdc916e75c793b",
                "patch": "@@ -76,6 +76,7 @@\n import org.apache.axis.transport.http.HTTPTransport ;\n import org.apache.axis.utils.*;\n import org.apache.xml.security.signature.XMLSignature;\n+import org.apache.xml.security.c14n.Canonicalizer;\n import org.w3c.dom.Element;\n import org.w3c.dom.Document;\n import org.xml.sax.InputSource;\n@@ -106,14 +107,15 @@ public SignedSOAPEnvelope (SOAPEnvelope env, String baseURI) {\n \n     private void init (SOAPEnvelope env, String baseURI, String keystoreFile) {\n         try {\n+System.out.println(\"Beginning Client signing...\");\n             env.addMapping(new Mapping(SOAPSECNS,SOAPSECprefix));\n             env.addAttribute(Constants.URI_SOAP_ENV,\"actor\",\"some-uri\");\n             env.addAttribute(Constants.URI_SOAP_ENV,\"mustUnderstand\",\"1\");\n \n             SOAPHeader header = new SOAPHeader(XMLUtils.StringToElement(SOAPSECNS,\"Signature\", \"\"));\n             env.addHeader(header);\n \n-            Document doc = env.getAsDocument();\n+\t    Document doc = env.getAsDocument();\n \n             KeyStore ks = KeyStore.getInstance(keystoreType);\n             FileInputStream fis = new FileInputStream(keystoreFile);\n@@ -125,28 +127,34 @@ private void init (SOAPEnvelope env, String baseURI, String keystoreFile) {\n \n             Element soapHeaderElement = (Element)((Element)doc.getFirstChild()).getElementsByTagNameNS(\"*\",\"Header\").item(0);\n             Element soapSignatureElement = (Element)soapHeaderElement.getElementsByTagNameNS(\"*\",\"Signature\").item(0);\n+\n             XMLSignature sig = new XMLSignature(doc, baseURI,\n                                                 XMLSignature.ALGO_ID_SIGNATURE_DSA);\n+\n             soapSignatureElement.appendChild(sig.getElement());\n             sig.addDocument(\"#Body\");\n \n+\n             X509Certificate cert =\n                   (X509Certificate) ks.getCertificate(certificateAlias);\n \n+\n             sig.addKeyInfo(cert);\n             sig.addKeyInfo(cert.getPublicKey());\n             sig.sign(privateKey);\n \n-            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-            org.apache.xml.security.utils.XMLUtils.outputDOMc14nWithComments(doc, baos);\n+            Canonicalizer c14n = Canonicalizer.getInstance(Canonicalizer.ALGO_ID_C14N_WITH_COMMENTS);\n+            byte[] canonicalMessage = c14n.canonicalizeDocument(doc);\n \n-            InputSource is = new InputSource(new java.io.ByteArrayInputStream(baos.toByteArray()));\n+            InputSource is = new InputSource(new java.io.ByteArrayInputStream(canonicalMessage));\n             DeserializationContext dser = null ;\n             AxisClient     tmpEngine = new AxisClient(new NullProvider());\n             MessageContext msgContext = new MessageContext(tmpEngine);\n             dser = new DeserializationContext(is, msgContext,\n                                               Message.REQUEST, this );\n+\n             dser.parse();\n+System.out.println(\"Client signing complete.\");\n         }\n         catch( Exception e ) {\n             e.printStackTrace();"
            },
            {
                "sha": "262aeb7a5957cadbb5dc74e27178c3323c3a1604",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=a59ec9caa9cbe4e324e6396a7abdc916e75c793b",
                "patch": "@@ -90,8 +90,8 @@\n                noimports=\"no\"\n                verbose=\"no\"\n                testcase=\"no\">\n-        <mapping namespace=\"ref.types.test\" package=\"test.wsdl.refattr\"/>\n-        <mapping namespace=\"ref.types\" package=\"test.wsdl.refattr\"/>\n+        <mapping namespace=\"urn:ref.types.test\" package=\"test.wsdl.refattr\"/>\n+        <mapping namespace=\"urn:ref.types\" package=\"test.wsdl.refattr\"/>\n     </wsdl2java>\n \n     <!-- Sequence Test -->"
            },
            {
                "sha": "2b371d3bc982cac3201b8dd271d2222f14b7b4ab",
                "filename": "test/wsdl/multithread/AddressBook.wsdl",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/multithread/AddressBook.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/multithread/AddressBook.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/multithread/AddressBook.wsdl?ref=a59ec9caa9cbe4e324e6396a7abdc916e75c793b",
                "patch": "@@ -1,16 +1,16 @@\n <?xml version=\"1.0\" ?>\n \n <definitions name=\"urn:AddressFetcher\"\n-             targetNamespace=\"multithread.wsdl.test\"\n-             xmlns:tns=\"multithread.wsdl.test\"\n-             xmlns:typens=\"multithread.wsdl.test\"\n+             targetNamespace=\"urn:multithread.wsdl.test\"\n+             xmlns:tns=\"urn:multithread.wsdl.test\"\n+             xmlns:typens=\"urn:multithread.wsdl.test\"\n              xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\"\n              xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n              xmlns=\"http://schemas.xmlsoap.org/wsdl/\">\n \n   <!-- type defs -->\n   <types>\n-    <xsd:schema targetNamespace=\"multithread.wsdl.test\"\n+    <xsd:schema targetNamespace=\"urn:multithread.wsdl.test\"\n                 xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n \n       <xsd:simpleType name=\"stateType\">"
            },
            {
                "sha": "c0563cd8d1e642a879906c01b7f872a0a95531c5",
                "filename": "test/wsdl/refattr/refattr.wsdl",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/refattr/refattr.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/refattr/refattr.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/refattr/refattr.wsdl?ref=a59ec9caa9cbe4e324e6396a7abdc916e75c793b",
                "patch": "@@ -2,9 +2,9 @@\n \n <definitions \n     name=\"ref types test\"\n-    targetNamespace=\"ref.types.test\"\n-    xmlns:tns=\"ref.types.test\"\n-    xmlns:typens=\"ref.types\"\n+    targetNamespace=\"urn:ref.types.test\"\n+    xmlns:tns=\"urn:ref.types.test\"\n+    xmlns:typens=\"urn:ref.types\"\n     xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n     xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n     xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"\n@@ -13,7 +13,7 @@\n   <!-- type defs -->\n   <types>\n     <xsd:schema \n-        targetNamespace=\"ref.types\"\n+        targetNamespace=\"urn:ref.types\"\n         xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n \n       <xsd:simpleType name=\"enum\">"
            },
            {
                "sha": "7cad654aba0e90edea4a726ea9d33a9779fecd70",
                "filename": "test/wsdl/types/ComprehensiveTypes.wsdl",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/types/ComprehensiveTypes.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/a59ec9caa9cbe4e324e6396a7abdc916e75c793b/test/wsdl/types/ComprehensiveTypes.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/types/ComprehensiveTypes.wsdl?ref=a59ec9caa9cbe4e324e6396a7abdc916e75c793b",
                "patch": "@@ -2,10 +2,10 @@\n \n <definitions \n     name=\"comprehensive types test\"\n-    targetNamespace=\"comprehensive-service.types.wsdl.test\"\n-    xmlns:tns=\"comprehensive-service.types.wsdl.test\"\n-    xmlns:typens=\"comprehensive-types.types.wsdl.test\"\n-    xmlns:typens2=\"comprehensive-types2.types.wsdl.test\"\n+    targetNamespace=\"urn:comprehensive-service.types.wsdl.test\"\n+    xmlns:tns=\"urn:comprehensive-service.types.wsdl.test\"\n+    xmlns:typens=\"urn:comprehensive-types.types.wsdl.test\"\n+    xmlns:typens2=\"urn:comprehensive-types2.types.wsdl.test\"\n     xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n     xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n     xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"\n@@ -15,7 +15,7 @@\n   <!-- type defs -->\n   <types>\n     <xsd:schema \n-        targetNamespace=\"comprehensive-types.types.wsdl.test\"\n+        targetNamespace=\"urn:comprehensive-types.types.wsdl.test\"\n         xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n \n       <xsd:simpleType name=\"enum\">\n@@ -185,7 +185,7 @@\n \n \n     <xsd:schema \n-        targetNamespace=\"comprehensive-types2.types.wsdl.test\"\n+        targetNamespace=\"urn:comprehensive-types2.types.wsdl.test\"\n         xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n         <xsd:complexType name=\"fwd\">\n           <xsd:complexContent>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/4c7981c7aa5eebfb29410dd4b20caf078b44db89",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/bf40d70781914756d1be0cfa4c29eced8f579028",
        "message": "The main purpose of this checkin is to move the special handler in SOAPService back to the correct place *before* the pivot point when executing a service.  This makes SOAP 1.1/1.2 semantics much clearer, in that Handlers on the request chain should have already marked all MU headers as processed before you perform the \"meat\" of your service work.\n\nAlong the way fix a few bugs which were preventing me from building all-tests.\n\n* SOAPResponseHandler -> MustUnderstandChecker (since that's what it does),\n  and it executes before the pivot\n\n* JWS services are now named for their class name; this prevents an NPE\n  when calling SOAPService.addSession() (since JWS services are now session\n  scoped by default (when did *that* happen?))\n\n* Make sure to deploy test/rpc/deploy.wsdd before running the test which\n  uses it in test/functional - NOTE: why is test/rpc there at all?  There\n  aren't any tests in there!\n\n* Check for null currentContext in WSDDUndeployment - this was crashing\n  the test/wsdl/jaxrpchandler tests with an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256530 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_178",
        "file": [
            {
                "sha": "ae4e3de4de64d0b11c8ea71b1485f93b13de7002",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/4c7981c7aa5eebfb29410dd4b20caf078b44db89/src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4c7981c7aa5eebfb29410dd4b20caf078b44db89/src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java?ref=4c7981c7aa5eebfb29410dd4b20caf078b44db89",
                "patch": "@@ -202,13 +202,15 @@ public void undeployFromRegistry(WSDDDeployment registry)\n             qname = (QName)services.get(n);\n  \n             try {\n-              String sname = qname.getLocalPart();\n-              SOAPService service = MessageContext.getCurrentContext()\n-                                                  .getAxisEngine()\n-                                                  .getService(sname);\n-              if ( service != null ) service.clearSessions();\n+                String sname = qname.getLocalPart();\n+                MessageContext messageContext = MessageContext.getCurrentContext();\n+                if (messageContext != null) {\n+                    SOAPService service = messageContext.getAxisEngine()\n+                            .getService(sname);\n+                    if ( service != null ) service.clearSessions();\n+                }\n             } catch(Exception exp) {\n-              throw new ConfigurationException(exp);\n+                throw new ConfigurationException(exp);\n             }\n             registry.undeployService(qname);\n         }"
            },
            {
                "sha": "fe5137e7fe5ce0a15ae57dadb30fe0648b1b8d15",
                "filename": "src/org/apache/axis/handlers/JWSHandler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/4c7981c7aa5eebfb29410dd4b20caf078b44db89/src/org/apache/axis/handlers/JWSHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4c7981c7aa5eebfb29410dd4b20caf078b44db89/src/org/apache/axis/handlers/JWSHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/JWSHandler.java?ref=4c7981c7aa5eebfb29410dd4b20caf078b44db89",
                "patch": "@@ -300,6 +300,7 @@ protected void setupService(MessageContext msgContext) throws Exception {\n             SOAPService rpc = (SOAPService)soapServices.get(clsName);\n             if (rpc == null) {\n                 rpc = new SOAPService(new RPCProvider());\n+                rpc.setName(clsName);\n                 rpc.setOption(RPCProvider.OPTION_CLASSNAME, clsName );\n                 rpc.setEngine(msgContext.getAxisEngine());\n                 "
            },
            {
                "sha": "26e97eea64deb4aa33b044367a953de37b9d9988",
                "filename": "src/org/apache/axis/handlers/soap/SOAPService.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/4c7981c7aa5eebfb29410dd4b20caf078b44db89/src/org/apache/axis/handlers/soap/SOAPService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/4c7981c7aa5eebfb29410dd4b20caf078b44db89/src/org/apache/axis/handlers/soap/SOAPService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/soap/SOAPService.java?ref=4c7981c7aa5eebfb29410dd4b20caf078b44db89",
                "patch": "@@ -199,11 +199,11 @@ public ArrayList getActors() {\n     \n \n     /**\n-     * SOAPResponseHandler is used to inject SOAP semantics just before\n+     * MustUnderstandChecker is used to inject SOAP semantics just before\n      * the pivot handler.\n      */\n-    private class SOAPResponseHandler extends BasicHandler {\n-        public SOAPResponseHandler() {}\n+    private class MustUnderstandChecker extends BasicHandler {\n+        public MustUnderstandChecker() {}\n \n         public void invoke(MessageContext msgContext) throws AxisFault {\n             // Do SOAP semantics here\n@@ -291,7 +291,7 @@ public SOAPService()\n     public SOAPService(Handler reqHandler, Handler pivHandler,\n                        Handler respHandler) {\n         this();\n-        init(reqHandler, null, pivHandler, new SOAPResponseHandler(), respHandler);\n+        init(reqHandler, new MustUnderstandChecker(), pivHandler, null, respHandler);\n     }\n \n     public TypeMappingRegistry getTypeMappingRegistry()\n@@ -304,7 +304,7 @@ public TypeMappingRegistry getTypeMappingRegistry()\n      */\n     public SOAPService(Handler serviceHandler)\n     {\n-        init(null, null, serviceHandler, new SOAPResponseHandler(), null);\n+        init(null, new MustUnderstandChecker(), serviceHandler, null, null);\n     }\n     \n     /** Tell this service which engine it's deployed to."
            },
            {
                "sha": "6cfc8873f5024c7d6f61d54d37ab1021282410c8",
                "filename": "test/functional/build.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/4c7981c7aa5eebfb29410dd4b20caf078b44db89/test/functional/build.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/4c7981c7aa5eebfb29410dd4b20caf078b44db89/test/functional/build.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/functional/build.xml?ref=4c7981c7aa5eebfb29410dd4b20caf078b44db89",
                "patch": "@@ -68,6 +68,7 @@ Copyright:\n    <path id=\"deploy.xml.files\">\n        <fileset dir=\"${build.dir}\">\n           <include name=\"work/samples/**/deploy.wsdd\"/>\n+          <include name=\"work/test/rpc/deploy.wsdd\"/>\n        </fileset>\n    </path>\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/2b129fc80d8083d05d1cfb5871a5f012ceb051ec",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/ce96030c816b3157004ffdae4aa0242cc7361e10",
        "message": "The main purpose of this checkin is to move the special handler in SOAPService back to the correct place *before* the pivot point when executing a service.  This makes SOAP 1.1/1.2 semantics much clearer, in that Handlers on the request chain should have already marked all MU headers as processed before you perform the \"meat\" of your service work.\n\nAlong the way fix a few bugs which were preventing me from building all-tests.\n\n* SOAPResponseHandler -> MustUnderstandChecker (since that's what it does),\n  and it executes before the pivot\n\n* JWS services are now named for their class name; this prevents an NPE\n  when calling SOAPService.addSession() (since JWS services are now session\n  scoped by default (when did *that* happen?))\n\n* Make sure to deploy test/rpc/deploy.wsdd before running the test which\n  uses it in test/functional - NOTE: why is test/rpc there at all?  There\n  aren't any tests in there!\n\n* Check for null currentContext in WSDDUndeployment - this was crashing\n  the test/wsdl/jaxrpchandler tests with an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249461 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_179",
        "file": [
            {
                "sha": "ae4e3de4de64d0b11c8ea71b1485f93b13de7002",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDUndeployment.java?ref=2b129fc80d8083d05d1cfb5871a5f012ceb051ec",
                "patch": "@@ -202,13 +202,15 @@ public void undeployFromRegistry(WSDDDeployment registry)\n             qname = (QName)services.get(n);\n  \n             try {\n-              String sname = qname.getLocalPart();\n-              SOAPService service = MessageContext.getCurrentContext()\n-                                                  .getAxisEngine()\n-                                                  .getService(sname);\n-              if ( service != null ) service.clearSessions();\n+                String sname = qname.getLocalPart();\n+                MessageContext messageContext = MessageContext.getCurrentContext();\n+                if (messageContext != null) {\n+                    SOAPService service = messageContext.getAxisEngine()\n+                            .getService(sname);\n+                    if ( service != null ) service.clearSessions();\n+                }\n             } catch(Exception exp) {\n-              throw new ConfigurationException(exp);\n+                throw new ConfigurationException(exp);\n             }\n             registry.undeployService(qname);\n         }"
            },
            {
                "sha": "fe5137e7fe5ce0a15ae57dadb30fe0648b1b8d15",
                "filename": "src/org/apache/axis/handlers/JWSHandler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/src/org/apache/axis/handlers/JWSHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/src/org/apache/axis/handlers/JWSHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/JWSHandler.java?ref=2b129fc80d8083d05d1cfb5871a5f012ceb051ec",
                "patch": "@@ -300,6 +300,7 @@ protected void setupService(MessageContext msgContext) throws Exception {\n             SOAPService rpc = (SOAPService)soapServices.get(clsName);\n             if (rpc == null) {\n                 rpc = new SOAPService(new RPCProvider());\n+                rpc.setName(clsName);\n                 rpc.setOption(RPCProvider.OPTION_CLASSNAME, clsName );\n                 rpc.setEngine(msgContext.getAxisEngine());\n                 "
            },
            {
                "sha": "26e97eea64deb4aa33b044367a953de37b9d9988",
                "filename": "src/org/apache/axis/handlers/soap/SOAPService.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/axis1-java/blob/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/src/org/apache/axis/handlers/soap/SOAPService.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/src/org/apache/axis/handlers/soap/SOAPService.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/soap/SOAPService.java?ref=2b129fc80d8083d05d1cfb5871a5f012ceb051ec",
                "patch": "@@ -199,11 +199,11 @@ public ArrayList getActors() {\n     \n \n     /**\n-     * SOAPResponseHandler is used to inject SOAP semantics just before\n+     * MustUnderstandChecker is used to inject SOAP semantics just before\n      * the pivot handler.\n      */\n-    private class SOAPResponseHandler extends BasicHandler {\n-        public SOAPResponseHandler() {}\n+    private class MustUnderstandChecker extends BasicHandler {\n+        public MustUnderstandChecker() {}\n \n         public void invoke(MessageContext msgContext) throws AxisFault {\n             // Do SOAP semantics here\n@@ -291,7 +291,7 @@ public SOAPService()\n     public SOAPService(Handler reqHandler, Handler pivHandler,\n                        Handler respHandler) {\n         this();\n-        init(reqHandler, null, pivHandler, new SOAPResponseHandler(), respHandler);\n+        init(reqHandler, new MustUnderstandChecker(), pivHandler, null, respHandler);\n     }\n \n     public TypeMappingRegistry getTypeMappingRegistry()\n@@ -304,7 +304,7 @@ public TypeMappingRegistry getTypeMappingRegistry()\n      */\n     public SOAPService(Handler serviceHandler)\n     {\n-        init(null, null, serviceHandler, new SOAPResponseHandler(), null);\n+        init(null, new MustUnderstandChecker(), serviceHandler, null, null);\n     }\n     \n     /** Tell this service which engine it's deployed to."
            },
            {
                "sha": "6cfc8873f5024c7d6f61d54d37ab1021282410c8",
                "filename": "test/functional/build.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/test/functional/build.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/2b129fc80d8083d05d1cfb5871a5f012ceb051ec/test/functional/build.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/functional/build.xml?ref=2b129fc80d8083d05d1cfb5871a5f012ceb051ec",
                "patch": "@@ -68,6 +68,7 @@ Copyright:\n    <path id=\"deploy.xml.files\">\n        <fileset dir=\"${build.dir}\">\n           <include name=\"work/samples/**/deploy.wsdd\"/>\n+          <include name=\"work/test/rpc/deploy.wsdd\"/>\n        </fileset>\n    </path>\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/92d879fa0a377c940425b077446b5b62d8f89818",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/37f2f13c64491a19d57614e56666c32f7ebe48e0",
        "message": "Username and password on WSDL URL did not work.\n - Add the -U/--user and -P/-password options to WSDL2Java command line\n - Parse the URL and extract the userInfo to get username/password\n - Register a default Authenticator to use when the URL is resolved,\n   to provide login info.  This will fall back to http.ProxyUser and\n   http.proxyPassword properties if user or password is not found via switch or\n   the URI.\n - Check for a null document and print a error instead of NPE when we\n   fail to get the WSDL\n - Update the use-guide with new -U/-P switch info.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253968 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_180",
        "file": [
            {
                "sha": "147234024adf078ebe03ebc6ef38b462a9d663b6",
                "filename": "docs/user-guide.html",
                "status": "modified",
                "additions": 16,
                "deletions": 1,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/92d879fa0a377c940425b077446b5b62d8f89818/docs/user-guide.html",
                "raw_url": "https://github.com/apache/axis1-java/raw/92d879fa0a377c940425b077446b5b62d8f89818/docs/user-guide.html",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/docs/user-guide.html?ref=92d879fa0a377c940425b077446b5b62d8f89818",
                "patch": "@@ -982,7 +982,12 @@ <h4>\n <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -O, --timeout &lt;argument>\n <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n timeout in seconds (default is 45, specify -1 to disable)\n-<br>&nbsp;\n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -U, --user &lt;argument>\n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n+username to access the WSDL-URI \n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -P, --password &lt;argument>\n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n+password to access the WSDL-URI <br>&nbsp;\n <h4>\n -h, --help</h4>\n Print the usage statement and exit\n@@ -1111,6 +1116,16 @@ <h4>\n <h4>\n -T, --typeMappingVersion &lt;argument></h4>\n Indicate 1.1 or 1.2.&nbsp; The default is 1.2 (SOAP 1.2 JAX-RPC compliant).\n+<h4> -U, --user &lt;argument&gt;</h4>\n+This username is used in resolving the WSDL-URI provided as the input to \n+WSDL2Java. &nbsp;If the URI contains a username, this will override the command\n+line switch. &nbsp;An example of a URL with a username and password is: \n+<code>http://user:password@hostname:port/path/to/service?WSDL</code><br>\n+<h4> -P, --password &lt;argument&gt;</h4>\n+ This password is used in resolving the WSDL-URI provided as the input to WSDL2Java.\n+ &nbsp;If the URI contains a password, this will override the command\n+line switch.<br>\n+\n <br>&nbsp;\n <h3>\n <a NAME=\"Java2WSDL: Building WSDL from Java\"></a>Java2WSDL: Building WSDL"
            },
            {
                "sha": "5d2d2db9190d9e54adff6a4c2cdeb4f90d3bab85",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/92d879fa0a377c940425b077446b5b62d8f89818/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/92d879fa0a377c940425b077446b5b62d8f89818/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=92d879fa0a377c940425b077446b5b62d8f89818",
                "patch": "@@ -798,3 +798,8 @@ badParameterMode=Invalid parameter mode byte ({0}) passed to getModeAsString().\n \n attach.bounday.mns=Marking streams not supported.\n noSuchOperation=No such operation ''{0}''\n+\n+optionUsername=username to access the WSDL-URI \n+optionPassword=password to access the WSDL-URI\n+cantGetDoc00=Unable to retrieve WSDL document: {0}\n+"
            },
            {
                "sha": "0254cd0d751dd3e27dab338c1219f24819e00013",
                "filename": "src/org/apache/axis/wsdl/WSDL2Java.java",
                "status": "modified",
                "additions": 78,
                "deletions": 6,
                "changes": 84,
                "blob_url": "https://github.com/apache/axis1-java/blob/92d879fa0a377c940425b077446b5b62d8f89818/src/org/apache/axis/wsdl/WSDL2Java.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/92d879fa0a377c940425b077446b5b62d8f89818/src/org/apache/axis/wsdl/WSDL2Java.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/WSDL2Java.java?ref=92d879fa0a377c940425b077446b5b62d8f89818",
                "patch": "@@ -75,6 +75,8 @@\n import java.io.IOException;\n import java.net.Authenticator;\n import java.net.PasswordAuthentication;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n import java.util.HashMap;\n import java.util.List;\n \n@@ -102,6 +104,8 @@\n     protected static final int NETWORK_TIMEOUT_OPT = 'O';\n     protected static final int FACTORY_CLASS_OPT = 'F';\n     protected static final int HELPER_CLASS_OPT = 'H';\n+    protected static final int USERNAME_OPT = 'U';\n+    protected static final int PASSWORD_OPT = 'P';\n \n \n     // Scope constants\n@@ -110,6 +114,10 @@\n     public static final byte REQUEST_SCOPE     = 0x10;\n     public static final byte SESSION_SCOPE     = 0x11;\n \n+    // Username and password for Authentication\n+    protected String username = null;\n+    protected String password = null;\n+    \n     // The emitter framework Emitter class.\n     protected Emitter emitter;\n     // Timeout, in milliseconds, to let the Emitter do its work\n@@ -194,7 +202,15 @@\n         new CLOptionDescriptor(\"timeout\",\n                 CLOptionDescriptor.ARGUMENT_REQUIRED,\n                 NETWORK_TIMEOUT_OPT,\n-                JavaUtils.getMessage(\"optionTimeout00\"))\n+                JavaUtils.getMessage(\"optionTimeout00\")),\n+        new CLOptionDescriptor(\"user\",\n+                CLOptionDescriptor.ARGUMENT_REQUIRED,\n+                USERNAME_OPT,\n+                JavaUtils.getMessage(\"optionUsername\")),\n+        new CLOptionDescriptor(\"password\",\n+                CLOptionDescriptor.ARGUMENT_REQUIRED,\n+                PASSWORD_OPT,\n+                JavaUtils.getMessage(\"optionPassword\"))\n     };\n \n     /**\n@@ -409,6 +425,22 @@ public long getTimeout() {\n     public void setTimeout(long timeout) {\n         this.timeoutms = timeout;\n     }\n+\n+    public String getUsername() {\n+        return username;\n+    }\n+\n+    public void setUsername(String username) {\n+        this.username = username;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    public void setPassword(String password) {\n+        this.password = password;\n+    }\n     //\n     // Command line switches\n     //\n@@ -456,7 +488,7 @@ public List getGeneratedFileNames() {\n     public void emit(String wsdlURL)\n             throws Exception {\n \n-        Authenticator.setDefault(new DefaultAuthenticator());\n+        Authenticator.setDefault(new DefaultAuthenticator(this));\n \n         // We run the actual Emitter in a thread that we can kill\n         WSDLRunnable runnable = new WSDLRunnable(emitter, wsdlURL);\n@@ -632,6 +664,15 @@ else if (\"Session\".equals(scope)) {\n                             timeout = timeout * 1000;\n                         wsdl2java.setTimeout(timeout);\n                         break;\n+                        \n+                    case USERNAME_OPT:\n+                        wsdl2java.setUsername(option.getArgument());\n+                        break;\n+\n+                    case PASSWORD_OPT:\n+                        wsdl2java.setPassword(option.getArgument());\n+                        break;\n+                        \n                 }\n             }\n \n@@ -652,6 +693,9 @@ else if (\"Session\".equals(scope)) {\n             if (!namespaceMap.isEmpty()) {\n                 wsdl2java.setNamespaceMap(namespaceMap);\n             }\n+            \n+            // Set username and password if provided in URL\n+            wsdl2java.checkForAuthInfo(wsdlURI);\n \n             wsdl2java.setTypeMappingVersion(typeMappingVersion);\n             wsdl2java.emit(wsdlURI);\n@@ -747,12 +791,40 @@ private static void printUsage() {\n         System.exit(1);\n     }\n \n+    private void checkForAuthInfo(String uri) throws MalformedURLException {\n+        URL url = new URL(uri);\n+        String userInfo = url.getUserInfo();\n+        if (userInfo != null) {\n+            int i = userInfo.indexOf(':');\n+            if (i >= 0) {\n+                this.username = userInfo.substring(0,i);\n+                this.password = userInfo.substring(i+1);\n+            } else {\n+                this.username = userInfo;\n+            }\n+        } \n+    }\n+\n     private class DefaultAuthenticator extends Authenticator {\n+        private WSDL2Java wsdl2java;\n+        \n+        DefaultAuthenticator(WSDL2Java wsdl2java) {\n+            this.wsdl2java = wsdl2java;\n+        }\n         protected PasswordAuthentication getPasswordAuthentication() {\n-            String proxyUser = System.getProperty(\"http.proxyUser\",\"\");\n-            String proxyPassword = System.getProperty(\"http.proxyPassword\",\"\");\n-            System.out.println(\"Authenticator:\" + getRequestingPrompt() + \"[\" + proxyUser + \":\" + proxyPassword + \"]\");\n-            return new PasswordAuthentication (proxyUser, proxyPassword.toCharArray());\n+            // First check command line options\n+            String user = wsdl2java.getUsername();\n+            String password = wsdl2java.getPassword();\n+            \n+            // if we didn't get them, check the system properties\n+            if (user == null) {\n+                user = System.getProperty(\"http.proxyUser\",\"\");\n+            }\n+            if (password == null) {\n+                password = System.getProperty(\"http.proxyPassword\",\"\");\n+            }\n+            \n+            return new PasswordAuthentication (user, password.toCharArray());\n         }\n     }\n }"
            },
            {
                "sha": "e7fd6ec5a5db6b8f5849e707b6b7fa7ec27121fc",
                "filename": "src/org/apache/axis/wsdl/toJava/Emitter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/92d879fa0a377c940425b077446b5b62d8f89818/src/org/apache/axis/wsdl/toJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/92d879fa0a377c940425b077446b5b62d8f89818/src/org/apache/axis/wsdl/toJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/Emitter.java?ref=92d879fa0a377c940425b077446b5b62d8f89818",
                "patch": "@@ -160,7 +160,11 @@ public void emit(String uri) throws IOException, WSDLException {\n         if (bVerbose)\n             System.out.println(JavaUtils.getMessage(\"parsing00\", uri));\n \n-        emit(uri, XMLUtils.newDocument(uri));\n+        Document doc = XMLUtils.newDocument(uri);\n+        if (doc == null) {\n+            throw new IOException(JavaUtils.getMessage(\"cantGetDoc00\", uri));\n+        }\n+        emit(uri, doc);\n     } // emit\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/936381a39c155681dbd8f7e3aea8885abe2298d1",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/5014e61b5c01028dfc90735d3dcd657b2825a5fe",
        "message": "Username and password on WSDL URL did not work.\n - Add the -U/--user and -P/-password options to WSDL2Java command line\n - Parse the URL and extract the userInfo to get username/password\n - Register a default Authenticator to use when the URL is resolved,\n   to provide login info.  This will fall back to http.ProxyUser and\n   http.proxyPassword properties if user or password is not found via switch or\n   the URI.\n - Check for a null document and print a error instead of NPE when we\n   fail to get the WSDL\n - Update the use-guide with new -U/-P switch info.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246895 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_181",
        "file": [
            {
                "sha": "147234024adf078ebe03ebc6ef38b462a9d663b6",
                "filename": "docs/user-guide.html",
                "status": "modified",
                "additions": 16,
                "deletions": 1,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/936381a39c155681dbd8f7e3aea8885abe2298d1/docs/user-guide.html",
                "raw_url": "https://github.com/apache/axis1-java/raw/936381a39c155681dbd8f7e3aea8885abe2298d1/docs/user-guide.html",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/docs/user-guide.html?ref=936381a39c155681dbd8f7e3aea8885abe2298d1",
                "patch": "@@ -982,7 +982,12 @@ <h4>\n <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -O, --timeout &lt;argument>\n <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n timeout in seconds (default is 45, specify -1 to disable)\n-<br>&nbsp;\n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -U, --user &lt;argument>\n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n+username to access the WSDL-URI \n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -P, --password &lt;argument>\n+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n+password to access the WSDL-URI <br>&nbsp;\n <h4>\n -h, --help</h4>\n Print the usage statement and exit\n@@ -1111,6 +1116,16 @@ <h4>\n <h4>\n -T, --typeMappingVersion &lt;argument></h4>\n Indicate 1.1 or 1.2.&nbsp; The default is 1.2 (SOAP 1.2 JAX-RPC compliant).\n+<h4> -U, --user &lt;argument&gt;</h4>\n+This username is used in resolving the WSDL-URI provided as the input to \n+WSDL2Java. &nbsp;If the URI contains a username, this will override the command\n+line switch. &nbsp;An example of a URL with a username and password is: \n+<code>http://user:password@hostname:port/path/to/service?WSDL</code><br>\n+<h4> -P, --password &lt;argument&gt;</h4>\n+ This password is used in resolving the WSDL-URI provided as the input to WSDL2Java.\n+ &nbsp;If the URI contains a password, this will override the command\n+line switch.<br>\n+\n <br>&nbsp;\n <h3>\n <a NAME=\"Java2WSDL: Building WSDL from Java\"></a>Java2WSDL: Building WSDL"
            },
            {
                "sha": "5d2d2db9190d9e54adff6a4c2cdeb4f90d3bab85",
                "filename": "src/org/apache/axis/utils/resources.properties",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/936381a39c155681dbd8f7e3aea8885abe2298d1/src/org/apache/axis/utils/resources.properties",
                "raw_url": "https://github.com/apache/axis1-java/raw/936381a39c155681dbd8f7e3aea8885abe2298d1/src/org/apache/axis/utils/resources.properties",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/resources.properties?ref=936381a39c155681dbd8f7e3aea8885abe2298d1",
                "patch": "@@ -798,3 +798,8 @@ badParameterMode=Invalid parameter mode byte ({0}) passed to getModeAsString().\n \n attach.bounday.mns=Marking streams not supported.\n noSuchOperation=No such operation ''{0}''\n+\n+optionUsername=username to access the WSDL-URI \n+optionPassword=password to access the WSDL-URI\n+cantGetDoc00=Unable to retrieve WSDL document: {0}\n+"
            },
            {
                "sha": "0254cd0d751dd3e27dab338c1219f24819e00013",
                "filename": "src/org/apache/axis/wsdl/WSDL2Java.java",
                "status": "modified",
                "additions": 78,
                "deletions": 6,
                "changes": 84,
                "blob_url": "https://github.com/apache/axis1-java/blob/936381a39c155681dbd8f7e3aea8885abe2298d1/src/org/apache/axis/wsdl/WSDL2Java.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/936381a39c155681dbd8f7e3aea8885abe2298d1/src/org/apache/axis/wsdl/WSDL2Java.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/WSDL2Java.java?ref=936381a39c155681dbd8f7e3aea8885abe2298d1",
                "patch": "@@ -75,6 +75,8 @@\n import java.io.IOException;\n import java.net.Authenticator;\n import java.net.PasswordAuthentication;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n import java.util.HashMap;\n import java.util.List;\n \n@@ -102,6 +104,8 @@\n     protected static final int NETWORK_TIMEOUT_OPT = 'O';\n     protected static final int FACTORY_CLASS_OPT = 'F';\n     protected static final int HELPER_CLASS_OPT = 'H';\n+    protected static final int USERNAME_OPT = 'U';\n+    protected static final int PASSWORD_OPT = 'P';\n \n \n     // Scope constants\n@@ -110,6 +114,10 @@\n     public static final byte REQUEST_SCOPE     = 0x10;\n     public static final byte SESSION_SCOPE     = 0x11;\n \n+    // Username and password for Authentication\n+    protected String username = null;\n+    protected String password = null;\n+    \n     // The emitter framework Emitter class.\n     protected Emitter emitter;\n     // Timeout, in milliseconds, to let the Emitter do its work\n@@ -194,7 +202,15 @@\n         new CLOptionDescriptor(\"timeout\",\n                 CLOptionDescriptor.ARGUMENT_REQUIRED,\n                 NETWORK_TIMEOUT_OPT,\n-                JavaUtils.getMessage(\"optionTimeout00\"))\n+                JavaUtils.getMessage(\"optionTimeout00\")),\n+        new CLOptionDescriptor(\"user\",\n+                CLOptionDescriptor.ARGUMENT_REQUIRED,\n+                USERNAME_OPT,\n+                JavaUtils.getMessage(\"optionUsername\")),\n+        new CLOptionDescriptor(\"password\",\n+                CLOptionDescriptor.ARGUMENT_REQUIRED,\n+                PASSWORD_OPT,\n+                JavaUtils.getMessage(\"optionPassword\"))\n     };\n \n     /**\n@@ -409,6 +425,22 @@ public long getTimeout() {\n     public void setTimeout(long timeout) {\n         this.timeoutms = timeout;\n     }\n+\n+    public String getUsername() {\n+        return username;\n+    }\n+\n+    public void setUsername(String username) {\n+        this.username = username;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    public void setPassword(String password) {\n+        this.password = password;\n+    }\n     //\n     // Command line switches\n     //\n@@ -456,7 +488,7 @@ public List getGeneratedFileNames() {\n     public void emit(String wsdlURL)\n             throws Exception {\n \n-        Authenticator.setDefault(new DefaultAuthenticator());\n+        Authenticator.setDefault(new DefaultAuthenticator(this));\n \n         // We run the actual Emitter in a thread that we can kill\n         WSDLRunnable runnable = new WSDLRunnable(emitter, wsdlURL);\n@@ -632,6 +664,15 @@ else if (\"Session\".equals(scope)) {\n                             timeout = timeout * 1000;\n                         wsdl2java.setTimeout(timeout);\n                         break;\n+                        \n+                    case USERNAME_OPT:\n+                        wsdl2java.setUsername(option.getArgument());\n+                        break;\n+\n+                    case PASSWORD_OPT:\n+                        wsdl2java.setPassword(option.getArgument());\n+                        break;\n+                        \n                 }\n             }\n \n@@ -652,6 +693,9 @@ else if (\"Session\".equals(scope)) {\n             if (!namespaceMap.isEmpty()) {\n                 wsdl2java.setNamespaceMap(namespaceMap);\n             }\n+            \n+            // Set username and password if provided in URL\n+            wsdl2java.checkForAuthInfo(wsdlURI);\n \n             wsdl2java.setTypeMappingVersion(typeMappingVersion);\n             wsdl2java.emit(wsdlURI);\n@@ -747,12 +791,40 @@ private static void printUsage() {\n         System.exit(1);\n     }\n \n+    private void checkForAuthInfo(String uri) throws MalformedURLException {\n+        URL url = new URL(uri);\n+        String userInfo = url.getUserInfo();\n+        if (userInfo != null) {\n+            int i = userInfo.indexOf(':');\n+            if (i >= 0) {\n+                this.username = userInfo.substring(0,i);\n+                this.password = userInfo.substring(i+1);\n+            } else {\n+                this.username = userInfo;\n+            }\n+        } \n+    }\n+\n     private class DefaultAuthenticator extends Authenticator {\n+        private WSDL2Java wsdl2java;\n+        \n+        DefaultAuthenticator(WSDL2Java wsdl2java) {\n+            this.wsdl2java = wsdl2java;\n+        }\n         protected PasswordAuthentication getPasswordAuthentication() {\n-            String proxyUser = System.getProperty(\"http.proxyUser\",\"\");\n-            String proxyPassword = System.getProperty(\"http.proxyPassword\",\"\");\n-            System.out.println(\"Authenticator:\" + getRequestingPrompt() + \"[\" + proxyUser + \":\" + proxyPassword + \"]\");\n-            return new PasswordAuthentication (proxyUser, proxyPassword.toCharArray());\n+            // First check command line options\n+            String user = wsdl2java.getUsername();\n+            String password = wsdl2java.getPassword();\n+            \n+            // if we didn't get them, check the system properties\n+            if (user == null) {\n+                user = System.getProperty(\"http.proxyUser\",\"\");\n+            }\n+            if (password == null) {\n+                password = System.getProperty(\"http.proxyPassword\",\"\");\n+            }\n+            \n+            return new PasswordAuthentication (user, password.toCharArray());\n         }\n     }\n }"
            },
            {
                "sha": "e7fd6ec5a5db6b8f5849e707b6b7fa7ec27121fc",
                "filename": "src/org/apache/axis/wsdl/toJava/Emitter.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/936381a39c155681dbd8f7e3aea8885abe2298d1/src/org/apache/axis/wsdl/toJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/936381a39c155681dbd8f7e3aea8885abe2298d1/src/org/apache/axis/wsdl/toJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/Emitter.java?ref=936381a39c155681dbd8f7e3aea8885abe2298d1",
                "patch": "@@ -160,7 +160,11 @@ public void emit(String uri) throws IOException, WSDLException {\n         if (bVerbose)\n             System.out.println(JavaUtils.getMessage(\"parsing00\", uri));\n \n-        emit(uri, XMLUtils.newDocument(uri));\n+        Document doc = XMLUtils.newDocument(uri);\n+        if (doc == null) {\n+            throw new IOException(JavaUtils.getMessage(\"cantGetDoc00\", uri));\n+        }\n+        emit(uri, doc);\n     } // emit\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/70bbea364ef8b7675759f7ab51dd80fefb12249b",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/d1c7b53b6d71b5f3422b9926cabb49b54a73ca19",
        "message": "Various changes to get the new transport architecture working.\n\n* use MessageContext.transportName everywhere, remove TRANS_REQUEST/\n  TRANS_RESPONSE properties.\n\n* deploy tranports to/from their own registry file.  Persistence and\n  deployment of Handlers/TypeMappings/Transports/Services needs to be\n  given some more thought in terms of cleanliness, J2EE integration,\n  and component packaging...\n\n* fix various places which might generate NPEs\n\n* clean up Admin.list() to be able to use any registry.\n\n* deploy two default http transports, a secure one (with HTTPAuth)\n  for the servlet and a non-secure one for SimpleAxisServer.\n\n* ServiceClient now has a static \"defaultTransport\" member which,\n  if set, overrides the lookup-by-URL.  This enables the TCP\n  AdminClient to work again, but should be more cleanly architected\n  (how do we expect to convey which transport to use?)\n\n* fix a couple of bugs in TargetedChainSupplier\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252076 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_182",
        "file": [
            {
                "sha": "ff6d2ff36e56c18ddb058fe861a16bf16315202e",
                "filename": "samples/transport/FileTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/FileTest.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/FileTest.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/FileTest.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -43,7 +43,7 @@ public static void main(String args[]) throws Exception {\n   \n     call.set(Transport.USER, opts.getUser() );\n     call.set(Transport.PASSWORD, opts.getPassword() );\n-    call.setTransportRequest( \"FileSender\" );\n+    call.setTransport( new FileTransport() );\n   \n     Float res = new Float(0.0F);\n     res = (Float) call.invoke( \"urn:xmltoday-delayed-quotes\","
            },
            {
                "sha": "660df98fee8e58de0fcfe06285fb96a14fcf93e5",
                "filename": "samples/transport/client_deploy.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/client_deploy.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/client_deploy.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/client_deploy.xml?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -6,4 +6,5 @@\n \n <deploy>\n   <handler name=\"FileSender\" class=\"samples.transport.FileSender\" />\n+  <transport name=\"FileTransport\" pivot=\"FileSender\"/>\n </deploy>"
            },
            {
                "sha": "9fc9ba832f2ae6634e513f7d3ba6f783882b4210",
                "filename": "samples/transport/tcp/AdminClient.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/AdminClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/AdminClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/AdminClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -61,15 +61,21 @@\n import java.net.URL;\n \n /**\n- * An admin client object, specific to HTTP.\n+ * An admin client object, specific to TCP in that it sets\n+ * the TCP transport up.\n  *\n  * @author Rob Jellinghaus (robj@unrealities.com)\n  * @author Doug Davis (dug@us.ibm.com)\n+ * @author Glen Daniels (gdaniels@macromedia.com)\n  */\n \n public class AdminClient extends org.apache.axis.client.AdminClient {\n \n     public static void main(String args[]) {\n+        /** !!! This shouldn't be hardcoded....\n+         */\n+        ServiceClient.setDefaultTransport(new TCPTransport(\"localhost\", \"8080\"));\n+        \n         try {\n             org.apache.axis.client.AdminClient.main(args);\n         }"
            },
            {
                "sha": "da7b5dffb28f90943cccc260c71aede4d4f811c6",
                "filename": "samples/transport/tcp/TCPListener.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPListener.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPListener.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPListener.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -75,8 +75,7 @@\n  */\n public class TCPListener implements Runnable {\n     // These have default values.\n-    private String transportReqName = \"TCP.request\";\n-    private String transportRespName = \"TCP.response\";\n+    private String transportName = \"TCPTransport\";\n     \n     private static final String AXIS_ENGINE = \"AxisEngine\" ;\n     \n@@ -151,10 +150,12 @@ public void run () {\n                 HandlerRegistry hr = engine.getHandlerRegistry();\n                 HandlerRegistry sr = engine.getServiceRegistry();\n                 // add the TCPSender\n-                hr.add(\"TCPSender\", new TCPSender());\n+                //hr.add(\"TCPSender\", new TCPSender());\n                 \n-                SimpleChain c = new SimpleChain();\n-                hr.add( transportReqName, c );\n+                SimpleTargetedChain c = new SimpleTargetedChain();\n+                c.setPivotHandler(new TCPSender());\n+                \n+                engine.deployTransport(transportName, c);\n             }\n             \n             /* Place the Request message in the MessagContext object - notice */\n@@ -233,8 +234,7 @@ public void run () {\n             \n             /* Set the Transport Specific Request/Response chains IDs */\n             /******************************************************/\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 /* Invoke the Axis engine... */"
            },
            {
                "sha": "6c86fc3de6e9addb308de5f7d3581148ecbc6edc",
                "filename": "samples/transport/tcp/TCPTransport.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPTransport.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPTransport.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPTransport.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -106,6 +106,7 @@ public void setupMessageContext (MessageContext mc, ServiceClient serv, AxisEngi\n         if (port != null) serv.set(PORT, port);\n         String url = \"http://\"+serv.get(HOST)+\":\"+serv.get(PORT);\n         \n+        Debug.Print(4, \"TCPTransport set URL to '\" + url + \"'\");\n         mc.setProperty(MessageContext.TRANS_URL, url);\n     }\n }"
            },
            {
                "sha": "f232c6d23038a93a37352a8f4033b860f7163317",
                "filename": "samples/transport/tcp/client_deploy.xml",
                "status": "added",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/client_deploy.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/client_deploy.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/client_deploy.xml?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -0,0 +1,7 @@\n+<m:deploy xmlns:m=\"AdminService\">\n+ <handler name=\"TCPSender\" class=\"samples.transport.tcp.TCPSender\"/>\n+ <handler name=\"LogIt\" class=\"org.apache.axis.handlers.LogMessage\">\n+  <option name=\"message\" value=\"Hey, I'm here!\"/>\n+ </handler>\n+ <transport name=\"tcp\" pivot=\"TCPSender\" request=\"LogIt\"/>\n+</m:deploy>"
            },
            {
                "sha": "80b3f3d9b44e902b8208b37ccb0c6f5afe9a1687",
                "filename": "src/org/apache/axis/AxisEngine.java",
                "status": "modified",
                "additions": 63,
                "deletions": 3,
                "changes": 66,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/AxisEngine.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/AxisEngine.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -87,6 +87,8 @@\n     protected HandlerRegistry _serviceRegistry;\n     protected String _serviceRegFilename;\n     \n+    protected String _transportRegFilename;\n+    \n     private boolean readRegistryFiles = true;\n     private boolean dontSaveYet = false;\n     \n@@ -155,14 +157,17 @@ public AxisEngine(HandlerRegistry handlers, HandlerRegistry services)\n      * @param handlerRegFilename the name of the Handler registry file.\n      * @param serviceRegFilename the name of the Service registry file.\n      */\n-    public AxisEngine(String handlerRegFilename, String serviceRegFilename)\n+    public AxisEngine(String handlerRegFilename,\n+                      String serviceRegFilename,\n+                      String transportRegFilename)\n     {\n         this();\n         setHandlerRegistry(new SupplierRegistry());\n         setServiceRegistry(new SupplierRegistry());\n         \n         _handlerRegFilename = handlerRegFilename;\n         _serviceRegFilename = serviceRegFilename;\n+        _transportRegFilename = transportRegFilename;\n         \n         init();\n     }\n@@ -302,6 +307,37 @@ private void initializeServices()\n     \n     public void initializeTransports()\n     {\n+      if (!readRegistryFiles)\n+        return;\n+      \n+      dontSaveYet = true;\n+      try {\n+        FileInputStream    fis = new FileInputStream(_transportRegFilename);\n+        \n+        Document doc = XMLUtils.newDocument(fis);\n+        \n+        Element root = doc.getDocumentElement();\n+        \n+        NodeList list = root.getChildNodes();\n+        for (int i = 0; i < list.getLength(); i++) {\n+          if (!(list.item(i) instanceof Element))\n+            continue;\n+          Element elem = (Element)list.item(i);\n+          Admin.registerTransport(elem, this);\n+        }\n+        \n+        fis.close();\n+        return;\n+      }\n+      catch( Exception e ) {\n+        if ( !(e instanceof FileNotFoundException) ) {\n+          e.printStackTrace( System.err );\n+        }\n+      } finally {\n+        dontSaveYet = false;\n+      }\n+\n+      Debug.Print(2, \"Deploying default transports...\");\n       deployDefaultTransports();\n     }\n \n@@ -348,7 +384,8 @@ public void saveHandlerRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_handlerRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, false);\n+        Element el = doc.createElement(\"handlers\");\n+        Admin.list(el, getHandlerRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -365,7 +402,26 @@ public void saveServiceRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_serviceRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, true);\n+        Element el = doc.createElement(\"services\");\n+        Admin.list(el, getServiceRegistry());\n+        doc.appendChild(el);\n+        XMLUtils.DocumentToStream(doc, fos);\n+        fos.close();\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    }\n+    \n+    public void saveTransportRegistry()\n+    {\n+      if (dontSaveYet || (_transportRegFilename == null))\n+        return;\n+      \n+      try {\n+        FileOutputStream fos = new FileOutputStream(_transportRegFilename);\n+        Document doc = XMLUtils.newDocument();\n+        Element el = doc.createElement(\"transports\"); \n+        Admin.list(el, getTransportRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -451,7 +507,9 @@ public void undeployService(String key)\n      */\n     public void deployTransport(String key, Handler transport)\n     {\n+        transport.setName(key);\n         transportRegistry.add(key, transport);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -460,6 +518,7 @@ public void deployTransport(String key, Handler transport)\n     public void deployTransport(String key, Supplier supplier)\n     {\n         transportRegistry.add(key, supplier);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -468,6 +527,7 @@ public void deployTransport(String key, Supplier supplier)\n     public void undeployTransport(String key)\n     {\n         transportRegistry.remove(key);\n+        saveTransportRegistry();\n     }\n \n     /**"
            },
            {
                "sha": "bf7d671fa37ce0ed9ebfa7ced48a00ae47a7991b",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -148,4 +148,6 @@\n   public static String SERVER_HANDLER_REGISTRY = \"handler-server.reg\" ;\n   public static String CLIENT_SERVICE_REGISTRY = \"service-client.reg\" ;\n   public static String SERVER_SERVICE_REGISTRY = \"service-server.reg\" ;\n+  public static String CLIENT_TRANSPORT_REGISTRY = \"transport-client.reg\" ;\n+  public static String SERVER_TRANSPORT_REGISTRY = \"transport-server.reg\" ;\n }"
            },
            {
                "sha": "bfdc09f89f33b838fe63bda1f31b2e0e12fd91d3",
                "filename": "src/org/apache/axis/MessageContext.java",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/MessageContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/MessageContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -333,10 +333,6 @@ public void setServiceHandler(Handler sh)\n      */\n     public static String TRANS_URL           = \"transport.url\";\n \n-    /** The transport specific request/response chains  */\n-    public static String TRANS_REQUEST         = \"transport.request\";\n-    public static String TRANS_RESPONSE        = \"transport.response\";\n-\n     /** Has a quit been requested? Hackish... but useful... -- RobJ */\n     public static String QUIT_REQUESTED = \"quit.requested\";\n   "
            },
            {
                "sha": "fe349e964a9e00fd1c5ecedac170f484124d3f33",
                "filename": "src/org/apache/axis/SimpleChain.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/SimpleChain.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/SimpleChain.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SimpleChain.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -141,6 +141,9 @@ public boolean contains(Handler handler) {\n   }\n \n   public Handler[] getHandlers() {\n+    if (handlers == null)\n+      return null;\n+    \n     Handler [] ret = new Handler[handlers.size()];\n     return( (Handler[]) handlers.toArray(ret) );\n   }"
            },
            {
                "sha": "d5e76ec1e116056c43ecb9d0b7fbc783bb455041",
                "filename": "src/org/apache/axis/client/AdminClient.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AdminClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AdminClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AdminClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -84,7 +84,9 @@ public static void main (String[] args)\n       try {\n         Options opts = new Options( args );\n         \n-        Debug.setDebugLevel( opts.isFlagSet('d') );\n+        if (opts.isFlagSet('d') > 0) {\n+          Debug.setDebugLevel( opts.isFlagSet('d') );\n+        }\n         \n         args = opts.getRemainingArgs();\n         "
            },
            {
                "sha": "ad16729cd1b4c2f7b01f74e017e736c117b136f1",
                "filename": "src/org/apache/axis/client/AxisClient.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AxisClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AxisClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -77,7 +77,8 @@\n     public AxisClient()\n     {\n         super(Constants.CLIENT_HANDLER_REGISTRY,\n-              Constants.CLIENT_SERVICE_REGISTRY);\n+              Constants.CLIENT_SERVICE_REGISTRY,\n+              Constants.CLIENT_TRANSPORT_REGISTRY);\n     }\n \n     /**"
            },
            {
                "sha": "06f93598d505db7a119aeb1b5c0847c99ed7a8f7",
                "filename": "src/org/apache/axis/client/ServiceClient.java",
                "status": "modified",
                "additions": 12,
                "deletions": 8,
                "changes": 20,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/ServiceClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/ServiceClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/ServiceClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -91,6 +91,9 @@\n // Only supports String\n \n public class ServiceClient {\n+    // Client transports\n+    private static Transport defaultTransport = null;\n+                                                        \n     // keep prop hashtable small\n     private Hashtable properties = new Hashtable(10);\n     protected String encodingStyleURI = null ;\n@@ -150,10 +153,19 @@ public ServiceClient (Transport transport) {\n     \n     public void setTransport(Transport transport) {\n         this.transport = transport;\n+        Debug.Print(1, \"Transport is \" + transport);\n+    }\n+    \n+    public static void setDefaultTransport(Transport transport)\n+    {\n+        defaultTransport = transport;\n     }\n     \n     public Transport getTransportForProtocol(String protocol)\n     {\n+      if (defaultTransport != null)\n+        return defaultTransport;\n+      \n       if (protocol.equals(\"http\"))\n         return new HTTPTransport();\n       \n@@ -188,14 +200,6 @@ public String getEncodingStyleURI() {\n         return( encodingStyleURI );\n     }\n     \n-    public void setTransportRequest(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_REQUEST, handlerName );\n-    }\n-  \n-    public void setTransportResponse(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_RESPONSE, handlerName );\n-    }\n-    \n     public void setRequestMessage(Message msg) {\n         msgContext.setRequestMessage(msg);\n     }"
            },
            {
                "sha": "c3f2a70c0daa3b1a5da2f95e6684fc760bf238d8",
                "filename": "src/org/apache/axis/registries/SupplierRegistry.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/registries/SupplierRegistry.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/registries/SupplierRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/registries/SupplierRegistry.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -118,6 +118,10 @@ public Handler remove(String key) {\n      */\n     public Handler find(String key) {\n         Debug.Print( 4, \"Enter: SupplierRegistry::find(\", key, \")\" );\n+        if (key == null) {\n+          Debug.Print( 4, \"Exit: SupplierRegistry::find - key is null\" );\n+          return( null );\n+        }\n         if ( suppliers == null ) {\n           Debug.Print( 4, \"Exit: SupplierRegistry::find - suppliers is null\" );\n           return( null );"
            },
            {
                "sha": "d7257b5dc26088b1d4ea6e270efa2e42905b43ec",
                "filename": "src/org/apache/axis/server/AxisServer.java",
                "status": "modified",
                "additions": 17,
                "deletions": 10,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/server/AxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/server/AxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/server/AxisServer.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -113,7 +113,8 @@ public void stop()\n      */\n     public AxisServer() {\n       super(Constants.SERVER_HANDLER_REGISTRY,\n-            Constants.SERVER_SERVICE_REGISTRY);\n+            Constants.SERVER_SERVICE_REGISTRY,\n+            Constants.SERVER_TRANSPORT_REGISTRY);\n     }\n \n     /**\n@@ -149,14 +150,6 @@ protected void deployDefaultHandlers()\n       c.addHandler( _handlerRegistry.find( \"debug\" ) );\n       deployHandler( \"global.request\", c );\n       \n-      c = new SimpleChain();\n-      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n-      c.addHandler( _handlerRegistry.find( \"HTTPAction\" ) );\n-      // deployHandler( \"HTTP.request\", c );\n-      \n-      SimpleTargetedChain transport = new SimpleTargetedChain();\n-      transport.setRequestHandler(c);\n-      deployTransport(\"HTTP.request\", transport);\n     }\n \n     protected void deployDefaultServices()\n@@ -179,7 +172,20 @@ protected void deployDefaultServices()\n \n     protected void deployDefaultTransports()\n     {\n-      // Do nothing.\n+      Chain c = new SimpleChain();\n+      Handler actionHandler = _handlerRegistry.find( \"HTTPAction\" );\n+      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n+      c.addHandler( actionHandler );\n+      \n+      // HTTP transport w/authorization\n+      SimpleTargetedChain transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(c);\n+      deployTransport(\"http\", transport);\n+      \n+      // HTTP transport (for SimpleAxisServer) without auth.\n+      transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(actionHandler);\n+      deployTransport(\"SimpleHTTP\", transport);\n     }\n     \n     /**\n@@ -266,6 +272,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n               HandlerRegistry tr = getTransportRegistry();\n               SimpleTargetedChain transportChain = null;\n               \n+              Debug.Print(3, \"AxisServer.invoke: Transport = '\" + hName +\"'\");\n               if ( hName != null && (h = tr.find( hName )) != null ) {\n                 if (h instanceof SimpleTargetedChain) {\n                   transportChain = (SimpleTargetedChain)h;"
            },
            {
                "sha": "be1bef15b77b6dec3636321cb0cb1a9372f35e0f",
                "filename": "src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "status": "modified",
                "additions": 21,
                "deletions": 14,
                "changes": 35,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/suppliers/TargetedChainSupplier.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -95,6 +95,9 @@ public TargetedChainSupplier(String myName,\n     \n     private void addHandlersToChain(Vector names, Chain chain)\n     {\n+      if (names == null)\n+        return;\n+      \n       Enumeration e = names.elements();\n       while (e.hasMoreElements()) {\n         String hName = (String)e.nextElement();\n@@ -114,25 +117,29 @@ public Handler getHandler()\n         c.setOptions(_options);\n         c.setName(_myName);\n         \n-        if (_requestNames.size() == 1) {\n-          h = _registry.find((String)_requestNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_requestNames, chain);\n+        if (!_requestNames.isEmpty()) {\n+          if (_requestNames.size() == 1) {\n+            h = _registry.find((String)_requestNames.elementAt(0));\n+            c.setRequestHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_requestNames, chain);\n+            c.setRequestHandler(chain);\n+          }\n         }\n         \n         h = _registry.find(_pivotName);\n-        if (h == null)\n-          return null;  // Should maybe throw an exception here?\n         c.setPivotHandler(h);\n \n-        if (_responseNames.size() == 1) {\n-          h = _registry.find((String)_responseNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_responseNames, chain);\n+        if (!_responseNames.isEmpty()) {\n+          if (_responseNames.size() == 1) {\n+            h = _registry.find((String)_responseNames.elementAt(0));\n+            c.setResponseHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_responseNames, chain);\n+            c.setResponseHandler(chain);\n+          }\n         }\n         \n         _chain = c;"
            },
            {
                "sha": "948489ddb6f0cf672c0ec3c2ed75455789846925",
                "filename": "src/org/apache/axis/transport/http/AxisServlet.java",
                "status": "modified",
                "additions": 9,
                "deletions": 18,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/AxisServlet.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/AxisServlet.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/AxisServlet.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -68,32 +68,25 @@\n  */\n public class AxisServlet extends HttpServlet {\n   // These have default values.\n-  private String transportReqName = \"HTTP.request\";\n-  private String transportRespName = \"HTTP.response\";\n+  private String transportName = \"http\";\n \n   private static final String AXIS_ENGINE = \"AxisEngine\" ;\n \n   public void init() {\n-      String param = getInitParameter(\"transport.request\");\n+      String param = getInitParameter(\"transport.name\");\n       ServletContext context = getServletConfig().getServletContext();\n       \n       if (param == null)\n-          param = context.getInitParameter(\"transport.request\");\n+          param = context.getInitParameter(\"transport.name\");\n       if (param != null)\n-          transportReqName = param;\n-      \n-      param = getInitParameter(\"transport.response\");\n-      if (param == null)\n-          param = context.getInitParameter(\"transport.response\");\n-      if (param != null)\n-          transportRespName = param;\n+          transportName = param;      \n   }\n \n   public void doGet(HttpServletRequest req, HttpServletResponse res)\n                 throws ServletException, IOException {\n     res.setContentType(\"text/html\");\n-    res.getWriter().println( \"In doGet\" );\n-    res.getWriter().println(\" Request = \" + transportReqName);\n+    res.getWriter().println( \"In doGet<p>\" );\n+    res.getWriter().println(\" TransportName = \" + transportName);\n   }\n \n   public void doPost(HttpServletRequest req, HttpServletResponse res)\n@@ -118,11 +111,9 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     /**********************************************************/\n     msgContext.setRequestMessage( msg );\n \n-    /* Set the Transport Specific Request/Response chains IDs */\n-    /******************************************************/\n-    msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-    msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n-    msgContext.setTransportName(transportReqName);\n+    /* Set the Transport */\n+    /*********************/\n+    msgContext.setTransportName(transportName);\n \n     /* Save some HTTP specific info in the bag in case a handler needs it */\n     /**********************************************************************/"
            },
            {
                "sha": "70fba8275326c97c8822e1e7ebcf00964dd99727",
                "filename": "src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "status": "modified",
                "additions": 3,
                "deletions": 8,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/SimpleAxisServer.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -126,9 +126,7 @@ private static synchronized AxisServer getAxisServer() {\n     private static byte cannedResponse[] = \"<empty/>\".getBytes();\n \n     // Axis specific constants\n-    private static String transportReqName = \"HTTPAction\";\n-    private static String transportRespName = \"HTTP.response\";\n-    //private static final String AXIS_ENGINE = \"AxisEngine\" ;\n+    private static String transportName = \"SimpleHTTP\";\n     \n     // are we stopped?\n     // latch to true if stop() is called\n@@ -149,8 +147,6 @@ public void run() {\n         // create and initialize a message context\n         MessageContext msgContext = new MessageContext(engine);\n         Message        requestMsg;\n-        msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName);\n-        msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n \n         // Reusuable, buffered, content length controlled, InputStream\n         NonBlockingBufferedInputStream is =\n@@ -177,9 +173,8 @@ public void run() {\n             msgContext.setTargetService(null);\n             msgContext.setResponseMessage(null);\n             msgContext.clearProperties();\n-            msgContext.setProperty(\"transport\", \"HTTPTransport\");\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST, transportReqName);\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n+            //msgContext.setProperty(\"transport\", \"HTTPTransport\");\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 try {"
            },
            {
                "sha": "ddf3bd354a65ba42e176600a90d87e5a74c95d83",
                "filename": "src/org/apache/axis/transport/local/LocalSender.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/local/LocalSender.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/local/LocalSender.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/local/LocalSender.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -100,7 +100,7 @@ public void invoke(MessageContext clientContext) throws AxisFault {\n     String action = clientContext.getStrProp(HTTPConstants.MC_HTTP_SOAPACTION);\n     if (action != null) {\n        serverContext.setProperty(HTTPConstants.MC_HTTP_SOAPACTION, action);\n-       serverContext.setProperty(MessageContext.TRANS_REQUEST , \"HTTPAction\");\n+       serverContext.setTransportName(\"http\");\n     }\n \n     // set the realpath if possible"
            },
            {
                "sha": "38f34231a0bbb3235139b8f48c624058a72b4567",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 29,
                "deletions": 25,
                "changes": 54,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "patch": "@@ -119,7 +119,7 @@ private static void registerTypeMappings(Element root, SOAPService service)\n     throws Exception\n   {\n     NodeList list = root.getElementsByTagName(\"bean\");\n-    Debug.Print(1, \"Registering \" + list.getLength() + \" service-specific beans.\");\n+    Debug.Print(2, \"Registering \" + list.getLength() + \" service-specific beans.\");\n     for (int i = 0; list != null && i < list.getLength(); i++) {\n       Element el = (Element)list.item(i);\n       registerBeanMapping(el, service.getTypeMappingRegistry());\n@@ -187,12 +187,18 @@ public Document process(MessageContext msgContext, Element root) throws AxisFaul\n         Element tmpEl = doc.createElement(\"engineConfig\");\n         doc.appendChild(tmpEl);\n         \n-        Element el = list(doc, engine, false);\n+        Element el = doc.createElement(\"handlers\");\n+        list(el, engine.getHandlerRegistry());\n         tmpEl.appendChild(el);\n         \n-        el = list(doc, engine, true);\n+        el = doc.createElement(\"services\");\n+        list(el, engine.getServiceRegistry());\n         tmpEl.appendChild(el);\n         \n+        el = doc.createElement(\"transports\");\n+        list(el, engine.getTransportRegistry());\n+        tmpEl.appendChild(el);\n+\n         return( doc );\n       }\n   \n@@ -269,25 +275,17 @@ else if ( type.equals( \"bean\" ) ) {\n    * @return Element our config element, suitable for pumping back through\n    *                 Admin processing later, to redeploy.\n    */\n-  public static Element list(Document doc, AxisEngine engine, boolean doServices)\n+  public static Element list(Element root, HandlerRegistry registry)\n     throws AxisFault\n   {\n-    String elementName = doServices ? \"services\" : \"handlers\";\n-    Element root = doc.createElement( elementName );\n+    Document doc = root.getOwnerDocument();\n \n     Element    elem = null ;\n     Hashtable  opts = null ;\n     String[]   names ;\n     Handler    h ;\n     int        i ;\n     \n-    HandlerRegistry registry;\n-    if (doServices) {\n-      registry = engine.getServiceRegistry();\n-    } else {\n-      registry = engine.getHandlerRegistry();\n-    }\n-\n     names = registry.list();\n \n     for( i = 0 ; names != null && i < names.length ; i++ ) {\n@@ -373,6 +371,8 @@ public static void registerChain(Element elem, AxisEngine engine)\n                                                              hr);\n       hr.add(name,supp);\n     }\n+    \n+    engine.saveHandlerRegistry();\n   }\n   \n   /**\n@@ -512,11 +512,9 @@ public static void registerHandler(Element elem, AxisEngine engine)\n   public static void registerTransport(Element elem, AxisEngine engine)\n     throws AxisFault\n   {\n-    SupplierRegistry tr = engine.getTransportRegistry();\n-    \n     String   name    = elem.getAttribute( \"name\" );\n     String   request   = elem.getAttribute( \"request\" );\n-    String   sender   = elem.getAttribute( \"sender\" );\n+    String   sender   = elem.getAttribute( \"pivot\" );\n     String   response  = elem.getAttribute( \"response\" );\n     Hashtable options = new Hashtable();\n \n@@ -530,24 +528,30 @@ public static void registerTransport(Element elem, AxisEngine engine)\n     Vector reqNames = new Vector();\n     Vector respNames = new Vector();\n \n-    st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      reqNames.addElement(st.nextToken());\n+    if (request != null) {\n+      st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        reqNames.addElement(st.nextToken());\n+      }\n+    }\n+\n+    if (response != null) {\n+      st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        respNames.addElement(st.nextToken());\n+      }\n     }\n     \n-    st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      respNames.addElement(st.nextToken());\n-    }\n     getOptions( elem, options );\n     \n+    HandlerRegistry hr = engine.getHandlerRegistry();\n     TargetedChainSupplier supp = new TargetedChainSupplier(name,\n                                                            reqNames,\n                                                            respNames,\n                                                            sender,\n                                                            options,\n-                                                           tr);\n-    tr.add(name,supp);\n+                                                           hr);\n+    engine.deployTransport(name, supp);\n   }\n \n   /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/a4808751d9943f6ca121900849e2fc13f4c546c2",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/a71e35faeaf76681b84b8acdea61f5daeae73869",
        "message": "Various changes to get the new transport architecture working.\n\n* use MessageContext.transportName everywhere, remove TRANS_REQUEST/\n  TRANS_RESPONSE properties.\n\n* deploy tranports to/from their own registry file.  Persistence and\n  deployment of Handlers/TypeMappings/Transports/Services needs to be\n  given some more thought in terms of cleanliness, J2EE integration,\n  and component packaging...\n\n* fix various places which might generate NPEs\n\n* clean up Admin.list() to be able to use any registry.\n\n* deploy two default http transports, a secure one (with HTTPAuth)\n  for the servlet and a non-secure one for SimpleAxisServer.\n\n* ServiceClient now has a static \"defaultTransport\" member which,\n  if set, overrides the lookup-by-URL.  This enables the TCP\n  AdminClient to work again, but should be more cleanly architected\n  (how do we expect to convey which transport to use?)\n\n* fix a couple of bugs in TargetedChainSupplier\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245004 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_183",
        "file": [
            {
                "sha": "ff6d2ff36e56c18ddb058fe861a16bf16315202e",
                "filename": "samples/transport/FileTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/FileTest.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/FileTest.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/FileTest.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -43,7 +43,7 @@ public static void main(String args[]) throws Exception {\n   \n     call.set(Transport.USER, opts.getUser() );\n     call.set(Transport.PASSWORD, opts.getPassword() );\n-    call.setTransportRequest( \"FileSender\" );\n+    call.setTransport( new FileTransport() );\n   \n     Float res = new Float(0.0F);\n     res = (Float) call.invoke( \"urn:xmltoday-delayed-quotes\","
            },
            {
                "sha": "660df98fee8e58de0fcfe06285fb96a14fcf93e5",
                "filename": "samples/transport/client_deploy.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/client_deploy.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/client_deploy.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/client_deploy.xml?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -6,4 +6,5 @@\n \n <deploy>\n   <handler name=\"FileSender\" class=\"samples.transport.FileSender\" />\n+  <transport name=\"FileTransport\" pivot=\"FileSender\"/>\n </deploy>"
            },
            {
                "sha": "9fc9ba832f2ae6634e513f7d3ba6f783882b4210",
                "filename": "samples/transport/tcp/AdminClient.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/AdminClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/AdminClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/AdminClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -61,15 +61,21 @@\n import java.net.URL;\n \n /**\n- * An admin client object, specific to HTTP.\n+ * An admin client object, specific to TCP in that it sets\n+ * the TCP transport up.\n  *\n  * @author Rob Jellinghaus (robj@unrealities.com)\n  * @author Doug Davis (dug@us.ibm.com)\n+ * @author Glen Daniels (gdaniels@macromedia.com)\n  */\n \n public class AdminClient extends org.apache.axis.client.AdminClient {\n \n     public static void main(String args[]) {\n+        /** !!! This shouldn't be hardcoded....\n+         */\n+        ServiceClient.setDefaultTransport(new TCPTransport(\"localhost\", \"8080\"));\n+        \n         try {\n             org.apache.axis.client.AdminClient.main(args);\n         }"
            },
            {
                "sha": "da7b5dffb28f90943cccc260c71aede4d4f811c6",
                "filename": "samples/transport/tcp/TCPListener.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPListener.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPListener.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPListener.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -75,8 +75,7 @@\n  */\n public class TCPListener implements Runnable {\n     // These have default values.\n-    private String transportReqName = \"TCP.request\";\n-    private String transportRespName = \"TCP.response\";\n+    private String transportName = \"TCPTransport\";\n     \n     private static final String AXIS_ENGINE = \"AxisEngine\" ;\n     \n@@ -151,10 +150,12 @@ public void run () {\n                 HandlerRegistry hr = engine.getHandlerRegistry();\n                 HandlerRegistry sr = engine.getServiceRegistry();\n                 // add the TCPSender\n-                hr.add(\"TCPSender\", new TCPSender());\n+                //hr.add(\"TCPSender\", new TCPSender());\n                 \n-                SimpleChain c = new SimpleChain();\n-                hr.add( transportReqName, c );\n+                SimpleTargetedChain c = new SimpleTargetedChain();\n+                c.setPivotHandler(new TCPSender());\n+                \n+                engine.deployTransport(transportName, c);\n             }\n             \n             /* Place the Request message in the MessagContext object - notice */\n@@ -233,8 +234,7 @@ public void run () {\n             \n             /* Set the Transport Specific Request/Response chains IDs */\n             /******************************************************/\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 /* Invoke the Axis engine... */"
            },
            {
                "sha": "6c86fc3de6e9addb308de5f7d3581148ecbc6edc",
                "filename": "samples/transport/tcp/TCPTransport.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPTransport.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPTransport.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPTransport.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -106,6 +106,7 @@ public void setupMessageContext (MessageContext mc, ServiceClient serv, AxisEngi\n         if (port != null) serv.set(PORT, port);\n         String url = \"http://\"+serv.get(HOST)+\":\"+serv.get(PORT);\n         \n+        Debug.Print(4, \"TCPTransport set URL to '\" + url + \"'\");\n         mc.setProperty(MessageContext.TRANS_URL, url);\n     }\n }"
            },
            {
                "sha": "f232c6d23038a93a37352a8f4033b860f7163317",
                "filename": "samples/transport/tcp/client_deploy.xml",
                "status": "added",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/client_deploy.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/client_deploy.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/client_deploy.xml?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -0,0 +1,7 @@\n+<m:deploy xmlns:m=\"AdminService\">\n+ <handler name=\"TCPSender\" class=\"samples.transport.tcp.TCPSender\"/>\n+ <handler name=\"LogIt\" class=\"org.apache.axis.handlers.LogMessage\">\n+  <option name=\"message\" value=\"Hey, I'm here!\"/>\n+ </handler>\n+ <transport name=\"tcp\" pivot=\"TCPSender\" request=\"LogIt\"/>\n+</m:deploy>"
            },
            {
                "sha": "80b3f3d9b44e902b8208b37ccb0c6f5afe9a1687",
                "filename": "src/org/apache/axis/AxisEngine.java",
                "status": "modified",
                "additions": 63,
                "deletions": 3,
                "changes": 66,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/AxisEngine.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/AxisEngine.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -87,6 +87,8 @@\n     protected HandlerRegistry _serviceRegistry;\n     protected String _serviceRegFilename;\n     \n+    protected String _transportRegFilename;\n+    \n     private boolean readRegistryFiles = true;\n     private boolean dontSaveYet = false;\n     \n@@ -155,14 +157,17 @@ public AxisEngine(HandlerRegistry handlers, HandlerRegistry services)\n      * @param handlerRegFilename the name of the Handler registry file.\n      * @param serviceRegFilename the name of the Service registry file.\n      */\n-    public AxisEngine(String handlerRegFilename, String serviceRegFilename)\n+    public AxisEngine(String handlerRegFilename,\n+                      String serviceRegFilename,\n+                      String transportRegFilename)\n     {\n         this();\n         setHandlerRegistry(new SupplierRegistry());\n         setServiceRegistry(new SupplierRegistry());\n         \n         _handlerRegFilename = handlerRegFilename;\n         _serviceRegFilename = serviceRegFilename;\n+        _transportRegFilename = transportRegFilename;\n         \n         init();\n     }\n@@ -302,6 +307,37 @@ private void initializeServices()\n     \n     public void initializeTransports()\n     {\n+      if (!readRegistryFiles)\n+        return;\n+      \n+      dontSaveYet = true;\n+      try {\n+        FileInputStream    fis = new FileInputStream(_transportRegFilename);\n+        \n+        Document doc = XMLUtils.newDocument(fis);\n+        \n+        Element root = doc.getDocumentElement();\n+        \n+        NodeList list = root.getChildNodes();\n+        for (int i = 0; i < list.getLength(); i++) {\n+          if (!(list.item(i) instanceof Element))\n+            continue;\n+          Element elem = (Element)list.item(i);\n+          Admin.registerTransport(elem, this);\n+        }\n+        \n+        fis.close();\n+        return;\n+      }\n+      catch( Exception e ) {\n+        if ( !(e instanceof FileNotFoundException) ) {\n+          e.printStackTrace( System.err );\n+        }\n+      } finally {\n+        dontSaveYet = false;\n+      }\n+\n+      Debug.Print(2, \"Deploying default transports...\");\n       deployDefaultTransports();\n     }\n \n@@ -348,7 +384,8 @@ public void saveHandlerRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_handlerRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, false);\n+        Element el = doc.createElement(\"handlers\");\n+        Admin.list(el, getHandlerRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -365,7 +402,26 @@ public void saveServiceRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_serviceRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, true);\n+        Element el = doc.createElement(\"services\");\n+        Admin.list(el, getServiceRegistry());\n+        doc.appendChild(el);\n+        XMLUtils.DocumentToStream(doc, fos);\n+        fos.close();\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    }\n+    \n+    public void saveTransportRegistry()\n+    {\n+      if (dontSaveYet || (_transportRegFilename == null))\n+        return;\n+      \n+      try {\n+        FileOutputStream fos = new FileOutputStream(_transportRegFilename);\n+        Document doc = XMLUtils.newDocument();\n+        Element el = doc.createElement(\"transports\"); \n+        Admin.list(el, getTransportRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -451,7 +507,9 @@ public void undeployService(String key)\n      */\n     public void deployTransport(String key, Handler transport)\n     {\n+        transport.setName(key);\n         transportRegistry.add(key, transport);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -460,6 +518,7 @@ public void deployTransport(String key, Handler transport)\n     public void deployTransport(String key, Supplier supplier)\n     {\n         transportRegistry.add(key, supplier);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -468,6 +527,7 @@ public void deployTransport(String key, Supplier supplier)\n     public void undeployTransport(String key)\n     {\n         transportRegistry.remove(key);\n+        saveTransportRegistry();\n     }\n \n     /**"
            },
            {
                "sha": "bf7d671fa37ce0ed9ebfa7ced48a00ae47a7991b",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -148,4 +148,6 @@\n   public static String SERVER_HANDLER_REGISTRY = \"handler-server.reg\" ;\n   public static String CLIENT_SERVICE_REGISTRY = \"service-client.reg\" ;\n   public static String SERVER_SERVICE_REGISTRY = \"service-server.reg\" ;\n+  public static String CLIENT_TRANSPORT_REGISTRY = \"transport-client.reg\" ;\n+  public static String SERVER_TRANSPORT_REGISTRY = \"transport-server.reg\" ;\n }"
            },
            {
                "sha": "bfdc09f89f33b838fe63bda1f31b2e0e12fd91d3",
                "filename": "src/org/apache/axis/MessageContext.java",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/MessageContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/MessageContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -333,10 +333,6 @@ public void setServiceHandler(Handler sh)\n      */\n     public static String TRANS_URL           = \"transport.url\";\n \n-    /** The transport specific request/response chains  */\n-    public static String TRANS_REQUEST         = \"transport.request\";\n-    public static String TRANS_RESPONSE        = \"transport.response\";\n-\n     /** Has a quit been requested? Hackish... but useful... -- RobJ */\n     public static String QUIT_REQUESTED = \"quit.requested\";\n   "
            },
            {
                "sha": "fe349e964a9e00fd1c5ecedac170f484124d3f33",
                "filename": "src/org/apache/axis/SimpleChain.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/SimpleChain.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/SimpleChain.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SimpleChain.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -141,6 +141,9 @@ public boolean contains(Handler handler) {\n   }\n \n   public Handler[] getHandlers() {\n+    if (handlers == null)\n+      return null;\n+    \n     Handler [] ret = new Handler[handlers.size()];\n     return( (Handler[]) handlers.toArray(ret) );\n   }"
            },
            {
                "sha": "d5e76ec1e116056c43ecb9d0b7fbc783bb455041",
                "filename": "src/org/apache/axis/client/AdminClient.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AdminClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AdminClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AdminClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -84,7 +84,9 @@ public static void main (String[] args)\n       try {\n         Options opts = new Options( args );\n         \n-        Debug.setDebugLevel( opts.isFlagSet('d') );\n+        if (opts.isFlagSet('d') > 0) {\n+          Debug.setDebugLevel( opts.isFlagSet('d') );\n+        }\n         \n         args = opts.getRemainingArgs();\n         "
            },
            {
                "sha": "ad16729cd1b4c2f7b01f74e017e736c117b136f1",
                "filename": "src/org/apache/axis/client/AxisClient.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AxisClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AxisClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -77,7 +77,8 @@\n     public AxisClient()\n     {\n         super(Constants.CLIENT_HANDLER_REGISTRY,\n-              Constants.CLIENT_SERVICE_REGISTRY);\n+              Constants.CLIENT_SERVICE_REGISTRY,\n+              Constants.CLIENT_TRANSPORT_REGISTRY);\n     }\n \n     /**"
            },
            {
                "sha": "06f93598d505db7a119aeb1b5c0847c99ed7a8f7",
                "filename": "src/org/apache/axis/client/ServiceClient.java",
                "status": "modified",
                "additions": 12,
                "deletions": 8,
                "changes": 20,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/ServiceClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/ServiceClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/ServiceClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -91,6 +91,9 @@\n // Only supports String\n \n public class ServiceClient {\n+    // Client transports\n+    private static Transport defaultTransport = null;\n+                                                        \n     // keep prop hashtable small\n     private Hashtable properties = new Hashtable(10);\n     protected String encodingStyleURI = null ;\n@@ -150,10 +153,19 @@ public ServiceClient (Transport transport) {\n     \n     public void setTransport(Transport transport) {\n         this.transport = transport;\n+        Debug.Print(1, \"Transport is \" + transport);\n+    }\n+    \n+    public static void setDefaultTransport(Transport transport)\n+    {\n+        defaultTransport = transport;\n     }\n     \n     public Transport getTransportForProtocol(String protocol)\n     {\n+      if (defaultTransport != null)\n+        return defaultTransport;\n+      \n       if (protocol.equals(\"http\"))\n         return new HTTPTransport();\n       \n@@ -188,14 +200,6 @@ public String getEncodingStyleURI() {\n         return( encodingStyleURI );\n     }\n     \n-    public void setTransportRequest(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_REQUEST, handlerName );\n-    }\n-  \n-    public void setTransportResponse(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_RESPONSE, handlerName );\n-    }\n-    \n     public void setRequestMessage(Message msg) {\n         msgContext.setRequestMessage(msg);\n     }"
            },
            {
                "sha": "c3f2a70c0daa3b1a5da2f95e6684fc760bf238d8",
                "filename": "src/org/apache/axis/registries/SupplierRegistry.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/registries/SupplierRegistry.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/registries/SupplierRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/registries/SupplierRegistry.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -118,6 +118,10 @@ public Handler remove(String key) {\n      */\n     public Handler find(String key) {\n         Debug.Print( 4, \"Enter: SupplierRegistry::find(\", key, \")\" );\n+        if (key == null) {\n+          Debug.Print( 4, \"Exit: SupplierRegistry::find - key is null\" );\n+          return( null );\n+        }\n         if ( suppliers == null ) {\n           Debug.Print( 4, \"Exit: SupplierRegistry::find - suppliers is null\" );\n           return( null );"
            },
            {
                "sha": "d7257b5dc26088b1d4ea6e270efa2e42905b43ec",
                "filename": "src/org/apache/axis/server/AxisServer.java",
                "status": "modified",
                "additions": 17,
                "deletions": 10,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/server/AxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/server/AxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/server/AxisServer.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -113,7 +113,8 @@ public void stop()\n      */\n     public AxisServer() {\n       super(Constants.SERVER_HANDLER_REGISTRY,\n-            Constants.SERVER_SERVICE_REGISTRY);\n+            Constants.SERVER_SERVICE_REGISTRY,\n+            Constants.SERVER_TRANSPORT_REGISTRY);\n     }\n \n     /**\n@@ -149,14 +150,6 @@ protected void deployDefaultHandlers()\n       c.addHandler( _handlerRegistry.find( \"debug\" ) );\n       deployHandler( \"global.request\", c );\n       \n-      c = new SimpleChain();\n-      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n-      c.addHandler( _handlerRegistry.find( \"HTTPAction\" ) );\n-      // deployHandler( \"HTTP.request\", c );\n-      \n-      SimpleTargetedChain transport = new SimpleTargetedChain();\n-      transport.setRequestHandler(c);\n-      deployTransport(\"HTTP.request\", transport);\n     }\n \n     protected void deployDefaultServices()\n@@ -179,7 +172,20 @@ protected void deployDefaultServices()\n \n     protected void deployDefaultTransports()\n     {\n-      // Do nothing.\n+      Chain c = new SimpleChain();\n+      Handler actionHandler = _handlerRegistry.find( \"HTTPAction\" );\n+      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n+      c.addHandler( actionHandler );\n+      \n+      // HTTP transport w/authorization\n+      SimpleTargetedChain transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(c);\n+      deployTransport(\"http\", transport);\n+      \n+      // HTTP transport (for SimpleAxisServer) without auth.\n+      transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(actionHandler);\n+      deployTransport(\"SimpleHTTP\", transport);\n     }\n     \n     /**\n@@ -266,6 +272,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n               HandlerRegistry tr = getTransportRegistry();\n               SimpleTargetedChain transportChain = null;\n               \n+              Debug.Print(3, \"AxisServer.invoke: Transport = '\" + hName +\"'\");\n               if ( hName != null && (h = tr.find( hName )) != null ) {\n                 if (h instanceof SimpleTargetedChain) {\n                   transportChain = (SimpleTargetedChain)h;"
            },
            {
                "sha": "be1bef15b77b6dec3636321cb0cb1a9372f35e0f",
                "filename": "src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "status": "modified",
                "additions": 21,
                "deletions": 14,
                "changes": 35,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/suppliers/TargetedChainSupplier.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -95,6 +95,9 @@ public TargetedChainSupplier(String myName,\n     \n     private void addHandlersToChain(Vector names, Chain chain)\n     {\n+      if (names == null)\n+        return;\n+      \n       Enumeration e = names.elements();\n       while (e.hasMoreElements()) {\n         String hName = (String)e.nextElement();\n@@ -114,25 +117,29 @@ public Handler getHandler()\n         c.setOptions(_options);\n         c.setName(_myName);\n         \n-        if (_requestNames.size() == 1) {\n-          h = _registry.find((String)_requestNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_requestNames, chain);\n+        if (!_requestNames.isEmpty()) {\n+          if (_requestNames.size() == 1) {\n+            h = _registry.find((String)_requestNames.elementAt(0));\n+            c.setRequestHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_requestNames, chain);\n+            c.setRequestHandler(chain);\n+          }\n         }\n         \n         h = _registry.find(_pivotName);\n-        if (h == null)\n-          return null;  // Should maybe throw an exception here?\n         c.setPivotHandler(h);\n \n-        if (_responseNames.size() == 1) {\n-          h = _registry.find((String)_responseNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_responseNames, chain);\n+        if (!_responseNames.isEmpty()) {\n+          if (_responseNames.size() == 1) {\n+            h = _registry.find((String)_responseNames.elementAt(0));\n+            c.setResponseHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_responseNames, chain);\n+            c.setResponseHandler(chain);\n+          }\n         }\n         \n         _chain = c;"
            },
            {
                "sha": "948489ddb6f0cf672c0ec3c2ed75455789846925",
                "filename": "src/org/apache/axis/transport/http/AxisServlet.java",
                "status": "modified",
                "additions": 9,
                "deletions": 18,
                "changes": 27,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/AxisServlet.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/AxisServlet.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/AxisServlet.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -68,32 +68,25 @@\n  */\n public class AxisServlet extends HttpServlet {\n   // These have default values.\n-  private String transportReqName = \"HTTP.request\";\n-  private String transportRespName = \"HTTP.response\";\n+  private String transportName = \"http\";\n \n   private static final String AXIS_ENGINE = \"AxisEngine\" ;\n \n   public void init() {\n-      String param = getInitParameter(\"transport.request\");\n+      String param = getInitParameter(\"transport.name\");\n       ServletContext context = getServletConfig().getServletContext();\n       \n       if (param == null)\n-          param = context.getInitParameter(\"transport.request\");\n+          param = context.getInitParameter(\"transport.name\");\n       if (param != null)\n-          transportReqName = param;\n-      \n-      param = getInitParameter(\"transport.response\");\n-      if (param == null)\n-          param = context.getInitParameter(\"transport.response\");\n-      if (param != null)\n-          transportRespName = param;\n+          transportName = param;      \n   }\n \n   public void doGet(HttpServletRequest req, HttpServletResponse res)\n                 throws ServletException, IOException {\n     res.setContentType(\"text/html\");\n-    res.getWriter().println( \"In doGet\" );\n-    res.getWriter().println(\" Request = \" + transportReqName);\n+    res.getWriter().println( \"In doGet<p>\" );\n+    res.getWriter().println(\" TransportName = \" + transportName);\n   }\n \n   public void doPost(HttpServletRequest req, HttpServletResponse res)\n@@ -118,11 +111,9 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     /**********************************************************/\n     msgContext.setRequestMessage( msg );\n \n-    /* Set the Transport Specific Request/Response chains IDs */\n-    /******************************************************/\n-    msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-    msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n-    msgContext.setTransportName(transportReqName);\n+    /* Set the Transport */\n+    /*********************/\n+    msgContext.setTransportName(transportName);\n \n     /* Save some HTTP specific info in the bag in case a handler needs it */\n     /**********************************************************************/"
            },
            {
                "sha": "70fba8275326c97c8822e1e7ebcf00964dd99727",
                "filename": "src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "status": "modified",
                "additions": 3,
                "deletions": 8,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/SimpleAxisServer.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -126,9 +126,7 @@ private static synchronized AxisServer getAxisServer() {\n     private static byte cannedResponse[] = \"<empty/>\".getBytes();\n \n     // Axis specific constants\n-    private static String transportReqName = \"HTTPAction\";\n-    private static String transportRespName = \"HTTP.response\";\n-    //private static final String AXIS_ENGINE = \"AxisEngine\" ;\n+    private static String transportName = \"SimpleHTTP\";\n     \n     // are we stopped?\n     // latch to true if stop() is called\n@@ -149,8 +147,6 @@ public void run() {\n         // create and initialize a message context\n         MessageContext msgContext = new MessageContext(engine);\n         Message        requestMsg;\n-        msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName);\n-        msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n \n         // Reusuable, buffered, content length controlled, InputStream\n         NonBlockingBufferedInputStream is =\n@@ -177,9 +173,8 @@ public void run() {\n             msgContext.setTargetService(null);\n             msgContext.setResponseMessage(null);\n             msgContext.clearProperties();\n-            msgContext.setProperty(\"transport\", \"HTTPTransport\");\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST, transportReqName);\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n+            //msgContext.setProperty(\"transport\", \"HTTPTransport\");\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 try {"
            },
            {
                "sha": "ddf3bd354a65ba42e176600a90d87e5a74c95d83",
                "filename": "src/org/apache/axis/transport/local/LocalSender.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/local/LocalSender.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/local/LocalSender.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/local/LocalSender.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -100,7 +100,7 @@ public void invoke(MessageContext clientContext) throws AxisFault {\n     String action = clientContext.getStrProp(HTTPConstants.MC_HTTP_SOAPACTION);\n     if (action != null) {\n        serverContext.setProperty(HTTPConstants.MC_HTTP_SOAPACTION, action);\n-       serverContext.setProperty(MessageContext.TRANS_REQUEST , \"HTTPAction\");\n+       serverContext.setTransportName(\"http\");\n     }\n \n     // set the realpath if possible"
            },
            {
                "sha": "38f34231a0bbb3235139b8f48c624058a72b4567",
                "filename": "src/org/apache/axis/utils/Admin.java",
                "status": "modified",
                "additions": 29,
                "deletions": 25,
                "changes": 54,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/utils/Admin.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/utils/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "patch": "@@ -119,7 +119,7 @@ private static void registerTypeMappings(Element root, SOAPService service)\n     throws Exception\n   {\n     NodeList list = root.getElementsByTagName(\"bean\");\n-    Debug.Print(1, \"Registering \" + list.getLength() + \" service-specific beans.\");\n+    Debug.Print(2, \"Registering \" + list.getLength() + \" service-specific beans.\");\n     for (int i = 0; list != null && i < list.getLength(); i++) {\n       Element el = (Element)list.item(i);\n       registerBeanMapping(el, service.getTypeMappingRegistry());\n@@ -187,12 +187,18 @@ public Document process(MessageContext msgContext, Element root) throws AxisFaul\n         Element tmpEl = doc.createElement(\"engineConfig\");\n         doc.appendChild(tmpEl);\n         \n-        Element el = list(doc, engine, false);\n+        Element el = doc.createElement(\"handlers\");\n+        list(el, engine.getHandlerRegistry());\n         tmpEl.appendChild(el);\n         \n-        el = list(doc, engine, true);\n+        el = doc.createElement(\"services\");\n+        list(el, engine.getServiceRegistry());\n         tmpEl.appendChild(el);\n         \n+        el = doc.createElement(\"transports\");\n+        list(el, engine.getTransportRegistry());\n+        tmpEl.appendChild(el);\n+\n         return( doc );\n       }\n   \n@@ -269,25 +275,17 @@ else if ( type.equals( \"bean\" ) ) {\n    * @return Element our config element, suitable for pumping back through\n    *                 Admin processing later, to redeploy.\n    */\n-  public static Element list(Document doc, AxisEngine engine, boolean doServices)\n+  public static Element list(Element root, HandlerRegistry registry)\n     throws AxisFault\n   {\n-    String elementName = doServices ? \"services\" : \"handlers\";\n-    Element root = doc.createElement( elementName );\n+    Document doc = root.getOwnerDocument();\n \n     Element    elem = null ;\n     Hashtable  opts = null ;\n     String[]   names ;\n     Handler    h ;\n     int        i ;\n     \n-    HandlerRegistry registry;\n-    if (doServices) {\n-      registry = engine.getServiceRegistry();\n-    } else {\n-      registry = engine.getHandlerRegistry();\n-    }\n-\n     names = registry.list();\n \n     for( i = 0 ; names != null && i < names.length ; i++ ) {\n@@ -373,6 +371,8 @@ public static void registerChain(Element elem, AxisEngine engine)\n                                                              hr);\n       hr.add(name,supp);\n     }\n+    \n+    engine.saveHandlerRegistry();\n   }\n   \n   /**\n@@ -512,11 +512,9 @@ public static void registerHandler(Element elem, AxisEngine engine)\n   public static void registerTransport(Element elem, AxisEngine engine)\n     throws AxisFault\n   {\n-    SupplierRegistry tr = engine.getTransportRegistry();\n-    \n     String   name    = elem.getAttribute( \"name\" );\n     String   request   = elem.getAttribute( \"request\" );\n-    String   sender   = elem.getAttribute( \"sender\" );\n+    String   sender   = elem.getAttribute( \"pivot\" );\n     String   response  = elem.getAttribute( \"response\" );\n     Hashtable options = new Hashtable();\n \n@@ -530,24 +528,30 @@ public static void registerTransport(Element elem, AxisEngine engine)\n     Vector reqNames = new Vector();\n     Vector respNames = new Vector();\n \n-    st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      reqNames.addElement(st.nextToken());\n+    if (request != null) {\n+      st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        reqNames.addElement(st.nextToken());\n+      }\n+    }\n+\n+    if (response != null) {\n+      st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        respNames.addElement(st.nextToken());\n+      }\n     }\n     \n-    st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      respNames.addElement(st.nextToken());\n-    }\n     getOptions( elem, options );\n     \n+    HandlerRegistry hr = engine.getHandlerRegistry();\n     TargetedChainSupplier supp = new TargetedChainSupplier(name,\n                                                            reqNames,\n                                                            respNames,\n                                                            sender,\n                                                            options,\n-                                                           tr);\n-    tr.add(name,supp);\n+                                                           hr);\n+    engine.deployTransport(name, supp);\n   }\n \n   /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/e41f5285762d6827ef1104a9aee6c324f14084e4",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/517e101507acee0c050a45a888da4f199c930bc0",
        "message": "* First cut at the AxisEngine hierarchy\n\nIntroduce an abstract AxisEngine base class, from which both AxisClient\nand AxisServer inherit.  The AxisEngine handles the registries and loading\nengine-wide properties from a properties file (this should migrate to\nXML at some point).  init() has been factored out of both AxisClient and\nAxisServer.\n\nEnable setting default debug level via the properties file.\n\nThe AxisEngine class also has the handler and service registries as first-\nclass member vars, with getters and setters, rather than using the\noption bag for this.  This required various tweaks to classes that wanted\nto use the option bag.\n\n* Add a test to TestRPC to verify that dispatching off the RPC body\n  element QName works\n\n* Fix a potential NPE bug in AxisServlet\n\n* Pull AxisEngine out into a member variable in MessageContext\n\n* Remove the static SOAPTypeMappingRegistry from MessageContext, replace\n  with SOAPTypeMappingRegistry.getSingleton()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@251992 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_184",
        "file": [
            {
                "sha": "37414a7c09248cb72991ca4077354c5d2e79bf68",
                "filename": "src/org/apache/axis/AxisEngine.java",
                "status": "added",
                "additions": 202,
                "deletions": 0,
                "changes": 202,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/AxisEngine.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/AxisEngine.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -0,0 +1,202 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *    Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n+ *    not be used to endorse or promote products derived from this\n+ *    software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    nor may \"Apache\" appear in their name, without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.axis;\n+\n+import java.io.*;\n+import java.util.* ;\n+import org.apache.axis.* ;\n+import org.apache.axis.utils.* ;\n+import org.apache.axis.handlers.* ;\n+import org.apache.axis.handlers.soap.* ;\n+import org.apache.axis.registries.* ;\n+import org.apache.axis.encoding.SOAPTypeMappingRegistry;\n+import org.apache.axis.encoding.TypeMappingRegistry;\n+\n+/**\n+ * An <code>AxisEngine</code> is the base class for AxisClient and\n+ * AxisServer.  Handles common functionality like dealing with the\n+ * handler/service registries and loading properties.\n+ *\n+ * @author Glen Daniels (gdaniels@allaire.com)\n+ */\n+public abstract class AxisEngine extends BasicHandler\n+{\n+    /** The handler registry this Engine uses. */\n+    protected HandlerRegistry _handlerRegistry;\n+    protected String handlerRegFilename;\n+    \n+    /** The service registry this Engine uses. */\n+    protected HandlerRegistry _serviceRegistry;\n+    protected String serviceRegFilename;\n+    \n+    protected Properties props = new Properties();\n+    \n+    /**\n+     * No-arg constructor.  Loads properties from the \"axis.properties\"\n+     * file if it exists.\n+     * \n+     */\n+    public AxisEngine()\n+    {\n+        Debug.Print( 1, \"Enter: AxisEngine no-arg constructor\");\n+        try {\n+            File propFile = new File(\"axis.properties\");\n+            if (propFile.exists()) {\n+                FileInputStream propFileInputStream =\n+                         new FileInputStream(propFile);\n+                props.load(propFileInputStream);\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        Debug.Print( 1, \"Exit: AxisEngine no-arg constructor\");\n+    }\n+    \n+    /**\n+     * Allows the Listener to specify which handler/service registry\n+     * implementation they want to use.\n+     * \n+     * @param handlers the Handler registry.\n+     * @param services the Service registry.\n+     */\n+    public AxisEngine(HandlerRegistry handlers, HandlerRegistry services)\n+    {\n+        this();\n+        handlers.init();\n+        services.init();\n+        setHandlerRegistry(handlers);\n+        setServiceRegistry(services);\n+    }\n+\n+    /**\n+     * Constructor specifying registry filenames.\n+     * \n+     * @param handlerRegFilename the name of the Handler registry file.\n+     * @param serviceRegFilename the name of the Service registry file.\n+     */\n+    public AxisEngine(String handlerRegFilename, String serviceRegFilename)\n+    {\n+        this();\n+        this.handlerRegFilename = handlerRegFilename;\n+        this.serviceRegFilename = serviceRegFilename;\n+    }\n+\n+    /**\n+     * Find/load the registries and save them so we don't need to do this\n+     * each time we're called.\n+     */\n+    public void init() {\n+        // Load the simple handler registry and init it\n+        Debug.Print( 1, \"Enter: AxisEngine::init\" );\n+        \n+        String propVal = props.getProperty(\"debugLevel\", \"0\");\n+        Debug.setDebugLevel(Integer.parseInt(propVal));\n+        System.out.println(\"Debug level is \" + Debug.getDebugLevel());\n+        \n+        if (getHandlerRegistry() == null) {\n+            System.out.println(\"Using \" + handlerRegFilename);\n+            DefaultHandlerRegistry  hr =\n+                         new DefaultHandlerRegistry(handlerRegFilename);\n+            hr.setOnServer( true );\n+            hr.init();\n+            setHandlerRegistry( hr );\n+        }\n+        \n+        if (getServiceRegistry() == null) {\n+            System.out.println(\"Using \" + serviceRegFilename);\n+            // Load the simple deployed services registry and init it\n+            DefaultServiceRegistry  sr =\n+                         new DefaultServiceRegistry(serviceRegFilename);\n+            sr.setHandlerRegistry( getHandlerRegistry() ); // needs to know about 'hr'\n+            sr.setOnServer( true );\n+            sr.init();\n+            setServiceRegistry( sr );\n+        }\n+\n+        // Load the registry of deployed types\n+        TypeMappingRegistry tmr = new TypeMappingRegistry(\"typemap-supp.reg\");\n+        tmr.setParent(new SOAPTypeMappingRegistry());\n+        addOption( Constants.TYPEMAP_REGISTRY, tmr );\n+        \n+        /** ??? Why are we doing this??\n+         */\n+        Handler admin = getServiceRegistry().find(\"AdminService\");\n+        if (admin != null && admin instanceof SOAPService)\n+          ((SOAPService)admin).setTypeMappingRegistry(tmr);\n+\n+        Debug.Print( 1, \"Exit: AxisEngine::init\" );\n+    }\n+\n+    public HandlerRegistry getHandlerRegistry()\n+    {\n+        return _handlerRegistry;\n+    }\n+    \n+    public void setHandlerRegistry(HandlerRegistry registry)\n+    {\n+        _handlerRegistry = registry;\n+    }\n+    \n+    public HandlerRegistry getServiceRegistry()\n+    {\n+        return _serviceRegistry;\n+    }\n+    \n+    public void setServiceRegistry(HandlerRegistry registry)\n+    {\n+        _serviceRegistry = registry;\n+    }    \n+};"
            },
            {
                "sha": "be66eced60122d65a194d69e9687a744f79eb23a",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -61,7 +61,6 @@\n   //  not all Engines will have notion of registries but defining these\n   //  here should allow people to ask if they exist)\n   //////////////////////////////////////////////////////////////////////////\n-  public static String AXIS_ENGINE      = \"AxisEngine\" ;\n   public static String HANDLER_REGISTRY = \"HandlerRegistry\" ;\n   public static String SERVICE_REGISTRY = \"ServiceRegistry\" ;\n   public static String TYPEMAP_REGISTRY = \"TypeMapRegistry\" ;"
            },
            {
                "sha": "113d7aa43c03512d9f863d81bccb1b71cdb94311",
                "filename": "src/org/apache/axis/MessageContext.java",
                "status": "modified",
                "additions": 22,
                "deletions": 7,
                "changes": 29,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/MessageContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/MessageContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -58,6 +58,7 @@\n import java.util.* ;\n import org.apache.axis.* ;\n import org.apache.axis.utils.AxisClassLoader ;\n+import org.apache.axis.utils.Debug ;\n import org.apache.axis.encoding.TypeMappingRegistry;\n import org.apache.axis.encoding.SOAPTypeMappingRegistry;\n import org.apache.axis.encoding.ServiceDescription;\n@@ -111,6 +112,11 @@\n      * The default classloader that this service should use\n      */\n     private AxisClassLoader  classLoader ;\n+    \n+    /**\n+     * The AxisEngine which this context is involved with\n+     */\n+    private AxisEngine       axisEngine;\n \n     /**\n      *\n@@ -126,17 +132,14 @@ public MessageContext() { }\n      */\n     private TypeMappingRegistry mappingRegistry = null;\n \n-    private static final SOAPTypeMappingRegistry soapTMR =\n-        new SOAPTypeMappingRegistry();\n-\n     public void setTypeMappingRegistry(TypeMappingRegistry reg) {\n         mappingRegistry = reg;\n     }\n \n     public TypeMappingRegistry getTypeMappingRegistry() {\n         if (mappingRegistry == null) {\n             mappingRegistry = new TypeMappingRegistry();\n-            mappingRegistry.setParent(soapTMR);\n+            mappingRegistry.setParent(SOAPTypeMappingRegistry.getSingleton());\n         }\n         return mappingRegistry;\n     }\n@@ -200,6 +203,16 @@ public void setClassLoader(AxisClassLoader cl ) {\n     public String getTargetService() {\n       return( targetService );\n     }\n+    \n+    public void setAxisEngine(AxisEngine engine)\n+    {\n+      this.axisEngine = engine;\n+    }\n+    \n+    public AxisEngine getAxisEngine()\n+    {\n+      return axisEngine;\n+    }\n \n     /**\n      * Set the target service for this message.\n@@ -211,6 +224,7 @@ public String getTargetService() {\n      * @param tServ the name of the target service.\n      */\n     public void setTargetService(String tServ) {\n+        Debug.Print(2, \"MessageContext: setTargetService(\" + tServ+\")\");\n         targetService = tServ ;\n \n         HandlerRegistry sr = (HandlerRegistry)\n@@ -236,6 +250,7 @@ public void setParsing(boolean parsing)\n     }\n \n     public Handler getServiceHandler() {\n+        Debug.Print(2, \"MessageContext:getServiceHandler()\");\n         if (serviceHandler == null) {\n             if (targetService != null) {\n                 /** This is a bit kludgey for now - what might have\n@@ -271,17 +286,17 @@ public Handler getServiceHandler() {\n                 }\n             }\n       }\n+      Debug.Print(2, \"MessageContext:getServiceHandler() returns \" + serviceHandler);\n       return( serviceHandler );\n     }\n     \n     public void setServiceHandler(Handler sh)\n     {\n+      Debug.Print(2,\"MessageContext: setServiceHandler(\"+sh+\")\");\n       serviceHandler = sh;\n       if (sh != null && sh instanceof SOAPService) {\n         TypeMappingRegistry tmr = ((SOAPService)sh).getTypeMappingRegistry();\n-        getTypeMappingRegistry().setParent(tmr);\n-      } else {\n-        getTypeMappingRegistry().setParent(soapTMR);\n+        setTypeMappingRegistry(tmr);\n       }\n     }\n "
            },
            {
                "sha": "99b1be535c5ff840036af9d7d85e30d21152c646",
                "filename": "src/org/apache/axis/client/AxisClient.java",
                "status": "modified",
                "additions": 8,
                "deletions": 45,
                "changes": 53,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/client/AxisClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/client/AxisClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClient.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -70,51 +70,16 @@\n  * @author Doug Davis (dug@us.ibm.com)\n  * @author Glen Daniels (gdaniels@allaire.com)\n  */\n-public class AxisClient extends BasicHandler\n+public class AxisClient extends AxisEngine\n {\n-    public AxisClient() {}\n-    \n-    /**\n-     * Allows the Listener to specify which handler/service registry\n-     * implementation they want to use.\n-     */\n-    /*\n-    public AxisClient(HandlerRegistry handlers, HandlerRegistry services)\n+    public AxisClient()\n     {\n-        Debug.Print( 1, \"Enter: AxisClient::Constructor\");\n-        handlers.init();\n-        services.init();\n-        addOption(Constants.HANDLER_REGISTRY, handlers);\n-        addOption(Constants.SERVICE_REGISTRY, services);\n-        Debug.Print( 1, \"Exit: AxisClient::Constructor\");\n-     }*/\n-    \n-    /**\n-     * Find/load the registries and save them so we don't need to do this\n-     * each time we're called.\n-     * Package access since this should be wrapped by ServiceClient...??? -- RobJ\n-     */\n-    public void init() {\n-        // Load the simple handler registry and init it\n-        Debug.Print( 1, \"Enter: AxisClient::init\" );\n-        DefaultHandlerRegistry  hr =\n-            new DefaultHandlerRegistry(Constants.CLIENT_HANDLER_REGISTRY);\n-        hr.setOnServer( false );\n-        hr.init();\n-        addOption( Constants.HANDLER_REGISTRY, hr );\n-        \n-        // Load the simple deployed services registry and init it\n-        DefaultServiceRegistry  sr =\n-            new DefaultServiceRegistry(Constants.CLIENT_SERVICE_REGISTRY);\n-        sr.setHandlerRegistry( hr ); // Needs to know about 'hr'\n-        sr.setOnServer( false );\n-        sr.init();\n-        addOption( Constants.SERVICE_REGISTRY, sr );\n-        Debug.Print( 1, \"Exit: AxisClient::init\" );\n+        super(Constants.CLIENT_HANDLER_REGISTRY,\n+              Constants.CLIENT_SERVICE_REGISTRY);\n     }\n     \n     /**\n-     * Main routine of the AXIS server.  In short we locate the appropriate\n+     * Main routine of the AXIS engine.  In short we locate the appropriate\n      * handler for the desired service and invoke() it.\n      */\n     public void invoke(MessageContext msgContext) throws AxisFault {\n@@ -123,10 +88,8 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         String  hName = null ;\n         Handler h     = null ;\n         \n-        HandlerRegistry hr =\n-            (HandlerRegistry) getOption(Constants.HANDLER_REGISTRY);\n-        HandlerRegistry sr =\n-            (HandlerRegistry) getOption(Constants.SERVICE_REGISTRY);\n+        HandlerRegistry hr = getHandlerRegistry();\n+        HandlerRegistry sr = getServiceRegistry();\n         \n         try {\n             hName = msgContext.getStrProp( MessageContext.ENGINE_HANDLER );"
            },
            {
                "sha": "aa75edddacf687ddd79857987f5243d9e06bb0aa",
                "filename": "src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java",
                "status": "modified",
                "additions": 8,
                "deletions": 9,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -186,15 +186,14 @@ public SOAPTypeMappingRegistry() {\n \n         // !!! Seems a little weird to pass a null class here...?\n         addDeserializerFactory(SOAP_ARRAY, null, ArraySerializer.factory);\n-        /*\n-        addDeserializerFactory(SOAP_STRING, se);\n-        addDeserializerFactory(SOAP_BOOLEAN, se);\n-        addDeserializerFactory(SOAP_DOUBLE, se);\n-        addDeserializerFactory(SOAP_FLOAT, se);\n-        addDeserializerFactory(SOAP_INT, se);\n-        addDeserializerFactory(SOAP_LONG, se);\n-        addDeserializerFactory(SOAP_SHORT, se);\n-        */\n+    }\n+    \n+    private static SOAPTypeMappingRegistry singleton = null;\n+    public synchronized static SOAPTypeMappingRegistry getSingleton()\n+    {\n+        if (singleton == null)\n+            singleton = new SOAPTypeMappingRegistry();\n+        return singleton;\n     }\n     \n }"
            },
            {
                "sha": "49fd2bfff08565a5f39a1d87df0a36882d6b4903",
                "filename": "src/org/apache/axis/encoding/TypeMappingRegistry.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/encoding/TypeMappingRegistry.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/encoding/TypeMappingRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingRegistry.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -56,6 +56,7 @@\n package org.apache.axis.encoding;\n \n import java.util.Hashtable;\n+import java.util.Enumeration;\n import org.apache.axis.Constants;\n import org.apache.axis.utils.*;\n import org.apache.axis.utils.events.*;"
            },
            {
                "sha": "f82e2d21ced95855303bad4584b9a78dacd62052",
                "filename": "src/org/apache/axis/handlers/tcp/TCPActionHandler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/handlers/tcp/TCPActionHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/handlers/tcp/TCPActionHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/tcp/TCPActionHandler.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -128,8 +128,8 @@ public void invoke(MessageContext msgContext) throws AxisFault\n           // and possibly wrong.\n           // ROBJ 911 What *is* the right way to get to the HandlerRegistry from here?!\n           // Is it in the MessageContext?  ... let's look ...\n-          Handler engine = (Handler)msgContext.getProperty(Constants.AXIS_ENGINE);\n-          HandlerRegistry hr = (HandlerRegistry)engine.getOption(Constants.HANDLER_REGISTRY);\n+          AxisEngine engine = (AxisEngine)msgContext.getAxisEngine();\n+          HandlerRegistry hr = engine.getHandlerRegistry();\n           String[] list = hr.list();\n           Handler handler = null;\n           for (int i = 0; i < list.length; i++) {"
            },
            {
                "sha": "f73db6a9080bdb14216a434d22f34dfe918bc247",
                "filename": "src/org/apache/axis/server/AxisServer.java",
                "status": "modified",
                "additions": 9,
                "deletions": 47,
                "changes": 56,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/server/AxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/server/AxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/server/AxisServer.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -69,10 +69,11 @@\n  * @author Doug Davis (dug@us.ibm.com)\n  * @author Glen Daniels (gdaniels@allaire.com)\n  */\n-public class AxisServer extends BasicHandler\n+public class AxisServer extends AxisEngine\n {\n     public AxisServer() {\n-      // Debug.setDebugLevel(3);\n+      super(Constants.SERVER_HANDLER_REGISTRY,\n+            Constants.SERVER_SERVICE_REGISTRY);\n     }\n \n     /**\n@@ -81,44 +82,7 @@ public AxisServer() {\n      */\n     public AxisServer(HandlerRegistry handlers, HandlerRegistry services)\n     {\n-        Debug.Print( 1, \"Enter: AxisServer::Constructor\");\n-        handlers.init();\n-        services.init();\n-        addOption(Constants.HANDLER_REGISTRY, handlers);\n-        addOption(Constants.SERVICE_REGISTRY, services);\n-        Debug.Print( 1, \"Exit: AxisServer::Constructor\");\n-    }\n-\n-    /**\n-     * Find/load the registries and save them so we don't need to do this\n-     * each time we're called.\n-     */\n-    public void init() {\n-        // Load the simple handler registry and init it\n-        Debug.Print( 1, \"Enter: AxisServer::init\" );\n-        DefaultHandlerRegistry  hr =\n-          new DefaultHandlerRegistry(Constants.SERVER_HANDLER_REGISTRY);\n-        hr.setOnServer( true );\n-        hr.init();\n-        addOption( Constants.HANDLER_REGISTRY, hr );\n-\n-        // Load the simple deployed services registry and init it\n-        DefaultServiceRegistry  sr =\n-          new DefaultServiceRegistry(Constants.SERVER_SERVICE_REGISTRY);\n-        sr.setHandlerRegistry( hr ); // needs to know about 'hr'\n-        sr.setOnServer( true );\n-        sr.init();\n-        addOption( Constants.SERVICE_REGISTRY, sr );\n-\n-        // Load the registry of deployed types\n-        TypeMappingRegistry tmr = new TypeMappingRegistry(\"typemap-supp.reg\");\n-        tmr.setParent(new SOAPTypeMappingRegistry());\n-        addOption( Constants.TYPEMAP_REGISTRY, tmr );\n-        Handler admin = sr.find(\"AdminService\");\n-        if (admin != null && admin instanceof SOAPService)\n-          ((SOAPService)admin).setTypeMappingRegistry(tmr);\n-\n-        Debug.Print( 1, \"Exit: AxisServer::init\" );\n+        super(handlers, services);\n     }\n \n     /**\n@@ -134,18 +98,16 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         /* Do some prep-work.  Get the registries and put them in the */\n         /* msgContext so they can be used by later handlers.          */\n         /**************************************************************/\n-        HandlerRegistry hr =\n-            (HandlerRegistry) getOption(Constants.HANDLER_REGISTRY);\n-        HandlerRegistry sr =\n-            (HandlerRegistry) getOption(Constants.SERVICE_REGISTRY);\n+        HandlerRegistry hr = getHandlerRegistry();\n+        HandlerRegistry sr = getServiceRegistry();\n         TypeMappingRegistry tmr =\n             (TypeMappingRegistry) getOption(Constants.TYPEMAP_REGISTRY);\n \n-        msgContext.setProperty(Constants.AXIS_ENGINE, this );\n+        msgContext.setAxisEngine( this );\n         msgContext.setProperty(Constants.HANDLER_REGISTRY, hr);\n         msgContext.setProperty(Constants.SERVICE_REGISTRY, sr);\n \n-        msgContext.getTypeMappingRegistry().setParent(tmr);\n+        msgContext.setTypeMappingRegistry(tmr);\n \n         try {\n           hName = msgContext.getStrProp( MessageContext.ENGINE_HANDLER );"
            },
            {
                "sha": "06ff6328b6fcbbc1607ada1f23daed5c53f25ca0",
                "filename": "src/org/apache/axis/transport/http/AxisServlet.java",
                "status": "modified",
                "additions": 9,
                "deletions": 7,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/transport/http/AxisServlet.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/transport/http/AxisServlet.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/AxisServlet.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -76,7 +76,7 @@\n   public void init() {\n       String param = getInitParameter(\"transport.input\");\n       ServletContext context = getServletConfig().getServletContext();\n-\n+      \n       if (param == null)\n           param = context.getInitParameter(\"transport.input\");\n       if (param != null)\n@@ -102,14 +102,12 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     ServletContext context = config.getServletContext();\n     HttpSession    session = req.getSession();\n \n-    Handler  engine = null ;\n-\n-    //Debug.setDebugLevel( 6 );\n+    AxisEngine  engine = null ;\n \n     /* Get or 'new' the Axis engine object */\n     /***************************************/\n     synchronized(context) {\n-      engine = (Handler) context.getAttribute( AXIS_ENGINE );\n+      engine = (AxisEngine) context.getAttribute( AXIS_ENGINE );\n       if ( engine == null ) {\n         engine = new AxisServer();\n         engine.init();\n@@ -196,8 +194,12 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     /***********************************/\n     msg = msgContext.getResponseMessage();\n     res.setContentType( \"text/xml\" );\n-    String response = (String) msg.getAs(\"String\");\n-    if (msg == null) response=\"No data\";\n+    String response;\n+    if (msg == null) {\n+        response=\"No data\";\n+    } else {\n+        response = (String)msg.getAs(\"String\");\n+    }\n     res.setContentLength( response.length() );\n     res.getWriter().print( response );\n   }"
            },
            {
                "sha": "dca6b0b47870d41ad8c8d7813ec835d20c68f7b2",
                "filename": "src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/SimpleAxisServer.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -103,7 +103,7 @@ private static synchronized AxisServer getAxisServer() {\n     // Axis specific constants\n     private static String transportInName = \"HTTPAction\";\n     private static String transportOutName = \"HTTP.output\";\n-    private static final String AXIS_ENGINE = \"AxisEngine\" ;\n+    //private static final String AXIS_ENGINE = \"AxisEngine\" ;\n     \n     // are we stopped?\n     // latch to true if stop() is called"
            },
            {
                "sha": "37be994adb1269ea59a6f6839e82d45751d836bc",
                "filename": "test/RPCDispatch/TestRPC.java",
                "status": "modified",
                "additions": 22,
                "deletions": 8,
                "changes": 30,
                "blob_url": "https://github.com/apache/axis1-java/blob/e41f5285762d6827ef1104a9aee6c324f14084e4/test/RPCDispatch/TestRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/e41f5285762d6827ef1104a9aee6c324f14084e4/test/RPCDispatch/TestRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestRPC.java?ref=e41f5285762d6827ef1104a9aee6c324f14084e4",
                "patch": "@@ -36,13 +36,13 @@\n     private Handler RPCDispatcher;\n \n     private String SOAPAction = \"urn:reverse\";\n-    private String methodNS   = null;\n+    private String methodNS   = SOAPAction;\n \n     public TestRPC(String name) {\n         super(name);\n         engine.init();\n-        hr = (HandlerRegistry) engine.getOption(Constants.HANDLER_REGISTRY);\n-        sr = (HandlerRegistry) engine.getOption(Constants.SERVICE_REGISTRY);\n+        hr = (HandlerRegistry) engine.getHandlerRegistry();\n+        sr = (HandlerRegistry) engine.getServiceRegistry();\n         RPCDispatcher = hr.find(\"RPCDispatcher\");\n         // Debug.setDebugLevel(5);\n     }\n@@ -53,7 +53,8 @@ public TestRPC(String name) {\n      * @param request XML body of the request\n      * @return Deserialized result\n      */\n-    private final Object rpc(String method, Object[] parms)\n+    private final Object rpc(String method, Object[] parms,\n+                             boolean setService)\n         throws AxisFault\n     {\n \n@@ -70,7 +71,9 @@ private final Object rpc(String method, Object[] parms)\n         MessageContext msgContext = new MessageContext();\n         msgContext.setProperty(Constants.SERVICE_REGISTRY, sr);\n         msgContext.setRequestMessage(new Message(envelope, \"SOAPEnvelope\"));\n-        msgContext.setTargetService(SOAPAction);\n+        if (setService) {\n+            msgContext.setTargetService(SOAPAction);\n+        }\n \n         // Invoke the Axis engine\n         try {\n@@ -109,7 +112,18 @@ public void testReverseString() throws Exception {\n         sr.add(SOAPAction, reverse);\n \n         // invoke the service and verify the result\n-        assertEquals(\"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}));\n+        assertEquals(\"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}, true));\n+    }\n+\n+    public void testReverseBodyDispatch() throws Exception {\n+        // Register the reverseString service\n+        SOAPService reverse = new SOAPService(RPCDispatcher, \"RPCDispatcher\");\n+        reverse.addOption(\"className\", \"test.RPCDispatch.Service\");\n+        reverse.addOption(\"methodName\", \"reverseString\");\n+        sr.add(SOAPAction, reverse);\n+\n+        // invoke the service and verify the result\n+        assertEquals(\"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}, false));\n     }\n \n     /**\n@@ -125,7 +139,7 @@ public void testReverseData() throws Exception {\n         // invoke the service and verify the result\n         Data input    = new Data(5, \"abc\", 3);\n         Data expected = new Data(3, \"cba\", 5);\n-        assertEquals(expected, rpc(\"reverseData\", new Object[] {input}));\n+        assertEquals(expected, rpc(\"reverseData\", new Object[] {input}, true));\n     }\n \n     /**\n@@ -139,6 +153,6 @@ public void testMessageContext() throws Exception {\n         sr.add(SOAPAction, reverse);\n \n         // invoke the service and verify the result\n-        assertEquals(SOAPAction, rpc(\"targetService\", new Object[] {}));\n+        assertEquals(SOAPAction, rpc(\"targetService\", new Object[] {}, true));\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/ac3876a3d5a87e730475d2959cf44ac73278c61f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/3966ba3224325814cb5551cab82574754eafd3d2",
        "message": "* First cut at the AxisEngine hierarchy\n\nIntroduce an abstract AxisEngine base class, from which both AxisClient\nand AxisServer inherit.  The AxisEngine handles the registries and loading\nengine-wide properties from a properties file (this should migrate to\nXML at some point).  init() has been factored out of both AxisClient and\nAxisServer.\n\nEnable setting default debug level via the properties file.\n\nThe AxisEngine class also has the handler and service registries as first-\nclass member vars, with getters and setters, rather than using the\noption bag for this.  This required various tweaks to classes that wanted\nto use the option bag.\n\n* Add a test to TestRPC to verify that dispatching off the RPC body\n  element QName works\n\n* Fix a potential NPE bug in AxisServlet\n\n* Pull AxisEngine out into a member variable in MessageContext\n\n* Remove the static SOAPTypeMappingRegistry from MessageContext, replace\n  with SOAPTypeMappingRegistry.getSingleton()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@244920 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_185",
        "file": [
            {
                "sha": "37414a7c09248cb72991ca4077354c5d2e79bf68",
                "filename": "src/org/apache/axis/AxisEngine.java",
                "status": "added",
                "additions": 202,
                "deletions": 0,
                "changes": 202,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/AxisEngine.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/AxisEngine.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -0,0 +1,202 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *    Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n+ *    not be used to endorse or promote products derived from this\n+ *    software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    nor may \"Apache\" appear in their name, without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.axis;\n+\n+import java.io.*;\n+import java.util.* ;\n+import org.apache.axis.* ;\n+import org.apache.axis.utils.* ;\n+import org.apache.axis.handlers.* ;\n+import org.apache.axis.handlers.soap.* ;\n+import org.apache.axis.registries.* ;\n+import org.apache.axis.encoding.SOAPTypeMappingRegistry;\n+import org.apache.axis.encoding.TypeMappingRegistry;\n+\n+/**\n+ * An <code>AxisEngine</code> is the base class for AxisClient and\n+ * AxisServer.  Handles common functionality like dealing with the\n+ * handler/service registries and loading properties.\n+ *\n+ * @author Glen Daniels (gdaniels@allaire.com)\n+ */\n+public abstract class AxisEngine extends BasicHandler\n+{\n+    /** The handler registry this Engine uses. */\n+    protected HandlerRegistry _handlerRegistry;\n+    protected String handlerRegFilename;\n+    \n+    /** The service registry this Engine uses. */\n+    protected HandlerRegistry _serviceRegistry;\n+    protected String serviceRegFilename;\n+    \n+    protected Properties props = new Properties();\n+    \n+    /**\n+     * No-arg constructor.  Loads properties from the \"axis.properties\"\n+     * file if it exists.\n+     * \n+     */\n+    public AxisEngine()\n+    {\n+        Debug.Print( 1, \"Enter: AxisEngine no-arg constructor\");\n+        try {\n+            File propFile = new File(\"axis.properties\");\n+            if (propFile.exists()) {\n+                FileInputStream propFileInputStream =\n+                         new FileInputStream(propFile);\n+                props.load(propFileInputStream);\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        Debug.Print( 1, \"Exit: AxisEngine no-arg constructor\");\n+    }\n+    \n+    /**\n+     * Allows the Listener to specify which handler/service registry\n+     * implementation they want to use.\n+     * \n+     * @param handlers the Handler registry.\n+     * @param services the Service registry.\n+     */\n+    public AxisEngine(HandlerRegistry handlers, HandlerRegistry services)\n+    {\n+        this();\n+        handlers.init();\n+        services.init();\n+        setHandlerRegistry(handlers);\n+        setServiceRegistry(services);\n+    }\n+\n+    /**\n+     * Constructor specifying registry filenames.\n+     * \n+     * @param handlerRegFilename the name of the Handler registry file.\n+     * @param serviceRegFilename the name of the Service registry file.\n+     */\n+    public AxisEngine(String handlerRegFilename, String serviceRegFilename)\n+    {\n+        this();\n+        this.handlerRegFilename = handlerRegFilename;\n+        this.serviceRegFilename = serviceRegFilename;\n+    }\n+\n+    /**\n+     * Find/load the registries and save them so we don't need to do this\n+     * each time we're called.\n+     */\n+    public void init() {\n+        // Load the simple handler registry and init it\n+        Debug.Print( 1, \"Enter: AxisEngine::init\" );\n+        \n+        String propVal = props.getProperty(\"debugLevel\", \"0\");\n+        Debug.setDebugLevel(Integer.parseInt(propVal));\n+        System.out.println(\"Debug level is \" + Debug.getDebugLevel());\n+        \n+        if (getHandlerRegistry() == null) {\n+            System.out.println(\"Using \" + handlerRegFilename);\n+            DefaultHandlerRegistry  hr =\n+                         new DefaultHandlerRegistry(handlerRegFilename);\n+            hr.setOnServer( true );\n+            hr.init();\n+            setHandlerRegistry( hr );\n+        }\n+        \n+        if (getServiceRegistry() == null) {\n+            System.out.println(\"Using \" + serviceRegFilename);\n+            // Load the simple deployed services registry and init it\n+            DefaultServiceRegistry  sr =\n+                         new DefaultServiceRegistry(serviceRegFilename);\n+            sr.setHandlerRegistry( getHandlerRegistry() ); // needs to know about 'hr'\n+            sr.setOnServer( true );\n+            sr.init();\n+            setServiceRegistry( sr );\n+        }\n+\n+        // Load the registry of deployed types\n+        TypeMappingRegistry tmr = new TypeMappingRegistry(\"typemap-supp.reg\");\n+        tmr.setParent(new SOAPTypeMappingRegistry());\n+        addOption( Constants.TYPEMAP_REGISTRY, tmr );\n+        \n+        /** ??? Why are we doing this??\n+         */\n+        Handler admin = getServiceRegistry().find(\"AdminService\");\n+        if (admin != null && admin instanceof SOAPService)\n+          ((SOAPService)admin).setTypeMappingRegistry(tmr);\n+\n+        Debug.Print( 1, \"Exit: AxisEngine::init\" );\n+    }\n+\n+    public HandlerRegistry getHandlerRegistry()\n+    {\n+        return _handlerRegistry;\n+    }\n+    \n+    public void setHandlerRegistry(HandlerRegistry registry)\n+    {\n+        _handlerRegistry = registry;\n+    }\n+    \n+    public HandlerRegistry getServiceRegistry()\n+    {\n+        return _serviceRegistry;\n+    }\n+    \n+    public void setServiceRegistry(HandlerRegistry registry)\n+    {\n+        _serviceRegistry = registry;\n+    }    \n+};"
            },
            {
                "sha": "be66eced60122d65a194d69e9687a744f79eb23a",
                "filename": "src/org/apache/axis/Constants.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/Constants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -61,7 +61,6 @@\n   //  not all Engines will have notion of registries but defining these\n   //  here should allow people to ask if they exist)\n   //////////////////////////////////////////////////////////////////////////\n-  public static String AXIS_ENGINE      = \"AxisEngine\" ;\n   public static String HANDLER_REGISTRY = \"HandlerRegistry\" ;\n   public static String SERVICE_REGISTRY = \"ServiceRegistry\" ;\n   public static String TYPEMAP_REGISTRY = \"TypeMapRegistry\" ;"
            },
            {
                "sha": "113d7aa43c03512d9f863d81bccb1b71cdb94311",
                "filename": "src/org/apache/axis/MessageContext.java",
                "status": "modified",
                "additions": 22,
                "deletions": 7,
                "changes": 29,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/MessageContext.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/MessageContext.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -58,6 +58,7 @@\n import java.util.* ;\n import org.apache.axis.* ;\n import org.apache.axis.utils.AxisClassLoader ;\n+import org.apache.axis.utils.Debug ;\n import org.apache.axis.encoding.TypeMappingRegistry;\n import org.apache.axis.encoding.SOAPTypeMappingRegistry;\n import org.apache.axis.encoding.ServiceDescription;\n@@ -111,6 +112,11 @@\n      * The default classloader that this service should use\n      */\n     private AxisClassLoader  classLoader ;\n+    \n+    /**\n+     * The AxisEngine which this context is involved with\n+     */\n+    private AxisEngine       axisEngine;\n \n     /**\n      *\n@@ -126,17 +132,14 @@ public MessageContext() { }\n      */\n     private TypeMappingRegistry mappingRegistry = null;\n \n-    private static final SOAPTypeMappingRegistry soapTMR =\n-        new SOAPTypeMappingRegistry();\n-\n     public void setTypeMappingRegistry(TypeMappingRegistry reg) {\n         mappingRegistry = reg;\n     }\n \n     public TypeMappingRegistry getTypeMappingRegistry() {\n         if (mappingRegistry == null) {\n             mappingRegistry = new TypeMappingRegistry();\n-            mappingRegistry.setParent(soapTMR);\n+            mappingRegistry.setParent(SOAPTypeMappingRegistry.getSingleton());\n         }\n         return mappingRegistry;\n     }\n@@ -200,6 +203,16 @@ public void setClassLoader(AxisClassLoader cl ) {\n     public String getTargetService() {\n       return( targetService );\n     }\n+    \n+    public void setAxisEngine(AxisEngine engine)\n+    {\n+      this.axisEngine = engine;\n+    }\n+    \n+    public AxisEngine getAxisEngine()\n+    {\n+      return axisEngine;\n+    }\n \n     /**\n      * Set the target service for this message.\n@@ -211,6 +224,7 @@ public String getTargetService() {\n      * @param tServ the name of the target service.\n      */\n     public void setTargetService(String tServ) {\n+        Debug.Print(2, \"MessageContext: setTargetService(\" + tServ+\")\");\n         targetService = tServ ;\n \n         HandlerRegistry sr = (HandlerRegistry)\n@@ -236,6 +250,7 @@ public void setParsing(boolean parsing)\n     }\n \n     public Handler getServiceHandler() {\n+        Debug.Print(2, \"MessageContext:getServiceHandler()\");\n         if (serviceHandler == null) {\n             if (targetService != null) {\n                 /** This is a bit kludgey for now - what might have\n@@ -271,17 +286,17 @@ public Handler getServiceHandler() {\n                 }\n             }\n       }\n+      Debug.Print(2, \"MessageContext:getServiceHandler() returns \" + serviceHandler);\n       return( serviceHandler );\n     }\n     \n     public void setServiceHandler(Handler sh)\n     {\n+      Debug.Print(2,\"MessageContext: setServiceHandler(\"+sh+\")\");\n       serviceHandler = sh;\n       if (sh != null && sh instanceof SOAPService) {\n         TypeMappingRegistry tmr = ((SOAPService)sh).getTypeMappingRegistry();\n-        getTypeMappingRegistry().setParent(tmr);\n-      } else {\n-        getTypeMappingRegistry().setParent(soapTMR);\n+        setTypeMappingRegistry(tmr);\n       }\n     }\n "
            },
            {
                "sha": "99b1be535c5ff840036af9d7d85e30d21152c646",
                "filename": "src/org/apache/axis/client/AxisClient.java",
                "status": "modified",
                "additions": 8,
                "deletions": 45,
                "changes": 53,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/client/AxisClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/client/AxisClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClient.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -70,51 +70,16 @@\n  * @author Doug Davis (dug@us.ibm.com)\n  * @author Glen Daniels (gdaniels@allaire.com)\n  */\n-public class AxisClient extends BasicHandler\n+public class AxisClient extends AxisEngine\n {\n-    public AxisClient() {}\n-    \n-    /**\n-     * Allows the Listener to specify which handler/service registry\n-     * implementation they want to use.\n-     */\n-    /*\n-    public AxisClient(HandlerRegistry handlers, HandlerRegistry services)\n+    public AxisClient()\n     {\n-        Debug.Print( 1, \"Enter: AxisClient::Constructor\");\n-        handlers.init();\n-        services.init();\n-        addOption(Constants.HANDLER_REGISTRY, handlers);\n-        addOption(Constants.SERVICE_REGISTRY, services);\n-        Debug.Print( 1, \"Exit: AxisClient::Constructor\");\n-     }*/\n-    \n-    /**\n-     * Find/load the registries and save them so we don't need to do this\n-     * each time we're called.\n-     * Package access since this should be wrapped by ServiceClient...??? -- RobJ\n-     */\n-    public void init() {\n-        // Load the simple handler registry and init it\n-        Debug.Print( 1, \"Enter: AxisClient::init\" );\n-        DefaultHandlerRegistry  hr =\n-            new DefaultHandlerRegistry(Constants.CLIENT_HANDLER_REGISTRY);\n-        hr.setOnServer( false );\n-        hr.init();\n-        addOption( Constants.HANDLER_REGISTRY, hr );\n-        \n-        // Load the simple deployed services registry and init it\n-        DefaultServiceRegistry  sr =\n-            new DefaultServiceRegistry(Constants.CLIENT_SERVICE_REGISTRY);\n-        sr.setHandlerRegistry( hr ); // Needs to know about 'hr'\n-        sr.setOnServer( false );\n-        sr.init();\n-        addOption( Constants.SERVICE_REGISTRY, sr );\n-        Debug.Print( 1, \"Exit: AxisClient::init\" );\n+        super(Constants.CLIENT_HANDLER_REGISTRY,\n+              Constants.CLIENT_SERVICE_REGISTRY);\n     }\n     \n     /**\n-     * Main routine of the AXIS server.  In short we locate the appropriate\n+     * Main routine of the AXIS engine.  In short we locate the appropriate\n      * handler for the desired service and invoke() it.\n      */\n     public void invoke(MessageContext msgContext) throws AxisFault {\n@@ -123,10 +88,8 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         String  hName = null ;\n         Handler h     = null ;\n         \n-        HandlerRegistry hr =\n-            (HandlerRegistry) getOption(Constants.HANDLER_REGISTRY);\n-        HandlerRegistry sr =\n-            (HandlerRegistry) getOption(Constants.SERVICE_REGISTRY);\n+        HandlerRegistry hr = getHandlerRegistry();\n+        HandlerRegistry sr = getServiceRegistry();\n         \n         try {\n             hName = msgContext.getStrProp( MessageContext.ENGINE_HANDLER );"
            },
            {
                "sha": "aa75edddacf687ddd79857987f5243d9e06bb0aa",
                "filename": "src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java",
                "status": "modified",
                "additions": 8,
                "deletions": 9,
                "changes": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/SOAPTypeMappingRegistry.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -186,15 +186,14 @@ public SOAPTypeMappingRegistry() {\n \n         // !!! Seems a little weird to pass a null class here...?\n         addDeserializerFactory(SOAP_ARRAY, null, ArraySerializer.factory);\n-        /*\n-        addDeserializerFactory(SOAP_STRING, se);\n-        addDeserializerFactory(SOAP_BOOLEAN, se);\n-        addDeserializerFactory(SOAP_DOUBLE, se);\n-        addDeserializerFactory(SOAP_FLOAT, se);\n-        addDeserializerFactory(SOAP_INT, se);\n-        addDeserializerFactory(SOAP_LONG, se);\n-        addDeserializerFactory(SOAP_SHORT, se);\n-        */\n+    }\n+    \n+    private static SOAPTypeMappingRegistry singleton = null;\n+    public synchronized static SOAPTypeMappingRegistry getSingleton()\n+    {\n+        if (singleton == null)\n+            singleton = new SOAPTypeMappingRegistry();\n+        return singleton;\n     }\n     \n }"
            },
            {
                "sha": "49fd2bfff08565a5f39a1d87df0a36882d6b4903",
                "filename": "src/org/apache/axis/encoding/TypeMappingRegistry.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/encoding/TypeMappingRegistry.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/encoding/TypeMappingRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingRegistry.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -56,6 +56,7 @@\n package org.apache.axis.encoding;\n \n import java.util.Hashtable;\n+import java.util.Enumeration;\n import org.apache.axis.Constants;\n import org.apache.axis.utils.*;\n import org.apache.axis.utils.events.*;"
            },
            {
                "sha": "f82e2d21ced95855303bad4584b9a78dacd62052",
                "filename": "src/org/apache/axis/handlers/tcp/TCPActionHandler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/handlers/tcp/TCPActionHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/handlers/tcp/TCPActionHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/tcp/TCPActionHandler.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -128,8 +128,8 @@ public void invoke(MessageContext msgContext) throws AxisFault\n           // and possibly wrong.\n           // ROBJ 911 What *is* the right way to get to the HandlerRegistry from here?!\n           // Is it in the MessageContext?  ... let's look ...\n-          Handler engine = (Handler)msgContext.getProperty(Constants.AXIS_ENGINE);\n-          HandlerRegistry hr = (HandlerRegistry)engine.getOption(Constants.HANDLER_REGISTRY);\n+          AxisEngine engine = (AxisEngine)msgContext.getAxisEngine();\n+          HandlerRegistry hr = engine.getHandlerRegistry();\n           String[] list = hr.list();\n           Handler handler = null;\n           for (int i = 0; i < list.length; i++) {"
            },
            {
                "sha": "f73db6a9080bdb14216a434d22f34dfe918bc247",
                "filename": "src/org/apache/axis/server/AxisServer.java",
                "status": "modified",
                "additions": 9,
                "deletions": 47,
                "changes": 56,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/server/AxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/server/AxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/server/AxisServer.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -2,7 +2,7 @@\n  * The Apache Software License, Version 1.1\n  *\n  *\n- * Copyright (c) 1999 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -69,10 +69,11 @@\n  * @author Doug Davis (dug@us.ibm.com)\n  * @author Glen Daniels (gdaniels@allaire.com)\n  */\n-public class AxisServer extends BasicHandler\n+public class AxisServer extends AxisEngine\n {\n     public AxisServer() {\n-      // Debug.setDebugLevel(3);\n+      super(Constants.SERVER_HANDLER_REGISTRY,\n+            Constants.SERVER_SERVICE_REGISTRY);\n     }\n \n     /**\n@@ -81,44 +82,7 @@ public AxisServer() {\n      */\n     public AxisServer(HandlerRegistry handlers, HandlerRegistry services)\n     {\n-        Debug.Print( 1, \"Enter: AxisServer::Constructor\");\n-        handlers.init();\n-        services.init();\n-        addOption(Constants.HANDLER_REGISTRY, handlers);\n-        addOption(Constants.SERVICE_REGISTRY, services);\n-        Debug.Print( 1, \"Exit: AxisServer::Constructor\");\n-    }\n-\n-    /**\n-     * Find/load the registries and save them so we don't need to do this\n-     * each time we're called.\n-     */\n-    public void init() {\n-        // Load the simple handler registry and init it\n-        Debug.Print( 1, \"Enter: AxisServer::init\" );\n-        DefaultHandlerRegistry  hr =\n-          new DefaultHandlerRegistry(Constants.SERVER_HANDLER_REGISTRY);\n-        hr.setOnServer( true );\n-        hr.init();\n-        addOption( Constants.HANDLER_REGISTRY, hr );\n-\n-        // Load the simple deployed services registry and init it\n-        DefaultServiceRegistry  sr =\n-          new DefaultServiceRegistry(Constants.SERVER_SERVICE_REGISTRY);\n-        sr.setHandlerRegistry( hr ); // needs to know about 'hr'\n-        sr.setOnServer( true );\n-        sr.init();\n-        addOption( Constants.SERVICE_REGISTRY, sr );\n-\n-        // Load the registry of deployed types\n-        TypeMappingRegistry tmr = new TypeMappingRegistry(\"typemap-supp.reg\");\n-        tmr.setParent(new SOAPTypeMappingRegistry());\n-        addOption( Constants.TYPEMAP_REGISTRY, tmr );\n-        Handler admin = sr.find(\"AdminService\");\n-        if (admin != null && admin instanceof SOAPService)\n-          ((SOAPService)admin).setTypeMappingRegistry(tmr);\n-\n-        Debug.Print( 1, \"Exit: AxisServer::init\" );\n+        super(handlers, services);\n     }\n \n     /**\n@@ -134,18 +98,16 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         /* Do some prep-work.  Get the registries and put them in the */\n         /* msgContext so they can be used by later handlers.          */\n         /**************************************************************/\n-        HandlerRegistry hr =\n-            (HandlerRegistry) getOption(Constants.HANDLER_REGISTRY);\n-        HandlerRegistry sr =\n-            (HandlerRegistry) getOption(Constants.SERVICE_REGISTRY);\n+        HandlerRegistry hr = getHandlerRegistry();\n+        HandlerRegistry sr = getServiceRegistry();\n         TypeMappingRegistry tmr =\n             (TypeMappingRegistry) getOption(Constants.TYPEMAP_REGISTRY);\n \n-        msgContext.setProperty(Constants.AXIS_ENGINE, this );\n+        msgContext.setAxisEngine( this );\n         msgContext.setProperty(Constants.HANDLER_REGISTRY, hr);\n         msgContext.setProperty(Constants.SERVICE_REGISTRY, sr);\n \n-        msgContext.getTypeMappingRegistry().setParent(tmr);\n+        msgContext.setTypeMappingRegistry(tmr);\n \n         try {\n           hName = msgContext.getStrProp( MessageContext.ENGINE_HANDLER );"
            },
            {
                "sha": "06ff6328b6fcbbc1607ada1f23daed5c53f25ca0",
                "filename": "src/org/apache/axis/transport/http/AxisServlet.java",
                "status": "modified",
                "additions": 9,
                "deletions": 7,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/transport/http/AxisServlet.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/transport/http/AxisServlet.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/AxisServlet.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -76,7 +76,7 @@\n   public void init() {\n       String param = getInitParameter(\"transport.input\");\n       ServletContext context = getServletConfig().getServletContext();\n-\n+      \n       if (param == null)\n           param = context.getInitParameter(\"transport.input\");\n       if (param != null)\n@@ -102,14 +102,12 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     ServletContext context = config.getServletContext();\n     HttpSession    session = req.getSession();\n \n-    Handler  engine = null ;\n-\n-    //Debug.setDebugLevel( 6 );\n+    AxisEngine  engine = null ;\n \n     /* Get or 'new' the Axis engine object */\n     /***************************************/\n     synchronized(context) {\n-      engine = (Handler) context.getAttribute( AXIS_ENGINE );\n+      engine = (AxisEngine) context.getAttribute( AXIS_ENGINE );\n       if ( engine == null ) {\n         engine = new AxisServer();\n         engine.init();\n@@ -196,8 +194,12 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     /***********************************/\n     msg = msgContext.getResponseMessage();\n     res.setContentType( \"text/xml\" );\n-    String response = (String) msg.getAs(\"String\");\n-    if (msg == null) response=\"No data\";\n+    String response;\n+    if (msg == null) {\n+        response=\"No data\";\n+    } else {\n+        response = (String)msg.getAs(\"String\");\n+    }\n     res.setContentLength( response.length() );\n     res.getWriter().print( response );\n   }"
            },
            {
                "sha": "dca6b0b47870d41ad8c8d7813ec835d20c68f7b2",
                "filename": "src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/SimpleAxisServer.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -103,7 +103,7 @@ private static synchronized AxisServer getAxisServer() {\n     // Axis specific constants\n     private static String transportInName = \"HTTPAction\";\n     private static String transportOutName = \"HTTP.output\";\n-    private static final String AXIS_ENGINE = \"AxisEngine\" ;\n+    //private static final String AXIS_ENGINE = \"AxisEngine\" ;\n     \n     // are we stopped?\n     // latch to true if stop() is called"
            },
            {
                "sha": "37be994adb1269ea59a6f6839e82d45751d836bc",
                "filename": "test/RPCDispatch/TestRPC.java",
                "status": "modified",
                "additions": 22,
                "deletions": 8,
                "changes": 30,
                "blob_url": "https://github.com/apache/axis1-java/blob/ac3876a3d5a87e730475d2959cf44ac73278c61f/test/RPCDispatch/TestRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/ac3876a3d5a87e730475d2959cf44ac73278c61f/test/RPCDispatch/TestRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestRPC.java?ref=ac3876a3d5a87e730475d2959cf44ac73278c61f",
                "patch": "@@ -36,13 +36,13 @@\n     private Handler RPCDispatcher;\n \n     private String SOAPAction = \"urn:reverse\";\n-    private String methodNS   = null;\n+    private String methodNS   = SOAPAction;\n \n     public TestRPC(String name) {\n         super(name);\n         engine.init();\n-        hr = (HandlerRegistry) engine.getOption(Constants.HANDLER_REGISTRY);\n-        sr = (HandlerRegistry) engine.getOption(Constants.SERVICE_REGISTRY);\n+        hr = (HandlerRegistry) engine.getHandlerRegistry();\n+        sr = (HandlerRegistry) engine.getServiceRegistry();\n         RPCDispatcher = hr.find(\"RPCDispatcher\");\n         // Debug.setDebugLevel(5);\n     }\n@@ -53,7 +53,8 @@ public TestRPC(String name) {\n      * @param request XML body of the request\n      * @return Deserialized result\n      */\n-    private final Object rpc(String method, Object[] parms)\n+    private final Object rpc(String method, Object[] parms,\n+                             boolean setService)\n         throws AxisFault\n     {\n \n@@ -70,7 +71,9 @@ private final Object rpc(String method, Object[] parms)\n         MessageContext msgContext = new MessageContext();\n         msgContext.setProperty(Constants.SERVICE_REGISTRY, sr);\n         msgContext.setRequestMessage(new Message(envelope, \"SOAPEnvelope\"));\n-        msgContext.setTargetService(SOAPAction);\n+        if (setService) {\n+            msgContext.setTargetService(SOAPAction);\n+        }\n \n         // Invoke the Axis engine\n         try {\n@@ -109,7 +112,18 @@ public void testReverseString() throws Exception {\n         sr.add(SOAPAction, reverse);\n \n         // invoke the service and verify the result\n-        assertEquals(\"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}));\n+        assertEquals(\"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}, true));\n+    }\n+\n+    public void testReverseBodyDispatch() throws Exception {\n+        // Register the reverseString service\n+        SOAPService reverse = new SOAPService(RPCDispatcher, \"RPCDispatcher\");\n+        reverse.addOption(\"className\", \"test.RPCDispatch.Service\");\n+        reverse.addOption(\"methodName\", \"reverseString\");\n+        sr.add(SOAPAction, reverse);\n+\n+        // invoke the service and verify the result\n+        assertEquals(\"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}, false));\n     }\n \n     /**\n@@ -125,7 +139,7 @@ public void testReverseData() throws Exception {\n         // invoke the service and verify the result\n         Data input    = new Data(5, \"abc\", 3);\n         Data expected = new Data(3, \"cba\", 5);\n-        assertEquals(expected, rpc(\"reverseData\", new Object[] {input}));\n+        assertEquals(expected, rpc(\"reverseData\", new Object[] {input}, true));\n     }\n \n     /**\n@@ -139,6 +153,6 @@ public void testMessageContext() throws Exception {\n         sr.add(SOAPAction, reverse);\n \n         // invoke the service and verify the result\n-        assertEquals(SOAPAction, rpc(\"targetService\", new Object[] {}));\n+        assertEquals(SOAPAction, rpc(\"targetService\", new Object[] {}, true));\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/b8fcd421c884fa16b265d42240837baca0d4b303",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/ec94337387b5d8b044a6510f8b4b81e2537a4d2e",
        "message": "If a <complexType> contains a <sequence> group element, the elements\nmust be written out in the prescribed order when serialized.  A <all> group\ndoes not dictate an ordering.\n\nHowever, by the type a java object gets to the BeanSerializer, there is\nno way to determine if it was constructed from a <sequence> or <all> group.\nTo make matters worse, the PropertyDescriptors (from BeanInfo) are in a\n'random' order.\n\nI added a sortPropertyDescriptors() utility method to the BeanSerializer to attempt to\nsort the PropertyDescriptors according to the order of the 'get' methods.\n(The assumption is that the order of the get methods is the same as the\norder of the elements in a <sequence>...a good assumption if the class was\ngenerated by an emitter.)  There is little performance penalty since the\nPropertyDescriptors are obtained once per class.\n\n(I could have added coded to the BeanDeserializer 'find field by name' loop\nto anticipate the next field being deserialized...)\n\nIn the process of making this change I found/fixed a NullPointerException in Deserializer.\n\nI also added a sequence test to make verify compliance.\n\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252825 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_186",
        "file": [
            {
                "sha": "0c74651d991302d0e4b85d527f22161d05b36e22",
                "filename": "build.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/build.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/build.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/build.xml?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -265,6 +265,7 @@ Copyright:\n       <exclude name=\"test/inout/*.java\" />\n       <exclude name=\"test/multiref/*.java\" />\n       <exclude name=\"test/arrays/*.java\" />\n+      <exclude name=\"test/sequence/*.java\" />\n       <exclude name=\"test/wsdl/Wsdl2javaTestSuite.java\" unless=\"servlet.present\"/>\n       <exclude name=\"test/md5attach/MD5AttachTest.java\" unless=\"attachments.present\"/>\n     </javac>"
            },
            {
                "sha": "62e1dd576619630f40a4fd69345a2d4af13fe0a6",
                "filename": "src/org/apache/axis/encoding/BeanSerializer.java",
                "status": "modified",
                "additions": 64,
                "deletions": 5,
                "changes": 69,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/src/org/apache/axis/encoding/BeanSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/src/org/apache/axis/encoding/BeanSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/BeanSerializer.java?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -69,6 +69,8 @@\n import java.io.ObjectStreamField;\n import java.io.Serializable;\n import java.util.Hashtable;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Constructor;\n \n /**\n  * General purpose serializer/deserializerFactory for an arbitrary java bean.\n@@ -100,6 +102,7 @@ protected void setCls(Class cls) {\n         if (pd==null) {\n             try {\n                pd = Introspector.getBeanInfo(cls).getPropertyDescriptors();\n+               pd = sortPropertyDescriptors(pd,cls);\n             } catch (Exception e) {\n                // this should never happen\n                throw new NullPointerException(e.toString());\n@@ -113,6 +116,61 @@ protected void setCls(Class cls) {\n         return pd;\n     }\n \n+    /** \n+     * This method attempts to sort the property descriptors to match the \n+     * order defined in the class.  This is necessary to support \n+     * xsd:sequence processing, which means that the serialized order of \n+     * properties must match the xml element order.  (This method assumes that the\n+     * order of the set methods matches the xml element order...the emitter \n+     * will always order the set methods according to the xml order.)\n+     */\n+    protected static PropertyDescriptor[] sortPropertyDescriptors(PropertyDescriptor[] oldPd, Class cls) {\n+        try {\n+            // Create a new pd array and index into the array\n+            PropertyDescriptor[] newPd = new PropertyDescriptor[oldPd.length];\n+            int index = 0;\n+            \n+            // Get the methods of the class and build a new pd array\n+            // defined by the order of the get methods.\n+            Method[] methods = cls.getMethods();\n+            for (int i=0; i < methods.length; i++) {\n+                Method method = methods[i];\n+                if (method.getName().startsWith(\"set\")) {\n+                    boolean found = false;\n+                    for (int j=0; j < oldPd.length && !found; j++) {\n+                        if (oldPd[j].getWriteMethod() != null &&\n+                            oldPd[j].getWriteMethod().equals(method)) {\n+                            found = true;\n+                            newPd[index] = oldPd[j];\n+                            index++;\n+                        }\n+                    }\n+                }\n+            }\n+            // Now if there are any additional property descriptors, add them to the end.\n+            if (index < oldPd.length) {\n+                for (int m=0; m < oldPd.length && index < oldPd.length; m++) {\n+                    boolean found = false;           \n+                    for (int n=0; n < index && !found; n++) {\n+                        found = (oldPd[m]==newPd[n]);\n+                    }\n+                    if (!found) {\n+                        newPd[index] = oldPd[m];\n+                        index++;\n+                    }\n+                }\n+            }\n+            // If newPd has same number of elements as oldPd, use newPd.\n+            if (index == oldPd.length) {\n+                oldPd = newPd;\n+            }\n+        } catch (Exception e) {\n+            // Don't sort Property Descriptors if problems occur\n+            return oldPd;\n+        }\n+        return oldPd;\n+    }\n+\n     protected PropertyDescriptor [] getPd(Object val)\n     {\n       if (cls == null) cls = val.getClass();\n@@ -182,11 +240,12 @@ public Deserializer getDeserializer(Class cls) {\n             PropertyDescriptor [] pd =\n                   (PropertyDescriptor [])propertyDescriptors.get(cls);\n             if (pd == null) {\n-              try {\n-                pd = Introspector.getBeanInfo(cls).getPropertyDescriptors();\n-              } catch (IntrospectionException e) {\n-                return null;\n-              }\n+                try {\n+                    pd = Introspector.getBeanInfo(cls).getPropertyDescriptors();\n+                    pd = sortPropertyDescriptors(pd, cls);\n+                } catch (IntrospectionException e) {\n+                    return null;\n+                }\n                 propertyDescriptors.put(cls, pd);\n             }\n "
            },
            {
                "sha": "00391e49d0c85aa689cda324e3b9becdc7a987f6",
                "filename": "src/org/apache/axis/encoding/Deserializer.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/src/org/apache/axis/encoding/Deserializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/src/org/apache/axis/encoding/Deserializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/Deserializer.java?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -449,12 +449,14 @@ public final void endElement(String namespace, String localName,\n         // If this element has an id, then associate the value with the id.\n         // Subsequent hrefs to the id will obtain the value directly.\n         // This is necessary for proper multi-reference deserialization.\n-        String id = context.curElement.getAttributeValue(\"id\");\n-        if (id != null) {\n-            context.addObjectById(id, value);\n-            if (category.isDebugEnabled()) {\n-                category.debug(\"Put deserialized value=\" + value + \" for id= \"+ id);\n-            }     \n+        if (context.curElement != null) {\n+            String id = context.curElement.getAttributeValue(\"id\");\n+            if (id != null) {\n+                context.addObjectById(id, value);\n+                if (category.isDebugEnabled()) {\n+                    category.debug(\"Put deserialized value=\" + value + \" for id= \"+ id);\n+                }     \n+            }\n         }\n     }\n }"
            },
            {
                "sha": "b8fda29cff82aa436f4b4913a95955c93889c205",
                "filename": "test/build_functional_tests.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/test/build_functional_tests.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/test/build_functional_tests.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/build_functional_tests.xml?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -126,6 +126,9 @@ Copyright:\n       <fileset dir=\"${test.dir}\">\n         <include name=\"**/Main.java\"/>\n       </fileset>\n+      <fileset dir=\"${test.dir}\">\n+        <include name=\"sequence/SequenceInfo.java\"/>\n+      </fileset>\n     </copy>\n     <copy todir=\"${build.dir}/work/samples\" overwrite=\"yes\">\n       <fileset dir=\"${samples.dir}\">"
            },
            {
                "sha": "49f745c4449910aaf869dd00a4ef296565564043",
                "filename": "test/sequence/SequenceInfo.java",
                "status": "added",
                "additions": 91,
                "deletions": 0,
                "changes": 91,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceInfo.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceInfo.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceInfo.java?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -0,0 +1,91 @@\n+/**\n+ * SequenceInfo.java\n+ *\n+ * Hand modified to add code that checks for proper serialization order.\n+ * @author: Rich Scheuerle (scheu@us.ibm.com)\n+ */\n+\n+package test.sequence;\n+\n+import java.util.Vector;\n+\n+public class SequenceInfo implements java.io.Serializable {\n+    private int zero;\n+    private int one;\n+    private int two;\n+    private int three;\n+    private int four;\n+    private int five;\n+    private Vector v;\n+\n+    public SequenceInfo() {\n+        v = new Vector();\n+    }\n+\n+    public SequenceInfo(int zero, int one, int two, int three, int four, int five) {\n+        this.zero = zero;\n+        this.one = one;\n+        this.two = two;\n+        this.three = three;\n+        this.four = four;\n+        this.five = five;\n+    }\n+\n+    public int getZero() {\n+        return zero;\n+    }\n+\n+    public void setZero(int zero) {\n+        this.zero = zero;\n+        v.add(\"zero\");\n+    }\n+\n+    public int getOne() {\n+        return one;\n+    }\n+\n+    public void setOne(int one) {\n+        this.one = one;\n+        v.add(\"one\");\n+    }\n+\n+    public int getTwo() {\n+        return two;\n+    }\n+\n+    public void setTwo(int two) {\n+        this.two = two;\n+        v.add(\"two\");\n+    }\n+\n+    public int getThree() {\n+        return three;\n+    }\n+\n+    public void setThree(int three) {\n+        this.three = three;\n+        v.add(\"three\");\n+    }\n+\n+    public int getFour() {\n+        return four;\n+    }\n+\n+    public void setFour(int four) {\n+        this.four = four;\n+        v.add(\"four\");\n+    }\n+\n+    public int getFive() {\n+        return five;\n+    }\n+\n+    public void setFive(int five) {\n+        this.five = five;\n+        v.add(\"five\");\n+    }\n+\n+    public Vector order() { \n+        return v;\n+    }\n+}"
            },
            {
                "sha": "8ceddbbfa5aa49625544af1ec26fa3f8cb5f1494",
                "filename": "test/sequence/SequenceTest.wsdl",
                "status": "added",
                "additions": 77,
                "deletions": 0,
                "changes": 77,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceTest.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceTest.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceTest.wsdl?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" ?>\n+\n+<definitions name=\"urn:SequenceTest\"\n+             targetNamespace=\"urn:SequenceTest2\"\n+             xmlns:tns=\"urn:SequenceTest2\"\n+             xmlns:typens=\"urn:SequenceTest2\"\n+             xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\"\n+             xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n+             xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding\"\n+             xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\"\n+             xmlns=\"http://schemas.xmlsoap.org/wsdl/\">\n+\n+  <!-- type defs -->\n+  <types>\n+    <xsd:schema targetNamespace=\"urn:SequenceTest2\"\n+                xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n+\n+\n+\n+      <xsd:complexType name=\"sequenceInfo\">\n+        <xsd:sequence>\n+            <xsd:element name=\"zero\"  type=\"xsd:int\"/>\n+            <xsd:element name=\"one\"   type=\"xsd:int\"/>\n+            <xsd:element name=\"two\"   type=\"xsd:int\"/>\n+            <xsd:element name=\"three\" type=\"xsd:int\"/>\n+            <xsd:element name=\"four\"  type=\"xsd:int\"/>\n+            <xsd:element name=\"five\"  type=\"xsd:int\"/>\n+        </xsd:sequence>\n+      </xsd:complexType>\n+    </xsd:schema>\n+  </types>\n+\n+  <!-- message declns -->\n+  <message name=\"testSequenceRequest\">\n+    <part name=\"info\" type=\"typens:sequenceInfo\"/>\n+  </message>\n+\n+  <message name=\"testSequenceResponse\">\n+    <part name=\"rc\" type=\"xsd:int\"/>\n+  </message>\n+\n+  <!-- port type declns -->\n+  <portType name=\"SequenceTest\">\n+    <operation name=\"testSequence\">\n+      <input message=\"tns:testSequenceRequest\"/>\n+      <output message=\"tns:testSequenceResponse\"/>\n+    </operation>\n+  </portType>\n+\n+  <!-- binding declns -->\n+  <binding name=\"SequenceTestSOAPBinding\" type=\"tns:SequenceTest\">\n+    <soap:binding style=\"rpc\"\n+                  transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n+    <operation name=\"testSequence\">\n+      <soap:operation soapAction=\"\"/>\n+      <input>\n+        <soap:body use=\"encoded\"\n+                   namespace=\"urn:SequenceTest\"\n+                   encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"/>\n+      </input>\n+      <output>\n+        <soap:body use=\"encoded\"\n+                   namespace=\"urn:SequenceTest\"\n+                   encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"/>\n+      </output>\n+    </operation>\n+  </binding>\n+\n+  <!-- service decln -->\n+  <service name=\"SequenceTestService\">\n+    <port name=\"SequenceTest\" binding=\"tns:SequenceTestSOAPBinding\">\n+      <soap:address location=\"http://localhost:8080/axis/services/SequenceTest\"/>\n+    </port>\n+  </service>\n+\n+</definitions>\n+"
            },
            {
                "sha": "be0d4920df63b65a560b92ea0c476b21e90b383a",
                "filename": "test/sequence/SequenceTestSOAPBindingImpl.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceTestSOAPBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceTestSOAPBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceTestSOAPBindingImpl.java?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -0,0 +1,35 @@\n+/**\n+ * SequenceTestSOAPBindingImpl.java\n+ *\n+ * @author: Rich Scheuerle (scheu@us.ibm.com)\n+ */\n+\n+package test.sequence;\n+import java.util.Vector;\n+\n+public class SequenceTestSOAPBindingImpl implements test.sequence.SequenceTest {\n+    public int testSequence(test.sequence.SequenceInfo info) throws java.rmi.RemoteException {\n+        Vector v = info.order();\n+        if (v == null || v.size() != 6) \n+            return -100;\n+        if (!((String)v.elementAt(0)).equals(\"zero\")) {\n+            return -1;\n+        }\n+        if (!((String)v.elementAt(1)).equals(\"one\")) {\n+            return -2;\n+        }\n+        if (!((String)v.elementAt(2)).equals(\"two\")) {\n+            return -3;\n+        }\n+        if (!((String)v.elementAt(3)).equals(\"three\")) {\n+            return -4;\n+        }\n+        if (!((String)v.elementAt(4)).equals(\"four\")) {\n+            return -5;\n+        }\n+        if (!((String)v.elementAt(5)).equals(\"five\")) {\n+            return -6;\n+        }\n+        return 0; // Success\n+    }\n+}"
            },
            {
                "sha": "e410499e63da5b409296f5acfd9791d47d92e509",
                "filename": "test/sequence/SequenceTestServiceTestCase.java",
                "status": "added",
                "additions": 26,
                "deletions": 0,
                "changes": 26,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceTestServiceTestCase.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/test/sequence/SequenceTestServiceTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceTestServiceTestCase.java?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -0,0 +1,26 @@\n+/**\n+ * SequenceTestServiceTestCase.java\n+ *\n+ * @author: Rich Scheuerle (scheu@us.ibm.com)\n+ */\n+\n+package test.sequence;\n+\n+public class SequenceTestServiceTestCase extends junit.framework.TestCase {\n+    public SequenceTestServiceTestCase(String name) {\n+        super(name);\n+    }\n+\n+    public void testSequenceTest() {\n+        test.sequence.SequenceTest binding = new SequenceTestService().getSequenceTest();\n+        assertTrue(\"binding is null\", binding != null);\n+        try {\n+            int value = -3;\n+            value = binding.testSequence(new test.sequence.SequenceInfo());\n+            assertTrue(\"Test Sequence Failed=\"+value , (value == 0));\n+        } catch (java.rmi.RemoteException re) {\n+            throw new junit.framework.AssertionFailedError(\"Remote Exception caught: \" + re );\n+        }\n+    }\n+}\n+"
            },
            {
                "sha": "e8900abcc8d4861bc38c1bc8bbd5bae21b42c0a0",
                "filename": "test/wsdl/Wsdl2javaTestSuite.list",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/test/wsdl/Wsdl2javaTestSuite.list",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/test/wsdl/Wsdl2javaTestSuite.list",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.list?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -2,6 +2,7 @@ samples/addr/AddressBook.wsdl\n test/arrays/ArrayTest.wsdl\n test/inout/inout.wsdl\n test/multiref/MultiRefTest.wsdl\n+test/sequence/SequenceTest.wsdl\n http://www.whitemesa.com/interop/InteropTest.wsdl\n #http://www.whitemesa.com/interop/InteropTestB.wsdl\n #http://www.whitemesa.com/interop/InteropTestC.wsdl"
            },
            {
                "sha": "c21b2282899bafa2d8f8c11a70f252ab9be3f876",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 14,
                "deletions": 2,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/b8fcd421c884fa16b265d42240837baca0d4b303/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/b8fcd421c884fa16b265d42240837baca0d4b303/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=b8fcd421c884fa16b265d42240837baca0d4b303",
                "patch": "@@ -34,7 +34,7 @@\n         <mapping namespace=\"urn:AddressFetcher2\" package=\"samples.addr\"/>\n     </wsdl2java>\n \n-    <!-- MultiRef Sample -->\n+    <!-- MultiRef Test -->\n     <wsdl2java url=\"test/multiref/MultiRefTest.wsdl\"\n                output=\"build/work\"\n                deployscope=\"session\"\n@@ -46,7 +46,19 @@\n         <mapping namespace=\"urn:MultiRefTest2\" package=\"test.multiref\"/>\n     </wsdl2java>\n \n-    <!-- MultiRef Sample -->\n+    <!-- Sequence Test -->\n+    <wsdl2java url=\"test/sequence/SequenceTest.wsdl\"\n+               output=\"build/work\"\n+               deployscope=\"session\"\n+               skeleton=\"yes\"\n+               messagecontext=\"no\"\n+               noimports=\"no\"\n+               verbose=\"no\"\n+               testcase=\"no\">\n+        <mapping namespace=\"urn:SequenceTest2\" package=\"test.sequence\"/>\n+    </wsdl2java>\n+\n+    <!-- ArrayTest Test -->\n     <wsdl2java url=\"test/arrays/ArrayTest.wsdl\"\n                output=\"build/work\"\n                deployscope=\"session\""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/65f0a071882ee302a26a335c7c1419d4c8f8cd19",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/984a53244b45d2c9368bd18311b152927e7ff201",
        "message": "If a <complexType> contains a <sequence> group element, the elements\nmust be written out in the prescribed order when serialized.  A <all> group\ndoes not dictate an ordering.\n\nHowever, by the type a java object gets to the BeanSerializer, there is\nno way to determine if it was constructed from a <sequence> or <all> group.\nTo make matters worse, the PropertyDescriptors (from BeanInfo) are in a\n'random' order.\n\nI added a sortPropertyDescriptors() utility method to the BeanSerializer to attempt to\nsort the PropertyDescriptors according to the order of the 'get' methods.\n(The assumption is that the order of the get methods is the same as the\norder of the elements in a <sequence>...a good assumption if the class was\ngenerated by an emitter.)  There is little performance penalty since the\nPropertyDescriptors are obtained once per class.\n\n(I could have added coded to the BeanDeserializer 'find field by name' loop\nto anticipate the next field being deserialized...)\n\nIn the process of making this change I found/fixed a NullPointerException in Deserializer.\n\nI also added a sequence test to make verify compliance.\n\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245753 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_187",
        "file": [
            {
                "sha": "0c74651d991302d0e4b85d527f22161d05b36e22",
                "filename": "build.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/build.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/build.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/build.xml?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -265,6 +265,7 @@ Copyright:\n       <exclude name=\"test/inout/*.java\" />\n       <exclude name=\"test/multiref/*.java\" />\n       <exclude name=\"test/arrays/*.java\" />\n+      <exclude name=\"test/sequence/*.java\" />\n       <exclude name=\"test/wsdl/Wsdl2javaTestSuite.java\" unless=\"servlet.present\"/>\n       <exclude name=\"test/md5attach/MD5AttachTest.java\" unless=\"attachments.present\"/>\n     </javac>"
            },
            {
                "sha": "62e1dd576619630f40a4fd69345a2d4af13fe0a6",
                "filename": "src/org/apache/axis/encoding/BeanSerializer.java",
                "status": "modified",
                "additions": 64,
                "deletions": 5,
                "changes": 69,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/src/org/apache/axis/encoding/BeanSerializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/src/org/apache/axis/encoding/BeanSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/BeanSerializer.java?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -69,6 +69,8 @@\n import java.io.ObjectStreamField;\n import java.io.Serializable;\n import java.util.Hashtable;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Constructor;\n \n /**\n  * General purpose serializer/deserializerFactory for an arbitrary java bean.\n@@ -100,6 +102,7 @@ protected void setCls(Class cls) {\n         if (pd==null) {\n             try {\n                pd = Introspector.getBeanInfo(cls).getPropertyDescriptors();\n+               pd = sortPropertyDescriptors(pd,cls);\n             } catch (Exception e) {\n                // this should never happen\n                throw new NullPointerException(e.toString());\n@@ -113,6 +116,61 @@ protected void setCls(Class cls) {\n         return pd;\n     }\n \n+    /** \n+     * This method attempts to sort the property descriptors to match the \n+     * order defined in the class.  This is necessary to support \n+     * xsd:sequence processing, which means that the serialized order of \n+     * properties must match the xml element order.  (This method assumes that the\n+     * order of the set methods matches the xml element order...the emitter \n+     * will always order the set methods according to the xml order.)\n+     */\n+    protected static PropertyDescriptor[] sortPropertyDescriptors(PropertyDescriptor[] oldPd, Class cls) {\n+        try {\n+            // Create a new pd array and index into the array\n+            PropertyDescriptor[] newPd = new PropertyDescriptor[oldPd.length];\n+            int index = 0;\n+            \n+            // Get the methods of the class and build a new pd array\n+            // defined by the order of the get methods.\n+            Method[] methods = cls.getMethods();\n+            for (int i=0; i < methods.length; i++) {\n+                Method method = methods[i];\n+                if (method.getName().startsWith(\"set\")) {\n+                    boolean found = false;\n+                    for (int j=0; j < oldPd.length && !found; j++) {\n+                        if (oldPd[j].getWriteMethod() != null &&\n+                            oldPd[j].getWriteMethod().equals(method)) {\n+                            found = true;\n+                            newPd[index] = oldPd[j];\n+                            index++;\n+                        }\n+                    }\n+                }\n+            }\n+            // Now if there are any additional property descriptors, add them to the end.\n+            if (index < oldPd.length) {\n+                for (int m=0; m < oldPd.length && index < oldPd.length; m++) {\n+                    boolean found = false;           \n+                    for (int n=0; n < index && !found; n++) {\n+                        found = (oldPd[m]==newPd[n]);\n+                    }\n+                    if (!found) {\n+                        newPd[index] = oldPd[m];\n+                        index++;\n+                    }\n+                }\n+            }\n+            // If newPd has same number of elements as oldPd, use newPd.\n+            if (index == oldPd.length) {\n+                oldPd = newPd;\n+            }\n+        } catch (Exception e) {\n+            // Don't sort Property Descriptors if problems occur\n+            return oldPd;\n+        }\n+        return oldPd;\n+    }\n+\n     protected PropertyDescriptor [] getPd(Object val)\n     {\n       if (cls == null) cls = val.getClass();\n@@ -182,11 +240,12 @@ public Deserializer getDeserializer(Class cls) {\n             PropertyDescriptor [] pd =\n                   (PropertyDescriptor [])propertyDescriptors.get(cls);\n             if (pd == null) {\n-              try {\n-                pd = Introspector.getBeanInfo(cls).getPropertyDescriptors();\n-              } catch (IntrospectionException e) {\n-                return null;\n-              }\n+                try {\n+                    pd = Introspector.getBeanInfo(cls).getPropertyDescriptors();\n+                    pd = sortPropertyDescriptors(pd, cls);\n+                } catch (IntrospectionException e) {\n+                    return null;\n+                }\n                 propertyDescriptors.put(cls, pd);\n             }\n "
            },
            {
                "sha": "00391e49d0c85aa689cda324e3b9becdc7a987f6",
                "filename": "src/org/apache/axis/encoding/Deserializer.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/src/org/apache/axis/encoding/Deserializer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/src/org/apache/axis/encoding/Deserializer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/Deserializer.java?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -449,12 +449,14 @@ public final void endElement(String namespace, String localName,\n         // If this element has an id, then associate the value with the id.\n         // Subsequent hrefs to the id will obtain the value directly.\n         // This is necessary for proper multi-reference deserialization.\n-        String id = context.curElement.getAttributeValue(\"id\");\n-        if (id != null) {\n-            context.addObjectById(id, value);\n-            if (category.isDebugEnabled()) {\n-                category.debug(\"Put deserialized value=\" + value + \" for id= \"+ id);\n-            }     \n+        if (context.curElement != null) {\n+            String id = context.curElement.getAttributeValue(\"id\");\n+            if (id != null) {\n+                context.addObjectById(id, value);\n+                if (category.isDebugEnabled()) {\n+                    category.debug(\"Put deserialized value=\" + value + \" for id= \"+ id);\n+                }     \n+            }\n         }\n     }\n }"
            },
            {
                "sha": "b8fda29cff82aa436f4b4913a95955c93889c205",
                "filename": "test/build_functional_tests.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/build_functional_tests.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/build_functional_tests.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/build_functional_tests.xml?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -126,6 +126,9 @@ Copyright:\n       <fileset dir=\"${test.dir}\">\n         <include name=\"**/Main.java\"/>\n       </fileset>\n+      <fileset dir=\"${test.dir}\">\n+        <include name=\"sequence/SequenceInfo.java\"/>\n+      </fileset>\n     </copy>\n     <copy todir=\"${build.dir}/work/samples\" overwrite=\"yes\">\n       <fileset dir=\"${samples.dir}\">"
            },
            {
                "sha": "49f745c4449910aaf869dd00a4ef296565564043",
                "filename": "test/sequence/SequenceInfo.java",
                "status": "added",
                "additions": 91,
                "deletions": 0,
                "changes": 91,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceInfo.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceInfo.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceInfo.java?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -0,0 +1,91 @@\n+/**\n+ * SequenceInfo.java\n+ *\n+ * Hand modified to add code that checks for proper serialization order.\n+ * @author: Rich Scheuerle (scheu@us.ibm.com)\n+ */\n+\n+package test.sequence;\n+\n+import java.util.Vector;\n+\n+public class SequenceInfo implements java.io.Serializable {\n+    private int zero;\n+    private int one;\n+    private int two;\n+    private int three;\n+    private int four;\n+    private int five;\n+    private Vector v;\n+\n+    public SequenceInfo() {\n+        v = new Vector();\n+    }\n+\n+    public SequenceInfo(int zero, int one, int two, int three, int four, int five) {\n+        this.zero = zero;\n+        this.one = one;\n+        this.two = two;\n+        this.three = three;\n+        this.four = four;\n+        this.five = five;\n+    }\n+\n+    public int getZero() {\n+        return zero;\n+    }\n+\n+    public void setZero(int zero) {\n+        this.zero = zero;\n+        v.add(\"zero\");\n+    }\n+\n+    public int getOne() {\n+        return one;\n+    }\n+\n+    public void setOne(int one) {\n+        this.one = one;\n+        v.add(\"one\");\n+    }\n+\n+    public int getTwo() {\n+        return two;\n+    }\n+\n+    public void setTwo(int two) {\n+        this.two = two;\n+        v.add(\"two\");\n+    }\n+\n+    public int getThree() {\n+        return three;\n+    }\n+\n+    public void setThree(int three) {\n+        this.three = three;\n+        v.add(\"three\");\n+    }\n+\n+    public int getFour() {\n+        return four;\n+    }\n+\n+    public void setFour(int four) {\n+        this.four = four;\n+        v.add(\"four\");\n+    }\n+\n+    public int getFive() {\n+        return five;\n+    }\n+\n+    public void setFive(int five) {\n+        this.five = five;\n+        v.add(\"five\");\n+    }\n+\n+    public Vector order() { \n+        return v;\n+    }\n+}"
            },
            {
                "sha": "8ceddbbfa5aa49625544af1ec26fa3f8cb5f1494",
                "filename": "test/sequence/SequenceTest.wsdl",
                "status": "added",
                "additions": 77,
                "deletions": 0,
                "changes": 77,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceTest.wsdl",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceTest.wsdl",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceTest.wsdl?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" ?>\n+\n+<definitions name=\"urn:SequenceTest\"\n+             targetNamespace=\"urn:SequenceTest2\"\n+             xmlns:tns=\"urn:SequenceTest2\"\n+             xmlns:typens=\"urn:SequenceTest2\"\n+             xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\"\n+             xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n+             xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding\"\n+             xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\"\n+             xmlns=\"http://schemas.xmlsoap.org/wsdl/\">\n+\n+  <!-- type defs -->\n+  <types>\n+    <xsd:schema targetNamespace=\"urn:SequenceTest2\"\n+                xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">\n+\n+\n+\n+      <xsd:complexType name=\"sequenceInfo\">\n+        <xsd:sequence>\n+            <xsd:element name=\"zero\"  type=\"xsd:int\"/>\n+            <xsd:element name=\"one\"   type=\"xsd:int\"/>\n+            <xsd:element name=\"two\"   type=\"xsd:int\"/>\n+            <xsd:element name=\"three\" type=\"xsd:int\"/>\n+            <xsd:element name=\"four\"  type=\"xsd:int\"/>\n+            <xsd:element name=\"five\"  type=\"xsd:int\"/>\n+        </xsd:sequence>\n+      </xsd:complexType>\n+    </xsd:schema>\n+  </types>\n+\n+  <!-- message declns -->\n+  <message name=\"testSequenceRequest\">\n+    <part name=\"info\" type=\"typens:sequenceInfo\"/>\n+  </message>\n+\n+  <message name=\"testSequenceResponse\">\n+    <part name=\"rc\" type=\"xsd:int\"/>\n+  </message>\n+\n+  <!-- port type declns -->\n+  <portType name=\"SequenceTest\">\n+    <operation name=\"testSequence\">\n+      <input message=\"tns:testSequenceRequest\"/>\n+      <output message=\"tns:testSequenceResponse\"/>\n+    </operation>\n+  </portType>\n+\n+  <!-- binding declns -->\n+  <binding name=\"SequenceTestSOAPBinding\" type=\"tns:SequenceTest\">\n+    <soap:binding style=\"rpc\"\n+                  transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n+    <operation name=\"testSequence\">\n+      <soap:operation soapAction=\"\"/>\n+      <input>\n+        <soap:body use=\"encoded\"\n+                   namespace=\"urn:SequenceTest\"\n+                   encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"/>\n+      </input>\n+      <output>\n+        <soap:body use=\"encoded\"\n+                   namespace=\"urn:SequenceTest\"\n+                   encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"/>\n+      </output>\n+    </operation>\n+  </binding>\n+\n+  <!-- service decln -->\n+  <service name=\"SequenceTestService\">\n+    <port name=\"SequenceTest\" binding=\"tns:SequenceTestSOAPBinding\">\n+      <soap:address location=\"http://localhost:8080/axis/services/SequenceTest\"/>\n+    </port>\n+  </service>\n+\n+</definitions>\n+"
            },
            {
                "sha": "be0d4920df63b65a560b92ea0c476b21e90b383a",
                "filename": "test/sequence/SequenceTestSOAPBindingImpl.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceTestSOAPBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceTestSOAPBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceTestSOAPBindingImpl.java?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -0,0 +1,35 @@\n+/**\n+ * SequenceTestSOAPBindingImpl.java\n+ *\n+ * @author: Rich Scheuerle (scheu@us.ibm.com)\n+ */\n+\n+package test.sequence;\n+import java.util.Vector;\n+\n+public class SequenceTestSOAPBindingImpl implements test.sequence.SequenceTest {\n+    public int testSequence(test.sequence.SequenceInfo info) throws java.rmi.RemoteException {\n+        Vector v = info.order();\n+        if (v == null || v.size() != 6) \n+            return -100;\n+        if (!((String)v.elementAt(0)).equals(\"zero\")) {\n+            return -1;\n+        }\n+        if (!((String)v.elementAt(1)).equals(\"one\")) {\n+            return -2;\n+        }\n+        if (!((String)v.elementAt(2)).equals(\"two\")) {\n+            return -3;\n+        }\n+        if (!((String)v.elementAt(3)).equals(\"three\")) {\n+            return -4;\n+        }\n+        if (!((String)v.elementAt(4)).equals(\"four\")) {\n+            return -5;\n+        }\n+        if (!((String)v.elementAt(5)).equals(\"five\")) {\n+            return -6;\n+        }\n+        return 0; // Success\n+    }\n+}"
            },
            {
                "sha": "e410499e63da5b409296f5acfd9791d47d92e509",
                "filename": "test/sequence/SequenceTestServiceTestCase.java",
                "status": "added",
                "additions": 26,
                "deletions": 0,
                "changes": 26,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceTestServiceTestCase.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/sequence/SequenceTestServiceTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/sequence/SequenceTestServiceTestCase.java?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -0,0 +1,26 @@\n+/**\n+ * SequenceTestServiceTestCase.java\n+ *\n+ * @author: Rich Scheuerle (scheu@us.ibm.com)\n+ */\n+\n+package test.sequence;\n+\n+public class SequenceTestServiceTestCase extends junit.framework.TestCase {\n+    public SequenceTestServiceTestCase(String name) {\n+        super(name);\n+    }\n+\n+    public void testSequenceTest() {\n+        test.sequence.SequenceTest binding = new SequenceTestService().getSequenceTest();\n+        assertTrue(\"binding is null\", binding != null);\n+        try {\n+            int value = -3;\n+            value = binding.testSequence(new test.sequence.SequenceInfo());\n+            assertTrue(\"Test Sequence Failed=\"+value , (value == 0));\n+        } catch (java.rmi.RemoteException re) {\n+            throw new junit.framework.AssertionFailedError(\"Remote Exception caught: \" + re );\n+        }\n+    }\n+}\n+"
            },
            {
                "sha": "e8900abcc8d4861bc38c1bc8bbd5bae21b42c0a0",
                "filename": "test/wsdl/Wsdl2javaTestSuite.list",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/wsdl/Wsdl2javaTestSuite.list",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/wsdl/Wsdl2javaTestSuite.list",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.list?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -2,6 +2,7 @@ samples/addr/AddressBook.wsdl\n test/arrays/ArrayTest.wsdl\n test/inout/inout.wsdl\n test/multiref/MultiRefTest.wsdl\n+test/sequence/SequenceTest.wsdl\n http://www.whitemesa.com/interop/InteropTest.wsdl\n #http://www.whitemesa.com/interop/InteropTestB.wsdl\n #http://www.whitemesa.com/interop/InteropTestC.wsdl"
            },
            {
                "sha": "c21b2282899bafa2d8f8c11a70f252ab9be3f876",
                "filename": "test/wsdl/Wsdl2javaTestSuite.xml",
                "status": "modified",
                "additions": 14,
                "deletions": 2,
                "changes": 16,
                "blob_url": "https://github.com/apache/axis1-java/blob/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/wsdl/Wsdl2javaTestSuite.xml",
                "raw_url": "https://github.com/apache/axis1-java/raw/65f0a071882ee302a26a335c7c1419d4c8f8cd19/test/wsdl/Wsdl2javaTestSuite.xml",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/Wsdl2javaTestSuite.xml?ref=65f0a071882ee302a26a335c7c1419d4c8f8cd19",
                "patch": "@@ -34,7 +34,7 @@\n         <mapping namespace=\"urn:AddressFetcher2\" package=\"samples.addr\"/>\n     </wsdl2java>\n \n-    <!-- MultiRef Sample -->\n+    <!-- MultiRef Test -->\n     <wsdl2java url=\"test/multiref/MultiRefTest.wsdl\"\n                output=\"build/work\"\n                deployscope=\"session\"\n@@ -46,7 +46,19 @@\n         <mapping namespace=\"urn:MultiRefTest2\" package=\"test.multiref\"/>\n     </wsdl2java>\n \n-    <!-- MultiRef Sample -->\n+    <!-- Sequence Test -->\n+    <wsdl2java url=\"test/sequence/SequenceTest.wsdl\"\n+               output=\"build/work\"\n+               deployscope=\"session\"\n+               skeleton=\"yes\"\n+               messagecontext=\"no\"\n+               noimports=\"no\"\n+               verbose=\"no\"\n+               testcase=\"no\">\n+        <mapping namespace=\"urn:SequenceTest2\" package=\"test.sequence\"/>\n+    </wsdl2java>\n+\n+    <!-- ArrayTest Test -->\n     <wsdl2java url=\"test/arrays/ArrayTest.wsdl\"\n                output=\"build/work\"\n                deployscope=\"session\""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/54be473dff2f4c677216574068f015bfe1e06d3f",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/830a2652f3d5390ac2062caff6f6b790b0fd3218",
        "message": "Improve handling of one-way operations, for JAX-RPC TCK and\nin general.  Also a couple of other minor fixes.\n\n* Add an \"mep\" field to the OperationDesc, which is currently\n  WSDL4J's OperationType type.  This defaults to request/\n  response.\n\n* Add an \"mep\" field to the Parameters object (which is\n  very badly named, btw) so the WSDL reader can figure out\n  the MEP and store it.\n\n* Add an \"mep\" attribute to the <operation> element in WSDD,\n  which sets the OperationDesc's mep appropriately.\n\n* When writing deploy.wsdd, set the mep attribute based on\n  the WSDL operation.  Don't bother writing it if it's\n  request/response.\n\n* If an operation is one-way, don't bother writing <output>\n  elements in the generated WSDL.\n\n* If an operation is one-way, don't bother building a SOAP\n  envelope for the response in the RPCProvider.\n\n* Fix potential NPE in MustUnderstandChecker.\n\n* Improve efficiency of WSDL writing just a bit by clearing\n  out the mappedTypes array in the Types object in cases\n  where we've already written all the mapped types.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@258453 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_188",
        "file": [
            {
                "sha": "8617b31c6595212c299c77bd44021d001af1f757",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDConstants.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/deployment/wsdd/WSDDConstants.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/deployment/wsdd/WSDDConstants.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDConstants.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -154,4 +154,5 @@\n     public static final String ATTR_CLASSNAME = \"classname\";\n     public static final String ATTR_CLASS = \"class\";\n     public static final String ATTR_SOAPACTION = \"soapAction\";\n+    public static final String ATTR_MEP = \"mep\";\n }"
            },
            {
                "sha": "3e494d01b2d2ac703ec54d5d517da015c4bdf1bc",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDOperation.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -88,6 +88,11 @@ public WSDDOperation(Element e, ServiceDesc parent)\n         if (soapAction != null) {\n             desc.setSoapAction(soapAction);\n         }\n+        \n+        String mepString = e.getAttribute(ATTR_MEP);\n+        if (mepString != null) {\n+            desc.setMep(mepString);\n+        }\n \n         Element [] parameters = getChildElements(e, ELEM_WSDD_PARAM);\n         for (int i = 0; i < parameters.length; i++) {"
            },
            {
                "sha": "88a9e163179a0b95e0771a6aff0d21769ffa4f6c",
                "filename": "src/org/apache/axis/description/OperationDesc.java",
                "status": "modified",
                "additions": 36,
                "deletions": 0,
                "changes": 36,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/description/OperationDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/description/OperationDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/OperationDesc.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -21,10 +21,13 @@\n import org.apache.commons.logging.Log;\n \n import javax.xml.namespace.QName;\n+import javax.wsdl.OperationType;\n import java.io.Serializable;\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Iterator;\n+import java.util.Map;\n+import java.util.HashMap;\n \n \n /**\n@@ -48,6 +51,15 @@\n     public static final int MSG_METHOD_DOCUMENT = 4;\n \n     public static final int MSG_METHOD_NONCONFORMING = -4;\n+    \n+    public static Map mepStrings = new HashMap();\n+    \n+    static {\n+        mepStrings.put(\"request-response\", OperationType.REQUEST_RESPONSE);\n+        mepStrings.put(\"oneway\", OperationType.ONE_WAY);\n+        mepStrings.put(\"solicit-response\", OperationType.SOLICIT_RESPONSE);\n+        mepStrings.put(\"notification\", OperationType.NOTIFICATION);\n+    }\n \n     protected static Log log =\n         LogFactory.getLog(OperationDesc.class.getName());\n@@ -89,6 +101,11 @@\n \n     /** The documentation for the operation */\n \tprivate String documentation = null;\n+    \n+    /** The MEP for this Operation - uses the WSDL4J OperationType for now\n+     * but we might want to have our own extensible enum for WSDL 2.0\n+     */ \n+    private OperationType mep = OperationType.REQUEST_RESPONSE;\n \n     /**\n      * Default constructor.\n@@ -533,5 +550,24 @@ public int getMessageOperationStyle() {\n     public void setMessageOperationStyle(int messageOperationStyle) {\n         this.messageOperationStyle = messageOperationStyle;\n     }\n+\n+    public OperationType getMep() {\n+        return mep;\n+    }\n+\n+    public void setMep(OperationType mep) {\n+        this.mep = mep;\n+    }\n+    \n+    /**\n+     * Set the MEP using a string like \"request-response\"\n+     * @param mepString\n+     */ \n+    public void setMep(String mepString) {\n+        OperationType newMep = (OperationType)mepStrings.get(mepString);\n+        if (newMep != null) {\n+            mep = newMep;\n+        }\n+    }\n }\n "
            },
            {
                "sha": "7cd14ff4a9b6ada3bd9cae02849dc893544f111f",
                "filename": "src/org/apache/axis/handlers/soap/MustUnderstandChecker.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/handlers/soap/MustUnderstandChecker.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/handlers/soap/MustUnderstandChecker.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/handlers/soap/MustUnderstandChecker.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -19,6 +19,7 @@\n import org.apache.axis.AxisFault;\n import org.apache.axis.Constants;\n import org.apache.axis.MessageContext;\n+import org.apache.axis.Message;\n import org.apache.axis.components.logger.LogFactory;\n import org.apache.axis.handlers.BasicHandler;\n import org.apache.axis.message.SOAPEnvelope;\n@@ -52,8 +53,12 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         if (log.isDebugEnabled()) {\n             log.debug(Messages.getMessage(\"semanticCheck00\"));\n         }\n-        SOAPEnvelope env =\n-                (SOAPEnvelope) msgContext.getCurrentMessage().getSOAPEnvelope();\n+        \n+        Message msg = msgContext.getCurrentMessage();\n+        if (msg == null)\n+            return;  // nothing to do if there's no message\n+        \n+        SOAPEnvelope env = msg.getSOAPEnvelope();\n         Vector headers = null;\n         if (service != null) {\n             ArrayList acts = service.getActors();"
            },
            {
                "sha": "31a9bbf33643699240468dd7a7dd00ad375f064c",
                "filename": "src/org/apache/axis/providers/java/JavaProvider.java",
                "status": "modified",
                "additions": 29,
                "deletions": 13,
                "changes": 42,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/providers/java/JavaProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/providers/java/JavaProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/JavaProvider.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -24,6 +24,7 @@\n import org.apache.axis.MessageContext;\n import org.apache.axis.components.logger.LogFactory;\n import org.apache.axis.description.JavaServiceDesc;\n+import org.apache.axis.description.OperationDesc;\n import org.apache.axis.enum.Scope;\n import org.apache.axis.handlers.soap.SOAPService;\n import org.apache.axis.message.SOAPEnvelope;\n@@ -38,6 +39,7 @@\n \n import javax.xml.rpc.holders.IntHolder;\n import javax.xml.rpc.server.ServiceLifecycle;\n+import javax.wsdl.OperationType;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.StringTokenizer;\n@@ -282,21 +284,35 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n         try {\n             serviceObject = getServiceObject(msgContext, service, clsName, scope);\n \n-            Message        resMsg  = msgContext.getResponseMessage();\n-            SOAPEnvelope   resEnv;\n-\n-            // If we didn't have a response message, make sure we set one up\n-            // with the appropriate versions of SOAP and Schema\n-            if (resMsg == null) {\n-                resEnv  = new SOAPEnvelope(msgContext.getSOAPConstants(),\n-                                           msgContext.getSchemaVersion());\n-\n-                resMsg = new Message(resEnv);\n-                msgContext.setResponseMessage( resMsg );\n+            SOAPEnvelope   resEnv = null;\n+\n+            // If there IS a response message AND this is a one-way operation,\n+            // we delete the response message here.  Note that this might\n+            // cause confusing results in some cases - i.e. nothing fails,\n+            // but your response headers don't go anywhere either.  It might\n+            // be nice if in the future there was a way to detect an error\n+            // when trying to install a response message in a MessageContext\n+            // associated with a one-way operation....\n+            OperationDesc operation = msgContext.getOperation();\n+            if (operation != null &&\n+                    operation.getMep() == OperationType.ONE_WAY) {\n+                msgContext.setResponseMessage(null);\n             } else {\n-                resEnv  = resMsg.getSOAPEnvelope();\n+                Message        resMsg  = msgContext.getResponseMessage();\n+\n+                // If we didn't have a response message, make sure we set one up\n+                // with the appropriate versions of SOAP and Schema\n+                if (resMsg == null) {\n+                    resEnv  = new SOAPEnvelope(msgContext.getSOAPConstants(),\n+                                               msgContext.getSchemaVersion());\n+                    \n+                    resMsg = new Message(resEnv);\n+                    msgContext.setResponseMessage( resMsg );\n+                } else {\n+                    resEnv  = resMsg.getSOAPEnvelope();\n+                }\n             }\n-\n+            \n             Message        reqMsg  = msgContext.getRequestMessage();\n             SOAPEnvelope   reqEnv  = reqMsg.getSOAPEnvelope();\n "
            },
            {
                "sha": "1d51f87660ee2801b9cbb99352a88cf89169a41e",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -38,6 +38,7 @@\n \n import javax.xml.namespace.QName;\n import javax.xml.rpc.holders.Holder;\n+import javax.wsdl.OperationType;\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Iterator;\n@@ -299,6 +300,11 @@ public void processMessage(MessageContext msgContext,\n                     e);\n         }\n         \n+        /** If this is a one-way operation, there is nothing more to do.\n+         */ \n+        if (operation.getMep() == OperationType.ONE_WAY)\n+            return;\n+        \n         /* Now put the result in the result SOAPEnvelope */\n         /*************************************************/\n         RPCElement resBody = new RPCElement(methodName + \"Response\");"
            },
            {
                "sha": "ac5784a01353e10945fd1b33e807ceef5a16d701",
                "filename": "src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "status": "modified",
                "additions": 47,
                "deletions": 31,
                "changes": 78,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/fromJava/Emitter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/fromJava/Emitter.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -15,7 +15,6 @@\n  */\n package org.apache.axis.wsdl.fromJava;\n \n-import com.ibm.wsdl.BindingFaultImpl;\n import com.ibm.wsdl.extensions.soap.SOAPAddressImpl;\n import com.ibm.wsdl.extensions.soap.SOAPBindingImpl;\n import com.ibm.wsdl.extensions.soap.SOAPBodyImpl;\n@@ -64,6 +63,7 @@\n import javax.wsdl.PortType;\n import javax.wsdl.Service;\n import javax.wsdl.WSDLException;\n+import javax.wsdl.OperationType;\n import javax.wsdl.extensions.ExtensibilityElement;\n import javax.wsdl.extensions.soap.SOAPAddress;\n import javax.wsdl.extensions.soap.SOAPBinding;\n@@ -784,7 +784,11 @@ protected Types createTypes(Definition def)\n                 if (standardTypes.getSerializer(mappedType) == null) { \n                     types.writeTypeForPart(mappedType, name); \n                 } \n-            } \n+            }\n+            \n+            // Don't bother checking for subtypes, since we already wrote\n+            // all the possibilities.\n+            types.mappedTypes = null;\n         }\n         \n         return types;\n@@ -1073,8 +1077,10 @@ protected void writePortType(Definition def, Binding binding)\n      * @throws WSDLException \n      * @throws AxisFault     \n      */\n-    protected void writeMessages(\n-            Definition def, Operation oper, OperationDesc desc, BindingOperation bindingOper)\n+    protected void writeMessages(Definition def,\n+                                 Operation oper,\n+                                 OperationDesc desc,\n+                                 BindingOperation bindingOper)\n             throws WSDLException, AxisFault {\n \n         Input input = def.createInput();\n@@ -1091,23 +1097,25 @@ protected void writeMessages(\n         bindingOper.getBindingInput().setName(name);\n         oper.setInput(input);\n         def.addMessage(msg);\n-\n-        msg = writeResponseMessage(def, desc, bindingOper);\n-\n-        Output output = def.createOutput();\n-\n-        output.setMessage(msg);\n-\n-        // Give the output element a name that matches the\n-        // message.  This is necessary for overloading.\n-        // The message QName is unique.\n-        name = msg.getQName().getLocalPart();\n-\n-        output.setName(name);\n-        bindingOper.getBindingOutput().setName(name);\n-        oper.setOutput(output);\n-        def.addMessage(msg);\n-\n+        \n+        if (desc.getMep() == OperationType.REQUEST_RESPONSE) {\n+            msg = writeResponseMessage(def, desc, bindingOper);\n+            \n+            Output output = def.createOutput();\n+            \n+            output.setMessage(msg);\n+            \n+            // Give the output element a name that matches the\n+            // message.  This is necessary for overloading.\n+            // The message QName is unique.\n+            name = msg.getQName().getLocalPart();\n+            \n+            output.setName(name);\n+            bindingOper.getBindingOutput().setName(name);\n+            oper.setOutput(output);\n+            def.addMessage(msg);\n+        }\n+        \n         ArrayList exceptions = desc.getFaults();\n \n         for (int i = 0; (exceptions != null) && (i < exceptions.size()); i++) {\n@@ -1186,11 +1194,17 @@ protected BindingOperation writeOperation(Definition def, Binding binding,\n      * @return \n      */\n     protected BindingOperation writeBindingOperation(Definition def,\n-                                                     Binding binding, Operation oper, OperationDesc desc) {\n+                                                     Binding binding,\n+                                                     Operation oper,\n+                                                     OperationDesc desc) {\n \n         BindingOperation bindingOper = def.createBindingOperation();\n         BindingInput bindingInput = def.createBindingInput();\n-        BindingOutput bindingOutput = def.createBindingOutput();\n+        BindingOutput bindingOutput = null;\n+        \n+        // TODO : Make this deal with all MEPs\n+        if (desc.getMep() == OperationType.REQUEST_RESPONSE)\n+            bindingOutput = def.createBindingOutput();\n \n         bindingOper.setName(oper.getName());\n         bindingOper.setOperation(oper);\n@@ -1231,16 +1245,18 @@ protected BindingOperation writeBindingOperation(Definition def,\n         // only when we write the Message and parts.\n \n         // Add soap:body element to the binding <output> element\n-        ExtensibilityElement outputBody = null;\n-        outputBody = writeSOAPBody(desc.getReturnQName());\n-        bindingOutput.addExtensibilityElement(outputBody);\n-\n-        // add soap:headers, if any, to binding <output> element\n-        // only when we write the Message and parts.\n+        if (bindingOutput != null) {\n+            ExtensibilityElement outputBody = null;\n+            outputBody = writeSOAPBody(desc.getReturnQName());\n+            bindingOutput.addExtensibilityElement(outputBody);\n+            bindingOper.setBindingOutput(bindingOutput);\n \n-        // Add input and output to operation\n+            // add soap:headers, if any, to binding <output> element\n+            // only when we write the Message and parts.\n+        }\n+        \n+        // Add input to operation\n         bindingOper.setBindingInput(bindingInput);\n-        bindingOper.setBindingOutput(bindingOutput);\n \n         // Faults clause\n         // Comment out the following part "
            },
            {
                "sha": "bec83ea02ddf54a5bd75f99216342b420c398b27",
                "filename": "src/org/apache/axis/wsdl/symbolTable/Parameters.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/symbolTable/Parameters.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/symbolTable/Parameters.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/Parameters.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -15,13 +15,16 @@\n  */\n package org.apache.axis.wsdl.symbolTable;\n \n+import javax.wsdl.OperationType;\n import java.util.Map;\n import java.util.Vector;\n \n /**\n  * This class simply collects all the parameter or message data for an operation into one place.\n  */\n public class Parameters {\n+    /** The MEP for this operation (default is request-response) */\n+    public OperationType mep = OperationType.REQUEST_RESPONSE;\n \n     // This vector contains instances of the Parameter class\n "
            },
            {
                "sha": "689824e3632351dc90b9284b12588a7711ef9972",
                "filename": "src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "status": "modified",
                "additions": 5,
                "deletions": 6,
                "changes": 11,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/symbolTable/SymbolTable.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -1653,11 +1653,14 @@ public Parameters getOperationParameters(\n         if ((parameterOrder != null) && parameterOrder.isEmpty()) {\n             parameterOrder = null;\n         }\n+\n+        Input input = operation.getInput();\n+        Output output = operation.getOutput();\n+        \n+        parameters.mep = operation.getStyle();\n         \n         // All input parts MUST be in the parameterOrder list.  It is an error otherwise.\n         if (parameterOrder != null && !wrapped) {\n-            Input input = operation.getInput();\n-\n             if (input != null) {\n                 Message inputMsg = input.getMessage();\n                 Map allInputs = inputMsg.getParts();\n@@ -1682,8 +1685,6 @@ public Parameters getOperationParameters(\n         }\n \n         // Collect all the input parameters\n-        Input input = operation.getInput();\n-\n         if ((input != null) && (input.getMessage() != null)) {\n             getParametersFromParts(inputs,\n                     input.getMessage().getOrderedParts(null),\n@@ -1692,8 +1693,6 @@ public Parameters getOperationParameters(\n         }\n \n         // Collect all the output parameters\n-        Output output = operation.getOutput();\n-\n         if ((output != null) && (output.getMessage() != null)) {\n             getParametersFromParts(outputs,\n                     output.getMessage().getOrderedParts(null),"
            },
            {
                "sha": "aec5f4cd3847d0cb270bd4b273cf692525403527",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "status": "modified",
                "additions": 21,
                "deletions": 0,
                "changes": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/54be473dff2f4c677216574068f015bfe1e06d3f/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java?ref=54be473dff2f4c677216574068f015bfe1e06d3f",
                "patch": "@@ -51,6 +51,7 @@\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Vector;\n+import java.util.HashMap;\n \n /**\n  * This is Wsdl2java's deploy Writer.  It writes the deploy.wsdd file.\n@@ -540,6 +541,16 @@ protected void writeOperation(PrintWriter pw, String javaOperName,\n                     + SOAPAction\n                     + \"\\\"\");\n         }\n+        \n+        if (params.mep != null &&\n+                params.mep != OperationType.REQUEST_RESPONSE) {\n+            String mepString = getMepString(params.mep);\n+            if (mepString != null) {\n+                pw.print(\" mep=\\\"\"\n+                         + mepString\n+                         + \"\\\"\");\n+            }\n+        }\n \n         if ((params.returnParam != null) && params.returnParam.isOutHeader()) {\n             pw.print(\" returnHeader=\\\"true\\\"\");\n@@ -651,4 +662,14 @@ protected PrintWriter getPrintWriter(String filename) throws IOException {\n \n         return new PrintWriter(writer);\n     }\n+    \n+    public static Map mepStrings = new HashMap();\n+    static {\n+        mepStrings.put(OperationType.REQUEST_RESPONSE, \"request-response\");\n+        mepStrings.put(OperationType.ONE_WAY, \"oneway\");\n+    }\n+    \n+    String getMepString(OperationType mep) {\n+        return (String)mepStrings.get(mep);\n+    }\n }    // class JavaDeployWriter"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/3a06d02575fb0a681377e717a148d8f4cac44ab0",
        "message": "Improvements / cleanup of the RPC infrastructure + service metadata.  Still\nneeds some work, but this is much more like it.  Need to implement some edge-\ncase tests for this code.\n\nDetails:\n\n* Fix NPE in WSDDOperation - there can be 0 elementMappings\n\n* Slight change in TypeMappingImpl to only override the qname or class\n  mapping for a registered type mapping if there is a serializer/deserializer\n  present OR if there is no other mapping registered in that direction.\n\n* Mapping from xmlsoap:Map is now to HashMap, not Map.  We still happily\n  serialize any Map to an xmlsoap:Map, but the deser mapping goes to the\n  concrete class.\n\n* Add \"isConvertable()\" method to JavaUtils.\n\n* ServiceDesc is now much smarter about introspecting.  We introspect once\n  for each method that we're interested in, and methods which never get called\n  typically won't ever get introspected for.\n\n* Implement \"synchronizing\" OperationDescs which have been generated from\n  deployment (WSDD) info with an implementation class on the server.  This\n  means if we have a service with this deployment info:\n      <service...>\n         <operation name=\"method\">\n            <parameter name=\"a\" type=\"xsd:string\" mode=\"IN\"/>\n            <parameter name=\"b\" type=\"xsd:string\" mode=\"INOUT\"/>\n            <parameter name=\"c\" type=\"xsd:string\" mode=\"OUT\"/>\n         </operation>\n      </service>\n\n  ...and a method on the implementation class which looks like this:\n\n      public void method(String a, StringHolder b, StringHolder c)\n\n  we will match the two together, recording the correct Java classes for\n  the parameters in the ParameterDescs, and keeping a pointer to the Method\n  in the OperationDesc.  See next couple of bullets for why this is cool.\n\n* RPCProvider method search + dispatch code is now *much* cleaner.  We rely\n  on \"early binding\" to dispatch to the correct method via a ServiceDesc,\n  so by the time we've deserialized the RPCElement successfully, we know\n  exactly which OperationDesc (and hence which Java Method) we're dealing with.\n  That enables us to simply set up the parameters and call it.\n\n* RPCHandler now checks any actually received xsi:types against what is\n  expected/desired by the appropriate ParameterDesc, and throws a fault\n  if it can't map them.\n\n* RPCElement doesn't try to introspect every time anymore, it just makes sure\n  the ServiceDesc has the right typemapping and implementation class if\n  appropriate.  Then getOperationsByName() will introspect if necessary.\n\n* JavaDeployWriter now writes out <parameter> information into the WSDD\n\n* Put in missing mapping in samples/echo service, and put an <operation>\n  into the deploy.wsdd so we get the OUT parameters right for\n  echoStructAsSimpleTypes()\n\n* Enable accessing a Call's TypeMapping via getTypeMapping() - relies on the\n  encodingStyle being set correctly.\n\n* Remove various try/catch blocks which were obscuring exceptions in tests.\n  Tests in general should throw exceptions (and their associated stack traces)\n  instead of eating them, unless there's a good reason to eat them.\n\n* Move code which understands primitives/wrappers into JavaUtils, since it's\n  generally handy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253872 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_189",
        "file": [
            {
                "sha": "068742506de01ffd12bb7c49f5bb7008a15fae8a",
                "filename": "samples/echo/EchoServiceBindingStub.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/samples/echo/EchoServiceBindingStub.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/samples/echo/EchoServiceBindingStub.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/EchoServiceBindingStub.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -62,6 +62,13 @@ public EchoServiceBindingStub(javax.xml.rpc.Service service) throws org.apache.a\n             cachedSerFactories.add(arraysf);\n             cachedDeserFactories.add(arraydf);\n \n+            qName = new javax.xml.rpc.namespace.QName(\"http://soapinterop.org/\", \"ArrayOf_tns2_Map\");\n+            cachedSerQNames.add(qName);\n+            cls = java.util.HashMap[].class;\n+            cachedSerClasses.add(cls);\n+            cachedSerFactories.add(arraysf);\n+            cachedDeserFactories.add(arraydf);\n+\n             qName = new javax.xml.rpc.namespace.QName(\"http://soapinterop.org/xsd\", \"ArrayOfstring\");\n             cachedSerQNames.add(qName);\n             cls = java.lang.String[].class;"
            },
            {
                "sha": "70eb56c80c56cde23f066dcdf7e61fd2d8730554",
                "filename": "samples/echo/TestClient.java",
                "status": "modified",
                "additions": 54,
                "deletions": 138,
                "changes": 192,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/samples/echo/TestClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/samples/echo/TestClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/TestClient.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -181,170 +181,106 @@ public void execute2A() throws Exception {\n \n         {\n             String input = \"abccdefg\";\n-            try {\n-                output = binding.echoString(input);\n-                verify(\"echoString\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoString\", input, e);\n-            }\n+            output = binding.echoString(input);\n+            verify(\"echoString\", input, output);\n         }\n         \n         {\n             String[] input = new String[] {\"abc\", \"def\"};\n-            try {\n-                output = binding.echoStringArray(input);\n-                verify(\"echoStringArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStringArray\", input, e);\n-            }\n+            output = binding.echoStringArray(input);\n+            verify(\"echoStringArray\", input, output);\n         }\n         \n         {\n             Integer input = new Integer(42);\n-            try {\n-                output = new Integer( binding.echoInteger(input.intValue()));\n-                verify(\"echoInteger\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoInteger\", input, e);\n-            }\n+            output = new Integer( binding.echoInteger(input.intValue()));\n+            verify(\"echoInteger\", input, output);\n         }\n         \n         {\n             int[] input = new int[] {42};\n-            try {\n-                output = binding.echoIntegerArray(input);\n-                verify(\"echoIntegerArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoIntegerArray\", input, e);\n-            }\n+            output = binding.echoIntegerArray(input);\n+            verify(\"echoIntegerArray\", input, output);\n         }\n         \n         {\n             Float input = new Float(3.7F);\n-            try {\n-                output = new Float(binding.echoFloat(input.floatValue()));\n-                verify(\"echoFloat\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoFloat\", input, e);\n-            }\n+            output = new Float(binding.echoFloat(input.floatValue()));\n+            verify(\"echoFloat\", input, output);\n         }\n \n         {\n             float[] input = new float[] {3.7F, 7F};\n-            try {\n-                output = binding.echoFloatArray(input);\n-                verify(\"echoFloatArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoFloatArray\", input, e);\n-            }\n+            output = binding.echoFloatArray(input);\n+            verify(\"echoFloatArray\", input, output);\n         }\n \n         {\n             SOAPStruct input = new SOAPStruct(5, \"Hello\", 103F);\n-            try {\n-                output = binding.echoStruct(input);\n-                verify(\"echoStruct\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStruct\", input, e);\n-            }\n+            output = binding.echoStruct(input);\n+            verify(\"echoStruct\", input, output);\n         }\n         \n         {\n             SOAPStruct[] input = new SOAPStruct[] {\n                 new SOAPStruct(1, \"one\", 1.1F),\n                 new SOAPStruct(2, \"two\", 2.2F),\n                 new SOAPStruct(3, \"three\", 3.3F)};\n-            try {\n-                output = binding.echoStructArray(input);\n-                verify(\"echoStructArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStructArray\", input, e);\n-            }\n+            output = binding.echoStructArray(input);\n+            verify(\"echoStructArray\", input, output);\n         }\n \n         {\n-            try {\n-                binding.echoVoid();\n-                verify(\"echoVoid\", null, null);\n-            } catch (Exception e) {\n-                verify(\"echoVoid\", null, e);\n-            }\n+            binding.echoVoid();\n+            verify(\"echoVoid\", null, null);\n         }\n \n         {\n             byte[] input = \"Base64\".getBytes();\n-            try {\n-                output = binding.echoBase64(input);\n-                verify(\"echoBase64\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoBase64\", input, e);\n-            }\n+            output = binding.echoBase64(input);\n+            verify(\"echoBase64\", input, output);\n         }\n         \n         {\n             Hex input = new Hex(\"3344\");\n-            try {\n-                output = binding.echoHexBinary(input.getBytes());\n-                verify(\"echoHexBinary\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoHexBinary\", input, e);\n-            }\n+            output = binding.echoHexBinary(input.getBytes());\n+            verify(\"echoHexBinary\", input, output);\n         }\n         \n         {\n             Date input = new Date();\n-            try {\n-                output = binding.echoDate(input);\n-                verify(\"echoDate\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoDate\", input, e);\n-            }\n+            output = binding.echoDate(input);\n+            verify(\"echoDate\", input, output);\n         }\n         \n         {\n             BigDecimal input = new BigDecimal(\"3.14159\");\n-            try {\n-                output = binding.echoDecimal(input);\n-                verify(\"echoDecimal\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoDecimal\", input, e);\n-            }\n+            output = binding.echoDecimal(input);\n+            verify(\"echoDecimal\", input, output);\n         }\n         \n         {\n             Boolean input = Boolean.TRUE;\n-            try {\n-                output = new Boolean( binding.echoBoolean(input.booleanValue()));\n-                verify(\"echoBoolean\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoBoolean\", input, e);\n-            }\n+            output = new Boolean( binding.echoBoolean(input.booleanValue()));\n+            verify(\"echoBoolean\", input, output);\n         }\n         \n         HashMap map = new HashMap();\n         map.put(new Integer(5), \"String Value\");\n         map.put(\"String Key\", new Date());\n         {\n             HashMap input = map;\n-            try {\n-                output = binding.echoMap(input);\n-                verify(\"echoMap\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoMap\", input, e);\n-            }\n+            output = binding.echoMap(input);\n+            verify(\"echoMap\", input, output);\n         }\n \n         HashMap map2 = new HashMap();\n         map2.put(\"this is the second map\", new Boolean(true));\n         map2.put(\"test\", new Float(411));\n         {\n             HashMap[] input = new HashMap [] {map, map2 };\n-            try {\n-                output = binding.echoMapArray(input);\n-                verify(\"echoMapArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoMapArray\", input, e);\n-            }\n+            output = binding.echoMapArray(input);\n+            verify(\"echoMapArray\", input, output);\n         }\n     }\n \n@@ -356,32 +292,24 @@ public void execute2B() throws Exception {\n         Object output = null;\n         {\n             SOAPStruct input = new SOAPStruct(5, \"Hello\", 103F);\n-            try {\n-                StringHolder outputString = new StringHolder();\n-                IntHolder outputInteger = new IntHolder();\n-                FloatHolder outputFloat = new FloatHolder();\n-                binding.echoStructAsSimpleTypes(input, outputString, outputInteger, outputFloat);\n-                output = new SOAPStruct(outputInteger.value,\n-                                        outputString.value,\n-                                        outputFloat.value);\n-                verify(\"echoStructAsSimpleTypes\", \n-                       input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStructAsSimpleTypes\", input, e);\n-            }\n+            StringHolder outputString = new StringHolder();\n+            IntHolder outputInteger = new IntHolder();\n+            FloatHolder outputFloat = new FloatHolder();\n+            binding.echoStructAsSimpleTypes(input, outputString, outputInteger, outputFloat);\n+            output = new SOAPStruct(outputInteger.value,\n+                                    outputString.value,\n+                                    outputFloat.value);\n+            verify(\"echoStructAsSimpleTypes\", \n+                   input, output);\n         }\n \n         {\n             SOAPStruct input = new SOAPStruct(5, \"Hello\", 103F);\n-            try {\n-                output = binding.echoSimpleTypesAsStruct(\n-                   input.getVarString(), input.getVarInt(), input.getVarFloat());\n-                verify(\"echoSimpleTypesAsStruct\", \n-                       input, \n-                       output);\n-            } catch (Exception e) {\n-                verify(\"echoSimpleTypesAsStruct\", input, e);\n-            }\n+            output = binding.echoSimpleTypesAsStruct(\n+                    input.getVarString(), input.getVarInt(), input.getVarFloat());\n+            verify(\"echoSimpleTypesAsStruct\", \n+                   input, \n+                   output);\n         }\n \n         {\n@@ -390,39 +318,27 @@ public void execute2B() throws Exception {\n             input[0][1] = \"01\";\n             input[1][0] = \"10\";\n             input[1][1] = \"11\";\n-            try {\n-                output = binding.echo2DStringArray(input);\n-                verify(\"echo2DStringArray\", \n-                       input, \n-                       output);\n-            } catch (Exception e) {\n-                verify(\"echo2DStringArray\", input, e);\n-            }\n+            output = binding.echo2DStringArray(input);\n+            verify(\"echo2DStringArray\", \n+                   input, \n+                   output);\n         }\n \n         {\n             SOAPStructStruct input = new SOAPStructStruct(\"AXIS\",\n                                                           1,\n                                                           3F,\n                                                           new SOAPStruct(5, \"Hello\", 103F));\n-            try {\n-                output = binding.echoNestedStruct(input);\n-                verify(\"echoNestedStruct\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoNestedStruct\", input, e);\n-            }\n+            output = binding.echoNestedStruct(input);\n+            verify(\"echoNestedStruct\", input, output);\n         }\n         {\n             SOAPArrayStruct input = new SOAPArrayStruct(\"AXIS\",\n                                                         1,\n                                                         3F,\n                                                         new String[] {\"one\", \"two\", \"three\"});\n-            try {\n-                output = binding.echoNestedArray(input);\n-                verify(\"echoNestedArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoNestedArray\", input, e);\n-            }\n+            output = binding.echoNestedArray(input);\n+            verify(\"echoNestedArray\", input, output);\n         }\n     }\n "
            },
            {
                "sha": "154c22bd0e55e4eabb7a586be9dd215feac00876",
                "filename": "samples/echo/deploy.wsdd",
                "status": "modified",
                "additions": 18,
                "deletions": 1,
                "changes": 19,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/samples/echo/deploy.wsdd",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/samples/echo/deploy.wsdd",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/deploy.wsdd?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -6,8 +6,9 @@\n <!--   java org.apache.axis.client.http.AdminClient deploy.wsdd  -->\n <!--      after the axis server is running                      -->\n \n- <deployment \tname=\"test\" xmlns=\"http://xml.apache.org/axis/wsdd/\" \n+ <deployment \tname=\"test\" xmlns=\"http://xml.apache.org/axis/wsdd/\"\n \t\t\txmlns:java=\"http://xml.apache.org/axis/wsdd/providers/java\"\n+            xmlns:xsd=\"http://www.w3.org/2000/10/XMLSchema\"\n \t\t\txmlns:xsi=\"http://www.w3.org/2000/10/XMLSchema-instance\">\n   <service name=\"echo\" provider=\"java:RPC\" >\n     <namespace>http://soapinterop.org/</namespace>\n@@ -62,6 +63,14 @@\n         deserializer=\"org.apache.axis.encoding.ser.ArrayDeserializerFactory\"\n         encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"\n       />\n+      <typeMapping\n+        xmlns:ns=\"http://soapinterop.org/\"\n+        qname=\"ns:ArrayOf_tns2_Map\"\n+        type=\"java:java.util.HashMap[]\"\n+        serializer=\"org.apache.axis.encoding.ser.ArraySerializerFactory\"\n+        deserializer=\"org.apache.axis.encoding.ser.ArrayDeserializerFactory\"\n+        encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"\n+      />\n       <typeMapping\n         xmlns:ns=\"http://soapinterop.org/xsd\"\n         qname=\"ns:SOAPStructStruct\"\n@@ -87,5 +96,13 @@\n         <handler type=\"java:samples.echo.echoHeaderStringHandler\"/>\n         <handler type=\"java:samples.echo.echoHeaderStructHandler\"/>\n     </responseFlow>\n+\n+    <operation name=\"echoStructAsSimpleTypes\">\n+      <parameter name=\"inputStruct\" xmlns:ns=\"http://soapinterop.org/xsd\"\n+                 type=\"ns:SOAPStruct\"/>\n+      <parameter name=\"outputString\" type=\"xsd:string\" mode=\"OUT\"/>\n+      <parameter name=\"outputInteger\" type=\"xsd:int\" mode=\"OUT\"/>\n+      <parameter name=\"outputFloat\" type=\"xsd:float\" mode=\"OUT\"/>\n+    </operation>\n   </service>\n </deployment>"
            },
            {
                "sha": "a2e92732dc9a83cfadb5270dc330fb2fd3be953a",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 40,
                "deletions": 21,
                "changes": 61,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -698,7 +698,12 @@ public boolean isParameterAndReturnSpecRequired() {\n      */\n     public void addParameter(QName paramName, QName xmlType,\n             ParameterMode parameterMode) {\n-        addParameter(paramName, xmlType, null, parameterMode);\n+        Class javaType = null;\n+        TypeMapping tm = getTypeMapping();\n+        if (tm != null) {\n+            javaType = tm.getClassForQName(xmlType);\n+        }\n+        addParameter(paramName, xmlType, javaType, parameterMode);\n     }\n \n     /**\n@@ -749,7 +754,12 @@ public void addParameter(QName paramName, QName xmlType,\n      */\n     public void addParameter(String paramName, QName xmlType,\n             ParameterMode parameterMode) {\n-        addParameter(new QName(\"\", paramName), xmlType, null, parameterMode);\n+        Class javaType = null;\n+        TypeMapping tm = getTypeMapping();\n+        if (tm != null) {\n+            javaType = tm.getClassForQName(xmlType);\n+        }\n+        addParameter(new QName(\"\", paramName), xmlType, javaType, parameterMode);\n     }\n \n     /**\n@@ -812,7 +822,11 @@ public QName getParameterTypeByQName(QName paramQName) {\n     public void setReturnType(QName type) {\n         if (parmAndRetReq) {\n             returnType = type ;\n-            if (operation != null) operation.setReturnType(type);\n+            if (operation != null) {\n+                operation.setReturnType(type);\n+                TypeMapping tm = getTypeMapping();\n+                operation.setReturnClass(tm.getClassForQName(type));\n+            }\n         }\n         else {\n             throw new JAXRPCException();\n@@ -1517,6 +1531,22 @@ public void clearHeaders()\n     {\n         myHeaders = null;\n     }\n+    \n+    public TypeMapping getTypeMapping()\n+    {\n+        // Get the TypeMappingRegistry\n+        TypeMappingRegistry tmr = msgContext.getTypeMappingRegistry();\n+\n+        // If a TypeMapping is not available, add one.\n+        TypeMapping tm = (TypeMapping) tmr.getTypeMapping(encodingStyle);\n+        TypeMapping defaultTM = (TypeMapping) tmr.getDefaultTypeMapping();\n+        if (tm == null || tm == defaultTM ) {\n+            tm = (TypeMapping) tmr.createTypeMapping();\n+            tm.setSupportedNamespaces(new String[] {encodingStyle});\n+            tmr.register(encodingStyle, tm);\n+        }\n+        return tm;\n+    }\n \n     /**\n      * Register type mapping information for serialization/deserialization\n@@ -1537,25 +1567,14 @@ public void registerTypeMapping(Class javaType, QName xmlType,\n                                     SerializerFactory sf,\n                                     DeserializerFactory df,\n                                     boolean force) {\n-        // Get the TypeMappingRegistry\n-        TypeMappingRegistry tmr = msgContext.getTypeMappingRegistry();\n-\n-        // If a TypeMapping is not available, add one.\n-        TypeMapping tm = (TypeMapping) tmr.getTypeMapping(encodingStyle);\n-        TypeMapping defaultTM = (TypeMapping) tmr.getDefaultTypeMapping();\n-        try {\n-            if (tm == null || tm == defaultTM ) {\n-                tm = (TypeMapping) tmr.createTypeMapping();\n-                tm.setSupportedNamespaces(new String[] {encodingStyle});\n-                tmr.register(encodingStyle, tm);\n-            }\n-            if (!force && tm.isRegistered(javaType, xmlType))\n-                return;\n-\n-            // Register the information\n-            tm.register(javaType, xmlType, sf, df);\n-        } catch (Exception e) {}\n+        TypeMapping tm = getTypeMapping();\n+        if (!force && tm.isRegistered(javaType, xmlType))\n+            return;\n+        \n+        // Register the information\n+        tm.register(javaType, xmlType, sf, df);\n     }\n+\n     public void registerTypeMapping(Class javaType, QName xmlType,\n                                     Class sfClass, Class dfClass) {\n         registerTypeMapping(javaType, xmlType, sfClass, dfClass, true);"
            },
            {
                "sha": "8434eaeaef5a7174f440a5c857487930248b9286",
                "filename": "src/org/apache/axis/client/Service.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/client/Service.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/client/Service.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Service.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -548,7 +548,7 @@ public void setTypeMappingRegistry(TypeMappingRegistry registry)\n      * @return TypeMappingRegistry The registry\n      */\n     public TypeMappingRegistry getTypeMappingRegistry() {\n-        return( null );\n+        return( engine.getTypeMappingRegistry() );\n     }\n \n     /**"
            },
            {
                "sha": "ea47809bca9b50170ec03d027d38bdf9e3a0c611",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDOperation.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -110,12 +110,14 @@ public WSDDOperation(Element e, ServiceDesc parent)\n                 throw new WSDDException(JavaUtils.getMessage(\"onlyOneMapping\"));\n             }\n \n-            // Register a mapping from an Element QName to a particular\n-            // method so we can dispatch for doc/lit services.\n-            Element el = mappingElements[0];\n-            String elString = el.getAttribute(\"qname\");\n-            QName elQName = XMLUtils.getQNameFromString(elString, el);\n-            desc.setElementQName(elQName);\n+            if (mappingElements.length > 0) {\n+                // Register a mapping from an Element QName to a particular\n+                // method so we can dispatch for doc/lit services.\n+                Element el = mappingElements[0];\n+                String elString = el.getAttribute(\"qname\");\n+                QName elQName = XMLUtils.getQNameFromString(elString, el);\n+                desc.setElementQName(elQName);\n+            }\n         }\n     }\n "
            },
            {
                "sha": "97ec1aa8a28007577bea0bdb6db7d0b68295a482",
                "filename": "src/org/apache/axis/description/OperationDesc.java",
                "status": "modified",
                "additions": 41,
                "deletions": 1,
                "changes": 42,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/description/OperationDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/description/OperationDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/OperationDesc.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -57,6 +57,7 @@\n import javax.xml.rpc.namespace.QName;\n import java.util.ArrayList;\n import java.util.Iterator;\n+import java.lang.reflect.Method;\n \n /**\n  * An OperationDesc is an abstract description of an operation on a service.\n@@ -83,10 +84,18 @@\n \n     /** The return type */\n     private QName returnType;\n+    \n+    /** The return class */\n+    private Class returnClass;\n+    \n+    // FIXME : Just have a return ParamDesc???\n \n     /** The Java method name this maps to (is this just name?) */\n     private String methodName;\n \n+    /** The actual Java method associated with this operation, if known */\n+    private Method method;\n+\n     /** This operation's style.  If null, we default to our parent's */\n     private Integer style;\n \n@@ -129,6 +138,14 @@ public void setReturnType(QName returnType) {\n         this.returnType = returnType;\n     }\n \n+    public Class getReturnClass() {\n+        return returnClass;\n+    }\n+\n+    public void setReturnClass(Class returnClass) {\n+        this.returnClass = returnClass;\n+    }\n+\n     public QName getElementQName() {\n         return elementQName;\n     }\n@@ -194,6 +211,14 @@ public int getNumParams() {\n         return parameters.size();\n     }\n \n+    public Method getMethod() {\n+        return method;\n+    }\n+\n+    public void setMethod(Method method) {\n+        this.method = method;\n+    }\n+\n     public ParameterDesc getParamByQName(QName qname)\n     {\n         for (Iterator i = parameters.iterator(); i.hasNext();) {\n@@ -211,7 +236,7 @@ public ParameterDesc getInputParamByQName(QName qname)\n \n         param = getParamByQName(qname);\n \n-        if ((param == null) || (param.getMode() != ParameterDesc.IN)) {\n+        if ((param == null) || (param.getMode() == ParameterDesc.OUT)) {\n             param = null;\n         }\n \n@@ -233,10 +258,25 @@ public ParameterDesc getOutputParamByQName(QName qname)\n                 param = new ParameterDesc();\n                 param.setQName(qname);\n                 param.setTypeQName(returnType);\n+                param.setJavaType(returnClass);\n             }\n         }\n \n         return param;\n     }\n+\n+    /**\n+     * Returns an ordered list of out params (NOT inouts)\n+     */\n+    public ArrayList getOutParams() {\n+        ArrayList result = new ArrayList();\n+        for (Iterator i = parameters.iterator(); i.hasNext();) {\n+            ParameterDesc desc = (ParameterDesc) i.next();\n+            if (desc.getMode() == ParameterDesc.OUT) {\n+                result.add(desc);\n+            }\n+        }\n+        return result;\n+    }\n }\n "
            },
            {
                "sha": "4de4da4d983f4b3f24b30304b6e27a61e3800583",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 221,
                "deletions": 51,
                "changes": 272,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -56,6 +56,7 @@\n \n import org.apache.axis.utils.JavaUtils;\n import org.apache.axis.encoding.TypeMapping;\n+import org.apache.axis.encoding.TypeMappingRegistry;\n \n import javax.xml.rpc.namespace.QName;\n import java.util.ArrayList;\n@@ -114,6 +115,10 @@\n     /** Lookup caches */\n     private HashMap name2OperationsMap = null;\n     private HashMap qname2OperationMap = null;\n+    private HashMap method2OperationMap = new HashMap();\n+    private ArrayList completedNames = new ArrayList();\n+\n+    private TypeMapping tm = null;\n \n     /**\n      * Default constructor\n@@ -159,6 +164,22 @@ public void setAllowedMethods(ArrayList allowedMethods) {\n         this.allowedMethods = allowedMethods;\n     }\n \n+    public Class getImplClass() {\n+        return implClass;\n+    }\n+\n+    public void setImplClass(Class implClass) {\n+        this.implClass = implClass;\n+    }\n+\n+    public TypeMapping getTypeMapping() {\n+        return tm;\n+    }\n+\n+    public void setTypeMapping(TypeMapping tm) {\n+        this.tm = tm;\n+    }\n+\n     public void addOperationDesc(OperationDesc operation)\n     {\n         operations.add(operation);\n@@ -176,38 +197,42 @@ public void addOperationDesc(OperationDesc operation)\n         }\n \n         overloads.add(operation);\n-\n-        // If we're adding these, we won't introspect (either because we\n-        // trust the deployer/user to add everything instead, or because\n-        // we're actually in the middle of introspecting right now)\n-        hasOperationData = true;\n     }\n \n     public OperationDesc [] getOperationsByName(String methodName)\n     {\n+        getSyncedOperationsForName(methodName);\n+\n         if (name2OperationsMap == null)\n             return null;\n \n-        ArrayList result = (ArrayList)name2OperationsMap.get(methodName);\n-        if (result == null)\n+        ArrayList overloads = (ArrayList)name2OperationsMap.get(methodName);\n+        if (overloads == null) {\n             return null;\n+        }\n \n-        OperationDesc [] array = new OperationDesc [result.size()];\n-        return (OperationDesc[])result.toArray(array);\n+        OperationDesc [] array = new OperationDesc [overloads.size()];\n+        return (OperationDesc[])overloads.toArray(array);\n     }\n \n     /**\n      * Return an operation matching the given method name.  Note that if we\n      * have multiple overloads for this method, we will return the first one.\n      */\n-    public OperationDesc getOperationDescByName(String methodName)\n+    public OperationDesc getOperationByName(String methodName)\n     {\n+        // If we need to load up operations from introspection data, do it.\n+        // This returns fast if we don't need to do anything, so it's not very\n+        // expensive.\n+        getSyncedOperationsForName(methodName);\n+\n         if (name2OperationsMap == null)\n             return null;\n \n         ArrayList overloads = (ArrayList)name2OperationsMap.get(methodName);\n-        if (overloads == null)\n+        if (overloads == null) {\n             return null;\n+        }\n \n         return (OperationDesc)overloads.get(0);\n     }\n@@ -219,9 +244,13 @@ public OperationDesc getOperationByElementQName(QName qname)\n     {\n         // If we're a wrapped service (i.e. RPC or WRAPPED style), we expect\n         // this qname to match one of our operation names directly.\n-        // FIXME : Should this really ignore namespaces?\n+\n+        // FIXME : Should this really ignore namespaces?  Perhaps we should\n+        //         just check by QName... (I think that's right, actually,\n+        //         and the only time we should ignore namespaces is when\n+        //         deserializing SOAP-encoded structures?)\n         if (isWrapped()) {\n-            return getOperationDescByName(qname.getLocalPart());\n+            return getOperationByName(qname.getLocalPart());\n         }\n \n         // If we're MESSAGE style, we should only have a single operation,\n@@ -246,55 +275,196 @@ public OperationDesc getOperationByElementQName(QName qname)\n     }\n \n     /**\n-     * Fill in what we can of the service description by introspecting a\n-     * Java class.  Only do this if we haven't already been filled in.\n+     * Synchronize an existing OperationDesc to a java.lang.Method.\n+     *\n+     * This method is used when the deployer has specified operation metadata\n+     * and we want to match that up with a real java Method so that the\n+     * Operation-level dispatch carries us all the way to the implementation.\n+     * Search the declared methods on the implementation class to find one\n+     * with an argument list which matches our parameter list.\n      */\n-    public void loadServiceDescByIntrospection(Class jc, TypeMapping tm)\n+    private void syncOperationToClass(OperationDesc oper)\n     {\n-        if (hasOperationData)\n+        // If we're already mapped to a Java method, no need to do anything.\n+        if (oper.getMethod() != null)\n             return;\n \n-        Method [] methods = jc.getDeclaredMethods();\n+        // Find the method.  We do this once for each Operation.\n+        Method [] methods = implClass.getDeclaredMethods();\n+        for (int i = 0; i < methods.length; i++) {\n+            Method method = methods[i];\n+            if (method.getName().equals(oper.getName())) {\n+                // Check params\n+                Class [] paramTypes = method.getParameterTypes();\n+                if (paramTypes.length != oper.getNumParams())\n+                    continue;\n+\n+                int j;\n+                for (j = 0; j < paramTypes.length; j++) {\n+                    Class type = paramTypes[j];\n+                    ParameterDesc param = oper.getParameter(j);\n+                    // See if they match\n+                    Class paramClass = tm.getClassForQName(\n+                            param.getTypeQName());\n+\n+                    // This is a match if the paramClass is somehow\n+                    // convertable to the \"real\" parameter type.\n+                    if (JavaUtils.isConvertable(paramClass, type)) {\n+                        param.setJavaType(type);\n+                        continue;\n+                    }\n+                    break;\n+                }\n+\n+                if (j != paramTypes.length) {\n+                    // failed.\n+                    continue;\n+                }\n+\n+                // At some point we might want to check here to see if this\n+                // Method is already associated with another Operation, but\n+                // this doesn't seem critital.\n+\n+                oper.setMethod(method);\n+                method2OperationMap.put(method, oper);\n+                return;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Fill in a service description by introspecting the implementation\n+     * class.\n+     */\n+    public void loadServiceDescByIntrospection()\n+    {\n+        Method [] methods = implClass.getDeclaredMethods();\n \n         for (int i = 0; i < methods.length; i++) {\n-            String methodName = methods[i].getName();\n+            getSyncedOperationsForName(methods[i].getName());\n+        }\n \n-            // Skip it if it's not allowed\n-            // FIXME : This should, if allowedMethods is null, search up the\n-            //         inheritance/interface tree until we get to stop\n-            //         classes?\n-            if ((allowedMethods != null) &&\n-                !allowedMethods.contains(methodName))\n-                continue;\n+        // Setting this to null means there is nothing more to do, and it\n+        // avoids future string compares.\n+        completedNames = null;\n+    }\n \n-            // Make an OperationDesc for each method\n-            Method method = methods[i];\n-            OperationDesc operation = new OperationDesc();\n-            operation.setName(methodName);\n-            Class [] paramTypes = method.getParameterTypes();\n-            String [] paramNames =\n-                    JavaUtils.getParameterNamesFromDebugInfo(method);\n-            for (int k = 0; k < paramTypes.length; k++) {\n-                Class type = paramTypes[k];\n-                ParameterDesc paramDesc = new ParameterDesc();\n-                if (paramNames != null) {\n-                    paramDesc.setName(paramNames[k+1]);\n-                } else {\n-                    paramDesc.setName(\"in\" + k);\n-                }\n-                Class heldClass = JavaUtils.getHolderValueType(type);\n-                if (heldClass != null) {\n-                    paramDesc.setMode(ParameterDesc.INOUT);\n-                    paramDesc.setTypeQName(tm.getTypeQName(heldClass));\n-                } else {\n-                    paramDesc.setMode(ParameterDesc.IN);\n-                    paramDesc.setTypeQName(tm.getTypeQName(type));\n+    /**\n+     * Fill in a service description by introspecting the implementation\n+     * class.  This version takes the implementation class and the in-scope\n+     * TypeMapping.\n+     */\n+    public void loadServiceDescByIntrospection(Class cls, TypeMapping tm)\n+    {\n+        // Should we complain if the implClass changes???\n+        implClass = cls;\n+        this.tm = tm;\n+        loadServiceDescByIntrospection();\n+    }\n+\n+    /**\n+     * Makes sure we have completely synchronized OperationDescs with\n+     * the implementation class.\n+     */\n+    private void getSyncedOperationsForName(String methodName)\n+    {\n+        // If we have no implementation class, don't worry about it (we're\n+        // probably on the client)\n+        if (implClass == null)\n+            return;\n+\n+        // If we're done introspecting, or have completed this method, return\n+        if (completedNames == null || completedNames.contains(methodName))\n+            return;\n+\n+        // Skip it if it's not a sanctioned method name\n+        if ((allowedMethods != null) &&\n+            !allowedMethods.contains(methodName))\n+            return;\n+\n+        // OK, go find any current OperationDescs for this method name and\n+        // make sure they're synced with the actual class.\n+        if (name2OperationsMap != null) {\n+            ArrayList currentOverloads = \n+                    (ArrayList)name2OperationsMap.get(methodName);\n+            if (currentOverloads != null) {\n+                // For each one, sync it to the implementation class' methods\n+                for (Iterator i = currentOverloads.iterator(); i.hasNext();) {\n+                    OperationDesc oper = (OperationDesc) i.next();\n+                    if (oper.getMethod() == null) {\n+                        syncOperationToClass(oper);\n+                    }\n                 }\n-                operation.addParameter(paramDesc);\n             }\n-            addOperationDesc(operation);\n         }\n \n-        hasOperationData = true;\n+        // Now all OperationDescs from deployment data have been completely\n+        // filled in.  So we now make new OperationDescs for any method\n+        // overloads which were not covered above.\n+        Method [] methods = implClass.getDeclaredMethods();\n+\n+        for (int i = 0; i < methods.length; i++) {\n+            Method method = methods[i];\n+            if (method.getName().equals(methodName))\n+                createOperationForMethod(method);\n+        }\n+\n+        // Note that we never have to look at this method name again.\n+        completedNames.add(methodName);\n+    }\n+\n+    /**\n+     * Make an OperationDesc from a Java method.\n+     *\n+     * In the absence of deployment metadata, this code will introspect a\n+     * Method and create an appropriate OperationDesc, using parameter names\n+     * from the bytecode debugging info if available, or \"in0\", \"in1\", etc.\n+     * if not.\n+     */\n+    private void createOperationForMethod(Method method) {\n+        // If we've already got it, never mind\n+        if (method2OperationMap.get(method) != null) {\n+            return;\n+        }\n+\n+        // Make an OperationDesc\n+        OperationDesc operation = new OperationDesc();\n+        operation.setName(method.getName());\n+        operation.setMethod(method);\n+        Class [] paramTypes = method.getParameterTypes();\n+        String [] paramNames =\n+                JavaUtils.getParameterNamesFromDebugInfo(method);\n+\n+        for (int k = 0; k < paramTypes.length; k++) {\n+            Class type = paramTypes[k];\n+            ParameterDesc paramDesc = new ParameterDesc();\n+            // If we have a name for this param, use it, otherwise call\n+            // it \"in*\"\n+            if (paramNames != null) {\n+                paramDesc.setName(paramNames[k+1]);\n+            } else {\n+                paramDesc.setName(\"in\" + k);\n+            }\n+            paramDesc.setJavaType(type);\n+\n+            // If it's a Holder, mark it INOUT and set the type to the\n+            // held type.  Otherwise it's IN with its own type.\n+\n+            Class heldClass = JavaUtils.getHolderValueType(type);\n+            if (heldClass != null) {\n+                paramDesc.setMode(ParameterDesc.INOUT);\n+                paramDesc.setTypeQName(tm.getTypeQName(heldClass));\n+            } else {\n+                paramDesc.setMode(ParameterDesc.IN);\n+                paramDesc.setTypeQName(tm.getTypeQName(type));\n+            }\n+            operation.addParameter(paramDesc);\n+        }\n+\n+        operation.setReturnClass(method.getReturnType());\n+        operation.setReturnType(tm.getTypeQName(method.getReturnType()));\n+\n+        addOperationDesc(operation);\n+        method2OperationMap.put(method, operation);\n     }\n }"
            },
            {
                "sha": "ec67e078701c248c7ca8400075ab302502f3a5e5",
                "filename": "src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "status": "modified",
                "additions": 78,
                "deletions": 79,
                "changes": 157,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -10,23 +10,23 @@\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -88,29 +88,29 @@\n \n /**\n  * @author Rich Scheuerle (scheu@us.ibm.com)\n- * \n+ *\n  * This is the implementation of the axis Default TypeMapping (which extends\n  * the JAX-RPC TypeMapping interface) for SOAP 1.1.  If you want the JAX-RPC\n  * SOAP 1.2 Type Mapping the use DefaultJAXRPCTypeMapping.\n- * \n+ *\n  * A TypeMapping is obtained from the singleton TypeMappingRegistry using\n  * the namespace of the webservice.  The TypeMapping contains the tuples\n  * {Java type, SerializerFactory, DeserializerFactory, Type QName)\n  *\n- * So if you have a Web Service with the namespace \"XYZ\", you call \n+ * So if you have a Web Service with the namespace \"XYZ\", you call\n  * the TypeMappingRegistry.getTypeMapping(\"XYZ\").\n  *\n  * The wsdl in your web service will use a number of types.  The tuple\n  * information for each of these will be accessed via the TypeMapping.\n  *\n- * Because every web service uses the soap, schema, wsdl primitives, we could \n+ * Because every web service uses the soap, schema, wsdl primitives, we could\n  * pre-populate the TypeMapping with these standard tuples.  Instead, if requested\n  * namespace/class matches is not found in the TypeMapping but matches one these\n  * known primitives, the request is delegated to this Default TypeMapping.\n- * \n+ *\n  */\n-public class DefaultTypeMappingImpl extends TypeMappingImpl { \n-    \n+public class DefaultTypeMappingImpl extends TypeMappingImpl {\n+\n     private static DefaultTypeMappingImpl tm = null;\n     /**\n      * Construct TypeMapping\n@@ -128,45 +128,45 @@ protected DefaultTypeMappingImpl() {\n \n         // Notes:\n         // 1) The registration statements are order dependent.  The last one\n-        //    wins.  So if two javaTypes of String are registered, the \n+        //    wins.  So if two javaTypes of String are registered, the\n         //    ser factory for the last one registered will be chosen.  Likewise\n-        //    if two javaTypes for XSD_DATE are registered, the deserializer \n+        //    if two javaTypes for XSD_DATE are registered, the deserializer\n         //    factory for the last one registered will be chosen.\n         //    Corollary:  Please be very careful with the order.  The\n         //                runtime, Java2WSDL and WSDL2Java emitters all\n         //                use this code to get type mapping information.\n-        // 2) Even if the SOAP 1.1 format is used over the wire, an \n+        // 2) Even if the SOAP 1.1 format is used over the wire, an\n         //    attempt is made to receive SOAP 1.2 format from the wire.\n-        //    This is the reason why the soap encoded primitives are \n+        //    This is the reason why the soap encoded primitives are\n         //    registered without serializers.\n \n-        // SOAP Encoded strings are treated as primitives. \n+        // SOAP Encoded strings are treated as primitives.\n         // Everything else is not.\n         // Note that only deserializing is supported since we are flowing\n         // SOAP 1.1 over the wire.\n-        myRegister(Constants.SOAP_STRING,     java.lang.String.class,   \n-                   null, null, true,  true); \n-        myRegister(Constants.SOAP_BOOLEAN,    java.lang.Boolean.class, \n+        myRegister(Constants.SOAP_STRING,     java.lang.String.class,\n+                   null, null, true,  true);\n+        myRegister(Constants.SOAP_BOOLEAN,    java.lang.Boolean.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_DOUBLE,     java.lang.Double.class,  \n+        myRegister(Constants.SOAP_DOUBLE,     java.lang.Double.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_FLOAT,      java.lang.Float.class,  \n+        myRegister(Constants.SOAP_FLOAT,      java.lang.Float.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_INT,        java.lang.Integer.class,   \n+        myRegister(Constants.SOAP_INT,        java.lang.Integer.class,\n                    null, null, false, true);\n         myRegister(Constants.SOAP_INTEGER,    java.math.BigInteger.class,\n                    null, null, false, true);\n         myRegister(Constants.SOAP_DECIMAL,    java.math.BigDecimal.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_LONG,       java.lang.Long.class,     \n+        myRegister(Constants.SOAP_LONG,       java.lang.Long.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_SHORT,      java.lang.Short.class,   \n+        myRegister(Constants.SOAP_SHORT,      java.lang.Short.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_BYTE,       java.lang.Byte.class,     \n+        myRegister(Constants.SOAP_BYTE,       java.lang.Byte.class,\n                    null, null, false, true);\n \n         // Hex binary data needs to use the hex binary serializer/deserializer\n-        myRegister(Constants.XSD_HEXBIN,     Hex.class,   \n+        myRegister(Constants.XSD_HEXBIN,     Hex.class,\n                    new HexSerializerFactory(\n                         Hex.class, Constants.XSD_HEXBIN),\n                    new HexDeserializerFactory(\n@@ -182,62 +182,62 @@ protected DefaultTypeMappingImpl() {\n         // Byte[] -ser-> array of Byte\n         // XSD_BASE64 -deser-> byte[]\n         // SOAP_BASE64 -deser->byte[]\n-        myRegister(Constants.SOAP_BASE64,     byte[].class, \n-                   new Base64SerializerFactory(byte[].class,\n+        myRegister(Constants.SOAP_BASE64,     Byte[].class,\n+                   new Base64SerializerFactory(Byte[].class,\n                                                Constants.SOAP_BASE64 ),\n-                   new Base64DeserializerFactory(byte[].class,\n+                   new Base64DeserializerFactory(Byte[].class,\n                                                  Constants.SOAP_BASE64),\n-                   true, true);      \n-        myRegister(Constants.SOAP_ARRAY,     java.lang.Byte[].class,       \n-                   new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(),true);\n-        myRegister(Constants.XSD_BASE64,     byte[].class,                                   \n+                   true);\n+//        myRegister(Constants.SOAP_ARRAY,     java.lang.Byte[].class,\n+//                   new ArraySerializerFactory(),\n+//                   new ArrayDeserializerFactory(),true);\n+        myRegister(Constants.XSD_BASE64,     byte[].class,\n                    new Base64SerializerFactory(byte[].class,\n                                                Constants.XSD_BASE64 ),\n                    new Base64DeserializerFactory(byte[].class,\n                                            Constants.XSD_BASE64),true);\n \n         // If SOAP 1.1 over the wire, map wrapper classes to XSD primitives.\n-        myRegister(Constants.XSD_STRING,     java.lang.String.class, \n-                   null, null, true); \n-        myRegister(Constants.XSD_BOOLEAN,    java.lang.Boolean.class, \n+        myRegister(Constants.XSD_STRING,     java.lang.String.class,\n+                   null, null, true);\n+        myRegister(Constants.XSD_BOOLEAN,    java.lang.Boolean.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_DOUBLE,     java.lang.Double.class,  \n+        myRegister(Constants.XSD_DOUBLE,     java.lang.Double.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_FLOAT,      java.lang.Float.class,  \n+        myRegister(Constants.XSD_FLOAT,      java.lang.Float.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_INT,        java.lang.Integer.class, \n+        myRegister(Constants.XSD_INT,        java.lang.Integer.class,\n                    null, null, true);\n         myRegister(Constants.XSD_INTEGER,    java.math.BigInteger.class,\n                    null, null, true);\n         myRegister(Constants.XSD_DECIMAL,    java.math.BigDecimal.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_LONG,       java.lang.Long.class,     \n+        myRegister(Constants.XSD_LONG,       java.lang.Long.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_SHORT,      java.lang.Short.class, \n+        myRegister(Constants.XSD_SHORT,      java.lang.Short.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_BYTE,       java.lang.Byte.class,  \n+        myRegister(Constants.XSD_BYTE,       java.lang.Byte.class,\n                    null, null, true);\n \n         // The XSD Primitives are mapped to java primitives.\n-        myRegister(Constants.XSD_BOOLEAN,    boolean.class,        \n+        myRegister(Constants.XSD_BOOLEAN,    boolean.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_DOUBLE,     double.class,         \n+        myRegister(Constants.XSD_DOUBLE,     double.class,\n                    null, null,true);\n         myRegister(Constants.XSD_FLOAT,      float.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_INT,        int.class,  \n+        myRegister(Constants.XSD_INT,        int.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_LONG,       long.class, \n+        myRegister(Constants.XSD_LONG,       long.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_SHORT,      short.class, \n+        myRegister(Constants.XSD_SHORT,      short.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_BYTE,       byte.class, \n+        myRegister(Constants.XSD_BYTE,       byte.class,\n                    null, null,true);\n \n \n         // Map QNAME to the jax rpc QName class\n-        myRegister(Constants.XSD_QNAME,      \n+        myRegister(Constants.XSD_QNAME,\n               javax.xml.rpc.namespace.QName.class,\n               new BeanSerializerFactory(javax.xml.rpc.namespace.QName.class,\n                                         Constants.XSD_QNAME),\n@@ -246,21 +246,21 @@ protected DefaultTypeMappingImpl() {\n                    true);\n \n         // The closest match for anytype is Object\n-        myRegister(Constants.XSD_ANYTYPE,    java.lang.Object.class,  \n+        myRegister(Constants.XSD_ANYTYPE,    java.lang.Object.class,\n                    null, null, false);\n \n-        // The xsd primitive for date has changed through the various \n+        // The xsd primitive for date has changed through the various\n         // namespace versions.\n-        // XSD_DATE is the current one, which is why it is \n+        // XSD_DATE is the current one, which is why it is\n         // registered after the other two\n-        myRegister(Constants.XSD_DATE2,      java.util.Date.class,                           \n-                   new DateSerializerFactory(java.util.Date.class, \n+        myRegister(Constants.XSD_DATE2,      java.util.Date.class,\n+                   new DateSerializerFactory(java.util.Date.class,\n                                              Constants.XSD_DATE2),\n                    new DateDeserializerFactory(java.util.Date.class,\n                                                Constants.XSD_DATE2),\n                    true);\n-        myRegister(Constants.XSD_DATE3,      java.util.Date.class,                           \n-                   new DateSerializerFactory(java.util.Date.class, \n+        myRegister(Constants.XSD_DATE3,      java.util.Date.class,\n+                   new DateSerializerFactory(java.util.Date.class,\n                                              Constants.XSD_DATE3),\n                    new DateDeserializerFactory(java.util.Date.class,\n                                                Constants.XSD_DATE3),\n@@ -280,48 +280,47 @@ protected DefaultTypeMappingImpl() {\n \n         // Serialize all extensions of Map to SOAP_MAP\n         // The SOAP_MAP will be deserialized into a HashMap by default.\n-        myRegister(Constants.SOAP_MAP,       java.util.HashMap.class,    \n+        myRegister(Constants.SOAP_MAP,       java.util.HashMap.class,\n                    new MapSerializerFactory(java.util.Map.class,\n                                             Constants.SOAP_MAP),\n                    new MapDeserializerFactory(java.util.HashMap.class,\n                                               Constants.SOAP_MAP),\n                    false);\n-        myRegister(Constants.SOAP_MAP,       java.util.Map.class,    \n+        myRegister(Constants.SOAP_MAP,       java.util.Map.class,\n                    new MapSerializerFactory(java.util.Map.class,\n                                             Constants.SOAP_MAP),\n-                   new MapDeserializerFactory(java.util.HashMap.class,\n-                                              Constants.SOAP_MAP),\n+                   null,  // Make sure not to override the deser mapping\n                    false);\n \n         // Use the Element Serializeration for elements\n-        myRegister(Constants.SOAP_ELEMENT,   org.w3c.dom.Element.class,    \n+        myRegister(Constants.SOAP_ELEMENT,   org.w3c.dom.Element.class,\n                    new ElementSerializerFactory(),\n                    new ElementDeserializerFactory(), false);\n-        myRegister(Constants.SOAP_VECTOR,    java.util.Vector.class,                                \n+        myRegister(Constants.SOAP_VECTOR,    java.util.Vector.class,\n                    new VectorSerializerFactory(java.util.Vector.class,\n-                                               Constants.SOAP_VECTOR), \n+                                               Constants.SOAP_VECTOR),\n                    new VectorDeserializerFactory(java.util.Vector.class,\n-                                                 Constants.SOAP_VECTOR), \n+                                                 Constants.SOAP_VECTOR),\n                    false);\n \n         // All array objects automatically get associated with the SOAP_ARRAY.\n-        // There is no way to do this with a hash table, \n+        // There is no way to do this with a hash table,\n         // so it is done directly in getTypeQName.\n         // Internally the runtime uses ArrayList objects to hold arrays...\n-        // which is the reason that ArrayList is associated with SOAP_ARRAY.  \n+        // which is the reason that ArrayList is associated with SOAP_ARRAY.\n         // In addition, handle all objects that implement the List interface\n         // as a SOAP_ARRAY\n-        myRegister(Constants.SOAP_ARRAY,     java.util.List.class,               \n+        myRegister(Constants.SOAP_ARRAY,     java.util.List.class,\n                    new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(), \n+                   new ArrayDeserializerFactory(),\n                    false);\n-        myRegister(Constants.SOAP_ARRAY,     java.util.ArrayList.class,               \n+        myRegister(Constants.SOAP_ARRAY,     java.util.ArrayList.class,\n                    new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(), \n+                   new ArrayDeserializerFactory(),\n                    false);\n-        myRegister(Constants.SOAP_ARRAY,     Object[].class,               \n+        myRegister(Constants.SOAP_ARRAY,     Object[].class,\n                    new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(), \n+                   new ArrayDeserializerFactory(),\n                    false);\n     }\n \n@@ -334,14 +333,14 @@ protected DefaultTypeMappingImpl() {\n      * @param df is the deser factory (if null, the simple factory is used)\n      * @param primitive indicates whether serializers can be shared\n      * @param onlyDeserFactory indicates if only deserialization is desired.\n-     */   \n+     */\n     protected void myRegister(QName xmlType, Class javaType,\n                               SerializerFactory sf, DeserializerFactory df,\n                               boolean primitive) {\n         myRegister(xmlType, javaType, sf, df, primitive, false);\n     }\n     protected void myRegister(QName xmlType, Class javaType,\n-                              SerializerFactory sf, DeserializerFactory df, \n+                              SerializerFactory sf, DeserializerFactory df,\n                               boolean primitive, boolean onlyDeserFactory) {\n \n         // If factories are not specified, use the Simple ser/deser factories.\n@@ -362,7 +361,7 @@ protected void myRegister(QName xmlType, Class javaType,\n         if (onlyDeserFactory) {\n             sf = null;\n         }\n-        \n+\n         // Register all known flavors of the namespace.\n         try {\n             if (xmlType.getNamespaceURI().equals(\n@@ -381,7 +380,7 @@ else if (xmlType.getNamespaceURI().equals(\n                     super.register(javaType, qName, sf, df);\n                 }\n             }\n-            // Register with the specified xmlType. \n+            // Register with the specified xmlType.\n             // This is the prefered mapping and the last registed one wins\n             super.register(javaType, xmlType, sf, df);\n         } catch (Exception e) {}\n@@ -407,10 +406,10 @@ public QName getTypeQName(Class javaType) {\n \n     // Don't allow anyone to muck with the default type mapping because\n     // it is a singleton used for the whole system.\n-    public void register(Class javaType, QName xmlType, \n+    public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.SerializerFactory sf,\n-                         javax.xml.rpc.encoding.DeserializerFactory dsf) \n-        throws JAXRPCException {        \n+                         javax.xml.rpc.encoding.DeserializerFactory dsf)\n+        throws JAXRPCException {\n \n         throw new JAXRPCException();\n     }"
            },
            {
                "sha": "70f7d82e9196dbbc7a99033645f771067c5037e3",
                "filename": "src/org/apache/axis/encoding/TypeMappingImpl.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingImpl.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -243,8 +243,12 @@ public void register(Class javaType, QName xmlType,\n         }\n         Pair pair = new Pair(javaType, xmlType);\n \n-        qName2Pair.put(xmlType, pair);\n-        class2Pair.put(javaType, pair);   \n+        // Only register the appropriate mappings.\n+        if ((dsf != null) || (qName2Pair.get(xmlType) == null))\n+            qName2Pair.put(xmlType, pair);\n+        if ((sf != null) || (class2Pair.get(javaType) == null))\n+            class2Pair.put(javaType, pair);   \n+        \n         pair2SF.put(pair, sf);\n         pair2DF.put(pair, dsf);\n     }"
            },
            {
                "sha": "a49aaa47e25afd5fd743ff4e7aa2e944bfd6cf3c",
                "filename": "src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 17,
                "changes": 18,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -102,23 +102,7 @@ public SimpleDeserializerFactory(Class javaType, QName xmlType) {\n                     javaType.getDeclaredConstructor(new Class [] {String.class});\n             }\n             else {\n-                Class wrapper = null;\n-                if (javaType == int.class)\n-                    wrapper = java.lang.Integer.class;\n-                else if (javaType == short.class)\n-                    wrapper = java.lang.Short.class;\n-                else if (javaType == boolean.class)\n-                    wrapper = java.lang.Boolean.class;\n-                else if (javaType == byte.class)\n-                    wrapper = java.lang.Byte.class;\n-                else if (javaType == long.class)\n-                    wrapper = java.lang.Long.class;\n-                else if (javaType == double.class)\n-                    wrapper = java.lang.Double.class;\n-                else if (javaType == float.class)\n-                    wrapper = java.lang.Float.class;\n-                else if (javaType == char.class)\n-                    wrapper = java.lang.Character.class;\n+                Class wrapper = JavaUtils.getWrapperClass(javaType);\n                 if (wrapper != null)\n                     constructor = \n                         wrapper.getDeclaredConstructor(new Class [] {String.class});"
            },
            {
                "sha": "d1e817be5b9dd550b6c68d1775b0b76db9836847",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 27,
                "deletions": 27,
                "changes": 54,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -66,6 +66,7 @@\n import org.apache.axis.handlers.soap.SOAPService;\n import org.apache.axis.utils.cache.ClassCache;\n import org.apache.axis.utils.cache.JavaClass;\n+import org.apache.axis.utils.JavaUtils;\n import org.apache.axis.wsdl.toJava.Utils;\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n@@ -158,36 +159,34 @@ public void deserialize() throws SAXException\n         if (service != null) {\n             ServiceDesc serviceDesc = service.getServiceDescription();\n \n-            // If we don't have a service description, create one\n-            // via introspection and cache it in the SOAPService.\n-            String clsName = (String)service.getOption(\"className\");\n-\n-            if (clsName != null) {\n-                ClassLoader cl       = msgContext.getClassLoader();\n-                ClassCache cache     = msgContext.getAxisEngine().\n-                        getClassCache();\n-                JavaClass       jc   = null;\n-                try {\n-                    jc = cache.lookup(clsName, cl);\n-                } catch (ClassNotFoundException e) {\n-                    throw new SAXException(e);\n+            if (serviceDesc.getImplClass() == null) {\n+                String clsName = (String)service.getOption(\"className\");\n+\n+                if (clsName != null) {\n+                    ClassLoader cl       = msgContext.getClassLoader();\n+                    ClassCache cache     = msgContext.getAxisEngine().\n+                            getClassCache();\n+                    JavaClass       jc   = null;\n+                    try {\n+                        jc = cache.lookup(clsName, cl);\n+                    } catch (ClassNotFoundException e) {\n+                        throw new SAXException(e);\n+                    }\n+                    TypeMapping tm = (TypeMapping)msgContext.\n+                            getTypeMappingRegistry().\n+                            getTypeMapping(msgContext.getEncodingStyle());\n+                    serviceDesc.setTypeMapping(tm);\n+                    serviceDesc.setImplClass(jc.getJavaClass());\n                 }\n-                TypeMapping tm = (TypeMapping)msgContext.\n-                        getTypeMappingRegistry().\n-                        getTypeMapping(msgContext.getEncodingStyle());\n-                serviceDesc.loadServiceDescByIntrospection(jc.getJavaClass(),\n-                                                           tm);\n             }\n \n-            if (serviceDesc != null) {\n-                // If we've got a service description now, we want to use\n-                // the matching operations in there.\n-                operations = serviceDesc.getOperationsByName(name);\n+            // If we've got a service description now, we want to use\n+            // the matching operations in there.\n+            operations = serviceDesc.getOperationsByName(name);\n \n-                if (operations == null) {\n-                    String lc = Utils.xmlNameToJava(name);\n-                    operations = serviceDesc.getOperationsByName(lc);\n-                }\n+            if (operations == null) {\n+                String lc = Utils.xmlNameToJava(name);\n+                operations = serviceDesc.getOperationsByName(lc);\n             }\n         }\n \n@@ -225,7 +224,8 @@ public void deserialize() throws SAXException\n \n                         publishToHandler((org.xml.sax.ContentHandler) context);\n \n-                        // Success!!\n+                        // Success!!  This is the right one...\n+                        msgContext.setOperation(myOperation);\n                         return;\n                     } catch (SAXException e) {\n                         // If there was a problem, try the next one."
            },
            {
                "sha": "1f95e0238482f9076de12620adabac631ad3b73e",
                "filename": "src/org/apache/axis/message/RPCHandler.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/message/RPCHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/message/RPCHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCHandler.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -193,11 +193,18 @@ public SOAPHandler onStartChild(String namespace,\n \n                 if (type == null) {\n                     type = paramDesc.getTypeQName();\n+                } else if (paramDesc.getJavaType() != null) {\n+                    // If we have an xsi:type, make sure it makes sense\n+                    // with the current paramDesc type\n+                    Class xsiClass = \n+                            context.getTypeMapping().getClassForQName(type);\n+                    if (!JavaUtils.isConvertable(xsiClass,\n+                                                 paramDesc.getJavaType())) {\n+                        throw new SAXException(\"Bad types (\" +\n+                            xsiClass + \" -> \" + paramDesc.getJavaType() + \")\"); // FIXME!\n+                    }\n                 }\n             }\n-\n-            // FIXME : We should check here to make sure any specified\n-            // xsi:type jibes with the expected type in the ParamDesc!!\n         }\n \n "
            },
            {
                "sha": "92110a9b190c717c1c39f7aa93db409078ed28f5",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 95,
                "deletions": 191,
                "changes": 286,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -73,6 +73,7 @@\n import org.apache.commons.logging.LogFactory;\n \n import javax.xml.rpc.namespace.QName;\n+import javax.xml.rpc.holders.Holder;\n import java.lang.reflect.Method;\n import java.lang.reflect.InvocationTargetException;\n import java.util.StringTokenizer;\n@@ -121,6 +122,11 @@ public void processMessage (MessageContext msgContext,\n         for ( int bNum = 0 ; bNum < bodies.size() ; bNum++ ) {\n             RPCElement   body;\n \n+            // If this is a regular old SOAPBodyElement, and it's a root,\n+            // we're probably a non-wrapped doc/lit service.  In this case,\n+            // we deserialize the element, and create an RPCElement \"wrapper\"\n+            // around it which points to the correct method.\n+            // FIXME : There should be a cleaner way to do this...\n             if (!(bodies.get(bNum) instanceof RPCElement)) {\n                 SOAPBodyElement bodyEl = (SOAPBodyElement)bodies.get(bNum);\n                 if (bodyEl.isRoot() && operation != null) {\n@@ -136,20 +142,48 @@ public void processMessage (MessageContext msgContext,\n                 body = (RPCElement) bodies.get( bNum );\n             }\n \n-            String       mName      = body.getMethodName();\n-            Vector       args       = body.getParams();\n-            Object[]     argValues  =  null ;\n+            String methodName = body.getMethodName();\n+            Vector args = body.getParams();\n+            int numArgs = args.size();\n \n+            // This may have changed, so get it again...\n+            // FIXME (there should be a cleaner way to do this)\n+            operation = msgContext.getOperation();\n \n+            if (operation == null) {\n+                QName qname = new QName(body.getNamespaceURI(),\n+                                        body.getName());\n+                operation = serviceDesc.getOperationByElementQName(qname);\n+            }\n+\n+            // Create the array we'll use to hold the actual parameter\n+            // values.  We know how big to make it from the metadata.\n+            Object[]     argValues  =  new Object [operation.getNumParams()];\n+\n+            // A place to keep track of the out params (INOUTs and OUTs)\n+            ArrayList outs = new ArrayList();\n+\n+            // Put the values contained in the RPCParams into an array\n+            // suitable for passing to java.lang.reflect.Method.invoke()\n+            // Make sure we respect parameter ordering if we know about it\n+            // from metadata, and handle whatever conversions are necessary\n+            // (values -> Holders, etc)\n             if ( args != null && args.size() > 0 ) {\n-                argValues = new Object[ args.size()];\n-                for ( int i = 0 ; i < args.size() ; i++ ) {\n+                for ( int i = 0 ; i < numArgs ; i++ ) {\n                     RPCParam rpcParam = (RPCParam)args.get(i);\n+                    Object value = rpcParam.getValue();\n                     ParameterDesc paramDesc = rpcParam.getParamDesc();\n+                    if (paramDesc != null && paramDesc.getJavaType() != null) {\n+                        value = JavaUtils.convert(value,\n+                                                  paramDesc.getJavaType());\n+                        rpcParam.setValue(value);\n+                        if (paramDesc.getMode() == ParameterDesc.INOUT)\n+                            outs.add(rpcParam);\n+                    }\n                     if (paramDesc == null || paramDesc.getOrder() == -1) {\n-                        argValues[i]  = rpcParam.getValue() ;\n+                        argValues[i]  = value;\n                     } else {\n-                        argValues[paramDesc.getOrder()] = rpcParam.getValue();\n+                        argValues[paramDesc.getOrder()] = value;\n                     }\n \n                     if (log.isDebugEnabled()) {\n@@ -160,185 +194,69 @@ public void processMessage (MessageContext msgContext,\n             }\n \n             // Check if we can find a Method by this name\n-            checkMethodName(msgContext, allowedMethods, mName);\n-\n-            // Get the actual method to invoke.\n-            int\tnumberOfBodyArgs = args.size();\n-            Method[] methods = getMethod(msgContext, jc, mName);\n-\n-            // If the method wasn't found, maybe it needs some Java mangling (ie., it's a Java\n-            // keyword or it's capitalized and the java mapping requires lowercase).\n-            if (methods == null) {\n-                mName = JavaUtils.xmlNameToJava(mName);\n-                methods = getMethod(msgContext, jc, mName);\n-            }\n-\n-            if ( methods == null )\n-                throw new AxisFault( \"AxisServer.error\",\n-                        JavaUtils.getMessage(\"noMethod00\", mName, msgContext.getTargetService()),\n-                        null, null );\n-\n-            Object objRes = null;\n-            Class[] params = null;\n-            Exception ex = null;\n-\n-            // There might be more than one method with this name, try them all.\n-            int index = 0;\n-            for (index = 0; index < methods.length; index++) {\n-                Method method = methods[index];\n-                ex = null;\n-                params = method.getParameterTypes();\n-\n-                // Don't bother with this one if it has FEWER params\n-                if (argValues != null) {\n-                    if (params.length < argValues.length)\n-                        continue;\n-                }\n-\n-                // The number of method parameters must match the\n-                // arguments taking into consideration output parameters.\n-                Object[] newArgValues = new Object[params.length];\n-                int old = 0;\n-                boolean problem = false;\n-                for (int n = 0; n < newArgValues.length; n++) {\n-                    Class heldType = JavaUtils.getHolderValueType(params[n]);\n-                    if (argValues != null && old < argValues.length) {\n-                        newArgValues[n] = argValues[old++];\n-                    } else if (heldType == null) {\n-                        // The parameters that don't match the argValues must\n-                        // be Holders.  Indicate problem occurred.\n-                        problem = true;\n+            // FIXME : Shouldn't this type of thing have already occurred?\n+            checkMethodName(msgContext, allowedMethods, methodName);\n+\n+            // Now create any out holders we need to pass in\n+            if (numArgs < argValues.length) {\n+                ArrayList outParams = operation.getOutParams();\n+                for (int i = 0; i < outParams.size(); i++) {\n+                    ParameterDesc param = (ParameterDesc)outParams.get(i);\n+                    Class holderClass = param.getJavaType();\n+                    if (Holder.class.isAssignableFrom(holderClass)) {\n+                        argValues[numArgs + i] = holderClass.newInstance();\n+                        // Store an RPCParam in the outs collection so we\n+                        // have an easy and consistent way to write these\n+                        // back to the client below\n+                        outs.add(new RPCParam(param.getQName(),\n+                                              argValues[numArgs + i]));\n                     } else {\n-                        newArgValues[n] = null;\n-                    }\n-                    // Create holders for each argument that is null that should be a holder\n-                    if (newArgValues[n] == null && heldType != null) {\n-                        newArgValues[n] = JavaUtils.convert(newArgValues[n], params[n]);\n-                    }\n-                }\n-                if (!problem) {\n-                    argValues = newArgValues;  // Use newArgValues array if no problems\n-                }\n-\n-                // Invoke the method and capture the returned object.\n-                // Note that if the method returns a primitive, invoke(...) automatically\n-                // wraps it in a java.lang class representing the primitive.\n-                try {\n-                    objRes = invokeMethod(msgContext, method, obj, argValues);\n-                    break;\n-                } catch (IllegalArgumentException e) {\n-                    // Hm - maybe we can help this with a conversion or two...\n-                    for (int i = 0; argValues != null && i < argValues.length &&\n-                      i < params.length; i++) {\n-                        Object thisArg = argValues[i];\n-                        if (!params[i].isAssignableFrom(thisArg.getClass())) {\n-                            // Attempt conversion for each non-assignable argument\n-                            Object newArg = JavaUtils.convert(thisArg, params[i]);\n-                            if (newArg != thisArg)\n-                                argValues[i] = newArg;\n-                        }\n-                    }\n-\n-                    // OK, now try again...\n-                    try {\n-                        objRes = invokeMethod(msgContext, method, obj, argValues);\n-                        break;\n-                    } catch (IllegalArgumentException exp) {\n-                        StringBuffer argbuf = new StringBuffer();\n-                        String sep= \"\";\n-                        for(int i = 0; argValues != null &&\n-                          i < argValues.length; ++i) {\n-                            argbuf.append(sep);\n-                            sep = \", \";\n-                            argbuf.append(argValues[i] == null ? \"null\" : argValues[i].getClass().getName());\n-                        }\n-                        String objName = obj == null ? \"null\" :\n-                          obj.getClass().getName();\n-                        String msg = JavaUtils.getMessage(\"triedArgs00\",\n-                                new String[] {\n-                                exp.getMessage(),\n-                                objName,\n-                                method.getName(),\n-                                argbuf.toString()});\n-                        ex = new IllegalArgumentException(msg);\n-                        continue;\n+                        // !!! Throw a fault here?\n                     }\n                 }\n             }\n-            // If we've gone through all methods with the given name and there's\n-            // an exception left over, throw that exception.\n-            if (ex != null) {\n-                throw ex;\n-            }\n-\n-            // If we've finished iterating through all the methods, throw an exception.\n-            if ( index == methods.length )\n-                throw new AxisFault( \"AxisServer.error\",\n-                        JavaUtils.getMessage(\"noMethod00\", mName, msgContext.getTargetService()),\n-                        null, null );\n \n-            if (log.isDebugEnabled())\n-                log.debug(JavaUtils.getMessage(\"result00\", \"\" + objRes));\n+            // OK!  Now we can invoke the method\n+            Object objRes = operation.getMethod().invoke(obj, argValues);\n \n             /* Now put the result in the result SOAPEnvelope */\n             /*************************************************/\n-            RPCElement resBody = new RPCElement(mName + \"Response\");\n+            RPCElement resBody = new RPCElement(methodName + \"Response\");\n             resBody.setPrefix( body.getPrefix() );\n             resBody.setNamespaceURI( body.getNamespaceURI() );\n             resBody.setEncodingStyle(msgContext.getEncodingStyle());\n \n-            if ( objRes != null ) {\n-                // In the old skeleton a param list was returned, which\n-                // contained the RPC params.  Preserve this for now.\n-                if (objRes instanceof ParamList) {\n-                    ParamList list = (ParamList)objRes;\n-                    for (int i = 0; i < list.size (); ++i) {\n-                        if (list.get (i) instanceof RPCParam) {\n-                            resBody.addParam ((RPCParam) list.get (i));\n-                        }\n-                        else {\n-                            resBody.addParam (new RPCParam (getParameterName(obj, methods[index],i, mName),\n-                                                            list.get (i)));\n-                        }\n-                    }\n-                }\n-                else {\n-                    QName returnQName = getReturnQName(serviceDesc, mName);\n-                    RPCParam param = new RPCParam(returnQName, objRes);\n-                    resBody.addParam(param);\n+            // Return first\n+            if ( operation.getMethod().getReturnType() != Void.TYPE ) {\n+                QName returnQName = operation.getReturnQName();\n+                if (returnQName == null) {\n+                    returnQName = new QName(\"\", methodName + \"Return\");\n                 }\n-            } else if (methods[index].getReturnType() != Void.TYPE) {\n-                QName returnQName = getReturnQName(serviceDesc, mName);\n                 RPCParam param = new RPCParam(returnQName, objRes);\n                 resBody.addParam(param);\n             }\n \n-            // The new skeleton (or no skeleton code) requires the runtime\n-            // to recognize holders and automatically pass back the outputs.\n-            for (int i=0; i < argValues.length; i++) {\n-                Class heldType = JavaUtils.getHolderValueType(params[i]);\n-                if (heldType != null) {\n-                    // Create an RPCParam by converting the Holder back into\n-                    // the held type.\n-                    resBody.addParam (new RPCParam (getParameterName(obj,\n-                                                                     methods[index],\n-                                                                     i,\n-                                                                     mName,\n-                                                                     args),\n-                                                    JavaUtils.convert(\n-                                                            argValues[i],\n-                                                            heldType)));\n+            // Then any other out params\n+            if (!outs.isEmpty()) {\n+                for (Iterator i = outs.iterator(); i.hasNext();) {\n+                    // We know this has a holder, so just unwrap the value\n+                    RPCParam param = (RPCParam) i.next();\n+                    Holder holder = (Holder)param.getValue();\n+                    param.setValue(JavaUtils.getHolderValue(holder));\n+                    resBody.addParam(param);\n                 }\n             }\n \n-            resEnv.addBodyElement( resBody );\n+            resEnv.addBodyElement(resBody);\n         }\n     }\n \n-    protected Method[] getMethod(MessageContext msgContext, JavaClass jc, String mName)\n+    protected Method[] getMethod(MessageContext msgContext,\n+                                 JavaClass jc,\n+                                 String methodName)\n         throws Exception\n     {\n-        return jc.getMethod(mName);\n+        return jc.getMethod(methodName);\n     }\n \n     protected Object invokeMethod(MessageContext msgContext,\n@@ -349,47 +267,51 @@ protected Object invokeMethod(MessageContext msgContext,\n         return (method.invoke(obj, argValues));\n     }\n \n-    protected void checkMethodName(MessageContext msgContext, String allowedMethods, String mName)\n+    protected void checkMethodName(MessageContext msgContext,\n+                                   String allowedMethods,\n+                                   String methodName)\n         throws Exception\n     {\n         String methodNameMatch = allowedMethods;\n \n         // allowedMethods may be a comma-delimited string of method names.\n-        // If so, look for the one matching mname.\n+        // If so, look for the one matching methodName.\n         if (allowedMethods != null && allowedMethods.indexOf(' ') != -1) {\n             StringTokenizer tok = new StringTokenizer(allowedMethods, \" \");\n             String nextMethodName = null;\n             while (tok.hasMoreElements()) {\n                 String token = tok.nextToken();\n-                if (token.equals(mName)) {\n+                if (token.equals(methodName)) {\n                     nextMethodName = token;\n                     break;\n                 }\n             }\n             // didn't find a matching one...\n             if (nextMethodName == null) {\n                 throw new AxisFault( \"AxisServer.error\",\n-                        JavaUtils.getMessage(\"namesDontMatch00\", mName, allowedMethods),\n+                        JavaUtils.getMessage(\"namesDontMatch00\", methodName,\n+                                             allowedMethods),\n                         null, null );  // should they??\n             }\n             methodNameMatch = nextMethodName;\n         }\n \n-        if ( methodNameMatch != null && !methodNameMatch.equals(mName) )\n+        if ( methodNameMatch != null && !methodNameMatch.equals(methodName) )\n             throw new AxisFault( \"AxisServer.error\",\n                     JavaUtils.getMessage(\"namesDontMatch01\",\n-                        new String[] {mName, methodNameMatch, allowedMethods}),\n+                        new String[] {methodName, methodNameMatch,\n+                                      allowedMethods}),\n                     null, null );  // should they??\n \n         if (log.isDebugEnabled()) {\n-            log.debug( \"mName: \" + mName );\n+            log.debug( \"methodName: \" + methodName );\n             log.debug( \"MethodNameMatch: \" + methodNameMatch );\n             log.debug( \"MethodName List: \" + allowedMethods );\n         }\n \n         ///////////////////////////////////////////////////////////////\n         // If allowedMethods (i.e. methodNameMatch) is null,\n-        //  then treat it as a wildcard automatically matching mName\n+        //  then treat it as a wildcard automatically matching methodName\n         ///////////////////////////////////////////////////////////////\n         return;\n     }\n@@ -402,8 +324,8 @@ protected void checkMethodName(MessageContext msgContext, String allowedMethods,\n     protected QName getParameterName(Object obj,\n                                       Method method,\n                                       int i,\n-                                      String mName) {\n-        return getParameterName(obj, method, i, mName, null);\n+                                      String methodName) {\n+        return getParameterName(obj, method, i, methodName, null);\n     }\n \n     /**\n@@ -416,7 +338,7 @@ protected QName getParameterName(Object obj,\n     protected QName getParameterName(Object obj,\n                                       Method method,\n                                       int i,\n-                                      String mName,\n+                                      String methodName,\n                                       Vector rpcParams) {\n         QName parmName = null;\n         // Emitter skeletons keep track of the parameter names\n@@ -427,28 +349,10 @@ protected QName getParameterName(Object obj,\n                 if (rpcParams != null && rpcParams.size() > i) {\n                     parmName = ((RPCParam)rpcParams.get(i)).getQName();\n                 } else {\n-                    parmName = new QName(\"\", mName + \"Result\" + i);\n+                    parmName = new QName(\"\", methodName + \"Result\" + i);\n                 }\n             }\n         }\n         return parmName;\n     }\n-\n-    protected QName getReturnQName(ServiceDesc service, String methodName)\n-    {\n-        QName ret = null;\n-\n-        if (service != null) {\n-            OperationDesc oper = service.getOperationDescByName(methodName);\n-            if (oper != null) {\n-                ret = oper.getReturnQName();\n-            }\n-        }\n-\n-        if (ret == null) {\n-            ret = new QName(\"\", methodName + \"Result\");\n-        }\n-\n-        return ret;\n-    }\n }"
            },
            {
                "sha": "31c96094ff83329305eb2dd191595c7fe32c67bc",
                "filename": "src/org/apache/axis/utils/JavaUtils.java",
                "status": "modified",
                "additions": 109,
                "deletions": 0,
                "changes": 109,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/utils/JavaUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/utils/JavaUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/JavaUtils.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -92,6 +92,50 @@\n {\n     protected static Log log =\n         LogFactory.getLog(JavaUtils.class.getName());\n+    \n+    public static Class getWrapperClass(Class primitive)\n+    {\n+        if (primitive == int.class)\n+            return java.lang.Integer.class;\n+        else if (primitive == short.class)\n+            return java.lang.Short.class;\n+        else if (primitive == boolean.class)\n+            return java.lang.Boolean.class;\n+        else if (primitive == byte.class)\n+            return java.lang.Byte.class;\n+        else if (primitive == long.class)\n+            return java.lang.Long.class;\n+        else if (primitive == double.class)\n+            return java.lang.Double.class;\n+        else if (primitive == float.class)\n+            return java.lang.Float.class;\n+        else if (primitive == char.class)\n+            return java.lang.Character.class;\n+        \n+        return null;\n+    }\n+    \n+    public static Class getPrimitiveClass(Class wrapper)\n+    {\n+        if (wrapper == java.lang.Integer.class)\n+            return int.class;\n+        else if (wrapper == java.lang.Short.class)\n+            return short.class;\n+        else if (wrapper == java.lang.Boolean.class)\n+            return boolean.class;\n+        else if (wrapper == java.lang.Byte.class)\n+            return byte.class;\n+        else if (wrapper == java.lang.Long.class)\n+            return long.class;\n+        else if (wrapper == java.lang.Double.class)\n+            return double.class;\n+        else if (wrapper == java.lang.Float.class)\n+            return float.class;\n+        else if (wrapper == java.lang.Character.class)\n+            return char.class;\n+        \n+        return null;\n+    }\n \n     /**\n      * Cache of tt-bytecode BCClass objects which correspond to particular\n@@ -132,6 +176,10 @@ public static Object convert(Object arg, Class destClass)\n         if (destClass == null) {\n             return arg;\n         }\n+        \n+        if (arg != null && destClass.isAssignableFrom(arg.getClass())) {\n+            return arg;\n+        }\n \n         if (log.isDebugEnabled()) {\n             String clsName = \"null\";\n@@ -294,7 +342,68 @@ else if (List.class.isAssignableFrom(destClass)) {\n         return destValue;\n     }\n \n+    public static boolean isConvertable(Object obj, Class dest)\n+    {\n+        Class src = null;\n+        \n+        if (obj != null) {\n+            if (obj instanceof Class) {\n+                src = (Class)obj;\n+            } else {\n+                src = obj.getClass();\n+            }\n+        }\n+        \n+        if (dest == null)\n+            return false;\n+        \n+        if (src != null) {\n+            // If we're directly assignable, we're good.\n+            if (dest.isAssignableFrom(src))\n+                return true;\n+\n+            // If it's a wrapping conversion, we're good.\n+            if (getWrapperClass(src) == dest)\n+                return true;\n+            if (getWrapperClass(dest) == src)\n+                return true;\n+            \n+            // If it's List -> Array or vice versa, we're good.\n+            if ((List.class.isAssignableFrom(src) || src.isArray()) &&\n+                (List.class.isAssignableFrom(dest) || dest.isArray()))\n+                return true;\n+            \n+            if ((src == Hex.class && dest == byte[].class) ||\n+                (src == byte[].class && dest == Hex.class))\n+                return true;\n+            \n+        }\n+        \n+        Class destHeld = JavaUtils.getHolderValueType(dest);\n+        // Can always convert a null to an empty holder\n+        if (src == null)\n+            return (destHeld != null);\n+        \n+        if (destHeld != null) {\n+            if (destHeld.isAssignableFrom(src) || isConvertable(src, destHeld))\n+                return true;\n+        }\n+\n+//        // FIXME : This is a horrible hack put in here to deal with a problem\n+//        // with our default typemappings.\n+//        if (destHeld != null && (getPrimitiveClass(destHeld) == src))\n+//            return true;\n+\n+        // If it's holder -> held or held -> holder, we're good\n+        Class srcHeld = JavaUtils.getHolderValueType(src);\n+        if (srcHeld != null) {\n+            if (dest.isAssignableFrom(srcHeld) || isConvertable(srcHeld, dest))\n+                return true;\n+        }\n \n+        return false;\n+    }\n+    \n     /**\n      * These are java keywords as specified at the following URL (sorted alphabetically).\n      * http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#229308"
            },
            {
                "sha": "7276262e57085df87def3ddd6195e995e2dc1031",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "status": "modified",
                "additions": 77,
                "deletions": 26,
                "changes": 103,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -87,7 +87,9 @@\n     /**\n      * Constructor.\n      */\n-    protected JavaDeployWriter(Emitter emitter, Definition definition, SymbolTable symbolTable) {\n+    protected JavaDeployWriter(Emitter emitter, \n+                               Definition definition, \n+                               SymbolTable symbolTable) {\n         super(emitter,\n                 new QName(definition.getTargetNamespace(), \"deploy\"),\n                 \"\",\n@@ -119,7 +121,8 @@ protected void writeFileBody() throws IOException {\n     protected void writeDeployServices() throws IOException {\n         //deploy the ports on each service\n         Map serviceMap = definition.getServices();\n-        for (Iterator mapIterator = serviceMap.values().iterator(); mapIterator.hasNext();) {\n+        for (Iterator mapIterator = serviceMap.values().iterator(); \n+             mapIterator.hasNext();) {\n             Service myService = (Service) mapIterator.next();\n \n             pw.println();\n@@ -128,9 +131,12 @@ protected void writeDeployServices() throws IOException {\n                     + \" -->\");\n             pw.println();\n \n-            for (Iterator portIterator = myService.getPorts().values().iterator(); portIterator.hasNext();) {\n+            for (Iterator portIterator = myService.getPorts().values().iterator();\n+                 portIterator.hasNext();) {\n                 Port myPort = (Port) portIterator.next();\n-                BindingEntry bEntry =  symbolTable.getBindingEntry(myPort.getBinding().getQName());\n+                BindingEntry bEntry = \n+                        symbolTable.getBindingEntry(\n+                                myPort.getBinding().getQName());\n \n                 // If this isn't an SOAP binding, skip it\n                 if (bEntry.getBindingType() != BindingEntry.TYPE_SOAP) {\n@@ -177,7 +183,8 @@ protected void writeDeployTypes(boolean hasLiteral) throws IOException {\n             if (localPart.startsWith(SymbolTable.ANON_TOKEN)) {\n                 localPart = localPart.substring(1);\n             }\n-            QName qName = new QName(type.getQName().getNamespaceURI(), localPart);\n+            QName qName = new QName(type.getQName().getNamespaceURI(), \n+                                    localPart);\n \n             if (process) {\n                 pw.println(\"      <typeMapping\");\n@@ -276,30 +283,64 @@ protected void writeDeployBinding(Binding binding) throws IOException {\n             // interested in the return type for now.\n             Parameters params =\n                     symbolTable.getOperationParameters(operation, \"\", bEntry);\n-            if (params.returnType instanceof DefinedElement) {\n-                QName returnQName = params.returnType.getQName();\n-                pw.println(\"      <operation name=\\\"\" + operation.getName() +\n-                         \"\\\" returnQName=\\\"retNS:\" +\n-                         returnQName.getLocalPart() +\n-                         \"\\\" xmlns:retNS=\\\"\" +\n-                         returnQName.getNamespaceURI() +\n-                         \"\\\">\");\n-\n-                // map doc/lit elements to this operation\n-                Map parts = operation.getInput().getMessage().getParts();\n-                if (!parts.isEmpty()) {\n-                    Iterator i = parts.values().iterator();\n-                    Part p = (Part) i.next();\n-                    QName elementQName = p.getElementName();\n-                    String ns = elementQName.getNamespaceURI();\n-                    pw.println(\"        <elementMapping xmlns:ns=\\\"\" +\n-                            ns + \"\\\" element=\\\"ns:\" +\n-                            elementQName.getLocalPart() + \"\\\"/>\");\n+            String operName = JavaUtils.xmlNameToJava(operation.getName());\n+            if (params != null) {\n+                if (params.returnType instanceof DefinedElement) {\n+                    QName returnQName = params.returnType.getQName();\n+                    pw.println(\"      <operation name=\\\"\" + operName +\n+                             \"\\\" returnQName=\\\"retNS:\" +\n+                             returnQName.getLocalPart() +\n+                             \"\\\" xmlns:retNS=\\\"\" +\n+                             returnQName.getNamespaceURI() +\n+                             \"\\\">\");\n+\n+                    // map doc/lit elements to this operation\n+                    Map parts = operation.getInput().getMessage().getParts();\n+                    if (!parts.isEmpty()) {\n+                        Iterator i = parts.values().iterator();\n+                        Part p = (Part) i.next();\n+                        QName elementQName = p.getElementName();\n+                        String ns = elementQName.getNamespaceURI();\n+                        pw.println(\"        <elementMapping xmlns:ns=\\\"\" +\n+                                   ns + \"\\\" element=\\\"ns:\" +\n+                                   elementQName.getLocalPart() + \"\\\"/>\");\n+                    }\n+                } else {\n+                    pw.println(\"      <operation name=\\\"\" + \n+                               operName + \"\\\">\");\n                 }\n-\n+                \n+                Vector paramList = params.list;\n+                for (int i = 0; i < paramList.size(); i++) {\n+                    Parameter param = (Parameter) paramList.elementAt(i);\n+                    QName paramQName = param.getQName();\n+                    TypeEntry typeEntry = param.getType();\n+                    QName paramType;\n+                    if (typeEntry instanceof DefinedElement) {\n+                        Node node = symbolTable.getTypeEntry(typeEntry.getQName(), true).getNode();\n+                        paramType = Utils.getNodeTypeRefQName(node, \"type\");\n+                        if (paramType == null)\n+                            paramType = typeEntry.getQName(); // FIXME\n+                    } else {\n+                        paramType = typeEntry.getQName();\n+                    }\n+                    String mode = getModeString(param.getMode());\n+                    pw.print(\"        <parameter \");\n+                    if (paramQName == null || \"\".equals(paramQName.getLocalPart())) {\n+                        pw.print(\"name=\\\"\" + param.getName() + \"\\\" \" );\n+                    } else {\n+                        pw.print(\"qname=\\\"pns:\" + paramQName.getLocalPart() +\n+                                 \"\\\" xmlns:pns=\\\"\" + paramQName.getNamespaceURI() +\n+                                 \"\\\" \");\n+                    }\n+                    pw.print(\"type=\\\"tns:\" + paramType.getLocalPart() + \"\\\" \" );\n+                    pw.print(\"xmlns:tns=\\\"\" + paramType.getNamespaceURI() + \"\\\" \" );\n+                    pw.print(\"mode=\\\"\" + mode + \"\\\"\" );\n+                    pw.println(\"/>\");\n+                }\n+                \n                 pw.println(\"      </operation>\");\n             }\n-\n         }\n \n         pw.print(\"      <parameter name=\\\"allowedMethods\\\" value=\\\"\");\n@@ -321,4 +362,14 @@ else if (emitter.getScope() == Emitter.SESSION_SCOPE) {\n         }\n     } //writeDeployBinding\n \n+    public String getModeString(byte mode)\n+    {\n+        if (mode == Parameter.IN) {\n+            return \"IN\";\n+        } else if (mode == Parameter.INOUT) {\n+            return \"INOUT\";\n+        } else {\n+            return \"OUT\";\n+        }\n+    }\n } // class JavaDeployWriter"
            },
            {
                "sha": "a9fbd8dd6fcae17cdd57b1a6dd41c1a108b78517",
                "filename": "test/RPCDispatch/TestRPC.java",
                "status": "modified",
                "additions": 29,
                "deletions": 11,
                "changes": 40,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/RPCDispatch/TestRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/RPCDispatch/TestRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestRPC.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -6,6 +6,8 @@\n import org.apache.axis.Handler;\n import org.apache.axis.Message;\n import org.apache.axis.MessageContext;\n+import org.apache.axis.encoding.TypeMapping;\n+import org.apache.axis.description.ServiceDesc;\n import org.apache.axis.providers.java.RPCProvider;\n import org.apache.axis.configuration.SimpleProvider;\n import org.apache.axis.handlers.soap.SOAPService;\n@@ -76,11 +78,7 @@ private final Object rpc(String method, Object[] parms)\n         envelope.addBodyElement(body);\n \n         // Invoke the Axis engine\n-        try {\n-            engine.invoke(msgContext);\n-        } catch (AxisFault af) {\n-            return af;\n-        }\n+        engine.invoke(msgContext);\n \n         // Extract the response Envelope\n         Message message = msgContext.getResponseMessage();\n@@ -110,6 +108,9 @@ public void testReverseString() throws Exception {\n         reverse.setOption(\"className\", \"test.RPCDispatch.Service\");\n         reverse.setOption(\"allowedMethods\", \"reverseString\");\n         provider.deployService(new QName(null,SOAPAction), reverse);\n+        ServiceDesc serviceDesc = reverse.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)reverse.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         assertEquals(\"Did not reverse the string correctly.\", \"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}));\n@@ -124,6 +125,9 @@ public void testReverseData() throws Exception {\n         reverse.setOption(\"className\", \"test.RPCDispatch.Service\");\n         reverse.setOption(\"allowedMethods\", \"reverseData\");\n         provider.deployService(new QName(null, SOAPAction), reverse);\n+        ServiceDesc serviceDesc = reverse.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)reverse.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         Data input    = new Data(5, \"abc\", 3);\n@@ -140,6 +144,9 @@ public void testMessageContextImplicit() throws Exception {\n         tgtSvc.setOption(\"className\", \"test.RPCDispatch.Service\");\n         tgtSvc.setOption(\"allowedMethods\", \"targetServiceImplicit\");\n         provider.deployService(new QName(null, SOAPAction), tgtSvc);\n+        ServiceDesc serviceDesc = tgtSvc.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)tgtSvc.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         assertEquals(\"SOAP Action did not equal the targetService.\", \n@@ -155,6 +162,9 @@ public void testNull() throws Exception {\n         echoInt.setOption(\"className\", \"test.RPCDispatch.Service\");\n         echoInt.setOption(\"allowedMethods\", \"echoInt\");\n         provider.deployService(new QName(null, SOAPAction), echoInt);\n+        ServiceDesc serviceDesc = echoInt.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)echoInt.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         assertNull(\"The result was not null as expected.\", rpc(\"echoInt\", new Object[] {null}));\n@@ -169,13 +179,20 @@ public void testSimpleFault() throws Exception {\n         simpleFault.setOption(\"className\", \"test.RPCDispatch.Service\");\n         simpleFault.setOption(\"allowedMethods\", \"simpleFault\");\n         provider.deployService(new QName(null, SOAPAction), simpleFault);\n+        ServiceDesc serviceDesc = simpleFault.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)simpleFault.getTypeMappingRegistry().getDefaultTypeMapping());\n+\n+        try {\n+            rpc(\"simpleFault\", new Object[] {\"foobar\"});\n+        } catch (AxisFault result) {\n+            assertEquals(\"faultString was not set correctly.\",\n+                \"test.RPCDispatch.Service$TestFault: foobar\",\n+                result.getFaultString());\n+            return;\n+        }\n \n-        Object result = rpc(\"simpleFault\", new Object[] {\"foobar\"});\n-        assertTrue(\"Did not get a fault as expected.\", \n-           result instanceof AxisFault);\n-        AxisFault fault = (AxisFault) result;\n-        assertEquals(\"faultString was not set correctly.\", \n-            \"test.RPCDispatch.Service$TestFault: foobar\", fault.getFaultString());\n+        fail(\"Did not get an expected fault!\");\n     }\n \n     public static void main(String args[])\n@@ -184,6 +201,7 @@ public static void main(String args[])\n         TestRPC tester = new TestRPC(\"RPC test\");\n         tester.testReverseString();\n         tester.testReverseData();\n+          tester.testSimpleFault();\n       } catch (Exception e) {\n         e.printStackTrace();\n       }"
            },
            {
                "sha": "69a86b09822ab7fd4c2f033cc1fa499271bcaeab",
                "filename": "test/RPCDispatch/TestSerializedRPC.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/RPCDispatch/TestSerializedRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/RPCDispatch/TestSerializedRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestSerializedRPC.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -83,7 +83,7 @@ public TestSerializedRPC(String name) throws Exception {\n         // be testing parameter dispatch by name, so if debug info isn't\n         // compiled into the Service class, the names are going to be \"in0\",\n         // etc.  Make sure they match.\n-        OperationDesc oper = desc.getOperationDescByName(\"concatenate\");\n+        OperationDesc oper = desc.getOperationByName(\"concatenate\");\n         assertNotNull(oper);\n         \n         firstParamName = oper.getParameter(0).getName();"
            },
            {
                "sha": "abd73945985dabc7778dcabea1cbe1af528a86d6",
                "filename": "test/encoding/TestSer.java",
                "status": "modified",
                "additions": 12,
                "deletions": 9,
                "changes": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/encoding/TestSer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/encoding/TestSer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/TestSer.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -33,8 +33,7 @@\n     public static void main(String [] args) throws Exception\n     {\n         TestSer tester = new TestSer(\"TestSer\");\n-        tester.testDataNoHrefs();\n-        tester.testDataWithHrefs();\n+        tester.testRPCElement();\n     }\n     \n     public TestSer(String name) {\n@@ -105,14 +104,18 @@ public void doTestData (boolean multiref) throws Exception {\n     /**\n      * Test RPC element serialization when we have no MessageContext\n      */\n-    public void testRPCElement() throws Exception\n+    public void testRPCElement()\n     {\n-        SOAPEnvelope env = new SOAPEnvelope();\n-        RPCElement method = new RPCElement(\"ns\",\n-                                           \"method\",\n-                                           new Object [] { \"argument\" });\n-        env.addBodyElement(method);\n-        String soapStr = env.toString();\n+        try {\n+            SOAPEnvelope env = new SOAPEnvelope();\n+            RPCElement method = new RPCElement(\"ns\",\n+                                               \"method\",\n+                                               new Object [] { \"argument\" });\n+            env.addBodyElement(method);\n+            String soapStr = env.toString();\n+        } catch (Exception e) {\n+            fail(e.getMessage());\n+        }\n \n         // If there was no exception, we succeeded in serializing it.\n     }"
            },
            {
                "sha": "011a8ff27e26fcd052d75cffac34fd804e0d0e13",
                "filename": "test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -42,7 +42,7 @@\n         }\n         return in;\n     }\n-    public java.util.Map testMapFooArray(java.util.Map map)\n+    public java.util.HashMap testMapFooArray(java.util.HashMap map)\n         throws java.rmi.RemoteException {\n         return map;\n     }"
            },
            {
                "sha": "0abc2cdd81544a19304d056414665a4e8a65812b",
                "filename": "test/wsdl/marrays/MArrayTestsServiceTestCase.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/wsdl/marrays/MArrayTestsServiceTestCase.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/eb35064a8e4b4cbb1985779c10d8a833e1eabf94/test/wsdl/marrays/MArrayTestsServiceTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/marrays/MArrayTestsServiceTestCase.java?ref=eb35064a8e4b4cbb1985779c10d8a833e1eabf94",
                "patch": "@@ -131,7 +131,7 @@ public void testMArrayTests() {\n \n         try {\n             // Test 3F: Some of the Foo elements are multi-referenced.   \n-            Map map = new HashMap();\n+            HashMap map = new HashMap();\n             Foo[] array = new Foo[1];\n             array[0] = new Foo();\n             array[0].setValue(123);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/axis1-java/commit/aff486af8c4babc7bbf2ad91199cc7304a465477",
        "repo": "axis1-java",
        "parent": "https://github.com/apache/axis1-java/commit/5b80febddaaac983482930588a4e43a3c051dd77",
        "message": "Improvements / cleanup of the RPC infrastructure + service metadata.  Still\nneeds some work, but this is much more like it.  Need to implement some edge-\ncase tests for this code.\n\nDetails:\n\n* Fix NPE in WSDDOperation - there can be 0 elementMappings\n\n* Slight change in TypeMappingImpl to only override the qname or class\n  mapping for a registered type mapping if there is a serializer/deserializer\n  present OR if there is no other mapping registered in that direction.\n\n* Mapping from xmlsoap:Map is now to HashMap, not Map.  We still happily\n  serialize any Map to an xmlsoap:Map, but the deser mapping goes to the\n  concrete class.\n\n* Add \"isConvertable()\" method to JavaUtils.\n\n* ServiceDesc is now much smarter about introspecting.  We introspect once\n  for each method that we're interested in, and methods which never get called\n  typically won't ever get introspected for.\n\n* Implement \"synchronizing\" OperationDescs which have been generated from\n  deployment (WSDD) info with an implementation class on the server.  This\n  means if we have a service with this deployment info:\n      <service...>\n         <operation name=\"method\">\n            <parameter name=\"a\" type=\"xsd:string\" mode=\"IN\"/>\n            <parameter name=\"b\" type=\"xsd:string\" mode=\"INOUT\"/>\n            <parameter name=\"c\" type=\"xsd:string\" mode=\"OUT\"/>\n         </operation>\n      </service>\n\n  ...and a method on the implementation class which looks like this:\n\n      public void method(String a, StringHolder b, StringHolder c)\n\n  we will match the two together, recording the correct Java classes for\n  the parameters in the ParameterDescs, and keeping a pointer to the Method\n  in the OperationDesc.  See next couple of bullets for why this is cool.\n\n* RPCProvider method search + dispatch code is now *much* cleaner.  We rely\n  on \"early binding\" to dispatch to the correct method via a ServiceDesc,\n  so by the time we've deserialized the RPCElement successfully, we know\n  exactly which OperationDesc (and hence which Java Method) we're dealing with.\n  That enables us to simply set up the parameters and call it.\n\n* RPCHandler now checks any actually received xsi:types against what is\n  expected/desired by the appropriate ParameterDesc, and throws a fault\n  if it can't map them.\n\n* RPCElement doesn't try to introspect every time anymore, it just makes sure\n  the ServiceDesc has the right typemapping and implementation class if\n  appropriate.  Then getOperationsByName() will introspect if necessary.\n\n* JavaDeployWriter now writes out <parameter> information into the WSDD\n\n* Put in missing mapping in samples/echo service, and put an <operation>\n  into the deploy.wsdd so we get the OUT parameters right for\n  echoStructAsSimpleTypes()\n\n* Enable accessing a Call's TypeMapping via getTypeMapping() - relies on the\n  encodingStyle being set correctly.\n\n* Remove various try/catch blocks which were obscuring exceptions in tests.\n  Tests in general should throw exceptions (and their associated stack traces)\n  instead of eating them, unless there's a good reason to eat them.\n\n* Move code which understands primitives/wrappers into JavaUtils, since it's\n  generally handy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246799 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "axis1-java_190",
        "file": [
            {
                "sha": "068742506de01ffd12bb7c49f5bb7008a15fae8a",
                "filename": "samples/echo/EchoServiceBindingStub.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/samples/echo/EchoServiceBindingStub.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/samples/echo/EchoServiceBindingStub.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/EchoServiceBindingStub.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -62,6 +62,13 @@ public EchoServiceBindingStub(javax.xml.rpc.Service service) throws org.apache.a\n             cachedSerFactories.add(arraysf);\n             cachedDeserFactories.add(arraydf);\n \n+            qName = new javax.xml.rpc.namespace.QName(\"http://soapinterop.org/\", \"ArrayOf_tns2_Map\");\n+            cachedSerQNames.add(qName);\n+            cls = java.util.HashMap[].class;\n+            cachedSerClasses.add(cls);\n+            cachedSerFactories.add(arraysf);\n+            cachedDeserFactories.add(arraydf);\n+\n             qName = new javax.xml.rpc.namespace.QName(\"http://soapinterop.org/xsd\", \"ArrayOfstring\");\n             cachedSerQNames.add(qName);\n             cls = java.lang.String[].class;"
            },
            {
                "sha": "70eb56c80c56cde23f066dcdf7e61fd2d8730554",
                "filename": "samples/echo/TestClient.java",
                "status": "modified",
                "additions": 54,
                "deletions": 138,
                "changes": 192,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/samples/echo/TestClient.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/samples/echo/TestClient.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/TestClient.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -181,170 +181,106 @@ public void execute2A() throws Exception {\n \n         {\n             String input = \"abccdefg\";\n-            try {\n-                output = binding.echoString(input);\n-                verify(\"echoString\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoString\", input, e);\n-            }\n+            output = binding.echoString(input);\n+            verify(\"echoString\", input, output);\n         }\n         \n         {\n             String[] input = new String[] {\"abc\", \"def\"};\n-            try {\n-                output = binding.echoStringArray(input);\n-                verify(\"echoStringArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStringArray\", input, e);\n-            }\n+            output = binding.echoStringArray(input);\n+            verify(\"echoStringArray\", input, output);\n         }\n         \n         {\n             Integer input = new Integer(42);\n-            try {\n-                output = new Integer( binding.echoInteger(input.intValue()));\n-                verify(\"echoInteger\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoInteger\", input, e);\n-            }\n+            output = new Integer( binding.echoInteger(input.intValue()));\n+            verify(\"echoInteger\", input, output);\n         }\n         \n         {\n             int[] input = new int[] {42};\n-            try {\n-                output = binding.echoIntegerArray(input);\n-                verify(\"echoIntegerArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoIntegerArray\", input, e);\n-            }\n+            output = binding.echoIntegerArray(input);\n+            verify(\"echoIntegerArray\", input, output);\n         }\n         \n         {\n             Float input = new Float(3.7F);\n-            try {\n-                output = new Float(binding.echoFloat(input.floatValue()));\n-                verify(\"echoFloat\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoFloat\", input, e);\n-            }\n+            output = new Float(binding.echoFloat(input.floatValue()));\n+            verify(\"echoFloat\", input, output);\n         }\n \n         {\n             float[] input = new float[] {3.7F, 7F};\n-            try {\n-                output = binding.echoFloatArray(input);\n-                verify(\"echoFloatArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoFloatArray\", input, e);\n-            }\n+            output = binding.echoFloatArray(input);\n+            verify(\"echoFloatArray\", input, output);\n         }\n \n         {\n             SOAPStruct input = new SOAPStruct(5, \"Hello\", 103F);\n-            try {\n-                output = binding.echoStruct(input);\n-                verify(\"echoStruct\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStruct\", input, e);\n-            }\n+            output = binding.echoStruct(input);\n+            verify(\"echoStruct\", input, output);\n         }\n         \n         {\n             SOAPStruct[] input = new SOAPStruct[] {\n                 new SOAPStruct(1, \"one\", 1.1F),\n                 new SOAPStruct(2, \"two\", 2.2F),\n                 new SOAPStruct(3, \"three\", 3.3F)};\n-            try {\n-                output = binding.echoStructArray(input);\n-                verify(\"echoStructArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStructArray\", input, e);\n-            }\n+            output = binding.echoStructArray(input);\n+            verify(\"echoStructArray\", input, output);\n         }\n \n         {\n-            try {\n-                binding.echoVoid();\n-                verify(\"echoVoid\", null, null);\n-            } catch (Exception e) {\n-                verify(\"echoVoid\", null, e);\n-            }\n+            binding.echoVoid();\n+            verify(\"echoVoid\", null, null);\n         }\n \n         {\n             byte[] input = \"Base64\".getBytes();\n-            try {\n-                output = binding.echoBase64(input);\n-                verify(\"echoBase64\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoBase64\", input, e);\n-            }\n+            output = binding.echoBase64(input);\n+            verify(\"echoBase64\", input, output);\n         }\n         \n         {\n             Hex input = new Hex(\"3344\");\n-            try {\n-                output = binding.echoHexBinary(input.getBytes());\n-                verify(\"echoHexBinary\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoHexBinary\", input, e);\n-            }\n+            output = binding.echoHexBinary(input.getBytes());\n+            verify(\"echoHexBinary\", input, output);\n         }\n         \n         {\n             Date input = new Date();\n-            try {\n-                output = binding.echoDate(input);\n-                verify(\"echoDate\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoDate\", input, e);\n-            }\n+            output = binding.echoDate(input);\n+            verify(\"echoDate\", input, output);\n         }\n         \n         {\n             BigDecimal input = new BigDecimal(\"3.14159\");\n-            try {\n-                output = binding.echoDecimal(input);\n-                verify(\"echoDecimal\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoDecimal\", input, e);\n-            }\n+            output = binding.echoDecimal(input);\n+            verify(\"echoDecimal\", input, output);\n         }\n         \n         {\n             Boolean input = Boolean.TRUE;\n-            try {\n-                output = new Boolean( binding.echoBoolean(input.booleanValue()));\n-                verify(\"echoBoolean\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoBoolean\", input, e);\n-            }\n+            output = new Boolean( binding.echoBoolean(input.booleanValue()));\n+            verify(\"echoBoolean\", input, output);\n         }\n         \n         HashMap map = new HashMap();\n         map.put(new Integer(5), \"String Value\");\n         map.put(\"String Key\", new Date());\n         {\n             HashMap input = map;\n-            try {\n-                output = binding.echoMap(input);\n-                verify(\"echoMap\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoMap\", input, e);\n-            }\n+            output = binding.echoMap(input);\n+            verify(\"echoMap\", input, output);\n         }\n \n         HashMap map2 = new HashMap();\n         map2.put(\"this is the second map\", new Boolean(true));\n         map2.put(\"test\", new Float(411));\n         {\n             HashMap[] input = new HashMap [] {map, map2 };\n-            try {\n-                output = binding.echoMapArray(input);\n-                verify(\"echoMapArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoMapArray\", input, e);\n-            }\n+            output = binding.echoMapArray(input);\n+            verify(\"echoMapArray\", input, output);\n         }\n     }\n \n@@ -356,32 +292,24 @@ public void execute2B() throws Exception {\n         Object output = null;\n         {\n             SOAPStruct input = new SOAPStruct(5, \"Hello\", 103F);\n-            try {\n-                StringHolder outputString = new StringHolder();\n-                IntHolder outputInteger = new IntHolder();\n-                FloatHolder outputFloat = new FloatHolder();\n-                binding.echoStructAsSimpleTypes(input, outputString, outputInteger, outputFloat);\n-                output = new SOAPStruct(outputInteger.value,\n-                                        outputString.value,\n-                                        outputFloat.value);\n-                verify(\"echoStructAsSimpleTypes\", \n-                       input, output);\n-            } catch (Exception e) {\n-                verify(\"echoStructAsSimpleTypes\", input, e);\n-            }\n+            StringHolder outputString = new StringHolder();\n+            IntHolder outputInteger = new IntHolder();\n+            FloatHolder outputFloat = new FloatHolder();\n+            binding.echoStructAsSimpleTypes(input, outputString, outputInteger, outputFloat);\n+            output = new SOAPStruct(outputInteger.value,\n+                                    outputString.value,\n+                                    outputFloat.value);\n+            verify(\"echoStructAsSimpleTypes\", \n+                   input, output);\n         }\n \n         {\n             SOAPStruct input = new SOAPStruct(5, \"Hello\", 103F);\n-            try {\n-                output = binding.echoSimpleTypesAsStruct(\n-                   input.getVarString(), input.getVarInt(), input.getVarFloat());\n-                verify(\"echoSimpleTypesAsStruct\", \n-                       input, \n-                       output);\n-            } catch (Exception e) {\n-                verify(\"echoSimpleTypesAsStruct\", input, e);\n-            }\n+            output = binding.echoSimpleTypesAsStruct(\n+                    input.getVarString(), input.getVarInt(), input.getVarFloat());\n+            verify(\"echoSimpleTypesAsStruct\", \n+                   input, \n+                   output);\n         }\n \n         {\n@@ -390,39 +318,27 @@ public void execute2B() throws Exception {\n             input[0][1] = \"01\";\n             input[1][0] = \"10\";\n             input[1][1] = \"11\";\n-            try {\n-                output = binding.echo2DStringArray(input);\n-                verify(\"echo2DStringArray\", \n-                       input, \n-                       output);\n-            } catch (Exception e) {\n-                verify(\"echo2DStringArray\", input, e);\n-            }\n+            output = binding.echo2DStringArray(input);\n+            verify(\"echo2DStringArray\", \n+                   input, \n+                   output);\n         }\n \n         {\n             SOAPStructStruct input = new SOAPStructStruct(\"AXIS\",\n                                                           1,\n                                                           3F,\n                                                           new SOAPStruct(5, \"Hello\", 103F));\n-            try {\n-                output = binding.echoNestedStruct(input);\n-                verify(\"echoNestedStruct\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoNestedStruct\", input, e);\n-            }\n+            output = binding.echoNestedStruct(input);\n+            verify(\"echoNestedStruct\", input, output);\n         }\n         {\n             SOAPArrayStruct input = new SOAPArrayStruct(\"AXIS\",\n                                                         1,\n                                                         3F,\n                                                         new String[] {\"one\", \"two\", \"three\"});\n-            try {\n-                output = binding.echoNestedArray(input);\n-                verify(\"echoNestedArray\", input, output);\n-            } catch (Exception e) {\n-                verify(\"echoNestedArray\", input, e);\n-            }\n+            output = binding.echoNestedArray(input);\n+            verify(\"echoNestedArray\", input, output);\n         }\n     }\n "
            },
            {
                "sha": "154c22bd0e55e4eabb7a586be9dd215feac00876",
                "filename": "samples/echo/deploy.wsdd",
                "status": "modified",
                "additions": 18,
                "deletions": 1,
                "changes": 19,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/samples/echo/deploy.wsdd",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/samples/echo/deploy.wsdd",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/echo/deploy.wsdd?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -6,8 +6,9 @@\n <!--   java org.apache.axis.client.http.AdminClient deploy.wsdd  -->\n <!--      after the axis server is running                      -->\n \n- <deployment \tname=\"test\" xmlns=\"http://xml.apache.org/axis/wsdd/\" \n+ <deployment \tname=\"test\" xmlns=\"http://xml.apache.org/axis/wsdd/\"\n \t\t\txmlns:java=\"http://xml.apache.org/axis/wsdd/providers/java\"\n+            xmlns:xsd=\"http://www.w3.org/2000/10/XMLSchema\"\n \t\t\txmlns:xsi=\"http://www.w3.org/2000/10/XMLSchema-instance\">\n   <service name=\"echo\" provider=\"java:RPC\" >\n     <namespace>http://soapinterop.org/</namespace>\n@@ -62,6 +63,14 @@\n         deserializer=\"org.apache.axis.encoding.ser.ArrayDeserializerFactory\"\n         encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"\n       />\n+      <typeMapping\n+        xmlns:ns=\"http://soapinterop.org/\"\n+        qname=\"ns:ArrayOf_tns2_Map\"\n+        type=\"java:java.util.HashMap[]\"\n+        serializer=\"org.apache.axis.encoding.ser.ArraySerializerFactory\"\n+        deserializer=\"org.apache.axis.encoding.ser.ArrayDeserializerFactory\"\n+        encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"\n+      />\n       <typeMapping\n         xmlns:ns=\"http://soapinterop.org/xsd\"\n         qname=\"ns:SOAPStructStruct\"\n@@ -87,5 +96,13 @@\n         <handler type=\"java:samples.echo.echoHeaderStringHandler\"/>\n         <handler type=\"java:samples.echo.echoHeaderStructHandler\"/>\n     </responseFlow>\n+\n+    <operation name=\"echoStructAsSimpleTypes\">\n+      <parameter name=\"inputStruct\" xmlns:ns=\"http://soapinterop.org/xsd\"\n+                 type=\"ns:SOAPStruct\"/>\n+      <parameter name=\"outputString\" type=\"xsd:string\" mode=\"OUT\"/>\n+      <parameter name=\"outputInteger\" type=\"xsd:int\" mode=\"OUT\"/>\n+      <parameter name=\"outputFloat\" type=\"xsd:float\" mode=\"OUT\"/>\n+    </operation>\n   </service>\n </deployment>"
            },
            {
                "sha": "a2e92732dc9a83cfadb5270dc330fb2fd3be953a",
                "filename": "src/org/apache/axis/client/Call.java",
                "status": "modified",
                "additions": 40,
                "deletions": 21,
                "changes": 61,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/client/Call.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/client/Call.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -698,7 +698,12 @@ public boolean isParameterAndReturnSpecRequired() {\n      */\n     public void addParameter(QName paramName, QName xmlType,\n             ParameterMode parameterMode) {\n-        addParameter(paramName, xmlType, null, parameterMode);\n+        Class javaType = null;\n+        TypeMapping tm = getTypeMapping();\n+        if (tm != null) {\n+            javaType = tm.getClassForQName(xmlType);\n+        }\n+        addParameter(paramName, xmlType, javaType, parameterMode);\n     }\n \n     /**\n@@ -749,7 +754,12 @@ public void addParameter(QName paramName, QName xmlType,\n      */\n     public void addParameter(String paramName, QName xmlType,\n             ParameterMode parameterMode) {\n-        addParameter(new QName(\"\", paramName), xmlType, null, parameterMode);\n+        Class javaType = null;\n+        TypeMapping tm = getTypeMapping();\n+        if (tm != null) {\n+            javaType = tm.getClassForQName(xmlType);\n+        }\n+        addParameter(new QName(\"\", paramName), xmlType, javaType, parameterMode);\n     }\n \n     /**\n@@ -812,7 +822,11 @@ public QName getParameterTypeByQName(QName paramQName) {\n     public void setReturnType(QName type) {\n         if (parmAndRetReq) {\n             returnType = type ;\n-            if (operation != null) operation.setReturnType(type);\n+            if (operation != null) {\n+                operation.setReturnType(type);\n+                TypeMapping tm = getTypeMapping();\n+                operation.setReturnClass(tm.getClassForQName(type));\n+            }\n         }\n         else {\n             throw new JAXRPCException();\n@@ -1517,6 +1531,22 @@ public void clearHeaders()\n     {\n         myHeaders = null;\n     }\n+    \n+    public TypeMapping getTypeMapping()\n+    {\n+        // Get the TypeMappingRegistry\n+        TypeMappingRegistry tmr = msgContext.getTypeMappingRegistry();\n+\n+        // If a TypeMapping is not available, add one.\n+        TypeMapping tm = (TypeMapping) tmr.getTypeMapping(encodingStyle);\n+        TypeMapping defaultTM = (TypeMapping) tmr.getDefaultTypeMapping();\n+        if (tm == null || tm == defaultTM ) {\n+            tm = (TypeMapping) tmr.createTypeMapping();\n+            tm.setSupportedNamespaces(new String[] {encodingStyle});\n+            tmr.register(encodingStyle, tm);\n+        }\n+        return tm;\n+    }\n \n     /**\n      * Register type mapping information for serialization/deserialization\n@@ -1537,25 +1567,14 @@ public void registerTypeMapping(Class javaType, QName xmlType,\n                                     SerializerFactory sf,\n                                     DeserializerFactory df,\n                                     boolean force) {\n-        // Get the TypeMappingRegistry\n-        TypeMappingRegistry tmr = msgContext.getTypeMappingRegistry();\n-\n-        // If a TypeMapping is not available, add one.\n-        TypeMapping tm = (TypeMapping) tmr.getTypeMapping(encodingStyle);\n-        TypeMapping defaultTM = (TypeMapping) tmr.getDefaultTypeMapping();\n-        try {\n-            if (tm == null || tm == defaultTM ) {\n-                tm = (TypeMapping) tmr.createTypeMapping();\n-                tm.setSupportedNamespaces(new String[] {encodingStyle});\n-                tmr.register(encodingStyle, tm);\n-            }\n-            if (!force && tm.isRegistered(javaType, xmlType))\n-                return;\n-\n-            // Register the information\n-            tm.register(javaType, xmlType, sf, df);\n-        } catch (Exception e) {}\n+        TypeMapping tm = getTypeMapping();\n+        if (!force && tm.isRegistered(javaType, xmlType))\n+            return;\n+        \n+        // Register the information\n+        tm.register(javaType, xmlType, sf, df);\n     }\n+\n     public void registerTypeMapping(Class javaType, QName xmlType,\n                                     Class sfClass, Class dfClass) {\n         registerTypeMapping(javaType, xmlType, sfClass, dfClass, true);"
            },
            {
                "sha": "8434eaeaef5a7174f440a5c857487930248b9286",
                "filename": "src/org/apache/axis/client/Service.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/client/Service.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/client/Service.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Service.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -548,7 +548,7 @@ public void setTypeMappingRegistry(TypeMappingRegistry registry)\n      * @return TypeMappingRegistry The registry\n      */\n     public TypeMappingRegistry getTypeMappingRegistry() {\n-        return( null );\n+        return( engine.getTypeMappingRegistry() );\n     }\n \n     /**"
            },
            {
                "sha": "ea47809bca9b50170ec03d027d38bdf9e3a0c611",
                "filename": "src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/deployment/wsdd/WSDDOperation.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/deployment/wsdd/WSDDOperation.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -110,12 +110,14 @@ public WSDDOperation(Element e, ServiceDesc parent)\n                 throw new WSDDException(JavaUtils.getMessage(\"onlyOneMapping\"));\n             }\n \n-            // Register a mapping from an Element QName to a particular\n-            // method so we can dispatch for doc/lit services.\n-            Element el = mappingElements[0];\n-            String elString = el.getAttribute(\"qname\");\n-            QName elQName = XMLUtils.getQNameFromString(elString, el);\n-            desc.setElementQName(elQName);\n+            if (mappingElements.length > 0) {\n+                // Register a mapping from an Element QName to a particular\n+                // method so we can dispatch for doc/lit services.\n+                Element el = mappingElements[0];\n+                String elString = el.getAttribute(\"qname\");\n+                QName elQName = XMLUtils.getQNameFromString(elString, el);\n+                desc.setElementQName(elQName);\n+            }\n         }\n     }\n "
            },
            {
                "sha": "97ec1aa8a28007577bea0bdb6db7d0b68295a482",
                "filename": "src/org/apache/axis/description/OperationDesc.java",
                "status": "modified",
                "additions": 41,
                "deletions": 1,
                "changes": 42,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/description/OperationDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/description/OperationDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/OperationDesc.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -57,6 +57,7 @@\n import javax.xml.rpc.namespace.QName;\n import java.util.ArrayList;\n import java.util.Iterator;\n+import java.lang.reflect.Method;\n \n /**\n  * An OperationDesc is an abstract description of an operation on a service.\n@@ -83,10 +84,18 @@\n \n     /** The return type */\n     private QName returnType;\n+    \n+    /** The return class */\n+    private Class returnClass;\n+    \n+    // FIXME : Just have a return ParamDesc???\n \n     /** The Java method name this maps to (is this just name?) */\n     private String methodName;\n \n+    /** The actual Java method associated with this operation, if known */\n+    private Method method;\n+\n     /** This operation's style.  If null, we default to our parent's */\n     private Integer style;\n \n@@ -129,6 +138,14 @@ public void setReturnType(QName returnType) {\n         this.returnType = returnType;\n     }\n \n+    public Class getReturnClass() {\n+        return returnClass;\n+    }\n+\n+    public void setReturnClass(Class returnClass) {\n+        this.returnClass = returnClass;\n+    }\n+\n     public QName getElementQName() {\n         return elementQName;\n     }\n@@ -194,6 +211,14 @@ public int getNumParams() {\n         return parameters.size();\n     }\n \n+    public Method getMethod() {\n+        return method;\n+    }\n+\n+    public void setMethod(Method method) {\n+        this.method = method;\n+    }\n+\n     public ParameterDesc getParamByQName(QName qname)\n     {\n         for (Iterator i = parameters.iterator(); i.hasNext();) {\n@@ -211,7 +236,7 @@ public ParameterDesc getInputParamByQName(QName qname)\n \n         param = getParamByQName(qname);\n \n-        if ((param == null) || (param.getMode() != ParameterDesc.IN)) {\n+        if ((param == null) || (param.getMode() == ParameterDesc.OUT)) {\n             param = null;\n         }\n \n@@ -233,10 +258,25 @@ public ParameterDesc getOutputParamByQName(QName qname)\n                 param = new ParameterDesc();\n                 param.setQName(qname);\n                 param.setTypeQName(returnType);\n+                param.setJavaType(returnClass);\n             }\n         }\n \n         return param;\n     }\n+\n+    /**\n+     * Returns an ordered list of out params (NOT inouts)\n+     */\n+    public ArrayList getOutParams() {\n+        ArrayList result = new ArrayList();\n+        for (Iterator i = parameters.iterator(); i.hasNext();) {\n+            ParameterDesc desc = (ParameterDesc) i.next();\n+            if (desc.getMode() == ParameterDesc.OUT) {\n+                result.add(desc);\n+            }\n+        }\n+        return result;\n+    }\n }\n "
            },
            {
                "sha": "4de4da4d983f4b3f24b30304b6e27a61e3800583",
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "status": "modified",
                "additions": 221,
                "deletions": 51,
                "changes": 272,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/description/ServiceDesc.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/description/ServiceDesc.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -56,6 +56,7 @@\n \n import org.apache.axis.utils.JavaUtils;\n import org.apache.axis.encoding.TypeMapping;\n+import org.apache.axis.encoding.TypeMappingRegistry;\n \n import javax.xml.rpc.namespace.QName;\n import java.util.ArrayList;\n@@ -114,6 +115,10 @@\n     /** Lookup caches */\n     private HashMap name2OperationsMap = null;\n     private HashMap qname2OperationMap = null;\n+    private HashMap method2OperationMap = new HashMap();\n+    private ArrayList completedNames = new ArrayList();\n+\n+    private TypeMapping tm = null;\n \n     /**\n      * Default constructor\n@@ -159,6 +164,22 @@ public void setAllowedMethods(ArrayList allowedMethods) {\n         this.allowedMethods = allowedMethods;\n     }\n \n+    public Class getImplClass() {\n+        return implClass;\n+    }\n+\n+    public void setImplClass(Class implClass) {\n+        this.implClass = implClass;\n+    }\n+\n+    public TypeMapping getTypeMapping() {\n+        return tm;\n+    }\n+\n+    public void setTypeMapping(TypeMapping tm) {\n+        this.tm = tm;\n+    }\n+\n     public void addOperationDesc(OperationDesc operation)\n     {\n         operations.add(operation);\n@@ -176,38 +197,42 @@ public void addOperationDesc(OperationDesc operation)\n         }\n \n         overloads.add(operation);\n-\n-        // If we're adding these, we won't introspect (either because we\n-        // trust the deployer/user to add everything instead, or because\n-        // we're actually in the middle of introspecting right now)\n-        hasOperationData = true;\n     }\n \n     public OperationDesc [] getOperationsByName(String methodName)\n     {\n+        getSyncedOperationsForName(methodName);\n+\n         if (name2OperationsMap == null)\n             return null;\n \n-        ArrayList result = (ArrayList)name2OperationsMap.get(methodName);\n-        if (result == null)\n+        ArrayList overloads = (ArrayList)name2OperationsMap.get(methodName);\n+        if (overloads == null) {\n             return null;\n+        }\n \n-        OperationDesc [] array = new OperationDesc [result.size()];\n-        return (OperationDesc[])result.toArray(array);\n+        OperationDesc [] array = new OperationDesc [overloads.size()];\n+        return (OperationDesc[])overloads.toArray(array);\n     }\n \n     /**\n      * Return an operation matching the given method name.  Note that if we\n      * have multiple overloads for this method, we will return the first one.\n      */\n-    public OperationDesc getOperationDescByName(String methodName)\n+    public OperationDesc getOperationByName(String methodName)\n     {\n+        // If we need to load up operations from introspection data, do it.\n+        // This returns fast if we don't need to do anything, so it's not very\n+        // expensive.\n+        getSyncedOperationsForName(methodName);\n+\n         if (name2OperationsMap == null)\n             return null;\n \n         ArrayList overloads = (ArrayList)name2OperationsMap.get(methodName);\n-        if (overloads == null)\n+        if (overloads == null) {\n             return null;\n+        }\n \n         return (OperationDesc)overloads.get(0);\n     }\n@@ -219,9 +244,13 @@ public OperationDesc getOperationByElementQName(QName qname)\n     {\n         // If we're a wrapped service (i.e. RPC or WRAPPED style), we expect\n         // this qname to match one of our operation names directly.\n-        // FIXME : Should this really ignore namespaces?\n+\n+        // FIXME : Should this really ignore namespaces?  Perhaps we should\n+        //         just check by QName... (I think that's right, actually,\n+        //         and the only time we should ignore namespaces is when\n+        //         deserializing SOAP-encoded structures?)\n         if (isWrapped()) {\n-            return getOperationDescByName(qname.getLocalPart());\n+            return getOperationByName(qname.getLocalPart());\n         }\n \n         // If we're MESSAGE style, we should only have a single operation,\n@@ -246,55 +275,196 @@ public OperationDesc getOperationByElementQName(QName qname)\n     }\n \n     /**\n-     * Fill in what we can of the service description by introspecting a\n-     * Java class.  Only do this if we haven't already been filled in.\n+     * Synchronize an existing OperationDesc to a java.lang.Method.\n+     *\n+     * This method is used when the deployer has specified operation metadata\n+     * and we want to match that up with a real java Method so that the\n+     * Operation-level dispatch carries us all the way to the implementation.\n+     * Search the declared methods on the implementation class to find one\n+     * with an argument list which matches our parameter list.\n      */\n-    public void loadServiceDescByIntrospection(Class jc, TypeMapping tm)\n+    private void syncOperationToClass(OperationDesc oper)\n     {\n-        if (hasOperationData)\n+        // If we're already mapped to a Java method, no need to do anything.\n+        if (oper.getMethod() != null)\n             return;\n \n-        Method [] methods = jc.getDeclaredMethods();\n+        // Find the method.  We do this once for each Operation.\n+        Method [] methods = implClass.getDeclaredMethods();\n+        for (int i = 0; i < methods.length; i++) {\n+            Method method = methods[i];\n+            if (method.getName().equals(oper.getName())) {\n+                // Check params\n+                Class [] paramTypes = method.getParameterTypes();\n+                if (paramTypes.length != oper.getNumParams())\n+                    continue;\n+\n+                int j;\n+                for (j = 0; j < paramTypes.length; j++) {\n+                    Class type = paramTypes[j];\n+                    ParameterDesc param = oper.getParameter(j);\n+                    // See if they match\n+                    Class paramClass = tm.getClassForQName(\n+                            param.getTypeQName());\n+\n+                    // This is a match if the paramClass is somehow\n+                    // convertable to the \"real\" parameter type.\n+                    if (JavaUtils.isConvertable(paramClass, type)) {\n+                        param.setJavaType(type);\n+                        continue;\n+                    }\n+                    break;\n+                }\n+\n+                if (j != paramTypes.length) {\n+                    // failed.\n+                    continue;\n+                }\n+\n+                // At some point we might want to check here to see if this\n+                // Method is already associated with another Operation, but\n+                // this doesn't seem critital.\n+\n+                oper.setMethod(method);\n+                method2OperationMap.put(method, oper);\n+                return;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Fill in a service description by introspecting the implementation\n+     * class.\n+     */\n+    public void loadServiceDescByIntrospection()\n+    {\n+        Method [] methods = implClass.getDeclaredMethods();\n \n         for (int i = 0; i < methods.length; i++) {\n-            String methodName = methods[i].getName();\n+            getSyncedOperationsForName(methods[i].getName());\n+        }\n \n-            // Skip it if it's not allowed\n-            // FIXME : This should, if allowedMethods is null, search up the\n-            //         inheritance/interface tree until we get to stop\n-            //         classes?\n-            if ((allowedMethods != null) &&\n-                !allowedMethods.contains(methodName))\n-                continue;\n+        // Setting this to null means there is nothing more to do, and it\n+        // avoids future string compares.\n+        completedNames = null;\n+    }\n \n-            // Make an OperationDesc for each method\n-            Method method = methods[i];\n-            OperationDesc operation = new OperationDesc();\n-            operation.setName(methodName);\n-            Class [] paramTypes = method.getParameterTypes();\n-            String [] paramNames =\n-                    JavaUtils.getParameterNamesFromDebugInfo(method);\n-            for (int k = 0; k < paramTypes.length; k++) {\n-                Class type = paramTypes[k];\n-                ParameterDesc paramDesc = new ParameterDesc();\n-                if (paramNames != null) {\n-                    paramDesc.setName(paramNames[k+1]);\n-                } else {\n-                    paramDesc.setName(\"in\" + k);\n-                }\n-                Class heldClass = JavaUtils.getHolderValueType(type);\n-                if (heldClass != null) {\n-                    paramDesc.setMode(ParameterDesc.INOUT);\n-                    paramDesc.setTypeQName(tm.getTypeQName(heldClass));\n-                } else {\n-                    paramDesc.setMode(ParameterDesc.IN);\n-                    paramDesc.setTypeQName(tm.getTypeQName(type));\n+    /**\n+     * Fill in a service description by introspecting the implementation\n+     * class.  This version takes the implementation class and the in-scope\n+     * TypeMapping.\n+     */\n+    public void loadServiceDescByIntrospection(Class cls, TypeMapping tm)\n+    {\n+        // Should we complain if the implClass changes???\n+        implClass = cls;\n+        this.tm = tm;\n+        loadServiceDescByIntrospection();\n+    }\n+\n+    /**\n+     * Makes sure we have completely synchronized OperationDescs with\n+     * the implementation class.\n+     */\n+    private void getSyncedOperationsForName(String methodName)\n+    {\n+        // If we have no implementation class, don't worry about it (we're\n+        // probably on the client)\n+        if (implClass == null)\n+            return;\n+\n+        // If we're done introspecting, or have completed this method, return\n+        if (completedNames == null || completedNames.contains(methodName))\n+            return;\n+\n+        // Skip it if it's not a sanctioned method name\n+        if ((allowedMethods != null) &&\n+            !allowedMethods.contains(methodName))\n+            return;\n+\n+        // OK, go find any current OperationDescs for this method name and\n+        // make sure they're synced with the actual class.\n+        if (name2OperationsMap != null) {\n+            ArrayList currentOverloads = \n+                    (ArrayList)name2OperationsMap.get(methodName);\n+            if (currentOverloads != null) {\n+                // For each one, sync it to the implementation class' methods\n+                for (Iterator i = currentOverloads.iterator(); i.hasNext();) {\n+                    OperationDesc oper = (OperationDesc) i.next();\n+                    if (oper.getMethod() == null) {\n+                        syncOperationToClass(oper);\n+                    }\n                 }\n-                operation.addParameter(paramDesc);\n             }\n-            addOperationDesc(operation);\n         }\n \n-        hasOperationData = true;\n+        // Now all OperationDescs from deployment data have been completely\n+        // filled in.  So we now make new OperationDescs for any method\n+        // overloads which were not covered above.\n+        Method [] methods = implClass.getDeclaredMethods();\n+\n+        for (int i = 0; i < methods.length; i++) {\n+            Method method = methods[i];\n+            if (method.getName().equals(methodName))\n+                createOperationForMethod(method);\n+        }\n+\n+        // Note that we never have to look at this method name again.\n+        completedNames.add(methodName);\n+    }\n+\n+    /**\n+     * Make an OperationDesc from a Java method.\n+     *\n+     * In the absence of deployment metadata, this code will introspect a\n+     * Method and create an appropriate OperationDesc, using parameter names\n+     * from the bytecode debugging info if available, or \"in0\", \"in1\", etc.\n+     * if not.\n+     */\n+    private void createOperationForMethod(Method method) {\n+        // If we've already got it, never mind\n+        if (method2OperationMap.get(method) != null) {\n+            return;\n+        }\n+\n+        // Make an OperationDesc\n+        OperationDesc operation = new OperationDesc();\n+        operation.setName(method.getName());\n+        operation.setMethod(method);\n+        Class [] paramTypes = method.getParameterTypes();\n+        String [] paramNames =\n+                JavaUtils.getParameterNamesFromDebugInfo(method);\n+\n+        for (int k = 0; k < paramTypes.length; k++) {\n+            Class type = paramTypes[k];\n+            ParameterDesc paramDesc = new ParameterDesc();\n+            // If we have a name for this param, use it, otherwise call\n+            // it \"in*\"\n+            if (paramNames != null) {\n+                paramDesc.setName(paramNames[k+1]);\n+            } else {\n+                paramDesc.setName(\"in\" + k);\n+            }\n+            paramDesc.setJavaType(type);\n+\n+            // If it's a Holder, mark it INOUT and set the type to the\n+            // held type.  Otherwise it's IN with its own type.\n+\n+            Class heldClass = JavaUtils.getHolderValueType(type);\n+            if (heldClass != null) {\n+                paramDesc.setMode(ParameterDesc.INOUT);\n+                paramDesc.setTypeQName(tm.getTypeQName(heldClass));\n+            } else {\n+                paramDesc.setMode(ParameterDesc.IN);\n+                paramDesc.setTypeQName(tm.getTypeQName(type));\n+            }\n+            operation.addParameter(paramDesc);\n+        }\n+\n+        operation.setReturnClass(method.getReturnType());\n+        operation.setReturnType(tm.getTypeQName(method.getReturnType()));\n+\n+        addOperationDesc(operation);\n+        method2OperationMap.put(method, operation);\n     }\n }"
            },
            {
                "sha": "ec67e078701c248c7ca8400075ab302502f3a5e5",
                "filename": "src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "status": "modified",
                "additions": 78,
                "deletions": 79,
                "changes": 157,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/DefaultTypeMappingImpl.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -10,23 +10,23 @@\n  * are met:\n  *\n  * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n+ *    notice, this list of conditions and the following disclaimer.\n  *\n  * 2. Redistributions in binary form must reproduce the above copyright\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:  \n+ *    if any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"Axis\" and \"Apache Software Foundation\" must\n  *    not be used to endorse or promote products derived from this\n- *    software without prior written permission. For written \n+ *    software without prior written permission. For written\n  *    permission, please contact apache@apache.org.\n  *\n  * 5. Products derived from this software may not be called \"Apache\",\n@@ -88,29 +88,29 @@\n \n /**\n  * @author Rich Scheuerle (scheu@us.ibm.com)\n- * \n+ *\n  * This is the implementation of the axis Default TypeMapping (which extends\n  * the JAX-RPC TypeMapping interface) for SOAP 1.1.  If you want the JAX-RPC\n  * SOAP 1.2 Type Mapping the use DefaultJAXRPCTypeMapping.\n- * \n+ *\n  * A TypeMapping is obtained from the singleton TypeMappingRegistry using\n  * the namespace of the webservice.  The TypeMapping contains the tuples\n  * {Java type, SerializerFactory, DeserializerFactory, Type QName)\n  *\n- * So if you have a Web Service with the namespace \"XYZ\", you call \n+ * So if you have a Web Service with the namespace \"XYZ\", you call\n  * the TypeMappingRegistry.getTypeMapping(\"XYZ\").\n  *\n  * The wsdl in your web service will use a number of types.  The tuple\n  * information for each of these will be accessed via the TypeMapping.\n  *\n- * Because every web service uses the soap, schema, wsdl primitives, we could \n+ * Because every web service uses the soap, schema, wsdl primitives, we could\n  * pre-populate the TypeMapping with these standard tuples.  Instead, if requested\n  * namespace/class matches is not found in the TypeMapping but matches one these\n  * known primitives, the request is delegated to this Default TypeMapping.\n- * \n+ *\n  */\n-public class DefaultTypeMappingImpl extends TypeMappingImpl { \n-    \n+public class DefaultTypeMappingImpl extends TypeMappingImpl {\n+\n     private static DefaultTypeMappingImpl tm = null;\n     /**\n      * Construct TypeMapping\n@@ -128,45 +128,45 @@ protected DefaultTypeMappingImpl() {\n \n         // Notes:\n         // 1) The registration statements are order dependent.  The last one\n-        //    wins.  So if two javaTypes of String are registered, the \n+        //    wins.  So if two javaTypes of String are registered, the\n         //    ser factory for the last one registered will be chosen.  Likewise\n-        //    if two javaTypes for XSD_DATE are registered, the deserializer \n+        //    if two javaTypes for XSD_DATE are registered, the deserializer\n         //    factory for the last one registered will be chosen.\n         //    Corollary:  Please be very careful with the order.  The\n         //                runtime, Java2WSDL and WSDL2Java emitters all\n         //                use this code to get type mapping information.\n-        // 2) Even if the SOAP 1.1 format is used over the wire, an \n+        // 2) Even if the SOAP 1.1 format is used over the wire, an\n         //    attempt is made to receive SOAP 1.2 format from the wire.\n-        //    This is the reason why the soap encoded primitives are \n+        //    This is the reason why the soap encoded primitives are\n         //    registered without serializers.\n \n-        // SOAP Encoded strings are treated as primitives. \n+        // SOAP Encoded strings are treated as primitives.\n         // Everything else is not.\n         // Note that only deserializing is supported since we are flowing\n         // SOAP 1.1 over the wire.\n-        myRegister(Constants.SOAP_STRING,     java.lang.String.class,   \n-                   null, null, true,  true); \n-        myRegister(Constants.SOAP_BOOLEAN,    java.lang.Boolean.class, \n+        myRegister(Constants.SOAP_STRING,     java.lang.String.class,\n+                   null, null, true,  true);\n+        myRegister(Constants.SOAP_BOOLEAN,    java.lang.Boolean.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_DOUBLE,     java.lang.Double.class,  \n+        myRegister(Constants.SOAP_DOUBLE,     java.lang.Double.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_FLOAT,      java.lang.Float.class,  \n+        myRegister(Constants.SOAP_FLOAT,      java.lang.Float.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_INT,        java.lang.Integer.class,   \n+        myRegister(Constants.SOAP_INT,        java.lang.Integer.class,\n                    null, null, false, true);\n         myRegister(Constants.SOAP_INTEGER,    java.math.BigInteger.class,\n                    null, null, false, true);\n         myRegister(Constants.SOAP_DECIMAL,    java.math.BigDecimal.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_LONG,       java.lang.Long.class,     \n+        myRegister(Constants.SOAP_LONG,       java.lang.Long.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_SHORT,      java.lang.Short.class,   \n+        myRegister(Constants.SOAP_SHORT,      java.lang.Short.class,\n                    null, null, false, true);\n-        myRegister(Constants.SOAP_BYTE,       java.lang.Byte.class,     \n+        myRegister(Constants.SOAP_BYTE,       java.lang.Byte.class,\n                    null, null, false, true);\n \n         // Hex binary data needs to use the hex binary serializer/deserializer\n-        myRegister(Constants.XSD_HEXBIN,     Hex.class,   \n+        myRegister(Constants.XSD_HEXBIN,     Hex.class,\n                    new HexSerializerFactory(\n                         Hex.class, Constants.XSD_HEXBIN),\n                    new HexDeserializerFactory(\n@@ -182,62 +182,62 @@ protected DefaultTypeMappingImpl() {\n         // Byte[] -ser-> array of Byte\n         // XSD_BASE64 -deser-> byte[]\n         // SOAP_BASE64 -deser->byte[]\n-        myRegister(Constants.SOAP_BASE64,     byte[].class, \n-                   new Base64SerializerFactory(byte[].class,\n+        myRegister(Constants.SOAP_BASE64,     Byte[].class,\n+                   new Base64SerializerFactory(Byte[].class,\n                                                Constants.SOAP_BASE64 ),\n-                   new Base64DeserializerFactory(byte[].class,\n+                   new Base64DeserializerFactory(Byte[].class,\n                                                  Constants.SOAP_BASE64),\n-                   true, true);      \n-        myRegister(Constants.SOAP_ARRAY,     java.lang.Byte[].class,       \n-                   new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(),true);\n-        myRegister(Constants.XSD_BASE64,     byte[].class,                                   \n+                   true);\n+//        myRegister(Constants.SOAP_ARRAY,     java.lang.Byte[].class,\n+//                   new ArraySerializerFactory(),\n+//                   new ArrayDeserializerFactory(),true);\n+        myRegister(Constants.XSD_BASE64,     byte[].class,\n                    new Base64SerializerFactory(byte[].class,\n                                                Constants.XSD_BASE64 ),\n                    new Base64DeserializerFactory(byte[].class,\n                                            Constants.XSD_BASE64),true);\n \n         // If SOAP 1.1 over the wire, map wrapper classes to XSD primitives.\n-        myRegister(Constants.XSD_STRING,     java.lang.String.class, \n-                   null, null, true); \n-        myRegister(Constants.XSD_BOOLEAN,    java.lang.Boolean.class, \n+        myRegister(Constants.XSD_STRING,     java.lang.String.class,\n+                   null, null, true);\n+        myRegister(Constants.XSD_BOOLEAN,    java.lang.Boolean.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_DOUBLE,     java.lang.Double.class,  \n+        myRegister(Constants.XSD_DOUBLE,     java.lang.Double.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_FLOAT,      java.lang.Float.class,  \n+        myRegister(Constants.XSD_FLOAT,      java.lang.Float.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_INT,        java.lang.Integer.class, \n+        myRegister(Constants.XSD_INT,        java.lang.Integer.class,\n                    null, null, true);\n         myRegister(Constants.XSD_INTEGER,    java.math.BigInteger.class,\n                    null, null, true);\n         myRegister(Constants.XSD_DECIMAL,    java.math.BigDecimal.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_LONG,       java.lang.Long.class,     \n+        myRegister(Constants.XSD_LONG,       java.lang.Long.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_SHORT,      java.lang.Short.class, \n+        myRegister(Constants.XSD_SHORT,      java.lang.Short.class,\n                    null, null, true);\n-        myRegister(Constants.XSD_BYTE,       java.lang.Byte.class,  \n+        myRegister(Constants.XSD_BYTE,       java.lang.Byte.class,\n                    null, null, true);\n \n         // The XSD Primitives are mapped to java primitives.\n-        myRegister(Constants.XSD_BOOLEAN,    boolean.class,        \n+        myRegister(Constants.XSD_BOOLEAN,    boolean.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_DOUBLE,     double.class,         \n+        myRegister(Constants.XSD_DOUBLE,     double.class,\n                    null, null,true);\n         myRegister(Constants.XSD_FLOAT,      float.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_INT,        int.class,  \n+        myRegister(Constants.XSD_INT,        int.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_LONG,       long.class, \n+        myRegister(Constants.XSD_LONG,       long.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_SHORT,      short.class, \n+        myRegister(Constants.XSD_SHORT,      short.class,\n                    null, null,true);\n-        myRegister(Constants.XSD_BYTE,       byte.class, \n+        myRegister(Constants.XSD_BYTE,       byte.class,\n                    null, null,true);\n \n \n         // Map QNAME to the jax rpc QName class\n-        myRegister(Constants.XSD_QNAME,      \n+        myRegister(Constants.XSD_QNAME,\n               javax.xml.rpc.namespace.QName.class,\n               new BeanSerializerFactory(javax.xml.rpc.namespace.QName.class,\n                                         Constants.XSD_QNAME),\n@@ -246,21 +246,21 @@ protected DefaultTypeMappingImpl() {\n                    true);\n \n         // The closest match for anytype is Object\n-        myRegister(Constants.XSD_ANYTYPE,    java.lang.Object.class,  \n+        myRegister(Constants.XSD_ANYTYPE,    java.lang.Object.class,\n                    null, null, false);\n \n-        // The xsd primitive for date has changed through the various \n+        // The xsd primitive for date has changed through the various\n         // namespace versions.\n-        // XSD_DATE is the current one, which is why it is \n+        // XSD_DATE is the current one, which is why it is\n         // registered after the other two\n-        myRegister(Constants.XSD_DATE2,      java.util.Date.class,                           \n-                   new DateSerializerFactory(java.util.Date.class, \n+        myRegister(Constants.XSD_DATE2,      java.util.Date.class,\n+                   new DateSerializerFactory(java.util.Date.class,\n                                              Constants.XSD_DATE2),\n                    new DateDeserializerFactory(java.util.Date.class,\n                                                Constants.XSD_DATE2),\n                    true);\n-        myRegister(Constants.XSD_DATE3,      java.util.Date.class,                           \n-                   new DateSerializerFactory(java.util.Date.class, \n+        myRegister(Constants.XSD_DATE3,      java.util.Date.class,\n+                   new DateSerializerFactory(java.util.Date.class,\n                                              Constants.XSD_DATE3),\n                    new DateDeserializerFactory(java.util.Date.class,\n                                                Constants.XSD_DATE3),\n@@ -280,48 +280,47 @@ protected DefaultTypeMappingImpl() {\n \n         // Serialize all extensions of Map to SOAP_MAP\n         // The SOAP_MAP will be deserialized into a HashMap by default.\n-        myRegister(Constants.SOAP_MAP,       java.util.HashMap.class,    \n+        myRegister(Constants.SOAP_MAP,       java.util.HashMap.class,\n                    new MapSerializerFactory(java.util.Map.class,\n                                             Constants.SOAP_MAP),\n                    new MapDeserializerFactory(java.util.HashMap.class,\n                                               Constants.SOAP_MAP),\n                    false);\n-        myRegister(Constants.SOAP_MAP,       java.util.Map.class,    \n+        myRegister(Constants.SOAP_MAP,       java.util.Map.class,\n                    new MapSerializerFactory(java.util.Map.class,\n                                             Constants.SOAP_MAP),\n-                   new MapDeserializerFactory(java.util.HashMap.class,\n-                                              Constants.SOAP_MAP),\n+                   null,  // Make sure not to override the deser mapping\n                    false);\n \n         // Use the Element Serializeration for elements\n-        myRegister(Constants.SOAP_ELEMENT,   org.w3c.dom.Element.class,    \n+        myRegister(Constants.SOAP_ELEMENT,   org.w3c.dom.Element.class,\n                    new ElementSerializerFactory(),\n                    new ElementDeserializerFactory(), false);\n-        myRegister(Constants.SOAP_VECTOR,    java.util.Vector.class,                                \n+        myRegister(Constants.SOAP_VECTOR,    java.util.Vector.class,\n                    new VectorSerializerFactory(java.util.Vector.class,\n-                                               Constants.SOAP_VECTOR), \n+                                               Constants.SOAP_VECTOR),\n                    new VectorDeserializerFactory(java.util.Vector.class,\n-                                                 Constants.SOAP_VECTOR), \n+                                                 Constants.SOAP_VECTOR),\n                    false);\n \n         // All array objects automatically get associated with the SOAP_ARRAY.\n-        // There is no way to do this with a hash table, \n+        // There is no way to do this with a hash table,\n         // so it is done directly in getTypeQName.\n         // Internally the runtime uses ArrayList objects to hold arrays...\n-        // which is the reason that ArrayList is associated with SOAP_ARRAY.  \n+        // which is the reason that ArrayList is associated with SOAP_ARRAY.\n         // In addition, handle all objects that implement the List interface\n         // as a SOAP_ARRAY\n-        myRegister(Constants.SOAP_ARRAY,     java.util.List.class,               \n+        myRegister(Constants.SOAP_ARRAY,     java.util.List.class,\n                    new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(), \n+                   new ArrayDeserializerFactory(),\n                    false);\n-        myRegister(Constants.SOAP_ARRAY,     java.util.ArrayList.class,               \n+        myRegister(Constants.SOAP_ARRAY,     java.util.ArrayList.class,\n                    new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(), \n+                   new ArrayDeserializerFactory(),\n                    false);\n-        myRegister(Constants.SOAP_ARRAY,     Object[].class,               \n+        myRegister(Constants.SOAP_ARRAY,     Object[].class,\n                    new ArraySerializerFactory(),\n-                   new ArrayDeserializerFactory(), \n+                   new ArrayDeserializerFactory(),\n                    false);\n     }\n \n@@ -334,14 +333,14 @@ protected DefaultTypeMappingImpl() {\n      * @param df is the deser factory (if null, the simple factory is used)\n      * @param primitive indicates whether serializers can be shared\n      * @param onlyDeserFactory indicates if only deserialization is desired.\n-     */   \n+     */\n     protected void myRegister(QName xmlType, Class javaType,\n                               SerializerFactory sf, DeserializerFactory df,\n                               boolean primitive) {\n         myRegister(xmlType, javaType, sf, df, primitive, false);\n     }\n     protected void myRegister(QName xmlType, Class javaType,\n-                              SerializerFactory sf, DeserializerFactory df, \n+                              SerializerFactory sf, DeserializerFactory df,\n                               boolean primitive, boolean onlyDeserFactory) {\n \n         // If factories are not specified, use the Simple ser/deser factories.\n@@ -362,7 +361,7 @@ protected void myRegister(QName xmlType, Class javaType,\n         if (onlyDeserFactory) {\n             sf = null;\n         }\n-        \n+\n         // Register all known flavors of the namespace.\n         try {\n             if (xmlType.getNamespaceURI().equals(\n@@ -381,7 +380,7 @@ else if (xmlType.getNamespaceURI().equals(\n                     super.register(javaType, qName, sf, df);\n                 }\n             }\n-            // Register with the specified xmlType. \n+            // Register with the specified xmlType.\n             // This is the prefered mapping and the last registed one wins\n             super.register(javaType, xmlType, sf, df);\n         } catch (Exception e) {}\n@@ -407,10 +406,10 @@ public QName getTypeQName(Class javaType) {\n \n     // Don't allow anyone to muck with the default type mapping because\n     // it is a singleton used for the whole system.\n-    public void register(Class javaType, QName xmlType, \n+    public void register(Class javaType, QName xmlType,\n                          javax.xml.rpc.encoding.SerializerFactory sf,\n-                         javax.xml.rpc.encoding.DeserializerFactory dsf) \n-        throws JAXRPCException {        \n+                         javax.xml.rpc.encoding.DeserializerFactory dsf)\n+        throws JAXRPCException {\n \n         throw new JAXRPCException();\n     }"
            },
            {
                "sha": "70f7d82e9196dbbc7a99033645f771067c5037e3",
                "filename": "src/org/apache/axis/encoding/TypeMappingImpl.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/encoding/TypeMappingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/TypeMappingImpl.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -243,8 +243,12 @@ public void register(Class javaType, QName xmlType,\n         }\n         Pair pair = new Pair(javaType, xmlType);\n \n-        qName2Pair.put(xmlType, pair);\n-        class2Pair.put(javaType, pair);   \n+        // Only register the appropriate mappings.\n+        if ((dsf != null) || (qName2Pair.get(xmlType) == null))\n+            qName2Pair.put(xmlType, pair);\n+        if ((sf != null) || (class2Pair.get(javaType) == null))\n+            class2Pair.put(javaType, pair);   \n+        \n         pair2SF.put(pair, sf);\n         pair2DF.put(pair, dsf);\n     }"
            },
            {
                "sha": "a49aaa47e25afd5fd743ff4e7aa2e944bfd6cf3c",
                "filename": "src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 17,
                "changes": 18,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/encoding/ser/SimpleDeserializerFactory.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -102,23 +102,7 @@ public SimpleDeserializerFactory(Class javaType, QName xmlType) {\n                     javaType.getDeclaredConstructor(new Class [] {String.class});\n             }\n             else {\n-                Class wrapper = null;\n-                if (javaType == int.class)\n-                    wrapper = java.lang.Integer.class;\n-                else if (javaType == short.class)\n-                    wrapper = java.lang.Short.class;\n-                else if (javaType == boolean.class)\n-                    wrapper = java.lang.Boolean.class;\n-                else if (javaType == byte.class)\n-                    wrapper = java.lang.Byte.class;\n-                else if (javaType == long.class)\n-                    wrapper = java.lang.Long.class;\n-                else if (javaType == double.class)\n-                    wrapper = java.lang.Double.class;\n-                else if (javaType == float.class)\n-                    wrapper = java.lang.Float.class;\n-                else if (javaType == char.class)\n-                    wrapper = java.lang.Character.class;\n+                Class wrapper = JavaUtils.getWrapperClass(javaType);\n                 if (wrapper != null)\n                     constructor = \n                         wrapper.getDeclaredConstructor(new Class [] {String.class});"
            },
            {
                "sha": "d1e817be5b9dd550b6c68d1775b0b76db9836847",
                "filename": "src/org/apache/axis/message/RPCElement.java",
                "status": "modified",
                "additions": 27,
                "deletions": 27,
                "changes": 54,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/message/RPCElement.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/message/RPCElement.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCElement.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -66,6 +66,7 @@\n import org.apache.axis.handlers.soap.SOAPService;\n import org.apache.axis.utils.cache.ClassCache;\n import org.apache.axis.utils.cache.JavaClass;\n+import org.apache.axis.utils.JavaUtils;\n import org.apache.axis.wsdl.toJava.Utils;\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n@@ -158,36 +159,34 @@ public void deserialize() throws SAXException\n         if (service != null) {\n             ServiceDesc serviceDesc = service.getServiceDescription();\n \n-            // If we don't have a service description, create one\n-            // via introspection and cache it in the SOAPService.\n-            String clsName = (String)service.getOption(\"className\");\n-\n-            if (clsName != null) {\n-                ClassLoader cl       = msgContext.getClassLoader();\n-                ClassCache cache     = msgContext.getAxisEngine().\n-                        getClassCache();\n-                JavaClass       jc   = null;\n-                try {\n-                    jc = cache.lookup(clsName, cl);\n-                } catch (ClassNotFoundException e) {\n-                    throw new SAXException(e);\n+            if (serviceDesc.getImplClass() == null) {\n+                String clsName = (String)service.getOption(\"className\");\n+\n+                if (clsName != null) {\n+                    ClassLoader cl       = msgContext.getClassLoader();\n+                    ClassCache cache     = msgContext.getAxisEngine().\n+                            getClassCache();\n+                    JavaClass       jc   = null;\n+                    try {\n+                        jc = cache.lookup(clsName, cl);\n+                    } catch (ClassNotFoundException e) {\n+                        throw new SAXException(e);\n+                    }\n+                    TypeMapping tm = (TypeMapping)msgContext.\n+                            getTypeMappingRegistry().\n+                            getTypeMapping(msgContext.getEncodingStyle());\n+                    serviceDesc.setTypeMapping(tm);\n+                    serviceDesc.setImplClass(jc.getJavaClass());\n                 }\n-                TypeMapping tm = (TypeMapping)msgContext.\n-                        getTypeMappingRegistry().\n-                        getTypeMapping(msgContext.getEncodingStyle());\n-                serviceDesc.loadServiceDescByIntrospection(jc.getJavaClass(),\n-                                                           tm);\n             }\n \n-            if (serviceDesc != null) {\n-                // If we've got a service description now, we want to use\n-                // the matching operations in there.\n-                operations = serviceDesc.getOperationsByName(name);\n+            // If we've got a service description now, we want to use\n+            // the matching operations in there.\n+            operations = serviceDesc.getOperationsByName(name);\n \n-                if (operations == null) {\n-                    String lc = Utils.xmlNameToJava(name);\n-                    operations = serviceDesc.getOperationsByName(lc);\n-                }\n+            if (operations == null) {\n+                String lc = Utils.xmlNameToJava(name);\n+                operations = serviceDesc.getOperationsByName(lc);\n             }\n         }\n \n@@ -225,7 +224,8 @@ public void deserialize() throws SAXException\n \n                         publishToHandler((org.xml.sax.ContentHandler) context);\n \n-                        // Success!!\n+                        // Success!!  This is the right one...\n+                        msgContext.setOperation(myOperation);\n                         return;\n                     } catch (SAXException e) {\n                         // If there was a problem, try the next one."
            },
            {
                "sha": "1f95e0238482f9076de12620adabac631ad3b73e",
                "filename": "src/org/apache/axis/message/RPCHandler.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/message/RPCHandler.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/message/RPCHandler.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/RPCHandler.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -193,11 +193,18 @@ public SOAPHandler onStartChild(String namespace,\n \n                 if (type == null) {\n                     type = paramDesc.getTypeQName();\n+                } else if (paramDesc.getJavaType() != null) {\n+                    // If we have an xsi:type, make sure it makes sense\n+                    // with the current paramDesc type\n+                    Class xsiClass = \n+                            context.getTypeMapping().getClassForQName(type);\n+                    if (!JavaUtils.isConvertable(xsiClass,\n+                                                 paramDesc.getJavaType())) {\n+                        throw new SAXException(\"Bad types (\" +\n+                            xsiClass + \" -> \" + paramDesc.getJavaType() + \")\"); // FIXME!\n+                    }\n                 }\n             }\n-\n-            // FIXME : We should check here to make sure any specified\n-            // xsi:type jibes with the expected type in the ParamDesc!!\n         }\n \n "
            },
            {
                "sha": "92110a9b190c717c1c39f7aa93db409078ed28f5",
                "filename": "src/org/apache/axis/providers/java/RPCProvider.java",
                "status": "modified",
                "additions": 95,
                "deletions": 191,
                "changes": 286,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/providers/java/RPCProvider.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/providers/java/RPCProvider.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/providers/java/RPCProvider.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -73,6 +73,7 @@\n import org.apache.commons.logging.LogFactory;\n \n import javax.xml.rpc.namespace.QName;\n+import javax.xml.rpc.holders.Holder;\n import java.lang.reflect.Method;\n import java.lang.reflect.InvocationTargetException;\n import java.util.StringTokenizer;\n@@ -121,6 +122,11 @@ public void processMessage (MessageContext msgContext,\n         for ( int bNum = 0 ; bNum < bodies.size() ; bNum++ ) {\n             RPCElement   body;\n \n+            // If this is a regular old SOAPBodyElement, and it's a root,\n+            // we're probably a non-wrapped doc/lit service.  In this case,\n+            // we deserialize the element, and create an RPCElement \"wrapper\"\n+            // around it which points to the correct method.\n+            // FIXME : There should be a cleaner way to do this...\n             if (!(bodies.get(bNum) instanceof RPCElement)) {\n                 SOAPBodyElement bodyEl = (SOAPBodyElement)bodies.get(bNum);\n                 if (bodyEl.isRoot() && operation != null) {\n@@ -136,20 +142,48 @@ public void processMessage (MessageContext msgContext,\n                 body = (RPCElement) bodies.get( bNum );\n             }\n \n-            String       mName      = body.getMethodName();\n-            Vector       args       = body.getParams();\n-            Object[]     argValues  =  null ;\n+            String methodName = body.getMethodName();\n+            Vector args = body.getParams();\n+            int numArgs = args.size();\n \n+            // This may have changed, so get it again...\n+            // FIXME (there should be a cleaner way to do this)\n+            operation = msgContext.getOperation();\n \n+            if (operation == null) {\n+                QName qname = new QName(body.getNamespaceURI(),\n+                                        body.getName());\n+                operation = serviceDesc.getOperationByElementQName(qname);\n+            }\n+\n+            // Create the array we'll use to hold the actual parameter\n+            // values.  We know how big to make it from the metadata.\n+            Object[]     argValues  =  new Object [operation.getNumParams()];\n+\n+            // A place to keep track of the out params (INOUTs and OUTs)\n+            ArrayList outs = new ArrayList();\n+\n+            // Put the values contained in the RPCParams into an array\n+            // suitable for passing to java.lang.reflect.Method.invoke()\n+            // Make sure we respect parameter ordering if we know about it\n+            // from metadata, and handle whatever conversions are necessary\n+            // (values -> Holders, etc)\n             if ( args != null && args.size() > 0 ) {\n-                argValues = new Object[ args.size()];\n-                for ( int i = 0 ; i < args.size() ; i++ ) {\n+                for ( int i = 0 ; i < numArgs ; i++ ) {\n                     RPCParam rpcParam = (RPCParam)args.get(i);\n+                    Object value = rpcParam.getValue();\n                     ParameterDesc paramDesc = rpcParam.getParamDesc();\n+                    if (paramDesc != null && paramDesc.getJavaType() != null) {\n+                        value = JavaUtils.convert(value,\n+                                                  paramDesc.getJavaType());\n+                        rpcParam.setValue(value);\n+                        if (paramDesc.getMode() == ParameterDesc.INOUT)\n+                            outs.add(rpcParam);\n+                    }\n                     if (paramDesc == null || paramDesc.getOrder() == -1) {\n-                        argValues[i]  = rpcParam.getValue() ;\n+                        argValues[i]  = value;\n                     } else {\n-                        argValues[paramDesc.getOrder()] = rpcParam.getValue();\n+                        argValues[paramDesc.getOrder()] = value;\n                     }\n \n                     if (log.isDebugEnabled()) {\n@@ -160,185 +194,69 @@ public void processMessage (MessageContext msgContext,\n             }\n \n             // Check if we can find a Method by this name\n-            checkMethodName(msgContext, allowedMethods, mName);\n-\n-            // Get the actual method to invoke.\n-            int\tnumberOfBodyArgs = args.size();\n-            Method[] methods = getMethod(msgContext, jc, mName);\n-\n-            // If the method wasn't found, maybe it needs some Java mangling (ie., it's a Java\n-            // keyword or it's capitalized and the java mapping requires lowercase).\n-            if (methods == null) {\n-                mName = JavaUtils.xmlNameToJava(mName);\n-                methods = getMethod(msgContext, jc, mName);\n-            }\n-\n-            if ( methods == null )\n-                throw new AxisFault( \"AxisServer.error\",\n-                        JavaUtils.getMessage(\"noMethod00\", mName, msgContext.getTargetService()),\n-                        null, null );\n-\n-            Object objRes = null;\n-            Class[] params = null;\n-            Exception ex = null;\n-\n-            // There might be more than one method with this name, try them all.\n-            int index = 0;\n-            for (index = 0; index < methods.length; index++) {\n-                Method method = methods[index];\n-                ex = null;\n-                params = method.getParameterTypes();\n-\n-                // Don't bother with this one if it has FEWER params\n-                if (argValues != null) {\n-                    if (params.length < argValues.length)\n-                        continue;\n-                }\n-\n-                // The number of method parameters must match the\n-                // arguments taking into consideration output parameters.\n-                Object[] newArgValues = new Object[params.length];\n-                int old = 0;\n-                boolean problem = false;\n-                for (int n = 0; n < newArgValues.length; n++) {\n-                    Class heldType = JavaUtils.getHolderValueType(params[n]);\n-                    if (argValues != null && old < argValues.length) {\n-                        newArgValues[n] = argValues[old++];\n-                    } else if (heldType == null) {\n-                        // The parameters that don't match the argValues must\n-                        // be Holders.  Indicate problem occurred.\n-                        problem = true;\n+            // FIXME : Shouldn't this type of thing have already occurred?\n+            checkMethodName(msgContext, allowedMethods, methodName);\n+\n+            // Now create any out holders we need to pass in\n+            if (numArgs < argValues.length) {\n+                ArrayList outParams = operation.getOutParams();\n+                for (int i = 0; i < outParams.size(); i++) {\n+                    ParameterDesc param = (ParameterDesc)outParams.get(i);\n+                    Class holderClass = param.getJavaType();\n+                    if (Holder.class.isAssignableFrom(holderClass)) {\n+                        argValues[numArgs + i] = holderClass.newInstance();\n+                        // Store an RPCParam in the outs collection so we\n+                        // have an easy and consistent way to write these\n+                        // back to the client below\n+                        outs.add(new RPCParam(param.getQName(),\n+                                              argValues[numArgs + i]));\n                     } else {\n-                        newArgValues[n] = null;\n-                    }\n-                    // Create holders for each argument that is null that should be a holder\n-                    if (newArgValues[n] == null && heldType != null) {\n-                        newArgValues[n] = JavaUtils.convert(newArgValues[n], params[n]);\n-                    }\n-                }\n-                if (!problem) {\n-                    argValues = newArgValues;  // Use newArgValues array if no problems\n-                }\n-\n-                // Invoke the method and capture the returned object.\n-                // Note that if the method returns a primitive, invoke(...) automatically\n-                // wraps it in a java.lang class representing the primitive.\n-                try {\n-                    objRes = invokeMethod(msgContext, method, obj, argValues);\n-                    break;\n-                } catch (IllegalArgumentException e) {\n-                    // Hm - maybe we can help this with a conversion or two...\n-                    for (int i = 0; argValues != null && i < argValues.length &&\n-                      i < params.length; i++) {\n-                        Object thisArg = argValues[i];\n-                        if (!params[i].isAssignableFrom(thisArg.getClass())) {\n-                            // Attempt conversion for each non-assignable argument\n-                            Object newArg = JavaUtils.convert(thisArg, params[i]);\n-                            if (newArg != thisArg)\n-                                argValues[i] = newArg;\n-                        }\n-                    }\n-\n-                    // OK, now try again...\n-                    try {\n-                        objRes = invokeMethod(msgContext, method, obj, argValues);\n-                        break;\n-                    } catch (IllegalArgumentException exp) {\n-                        StringBuffer argbuf = new StringBuffer();\n-                        String sep= \"\";\n-                        for(int i = 0; argValues != null &&\n-                          i < argValues.length; ++i) {\n-                            argbuf.append(sep);\n-                            sep = \", \";\n-                            argbuf.append(argValues[i] == null ? \"null\" : argValues[i].getClass().getName());\n-                        }\n-                        String objName = obj == null ? \"null\" :\n-                          obj.getClass().getName();\n-                        String msg = JavaUtils.getMessage(\"triedArgs00\",\n-                                new String[] {\n-                                exp.getMessage(),\n-                                objName,\n-                                method.getName(),\n-                                argbuf.toString()});\n-                        ex = new IllegalArgumentException(msg);\n-                        continue;\n+                        // !!! Throw a fault here?\n                     }\n                 }\n             }\n-            // If we've gone through all methods with the given name and there's\n-            // an exception left over, throw that exception.\n-            if (ex != null) {\n-                throw ex;\n-            }\n-\n-            // If we've finished iterating through all the methods, throw an exception.\n-            if ( index == methods.length )\n-                throw new AxisFault( \"AxisServer.error\",\n-                        JavaUtils.getMessage(\"noMethod00\", mName, msgContext.getTargetService()),\n-                        null, null );\n \n-            if (log.isDebugEnabled())\n-                log.debug(JavaUtils.getMessage(\"result00\", \"\" + objRes));\n+            // OK!  Now we can invoke the method\n+            Object objRes = operation.getMethod().invoke(obj, argValues);\n \n             /* Now put the result in the result SOAPEnvelope */\n             /*************************************************/\n-            RPCElement resBody = new RPCElement(mName + \"Response\");\n+            RPCElement resBody = new RPCElement(methodName + \"Response\");\n             resBody.setPrefix( body.getPrefix() );\n             resBody.setNamespaceURI( body.getNamespaceURI() );\n             resBody.setEncodingStyle(msgContext.getEncodingStyle());\n \n-            if ( objRes != null ) {\n-                // In the old skeleton a param list was returned, which\n-                // contained the RPC params.  Preserve this for now.\n-                if (objRes instanceof ParamList) {\n-                    ParamList list = (ParamList)objRes;\n-                    for (int i = 0; i < list.size (); ++i) {\n-                        if (list.get (i) instanceof RPCParam) {\n-                            resBody.addParam ((RPCParam) list.get (i));\n-                        }\n-                        else {\n-                            resBody.addParam (new RPCParam (getParameterName(obj, methods[index],i, mName),\n-                                                            list.get (i)));\n-                        }\n-                    }\n-                }\n-                else {\n-                    QName returnQName = getReturnQName(serviceDesc, mName);\n-                    RPCParam param = new RPCParam(returnQName, objRes);\n-                    resBody.addParam(param);\n+            // Return first\n+            if ( operation.getMethod().getReturnType() != Void.TYPE ) {\n+                QName returnQName = operation.getReturnQName();\n+                if (returnQName == null) {\n+                    returnQName = new QName(\"\", methodName + \"Return\");\n                 }\n-            } else if (methods[index].getReturnType() != Void.TYPE) {\n-                QName returnQName = getReturnQName(serviceDesc, mName);\n                 RPCParam param = new RPCParam(returnQName, objRes);\n                 resBody.addParam(param);\n             }\n \n-            // The new skeleton (or no skeleton code) requires the runtime\n-            // to recognize holders and automatically pass back the outputs.\n-            for (int i=0; i < argValues.length; i++) {\n-                Class heldType = JavaUtils.getHolderValueType(params[i]);\n-                if (heldType != null) {\n-                    // Create an RPCParam by converting the Holder back into\n-                    // the held type.\n-                    resBody.addParam (new RPCParam (getParameterName(obj,\n-                                                                     methods[index],\n-                                                                     i,\n-                                                                     mName,\n-                                                                     args),\n-                                                    JavaUtils.convert(\n-                                                            argValues[i],\n-                                                            heldType)));\n+            // Then any other out params\n+            if (!outs.isEmpty()) {\n+                for (Iterator i = outs.iterator(); i.hasNext();) {\n+                    // We know this has a holder, so just unwrap the value\n+                    RPCParam param = (RPCParam) i.next();\n+                    Holder holder = (Holder)param.getValue();\n+                    param.setValue(JavaUtils.getHolderValue(holder));\n+                    resBody.addParam(param);\n                 }\n             }\n \n-            resEnv.addBodyElement( resBody );\n+            resEnv.addBodyElement(resBody);\n         }\n     }\n \n-    protected Method[] getMethod(MessageContext msgContext, JavaClass jc, String mName)\n+    protected Method[] getMethod(MessageContext msgContext,\n+                                 JavaClass jc,\n+                                 String methodName)\n         throws Exception\n     {\n-        return jc.getMethod(mName);\n+        return jc.getMethod(methodName);\n     }\n \n     protected Object invokeMethod(MessageContext msgContext,\n@@ -349,47 +267,51 @@ protected Object invokeMethod(MessageContext msgContext,\n         return (method.invoke(obj, argValues));\n     }\n \n-    protected void checkMethodName(MessageContext msgContext, String allowedMethods, String mName)\n+    protected void checkMethodName(MessageContext msgContext,\n+                                   String allowedMethods,\n+                                   String methodName)\n         throws Exception\n     {\n         String methodNameMatch = allowedMethods;\n \n         // allowedMethods may be a comma-delimited string of method names.\n-        // If so, look for the one matching mname.\n+        // If so, look for the one matching methodName.\n         if (allowedMethods != null && allowedMethods.indexOf(' ') != -1) {\n             StringTokenizer tok = new StringTokenizer(allowedMethods, \" \");\n             String nextMethodName = null;\n             while (tok.hasMoreElements()) {\n                 String token = tok.nextToken();\n-                if (token.equals(mName)) {\n+                if (token.equals(methodName)) {\n                     nextMethodName = token;\n                     break;\n                 }\n             }\n             // didn't find a matching one...\n             if (nextMethodName == null) {\n                 throw new AxisFault( \"AxisServer.error\",\n-                        JavaUtils.getMessage(\"namesDontMatch00\", mName, allowedMethods),\n+                        JavaUtils.getMessage(\"namesDontMatch00\", methodName,\n+                                             allowedMethods),\n                         null, null );  // should they??\n             }\n             methodNameMatch = nextMethodName;\n         }\n \n-        if ( methodNameMatch != null && !methodNameMatch.equals(mName) )\n+        if ( methodNameMatch != null && !methodNameMatch.equals(methodName) )\n             throw new AxisFault( \"AxisServer.error\",\n                     JavaUtils.getMessage(\"namesDontMatch01\",\n-                        new String[] {mName, methodNameMatch, allowedMethods}),\n+                        new String[] {methodName, methodNameMatch,\n+                                      allowedMethods}),\n                     null, null );  // should they??\n \n         if (log.isDebugEnabled()) {\n-            log.debug( \"mName: \" + mName );\n+            log.debug( \"methodName: \" + methodName );\n             log.debug( \"MethodNameMatch: \" + methodNameMatch );\n             log.debug( \"MethodName List: \" + allowedMethods );\n         }\n \n         ///////////////////////////////////////////////////////////////\n         // If allowedMethods (i.e. methodNameMatch) is null,\n-        //  then treat it as a wildcard automatically matching mName\n+        //  then treat it as a wildcard automatically matching methodName\n         ///////////////////////////////////////////////////////////////\n         return;\n     }\n@@ -402,8 +324,8 @@ protected void checkMethodName(MessageContext msgContext, String allowedMethods,\n     protected QName getParameterName(Object obj,\n                                       Method method,\n                                       int i,\n-                                      String mName) {\n-        return getParameterName(obj, method, i, mName, null);\n+                                      String methodName) {\n+        return getParameterName(obj, method, i, methodName, null);\n     }\n \n     /**\n@@ -416,7 +338,7 @@ protected QName getParameterName(Object obj,\n     protected QName getParameterName(Object obj,\n                                       Method method,\n                                       int i,\n-                                      String mName,\n+                                      String methodName,\n                                       Vector rpcParams) {\n         QName parmName = null;\n         // Emitter skeletons keep track of the parameter names\n@@ -427,28 +349,10 @@ protected QName getParameterName(Object obj,\n                 if (rpcParams != null && rpcParams.size() > i) {\n                     parmName = ((RPCParam)rpcParams.get(i)).getQName();\n                 } else {\n-                    parmName = new QName(\"\", mName + \"Result\" + i);\n+                    parmName = new QName(\"\", methodName + \"Result\" + i);\n                 }\n             }\n         }\n         return parmName;\n     }\n-\n-    protected QName getReturnQName(ServiceDesc service, String methodName)\n-    {\n-        QName ret = null;\n-\n-        if (service != null) {\n-            OperationDesc oper = service.getOperationDescByName(methodName);\n-            if (oper != null) {\n-                ret = oper.getReturnQName();\n-            }\n-        }\n-\n-        if (ret == null) {\n-            ret = new QName(\"\", methodName + \"Result\");\n-        }\n-\n-        return ret;\n-    }\n }"
            },
            {
                "sha": "31c96094ff83329305eb2dd191595c7fe32c67bc",
                "filename": "src/org/apache/axis/utils/JavaUtils.java",
                "status": "modified",
                "additions": 109,
                "deletions": 0,
                "changes": 109,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/utils/JavaUtils.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/utils/JavaUtils.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/JavaUtils.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -92,6 +92,50 @@\n {\n     protected static Log log =\n         LogFactory.getLog(JavaUtils.class.getName());\n+    \n+    public static Class getWrapperClass(Class primitive)\n+    {\n+        if (primitive == int.class)\n+            return java.lang.Integer.class;\n+        else if (primitive == short.class)\n+            return java.lang.Short.class;\n+        else if (primitive == boolean.class)\n+            return java.lang.Boolean.class;\n+        else if (primitive == byte.class)\n+            return java.lang.Byte.class;\n+        else if (primitive == long.class)\n+            return java.lang.Long.class;\n+        else if (primitive == double.class)\n+            return java.lang.Double.class;\n+        else if (primitive == float.class)\n+            return java.lang.Float.class;\n+        else if (primitive == char.class)\n+            return java.lang.Character.class;\n+        \n+        return null;\n+    }\n+    \n+    public static Class getPrimitiveClass(Class wrapper)\n+    {\n+        if (wrapper == java.lang.Integer.class)\n+            return int.class;\n+        else if (wrapper == java.lang.Short.class)\n+            return short.class;\n+        else if (wrapper == java.lang.Boolean.class)\n+            return boolean.class;\n+        else if (wrapper == java.lang.Byte.class)\n+            return byte.class;\n+        else if (wrapper == java.lang.Long.class)\n+            return long.class;\n+        else if (wrapper == java.lang.Double.class)\n+            return double.class;\n+        else if (wrapper == java.lang.Float.class)\n+            return float.class;\n+        else if (wrapper == java.lang.Character.class)\n+            return char.class;\n+        \n+        return null;\n+    }\n \n     /**\n      * Cache of tt-bytecode BCClass objects which correspond to particular\n@@ -132,6 +176,10 @@ public static Object convert(Object arg, Class destClass)\n         if (destClass == null) {\n             return arg;\n         }\n+        \n+        if (arg != null && destClass.isAssignableFrom(arg.getClass())) {\n+            return arg;\n+        }\n \n         if (log.isDebugEnabled()) {\n             String clsName = \"null\";\n@@ -294,7 +342,68 @@ else if (List.class.isAssignableFrom(destClass)) {\n         return destValue;\n     }\n \n+    public static boolean isConvertable(Object obj, Class dest)\n+    {\n+        Class src = null;\n+        \n+        if (obj != null) {\n+            if (obj instanceof Class) {\n+                src = (Class)obj;\n+            } else {\n+                src = obj.getClass();\n+            }\n+        }\n+        \n+        if (dest == null)\n+            return false;\n+        \n+        if (src != null) {\n+            // If we're directly assignable, we're good.\n+            if (dest.isAssignableFrom(src))\n+                return true;\n+\n+            // If it's a wrapping conversion, we're good.\n+            if (getWrapperClass(src) == dest)\n+                return true;\n+            if (getWrapperClass(dest) == src)\n+                return true;\n+            \n+            // If it's List -> Array or vice versa, we're good.\n+            if ((List.class.isAssignableFrom(src) || src.isArray()) &&\n+                (List.class.isAssignableFrom(dest) || dest.isArray()))\n+                return true;\n+            \n+            if ((src == Hex.class && dest == byte[].class) ||\n+                (src == byte[].class && dest == Hex.class))\n+                return true;\n+            \n+        }\n+        \n+        Class destHeld = JavaUtils.getHolderValueType(dest);\n+        // Can always convert a null to an empty holder\n+        if (src == null)\n+            return (destHeld != null);\n+        \n+        if (destHeld != null) {\n+            if (destHeld.isAssignableFrom(src) || isConvertable(src, destHeld))\n+                return true;\n+        }\n+\n+//        // FIXME : This is a horrible hack put in here to deal with a problem\n+//        // with our default typemappings.\n+//        if (destHeld != null && (getPrimitiveClass(destHeld) == src))\n+//            return true;\n+\n+        // If it's holder -> held or held -> holder, we're good\n+        Class srcHeld = JavaUtils.getHolderValueType(src);\n+        if (srcHeld != null) {\n+            if (dest.isAssignableFrom(srcHeld) || isConvertable(srcHeld, dest))\n+                return true;\n+        }\n \n+        return false;\n+    }\n+    \n     /**\n      * These are java keywords as specified at the following URL (sorted alphabetically).\n      * http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#229308"
            },
            {
                "sha": "7276262e57085df87def3ddd6195e995e2dc1031",
                "filename": "src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "status": "modified",
                "additions": 77,
                "deletions": 26,
                "changes": 103,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/wsdl/toJava/JavaDeployWriter.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -87,7 +87,9 @@\n     /**\n      * Constructor.\n      */\n-    protected JavaDeployWriter(Emitter emitter, Definition definition, SymbolTable symbolTable) {\n+    protected JavaDeployWriter(Emitter emitter, \n+                               Definition definition, \n+                               SymbolTable symbolTable) {\n         super(emitter,\n                 new QName(definition.getTargetNamespace(), \"deploy\"),\n                 \"\",\n@@ -119,7 +121,8 @@ protected void writeFileBody() throws IOException {\n     protected void writeDeployServices() throws IOException {\n         //deploy the ports on each service\n         Map serviceMap = definition.getServices();\n-        for (Iterator mapIterator = serviceMap.values().iterator(); mapIterator.hasNext();) {\n+        for (Iterator mapIterator = serviceMap.values().iterator(); \n+             mapIterator.hasNext();) {\n             Service myService = (Service) mapIterator.next();\n \n             pw.println();\n@@ -128,9 +131,12 @@ protected void writeDeployServices() throws IOException {\n                     + \" -->\");\n             pw.println();\n \n-            for (Iterator portIterator = myService.getPorts().values().iterator(); portIterator.hasNext();) {\n+            for (Iterator portIterator = myService.getPorts().values().iterator();\n+                 portIterator.hasNext();) {\n                 Port myPort = (Port) portIterator.next();\n-                BindingEntry bEntry =  symbolTable.getBindingEntry(myPort.getBinding().getQName());\n+                BindingEntry bEntry = \n+                        symbolTable.getBindingEntry(\n+                                myPort.getBinding().getQName());\n \n                 // If this isn't an SOAP binding, skip it\n                 if (bEntry.getBindingType() != BindingEntry.TYPE_SOAP) {\n@@ -177,7 +183,8 @@ protected void writeDeployTypes(boolean hasLiteral) throws IOException {\n             if (localPart.startsWith(SymbolTable.ANON_TOKEN)) {\n                 localPart = localPart.substring(1);\n             }\n-            QName qName = new QName(type.getQName().getNamespaceURI(), localPart);\n+            QName qName = new QName(type.getQName().getNamespaceURI(), \n+                                    localPart);\n \n             if (process) {\n                 pw.println(\"      <typeMapping\");\n@@ -276,30 +283,64 @@ protected void writeDeployBinding(Binding binding) throws IOException {\n             // interested in the return type for now.\n             Parameters params =\n                     symbolTable.getOperationParameters(operation, \"\", bEntry);\n-            if (params.returnType instanceof DefinedElement) {\n-                QName returnQName = params.returnType.getQName();\n-                pw.println(\"      <operation name=\\\"\" + operation.getName() +\n-                         \"\\\" returnQName=\\\"retNS:\" +\n-                         returnQName.getLocalPart() +\n-                         \"\\\" xmlns:retNS=\\\"\" +\n-                         returnQName.getNamespaceURI() +\n-                         \"\\\">\");\n-\n-                // map doc/lit elements to this operation\n-                Map parts = operation.getInput().getMessage().getParts();\n-                if (!parts.isEmpty()) {\n-                    Iterator i = parts.values().iterator();\n-                    Part p = (Part) i.next();\n-                    QName elementQName = p.getElementName();\n-                    String ns = elementQName.getNamespaceURI();\n-                    pw.println(\"        <elementMapping xmlns:ns=\\\"\" +\n-                            ns + \"\\\" element=\\\"ns:\" +\n-                            elementQName.getLocalPart() + \"\\\"/>\");\n+            String operName = JavaUtils.xmlNameToJava(operation.getName());\n+            if (params != null) {\n+                if (params.returnType instanceof DefinedElement) {\n+                    QName returnQName = params.returnType.getQName();\n+                    pw.println(\"      <operation name=\\\"\" + operName +\n+                             \"\\\" returnQName=\\\"retNS:\" +\n+                             returnQName.getLocalPart() +\n+                             \"\\\" xmlns:retNS=\\\"\" +\n+                             returnQName.getNamespaceURI() +\n+                             \"\\\">\");\n+\n+                    // map doc/lit elements to this operation\n+                    Map parts = operation.getInput().getMessage().getParts();\n+                    if (!parts.isEmpty()) {\n+                        Iterator i = parts.values().iterator();\n+                        Part p = (Part) i.next();\n+                        QName elementQName = p.getElementName();\n+                        String ns = elementQName.getNamespaceURI();\n+                        pw.println(\"        <elementMapping xmlns:ns=\\\"\" +\n+                                   ns + \"\\\" element=\\\"ns:\" +\n+                                   elementQName.getLocalPart() + \"\\\"/>\");\n+                    }\n+                } else {\n+                    pw.println(\"      <operation name=\\\"\" + \n+                               operName + \"\\\">\");\n                 }\n-\n+                \n+                Vector paramList = params.list;\n+                for (int i = 0; i < paramList.size(); i++) {\n+                    Parameter param = (Parameter) paramList.elementAt(i);\n+                    QName paramQName = param.getQName();\n+                    TypeEntry typeEntry = param.getType();\n+                    QName paramType;\n+                    if (typeEntry instanceof DefinedElement) {\n+                        Node node = symbolTable.getTypeEntry(typeEntry.getQName(), true).getNode();\n+                        paramType = Utils.getNodeTypeRefQName(node, \"type\");\n+                        if (paramType == null)\n+                            paramType = typeEntry.getQName(); // FIXME\n+                    } else {\n+                        paramType = typeEntry.getQName();\n+                    }\n+                    String mode = getModeString(param.getMode());\n+                    pw.print(\"        <parameter \");\n+                    if (paramQName == null || \"\".equals(paramQName.getLocalPart())) {\n+                        pw.print(\"name=\\\"\" + param.getName() + \"\\\" \" );\n+                    } else {\n+                        pw.print(\"qname=\\\"pns:\" + paramQName.getLocalPart() +\n+                                 \"\\\" xmlns:pns=\\\"\" + paramQName.getNamespaceURI() +\n+                                 \"\\\" \");\n+                    }\n+                    pw.print(\"type=\\\"tns:\" + paramType.getLocalPart() + \"\\\" \" );\n+                    pw.print(\"xmlns:tns=\\\"\" + paramType.getNamespaceURI() + \"\\\" \" );\n+                    pw.print(\"mode=\\\"\" + mode + \"\\\"\" );\n+                    pw.println(\"/>\");\n+                }\n+                \n                 pw.println(\"      </operation>\");\n             }\n-\n         }\n \n         pw.print(\"      <parameter name=\\\"allowedMethods\\\" value=\\\"\");\n@@ -321,4 +362,14 @@ else if (emitter.getScope() == Emitter.SESSION_SCOPE) {\n         }\n     } //writeDeployBinding\n \n+    public String getModeString(byte mode)\n+    {\n+        if (mode == Parameter.IN) {\n+            return \"IN\";\n+        } else if (mode == Parameter.INOUT) {\n+            return \"INOUT\";\n+        } else {\n+            return \"OUT\";\n+        }\n+    }\n } // class JavaDeployWriter"
            },
            {
                "sha": "a9fbd8dd6fcae17cdd57b1a6dd41c1a108b78517",
                "filename": "test/RPCDispatch/TestRPC.java",
                "status": "modified",
                "additions": 29,
                "deletions": 11,
                "changes": 40,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/test/RPCDispatch/TestRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/test/RPCDispatch/TestRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestRPC.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -6,6 +6,8 @@\n import org.apache.axis.Handler;\n import org.apache.axis.Message;\n import org.apache.axis.MessageContext;\n+import org.apache.axis.encoding.TypeMapping;\n+import org.apache.axis.description.ServiceDesc;\n import org.apache.axis.providers.java.RPCProvider;\n import org.apache.axis.configuration.SimpleProvider;\n import org.apache.axis.handlers.soap.SOAPService;\n@@ -76,11 +78,7 @@ private final Object rpc(String method, Object[] parms)\n         envelope.addBodyElement(body);\n \n         // Invoke the Axis engine\n-        try {\n-            engine.invoke(msgContext);\n-        } catch (AxisFault af) {\n-            return af;\n-        }\n+        engine.invoke(msgContext);\n \n         // Extract the response Envelope\n         Message message = msgContext.getResponseMessage();\n@@ -110,6 +108,9 @@ public void testReverseString() throws Exception {\n         reverse.setOption(\"className\", \"test.RPCDispatch.Service\");\n         reverse.setOption(\"allowedMethods\", \"reverseString\");\n         provider.deployService(new QName(null,SOAPAction), reverse);\n+        ServiceDesc serviceDesc = reverse.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)reverse.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         assertEquals(\"Did not reverse the string correctly.\", \"cba\", rpc(\"reverseString\", new Object[] {\"abc\"}));\n@@ -124,6 +125,9 @@ public void testReverseData() throws Exception {\n         reverse.setOption(\"className\", \"test.RPCDispatch.Service\");\n         reverse.setOption(\"allowedMethods\", \"reverseData\");\n         provider.deployService(new QName(null, SOAPAction), reverse);\n+        ServiceDesc serviceDesc = reverse.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)reverse.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         Data input    = new Data(5, \"abc\", 3);\n@@ -140,6 +144,9 @@ public void testMessageContextImplicit() throws Exception {\n         tgtSvc.setOption(\"className\", \"test.RPCDispatch.Service\");\n         tgtSvc.setOption(\"allowedMethods\", \"targetServiceImplicit\");\n         provider.deployService(new QName(null, SOAPAction), tgtSvc);\n+        ServiceDesc serviceDesc = tgtSvc.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)tgtSvc.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         assertEquals(\"SOAP Action did not equal the targetService.\", \n@@ -155,6 +162,9 @@ public void testNull() throws Exception {\n         echoInt.setOption(\"className\", \"test.RPCDispatch.Service\");\n         echoInt.setOption(\"allowedMethods\", \"echoInt\");\n         provider.deployService(new QName(null, SOAPAction), echoInt);\n+        ServiceDesc serviceDesc = echoInt.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)echoInt.getTypeMappingRegistry().getDefaultTypeMapping());\n \n         // invoke the service and verify the result\n         assertNull(\"The result was not null as expected.\", rpc(\"echoInt\", new Object[] {null}));\n@@ -169,13 +179,20 @@ public void testSimpleFault() throws Exception {\n         simpleFault.setOption(\"className\", \"test.RPCDispatch.Service\");\n         simpleFault.setOption(\"allowedMethods\", \"simpleFault\");\n         provider.deployService(new QName(null, SOAPAction), simpleFault);\n+        ServiceDesc serviceDesc = simpleFault.getServiceDescription();\n+        serviceDesc.loadServiceDescByIntrospection(test.RPCDispatch.Service.class,\n+                                                   (TypeMapping)simpleFault.getTypeMappingRegistry().getDefaultTypeMapping());\n+\n+        try {\n+            rpc(\"simpleFault\", new Object[] {\"foobar\"});\n+        } catch (AxisFault result) {\n+            assertEquals(\"faultString was not set correctly.\",\n+                \"test.RPCDispatch.Service$TestFault: foobar\",\n+                result.getFaultString());\n+            return;\n+        }\n \n-        Object result = rpc(\"simpleFault\", new Object[] {\"foobar\"});\n-        assertTrue(\"Did not get a fault as expected.\", \n-           result instanceof AxisFault);\n-        AxisFault fault = (AxisFault) result;\n-        assertEquals(\"faultString was not set correctly.\", \n-            \"test.RPCDispatch.Service$TestFault: foobar\", fault.getFaultString());\n+        fail(\"Did not get an expected fault!\");\n     }\n \n     public static void main(String args[])\n@@ -184,6 +201,7 @@ public static void main(String args[])\n         TestRPC tester = new TestRPC(\"RPC test\");\n         tester.testReverseString();\n         tester.testReverseData();\n+          tester.testSimpleFault();\n       } catch (Exception e) {\n         e.printStackTrace();\n       }"
            },
            {
                "sha": "69a86b09822ab7fd4c2f033cc1fa499271bcaeab",
                "filename": "test/RPCDispatch/TestSerializedRPC.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/test/RPCDispatch/TestSerializedRPC.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/test/RPCDispatch/TestSerializedRPC.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/RPCDispatch/TestSerializedRPC.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -83,7 +83,7 @@ public TestSerializedRPC(String name) throws Exception {\n         // be testing parameter dispatch by name, so if debug info isn't\n         // compiled into the Service class, the names are going to be \"in0\",\n         // etc.  Make sure they match.\n-        OperationDesc oper = desc.getOperationDescByName(\"concatenate\");\n+        OperationDesc oper = desc.getOperationByName(\"concatenate\");\n         assertNotNull(oper);\n         \n         firstParamName = oper.getParameter(0).getName();"
            },
            {
                "sha": "abd73945985dabc7778dcabea1cbe1af528a86d6",
                "filename": "test/encoding/TestSer.java",
                "status": "modified",
                "additions": 12,
                "deletions": 9,
                "changes": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/test/encoding/TestSer.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/test/encoding/TestSer.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/encoding/TestSer.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -33,8 +33,7 @@\n     public static void main(String [] args) throws Exception\n     {\n         TestSer tester = new TestSer(\"TestSer\");\n-        tester.testDataNoHrefs();\n-        tester.testDataWithHrefs();\n+        tester.testRPCElement();\n     }\n     \n     public TestSer(String name) {\n@@ -105,14 +104,18 @@ public void doTestData (boolean multiref) throws Exception {\n     /**\n      * Test RPC element serialization when we have no MessageContext\n      */\n-    public void testRPCElement() throws Exception\n+    public void testRPCElement()\n     {\n-        SOAPEnvelope env = new SOAPEnvelope();\n-        RPCElement method = new RPCElement(\"ns\",\n-                                           \"method\",\n-                                           new Object [] { \"argument\" });\n-        env.addBodyElement(method);\n-        String soapStr = env.toString();\n+        try {\n+            SOAPEnvelope env = new SOAPEnvelope();\n+            RPCElement method = new RPCElement(\"ns\",\n+                                               \"method\",\n+                                               new Object [] { \"argument\" });\n+            env.addBodyElement(method);\n+            String soapStr = env.toString();\n+        } catch (Exception e) {\n+            fail(e.getMessage());\n+        }\n \n         // If there was no exception, we succeeded in serializing it.\n     }"
            },
            {
                "sha": "011a8ff27e26fcd052d75cffac34fd804e0d0e13",
                "filename": "test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/marrays/MArrayTestsSOAPBindingImpl.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -42,7 +42,7 @@\n         }\n         return in;\n     }\n-    public java.util.Map testMapFooArray(java.util.Map map)\n+    public java.util.HashMap testMapFooArray(java.util.HashMap map)\n         throws java.rmi.RemoteException {\n         return map;\n     }"
            },
            {
                "sha": "0abc2cdd81544a19304d056414665a4e8a65812b",
                "filename": "test/wsdl/marrays/MArrayTestsServiceTestCase.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/aff486af8c4babc7bbf2ad91199cc7304a465477/test/wsdl/marrays/MArrayTestsServiceTestCase.java",
                "raw_url": "https://github.com/apache/axis1-java/raw/aff486af8c4babc7bbf2ad91199cc7304a465477/test/wsdl/marrays/MArrayTestsServiceTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/test/wsdl/marrays/MArrayTestsServiceTestCase.java?ref=aff486af8c4babc7bbf2ad91199cc7304a465477",
                "patch": "@@ -131,7 +131,7 @@ public void testMArrayTests() {\n \n         try {\n             // Test 3F: Some of the Foo elements are multi-referenced.   \n-            Map map = new HashMap();\n+            HashMap map = new HashMap();\n             Foo[] array = new Foo[1];\n             array[0] = new Foo();\n             array[0].setValue(123);"
            }
        ]
    }
]
