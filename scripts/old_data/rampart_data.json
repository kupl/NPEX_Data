[
    {
        "commit": "https://github.com/apache/rampart/commit/7d65c4ddc34f921ce5fffe968f173f4d78c6cfc8",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/36b9c3ff9ba34be7b744790af1753617f09fde2d",
        "message": "Additional check and avoiding an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/rampart/trunk@1442444 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_1",
        "file": [
            {
                "sha": "da258a70ad493ffb725a84076f18d8efa1dc6595",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/PolicyBasedResultsValidator.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/rampart/blob/7d65c4ddc34f921ce5fffe968f173f4d78c6cfc8/modules/rampart-core/src/main/java/org/apache/rampart/PolicyBasedResultsValidator.java",
                "raw_url": "https://github.com/apache/rampart/raw/7d65c4ddc34f921ce5fffe968f173f4d78c6cfc8/modules/rampart-core/src/main/java/org/apache/rampart/PolicyBasedResultsValidator.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/PolicyBasedResultsValidator.java?ref=7d65c4ddc34f921ce5fffe968f173f4d78c6cfc8",
                "patch": "@@ -330,7 +330,8 @@ protected void handleSupportingTokens(List<WSSecurityEngineResult> results, Supp\n                 \n             \tif(ut.isHashPassword() && !wssUt.isHashed()) {\n                 \tthrow new RampartException(\"invalidUsernameTokenType\");\n-                } else if (!wssUt.getPasswordType().equals(WSConstants.PASSWORD_TEXT)) {\n+                } else if (wssUt.getPassword() == null ||\n+\t\t\t!wssUt.getPasswordType().equals(WSConstants.PASSWORD_TEXT)) {\n                 \tthrow new RampartException(\"invalidUsernameTokenType\");\n                 }\n                 "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/rampart/commit/c6ce618950c6264bcbf3cd75712a6f1338d3973b",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/e6a55250037e766d5f65fc2a1222d17996d2fbca",
        "message": "Fixed NPE in RampartMessageData - RAMPART-270\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/rampart/trunk@1051536 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_2",
        "file": [
            {
                "sha": "1a1c4be35e06aeb0418899d35fb919ddbe2d9160",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/rampart/blob/c6ce618950c6264bcbf3cd75712a6f1338d3973b/modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java",
                "raw_url": "https://github.com/apache/rampart/raw/c6ce618950c6264bcbf3cd75712a6f1338d3973b/modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java?ref=c6ce618950c6264bcbf3cd75712a6f1338d3973b",
                "patch": "@@ -636,8 +636,7 @@ public TokenStorage getTokenStorage() throws RampartException {\n                 String storageClass = this.policyData.getRampartConfig()\n                         .getTokenStoreClass();\n                 try {\n-                    stClass = Loader.loadClass(msgContext.getAxisService()\n-                            .getClassLoader(), storageClass);\n+                    stClass = Loader.loadClass(this.customClassLoader, storageClass);\n                 } catch (ClassNotFoundException e) {\n                     throw new RampartException(\n                             \"WSHandler: cannot load token storage class: \""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/rampart/commit/b100670c62978ec2c2784ec64e711f61d315e0ca",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/fa5d32b0cc32774110bac9d15850356677c59f81",
        "message": "Added an NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/rampart/trunk/java@584382 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_3",
        "file": [
            {
                "sha": "44a291e38867d01348ab37bdbd71386ac8b67f35",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/rampart/blob/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "raw_url": "https://github.com/apache/rampart/raw/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java?ref=b100670c62978ec2c2784ec64e711f61d315e0ca",
                "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.axiom.om.OMElement;\n import org.apache.axiom.soap.SOAPEnvelope;\n+import org.apache.axiom.soap.SOAPHeader;\n import org.apache.axiom.soap.SOAPHeaderBlock;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.context.MessageContext;\n@@ -87,8 +88,12 @@ public Vector process(MessageContext msgCtx) throws WSSPolicyException,\n \n \t\tValidatorData data = new ValidatorData(rmd);\n \n-\t\tArrayList headerBlocks = rmd.getMsgContext().getEnvelope()\n-\t\t    .getHeader().getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n+\t\tSOAPHeader header = rmd.getMsgContext().getEnvelope().getHeader();\n+\t\tif(header == null) {\n+\t\t    throw new RampartException(\"missingSOAPHeader\");\n+\t\t}\n+\t\t\n+        ArrayList headerBlocks = header.getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n \t\tSOAPHeaderBlock secHeader = null;\n \t\t//Issue is axiom - a returned collection must not be null\n \t\tif(headerBlocks != null) {"
            },
            {
                "sha": "6187336f4c29ee0fb785e8bda03849426f0518e4",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/rampart/blob/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "raw_url": "https://github.com/apache/rampart/raw/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties?ref=b100670c62978ec2c2784ec64e711f61d315e0ca",
                "patch": "@@ -64,6 +64,7 @@ noSecurityResults= No security processing results from the incoming message\n missingEncryptedKeyInRequest=There was no EncryptedKey in the request message\n rampartConigMissing = Please include configured RampartConfiguration assertion in policy\n missingSecurityHeader = Missing wsse:Security header in request\n+missingSOAPHeader = SOAP header missing\n \n #Errors in processors\n errorProcessingUT = Error in processing UsernameToken"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/rampart/commit/7ca10a210a2881c0b902913228d055c91d14b024",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/c6c4670950ee3b28eeb15fac417ff7ac53888cbc",
        "message": "Added and NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/rampart/trunk/java@568940 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_4",
        "file": [
            {
                "sha": "b79b59a7078beada5de7abe981c3982c37d36edc",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "status": "modified",
                "additions": 17,
                "deletions": 10,
                "changes": 27,
                "blob_url": "https://github.com/apache/rampart/blob/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "raw_url": "https://github.com/apache/rampart/raw/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java?ref=7ca10a210a2881c0b902913228d055c91d14b024",
                "patch": "@@ -75,7 +75,7 @@ public Vector process(MessageContext msgCtx) throws WSSPolicyException,\n \t\t\tmsgCtx.setEnvelope(env);\n \t\t\tAxis2Util.useDOOM(false);\n \t\t\tif(doDebug){\n-\t\t\t\tlog.debug(\"Return process(MessageContext msgCtx)\");\n+\t\t\t\tlog.debug(\"Return process MessageContext msgCtx)\");\n \t\t\t}\n \t\t\treturn null;\n \t\t}\n@@ -88,17 +88,24 @@ public Vector process(MessageContext msgCtx) throws WSSPolicyException,\n \t\tValidatorData data = new ValidatorData(rmd);\n \n \t\tArrayList headerBlocks = rmd.getMsgContext().getEnvelope()\n-\t\t.getHeader().getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n-\t\tIterator headerBlocksIterator = headerBlocks.iterator();\n+\t\t    .getHeader().getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n \t\tSOAPHeaderBlock secHeader = null;\n-\t\twhile (headerBlocksIterator.hasNext()) {\n-\t\t\tSOAPHeaderBlock elem = (SOAPHeaderBlock) headerBlocksIterator.next();\n-\t\t\tif(elem.getLocalName().equals(WSConstants.WSSE_LN)) {\n-\t\t\t\tsecHeader = elem;\n-\t\t\t\tbreak;\n-\t\t\t}\n+\t\t//Issue is axiom - a returned collection must not be null\n+\t\tif(headerBlocks != null) {\n+    \t\tIterator headerBlocksIterator = headerBlocks.iterator();\n+    \t\twhile (headerBlocksIterator.hasNext()) {\n+    \t\t\tSOAPHeaderBlock elem = (SOAPHeaderBlock) headerBlocksIterator.next();\n+    \t\t\tif(elem.getLocalName().equals(WSConstants.WSSE_LN)) {\n+    \t\t\t\tsecHeader = elem;\n+    \t\t\t\tbreak;\n+    \t\t\t}\n+    \t\t}\n \t\t}\n-\n+\t\t\n+\t\tif(secHeader == null) {\n+\t\t    throw new RampartException(\"missingSecurityHeader\");\n+\t\t}\n+\t\t\n \t\tlong t0=0, t1=0, t2=0, t3=0;\n \t\tif(dotDebug){\n \t\t\tt0 = System.currentTimeMillis();"
            },
            {
                "sha": "708cf06deb41f95843406ef11a01eaeb8302146f",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/rampart/blob/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "raw_url": "https://github.com/apache/rampart/raw/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties?ref=7ca10a210a2881c0b902913228d055c91d14b024",
                "patch": "@@ -63,6 +63,7 @@ noSecurityToken = Missing security token\n noSecurityResults= No security processing results from the incoming message\n missingEncryptedKeyInRequest=There was no EncryptedKey in the request message\n rampartConigMissing = Please include configured RampartConfiguration assertion in policy\n+missingSecurityHeader = Missing wsse:Security header in request\n \n #Errors in processors\n errorProcessingUT = Error in processing UsernameToken"
            },
            {
                "sha": "b5145f80c069d2006c5e887986b22aefed67e51b",
                "filename": "modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java",
                "status": "added",
                "additions": 48,
                "deletions": 0,
                "changes": 48,
                "blob_url": "https://github.com/apache/rampart/blob/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java",
                "raw_url": "https://github.com/apache/rampart/raw/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java?ref=7ca10a210a2881c0b902913228d055c91d14b024",
                "patch": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2004,2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.rampart;\n+\n+import org.apache.axis2.context.MessageContext;\n+import org.apache.neethi.Policy;\n+\n+public class RampartEngineTest extends MessageBuilderTestBase {\n+\n+\n+    public RampartEngineTest(String name) {\n+        super(name);\n+    }\n+    \n+    public void testEmptySOAPMessage() throws Exception {\n+        \n+       try {\n+           MessageContext ctx = getMsgCtx();\n+           \n+           String policyXml = \"test-resources/policy/rampart-asymm-binding-6-3des-r15.xml\";\n+           Policy policy = this.loadPolicy(policyXml);\n+           \n+           ctx.setProperty(RampartMessageData.KEY_RAMPART_POLICY, policy);\n+           \n+           RampartEngine engine = new RampartEngine();\n+           engine.process(ctx);\n+        } catch (RampartException e) {\n+           assertEquals(\n+                    \"Expected rampart to complain about missing security header\",\n+                    \"Missing wsse:Security header in request\", e.getMessage()); \n+        }\n+    }\n+\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/rampart/commit/8c39e7528d93d7b1086696f5d65467f598a7fcba",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/ad26099c515364facb38f23be7555f8080eb0eb4",
        "message": "Added an NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/rampart/trunk/java@554865 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_5",
        "file": [
            {
                "sha": "cd2676393ca980ca712aa6212381e4f0e1cea986",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/ValidatorData.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/rampart/blob/8c39e7528d93d7b1086696f5d65467f598a7fcba/modules/rampart-core/src/main/java/org/apache/rampart/ValidatorData.java",
                "raw_url": "https://github.com/apache/rampart/raw/8c39e7528d93d7b1086696f5d65467f598a7fcba/modules/rampart-core/src/main/java/org/apache/rampart/ValidatorData.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/ValidatorData.java?ref=8c39e7528d93d7b1086696f5d65467f598a7fcba",
                "patch": "@@ -18,14 +18,12 @@\n \n import org.apache.axiom.soap.SOAP11Constants;\n import org.apache.ws.security.WSConstants;\n-import org.apache.ws.security.util.WSSecurityUtil;\n import org.apache.xml.security.utils.EncryptionConstants;\n import org.w3c.dom.Element;\n import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n \n import java.util.ArrayList;\n-import java.util.List;\n \n public class ValidatorData {\n \n@@ -54,7 +52,8 @@ private void extractEncryptedPartInformation(Element parent) {\n             node = childNodes.item(i);\n             if (node instanceof Element) {\n                 Element elem = (Element) node;\n-                if (elem.getNamespaceURI().equals(WSConstants.ENC_NS)\n+                if (elem.getNamespaceURI() != null \n+                        && elem.getNamespaceURI().equals(WSConstants.ENC_NS)\n                         && elem.getLocalName().equals(\n                                 EncryptionConstants._TAG_ENCRYPTEDDATA)) {\n                     if (parent != null"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/rampart/commit/0739e8d92e02e95542affce9f9e7e3c2476d13a9",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/3e3d5ae8d23ede6c1979ddb968f1af8fa4d6ab04",
        "message": "Getting rid of a possible NPE : Caused when someone forgets to setup RampartConfig\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/rampart/trunk@1221102 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_6",
        "file": [
            {
                "sha": "88c98fa3de5be3977aca38715bee5d313f7eac91",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/builder/BindingBuilder.java",
                "status": "modified",
                "additions": 10,
                "deletions": 5,
                "changes": 15,
                "blob_url": "https://github.com/apache/rampart/blob/0739e8d92e02e95542affce9f9e7e3c2476d13a9/modules/rampart-core/src/main/java/org/apache/rampart/builder/BindingBuilder.java",
                "raw_url": "https://github.com/apache/rampart/raw/0739e8d92e02e95542affce9f9e7e3c2476d13a9/modules/rampart-core/src/main/java/org/apache/rampart/builder/BindingBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/builder/BindingBuilder.java?ref=0739e8d92e02e95542affce9f9e7e3c2476d13a9",
                "patch": "@@ -27,6 +27,7 @@\n import org.apache.rampart.RampartMessageData;\n import org.apache.rampart.policy.RampartPolicyData;\n import org.apache.rampart.policy.SupportingPolicyData;\n+import org.apache.rampart.policy.model.RampartConfig;\n import org.apache.rampart.util.RampartUtil;\n import org.apache.ws.secpolicy.Constants;\n import org.apache.ws.secpolicy.SPConstants;\n@@ -274,14 +275,19 @@ protected WSSecSignature getSignatureBuilder(RampartMessageData rmd, Token token\n         }\n \n         // Get the user - First check whether userCertAlias present\n-        if (user == null) {\n-            user = rpd.getRampartConfig().getUserCertAlias();\n+        RampartConfig rampartConfig = rpd.getRampartConfig();\n+        if(rampartConfig == null) {\n+        \tthrow new RampartException(\"rampartConfigMissing\");\n+        }\n+        \n+\t\tif (user == null) {\n+            user = rampartConfig.getUserCertAlias();\n         }\n         \n         // If userCertAlias is not present, use user property as Alias\n         \n         if (user == null) {\n-            user = rpd.getRampartConfig().getUser();\n+            user = rampartConfig.getUser();\n         }\n             \n         String password = null;\n@@ -334,8 +340,7 @@ protected WSSecSignature getSignatureBuilder(RampartMessageData rmd, Token token\n         sig.setDigestAlgo(algorithmSuite.getDigest());\n         \n         try {\n-            sig.prepare(rmd.getDocument(), RampartUtil.getSignatureCrypto(rpd\n-                    .getRampartConfig(), rmd.getCustomClassLoader()), \n+            sig.prepare(rmd.getDocument(), RampartUtil.getSignatureCrypto(rampartConfig, rmd.getCustomClassLoader()), \n                     rmd.getSecHeader());\n         } catch (WSSecurityException e) {\n             throw new RampartException(\"errorInSignatureWithX509Token\", e);"
            },
            {
                "sha": "39b2890ad3ad1449c79b6ec9396893a5314e39db",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/rampart/blob/0739e8d92e02e95542affce9f9e7e3c2476d13a9/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "raw_url": "https://github.com/apache/rampart/raw/0739e8d92e02e95542affce9f9e7e3c2476d13a9/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties?ref=0739e8d92e02e95542affce9f9e7e3c2476d13a9",
                "patch": "@@ -28,6 +28,7 @@ cannotCreatePolicyValidatorCallbackInstance = Cannot create custom policy valida\n cannotLoadRampartConfigCallbackClass = Cannot load rampart config callback class : \\\"{0}\\\"\n cannotCreateRampartConfigCallbackInstance = Cannot create rampart config callback class instance : \\\"{0}\\\"\n missingEncryptionUser=Encryption user not specified (The context is created by the initiating party)\n+rampartConfigMissing = Rampart policy configuration missing\n \n missingSignatureCrypto=Signature crypto information not available\n missingEncryptionCrypto=Encryption crypto information not available"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/rampart/commit/590d2eb7f243c78a450de43708c0048b87d7c645",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/a4ac007d53120b861013d4a1337bd4ec9dc294ee",
        "message": "Fixed the problem of NPE in RampartMessageData that prevents fault being returned to service consumer - RAMPART-293\n\ngit-svn-id: https://svn.apache.org/repos/asf/axis/axis2/java/rampart/trunk@1051506 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_7",
        "file": [
            {
                "sha": "7443de6b2bed783b0832c6b6b613f3579687d5e7",
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/rampart/blob/590d2eb7f243c78a450de43708c0048b87d7c645/modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java",
                "raw_url": "https://github.com/apache/rampart/raw/590d2eb7f243c78a450de43708c0048b87d7c645/modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/RampartMessageData.java?ref=590d2eb7f243c78a450de43708c0048b87d7c645",
                "patch": "@@ -370,7 +370,9 @@ public RampartMessageData(MessageContext msgCtx, boolean sender) throws RampartE\n            // To handle scenarios where password type is not set by default.\n             this.config.setHandleCustomPasswordTypes(true);\n \n-            this.customClassLoader = msgCtx.getAxisService().getClassLoader();\n+            if (axisService != null) { \n+                this.customClassLoader = axisService.getClassLoader(); \n+            } \n             \n             if(this.sender && this.policyData != null) {\n                 this.secHeader = new WSSecHeader();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/rampart/commit/8cb635917373b840a2303566550c35088edfa75b",
        "repo": "rampart",
        "parent": "https://github.com/apache/rampart/commit/ffa464781f1925b05d1b315c12daa4220252485a",
        "message": "Fixed a policy serialization NPE\nGetting the policy within an IssuedToken properly\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/rampart/trunk/java@555246 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "rampart_8",
        "file": [
            {
                "sha": "5aa4e40765825fd73597d2d460bfe1910b863241",
                "filename": "modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/builders/IssuedTokenBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 4,
                "changes": 6,
                "blob_url": "https://github.com/apache/rampart/blob/8cb635917373b840a2303566550c35088edfa75b/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/builders/IssuedTokenBuilder.java",
                "raw_url": "https://github.com/apache/rampart/raw/8cb635917373b840a2303566550c35088edfa75b/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/builders/IssuedTokenBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/builders/IssuedTokenBuilder.java?ref=8cb635917373b840a2303566550c35088edfa75b",
                "patch": "@@ -52,11 +52,9 @@ public Assertion build(OMElement element, AssertionBuilderFactory factory)\n             issuedToken.setRstTemplate(rstTmplElem);\n         }\n \n-        OMElement policyElement = element.getFirstElement();\n+        OMElement policyElement = element.getFirstChildWithName(org.apache.neethi.Constants.Q_ELEM_POLICY);\n \n-        if (policyElement != null\n-                && policyElement.getQName().equals(\n-                        org.apache.neethi.Constants.Q_ELEM_POLICY)) {\n+        if (policyElement != null) {\n \n             Policy policy = PolicyEngine.getPolicy(policyElement);\n             policy = (Policy) policy.normalize(false);"
            },
            {
                "sha": "66ef9fd50dbf4baa247b72c91b2f29afdb37f510",
                "filename": "modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/model/SupportingToken.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/rampart/blob/8cb635917373b840a2303566550c35088edfa75b/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/model/SupportingToken.java",
                "raw_url": "https://github.com/apache/rampart/raw/8cb635917373b840a2303566550c35088edfa75b/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/model/SupportingToken.java",
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-policy/src/main/java/org/apache/ws/secpolicy/model/SupportingToken.java?ref=8cb635917373b840a2303566550c35088edfa75b",
                "patch": "@@ -245,7 +245,7 @@ public void serialize(XMLStreamWriter writer) throws XMLStreamException {\n \n         \n         if (signedParts != null) {\n-            signedElements.serialize(writer);\n+            signedParts.serialize(writer);\n             \n         } else if (signedElements != null) {\n             signedElements.serialize(writer);"
            }
        ]
    }
]
