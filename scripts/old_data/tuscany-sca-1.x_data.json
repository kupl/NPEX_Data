[
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/17cf3a4ee4f39e1309bfae9c2b2cf94a9f5cc09e",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/dd3d019bec8634244c792247ec1a4ced1ff87f49",
        "message": "We should call e.toString() rather than e.getMessage() since some exceptions, such as NullPointerException, do not have a Messgae so return null. This then causes a NullPointerException to be thrown since you cannot pass null into the constructor of IOException. This then hides the original cause of the Exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@673696 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_1",
        "file": [
            {
                "sha": "621045e7d01d0c5922a8b84b8166f6c9d2eeafef",
                "filename": "modules/core/src/main/java/org/apache/tuscany/sca/core/context/CallableReferenceImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/17cf3a4ee4f39e1309bfae9c2b2cf94a9f5cc09e/modules/core/src/main/java/org/apache/tuscany/sca/core/context/CallableReferenceImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/17cf3a4ee4f39e1309bfae9c2b2cf94a9f5cc09e/modules/core/src/main/java/org/apache/tuscany/sca/core/context/CallableReferenceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core/src/main/java/org/apache/tuscany/sca/core/context/CallableReferenceImpl.java?ref=17cf3a4ee4f39e1309bfae9c2b2cf94a9f5cc09e",
                "patch": "@@ -368,7 +368,7 @@ public void writeExternal(ObjectOutput out) throws IOException {\n             }\n         } catch (Exception e) {\n             // e.printStackTrace();\n-            throw new IOException(e.getMessage());\n+            throw new IOException(e.toString());\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/ea243d5d9d5bfeba5d7514d0b454251b940af3f1",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/bd15ab9de7db28020b75dd1fc0d3575f290b7d8f",
        "message": "Fix NullPointerException caused by missing tests for null callback interface (TUSCANY-3588)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/sca-java-1.x/trunk@951561 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_2",
        "file": [
            {
                "sha": "5e6cd54e67dc5730a43fa74e936ce0b07a4d4400",
                "filename": "modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentDocumentProcessor.java",
                "status": "modified",
                "additions": 11,
                "deletions": 7,
                "changes": 18,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/ea243d5d9d5bfeba5d7514d0b454251b940af3f1/modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentDocumentProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/ea243d5d9d5bfeba5d7514d0b454251b940af3f1/modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentDocumentProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentDocumentProcessor.java?ref=ea243d5d9d5bfeba5d7514d0b454251b940af3f1",
                "patch": "@@ -85,11 +85,13 @@ public Document process(DocumentProcessor parentProcessor,\n \n                         }\n \n-                        for (Operation operation : interfaceContract.getCallbackInterface().getOperations()) {\n+                        if (interfaceContract.getCallbackInterface() != null) {\n+                            for (Operation operation : interfaceContract.getCallbackInterface().getOperations()) {\n \n-                            serviceDoc.add(new Field(SearchFields.SERVICE_INTERFACE_CALLBACK_FIELD,\n-                                                     operation.getName(), Field.Store.YES, Field.Index.ANALYZED));\n+                                serviceDoc.add(new Field(SearchFields.SERVICE_INTERFACE_CALLBACK_FIELD,\n+                                                         operation.getName(), Field.Store.YES, Field.Index.ANALYZED));\n \n+                            }\n                         }\n \n                     }\n@@ -115,12 +117,14 @@ public Document process(DocumentProcessor parentProcessor,\n \n                         }\n \n-                        for (Operation operation : interfaceContract.getCallbackInterface().getOperations()) {\n+                        if (interfaceContract.getCallbackInterface() != null) {\n+                            for (Operation operation : interfaceContract.getCallbackInterface().getOperations()) {\n \n-                            referenceDoc.add(new Field(SearchFields.REFERENCE_INTERFACE_CALLBACK_FIELD, operation\n-                                .getName(), Field.Store.YES, Field.Index.ANALYZED));\n+                                referenceDoc.add(new Field(SearchFields.REFERENCE_INTERFACE_CALLBACK_FIELD, operation\n+                                    .getName(), Field.Store.YES, Field.Index.ANALYZED));\n \n-                        }\n+                            }\n+                        } \n \n                     }\n "
            },
            {
                "sha": "20cc421d72c722b5a3cfa07bb492e35c9a66b961",
                "filename": "modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentTypeDocumentProcessor.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/ea243d5d9d5bfeba5d7514d0b454251b940af3f1/modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentTypeDocumentProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/ea243d5d9d5bfeba5d7514d0b454251b940af3f1/modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentTypeDocumentProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/domain-search/src/main/java/org/apache/tuscany/sca/domain/search/impl/ComponentTypeDocumentProcessor.java?ref=ea243d5d9d5bfeba5d7514d0b454251b940af3f1",
                "patch": "@@ -128,11 +128,13 @@ public Document process(DocumentProcessor parentProcessor,\n \n                         }\n \n-                        for (Operation operation : interfaceContract.getCallbackInterface().getOperations()) {\n+                        if (interfaceContract.getCallbackInterface() != null) {\n+                            for (Operation operation : interfaceContract.getCallbackInterface().getOperations()) {\n \n-                            referenceDoc.add(new Field(SearchFields.REFERENCE_INTERFACE_CALLBACK_FIELD, operation\n-                                .getName(), Field.Store.YES, Field.Index.ANALYZED));\n+                                referenceDoc.add(new Field(SearchFields.REFERENCE_INTERFACE_CALLBACK_FIELD, operation\n+                                    .getName(), Field.Store.YES, Field.Index.ANALYZED));\n \n+                            }\n                         }\n \n                     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/453c7598b598b9beda9a3b377d4810e5a0b31bae",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/1b2e68cc29e3917d57986ffa5b874dfb7892bfad",
        "message": "TUSCANY-1867: Apply patch from Vamsavardhana Reddy to fix @OneWay with String return type causes NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@656521 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_3",
        "file": [
            {
                "sha": "11deef5906b030ec668df985ecccf510c0fd88ad",
                "filename": "modules/domain-impl/src/test/java/org/apache/tuscany/sca/domain/impl/TestNodeManagerServiceImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/domain-impl/src/test/java/org/apache/tuscany/sca/domain/impl/TestNodeManagerServiceImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/domain-impl/src/test/java/org/apache/tuscany/sca/domain/impl/TestNodeManagerServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/domain-impl/src/test/java/org/apache/tuscany/sca/domain/impl/TestNodeManagerServiceImpl.java?ref=453c7598b598b9beda9a3b377d4810e5a0b31bae",
                "patch": "@@ -58,7 +58,7 @@ public void stop() throws NodeException {\n         System.out.println(\"stop\");\r\n     }\r\n     \r\n-    public void destroyNode() throws NodeException {\r\n+    public void destroyNode() {\r\n         System.out.println(\"destroy\");\r\n     } \r\n     \r"
            },
            {
                "sha": "0468c2c8401a4168ff9e225018ca1891b03c69fd",
                "filename": "modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java?ref=453c7598b598b9beda9a3b377d4810e5a0b31bae",
                "patch": "@@ -175,12 +175,12 @@ public void introspectInterface(JavaInterface javaInterface, Class<?> clazz) thr\n             if (nonBlocking) {\n                 if (!(returnType == void.class)) {\n                         throw new InvalidOperationException(\n-                             \"Method should return 'void' when declared with an@OneWay annotation.\",\n+                             \"Method should return 'void' when declared with an @OneWay annotation. \"+method,\n                              method);\n                 }\n                 if (!(faultTypes.length == 0)) {\n                         throw new InvalidOperationException(\n-                             \"Method should not declare exceptions with an @OneWay annotation.\",\n+                             \"Method should not declare exceptions with an @OneWay annotation. \"+method,\n                              method);\n                 }\n              }"
            },
            {
                "sha": "0aff1701ef3fcc638d2105af410cb75e75bffd11",
                "filename": "modules/node-impl/src/main/java/org/apache/tuscany/sca/node/management/impl/SCANodeManagerServiceImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/node-impl/src/main/java/org/apache/tuscany/sca/node/management/impl/SCANodeManagerServiceImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/node-impl/src/main/java/org/apache/tuscany/sca/node/management/impl/SCANodeManagerServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/node-impl/src/main/java/org/apache/tuscany/sca/node/management/impl/SCANodeManagerServiceImpl.java?ref=453c7598b598b9beda9a3b377d4810e5a0b31bae",
                "patch": "@@ -90,7 +90,7 @@ public void stop() throws NodeException {\n         node.stopFromDomain();\r\n     }\r\n     \r\n-    public void destroyNode() throws NodeException {\r\n+    public void destroyNode() {\r\n         // do nothing - the domain can't destroy nodes\r\n     }    \r\n     \r"
            },
            {
                "sha": "d9cc65947020198960412926710cccf86ff3ae3e",
                "filename": "modules/node/src/main/java/org/apache/tuscany/sca/node/management/SCANodeManagerService.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/node/src/main/java/org/apache/tuscany/sca/node/management/SCANodeManagerService.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/node/src/main/java/org/apache/tuscany/sca/node/management/SCANodeManagerService.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/node/src/main/java/org/apache/tuscany/sca/node/management/SCANodeManagerService.java?ref=453c7598b598b9beda9a3b377d4810e5a0b31bae",
                "patch": "@@ -77,7 +77,7 @@\n      * as the WSDL processing struggles with methods called destroy\r\n      */\r\n     @OneWay\r\n-    void destroyNode() throws NodeException;     \r\n+    void destroyNode();\r\n \r\n     /**\r\n      * Pass in an updated version of a composite in base64 encoded XML form. The node will compare\r"
            },
            {
                "sha": "ce5fac51a38ef4ca7b4d492a154da0ceeba20233",
                "filename": "modules/node2-impl/src/main/java/org/apache/tuscany/sca/node/impl/NodeImpl.java",
                "status": "modified",
                "additions": 33,
                "deletions": 0,
                "changes": 33,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/node2-impl/src/main/java/org/apache/tuscany/sca/node/impl/NodeImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/453c7598b598b9beda9a3b377d4810e5a0b31bae/modules/node2-impl/src/main/java/org/apache/tuscany/sca/node/impl/NodeImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/node2-impl/src/main/java/org/apache/tuscany/sca/node/impl/NodeImpl.java?ref=453c7598b598b9beda9a3b377d4810e5a0b31bae",
                "patch": "@@ -83,6 +83,39 @@\n     // The composite loaded into this node\n     private Composite composite; \n     \n+    /** \n+     * Constructs a new SCA node.\n+     *  \n+     * @param configuration the the node configuration information.\n+     */\n+    NodeImpl(ConfiguredNodeImplementation configuration) {\n+        configurationName = configuration.getURI();\n+        logger.log(Level.INFO, \"Creating node: \" + configuration.getURI());               \n+\n+        try {\n+            // Initialize the runtime\n+            initRuntime();\n+            \n+            URL configurationURL = new URL(configuration.getURI());\n+\n+            // Resolve contribution URLs\n+            for (Contribution contribution: configuration.getContributions()) {\n+                URL contributionURL = new URL(configurationURL, contribution.getLocation());\n+                contribution.setLocation(contributionURL.toString());\n+            }\n+            \n+            // Resolve composite URL\n+            URL compositeURL = new URL(configurationURL, configuration.getComposite().getURI());\n+            configuration.getComposite().setURI(compositeURL.toString());\n+\n+            // Configure the node\n+            configureNode(configuration);\n+\n+        } catch (Exception e) {\n+            throw new ServiceRuntimeException(e);\n+        }        \n+    }\n+\n     /** \n      * Constructs a new SCA node.\n      *  "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/61788363eceb2ca9239ce8b348efcf5d2ff65a5b",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/058b30a92d8507bb9138322d36ffe713cf62fe3f",
        "message": "TUSCANY-1867: Apply patch from Ramkumar Ramalingam to fix @OneWay with String return type causes NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@656190 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_4",
        "file": [
            {
                "sha": "d14e3b06ad94b3320f58ec9f955febe01cee27a7",
                "filename": "modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java",
                "status": "modified",
                "additions": 13,
                "deletions": 0,
                "changes": 13,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/61788363eceb2ca9239ce8b348efcf5d2ff65a5b/modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/61788363eceb2ca9239ce8b348efcf5d2ff65a5b/modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-java/src/main/java/org/apache/tuscany/sca/interfacedef/java/impl/JavaInterfaceIntrospectorImpl.java?ref=61788363eceb2ca9239ce8b348efcf5d2ff65a5b",
                "patch": "@@ -172,6 +172,19 @@ public void introspectInterface(JavaInterface javaInterface, Class<?> clazz) thr\n                 getActualTypes(method.getGenericExceptionTypes(), method.getExceptionTypes(), typeBindings);\n \n             boolean nonBlocking = method.isAnnotationPresent(OneWay.class);\n+            if (nonBlocking) {\n+                if (!(returnType == void.class)) {\n+                        throw new InvalidOperationException(\n+                             \"Method should return 'void' when declared with an@OneWay annotation.\",\n+                             method);\n+                }\n+                if (!(faultTypes.length == 0)) {\n+                        throw new InvalidOperationException(\n+                             \"Method should not declare exceptions with an @OneWay annotation.\",\n+                             method);\n+                }\n+             }\n+\n             ConversationSequence conversationSequence = ConversationSequence.CONVERSATION_NONE;\n             if (method.isAnnotationPresent(EndsConversation.class)) {\n                 if (!conversational) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/204a6d9bf552ed3262c651875f662446503ec947",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/0ba29ca2ca4b36ae7b81686c334e81129aa88560",
        "message": "Fixed NPE with non-hierarchical URLs like the ones used with EJB bindings. Fixed NPE when wiring to services of a component of type implementation:composite when the composite is not fully resolved.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@658926 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_5",
        "file": [
            {
                "sha": "518ac767fbd90483d645b53acd3588d6cb5860cd",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseWireBuilderImpl.java",
                "status": "modified",
                "additions": 17,
                "deletions": 16,
                "changes": 33,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/204a6d9bf552ed3262c651875f662446503ec947/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseWireBuilderImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/204a6d9bf552ed3262c651875f662446503ec947/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseWireBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseWireBuilderImpl.java?ref=204a6d9bf552ed3262c651875f662446503ec947",
                "patch": "@@ -518,22 +518,23 @@ private void connectCompositeReferences(Composite composite, Map<String, Compone\n                 // user might have put a local target name in the uri so get\n                 // the path part and see if it refers to a target we know about\n                 // - if it does the reference binding will be matched with a service binding\n-                // - if it doesn't it is assumed to be an external reference \n-                uri = URI.create(uri).getPath();\n-                \n-                if (uri.startsWith(\"/\")) {\n-                    uri = uri.substring(1);\n-                }\n-                                               \n-                // Resolve the target component and service\n-                ComponentService targetComponentService = componentServices.get(uri);\n-                Component targetComponent;\n-                \n-                int s = uri.indexOf('/');\n-                if (s == -1) {\n-                    targetComponent = components.get(uri);\n-                } else {\n-                    targetComponent = components.get(uri.substring(0, s));\n+                // - if it doesn't it is assumed to be an external reference\n+                Component targetComponent = null;\n+                ComponentService targetComponentService = null;\n+                String path = URI.create(uri).getPath();\n+                if (path != null) {\n+                    if (path.startsWith(\"/\")) {\n+                        path = path.substring(1);\n+                    }\n+                                                   \n+                    // Resolve the target component and service\n+                    targetComponentService = componentServices.get(path);\n+                    int s = path.indexOf('/');\n+                    if (s == -1) {\n+                        targetComponent = components.get(path);\n+                    } else {\n+                        targetComponent = components.get(path.substring(0, s));\n+                    }\n                 }\n \n                 // if the path of the binding URI matches a component in the "
            },
            {
                "sha": "f53e50ca12672b9ea5c35366315e14b3bba9ef20",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/EndpointBuilderImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/204a6d9bf552ed3262c651875f662446503ec947/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/EndpointBuilderImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/204a6d9bf552ed3262c651875f662446503ec947/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/EndpointBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/EndpointBuilderImpl.java?ref=204a6d9bf552ed3262c651875f662446503ec947",
                "patch": "@@ -20,6 +20,7 @@\n package org.apache.tuscany.sca.assembly.builder.impl;\n \n import org.apache.tuscany.sca.assembly.Binding;\n+import org.apache.tuscany.sca.assembly.ComponentService;\n import org.apache.tuscany.sca.assembly.CompositeService;\n import org.apache.tuscany.sca.assembly.Endpoint;\n import org.apache.tuscany.sca.assembly.builder.EndpointBuilder;\n@@ -69,7 +70,10 @@ public void build(Endpoint endpoint) {\n         if (endpoint.getTargetComponentService().getService() instanceof CompositeService) {\n             CompositeService compositeService = (CompositeService) endpoint.getTargetComponentService().getService();\n             // Find the promoted component service\n-            endpoint.setTargetComponentService(ServiceConfigurationUtil.getPromotedComponentService(compositeService));\n+            ComponentService promotedComponentService = ServiceConfigurationUtil.getPromotedComponentService(compositeService);\n+            if (promotedComponentService != null && !promotedComponentService.isUnresolved()) {\n+                endpoint.setTargetComponentService(promotedComponentService);\n+            }\n         }\n         \n         try  {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/fe40f13c4c2742353e23ede4f121472c593ac4e9",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/1501a1f994253c3d89bc675f2fdd6d791569d0bb",
        "message": "Fix NPE bug in TUSCANY-2962 fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@774957 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_6",
        "file": [
            {
                "sha": "46803d37fbc74d6174af2d215595641306092b52",
                "filename": "modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/fe40f13c4c2742353e23ede4f121472c593ac4e9/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/fe40f13c4c2742353e23ede4f121472c593ac4e9/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java?ref=fe40f13c4c2742353e23ede4f121472c593ac4e9",
                "patch": "@@ -427,11 +427,11 @@ public void resolve(WebServiceBinding model, ModelResolver resolver) throws Cont\n             \t// Introspect the WSDL portType and validate the input/output messages.\n             \tList<OperationImpl> operations = portType.getOperations();\n             \tfor (OperationImpl operation : operations) {\n-            \t\tif (operation.getInput().getMessage() == null) {\n+            \t\tif (operation.getInput() != null && operation.getInput().getMessage() == null) {\n             \t\t\tContributionResolveException ce = new ContributionResolveException(\"WSDL binding operation input name \" + operation.getInput().getName() + \" does not match with PortType Definition\");\n                         error(\"ContributionResolveException\", wsdlDefinition, ce);\n             \t\t}\n-            \t\tif (operation.getOutput().getMessage() == null) {\n+            \t\tif (operation.getOutput() != null && operation.getOutput().getMessage() == null) {\n             \t\t\tContributionResolveException ce = new ContributionResolveException(\"WSDL binding operation output name \" + operation.getOutput().getName() + \" does not match with PortType Definition\");\n                         error(\"ContributionResolveException\", wsdlDefinition, ce);\n             \t\t}"
            },
            {
                "sha": "11d6a913c216acc98b3148986d28533b4064929a",
                "filename": "modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/fe40f13c4c2742353e23ede4f121472c593ac4e9/modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/fe40f13c4c2742353e23ede4f121472c593ac4e9/modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java?ref=fe40f13c4c2742353e23ede4f121472c593ac4e9",
                "patch": "@@ -259,11 +259,11 @@ private WSDLInterface resolveWSDLInterface(WSDLInterface wsdlInterface, ModelRes\n                     \t// the input/output messages.\n                     \tList<OperationImpl> operations = portType.getElement().getOperations();\n                     \tfor (OperationImpl operation : operations) {\n-                    \t\tif (operation.getInput().getMessage() == null) {\n+                    \t\tif (operation.getInput() != null && operation.getInput().getMessage() == null) {\n                     \t\t\tContributionResolveException ce = new ContributionResolveException(\"WSDL binding operation input name \" + operation.getInput().getName() + \" does not match with PortType Definition\");\n                                 error(\"ContributionResolveException\", wsdlDefinition, ce);\n                     \t\t}\n-                    \t\tif (operation.getOutput().getMessage() == null) {\n+                    \t\tif (operation.getOutput() != null && operation.getOutput().getMessage() == null) {\n                     \t\t\tContributionResolveException ce = new ContributionResolveException(\"WSDL binding operation output name \" + operation.getOutput().getName() + \" does not match with PortType Definition\");\n                                 error(\"ContributionResolveException\", wsdlDefinition, ce);\n                     \t\t}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/bd0b073ed3115eb1cc43a7bf930c4eff5fd93929",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/34ed9246deaf8711200b101a8739facbe8b43c3e",
        "message": "Fix NPE in finally after earlier exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@696399 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_7",
        "file": [
            {
                "sha": "3753fd9d6475e2d991bcd41216c10197eacf556b",
                "filename": "modules/databinding-jaxb-axiom/src/main/java/org/apache/tuscany/sca/databinding/jaxb/axiom/OMElement2JAXB.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/bd0b073ed3115eb1cc43a7bf930c4eff5fd93929/modules/databinding-jaxb-axiom/src/main/java/org/apache/tuscany/sca/databinding/jaxb/axiom/OMElement2JAXB.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/bd0b073ed3115eb1cc43a7bf930c4eff5fd93929/modules/databinding-jaxb-axiom/src/main/java/org/apache/tuscany/sca/databinding/jaxb/axiom/OMElement2JAXB.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/databinding-jaxb-axiom/src/main/java/org/apache/tuscany/sca/databinding/jaxb/axiom/OMElement2JAXB.java?ref=bd0b073ed3115eb1cc43a7bf930c4eff5fd93929",
                "patch": "@@ -62,7 +62,9 @@ public Object run() throws JAXBException, XMLStreamException {\n                         reader = source.getXMLStreamReaderWithoutCaching();\n                         result = unmarshaller.unmarshal(reader, JAXBContextHelper.getJavaType(context.getTargetDataType()));\n                     } finally {\n-                        reader.close();\n+                        if (reader != null) {\n+                            reader.close();\n+                        }\n                         JAXBContextHelper.releaseJAXBUnmarshaller(jaxbContext, unmarshaller);\n                     }\n                     return JAXBContextHelper.createReturnValue(jaxbContext, context.getTargetDataType(), result);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/b56e20d4da097fd8cc00a5c3011568918ad0c853",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/dda7244342e48778bddc1778efc3fe9e02b5a7fa",
        "message": "Fix NPE as now getServiceDiscoverer is non-static\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@691514 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_8",
        "file": [
            {
                "sha": "4eeb706767532f4c7b5ceceae5c58175cc77fb6a",
                "filename": "modules/node-launcher-osgi/src/main/java/org/apache/tuscany/sca/node/osgi/launcher/FelixOSGiHost.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/b56e20d4da097fd8cc00a5c3011568918ad0c853/modules/node-launcher-osgi/src/main/java/org/apache/tuscany/sca/node/osgi/launcher/FelixOSGiHost.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/b56e20d4da097fd8cc00a5c3011568918ad0c853/modules/node-launcher-osgi/src/main/java/org/apache/tuscany/sca/node/osgi/launcher/FelixOSGiHost.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/node-launcher-osgi/src/main/java/org/apache/tuscany/sca/node/osgi/launcher/FelixOSGiHost.java?ref=b56e20d4da097fd8cc00a5c3011568918ad0c853",
                "patch": "@@ -148,8 +148,10 @@ private ClassLoader getContextClassLoader(BundleContext bundleContext) {\n                 try {\n                     b.start();\n                     Class<?> discovererClass = b.loadClass(\"org.apache.tuscany.sca.extensibility.ServiceDiscovery\");\n+                    Method getInstance = discovererClass.getMethod(\"getInstance\");\n+                    Object instance = getInstance.invoke(null);\n                     Method getter = discovererClass.getMethod(\"getServiceDiscoverer\");\n-                    Object discoverer = getter.invoke(null);\n+                    Object discoverer = getter.invoke(instance);\n \n                     Method getCL = discoverer.getClass().getMethod(\"getContextClassLoader\");\n                     ClassLoader cl = (ClassLoader)getCL.invoke(discoverer);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/0d5dec8a3f59697173d4887a93b84ac81c922923",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/492f45daee76a561ac68e18735945441b19f8d09",
        "message": "Protect against NPE when InterfaceContract is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@684647 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_9",
        "file": [
            {
                "sha": "ed01a509d2db1252d2386c68c9e892f32ade93a5",
                "filename": "modules/core/src/main/java/org/apache/tuscany/sca/core/context/ComponentContextImpl.java",
                "status": "modified",
                "additions": 13,
                "deletions": 6,
                "changes": 19,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/0d5dec8a3f59697173d4887a93b84ac81c922923/modules/core/src/main/java/org/apache/tuscany/sca/core/context/ComponentContextImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/0d5dec8a3f59697173d4887a93b84ac81c922923/modules/core/src/main/java/org/apache/tuscany/sca/core/context/ComponentContextImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core/src/main/java/org/apache/tuscany/sca/core/context/ComponentContextImpl.java?ref=0d5dec8a3f59697173d4887a93b84ac81c922923",
                "patch": "@@ -219,7 +219,11 @@ public RequestContext getRequestContext() {\n             InterfaceContract refInterfaceContract = getInterfaceContract(interfaceContract, businessInterface);\n             if (refInterfaceContract != interfaceContract) {\n                 ref = (RuntimeComponentReference)reference.clone();\n-                ref.setInterfaceContract(interfaceContract);\n+                if (interfaceContract != null) {\n+                    ref.setInterfaceContract(interfaceContract);\n+                } else {\n+                    ref.setInterfaceContract(refInterfaceContract);\n+                }\n             }\n             ref.setComponent(component);\n             return new ServiceReferenceImpl<B>(businessInterface, component, ref, binding, proxyFactory, compositeActivator);\n@@ -342,14 +346,17 @@ private ComponentReference createSelfReference(Component component,\n      */\n     private InterfaceContract getInterfaceContract(InterfaceContract interfaceContract, Class<?> businessInterface)\n         throws CloneNotSupportedException, InvalidInterfaceException {\n-        Interface interfaze = interfaceContract.getInterface();\n         boolean compatible = false;\n-        if (interfaze instanceof JavaInterface) {\n-            Class<?> cls = ((JavaInterface)interfaze).getJavaClass();\n-            if (businessInterface.isAssignableFrom(cls)) {\n-                compatible = true;\n+        if (interfaceContract != null && interfaceContract.getInterface() != null) {\n+            Interface interfaze = interfaceContract.getInterface();\n+            if (interfaze instanceof JavaInterface) {\n+                Class<?> cls = ((JavaInterface)interfaze).getJavaClass();\n+                if (businessInterface.isAssignableFrom(cls)) {\n+                    compatible = true;\n+                }\n             }\n         }\n+\n         if (!compatible) {\n             // The interface is not assignable from the interface contract\n             interfaceContract = javaInterfaceFactory.createJavaInterfaceContract();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/492f45daee76a561ac68e18735945441b19f8d09",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/7953b37e6075a8e2616f5d8411db41633336ed85",
        "message": "Protect against NPE when the InterfaceCOntract is also null\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@684646 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_10",
        "file": [
            {
                "sha": "6eb5f0d1e5bfbde64021838285b682cfe477e208",
                "filename": "modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/492f45daee76a561ac68e18735945441b19f8d09/modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/492f45daee76a561ac68e18735945441b19f8d09/modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java?ref=492f45daee76a561ac68e18735945441b19f8d09",
                "patch": "@@ -412,8 +412,14 @@ private RuntimeWire addReferenceWire(Component refComponent,\n \n         // Use the interface contract of the reference on the component type\n         Reference componentTypeRef = reference.getReference();\n-        InterfaceContract sourceContract =\n-            componentTypeRef == null ? reference.getInterfaceContract() : componentTypeRef.getInterfaceContract();\n+\n+        InterfaceContract sourceContract;\n+        if (componentTypeRef == null || componentTypeRef.getInterfaceContract() == null) {\n+            sourceContract = reference.getInterfaceContract();\n+        } else {\n+            sourceContract = componentTypeRef.getInterfaceContract();\n+        }\n+\n         sourceContract = sourceContract.makeUnidirectional(false);\n \n         EndpointReference wireSource ="
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/8b0b9063f605624219a4d618993de8a2198755a1",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/d71e2201c05444cba0cfd9d229b2679cccd7aabe",
        "message": "Fixed NPE when WebServiceBinding does not have a configured builder.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@676651 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_11",
        "file": [
            {
                "sha": "12ea86eac3882d5771fa9a6fb5c6902f95d0f82a",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/ComponentServiceBindingBuilderImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/8b0b9063f605624219a4d618993de8a2198755a1/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/ComponentServiceBindingBuilderImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/8b0b9063f605624219a4d618993de8a2198755a1/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/ComponentServiceBindingBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/ComponentServiceBindingBuilderImpl.java?ref=8b0b9063f605624219a4d618993de8a2198755a1",
                "patch": "@@ -25,6 +25,7 @@\n import org.apache.tuscany.sca.assembly.Composite;\n import org.apache.tuscany.sca.assembly.Implementation;\n import org.apache.tuscany.sca.assembly.Service;\n+import org.apache.tuscany.sca.assembly.builder.BindingBuilder;\n import org.apache.tuscany.sca.assembly.builder.BindingBuilderExtension;\n import org.apache.tuscany.sca.assembly.builder.CompositeBuilder;\n import org.apache.tuscany.sca.assembly.builder.CompositeBuilderException;\n@@ -62,7 +63,10 @@ private void buildServiceBindings(Composite composite) {\n             for (ComponentService componentService : component.getServices()) {\n                 for (Binding binding : componentService.getBindings()) {\n                     if (binding instanceof BindingBuilderExtension) {\n-                        ((BindingBuilderExtension)binding).getBuilder().build(component, componentService, binding, monitor);\n+                        BindingBuilder builder = ((BindingBuilderExtension)binding).getBuilder();\n+                        if (builder != null) {\n+                            builder.build(component, componentService, binding, monitor);\n+                        }\n                     }\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/910ffcfae02b7a7efdb231d24b709297176b7d16",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/bb887f4637eb992abbcc3766116adeaa00eacd9d",
        "message": "Fix NPE when the conversationID==null\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@671426 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_12",
        "file": [
            {
                "sha": "8a883f8e15d724866cf94adca412f53584ccb66f",
                "filename": "modules/core/src/main/java/org/apache/tuscany/sca/core/conversation/ConversationManagerImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/910ffcfae02b7a7efdb231d24b709297176b7d16/modules/core/src/main/java/org/apache/tuscany/sca/core/conversation/ConversationManagerImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/910ffcfae02b7a7efdb231d24b709297176b7d16/modules/core/src/main/java/org/apache/tuscany/sca/core/conversation/ConversationManagerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core/src/main/java/org/apache/tuscany/sca/core/conversation/ConversationManagerImpl.java?ref=910ffcfae02b7a7efdb231d24b709297176b7d16",
                "patch": "@@ -146,7 +146,8 @@ public void expireConversation(Object conversationID) {\n      * @see org.apache.tuscany.sca.core.conversation.ConversationManager#getConversation(java.lang.Object)\n      */\n     public ExtendedConversation getConversation(Object conversationID) {\n-        return conversations.get(conversationID);\n+        // ConcurrentHashMap cannot take null key\n+        return conversationID == null ? null : conversations.get(conversationID);\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/1e0c48a8de668a0b45f5d80a407880c5571f613c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/ab68b72486306736af79ab904fc3a7509db1e581",
        "message": "TUSCANY-2243: ServiceRuntimeException due to NPE with ComponentContext.getService()\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@667144 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_13",
        "file": [
            {
                "sha": "5f39638e5ce712497975939587343f9e8c80712b",
                "filename": "vtest/java-api/apis/componentcontext/src/test/java/org/apache/tuscany/sca/vtest/javaapi/apis/componentcontext/ComponentContextTestCase.java",
                "status": "modified",
                "additions": 2,
                "deletions": 4,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/1e0c48a8de668a0b45f5d80a407880c5571f613c/vtest/java-api/apis/componentcontext/src/test/java/org/apache/tuscany/sca/vtest/javaapi/apis/componentcontext/ComponentContextTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/1e0c48a8de668a0b45f5d80a407880c5571f613c/vtest/java-api/apis/componentcontext/src/test/java/org/apache/tuscany/sca/vtest/javaapi/apis/componentcontext/ComponentContextTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/vtest/java-api/apis/componentcontext/src/test/java/org/apache/tuscany/sca/vtest/javaapi/apis/componentcontext/ComponentContextTestCase.java?ref=1e0c48a8de668a0b45f5d80a407880c5571f613c",
                "patch": "@@ -137,14 +137,12 @@ public void testGetProperty() throws Exception {\n      * request, or null if there is no current request or if the context is\n      * unavailable.\n      * \n-     * @throws Exception TODO: fails for me so I've added\n-     * @Ignore\n+     * @throws Exception\n      */\n     @Test\n-    @Ignore\n     public void testGetRequestContext() throws Exception {\n         Assert.assertEquals(\"AComponent\", a.getRequestContextServiceName());\n-        Assert.assertEquals(\"Null\", a.getRequestContextContent());\n+        Assert.assertEquals(\"NotNull\", a.getRequestContextContent());\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/00e20221d051bb662784f0020510882a614fbe01",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/ea50a35519e8a87599b76ed2172cc0874c58ff40",
        "message": "Fix NPE when no ICF defined\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@666547 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_14",
        "file": [
            {
                "sha": "23a77d4a7382c4beaf6a106bb995034c42b0e88c",
                "filename": "modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/00e20221d051bb662784f0020510882a614fbe01/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/00e20221d051bb662784f0020510882a614fbe01/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java?ref=00e20221d051bb662784f0020510882a614fbe01",
                "patch": "@@ -136,7 +136,7 @@ private synchronized Context getInitialContext() throws NamingException {\n      * See: http://www-1.ibm.com/support/docview.wss?uid=swg24012804 \n      */\n     private void initJREEnvironment(Properties props) {\n-    \tif (props.get(Context.INITIAL_CONTEXT_FACTORY).equals(\"com.ibm.websphere.naming.WsnInitialContextFactory\")) {\n+    \tif (\"com.ibm.websphere.naming.WsnInitialContextFactory\".equals(props.get(Context.INITIAL_CONTEXT_FACTORY))) {\n         \tString vendor = System.getProperty(\"java.vendor\");\n     \t\tif (vendor == null || !vendor.contains(\"IBM\")) {\n             \tprops.setProperty(\"com.ibm.CORBA.ORBInit\",\"com.ibm.ws.sib.client.ORB\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/8a59e0e6f84df7544aa9297fc755c38d94f7cf9b",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/78a6df73d198d836f6524ce4082a6a8a3ac61a9c",
        "message": "Add NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@659652 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_15",
        "file": [
            {
                "sha": "32a2313f599664424b42b55a11d5cef45253ed2f",
                "filename": "modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/SimpleTypeMapperImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/8a59e0e6f84df7544aa9297fc755c38d94f7cf9b/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/SimpleTypeMapperImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/8a59e0e6f84df7544aa9297fc755c38d94f7cf9b/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/SimpleTypeMapperImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/SimpleTypeMapperImpl.java?ref=8a59e0e6f84df7544aa9297fc755c38d94f7cf9b",
                "patch": "@@ -230,7 +230,7 @@ public SimpleTypeMapperImpl() {\n     }\n \n     public static Class getJavaType(QName xmlType) {\n-        if (URI_2001_SCHEMA_XSD.equals(xmlType.getNamespaceURI())) {\n+         if (xmlType != null && URI_2001_SCHEMA_XSD.equals(xmlType.getNamespaceURI())) {\n             return XML2JAVA.get(xmlType.getLocalPart());\n         } else {\n             return null;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/ae6ed18d8c91e582f9a1073f3c09bdae22afdc5d",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/107ef0a7694f1b24562e50d8a9e3cdecc0f30e0c",
        "message": "Avoid NPE when the target op is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@651191 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_16",
        "file": [
            {
                "sha": "0d8051e183e6f90ecb5319050dd5dd1a3cb66732",
                "filename": "modules/interface/src/main/java/org/apache/tuscany/sca/interfacedef/impl/InterfaceContractMapperImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/ae6ed18d8c91e582f9a1073f3c09bdae22afdc5d/modules/interface/src/main/java/org/apache/tuscany/sca/interfacedef/impl/InterfaceContractMapperImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/ae6ed18d8c91e582f9a1073f3c09bdae22afdc5d/modules/interface/src/main/java/org/apache/tuscany/sca/interfacedef/impl/InterfaceContractMapperImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface/src/main/java/org/apache/tuscany/sca/interfacedef/impl/InterfaceContractMapperImpl.java?ref=ae6ed18d8c91e582f9a1073f3c09bdae22afdc5d",
                "patch": "@@ -280,7 +280,7 @@ public boolean isCompatible(InterfaceContract source, InterfaceContract target)\n      */\n     public Operation map(Interface target, Operation source) {\n         // TODO: How to handle the case that source operation is dynamic?\n-        if (target.isDynamic()) {\n+        if (target == null || target.isDynamic()) {\n             return source;\n         } else if (target.isRemotable()) {\n             for (Operation op : target.getOperations()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/31b2c75dc65d5ad0a2d34653d13822f9caa51398",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/d0fc16850c50c03764a35663a30917f2bb102d8e",
        "message": "Avoid NPE when operation or operation faultTypes are null\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@650879 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_17",
        "file": [
            {
                "sha": "8bd38c0968551bd0feefaddfc033e0b4ad4a4185",
                "filename": "modules/interface-java-jaxws/src/main/java/org/apache/tuscany/sca/interfacedef/java/jaxws/JAXWSJavaInterfaceProcessor.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/31b2c75dc65d5ad0a2d34653d13822f9caa51398/modules/interface-java-jaxws/src/main/java/org/apache/tuscany/sca/interfacedef/java/jaxws/JAXWSJavaInterfaceProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/31b2c75dc65d5ad0a2d34653d13822f9caa51398/modules/interface-java-jaxws/src/main/java/org/apache/tuscany/sca/interfacedef/java/jaxws/JAXWSJavaInterfaceProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-java-jaxws/src/main/java/org/apache/tuscany/sca/interfacedef/java/jaxws/JAXWSJavaInterfaceProcessor.java?ref=31b2c75dc65d5ad0a2d34653d13822f9caa51398",
                "patch": "@@ -210,8 +210,10 @@ public void visitInterface(JavaInterface contract) throws InvalidInterfaceExcept\n \n     @SuppressWarnings(\"unchecked\")\n     private void introspectFaultTypes(Operation operation) {\n-        for (DataType exceptionType : operation.getFaultTypes()) {\n-            faultExceptionMapper.introspectFaultDataType(exceptionType);\n+        if (operation!= null && operation.getFaultTypes() != null) {\n+            for (DataType exceptionType : operation.getFaultTypes()) {\n+                faultExceptionMapper.introspectFaultDataType(exceptionType);\n+            }\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/d0fc16850c50c03764a35663a30917f2bb102d8e",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/70f86fb840ed8159c42c17a912876fb0f595c620",
        "message": "Avoid NPE when interface is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@650862 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_18",
        "file": [
            {
                "sha": "f215c2178478504b8305f350498d6e7b30e48dfc",
                "filename": "modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ReferenceBindingProvider.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/d0fc16850c50c03764a35663a30917f2bb102d8e/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ReferenceBindingProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/d0fc16850c50c03764a35663a30917f2bb102d8e/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ReferenceBindingProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ReferenceBindingProvider.java?ref=d0fc16850c50c03764a35663a30917f2bb102d8e",
                "patch": "@@ -61,7 +61,7 @@ public Axis2ReferenceBindingProvider(RuntimeComponent component,\n         // TODO - fix up the conversational flag and operation sequences in case the contract has come from WSDL\n         // as we don't yet support requires=\"conversational\" or sca:endConversation annotations\n         // in WSDL interface descriptions (see section 1.5.4 of the Assembly Specification V1.0)\n-        if ( reference.getInterfaceContract().getInterface() != null ) {\n+        if ( reference.getInterfaceContract().getInterface() != null && contract.getInterface() != null) {\n             contract.getInterface().setConversational(reference.getInterfaceContract().getInterface().isConversational());\n     \n             for (Operation operation : contract.getInterface().getOperations()){\n@@ -81,7 +81,9 @@ public Axis2ReferenceBindingProvider(RuntimeComponent component,\n         }\n \n         // Set to use the Axiom data binding\n-        contract.getInterface().resetDataBinding(OMElement.class.getName());\n+        if (contract.getInterface() != null) {\n+            contract.getInterface().resetDataBinding(OMElement.class.getName());\n+        }\n \n         axisClient = new Axis2ServiceClient(component, reference, wsBinding, servletHost, messageFactory, policyHandlerClassnames);\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/2e3f12bd9221a4f0186c26a956cfb0f9d7e2a77b",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/0690407bbf52bd64100e22fa58c37092b7691277",
        "message": "Fix NPE after stop/restart of the binding.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@610596 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_19",
        "file": [
            {
                "sha": "f8f65f2ae38b28ea43d15762998056e53d66a5ac",
                "filename": "modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/AtomReferenceBindingProvider.java",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/2e3f12bd9221a4f0186c26a956cfb0f9d7e2a77b/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/AtomReferenceBindingProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/2e3f12bd9221a4f0186c26a956cfb0f9d7e2a77b/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/AtomReferenceBindingProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/AtomReferenceBindingProvider.java?ref=2e3f12bd9221a4f0186c26a956cfb0f9d7e2a77b",
                "patch": "@@ -54,7 +54,6 @@\n         // Prepare authorization header\n         String authorization = \"admin\" + \":\" + \"admin\";\n         authorizationHeader = \"Basic \" + new String(Base64.encodeBase64(authorization.getBytes()));\n-        ;\n \n         // Create an HTTP client\n         httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n@@ -100,7 +99,6 @@ public void start() {\n     }\n \n     public void stop() {\n-        httpClient = null;\n     }\n     \n     public boolean supportsOneWayInvocation() {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/03f86148f0ce20f05f1b7fdc1132da13bd72552d",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/4d8dd84d856b122da39a317e587e440b5f8dcf6f",
        "message": "add null guard to prevent NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@605042 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_20",
        "file": [
            {
                "sha": "6c46a54ee95967d87cb7f2e094e6ea3db442d458",
                "filename": "modules/core-databinding/src/main/java/org/apache/tuscany/sca/core/databinding/wire/PassByValueInterceptor.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/03f86148f0ce20f05f1b7fdc1132da13bd72552d/modules/core-databinding/src/main/java/org/apache/tuscany/sca/core/databinding/wire/PassByValueInterceptor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/03f86148f0ce20f05f1b7fdc1132da13bd72552d/modules/core-databinding/src/main/java/org/apache/tuscany/sca/core/databinding/wire/PassByValueInterceptor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core-databinding/src/main/java/org/apache/tuscany/sca/core/databinding/wire/PassByValueInterceptor.java?ref=03f86148f0ce20f05f1b7fdc1132da13bd72552d",
                "patch": "@@ -76,7 +76,9 @@ public Message invoke(Message msg) {\n                     String dataBindingId = operation.getInputType().getLogical().get(i).getDataBinding();\n                     DataBinding dataBinding = dataBindings.getDataBinding(dataBindingId);\n                     // HACK: Use JAXB to copy non-Serializable beans\n-                    if (JavaBeansDataBinding.NAME.equals(dataBinding.getName()) && !(args[i] instanceof Serializable)) {\n+                    if (dataBinding != null &&\n+                        JavaBeansDataBinding.NAME.equals(dataBinding.getName()) &&\n+                        !(args[i] instanceof Serializable)) {\n                         dataBinding = dataBindings.getDataBinding(JAXBDataBinding.NAME);\n                     }\n                     copiedArg = copy(args[i], dataBinding);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/cfc3398b76a3224acc7973ece42e70ef2c535c8b",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/21dca956fc1e4653f22d9e251d30a5061d75ab30",
        "message": "Avoid NPE if the vertex cannot be found\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@599614 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_21",
        "file": [
            {
                "sha": "e5ee6796b987ac7d7bc149416cea34e56e0750f3",
                "filename": "modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/cfc3398b76a3224acc7973ece42e70ef2c535c8b/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/cfc3398b76a3224acc7973ece42e70ef2c535c8b/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java?ref=cfc3398b76a3224acc7973ece42e70ef2c535c8b",
                "patch": "@@ -216,6 +216,14 @@ public Edge getEdge(Vertex source, Vertex target) {\n     }\n \n     public Edge getEdge(V source, V target) {\n+        Vertex sv = getVertex(source);\n+        if (sv == null) {\n+            return null;\n+        }\n+        Vertex tv = getVertex(target);\n+        if (tv == null) {\n+            return null;\n+        }\n         return getEdge(getVertex(source), getVertex(target));\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/6391aaca5bc2b037b1f052dee5807abb03822020",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/5375677c21d0abe8105dcf09753b518b7d0bf66b",
        "message": "Prvent NPE when there is no domain\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@589987 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_22",
        "file": [
            {
                "sha": "d0bbf6f9dbd3b4cbdfbbb838be7c7489d06b5df9",
                "filename": "modules/node-impl/src/main/java/org/apache/tuscany/sca/node/impl/SCADomainProxyImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6391aaca5bc2b037b1f052dee5807abb03822020/modules/node-impl/src/main/java/org/apache/tuscany/sca/node/impl/SCADomainProxyImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6391aaca5bc2b037b1f052dee5807abb03822020/modules/node-impl/src/main/java/org/apache/tuscany/sca/node/impl/SCADomainProxyImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/node-impl/src/main/java/org/apache/tuscany/sca/node/impl/SCADomainProxyImpl.java?ref=6391aaca5bc2b037b1f052dee5807abb03822020",
                "patch": "@@ -244,7 +244,9 @@ public void removeNode(SCANode nodeImpl) throws DomainException {\n     }  \n     \n     public void registerContribution(String nodeURI, String contributionURI, String contributionURL){\n-        domainManager.registerContribution(nodeURI, contributionURI, contributionURL);\n+        if (domainManager != null) {\n+            domainManager.registerContribution(nodeURI, contributionURI, contributionURL);\n+        }\n     }\n     \n     public void unregisterContribution(String contributionURI){"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/810b2401c1480811b31d7c502fd6f5f2ef48cc64",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/272ee2cb4c01200479a4cfc1bfc385e130c98a5c",
        "message": "WORKAROUND: Properly init the XMLSchemaCollection to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@581976 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_23",
        "file": [
            {
                "sha": "ebc0f753df12ae8ea9039b083dd36f4793b4a35a",
                "filename": "modules/interface-wsdl/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/impl/XSDefinitionImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/810b2401c1480811b31d7c502fd6f5f2ef48cc64/modules/interface-wsdl/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/impl/XSDefinitionImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/810b2401c1480811b31d7c502fd6f5f2ef48cc64/modules/interface-wsdl/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/impl/XSDefinitionImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-wsdl/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/impl/XSDefinitionImpl.java?ref=810b2401c1480811b31d7c502fd6f5f2ef48cc64",
                "patch": "@@ -32,7 +32,7 @@\n  * @version $Rev$ $Date$\n  */\n public class XSDefinitionImpl implements XSDefinition {\n-    private XmlSchemaCollection schemaCollection;\n+    private XmlSchemaCollection schemaCollection = new XmlSchemaCollection();\n     private XmlSchema schema;\n     private String namespace;\n     private URI location;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/35977f3403a965664c125464bd70b4dcf48fc77f",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/570710420fca0b58f188604260e00bd82afc3de2",
        "message": "Workaround for NPE in binding-echo-extension\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@575419 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_24",
        "file": [
            {
                "sha": "be082e36e29ef09a6e3b7c2762f45d81e5a13060",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeWireBuilderImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/35977f3403a965664c125464bd70b4dcf48fc77f/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeWireBuilderImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/35977f3403a965664c125464bd70b4dcf48fc77f/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeWireBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeWireBuilderImpl.java?ref=35977f3403a965664c125464bd70b4dcf48fc77f",
                "patch": "@@ -1103,7 +1103,7 @@ private boolean isPolicySetApplicable(Base parent,\n                                           IntentAttachPointType bindingType) {\n         \n         //FIXME: For now do a simple check and later implement whatever is mentioned in the next comment\n-       if ( xpath != null && xpath.indexOf(bindingType.getName().getLocalPart()) != -1) {\n+       if ( xpath != null && bindingType != null && xpath.indexOf(bindingType.getName().getLocalPart()) != -1) {\n            return true;\n        } else {\n            return false;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/c3107028b9c751eab39cda39d333f2adc1c7a945",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/65094489597f5a1d8100bcc02b2a23cd10cb5fc1",
        "message": "Fix NPE when clazz not resolved\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@561293 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_25",
        "file": [
            {
                "sha": "4397e068502c1d6e4a7d301a64d9f1c39f3d1f04",
                "filename": "modules/databinding-sdo/src/main/java/org/apache/tuscany/sca/databinding/sdo/ImportSDOPostProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/c3107028b9c751eab39cda39d333f2adc1c7a945/modules/databinding-sdo/src/main/java/org/apache/tuscany/sca/databinding/sdo/ImportSDOPostProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/c3107028b9c751eab39cda39d333f2adc1c7a945/modules/databinding-sdo/src/main/java/org/apache/tuscany/sca/databinding/sdo/ImportSDOPostProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/databinding-sdo/src/main/java/org/apache/tuscany/sca/databinding/sdo/ImportSDOPostProcessor.java?ref=c3107028b9c751eab39cda39d333f2adc1c7a945",
                "patch": "@@ -56,7 +56,7 @@ public void visit(Contribution contribution) {\n                 String factoryName = getFactoryClassName(artifactURI);\r\n                 ClassReference clazz = new ClassReference(factoryName);\r\n                 clazz = contribution.getModelResolver().resolveModel(ClassReference.class, clazz);\r\n-                if (clazz.getClass() != null) {\r\n+                if (clazz.getJavaClass() != null) {\r\n                     try {\r\n                         //check if it's a SDO factory by introspecting INSTANCE field\r\n                         if (isSDOFactory(clazz.getJavaClass())) {\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/c0514bbc5d37b5e3258e8659e7066bce67092dea",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/8b7c114de05664498937662750c877e16f00da4f",
        "message": "Fixing NPE during server shutdown\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@540706 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_26",
        "file": [
            {
                "sha": "b5daa025188e92c830558ed0e0b7d6aa63d75b5c",
                "filename": "modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxModuleActivator.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/c0514bbc5d37b5e3258e8659e7066bce67092dea/modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxModuleActivator.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/c0514bbc5d37b5e3258e8659e7066bce67092dea/modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxModuleActivator.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxModuleActivator.java?ref=c0514bbc5d37b5e3258e8659e7066bce67092dea",
                "patch": "@@ -20,7 +20,6 @@\n package org.apache.tuscany.sca.binding.ajax;\n \n import org.apache.tuscany.sca.assembly.Binding;\n-import org.apache.tuscany.sca.contribution.processor.StAXArtifactProcessor;\n import org.apache.tuscany.sca.contribution.processor.StAXArtifactProcessorExtensionPoint;\n import org.apache.tuscany.sca.core.ExtensionPointRegistry;\n import org.apache.tuscany.sca.core.ModuleActivator;\n@@ -38,12 +37,14 @@\n  * ajax service and reference providers with the Tuscany runtime.\n  */\n public class AjaxModuleActivator implements ModuleActivator {\n+    AjaxBindingSCDLProcessor ajaxBindingProcessor;\n \n     public void start(ExtensionPointRegistry registry) {\n-\n+        ajaxBindingProcessor =  new AjaxBindingSCDLProcessor(); \n+        \n         // Add the ajax binding SCDL processor to the runtime\n         StAXArtifactProcessorExtensionPoint staxProcessors = registry.getExtensionPoint(StAXArtifactProcessorExtensionPoint.class);\n-        staxProcessors.addArtifactProcessor(new AjaxBindingSCDLProcessor());\n+        staxProcessors.addArtifactProcessor(ajaxBindingProcessor);\n \n         final ServletHost servletHost = registry.getExtensionPoint(ServletHost.class);\n         \n@@ -65,7 +66,9 @@ public Class getModelType() {\n     public void stop(ExtensionPointRegistry registry) {\n         // Remove the ajax binding SCDL processor from the runtime\n         StAXArtifactProcessorExtensionPoint staxProcessors = registry.getExtensionPoint(StAXArtifactProcessorExtensionPoint.class);\n-        staxProcessors.removeArtifactProcessor((StAXArtifactProcessor)staxProcessors.getProcessor(AjaxBindingSCDLProcessor.class));\n+        if ( staxProcessors != null) {\n+            staxProcessors.removeArtifactProcessor(ajaxBindingProcessor);\n+        }\n \n         // Remove the ajax provider factory from the runtime\n         ProviderFactoryExtensionPoint providerFactories = registry.getExtensionPoint(ProviderFactoryExtensionPoint.class);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/854f17b2247f03eb86f88b13f6d1169ee37ff592",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/a3b9cf898d605ff0584fbb349bb2fd8ee42b10c7",
        "message": "Avoid NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@535971 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_27",
        "file": [
            {
                "sha": "a6e333461785e85ef8ecae0c60e0d95d723f7bea",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/DefaultCompositeBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/854f17b2247f03eb86f88b13f6d1169ee37ff592/modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/DefaultCompositeBuilder.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/854f17b2247f03eb86f88b13f6d1169ee37ff592/modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/DefaultCompositeBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/DefaultCompositeBuilder.java?ref=854f17b2247f03eb86f88b13f6d1169ee37ff592",
                "patch": "@@ -716,7 +716,8 @@ private void connectCompositeReferences(Composite composite,\n             for (int i = 0, n = promotedReferences.size(); i < n; i++) {\n                 ComponentReference componentReference = promotedReferences.get(i);\n                 if (componentReference.isUnresolved()) {\n-                    componentReference = componentReferences.get(componentReference.getName());\n+                    String componentReferenceName = componentReference.getName();\n+                    componentReference = componentReferences.get(componentReferenceName);\n                     if (componentReference != null) {\n \n                         // Point to the resolved component reference\n@@ -731,7 +732,7 @@ private void connectCompositeReferences(Composite composite,\n                         }\n \n                     } else {\n-                        warning(\"Promoted component reference not found: \" + componentReference.getName(), composite);\n+                        warning(\"Promoted component reference not found: \" + componentReferenceName, composite);\n                     }\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/aa4dd845621679620dde0f102234ca51c60085d9",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/f7eaf4e10bff64e7f1036f2ac3529266f495c50f",
        "message": "Fix for NPE on bad componentName and new test\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@535374 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_28",
        "file": [
            {
                "sha": "70b26bb41843a0e279a97cc85792bbe3c083ea31",
                "filename": "itest/extended-api/src/test/java/org/apache/tuscany/sca/test/extended/ServiceLocateTestCase.java",
                "status": "modified",
                "additions": 3,
                "deletions": 10,
                "changes": 13,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/aa4dd845621679620dde0f102234ca51c60085d9/itest/extended-api/src/test/java/org/apache/tuscany/sca/test/extended/ServiceLocateTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/aa4dd845621679620dde0f102234ca51c60085d9/itest/extended-api/src/test/java/org/apache/tuscany/sca/test/extended/ServiceLocateTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/extended-api/src/test/java/org/apache/tuscany/sca/test/extended/ServiceLocateTestCase.java?ref=aa4dd845621679620dde0f102234ca51c60085d9",
                "patch": "@@ -36,7 +36,7 @@ public void unmanagedLocateService() {\n         assertEquals(-99, service.negate(99));\n \n     }\n-    \n+\n     @Test\n     public void managedLocateService() {\n \n@@ -46,20 +46,13 @@ public void managedLocateService() {\n \n     }\n \n-    @Ignore\n-    @Test\n+    @Test(expected = IllegalArgumentException.class)\n     public void badComponentName() {\n \n-        BasicService service = SCARuntimeActivator.locateService(BasicService.class, \"IvalidComponentName\");\n-\n-        assertEquals(-99, service.delegateNegate(99));\n+        SCARuntimeActivator.locateService(BasicService.class, \"IvalidComponentName\");\n \n     }\n \n-    \n-    \n-    \n-    \n     @Before\n     public void init() throws Exception {\n "
            },
            {
                "sha": "b1842ed95b32f26c53ed2e40d6a470cc06a83286",
                "filename": "modules/core/src/main/java/org/apache/tuscany/core/runtime/RuntimeActivatorImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/aa4dd845621679620dde0f102234ca51c60085d9/modules/core/src/main/java/org/apache/tuscany/core/runtime/RuntimeActivatorImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/aa4dd845621679620dde0f102234ca51c60085d9/modules/core/src/main/java/org/apache/tuscany/core/runtime/RuntimeActivatorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core/src/main/java/org/apache/tuscany/core/runtime/RuntimeActivatorImpl.java?ref=aa4dd845621679620dde0f102234ca51c60085d9",
                "patch": "@@ -272,7 +272,7 @@ public ComponentContext getComponentContext(String componentName) {\n                 return (ComponentContext)component;\n             }\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"ComponentContext for component named: \" + componentName + \" not found in this domain\");\n     }\n \n     public void start(Contribution contribution) throws ActivationException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/0e6d8a134b2d4f151649c064ffe64e8e104c77d7",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/4ff2bf3d42e5c061f87140e087f6de7b5a669ef7",
        "message": "Test if a property is readable to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@535095 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_29",
        "file": [
            {
                "sha": "55e1a010d73507aaf55c0451d17c26c07da1e48c",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/assembly/util/PrintUtil.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/0e6d8a134b2d4f151649c064ffe64e8e104c77d7/modules/assembly/src/main/java/org/apache/tuscany/assembly/util/PrintUtil.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/0e6d8a134b2d4f151649c064ffe64e8e104c77d7/modules/assembly/src/main/java/org/apache/tuscany/assembly/util/PrintUtil.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/assembly/util/PrintUtil.java?ref=0e6d8a134b2d4f151649c064ffe64e8e104c77d7",
                "patch": "@@ -25,6 +25,7 @@\n import java.io.OutputStream;\n import java.io.OutputStreamWriter;\n import java.io.PrintWriter;\n+import java.lang.reflect.Method;\n import java.util.Arrays;\n import java.util.HashSet;\n import java.util.List;\n@@ -78,7 +79,11 @@ public void print(Object object) {\n                     try {\n \n                         // Get the value of each property\n-                        Object value = propertyDescriptor.getReadMethod().invoke(object);\n+                        Method getter = propertyDescriptor.getReadMethod();\n+                        if (getter == null) {\n+                            continue;\n+                        }\n+                        Object value = getter.invoke(object);\n                         if (value != null) {\n \n                             // Convert array value into a list"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/700bfbbc1c3b92cf6fbacfe67840ce019ab99626",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/3dbdc87ece53570858ec31633bc29366d9a281e8",
        "message": "Axis2 binding, avoid NPE when port is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@529201 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_30",
        "file": [
            {
                "sha": "6795f7523a59152d6e9181522e119e845c37288b",
                "filename": "modules/binding-ws-axis2/src/main/java/org/apache/tuscany/binding/axis2/util/WebServicePortMetaData.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/700bfbbc1c3b92cf6fbacfe67840ce019ab99626/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/binding/axis2/util/WebServicePortMetaData.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/700bfbbc1c3b92cf6fbacfe67840ce019ab99626/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/binding/axis2/util/WebServicePortMetaData.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/binding/axis2/util/WebServicePortMetaData.java?ref=700bfbbc1c3b92cf6fbacfe67840ce019ab99626",
                "patch": "@@ -60,7 +60,9 @@ public WebServicePortMetaData(Definition wsdlDefinition, Port wsdlPort, String e\n \n         // Lookup the named port\n         this.wsdlPort = wsdlPort;\n-        wsdlPortName = new QName(wsdlDefinition.getTargetNamespace(), wsdlPort.getName());\n+        if (wsdlPort != null) {\n+            wsdlPortName = new QName(wsdlDefinition.getTargetNamespace(), wsdlPort.getName());\n+        }\n         Collection services = wsdlDefinition.getServices().values();\n         for (Object serviceObj : services) {\n             Service service = (Service) serviceObj;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/3ad83ffeeb3fa2d5fee796429d552bd9ba9d0692",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/529e872eb5d3a8c305bbdd5dfcd97377936ae8d8",
        "message": "Fix NPE in the test case failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@528730 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_31",
        "file": [
            {
                "sha": "3a5f93d5a92d7ef2954f92318839abe5f5c2c57b",
                "filename": "modules/core/src/test/java/org/apache/tuscany/core/wire/WireUtilsTestCase.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/3ad83ffeeb3fa2d5fee796429d552bd9ba9d0692/modules/core/src/test/java/org/apache/tuscany/core/wire/WireUtilsTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/3ad83ffeeb3fa2d5fee796429d552bd9ba9d0692/modules/core/src/test/java/org/apache/tuscany/core/wire/WireUtilsTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core/src/test/java/org/apache/tuscany/core/wire/WireUtilsTestCase.java?ref=3ad83ffeeb3fa2d5fee796429d552bd9ba9d0692",
                "patch": "@@ -25,6 +25,7 @@\n \n import org.apache.tuscany.interfacedef.Operation;\n import org.apache.tuscany.interfacedef.impl.OperationImpl;\n+import org.apache.tuscany.interfacedef.java.impl.JavaInterfaceImpl;\n import org.apache.tuscany.spi.wire.ChainHolder;\n import org.apache.tuscany.spi.wire.InvocationChain;\n import org.apache.tuscany.spi.wire.Wire;\n@@ -39,6 +40,7 @@ public void testCreateInterfaceToWireMapping() throws Exception {\n         Wire wire = new WireImpl();\n         Operation op = new OperationImpl();\n         op.setName(\"hello\");\n+        op.setInterface(new JavaInterfaceImpl());\n         InvocationChain chain = new InvocationChainImpl(op);\n         wire.addInvocationChain(chain);\n         Map<Method, ChainHolder> chains = WireUtils.createInterfaceToWireMapping(Foo.class, wire);\n@@ -50,6 +52,7 @@ public void testCreateInterfaceToWireMappingNoOperation() throws Exception {\n         Wire wire = new WireImpl();\n         Operation op = new OperationImpl();\n         op.setName(\"goodbye\");\n+        op.setInterface(new JavaInterfaceImpl());\n         InvocationChain chain = new InvocationChainImpl(op);\n         wire.addInvocationChain(chain);\n         try {"
            },
            {
                "sha": "8c701bec4fc07745c9c7ba241f7eb62d78087047",
                "filename": "modules/interface-java/src/main/java/org/apache/tuscany/interfacedef/java/impl/JavaInterfaceUtil.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/3ad83ffeeb3fa2d5fee796429d552bd9ba9d0692/modules/interface-java/src/main/java/org/apache/tuscany/interfacedef/java/impl/JavaInterfaceUtil.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/3ad83ffeeb3fa2d5fee796429d552bd9ba9d0692/modules/interface-java/src/main/java/org/apache/tuscany/interfacedef/java/impl/JavaInterfaceUtil.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-java/src/main/java/org/apache/tuscany/interfacedef/java/impl/JavaInterfaceUtil.java?ref=3ad83ffeeb3fa2d5fee796429d552bd9ba9d0692",
                "patch": "@@ -24,6 +24,7 @@\n import java.util.List;\n \n import org.apache.tuscany.interfacedef.DataType;\n+import org.apache.tuscany.interfacedef.Interface;\n import org.apache.tuscany.interfacedef.Operation;\n \n /**\n@@ -49,7 +50,8 @@ private JavaInterfaceUtil() {\n      */\n     public static  Method findMethod(Class<?> implClass, Operation operation) throws NoSuchMethodException {\n         String name = operation.getName();\n-        if(operation.getInterface().isRemotable()) {\n+        Interface interface1 = operation.getInterface();\n+        if(interface1!=null && interface1.isRemotable()) {\n             for(Method m: implClass.getMethods()) {\n                 if(m.getName().equals(name)) {\n                     return m;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/531915b653015161a923dd91bd90362523429218",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/a0f2b9f6880e6f7a7a3664458bd0e104fcec6af9",
        "message": "Fixing NPE when model object is not available\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@526619 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_32",
        "file": [
            {
                "sha": "3555a6a04ee7ccd9bbf407538a00c4784edabcb6",
                "filename": "modules/contribution-impl/src/main/java/org/apache/tuscany/services/contribution/ContributionServiceImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/531915b653015161a923dd91bd90362523429218/modules/contribution-impl/src/main/java/org/apache/tuscany/services/contribution/ContributionServiceImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/531915b653015161a923dd91bd90362523429218/modules/contribution-impl/src/main/java/org/apache/tuscany/services/contribution/ContributionServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/contribution-impl/src/main/java/org/apache/tuscany/services/contribution/ContributionServiceImpl.java?ref=531915b653015161a923dd91bd90362523429218",
                "patch": "@@ -284,7 +284,9 @@ private void processResolvePhase(Contribution contribution) throws ContributionE\n         // for each artifact that was processed on the contribution\n         for (DeployedArtifact artifact : contribution.getArtifacts().values()) {\n             // resolve the model object\n-           this.artifactProcessor.resolve(artifact.getModelObject(), artifactResolver);\n+            if (artifact.getModelObject() != null) {\n+                this.artifactProcessor.resolve(artifact.getModelObject(), artifactResolver);\n+            }\n         }\n \n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/e90d6581def68234bde787075bf15d773e331543",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/5af45404643bde439e333e71e818f00262dcc1f5",
        "message": "avoid NPE \n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@519863 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_33",
        "file": [
            {
                "sha": "4a41a891ea21ef491cd1e1a5c8adeea54cfe1d54",
                "filename": "kernel/core/src/main/java/org/apache/tuscany/core/implementation/java/JavaPhysicalComponentGenerator.java",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e90d6581def68234bde787075bf15d773e331543/kernel/core/src/main/java/org/apache/tuscany/core/implementation/java/JavaPhysicalComponentGenerator.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e90d6581def68234bde787075bf15d773e331543/kernel/core/src/main/java/org/apache/tuscany/core/implementation/java/JavaPhysicalComponentGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/kernel/core/src/main/java/org/apache/tuscany/core/implementation/java/JavaPhysicalComponentGenerator.java?ref=e90d6581def68234bde787075bf15d773e331543",
                "patch": "@@ -71,8 +71,14 @@ public void generate(ComponentDefinition<JavaImplementation> definition, Generat\n         pDefinition.setScope(type.getImplementationScope());\n         // TODO get classloader id\n         ReflectiveIFProviderDefinition provider = new ReflectiveIFProviderDefinition();\n-        provider.setDestroyMethod(type.getDestroyMethod().toString());\n-        provider.setInitMethod(type.getInitMethod().toString());\n+        Method destroyMethod = type.getDestroyMethod();\n+        if (destroyMethod != null) {\n+            provider.setDestroyMethod(destroyMethod.toString());\n+        }\n+        Method initMethod = type.getInitMethod();\n+        if (initMethod != null) {\n+            provider.setInitMethod(initMethod.toString());\n+        }\n         provider.setImplementationClass(implementation.getImplementationClass().getName());\n         // TODO ctor arguments\n         // TODO set CDI source for ref, props, and callbacks"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/7c051bc6eb929f97991e27de6401be00809a47f3",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/2890893fcc12b6740794fb4f5cfff333545f3220",
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@510840 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_34",
        "file": [
            {
                "sha": "1e5792e277c61cbaa3e32f42887dd2942b5dc720",
                "filename": "kernel/core/src/main/java/org/apache/tuscany/core/resolver/DefaultAutowireResolver.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/7c051bc6eb929f97991e27de6401be00809a47f3/kernel/core/src/main/java/org/apache/tuscany/core/resolver/DefaultAutowireResolver.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/7c051bc6eb929f97991e27de6401be00809a47f3/kernel/core/src/main/java/org/apache/tuscany/core/resolver/DefaultAutowireResolver.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/kernel/core/src/main/java/org/apache/tuscany/core/resolver/DefaultAutowireResolver.java?ref=7c051bc6eb929f97991e27de6401be00809a47f3",
                "patch": "@@ -115,6 +115,9 @@ private void resolve(CompositeComponentType<?, ?, ?> compositeType,\n             ComponentType<?, ?, ?> candidateType = candidateImpl.getComponentType();\n             for (ServiceDefinition service : candidateType.getServices().values()) {\n                 Class<?> serviceInterface = service.getServiceContract().getInterfaceClass();\n+                if (serviceInterface == null){\n+                    continue;\n+                }\n                 if (requiredInterface.equals(serviceInterface)) {\n                     targetUri = URI.create(candidate.getUri().toString() + service.getUri());\n                     break;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/a5b411d608fe8b03c5c5c77561ca93fa6ea8f3c9",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/22c539136de454469e19e138eadd0e4b6203ed8f",
        "message": "Fix the NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@453291 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_35",
        "file": [
            {
                "sha": "ff578ab1d3673347e3127aed8d3fa5b01fac4719",
                "filename": "kernel/spi/src/main/java/org/apache/tuscany/spi/databinding/extension/DataBindingExtension.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/a5b411d608fe8b03c5c5c77561ca93fa6ea8f3c9/kernel/spi/src/main/java/org/apache/tuscany/spi/databinding/extension/DataBindingExtension.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/a5b411d608fe8b03c5c5c77561ca93fa6ea8f3c9/kernel/spi/src/main/java/org/apache/tuscany/spi/databinding/extension/DataBindingExtension.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/kernel/spi/src/main/java/org/apache/tuscany/spi/databinding/extension/DataBindingExtension.java?ref=a5b411d608fe8b03c5c5c77561ca93fa6ea8f3c9",
                "patch": "@@ -72,6 +72,9 @@ public void init() {\n     }\n \n     public DataType introspect(Class<?> javaType) {\n+        if (baseType == null || javaType == null) {\n+            return null;\n+        }\n         if (baseType.isAssignableFrom(javaType)) {\n             return new DataType<Class>(name, javaType, baseType);\n         } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/f25e36bdebd1035f52599125cd2f12b1b1d7822d",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/9bf3be93f7549b5d6f9d61f539e0500a439e1149",
        "message": "avoid npe if request ends with no session\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@453060 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_36",
        "file": [
            {
                "sha": "0da3f20b22aa37a26fc7305bf3240e42e4a8adc4",
                "filename": "runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyRequestListener.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f25e36bdebd1035f52599125cd2f12b1b1d7822d/runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyRequestListener.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f25e36bdebd1035f52599125cd2f12b1b1d7822d/runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyRequestListener.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyRequestListener.java?ref=f25e36bdebd1035f52599125cd2f12b1b1d7822d",
                "patch": "@@ -44,7 +44,7 @@ public void requestDestroyed(ServletRequestEvent servletRequestEvent) {\n         if (servletRequest instanceof HttpServletRequest) {\r\n             HttpServletRequest httpServletRequest = (HttpServletRequest) servletRequest;\r\n             HttpSession session = httpServletRequest.getSession(false);\r\n-            runtime.httpRequestEnded(session.getId());\r\n+            runtime.httpRequestEnded(session == null ? null : session.getId());\r\n \r\n         }\r\n \r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/61a7ba49f6d0fa95c8d04b1189aad853665f65bf",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/154e71117608cbf8c80cb94f605ef2296d044e4a",
        "message": "Fix the NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@452225 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_37",
        "file": [
            {
                "sha": "93aec79bfda936753ebccdfda879cc5b9b0c405a",
                "filename": "kernel/spi/src/main/java/org/apache/tuscany/spi/extension/CompositeComponentExtension.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/61a7ba49f6d0fa95c8d04b1189aad853665f65bf/kernel/spi/src/main/java/org/apache/tuscany/spi/extension/CompositeComponentExtension.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/61a7ba49f6d0fa95c8d04b1189aad853665f65bf/kernel/spi/src/main/java/org/apache/tuscany/spi/extension/CompositeComponentExtension.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/kernel/spi/src/main/java/org/apache/tuscany/spi/extension/CompositeComponentExtension.java?ref=61a7ba49f6d0fa95c8d04b1189aad853665f65bf",
                "patch": "@@ -353,7 +353,7 @@ public Object getSystemServiceInstance(String name) throws TargetException {\n                     return instanceInterface.cast(this);\n                 }\n                 // resolve to parent\n-                if (parent == null) {\n+                if (getParent() == null) {\n                     return null;\n                 }\n                 return getParent().resolveInstance(instanceInterface);\n@@ -387,7 +387,11 @@ public Object getSystemServiceInstance(String name) throws TargetException {\n         } else {\n             try {\n                 // resolve to parent\n-                return getParent().resolveSystemInstance(instanceInterface);\n+                if (getParent() != null) {\n+                    return getParent().resolveSystemInstance(instanceInterface);\n+                } else {\n+                    return null;\n+                }\n             } catch (AutowireResolutionException e) {\n                 e.addContextName(getName());\n                 throw e;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/9fbce1c3f4c27eac8b2032cc02ba7b04a685696d",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/e99c368d17c30cf4a6937dcd1d5b66a4f79e6f1e",
        "message": "Workaround the NPE if the service contract is WSDL\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@441718 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_38",
        "file": [
            {
                "sha": "c17f1cdf0fdae43ddae3fe788b98f8327c3604f2",
                "filename": "kernel/core/src/main/java/org/apache/tuscany/core/implementation/composite/AbstractCompositeComponent.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9fbce1c3f4c27eac8b2032cc02ba7b04a685696d/kernel/core/src/main/java/org/apache/tuscany/core/implementation/composite/AbstractCompositeComponent.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9fbce1c3f4c27eac8b2032cc02ba7b04a685696d/kernel/core/src/main/java/org/apache/tuscany/core/implementation/composite/AbstractCompositeComponent.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/kernel/core/src/main/java/org/apache/tuscany/core/implementation/composite/AbstractCompositeComponent.java?ref=9fbce1c3f4c27eac8b2032cc02ba7b04a685696d",
                "patch": "@@ -255,7 +255,11 @@ protected void registerAutowireExternal(Class<?> interfaze, SystemService contex\n     }\n \n     protected void registerAutowireInternal(Class<?> interfaze, SCAObject context) {\n-        assert interfaze != null : \"Interface was null\";\n+        // assert interfaze != null : \"Interface was null\";\n+        if (interfaze == null) {\n+            // The ServiceContract is not from Java\n+            return;\n+        }\n         if (autowireInternal.containsKey(interfaze)) {\n             return;\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/17276882fabeb9e9a8c3967d45efe9a7fb246ac3",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/eda8c6c84e7da8ed71d574cb6b268834ff71997c",
        "message": "Fixed NPE in tomcat listener when stopping the server\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@383009 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_39",
        "file": [
            {
                "sha": "04977dbc27d076ada9843ceca1c083ce08a25717",
                "filename": "tomcat/src/main/java/org/apache/tuscany/tomcat/TuscanyContextListener.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/17276882fabeb9e9a8c3967d45efe9a7fb246ac3/tomcat/src/main/java/org/apache/tuscany/tomcat/TuscanyContextListener.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/17276882fabeb9e9a8c3967d45efe9a7fb246ac3/tomcat/src/main/java/org/apache/tuscany/tomcat/TuscanyContextListener.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/tomcat/src/main/java/org/apache/tuscany/tomcat/TuscanyContextListener.java?ref=17276882fabeb9e9a8c3967d45efe9a7fb246ac3",
                "patch": "@@ -121,7 +121,9 @@ private void startContext(Context ctx) {\n     }\n \n     private void stopContext(Context ctx) {\n-        moduleContext.fireEvent(EventContext.MODULE_START, null);\n+        if (moduleContext!=null) {\n+            moduleContext.fireEvent(EventContext.MODULE_START, null);\n+        }\n         // todo unload module component from runtime\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/3db386e8736494c73f367be5bd6f2c5fdebb8173",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/2d853024e43377e55aa526d0ca9fb610559769f8",
        "message": "NPE fix in samples due to JDKProxyFactory changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@376224 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_40",
        "file": [
            {
                "sha": "f6d984880789806b6b919c7c60a8186f55902755",
                "filename": "container.java/src/main/java/org/apache/tuscany/container/java/handler/ScopedJavaComponentInvoker.java",
                "status": "modified",
                "additions": 20,
                "deletions": 1,
                "changes": 21,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/3db386e8736494c73f367be5bd6f2c5fdebb8173/container.java/src/main/java/org/apache/tuscany/container/java/handler/ScopedJavaComponentInvoker.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/3db386e8736494c73f367be5bd6f2c5fdebb8173/container.java/src/main/java/org/apache/tuscany/container/java/handler/ScopedJavaComponentInvoker.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/container.java/src/main/java/org/apache/tuscany/container/java/handler/ScopedJavaComponentInvoker.java?ref=3db386e8736494c73f367be5bd6f2c5fdebb8173",
                "patch": "@@ -33,6 +33,8 @@\n \n     private QualifiedName name;\n \n+    private Object target;\n+\n     public ScopedJavaComponentInvoker(String serviceName, Method operation, ScopeContext container) {\n         super(operation);\n         assert (serviceName != null) : \"No service name specified\";\n@@ -41,8 +43,25 @@ public ScopedJavaComponentInvoker(String serviceName, Method operation, ScopeCon\n         this.container = container;\n     }\n \n+    public boolean cacheable;\n+\n+    public boolean getCacheable() {\n+        return cacheable;\n+    }\n+\n+    public void setCacheable(boolean val) {\n+        cacheable = val;\n+    }\n+\n     protected Object getInstance() throws TargetException {\n-        return container.getInstance(name);\n+        if (!cacheable) {\n+            return container.getInstance(name);\n+        } else {\n+            if (target == null) {\n+                target = container.getInstance(name);\n+            }\n+            return target;\n+        }\n     }\n \n }"
            },
            {
                "sha": "7c2ef2ce64e5e52cd82944675f85301835686083",
                "filename": "core/src/main/java/org/apache/tuscany/core/builder/impl/PortRuntimeConfigurationBuilderImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/3db386e8736494c73f367be5bd6f2c5fdebb8173/core/src/main/java/org/apache/tuscany/core/builder/impl/PortRuntimeConfigurationBuilderImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/3db386e8736494c73f367be5bd6f2c5fdebb8173/core/src/main/java/org/apache/tuscany/core/builder/impl/PortRuntimeConfigurationBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/core/src/main/java/org/apache/tuscany/core/builder/impl/PortRuntimeConfigurationBuilderImpl.java?ref=3db386e8736494c73f367be5bd6f2c5fdebb8173",
                "patch": "@@ -127,9 +127,9 @@ private ProxyFactory buildProxyFactory(ConfiguredService configuredService) {\n         // Create a proxy factory\n         ProxyFactory proxyFactory = new JDKProxyFactory();\n         try {\n-            proxyFactory.initialize();\n             proxyFactory.setBusinessInterface(javaInterface);\n             proxyFactory.setProxyConfiguration(proxyConfiguration);\n+            proxyFactory.initialize();\n         } catch (ProxyInitializationException e) {\n             throw new ServiceRuntimeException(e);\n         }\n@@ -173,9 +173,9 @@ private ProxyFactory buildProxyFactory(ConfiguredReference configuredReference)\n         // Create a proxy factory\n         ProxyFactory proxyFactory = new JDKProxyFactory();\n         try {\n-            proxyFactory.initialize();\n             proxyFactory.setBusinessInterface(javaInterface);\n             proxyFactory.setProxyConfiguration(proxyConfiguration);\n+            proxyFactory.initialize();\n         } catch (ProxyInitializationException e) {\n             throw new ServiceRuntimeException(e);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/6644f6728761b28ca84a20104fbadb22508e0903",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/5ff29eb4221b4524ee3afc7a7af3e5620de93793",
        "message": "Issue: NullPointerException will be thrown in the destory methods if the domains fail to initialise because the destroy method attempts to close the domain but the domain is null.\nFix: Added check for null before attempting to close the domain\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@786907 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_41",
        "file": [
            {
                "sha": "a427a076cd4b074d5a9d615603e77ec3ba769453",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomDeleteTestCase.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomDeleteTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomDeleteTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomDeleteTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -49,8 +49,12 @@ public static void init() throws Exception {\n     @AfterClass\n     public static void destroy() throws Exception {\n         // System.out.println(\">>>AtomDeleteTestCase.destroy entry\");\n-        scaConsumerDomain.close();\n-        scaProviderDomain.close();\n+        if (scaConsumerDomain != null) {\n+            scaConsumerDomain.close();\n+        }\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n     }\n \n     @Test"
            },
            {
                "sha": "32a01ebe2a558b9be428a076d3c883df13b415bf",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomGetTestCase.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomGetTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomGetTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomGetTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -47,8 +47,12 @@ public static void init() throws Exception {\n     @AfterClass\n     public static void destroy() throws Exception {\n         // System.out.println(\">>>AtomGetTestCase.destroy entry\");\n-        scaConsumerDomain.close();\n-        scaProviderDomain.close();\n+        if (scaConsumerDomain != null) {\n+            scaConsumerDomain.close();\n+        }\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n     }\n \n     @Test"
            },
            {
                "sha": "49e9c2f25f488a57e5c000ad52d6e973fa8a4856",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPostTestCase.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPostTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPostTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPostTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -47,8 +47,12 @@ public static void init() throws Exception {\n     @AfterClass\n     public static void destroy() throws Exception {\n         System.out.println(\">>>AtomPostTestCase.destroy entry\");\n-        scaConsumerDomain.close();\n-        scaProviderDomain.close();\n+        if (scaConsumerDomain != null) {\n+            scaConsumerDomain.close();\n+        }\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n     }\n \n     @Test"
            },
            {
                "sha": "3aaad681f4fda45c7753d92a16a692352c051a1a",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPutTestCase.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPutTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPutTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/AtomPutTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -49,8 +49,12 @@ public static void init() throws Exception {\n     @AfterClass\n     public static void destroy() throws Exception {\n         // System.out.println(\">>>AtomPutTestCase.destroy entry\");\n-        scaConsumerDomain.close();\n-        scaProviderDomain.close();\n+        if (scaConsumerDomain != null) {\n+            scaConsumerDomain.close();\n+        }\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n     }\n \n     @Test"
            },
            {
                "sha": "2ed0729b0020fcc5c97f83a89be2436012df58b8",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/MediaCollectionTestCase.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/MediaCollectionTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/MediaCollectionTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/MediaCollectionTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -51,7 +51,6 @@\n  */\n public class MediaCollectionTestCase {\n \tpublic final static String providerURI = \"http://localhost:8084/receipt\";\n-\tprotected static SCADomain scaConsumerDomain;\n \tprotected static SCADomain scaProviderDomain;\n \tprotected static CustomerClient testService;\n     protected static Abdera abdera;\n@@ -71,11 +70,13 @@ public static void init() throws Exception {\n \t\tabderaParser = Abdera.getNewParser();\n \t}\n \n-\t@AfterClass\n-\tpublic static void destroy() throws Exception {\n-\t\tSystem.out.println(\">>>MediaCollectionTestCase.destroy\");\n-\t\tscaProviderDomain.close();\n-\t}\n+    @AfterClass\n+    public static void destroy() throws Exception {\n+        System.out.println(\">>>MediaCollectionTestCase.destroy\");\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n+    }\n \n \t@Test\n \tpublic void testPrelim() throws Exception {"
            },
            {
                "sha": "c209e2dfe6b086cf74f2945339fa8cf986bef127",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderEntryEntityTagsTestCase.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderEntryEntityTagsTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderEntryEntityTagsTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderEntryEntityTagsTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -47,7 +47,6 @@\n  */\n public class ProviderEntryEntityTagsTestCase {\n \tpublic final static String providerURI = \"http://localhost:8084/customer\";\n-\tprotected static SCADomain scaConsumerDomain;\n \tprotected static SCADomain scaProviderDomain;\n \tprotected static CustomerClient testService;\n     protected static Abdera abdera;\n@@ -66,11 +65,13 @@ public static void init() throws Exception {\n \t\tabderaParser = Abdera.getNewParser();\n \t}\n \n-\t@AfterClass\n-\tpublic static void destroy() throws Exception {\n-\t\tSystem.out.println(\">>>ProviderEntryEntityTagsTestCase.destroy\");\n-\t\tscaProviderDomain.close();\n-\t}\n+    @AfterClass\n+    public static void destroy() throws Exception {\n+        System.out.println(\">>>ProviderEntryEntityTagsTestCase.destroy\");\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n+    }\n \n \t@Test\n \tpublic void testPrelim() throws Exception {"
            },
            {
                "sha": "42edeb8f0d77d283739577e864d54990d0dc93bb",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderFeedEntityTagsTestCase.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderFeedEntityTagsTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderFeedEntityTagsTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderFeedEntityTagsTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -53,7 +53,6 @@\n  */\n public class ProviderFeedEntityTagsTestCase {\n \tpublic final static String providerURI = \"http://localhost:8084/customer\";\n-\tprotected static SCADomain scaConsumerDomain;\n \tprotected static SCADomain scaProviderDomain;\n \tprotected static CustomerClient testService;\n     protected static Abdera abdera;\n@@ -72,11 +71,13 @@ public static void init() throws Exception {\n \t\tabderaParser = Abdera.getNewParser();\n \t}\n \n-\t@AfterClass\n-\tpublic static void destroy() throws Exception {\n-\t\tSystem.out.println(\">>>ProviderFeedEntityTagsTestCase.destroy\");\n-\t\tscaProviderDomain.close();\n-\t}\n+    @AfterClass\n+    public static void destroy() throws Exception {\n+        System.out.println(\">>>ProviderFeedEntityTagsTestCase.destroy\");\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n+    }\n \n \t@Test\n \tpublic void testPrelim() throws Exception {"
            },
            {
                "sha": "0d4194070d35f79e3856c362ad9300157f60ed55",
                "filename": "modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderServiceDocumentTestCase.java",
                "status": "modified",
                "additions": 6,
                "deletions": 4,
                "changes": 10,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderServiceDocumentTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6644f6728761b28ca84a20104fbadb22508e0903/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderServiceDocumentTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/test/java/org/apache/tuscany/sca/binding/atom/ProviderServiceDocumentTestCase.java?ref=6644f6728761b28ca84a20104fbadb22508e0903",
                "patch": "@@ -65,10 +65,12 @@ public static void init() throws Exception {\n \t\tabderaParser = Abdera.getNewParser();\n \t}\n \n-\t@AfterClass\n-\tpublic static void destroy() throws Exception {\n-\t\tscaProviderDomain.close();\n-\t}\n+    @AfterClass\n+    public static void destroy() throws Exception {\n+        if (scaProviderDomain != null) {\n+            scaProviderDomain.close();\n+        }\n+    }\n \n \t@Test\n \tpublic void testPrelim() throws Exception {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/dabe0091777aad6d1c148a7f36450b03e15bc34c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/ea2ce09a041092b723c3d284b9d357f09476d32a",
        "message": "Fixed NullPointerException which could be thrown as ExtensibleURLArtifactProcessor passes null for the Constructor parameter when it gets an unrecognised element (FindBugs reported issue)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@658250 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_42",
        "file": [
            {
                "sha": "ff21c894de909da1d965ea895f399116eb38afe5",
                "filename": "modules/contribution/src/main/java/org/apache/tuscany/sca/contribution/service/UnrecognizedElementException.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/dabe0091777aad6d1c148a7f36450b03e15bc34c/modules/contribution/src/main/java/org/apache/tuscany/sca/contribution/service/UnrecognizedElementException.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/dabe0091777aad6d1c148a7f36450b03e15bc34c/modules/contribution/src/main/java/org/apache/tuscany/sca/contribution/service/UnrecognizedElementException.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/contribution/src/main/java/org/apache/tuscany/sca/contribution/service/UnrecognizedElementException.java?ref=dabe0091777aad6d1c148a7f36450b03e15bc34c",
                "patch": "@@ -34,7 +34,7 @@\n      * @param element the element that could not be handled\n      */\n     public UnrecognizedElementException(QName element) {\n-        super(\"Unrecognized element: \" + element.toString());\n+        super(\"Unrecognized element: \" + element);\n         this.element = element;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/2457a5dd64f6a4aed6abcfb99d03c39d67e6949a",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/ca5a2469b0f2f86d3224f2774438b6f208d3000e",
        "message": "Added checks for null parameters as passing in null would result in a NullPointerException. Updated code to throw IllegalArgumentException when null passed as paramters. Updated JavaDoc to reflect these changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@647494 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_43",
        "file": [
            {
                "sha": "585a6cc29cf810f57d905e1593587a12bd9d45e0",
                "filename": "modules/core-spi/src/main/java/org/apache/tuscany/sca/core/DefaultExtensionPointRegistry.java",
                "status": "modified",
                "additions": 23,
                "deletions": 5,
                "changes": 28,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/2457a5dd64f6a4aed6abcfb99d03c39d67e6949a/modules/core-spi/src/main/java/org/apache/tuscany/sca/core/DefaultExtensionPointRegistry.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/2457a5dd64f6a4aed6abcfb99d03c39d67e6949a/modules/core-spi/src/main/java/org/apache/tuscany/sca/core/DefaultExtensionPointRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core-spi/src/main/java/org/apache/tuscany/sca/core/DefaultExtensionPointRegistry.java?ref=2457a5dd64f6a4aed6abcfb99d03c39d67e6949a",
                "patch": "@@ -36,7 +36,7 @@\n  * points. As the point of contact for all extension artifacts this registry\n  * allows loaded extensions to find all other parts of the system and register\n  * themselves appropriately.\n- * \n+ *\n  * @version $Rev$ $Date$\n  */\n public class DefaultExtensionPointRegistry implements ExtensionPointRegistry {\n@@ -45,10 +45,16 @@\n     /**\n      * Add an extension point to the registry. This default implementation\n      * stores extensions against the interfaces that they implement.\n-     * \n+     *\n      * @param extensionPoint The instance of the extension point\n+     *\n+     * @throws IllegalArgumentException if extensionPoint is null\n      */\n     public void addExtensionPoint(Object extensionPoint) {\n+        if (extensionPoint == null) {\n+            throw new IllegalArgumentException(\"Cannot register null as an ExtensionPoint\");\n+        }\n+\n         Set<Class> interfaces = getAllInterfaces(extensionPoint.getClass());\n         for (Class i : interfaces) {\n             extensionPoints.put(i, extensionPoint);\n@@ -73,14 +79,20 @@ public void addExtensionPoint(Object extensionPoint) {\n         }\n         return null;\n     }\n-    \n+\n     /**\n      * Get the extension point by the interface that it implements\n-     * \n+     *\n      * @param extensionPointType The lookup key (extension point interface)\n      * @return The instance of the extension point\n+     *\n+     * @throws IllegalArgumentException if extensionPointType is null\n      */\n     public <T> T getExtensionPoint(Class<T> extensionPointType) {\n+        if (extensionPointType == null) {\n+            throw new IllegalArgumentException(\"Cannot lookup ExtensionPoint of type null\");\n+        }\n+\n         Object extensionPoint = extensionPoints.get(extensionPointType);\n         if (extensionPoint == null) {\n             \n@@ -130,10 +142,16 @@ public void addExtensionPoint(Object extensionPoint) {\n \n     /**\n      * Remove an extension point based on the interface that it implements\n-     * \n+     *\n      * @param extensionPoint The extension point to remove\n+     *\n+     * @throws IllegalArgumentException if extensionPoint is null\n      */\n     public void removeExtensionPoint(Object extensionPoint) {\n+        if (extensionPoint == null) {\n+            throw new IllegalArgumentException(\"Cannot remove null as an ExtensionPoint\");\n+        }\n+\n         Set<Class> interfaces = getAllInterfaces(extensionPoint.getClass());\n         for (Class i : interfaces) {\n             extensionPoints.remove(i);"
            },
            {
                "sha": "f2f67b2d52f254ff2abcd520d881e3541a00988e",
                "filename": "modules/core-spi/src/main/java/org/apache/tuscany/sca/core/ExtensionPointRegistry.java",
                "status": "modified",
                "additions": 12,
                "deletions": 6,
                "changes": 18,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/2457a5dd64f6a4aed6abcfb99d03c39d67e6949a/modules/core-spi/src/main/java/org/apache/tuscany/sca/core/ExtensionPointRegistry.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/2457a5dd64f6a4aed6abcfb99d03c39d67e6949a/modules/core-spi/src/main/java/org/apache/tuscany/sca/core/ExtensionPointRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core-spi/src/main/java/org/apache/tuscany/sca/core/ExtensionPointRegistry.java?ref=2457a5dd64f6a4aed6abcfb99d03c39d67e6949a",
                "patch": "@@ -21,30 +21,36 @@\n \n \n /**\n- * The registry for the Tuscany core extension points. As the point of contact \n- * for all extension artifacts this registry allows loaded extensions to find \n+ * The registry for the Tuscany core extension points. As the point of contact\n+ * for all extension artifacts this registry allows loaded extensions to find\n  * all other parts of the system and register themselves appropriately.\n- * \n+ *\n  * @version $Rev$ $Date$\n  */\n public interface ExtensionPointRegistry {\n-    \n+\n     /**\n      * Add an extension point to the registry\n      * @param extensionPoint The instance of the extension point\n+     *\n+     * @throws IllegalArgumentException if extensionPoint is null\n      */\n     void addExtensionPoint(Object extensionPoint);\n-    \n+\n     /**\n      * Get the extension point by the interface\n      * @param extensionPointType The lookup key (extension point interface)\n      * @return The instance of the extension point\n+     *\n+     * @throws IllegalArgumentException if extensionPointType is null\n      */\n     <T> T getExtensionPoint(Class<T> extensionPointType);\n-    \n+\n     /**\n      * Remove an extension point\n      * @param extensionPoint The extension point to remove\n+     *\n+     * @throws IllegalArgumentException if extensionPoint is null\n      */\n     void removeExtensionPoint(Object extensionPoint);\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/ded1980a8b8a4a5dcf9e93cd85e54ce0a5ecb0a2",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/39cc49b72a8546c138cc1e851ee3c2eb09fbe489",
        "message": "Fixing NPE if SecurityHandler extension point wasn't initialized properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@803789 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_44",
        "file": [
            {
                "sha": "43d13b665a500424b64e693ec3b5f957ab2bf455",
                "filename": "modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationPolicyProviderFactory.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/ded1980a8b8a4a5dcf9e93cd85e54ce0a5ecb0a2/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationPolicyProviderFactory.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/ded1980a8b8a4a5dcf9e93cd85e54ce0a5ecb0a2/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationPolicyProviderFactory.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationPolicyProviderFactory.java?ref=ded1980a8b8a4a5dcf9e93cd85e54ce0a5ecb0a2",
                "patch": "@@ -40,7 +40,9 @@ public LDAPRealmAuthenticationPolicyProviderFactory(ExtensionPointRegistry regis\n         super();\n         \n         LDAPSecurityHandlerExtensionPoint securityHandlerExtensionPoint = registry.getExtensionPoint(LDAPSecurityHandlerExtensionPoint.class);\n-        securityHandler = securityHandlerExtensionPoint.getLDAPSecurityHandlers().get(0);\n+        if (securityHandlerExtensionPoint.getLDAPSecurityHandlers().size() > 0) {\n+            securityHandler = securityHandlerExtensionPoint.getLDAPSecurityHandlers().get(0);\n+         }\n     }\n \n     public Class<LDAPRealmAuthenticationPolicy> getModelType() {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9",
        "message": "Merging changes from 1.5 release branch to avoid NPE when running some samples\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@777599 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_45",
        "file": [
            {
                "sha": "88f153c064a7ba66dbb0765c5c6633271a81f66a",
                "filename": "modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationImplementationPolicyProvider.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationImplementationPolicyProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationImplementationPolicyProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationImplementationPolicyProvider.java?ref=1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1",
                "patch": "@@ -71,7 +71,7 @@ public Interceptor createInterceptor(Operation operation) {\n         if (implementation instanceof OperationsConfigurator) {\n             OperationsConfigurator operationsConfigurator = (OperationsConfigurator)implementation;\n             for (ConfiguredOperation cop : operationsConfigurator.getConfiguredOperations()) {\n-                if (cop.getName().equals(op.getName())) {\n+                if (cop != null && cop.getName() != null && cop.getName().equals(op.getName())) {\n                     for (PolicySet ps : cop.getPolicySets()) {\n                         for (Object p : ps.getPolicies()) {\n                             if (LDAPRealmAuthenticationPolicy.class.isInstance(p)) {\n@@ -99,7 +99,7 @@ public Interceptor createInterceptor(Operation operation) {\n         if (implementation instanceof OperationsConfigurator) {\n             OperationsConfigurator operationsConfigurator = (OperationsConfigurator)implementation;\n             for (ConfiguredOperation cop : operationsConfigurator.getConfiguredOperations()) {\n-                if (cop.getName().equals(op.getName())) {\n+                if (cop != null && cop.getName() != null && cop.getName().equals(op.getName())) {\n                     for (PolicySet ps : cop.getPolicySets()) {\n                         for (Object p : ps.getPolicies()) {\n                             if (AuthorizationPolicy.class.isInstance(p)) {"
            },
            {
                "sha": "6189de5a5a966240ceacf5c83feb6f584309f06c",
                "filename": "modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "status": "modified",
                "additions": 12,
                "deletions": 16,
                "changes": 28,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java?ref=1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1",
                "patch": "@@ -89,13 +89,11 @@ public Interceptor createInterceptor(Operation operation) {\n         List<LDAPRealmAuthenticationPolicy> polices = new ArrayList<LDAPRealmAuthenticationPolicy>();\n         // FIXME: How do we get a list of effective policySets for a given operation?\n         for(Operation operation : operations) {\n-            if (operation!= null && operation.getName() != null) {\n-                if (operation.getName().equals(op.getName())) {\n-                    for (PolicySet ps : operation.getPolicySets()) {\n-                        for (Object p : ps.getPolicies()) {\n-                            if (LDAPRealmAuthenticationPolicy.class.isInstance(p)) {\n-                                polices.add((LDAPRealmAuthenticationPolicy)p);\n-                            }\n+            if (operation!= null && operation.getName() != null && operation.getName().equals(op.getName())) {\n+                for (PolicySet ps : operation.getPolicySets()) {\n+                    for (Object p : ps.getPolicies()) {\n+                        if (LDAPRealmAuthenticationPolicy.class.isInstance(p)) {\n+                            polices.add((LDAPRealmAuthenticationPolicy)p);\n                         }\n                     }\n                 }\n@@ -105,7 +103,7 @@ public Interceptor createInterceptor(Operation operation) {\n         if (service instanceof OperationsConfigurator) {\n             OperationsConfigurator operationsConfigurator = (OperationsConfigurator)service;\n             for (ConfiguredOperation cop : operationsConfigurator.getConfiguredOperations()) {\n-                if (cop.getName().equals(op.getName())) {\n+                if (cop!= null && cop.getName() != null && cop.getName().equals(op.getName())) {\n                     for (PolicySet ps : cop.getApplicablePolicySets()) {\n                         for (Object p : ps.getPolicies()) {\n                             if (LDAPRealmAuthenticationPolicy.class.isInstance(p)) {\n@@ -138,13 +136,11 @@ public Interceptor createInterceptor(Operation operation) {\n         List<AuthorizationPolicy> polices = new ArrayList<AuthorizationPolicy>();\n         // FIXME: How do we get a list of effective policySets for a given operation?\n         for(Operation operation : operations) {\n-            if (operation!= null && operation.getName() != null) {\n-                if (operation.getName().equals(op.getName())) {\n-                    for (PolicySet ps : operation.getPolicySets()) {\n-                        for (Object p : ps.getPolicies()) {\n-                            if (AuthorizationPolicy.class.isInstance(p)) {\n-                                polices.add((AuthorizationPolicy)p);\n-                            }\n+            if (operation!= null && operation.getName() != null && operation.getName().equals(op.getName())) {\n+                for (PolicySet ps : operation.getPolicySets()) {\n+                    for (Object p : ps.getPolicies()) {\n+                        if (AuthorizationPolicy.class.isInstance(p)) {\n+                            polices.add((AuthorizationPolicy)p);\n                         }\n                     }\n                 }\n@@ -154,7 +150,7 @@ public Interceptor createInterceptor(Operation operation) {\n         if (service instanceof OperationsConfigurator) {\n             OperationsConfigurator operationsConfigurator = (OperationsConfigurator)service;\n             for (ConfiguredOperation cop : operationsConfigurator.getConfiguredOperations()) {\n-                if (cop.getName().equals(op.getName())) {\n+                if (cop != null && cop.getName() != null && cop.getName().equals(op.getName())) {\n                     for (PolicySet ps : cop.getApplicablePolicySets()) {\n                         for (Object p : ps.getPolicies()) {\n                             if (AuthorizationPolicy.class.isInstance(p)) {"
            },
            {
                "sha": "981c29df6a8bde11eda302e45894884862ec7ae8",
                "filename": "modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationImplementationPolicyProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationImplementationPolicyProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationImplementationPolicyProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationImplementationPolicyProvider.java?ref=1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1",
                "patch": "@@ -52,7 +52,7 @@ public JaasAuthenticationImplementationPolicyProvider(RuntimeComponent component\n         if (implementation instanceof OperationsConfigurator) {\n             OperationsConfigurator operationsConfigurator = (OperationsConfigurator)implementation;\n             for (ConfiguredOperation cop : operationsConfigurator.getConfiguredOperations()) {\n-                if (cop.getName().equals(op.getName())) {\n+                if (cop != null && cop.getName() != null && cop.getName().equals(op.getName())) {\n                     for (PolicySet ps : cop.getPolicySets()) {\n                         for (Object p : ps.getPolicies()) {\n                             if (JaasAuthenticationPolicy.class.isInstance(p)) {"
            },
            {
                "sha": "220ebd937fae9909d36b1491ad0508d60c2b16b3",
                "filename": "modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java",
                "status": "modified",
                "additions": 6,
                "deletions": 8,
                "changes": 14,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java?ref=1e8a3f0084b2b5284e1cbfd7e6d62b5974baf2d1",
                "patch": "@@ -57,13 +57,11 @@ public JaasAuthenticationServicePolicyProvider(RuntimeComponent component, Runti\n         List<JaasAuthenticationPolicy> polices = new ArrayList<JaasAuthenticationPolicy>();\n         // FIXME: How do we get a list of effective policySets for a given operation?\n         for(Operation operation : operations) {\n-            if (operation!= null && operation.getName() != null) {\n-                if (operation.getName().equals(op.getName())) {\n-                    for (PolicySet ps : operation.getPolicySets()) {\n-                        for (Object p : ps.getPolicies()) {\n-                            if (JaasAuthenticationPolicy.class.isInstance(p)) {\n-                                polices.add((JaasAuthenticationPolicy)p);\n-                            }\n+            if (operation!= null && operation.getName() != null && operation.getName().equals(op.getName())) {\n+                for (PolicySet ps : operation.getPolicySets()) {\n+                    for (Object p : ps.getPolicies()) {\n+                        if (JaasAuthenticationPolicy.class.isInstance(p)) {\n+                            polices.add((JaasAuthenticationPolicy)p);\n                         }\n                     }\n                 }\n@@ -73,7 +71,7 @@ public JaasAuthenticationServicePolicyProvider(RuntimeComponent component, Runti\n     \tif (service instanceof OperationsConfigurator) {\n             OperationsConfigurator operationsConfigurator = (OperationsConfigurator)service;\n             for (ConfiguredOperation cop : operationsConfigurator.getConfiguredOperations()) {\n-                if (cop.getName().equals(op.getName())) {\n+                if (cop != null && cop.getName() != null && cop.getName().equals(op.getName())) {\n                     for (PolicySet ps : cop.getApplicablePolicySets()) {\n                         for (Object p : ps.getPolicies()) {\n                             if (JaasAuthenticationPolicy.class.isInstance(p)) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/15bc4017beb5621e421f2850ad269a2b54214321",
        "message": "Merge policy NPE fixes from 1.5 branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@777443 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_46",
        "file": [
            {
                "sha": "4b2bb1ad1cf667984fe9abf4cbb55e29e02b016c",
                "filename": "modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "status": "modified",
                "additions": 14,
                "deletions": 10,
                "changes": 24,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java?ref=36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9",
                "patch": "@@ -89,11 +89,13 @@ public Interceptor createInterceptor(Operation operation) {\n         List<LDAPRealmAuthenticationPolicy> polices = new ArrayList<LDAPRealmAuthenticationPolicy>();\n         // FIXME: How do we get a list of effective policySets for a given operation?\n         for(Operation operation : operations) {\n-            if (operation.getName().equals(op.getName())) {\n-                for (PolicySet ps : operation.getPolicySets()) {\n-                    for (Object p : ps.getPolicies()) {\n-                        if (LDAPRealmAuthenticationPolicy.class.isInstance(p)) {\n-                            polices.add((LDAPRealmAuthenticationPolicy)p);\n+            if (operation!= null && operation.getName() != null) {\n+                if (operation.getName().equals(op.getName())) {\n+                    for (PolicySet ps : operation.getPolicySets()) {\n+                        for (Object p : ps.getPolicies()) {\n+                            if (LDAPRealmAuthenticationPolicy.class.isInstance(p)) {\n+                                polices.add((LDAPRealmAuthenticationPolicy)p);\n+                            }\n                         }\n                     }\n                 }\n@@ -136,11 +138,13 @@ public Interceptor createInterceptor(Operation operation) {\n         List<AuthorizationPolicy> polices = new ArrayList<AuthorizationPolicy>();\n         // FIXME: How do we get a list of effective policySets for a given operation?\n         for(Operation operation : operations) {\n-            if (operation.getName().equals(op.getName())) {\n-                for (PolicySet ps : operation.getPolicySets()) {\n-                    for (Object p : ps.getPolicies()) {\n-                        if (AuthorizationPolicy.class.isInstance(p)) {\n-                            polices.add((AuthorizationPolicy)p);\n+            if (operation!= null && operation.getName() != null) {\n+                if (operation.getName().equals(op.getName())) {\n+                    for (PolicySet ps : operation.getPolicySets()) {\n+                        for (Object p : ps.getPolicies()) {\n+                            if (AuthorizationPolicy.class.isInstance(p)) {\n+                                polices.add((AuthorizationPolicy)p);\n+                            }\n                         }\n                     }\n                 }"
            },
            {
                "sha": "56927be6bb2ebd2c6adde7a64d64fb11e7897142",
                "filename": "modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security/src/main/java/org/apache/tuscany/sca/policy/security/jaas/JaasAuthenticationServicePolicyProvider.java?ref=36a51a63e9a5f91c897cfc9c984d0f63cf8f7ef9",
                "patch": "@@ -57,11 +57,13 @@ public JaasAuthenticationServicePolicyProvider(RuntimeComponent component, Runti\n         List<JaasAuthenticationPolicy> polices = new ArrayList<JaasAuthenticationPolicy>();\n         // FIXME: How do we get a list of effective policySets for a given operation?\n         for(Operation operation : operations) {\n-            if (operation.getName().equals(op.getName())) {\n-                for (PolicySet ps : operation.getPolicySets()) {\n-                    for (Object p : ps.getPolicies()) {\n-                        if (JaasAuthenticationPolicy.class.isInstance(p)) {\n-                            polices.add((JaasAuthenticationPolicy)p);\n+            if (operation!= null && operation.getName() != null) {\n+                if (operation.getName().equals(op.getName())) {\n+                    for (PolicySet ps : operation.getPolicySets()) {\n+                        for (Object p : ps.getPolicies()) {\n+                            if (JaasAuthenticationPolicy.class.isInstance(p)) {\n+                                polices.add((JaasAuthenticationPolicy)p);\n+                            }\n                         }\n                     }\n                 }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/729c93fea758640d8897850c328337091fe8534d",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/6e6729bede4fc1952a1e1349e5a86e20a0564f83",
        "message": "TUSCANY-2968 - Fixing NPE with pure http binding\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@772022 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_47",
        "file": [
            {
                "sha": "3a3428268c7648f7ed19c4d8271e0eb257708d65",
                "filename": "modules/binding-http-new-runtime/src/main/java/org/apache/tuscany/sca/binding/http/provider/HTTPServiceBindingProvider.java",
                "status": "modified",
                "additions": 15,
                "deletions": 9,
                "changes": 24,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/729c93fea758640d8897850c328337091fe8534d/modules/binding-http-new-runtime/src/main/java/org/apache/tuscany/sca/binding/http/provider/HTTPServiceBindingProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/729c93fea758640d8897850c328337091fe8534d/modules/binding-http-new-runtime/src/main/java/org/apache/tuscany/sca/binding/http/provider/HTTPServiceBindingProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-http-new-runtime/src/main/java/org/apache/tuscany/sca/binding/http/provider/HTTPServiceBindingProvider.java?ref=729c93fea758640d8897850c328337091fe8534d",
                "patch": "@@ -91,17 +91,23 @@ public HTTPServiceBindingProvider(RuntimeComponent component,\n         \n         ProviderFactoryExtensionPoint  providerFactories = extensionPoints.getExtensionPoint(ProviderFactoryExtensionPoint.class);\n \n-        // Configure the interceptors for operation selection\n-        OperationSelectorProviderFactory osProviderFactory = (OperationSelectorProviderFactory) providerFactories.getProviderFactory(binding.getOperationSelector().getClass());\n-        if (osProviderFactory != null) {\n-            this.osProvider = osProviderFactory.createServiceOperationSelectorProvider(component, service, binding);\n+        \n+        if (binding.getOperationSelector() != null) {\n+            // Configure the interceptors for operation selection\n+            OperationSelectorProviderFactory osProviderFactory = (OperationSelectorProviderFactory) providerFactories.getProviderFactory(binding.getOperationSelector().getClass());\n+            if (osProviderFactory != null) {\n+                this.osProvider = osProviderFactory.createServiceOperationSelectorProvider(component, service, binding);\n+            }            \n         }\n-\n-        // Configure the interceptors for wire format\n-        WireFormatProviderFactory wfProviderFactory = (WireFormatProviderFactory) providerFactories.getProviderFactory(binding.getRequestWireFormat().getClass());\n-        if (wfProviderFactory != null) {\n-            this.wfProvider = wfProviderFactory.createServiceWireFormatProvider(component, service, binding);\n+        \n+        if (binding.getRequestWireFormat() != null && binding.getResponseWireFormat() != null) {\n+            // Configure the interceptors for wire format\n+            WireFormatProviderFactory wfProviderFactory = (WireFormatProviderFactory) providerFactories.getProviderFactory(binding.getRequestWireFormat().getClass());\n+            if (wfProviderFactory != null) {\n+                this.wfProvider = wfProviderFactory.createServiceWireFormatProvider(component, service, binding);\n+            }            \n         }\n+\n         \n         \n         //clone the service contract to avoid databinding issues"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/54bb4eebf0f8040c9ec73d39016f9deec5186d29",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/099b5385de198c39e10dc0478a45b5804af0e3d3",
        "message": "Fixing NPE when no operation provided when creating invoker\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@771598 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_48",
        "file": [
            {
                "sha": "dfe72bee36b2a1b93fd0584523f1c8d6f16a95e7",
                "filename": "modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/54bb4eebf0f8040c9ec73d39016f9deec5186d29/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/54bb4eebf0f8040c9ec73d39016f9deec5186d29/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/policy-security-http/src/main/java/org/apache/tuscany/sca/policy/security/http/LDAPRealmAuthenticationServicePolicyProvider.java?ref=54bb4eebf0f8040c9ec73d39016f9deec5186d29",
                "patch": "@@ -59,7 +59,12 @@ public String getPhase() {\n     }\n \n     public Interceptor createInterceptor(Operation operation) {\n-        List<LDAPRealmAuthenticationPolicy> policies = findPolicies(operation);\n+        List<LDAPRealmAuthenticationPolicy> policies = null;\n+\n+        if (operation != null) {\n+            policies = findPolicies(operation);\n+        }\n+\n         if (policies == null || policies.isEmpty()) {\n             return null;\n         } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/493b2d95a2a043bfbb099217c70c4b1da49e33b2",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/3c13a95f72a6aa4bbf5fe06b9f51e36fb29cb42a",
        "message": "Rename testcase as it works now (as long as you've the NPE fixed openejb jar)\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@767523 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_49",
        "file": [
            {
                "sha": "765e6a3f180d981b9dbd88a5213a6e10c45f0d42",
                "filename": "itest/implementation-jee-external-ear/src/test/java/itest/JeeTestCase.java",
                "status": "renamed",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/493b2d95a2a043bfbb099217c70c4b1da49e33b2/itest/implementation-jee-external-ear/src/test/java/itest/JeeTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/493b2d95a2a043bfbb099217c70c4b1da49e33b2/itest/implementation-jee-external-ear/src/test/java/itest/JeeTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/implementation-jee-external-ear/src/test/java/itest/JeeTestCase.java?ref=493b2d95a2a043bfbb099217c70c4b1da49e33b2",
                "patch": "@@ -28,7 +28,7 @@\n \r\n /**\r\n  */\r\n-public class JeeTestCaseFIXME {\r\n+public class JeeTestCase {\r\n \r\n \r\n     @Before\r",
                "previous_filename": "itest/implementation-jee-external-ear/src/test/java/itest/JeeTestCaseFIXME.java"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/f4df2d789fefccfa242ed41642a218369bf6b142",
        "message": "Make the openejb version consistent and fix the NPE & UnsupportedModuleType\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@761874 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_50",
        "file": [
            {
                "sha": "60bd30e713a8bf419454e1310c8bcc5a4f111d01",
                "filename": "modules/binding-ejb-runtime/pom.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/binding-ejb-runtime/pom.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/binding-ejb-runtime/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ejb-runtime/pom.xml?ref=9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac",
                "patch": "@@ -49,7 +49,7 @@\n             <version>2.2</version>\n             <scope>compile</scope>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>backport-util-concurrent</groupId>\n             <artifactId>backport-util-concurrent</artifactId>\n@@ -87,7 +87,7 @@\n         <dependency>\n             <groupId>org.apache.geronimo.modules</groupId>\n             <artifactId>geronimo-openejb</artifactId>\n-            <version>2.0.2</version>\n+            <version>2.1.4</version>\n             <scope>test</scope>\n             <exclusions>\n                 <exclusion>\n@@ -136,7 +136,7 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>asm</groupId>\n             <artifactId>asm-all</artifactId>\n@@ -154,7 +154,7 @@\n                    <artifactId>geronimo-jms_1.1_spec</artifactId>\n                </exclusion>\n            </exclusions>\n-        </dependency>         \n+        </dependency>\n \n     </dependencies>\n "
            },
            {
                "sha": "38a1573e6390071f07bf0f0d61959a774c603f82",
                "filename": "modules/contribution-jee-impl/src/main/java/org/apache/tuscany/sca/contribution/jee/impl/JavaEEIntrospectorImpl.java",
                "status": "modified",
                "additions": 34,
                "deletions": 32,
                "changes": 66,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/contribution-jee-impl/src/main/java/org/apache/tuscany/sca/contribution/jee/impl/JavaEEIntrospectorImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/contribution-jee-impl/src/main/java/org/apache/tuscany/sca/contribution/jee/impl/JavaEEIntrospectorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/contribution-jee-impl/src/main/java/org/apache/tuscany/sca/contribution/jee/impl/JavaEEIntrospectorImpl.java?ref=9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac",
                "patch": "@@ -6,15 +6,15 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n- * under the License.    \n+ * under the License.\n  */\n package org.apache.tuscany.sca.contribution.jee.impl;\n \n@@ -29,6 +29,7 @@\n import org.apache.openejb.config.AppModule;\n import org.apache.openejb.config.EjbModule;\n import org.apache.openejb.config.UnknownModuleTypeException;\n+import org.apache.openejb.config.UnsupportedModuleTypeException;\n import org.apache.openejb.config.WebModule;\n import org.apache.openejb.jee.EjbJar;\n import org.apache.openejb.jee.EjbRef;\n@@ -57,7 +58,7 @@\n  * @version $Rev$ $Date$\n  */\n public class JavaEEIntrospectorImpl implements JavaEEIntrospector {\n-    \n+\n     public WebModuleInfo introspectWebArchive(URL artifactURL) throws ContributionReadException {\n         // Create a temporary file since openejb extracts the archive to process\n         InputStream inp = null;\n@@ -74,7 +75,7 @@ public WebModuleInfo introspectWebArchive(URL artifactURL) throws ContributionRe\n         } catch (IOException e) {\n             throw new ContributionReadException(e);\n         }\n-        \n+\n         JavaEEModuleHelper jmh = new JavaEEModuleHelper();\n         WebModule wm = jmh.getMetadataCompleteModules(tempFile.getAbsolutePath()).getWebModules().get(0);\n         if(!tempFile.delete()) {\n@@ -85,10 +86,10 @@ public WebModuleInfo introspectWebArchive(URL artifactURL) throws ContributionRe\n \n     private WebModuleInfo createWebModuleInfo(WebModule webModule) {\n         WebModuleInfo wmInfo = new WebModuleInfoImpl();\n-        \n+\n         WebApp webApp = webModule.getWebApp();\n         ClassLoader classLoader = webModule.getClassLoader();\n-        \n+\n         // Process Remote EJB References\n         for (Map.Entry<String, EjbRef> entry : webApp.getEjbRefMap().entrySet()) {\n             EjbRef ejbRef = entry.getValue();\n@@ -116,12 +117,12 @@ private WebModuleInfo createWebModuleInfo(WebModule webModule) {\n                 e.printStackTrace();\n             }\n         }\n-        \n+\n         // Process env-entries to compute properties\n         for (Map.Entry<String, EnvEntry> entry : webApp.getEnvEntryMap().entrySet()) {\n             EnvEntry envEntry = entry.getValue();\n             wmInfo.getEnvEntries().put(envEntry.getEnvEntryName(), createEnvEntryInfo(envEntry));\n-        }        \n+        }\n \n         // Process Servlets\n         for(Servlet servlet: webApp.getServlet()) {\n@@ -152,26 +153,26 @@ private WebModuleInfo createWebModuleInfo(WebModule webModule) {\n                 e.printStackTrace();\n             }\n         }\n-        \n+\n         // TODO: Process JSF Managed beans\n-        \n+\n         // TODO: Process JSP pages\n-        \n+\n         return wmInfo;\n     }\n-    \n+\n     private org.apache.tuscany.sca.contribution.jee.EnvEntryInfo createEnvEntryInfo(EnvEntry envEntry) {\n         org.apache.tuscany.sca.contribution.jee.EnvEntryInfo envEntryInfo = new org.apache.tuscany.sca.contribution.jee.EnvEntryInfo();\n         envEntryInfo.name = envEntry.getEnvEntryName();\n         envEntryInfo.type = envEntry.getEnvEntryType();\n         envEntryInfo.value = envEntry.getEnvEntryValue();\n-        \n+\n         return envEntryInfo;\n     }\n \n     private org.apache.tuscany.sca.contribution.jee.EjbReferenceInfo createEjbReferenceInfo(EjbRef ejbRef, ClassLoader classLoader) throws ClassNotFoundException {\n         org.apache.tuscany.sca.contribution.jee.EjbReferenceInfo ejbReferenceInfo = new org.apache.tuscany.sca.contribution.jee.EjbReferenceInfo();\n-        \n+\n         ejbReferenceInfo.referenceName = ejbRef.getEjbRefName();\n         ejbReferenceInfo.referenceType = ejbRef.getRefType().compareTo(EjbReference.Type.REMOTE) == 0 ? org.apache.tuscany.sca.contribution.jee.EjbReferenceInfo.RefType.REMOTE : ejbRef.getRefType().compareTo(EjbReference.Type.LOCAL) == 0 ? org.apache.tuscany.sca.contribution.jee.EjbReferenceInfo.RefType.LOCAL : org.apache.tuscany.sca.contribution.jee.EjbReferenceInfo.RefType.UNKNOWN;\n         ejbReferenceInfo.businessInterface = classLoader.loadClass(ejbRef.getInterface());\n@@ -182,10 +183,10 @@ private WebModuleInfo createWebModuleInfo(WebModule webModule) {\n                 ejbReferenceInfo.ejbType = EjbType.SESSION_UNKNOWN;\n             }\n         }\n-        \n+\n         ejbReferenceInfo.ejbLink = ejbRef.getEjbLink();\n         ejbReferenceInfo.mappedName = ejbRef.getMappedName();\n-        \n+\n         return ejbReferenceInfo;\n     }\n \n@@ -205,13 +206,14 @@ public EjbModuleInfo introspectEjbArchive(URL artifactURL) throws ContributionRe\n         } catch (IOException e) {\n             throw new ContributionReadException(e);\n         }\n-        \n+\n         JavaEEModuleHelper jmh = new JavaEEModuleHelper();\n         EjbModule em;\n         try {\n             em = jmh.getMetadataCompleteModules(tempFile.getAbsolutePath()).getEjbModules().get(0);\n         } catch(ContributionReadException e) {\n-            if(e.getCause() instanceof UnknownModuleTypeException) {\n+            if((e.getCause() instanceof UnknownModuleTypeException) ||\n+                (e.getCause() instanceof UnsupportedModuleTypeException)) {\n                 // Not an EJB jar\n                 return null;\n             } else {\n@@ -254,7 +256,7 @@ private EjbModuleInfo createEjbModuleInfo(EjbModule ejbModule) {\n                 ejbModuleInfo.getEjbInfos().put(bean.getEjbName(), ejbInfo);\n             }\n         }\n-        \n+\n         return ejbModuleInfo;\n     }\n \n@@ -268,9 +270,9 @@ private EjbInfo createEjbInfo(MessageDrivenBean bean, ClassLoader classLoader) {\n             // Should not happen\n         }\n         EjbInfo ejbInfo = new EjbInfo();\n-        \n+\n         ejbInfo.beanName = bean.getEjbName();\n-        \n+\n         try {\n             ejbInfo.beanClass = classLoader.loadClass(bean.getEjbClass());\n         } catch (ClassNotFoundException e) {\n@@ -279,7 +281,7 @@ private EjbInfo createEjbInfo(MessageDrivenBean bean, ClassLoader classLoader) {\n         }\n \n         ejbInfo.ejbType = org.apache.tuscany.sca.contribution.jee.EjbInfo.EjbType.MESSAGE_DRIVEN;\n-        \n+\n         ejbInfo.mappedName = bean.getMappedName();\n \n         processReferencesEnvEntries(bean, classLoader, ejbInfo);\n@@ -293,9 +295,9 @@ private EjbInfo createEjbInfo(SessionBean bean, ClassLoader classLoader) {\n             return null;\n         }\n         EjbInfo ejbInfo = new EjbInfo();\n-        \n+\n         ejbInfo.beanName = bean.getEjbName();\n-        \n+\n         try {\n             ejbInfo.beanClass = classLoader.loadClass(bean.getEjbClass());\n         } catch (ClassNotFoundException e) {\n@@ -319,7 +321,7 @@ private EjbInfo createEjbInfo(SessionBean bean, ClassLoader classLoader) {\n                 // TODO Auto-generated catch block\n                 e.printStackTrace();\n             }\n-        }        \n+        }\n \n         // Process Local Business interfaces of the SessionBean\n         for (String intfName : bean.getBusinessLocal()) {\n@@ -329,10 +331,10 @@ private EjbInfo createEjbInfo(SessionBean bean, ClassLoader classLoader) {\n                 // TODO Auto-generated catch block\n                 e.printStackTrace();\n             }\n-        }        \n+        }\n \n         processReferencesEnvEntries(bean, classLoader, ejbInfo);\n-        \n+\n         return ejbInfo;\n     }\n \n@@ -363,12 +365,12 @@ private void processReferencesEnvEntries(EnterpriseBean bean, ClassLoader classL\n                 // TODO Auto-generated catch block\n                 e.printStackTrace();\n             }\n-        }    \n+        }\n \n         // Process env-entries\n         for (Map.Entry<String, EnvEntry> entry : bean.getEnvEntryMap().entrySet()) {\n             EnvEntry envEntry = entry.getValue();\n-            \n+\n             ejbInfo.envEntries.put(envEntry.getEnvEntryName(), createEnvEntryInfo(envEntry));\n         }\n     }\n@@ -389,7 +391,7 @@ public JavaEEApplicationInfo introspectJeeArchive(URL artifactURL) throws Contri\n         } catch (IOException e) {\n             throw new ContributionReadException(e);\n         }\n-        \n+\n         JavaEEModuleHelper jmh = new JavaEEModuleHelper();\n         AppModule appModule = jmh.getMetadataCompleteModules(tempFile.getAbsolutePath());\n         if(!tempFile.delete()) {\n@@ -411,7 +413,7 @@ public JavaEEApplicationInfo introspectJeeArchive(URL artifactURL) throws Contri\n             webModuleInfo.setModuleName(wm.getModuleId());\n             appInfo.getWebModuleInfos().put(wm.getModuleId(), webModuleInfo);\n         }\n-        \n+\n         return appInfo;\n     }\n }"
            },
            {
                "sha": "ec185503fa88bbd7b0fa10cc6b9bd121ad81c41e",
                "filename": "modules/host-openejb/pom.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/host-openejb/pom.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/host-openejb/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/host-openejb/pom.xml?ref=9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac",
                "patch": "@@ -7,15 +7,15 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n- * under the License.    \n+ * under the License.\n -->\n <project>\n     <modelVersion>4.0.0</modelVersion>\n@@ -34,11 +34,11 @@\n             <artifactId>tuscany-host-ejb</artifactId>\n             <version>1.5-SNAPSHOT</version>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>org.apache.geronimo.modules</groupId>\n             <artifactId>geronimo-openejb</artifactId>\n-            <version>2.1.1</version>\n+            <version>2.1.4</version>\n             <exclusions>\n                 <exclusion>\n                     <groupId>org.apache.geronimo.modules</groupId>\n@@ -66,13 +66,13 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>backport-util-concurrent</groupId>\n             <artifactId>backport-util-concurrent</artifactId>\n             <version>3.1</version>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>asm</groupId>\n             <artifactId>asm-all</artifactId>"
            },
            {
                "sha": "3f207b6ad2849db04d811e227d34a3686d4e299a",
                "filename": "modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java",
                "status": "modified",
                "additions": 39,
                "deletions": 28,
                "changes": 67,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java?ref=9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac",
                "patch": "@@ -6,21 +6,22 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n- * under the License.    \n+ * under the License.\n  */\n package org.apache.tuscany.sca.implementation.ejb.xml;\n \n import static javax.xml.stream.XMLStreamConstants.END_ELEMENT;\n \n import java.net.URI;\n+import java.util.logging.Logger;\n \n import javax.xml.namespace.QName;\n import javax.xml.stream.XMLStreamException;\n@@ -32,6 +33,7 @@\n import org.apache.tuscany.sca.assembly.builder.impl.ProblemImpl;\n import org.apache.tuscany.sca.assembly.xml.Constants;\n import org.apache.tuscany.sca.contribution.ModelFactoryExtensionPoint;\n+import org.apache.tuscany.sca.contribution.jee.EjbInfo;\n import org.apache.tuscany.sca.contribution.jee.EjbModuleInfo;\n import org.apache.tuscany.sca.contribution.jee.JavaEEExtension;\n import org.apache.tuscany.sca.contribution.jee.JavaEEOptionalExtension;\n@@ -64,15 +66,16 @@\n  */\n public class EJBImplementationProcessor extends BaseStAXArtifactProcessor implements StAXArtifactProcessor<EJBImplementation> {\n     private static final QName IMPLEMENTATION_EJB = new QName(Constants.SCA10_NS, \"implementation.ejb\");\n-    \n+    private static final Logger logger = Logger.getLogger(EJBImplementationProcessor.class.getName());\n+\n     private AssemblyFactory assemblyFactory;\n     private EJBImplementationFactory implementationFactory;\n     private Monitor monitor;\n     private JavaEEExtension jeeExtension;\n     private JavaEEOptionalExtension jeeOptionalExtension;\n     private JavaImplementationFactory javaImplementationFactory;\n     private JavaInterfaceFactory javaInterfaceFactory;\n-    \n+\n     public EJBImplementationProcessor(ModelFactoryExtensionPoint modelFactories, Monitor monitor) {\n         this.assemblyFactory = modelFactories.getFactory(AssemblyFactory.class);\n         this.implementationFactory = modelFactories.getFactory(EJBImplementationFactory.class);\n@@ -86,7 +89,7 @@ public EJBImplementationProcessor(ModelFactoryExtensionPoint modelFactories, Mon\n         javaImplementationFactory.addClassVisitor(new PropertyProcessor(assemblyFactory));\n         javaImplementationFactory.addClassVisitor(new ServiceProcessor(assemblyFactory, javaInterfaceFactory));\n     }\n-    \n+\n     /**\n      * Report a error.\n      *\n@@ -112,7 +115,7 @@ public QName getArtifactType() {\n     }\n \n     public EJBImplementation read(XMLStreamReader reader) throws ContributionReadException, XMLStreamException {\n-        \n+\n         // Read an <implementation.ejb> element\n         EJBImplementation implementation = implementationFactory.createEJBImplementation();\n         implementation.setUnresolved(true);\n@@ -121,8 +124,8 @@ public EJBImplementation read(XMLStreamReader reader) throws ContributionReadExc\n         String ejbLink = getString(reader, \"ejb-link\");\n         if (ejbLink != null) {\n             implementation.setEJBLink(ejbLink);\n-            \n-            // Set the URI of the component type \n+\n+            // Set the URI of the component type\n             //implementation.setURI(ejbLink.replace('#', '/'));\n             int hashPosition = ejbLink.indexOf('#');\n             if (hashPosition >= 0) {\n@@ -140,12 +143,12 @@ public EJBImplementation read(XMLStreamReader reader) throws ContributionReadExc\n                 break;\n             }\n         }\n-        \n+\n         return implementation;\n     }\n \n     public void resolve(EJBImplementation implementation, ModelResolver resolver) throws ContributionResolveException {\n-        \n+\n         // Resolve the component type\n         String uri = implementation.getURI();\n         String ejbLink = implementation.getEJBLink();\n@@ -155,11 +158,11 @@ public void resolve(EJBImplementation implementation, ModelResolver resolver) th\n             EjbModuleInfo ejbModuleInfo = new EjbModuleInfoImpl();\n             ejbModuleInfo.setUri(URI.create(module));\n             ejbModuleInfo = resolver.resolveModel(EjbModuleInfo.class, ejbModuleInfo);\n-            \n+\n             if(jeeExtension != null) {\n                 ComponentType ct = jeeExtension.createImplementationEjbComponentType(ejbModuleInfo, beanName);\n                 // TODO - SL - TUSCANY-2944 - these new JEE processors are causing problems with existing contributions\n-                //        ct is null if there is no EJBInfo \n+                //        ct is null if there is no EJBInfo\n                 if (ct != null){\n                     implementation.getServices().addAll(ct.getServices());\n                 }\n@@ -168,46 +171,54 @@ public void resolve(EJBImplementation implementation, ModelResolver resolver) th\n             if(jeeOptionalExtension != null) {\n                 ComponentType ct = jeeOptionalExtension.createImplementationEjbComponentType(ejbModuleInfo, beanName);\n                 // TODO - SL - TUSCANY-2944 - these new JEE processors are causing problems with existing contributions\n-                //              ct is null if there is no EJBInfo  \n+                //              ct is null if there is no EJBInfo\n                 if (ct != null){\n                     implementation.getReferences().addAll(ct.getReferences());\n                     implementation.getProperties().addAll(ct.getProperties());\n                 }\n             }\n \n-            // Introspection of bean class\n-            Class<?> beanClass = ejbModuleInfo.getEjbInfo(uri).beanClass;\n-            try {\n-                JavaImplementation ji = javaImplementationFactory.createJavaImplementation(beanClass);\n-                implementation.getReferences().addAll(ji.getReferences());\n-                implementation.getProperties().addAll(ji.getProperties());\n-                implementation.getServices().addAll(ji.getServices());\n-            } catch (IntrospectionException e) {\n-                // TODO Auto-generated catch block\n-                e.printStackTrace();\n+            EjbInfo ejbInfo = ejbModuleInfo.getEjbInfo(uri);\n+            if (ejbInfo == null) {\n+                // FIXME:\n+                logger.severe(\"EJB \" + uri + \" is not found in the module\");\n+                // throw new ContributionResolveException(\"EJB \" + uri + \" is not found in the module\");\n+            } else {\n+                // Introspection of bean class\n+                Class<?> beanClass = ejbInfo.beanClass;\n+                try {\n+                    JavaImplementation ji = javaImplementationFactory.createJavaImplementation(beanClass);\n+                    implementation.getReferences().addAll(ji.getReferences());\n+                    implementation.getProperties().addAll(ji.getProperties());\n+                    implementation.getServices().addAll(ji.getServices());\n+                } catch (IntrospectionException e) {\n+                    // TODO Auto-generated catch block\n+                    e.printStackTrace();\n+                }\n             }\n-            \n+\n             // Process componentType side file\n             ComponentType componentType = assemblyFactory.createComponentType();\n             componentType.setURI(uri + \".componentType\");\n             componentType = resolver.resolveModel(ComponentType.class, componentType);\n             if (!componentType.isUnresolved()) {\n-                \n+\n                 // Initialize the implementation's services, references and properties\n                 implementation.getServices().addAll(componentType.getServices());\n                 implementation.getReferences().addAll(componentType.getReferences());\n                 implementation.getProperties().addAll(componentType.getProperties());\n             }\n         }\n+\n         implementation.setUnresolved(false);\n     }\n \n     public void write(EJBImplementation implementation, XMLStreamWriter writer) throws ContributionWriteException, XMLStreamException {\n-        \n+\n         // Write <implementation.ejb>\n         writeStart(writer, IMPLEMENTATION_EJB.getNamespaceURI(), IMPLEMENTATION_EJB.getLocalPart(),\n                                  new XAttr(\"ejb-link\", implementation.getEJBLink()));\n-        \n+\n         writeEnd(writer);\n     }\n }"
            },
            {
                "sha": "170cd00fc7aa2c08349e1df7ae4d2dc251732652",
                "filename": "tutorials/store/catalog-ejb/pom.xml",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/tutorials/store/catalog-ejb/pom.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/tutorials/store/catalog-ejb/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/tutorials/store/catalog-ejb/pom.xml?ref=9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac",
                "patch": "@@ -7,9 +7,9 @@\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n-    \n+\n      http://www.apache.org/licenses/LICENSE-2.0\n-    \n+\n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -38,7 +38,7 @@\n             <version>1.0</version>\n             <scope>provided</scope>\n         </dependency>\n-        \n+\n         <dependency>\n             <groupId>junit</groupId>\n             <artifactId>junit</artifactId>\n@@ -49,7 +49,7 @@\n         <dependency>\n             <groupId>org.apache.geronimo.modules</groupId>\n             <artifactId>geronimo-openejb</artifactId>\n-            <version>2.1.1</version>\n+            <version>2.1.4</version>\n             <scope>test</scope>\n             <exclusions>\n                 <exclusion>\n@@ -87,7 +87,7 @@\n                 <exclusion>\n                     <groupId>com.sun.xml.bind</groupId>\n                     <artifactId>jaxb-impl</artifactId>\n-                </exclusion>                \n+                </exclusion>\n             </exclusions>\n         </dependency>\n "
            },
            {
                "sha": "590fd91c5fbd336fee91ec19b3094561802f6c62",
                "filename": "tutorials/store/store-test/pom.xml",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/tutorials/store/store-test/pom.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac/tutorials/store/store-test/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/tutorials/store/store-test/pom.xml?ref=9ed5cfb04e76ec9ef8eb6f595f19484f31cd4fac",
                "patch": "@@ -7,15 +7,15 @@\n     * to you under the Apache License, Version 2.0 (the\n     * \"License\"); you may not use this file except in compliance\n     * with the License.  You may obtain a copy of the License at\n-    * \n+    *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n-    * \n+    *\n     * Unless required by applicable law or agreed to in writing,\n     * software distributed under the License is distributed on an\n     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     * KIND, either express or implied.  See the License for the\n     * specific language governing permissions and limitations\n-    * under the License.    \n+    * under the License.\n -->\n <project>\n     <modelVersion>4.0.0</modelVersion>\n@@ -137,6 +137,13 @@\n             <scope>runtime</scope>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.apache.tuscany.sca</groupId>\n+            <artifactId>tuscany-contribution-jee-impl</artifactId>\n+            <version>1.5-SNAPSHOT</version>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.apache.tuscany.sca</groupId>\n             <artifactId>tuscany-implementation-ejb</artifactId>\n@@ -166,7 +173,7 @@\n         </dependency>\n \n     </dependencies>\n-    \n+\n     <build>\n        <finalName>${artifactId}</finalName>\n        <testSourceDirectory>${basedir}</testSourceDirectory>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/97bc3aa7fa003e685e2eef7c59616e910edcf3a2",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/3d5a420f3c33ec8bad1f6a18e0d5e7229462e670",
        "message": "TUSCANY-2944 don't raise NPE if the component type model cannot be determined\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@759149 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_51",
        "file": [
            {
                "sha": "cfdf0790d2c8451d1c5b2d2930e6f1bc21ee1ceb",
                "filename": "modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java",
                "status": "modified",
                "additions": 11,
                "deletions": 3,
                "changes": 14,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/97bc3aa7fa003e685e2eef7c59616e910edcf3a2/modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/97bc3aa7fa003e685e2eef7c59616e910edcf3a2/modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/implementation-ejb/src/main/java/org/apache/tuscany/sca/implementation/ejb/xml/EJBImplementationProcessor.java?ref=97bc3aa7fa003e685e2eef7c59616e910edcf3a2",
                "patch": "@@ -140,13 +140,21 @@ public void resolve(EJBImplementation implementation, ModelResolver resolver) th\n             \n             if(jeeExtension != null) {\n                 ComponentType ct = jeeExtension.createImplementationEjbComponentType(ejbModuleInfo, ejbLink);\n-                implementation.getServices().addAll(ct.getServices());\n+                // TODO - SL - TUSCANY-2944 - these new JEE processors are causing problems with existing contributions\n+                //        ct is null if there is no EJBInfo \n+                if (ct != null){\n+                    implementation.getServices().addAll(ct.getServices());\n+                }\n             }\n \n             if(jeeOptionalExtension != null) {\n                 ComponentType ct = jeeOptionalExtension.createImplementationEjbComponentType(ejbModuleInfo, ejbLink);\n-                implementation.getReferences().addAll(ct.getReferences());\n-                implementation.getProperties().addAll(ct.getProperties());\n+                // TODO - SL - TUSCANY-2944 - these new JEE processors are causing problems with existing contributions\n+                //              ct is null if there is no EJBInfo  \n+                if (ct != null){\n+                    implementation.getReferences().addAll(ct.getReferences());\n+                    implementation.getProperties().addAll(ct.getProperties());\n+                }\n             }\n \n             // TODO: Introspection of bean class"
            },
            {
                "sha": "69590ee80ec729cc3ba1e12f2dc2e442246b9944",
                "filename": "tutorials/store/store-test/test/StoreSupplierTestCase.java",
                "status": "modified",
                "additions": 15,
                "deletions": 0,
                "changes": 15,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/97bc3aa7fa003e685e2eef7c59616e910edcf3a2/tutorials/store/store-test/test/StoreSupplierTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/97bc3aa7fa003e685e2eef7c59616e910edcf3a2/tutorials/store/store-test/test/StoreSupplierTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/tutorials/store/store-test/test/StoreSupplierTestCase.java?ref=97bc3aa7fa003e685e2eef7c59616e910edcf3a2",
                "patch": "@@ -19,6 +19,8 @@\n \n package test;\n \n+import java.io.IOException;\n+\n import junit.framework.Assert;\n import junit.framework.TestCase;\n \n@@ -28,6 +30,7 @@\n import org.apache.tuscany.sca.node.launcher.NodeLauncher;\n import org.junit.After;\n import org.junit.Before;\n+import org.junit.Ignore;\n import org.junit.Test;\n import org.junit.Ignore;\n \n@@ -76,6 +79,18 @@ public void tearDown() throws Exception {\n         domainManager.stop();\n     }\n     \n+/*    \n+    @Test\n+    public void testWaitForInput() {\n+        try {\n+            System.out.println(\"press enter to continue)\");\n+            System.in.read();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+*/\n+    \n     @Test\n     public void testShop() {\n         SCAClient client = (SCAClient)storeClientNode;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/a66ce832876d8715e5957356897aedc1a3f43dbb",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/9a87ad9aecd81a8d29c6f236de432792e290b82b",
        "message": "Make sure resource factory gets set before use to avoid any NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@743780 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_52",
        "file": [
            {
                "sha": "c5cc5998ce021d1ac2a0dacb3bc9495efba33c8f",
                "filename": "modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/RRBJMSBindingInvoker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/a66ce832876d8715e5957356897aedc1a3f43dbb/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/RRBJMSBindingInvoker.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/a66ce832876d8715e5957356897aedc1a3f43dbb/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/RRBJMSBindingInvoker.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/RRBJMSBindingInvoker.java?ref=a66ce832876d8715e5957356897aedc1a3f43dbb",
                "patch": "@@ -188,14 +188,14 @@ protected Destination lookupDestinationQueue(boolean isReponseQueue) throws Nami\n         try {\n             // populate the message context with JMS binding information\n             JMSBindingContext context = new JMSBindingContext();\n+            context.setJmsResourceFactory(jmsResourceFactory);\n             tuscanyMsg.setBindingContext(context);\n             \n             // get a jms session to cover the creation and sending of the message\n             Session session = context.getJmsSession();\n \n             context.setRequestDestination(getRequestDestination(tuscanyMsg, session));\n             context.setReplyToDestination(getReplyToDestination(session));\n-            context.setJmsResourceFactory(jmsResourceFactory);\n             \n             try {\n                 tuscanyMsg = runtimeWire.getBindingInvocationChain().getHeadInvoker().invoke(tuscanyMsg);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/662cad536b3db9e770ae82f893de8ad2f17c274e",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/a869196a95b0bfade97a4b8ccafd1e60caa39a9b",
        "message": "TUSCANY-2799 Fix NPE in JMS Object wire format when a null object is returned. Add a test also.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@741535 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_53",
        "file": [
            {
                "sha": "e0611f3ddca30e11fb8890eb59e77dbefea7f556",
                "filename": "itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldReferenceImpl.java",
                "status": "modified",
                "additions": 8,
                "deletions": 1,
                "changes": 9,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldReferenceImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldReferenceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldReferenceImpl.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -31,8 +31,15 @@ public String getGreetings(String firstName, String lastName){\n     \tperson.setFirstName(firstName);\n     \tperson.setLastName(lastName);\n         Person returnPerson =  helloWorldService.getGreetings(person); \n+        Person returnNullPerson = helloWorldService.getNullGreetings(person); \n         \n-        return returnPerson.getFirstName() + \" \" + returnPerson.getLastName();\n+        String returnString = returnPerson.getFirstName() + \" \" + returnPerson.getLastName();\n+        \n+        if (returnNullPerson == null){\n+            returnString += \" null\";\n+        }\n+        \n+        return returnString;\n     }    \n }\n "
            },
            {
                "sha": "fdbc894d3cc6eeda1c93e9d71949eaf4774316cf",
                "filename": "itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldService.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldService.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldService.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldService.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -27,6 +27,7 @@\n public interface HelloWorldService {\n \n     public Person getGreetings(Person person);\n+    public Person getNullGreetings(Person person);\n     \n }\n "
            },
            {
                "sha": "73f415cc3f9d33d2e14bc3277145c9e9e272d776",
                "filename": "itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldServiceImpl.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldServiceImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/jms-format/src/main/java/org/apache/tuscany/sca/binding/jms/format/jmsobject/helloworld/HelloWorldServiceImpl.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -28,5 +28,9 @@ public Person getGreetings(Person person){\n     \t\n         return person;\n     }\n+    \n+    public Person getNullGreetings(Person person){      \n+        return null;\n+    }    \n }\n "
            },
            {
                "sha": "aa34a53d0136dbf0b8acceb5263b2a36fd851bde",
                "filename": "itest/jms-format/src/test/java/org/apache/tuscany/sca/binding/jms/format/FormatJMSObjectTestCase.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/test/java/org/apache/tuscany/sca/binding/jms/format/FormatJMSObjectTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/itest/jms-format/src/test/java/org/apache/tuscany/sca/binding/jms/format/FormatJMSObjectTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/jms-format/src/test/java/org/apache/tuscany/sca/binding/jms/format/FormatJMSObjectTestCase.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -52,7 +52,7 @@ public void testHelloWorldCreate() throws Exception {\n         HelloWorldReference helloWorldService = ((SCAClient) node).getService(\n                 HelloWorldReference.class, \"HelloWorldReferenceComponent\");\n \n-        assertEquals(\"Hello Fred Hello Bloggs\", \n+        assertEquals(\"Hello Fred Hello Bloggs null\", \n                      helloWorldService.getGreetings(\"Fred\", \"Bloggs\"));\n \n     }"
            },
            {
                "sha": "457b519051f3dec113d980e04d058548a979e81f",
                "filename": "modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/BytesMessageProcessor.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/BytesMessageProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/BytesMessageProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/BytesMessageProcessor.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -63,7 +63,11 @@ protected Message createJMSMessage(Session session, Object o) {\n             // TODO - an experiment. How to enforce a single\n             //        byte array parameter\n             BytesMessage message = session.createBytesMessage();\n-            message.writeBytes((byte[])o); \n+            \n+            if (o != null){\n+                message.writeBytes((byte[])o); \n+            }\n+            \n             return message;\n \n         } catch (JMSException e) {"
            },
            {
                "sha": "781d9fc93c864b89c37f160bca5587fd16d7d614",
                "filename": "modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/ObjectMessageProcessor.java",
                "status": "modified",
                "additions": 9,
                "deletions": 5,
                "changes": 14,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/ObjectMessageProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/ObjectMessageProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/ObjectMessageProcessor.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -54,12 +54,16 @@ protected Object extractPayload(Message msg) {\n     protected Message createJMSMessage(Session session, Object o) {\n         try {\n \n-            if (!(o instanceof Serializable)) {\n-                throw new IllegalStateException(\"JMS ObjectMessage payload not Serializable: \" + o);\n-            }\n-\n             ObjectMessage message = session.createObjectMessage();\n-            message.setObject((Serializable)o);\n+            \n+            if (o != null){\n+                if (!(o instanceof Serializable)) {\n+                    throw new IllegalStateException(\"JMS ObjectMessage payload not Serializable: \" + o);\n+                }\n+    \n+                message.setObject((Serializable)o);\n+            }\n+            \n             return message;\n \n         } catch (JMSException e) {"
            },
            {
                "sha": "b87a206f03267258302ee2265dc96b41e48004b9",
                "filename": "modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/TextMessageProcessor.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/TextMessageProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/TextMessageProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/TextMessageProcessor.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -57,7 +57,11 @@ protected Message createJMSMessage(Session session, Object o) {\n         try {\n \n             TextMessage message = session.createTextMessage();\n-            message.setText(String.valueOf(o));\n+            \n+            if (o != null){\n+                message.setText(String.valueOf(o));\n+            }\n+            \n             return message;\n \n         } catch (JMSException e) {"
            },
            {
                "sha": "f4eaa78eecce74374e105b1a7f42bee6266c6990",
                "filename": "modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/wireformat/jmsobject/runtime/WireFormatJMSObjectServiceInterceptor.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/wireformat/jmsobject/runtime/WireFormatJMSObjectServiceInterceptor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/662cad536b3db9e770ae82f893de8ad2f17c274e/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/wireformat/jmsobject/runtime/WireFormatJMSObjectServiceInterceptor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/wireformat/jmsobject/runtime/WireFormatJMSObjectServiceInterceptor.java?ref=662cad536b3db9e770ae82f893de8ad2f17c274e",
                "patch": "@@ -93,12 +93,11 @@ public Message invokeResponse(Message msg) {\n         JMSBindingContext context = msg.getBindingContext();\n         Session session = context.getJmsSession();\n \n-        javax.jms.Message responseJMSMsg;\n+        javax.jms.Message responseJMSMsg = null;\n         if (msg.isFault()) {\n             responseJMSMsg = responseMessageProcessor.createFaultMessage(session, (Throwable)msg.getBody());\n         } else {\n-            Object response = msg.getBody();\n-            responseJMSMsg = responseMessageProcessor.insertPayloadIntoJMSMessage(session, response);\n+            responseJMSMsg = responseMessageProcessor.insertPayloadIntoJMSMessage(session, msg.getBody());\n         } \n     \n         msg.setBody(responseJMSMsg);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/32f9479ec441f254843befbcb15455377b083da8",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/890f33d586a7e01b952fab383af384d05481bc75",
        "message": "TUSCANY-2701  NPE when verifying conformance item ASM60006 in OASIS sepc\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@741186 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_54",
        "file": [
            {
                "sha": "1ee6ad0831088db49da6436599de9c28f3f5ba54",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseConfigurationBuilderImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/32f9479ec441f254843befbcb15455377b083da8/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseConfigurationBuilderImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/32f9479ec441f254843befbcb15455377b083da8/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseConfigurationBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/BaseConfigurationBuilderImpl.java?ref=32f9479ec441f254843befbcb15455377b083da8",
                "patch": "@@ -619,7 +619,7 @@ private void indexComponentPropertiesServicesAndReferences(Component component,\n         }\n         for (ComponentReference componentReference : component.getReferences()) {\n             if (componentReferences.containsKey(componentReference.getName())) {\n-                warning(\"DuplicateComponentReferenceName\", component, component.getName(), componentReference.getName());\n+                error(\"DuplicateComponentReferenceName\", component, component.getName(), componentReference.getName());\n             } else {\n                 componentReferences.put(componentReference.getName(), componentReference);\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/538beb125ed779a7e484e10e9521db9517d6d454",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/37853e9e1ac1caf524ba5cecc6aed6bc52afa829",
        "message": "Add some extension point definitions to allow the JMS service binding provider to find them instead of failing with an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@709231 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_55",
        "file": [
            {
                "sha": "50dfcdf9a02f7c741c3aed3021019772976f93de",
                "filename": "modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.OperationSelectorProviderFactory",
                "status": "added",
                "additions": 19,
                "deletions": 0,
                "changes": 19,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/538beb125ed779a7e484e10e9521db9517d6d454/modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.OperationSelectorProviderFactory",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/538beb125ed779a7e484e10e9521db9517d6d454/modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.OperationSelectorProviderFactory",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.OperationSelectorProviderFactory?ref=538beb125ed779a7e484e10e9521db9517d6d454",
                "patch": "@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\r\n+# or more contributor license agreements.  See the NOTICE file\r\n+# distributed with this work for additional information\r\n+# regarding copyright ownership.  The ASF licenses this file\r\n+# to you under the Apache License, Version 2.0 (the\r\n+# \"License\"); you may not use this file except in compliance\r\n+# with the License.  You may obtain a copy of the License at\r\n+# \r\n+#   http://www.apache.org/licenses/LICENSE-2.0\r\n+# \r\n+# Unless required by applicable law or agreed to in writing,\r\n+# software distributed under the License is distributed on an\r\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+# KIND, either express or implied.  See the License for the\r\n+# specific language governing permissions and limitations\r\n+# under the License. \r\n+\r\n+# Implementation class for the binding extension\r\n+org.apache.tuscany.sca.binding.jms.operationselector.jmsdefault.OperationSelectorJMSDefaultProviderFactory;model=org.apache.tuscany.sca.binding.jms.operationselector.jmsdefault.OperationSelectorJMSDefault\r"
            },
            {
                "sha": "3658a30bb678b5ba2a9ba73c298fb063a4f0f0d7",
                "filename": "modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.WireFormatProviderFactory",
                "status": "added",
                "additions": 20,
                "deletions": 0,
                "changes": 20,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/538beb125ed779a7e484e10e9521db9517d6d454/modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.WireFormatProviderFactory",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/538beb125ed779a7e484e10e9521db9517d6d454/modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.WireFormatProviderFactory",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/resources/META-INF/services/org.apache.tuscany.sca.provider.WireFormatProviderFactory?ref=538beb125ed779a7e484e10e9521db9517d6d454",
                "patch": "@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\r\n+# or more contributor license agreements.  See the NOTICE file\r\n+# distributed with this work for additional information\r\n+# regarding copyright ownership.  The ASF licenses this file\r\n+# to you under the Apache License, Version 2.0 (the\r\n+# \"License\"); you may not use this file except in compliance\r\n+# with the License.  You may obtain a copy of the License at\r\n+# \r\n+#   http://www.apache.org/licenses/LICENSE-2.0\r\n+# \r\n+# Unless required by applicable law or agreed to in writing,\r\n+# software distributed under the License is distributed on an\r\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+# KIND, either express or implied.  See the License for the\r\n+# specific language governing permissions and limitations\r\n+# under the License. \r\n+\r\n+# Implementation class for the binding extension\r\n+org.apache.tuscany.sca.binding.jms.wireformat.jmsdefault.WireFormatJMSDefaultProviderFactory;model=org.apache.tuscany.sca.binding.jms.wireformat.jmsdefault.WireFormatJMSDefault\r\n+org.apache.tuscany.sca.binding.jms.wireformat.bytes.WireFormatJMSDBytesProviderFactory;model=org.apache.tuscany.sca.binding.jms.wireformat.bytes.WireFormatJMSBytes\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/092c8dc8c63da1ba691647a9e7611abc157bc63e",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/4bfee0249c0d066acf5375744dfaef4c85804d4c",
        "message": "Guard against an NPE when the reference interface contract hasn't been resolved yet\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@691218 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_56",
        "file": [
            {
                "sha": "7ec3f2d60ac56d842e69a7914ffa5ccc5448f726",
                "filename": "modules/binding-sca/src/main/java/org/apache/tuscany/sca/binding/sca/impl/RuntimeSCAReferenceBindingProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/092c8dc8c63da1ba691647a9e7611abc157bc63e/modules/binding-sca/src/main/java/org/apache/tuscany/sca/binding/sca/impl/RuntimeSCAReferenceBindingProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/092c8dc8c63da1ba691647a9e7611abc157bc63e/modules/binding-sca/src/main/java/org/apache/tuscany/sca/binding/sca/impl/RuntimeSCAReferenceBindingProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-sca/src/main/java/org/apache/tuscany/sca/binding/sca/impl/RuntimeSCAReferenceBindingProvider.java?ref=092c8dc8c63da1ba691647a9e7611abc157bc63e",
                "patch": "@@ -125,7 +125,7 @@ private ReferenceBindingProvider getDistributedProvider() {\n         if (isTargetRemote()) {\n             // initialize the remote provider if it hasn't been done already\n             if (distributedProvider == null) {\n-                if (!reference.getInterfaceContract().getInterface().isRemotable()) {\n+                if (reference.getInterfaceContract() != null && !reference.getInterfaceContract().getInterface().isRemotable()) {\n                     throw new IllegalStateException(\"Reference interface not remotable for component: \" + component\n                         .getName()\n                         + \" and reference: \""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/4bfee0249c0d066acf5375744dfaef4c85804d4c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/9a20d460e7ab58e2b17bf2d72e94933bf2614c73",
        "message": "Try to avoid an NPE in JMS binding when the refernce interface contarct is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@691217 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_57",
        "file": [
            {
                "sha": "020829def69315763f41f312484932e2440b54bb",
                "filename": "modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSBindingReferenceBindingProvider.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/4bfee0249c0d066acf5375744dfaef4c85804d4c/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSBindingReferenceBindingProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/4bfee0249c0d066acf5375744dfaef4c85804d4c/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSBindingReferenceBindingProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms-runtime/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSBindingReferenceBindingProvider.java?ref=4bfee0249c0d066acf5375744dfaef4c85804d4c",
                "patch": "@@ -90,7 +90,11 @@ public boolean supportsOneWayInvocation() {\n     }\n \n     public InterfaceContract getBindingInterfaceContract() {\n-        return reference.getInterfaceContract();\n+        if (reference.getInterfaceContract() == null) {\n+            return reference.getReference().getInterfaceContract();\n+        } else {\n+            return reference.getInterfaceContract();\n+        }\n     }\n \n     public void start() {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/80be4589a2a43ea828cd3c76001d9041cfd064a7",
        "message": "TUSCANY-2242: Apply patch from Ramkumar Ramalingam for Incorrent port name in wsdlElement leads to NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@690913 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_58",
        "file": [
            {
                "sha": "218dbc47c469734feee3102a7e057d2e68104422",
                "filename": "itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworld.wsdl",
                "status": "added",
                "additions": 92,
                "deletions": 0,
                "changes": 92,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworld.wsdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworld.wsdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworld.wsdl?ref=8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be",
                "patch": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ * \r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ * \r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+-->\r\n+<wsdl:definitions targetNamespace=\"http://helloworld\" xmlns:tns=\"http://helloworld\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsdlsoap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\r\n+\tname=\"helloworld\">\r\n+\r\n+    <wsdl:types>\r\n+        <schema elementFormDefault=\"qualified\" targetNamespace=\"http://helloworld\" xmlns=\"http://www.w3.org/2001/XMLSchema\">\r\n+\r\n+            <element name=\"getGreetings\">\r\n+                <complexType>\r\n+                    <sequence>\r\n+                        <element name=\"name\" type=\"xsd:string\"/>\r\n+                    </sequence>\r\n+                </complexType>\r\n+            </element>\r\n+\r\n+            <element name=\"getGreetingsResponse\">\r\n+                <complexType>\r\n+                    <sequence>\r\n+                        <element name=\"getGreetingsReturn\" type=\"xsd:string\"/>\r\n+                    </sequence>\r\n+                </complexType>\r\n+            </element>\r\n+            \r\n+        </schema>\r\n+    </wsdl:types>\r\n+\r\n+    <wsdl:message name=\"getGreetingsRequest\">\r\n+        <wsdl:part element=\"tns:getGreetings\" name=\"parameters\"/>\r\n+    </wsdl:message>\r\n+\r\n+    <wsdl:message name=\"getGreetingsResponse\">\r\n+        <wsdl:part element=\"tns:getGreetingsResponse\" name=\"parameters\"/>\r\n+    </wsdl:message>\r\n+\r\n+    <wsdl:portType name=\"HelloWorld\">\r\n+        <wsdl:operation name=\"getGreetings\">\r\n+            <wsdl:input message=\"tns:getGreetingsRequest\" name=\"getGreetingsRequest\"/>\r\n+            <wsdl:output message=\"tns:getGreetingsResponse\" name=\"getGreetingsResponse\"/>\r\n+        </wsdl:operation>\r\n+    </wsdl:portType>\r\n+\r\n+    <wsdl:binding name=\"HelloWorldSoapBinding\" type=\"tns:HelloWorld\">\r\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\r\n+        <wsdl:operation name=\"getGreetings\">\r\n+            <wsdlsoap:operation soapAction=\"\"/>\r\n+            <wsdl:input name=\"getGreetingsRequest\">\r\n+                <wsdlsoap:body use=\"literal\"/>\r\n+            </wsdl:input>\r\n+            <wsdl:output name=\"getGreetingsResponse\">\r\n+                <wsdlsoap:body use=\"literal\"/>\r\n+            </wsdl:output>\r\n+        </wsdl:operation>\r\n+    </wsdl:binding>\r\n+\r\n+    <wsdl:binding name=\"HelloWorldSoapJmsBinding\" type=\"tns:HelloWorld\">\r\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/jms\"/>\r\n+        <wsdl:operation name=\"getGreetings\">\r\n+            <wsdlsoap:operation soapAction=\"\"/>\r\n+            <wsdl:input name=\"getGreetingsRequest\">\r\n+                <wsdlsoap:body use=\"literal\"/>\r\n+            </wsdl:input>\r\n+            <wsdl:output name=\"getGreetingsResponse\">\r\n+                <wsdlsoap:body use=\"literal\"/>\r\n+            </wsdl:output>\r\n+        </wsdl:operation>\r\n+    </wsdl:binding>\r\n+\r\n+    <wsdl:service name=\"HelloWorldService\">\r\n+        <wsdl:port binding=\"tns:HelloWorldSoapBinding\" name=\"HelloWorldSoapPort\">\r\n+            <wsdlsoap:address location=\"http://localhost:8085/HelloWorldService\"/>\r\n+        </wsdl:port>\r\n+    </wsdl:service>\r\n+\r\n+</wsdl:definitions>\r"
            },
            {
                "sha": "5975c27663200837c38043b0b8deb7e272721adc",
                "filename": "itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworldwsclient.composite",
                "status": "added",
                "additions": 45,
                "deletions": 0,
                "changes": 45,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworldwsclient.composite",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworldwsclient.composite",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworldwsclient.composite?ref=8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be",
                "patch": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ * \r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ * \r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+-->\r\n+<composite xmlns=\"http://www.osoa.org/xmlns/sca/1.0\"\r\n+\ttargetNamespace=\"http://helloworld\"\r\n+\txmlns:hw=\"http://helloworld\"\r\n+\tname=\"helloworldwsclient\">\r\n+    \r\n+    <!-- A component with an embedded reference definition connecting to an external webservice \r\n+         The wsdl interface for the reference is derived from the information specified by the 'wsdlElement'\r\n+     -->\r\n+    <component name=\"HelloTuscanyServiceComponent\">\r\n+      <implementation.java class=\"binding.jms.HelloWorldServiceImpl\"/>\r\n+      <reference name=\"helloWorldService\">\r\n+        <binding.ws wsdlElement=\"http://helloworld#wsdl.port(HelloWorldService/HelloWorldSoapPort2)\"/>\r\n+      </reference>\r\n+    </component>\r\n+    \r\n+    <!-- A component with a reference promoted as a composite reference -->\r\n+    <component name=\"HelloWorldServiceComponent\">\r\n+      <implementation.java class=\"binding.jms.HelloWorldServiceImpl\"/>\r\n+    </component>\r\n+    \r\n+    <reference name=\"HelloWorldService\" promote=\"HelloWorldServiceComponent/helloWorldService\">\r\n+        <interface.java interface=\"binding.jms.HelloWorldService\" />\r\n+        <binding.ws wsdlElement=\"http://helloworld#wsdl.port(HelloWorldService/HelloWorldSoapPort2)\"/>\r\n+    </reference>\r\n+\r\n+</composite>\r"
            },
            {
                "sha": "1ef5f7b00af61afea4329e89079b25f6216fc72c",
                "filename": "itest/validation/src/test/java/binding/wsxml/WsdlPortTypeDoesNotMatchTestCase.java",
                "status": "added",
                "additions": 60,
                "deletions": 0,
                "changes": 60,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/itest/validation/src/test/java/binding/wsxml/WsdlPortTypeDoesNotMatchTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/itest/validation/src/test/java/binding/wsxml/WsdlPortTypeDoesNotMatchTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/test/java/binding/wsxml/WsdlPortTypeDoesNotMatchTestCase.java?ref=8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be",
                "patch": "@@ -0,0 +1,60 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ * \r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ * \r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package binding.wsxml;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+import org.apache.tuscany.sca.monitor.Monitor;\r\n+import org.apache.tuscany.sca.monitor.Problem;\r\n+import org.apache.tuscany.sca.monitor.logging.impl.DefaultLoggingMonitorImpl;\r\n+\r\n+import domain.CustomCompositeBuilder;\r\n+\r\n+/**\r\n+ * This shows how to test the Calculator service component.\r\n+ */\r\n+public class WsdlPortTypeDoesNotMatchTestCase extends TestCase {\r\n+\t\r\n+    private CustomCompositeBuilder customDomain;\r\n+    \r\n+    @Override\r\n+    protected void setUp() throws Exception \r\n+    {\r\n+        customDomain = CustomCompositeBuilder.getInstance();\r\n+        try {\r\n+             customDomain.loadContribution(\"src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/helloworldwsclient.composite\", \r\n+                       \"TestContribution\", \"src/main/resources/binding/wsxml/WsdlPortTypeDoesNotMatch/\");\r\n+        } catch (Exception ex){\r\n+            //throw ex;\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void tearDown() throws Exception {\r\n+        //node.stop();\r\n+    }\r\n+\r\n+    public void testCalculator() {\r\n+        Monitor monitor = customDomain.getMonitorInstance();\r\n+        Problem problem = ((DefaultLoggingMonitorImpl)monitor).getLastLoggedProblem();\r\n+        \r\n+        assertNotNull(problem);\r\n+        assertEquals(\"WsdlPortTypeDoesNotMatch\", problem.getMessageId()); \r\n+    }\r\n+}\r"
            },
            {
                "sha": "15b58e499ccae1fd4ce5f06c0c173540defc9037",
                "filename": "modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java?ref=8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be",
                "patch": "@@ -348,8 +348,12 @@ public void resolve(WebServiceBinding model, ModelResolver resolver) throws Cont\n                     model.setService(service.getElement());\n                     if (model.getPortName() != null) {\n                         Port port = service.getElement().getPort(model.getPortName());\n-                        model.setPort(port);\n-                        model.setBinding(port.getBinding());\n+                        if (port != null) {\n+                            model.setPort(port);\n+                            model.setBinding(port.getBinding());\n+                        } else {\n+                            warning(\"WsdlPortTypeDoesNotMatch\", wsdlDefinition, model.getPortName());\n+                        }\n                     }\n                 } else {\n                 \twarning(\"WsdlServiceDoesNotMatch\", wsdlDefinition, model.getServiceName());"
            },
            {
                "sha": "2dfa5e61335f8d1c32193974ae6e0d04d4f2829b",
                "filename": "modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be/modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties?ref=8192c1ae4ff0bd5e6719719d57cabeddf3c2c3be",
                "patch": "@@ -21,6 +21,8 @@\n InvalidWsdlElementAttr = Invalid WebService binding wsdlElement attribute: {0}\n MustUseWsdlBinding = {0} must use wsdl.binding when using wsa:EndpointReference\n InvalidInterfaceException = Exception creating interface from WSDL for binding: {0}\n-WsdlBindingDoesNotMatch = The #wsdl.binding({0}) does not match with the WSDL Definitions \n+WsdlBindingDoesNotMatch = The #wsdl.binding({0}) does not match with the WSDL Definitions\n WsdlServiceDoesNotMatch = The #wsdl.service({0}) does not match with the WSDL Definitions\n+WsdlPortTypeDoesNotMatch = The #wsdl.port({0}) does not match with the WSDL Definitions\n+\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/e50d74fc99ff17904f29f7aeef970519b6d7904c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/40641c4323f6ccce34f4a7fd29d90d1998ea95c1",
        "message": "Fixed a number of NPEs when a contribution contains multiple WSDLs in a namespace used by a BPEL process.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/java/sca@686587 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_59",
        "file": [
            {
                "sha": "28651a93bd5d30b9abcbec74011c5918a59b8840",
                "filename": "modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELDocumentProcessor.java",
                "status": "modified",
                "additions": 93,
                "deletions": 76,
                "changes": 169,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e50d74fc99ff17904f29f7aeef970519b6d7904c/modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELDocumentProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e50d74fc99ff17904f29f7aeef970519b6d7904c/modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELDocumentProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELDocumentProcessor.java?ref=e50d74fc99ff17904f29f7aeef970519b6d7904c",
                "patch": "@@ -70,6 +70,7 @@\n     private static final String SCA_BPEL_NS = \"http://docs.oasis-open.org/ns/opencsa/sca-bpel/200801\";\n     private static final String BPEL_NS = \"http://schemas.xmlsoap.org/ws/2004/03/business-process/\";\n     private static final String BPEL_PLINK_NS = \"http://schemas.xmlsoap.org/ws/2004/03/partner-link/\";\n+    private static final String WSDL_NS = \"http://schemas.xmlsoap.org/wsdl/\";\n     private static final QName PROCESS_ELEMENT = new QName(BPEL_NS, \"process\");\n     private static final QName PARTNERLINK_ELEMENT = new QName(BPEL_NS, \"partnerLink\");\n     private static final QName ONEVENT_ELEMENT = new QName(BPEL_NS, \"onEvent\");\n@@ -137,22 +138,22 @@ public void resolve(BPELProcessDefinition model, ModelResolver resolver) throws\n         for (BPELImportElement theImport : theImports) {\n \n             // Deal with WSDL imports\n-            if (theImport.getImportType().equals(\"http://schemas.xmlsoap.org/wsdl/\")) {\n-                String WSDLLocation = theImport.getLocation();\n-                String WSDLNamespace = theImport.getNamespace();\n+            if (theImport.getImportType().equals(WSDL_NS)) {\n+                String wsdlLocation = theImport.getLocation();\n+                String wsdlNamespace = theImport.getNamespace();\n \n                 // Resolve the WSDL definition\n                 WSDLDefinition proxy = WSDLfactory.createWSDLDefinition();\n                 proxy.setUnresolved(true);\n-                proxy.setNamespace(WSDLNamespace);\n-                if (WSDLLocation != null) {\n-                    proxy.setLocation(URI.create(WSDLLocation));\n+                proxy.setNamespace(wsdlNamespace);\n+                if (wsdlLocation != null) {\n+                    proxy.setLocation(URI.create(wsdlLocation));\n                 }\n                 WSDLDefinition resolved = resolver.resolveModel(WSDLDefinition.class, proxy);\n                 if (resolved != null && !resolved.isUnresolved()) {\n                     theImport.setWSDLDefinition(resolved);\n                 } else {\n-                    error(\"CannotResolveWSDLReference\", resolver, WSDLLocation, WSDLNamespace);\n+                    error(\"CannotResolveWSDLReference\", resolver, wsdlLocation, wsdlNamespace);\n                     return;\n                 } // end if\n             } // end if\n@@ -193,48 +194,57 @@ public void resolve(BPELProcessDefinition model, ModelResolver resolver) throws\n         // We must find the partner link type elements from amongst the imported\n         // WSDLs\n         for (BPELImportElement theImport : theImports) {\n-            WSDLDefinition theWSDL = theImport.getWSDLDefinition();\n-            Definition WSDLDefinition = theWSDL.getDefinition();\n-\n-            // The BPEL partnerLinkType elements are extension elements within\n-            // the WSDL\n-            List<ExtensibilityElement> extensibilityElements = WSDLDefinition.getExtensibilityElements();\n-\n-            for (ExtensibilityElement theElement : extensibilityElements) {\n-                QName elementType = theElement.getElementType();\n-                if (elementType.equals(LINKTYPE_ELEMENT)) {\n-                    BPELPartnerLinkTypeExt pLinkExt = (BPELPartnerLinkTypeExt)theElement;\n-                    // Fetch the name of the partnerLinkType\n-                    String name = pLinkExt.getName();\n-                    QName qName = new QName(WSDLDefinition.getTargetNamespace(), name);\n-                    BPELPartnerLinkTypeElement pLinkElement = new BPELPartnerLinkTypeElement(qName);\n-\n-                    // The partnerLinkType must have one and may have 2 role\n-                    // child elements\n-                    int count = 0;\n-                    for (int i = 0; i < 2; i++) {\n-                        if (pLinkExt.getRoleName(i) == null)\n-                            continue;\n-                        PortType pType = WSDLDefinition.getPortType(pLinkExt.getRolePortType(i));\n-                        if (count == 0) {\n-                            pLinkElement.setRole1(pLinkExt.getRoleName(i), pLinkExt.getRolePortType(i), pType);\n-                            count++;\n-                        } else if (count == 1) {\n-                            pLinkElement.setRole2(pLinkExt.getRoleName(i), pLinkExt.getRolePortType(i), pType);\n-                            count++;\n-                        } else {\n-                            break;\n-                        } // end if\n-                    } // end for\n+            if (theImport.getImportType().equals(WSDL_NS)) {\n+\n+                // Find all the WSDL definitions matching the imported namespace\n+                List<Definition> wsdlDefinitions = new ArrayList<Definition>();\n+                WSDLDefinition theWSDL = theImport.getWSDLDefinition();\n+                wsdlDefinitions.add(theWSDL.getDefinition());\n+                for (WSDLDefinition importedWSDL: theWSDL.getImportedDefinitions()) {\n+                    wsdlDefinitions.add(importedWSDL.getDefinition());\n+                }\n \n-                    if (count == 0) {\n-                        error(\"PartnerLinkTypeNoRoles\", theElement, pLinkElement.getName());\n-                        throw new ContributionResolveException(\"partnerLinkType \" + pLinkElement.getName() + \" has no Roles defined\");\n-                    } else\n-                        thePLinks.add(pLinkElement);\n-                } // end if\n+                // The BPEL partnerLinkType elements are extension elements within\n+                // the WSDL definitions\n+                for (Definition wsdlDefinition: wsdlDefinitions) {\n+                    for (ExtensibilityElement theElement : (List<ExtensibilityElement>)wsdlDefinition.getExtensibilityElements()) {\n+                        QName elementType = theElement.getElementType();\n+                        if (elementType.equals(LINKTYPE_ELEMENT)) {\n+                            BPELPartnerLinkTypeExt pLinkExt = (BPELPartnerLinkTypeExt)theElement;\n+                            \n+                            // Fetch the name of the partnerLinkType\n+                            String name = pLinkExt.getName();\n+                            QName qName = new QName(wsdlDefinition.getTargetNamespace(), name);\n+                            BPELPartnerLinkTypeElement pLinkElement = new BPELPartnerLinkTypeElement(qName);\n+\n+                            // The partnerLinkType must have one and may have 2 role\n+                            // child elements\n+                            int count = 0;\n+                            for (int i = 0; i < 2; i++) {\n+                                if (pLinkExt.getRoleName(i) == null)\n+                                    continue;\n+                                PortType pType = wsdlDefinition.getPortType(pLinkExt.getRolePortType(i));\n+                                if (count == 0) {\n+                                    pLinkElement.setRole1(pLinkExt.getRoleName(i), pLinkExt.getRolePortType(i), pType);\n+                                    count++;\n+                                } else if (count == 1) {\n+                                    pLinkElement.setRole2(pLinkExt.getRoleName(i), pLinkExt.getRolePortType(i), pType);\n+                                    count++;\n+                                } else {\n+                                    break;\n+                                } // end if\n+                            } // end for\n+\n+                            if (count == 0) {\n+                                error(\"PartnerLinkTypeNoRoles\", theElement, pLinkElement.getName());\n+                                throw new ContributionResolveException(\"partnerLinkType \" + pLinkElement.getName() + \" has no Roles defined\");\n+                            } else\n+                                thePLinks.add(pLinkElement);\n+                        } // end if\n \n-            } // end for\n+                    } // end for\n+                }\n+            }\n         } // end for\n         return thePLinks;\n     } // end getPartnerLinkTypes\n@@ -253,35 +263,42 @@ public void resolve(BPELProcessDefinition model, ModelResolver resolver) throws\n \n         Collection<PortType> thePortTypes = (Collection<PortType>)new ArrayList<PortType>();\n         for (BPELImportElement theImport : theImports) {\n-            WSDLDefinition theWSDL = theImport.getWSDLDefinition();\n-            Definition wsdlDefinition = theWSDL.getDefinition();\n-\n-            Collection<PortType> portTypes = (Collection<PortType>)wsdlDefinition.getPortTypes().values();\n-            thePortTypes.addAll(portTypes);\n-\n-            // Create WSDLInterface elements for each PortType found\n-            for (PortType portType : portTypes) {\n-                WSDLObject<PortType> wsdlPortType = theWSDL.getWSDLObject(PortType.class, portType.getQName());\n-                WSDLInterface wsdlInterface;\n-                if (wsdlPortType != null) {\n-                    // Introspect the WSDL portType and add the resulting\n-                    // WSDLInterface to the resolver\n-                    try {\n-                        theWSDL.setDefinition(wsdlPortType.getDefinition());\n-                        wsdlInterface = WSDLfactory.createWSDLInterface(wsdlPortType.getElement(), theWSDL, resolver);\n-                        wsdlInterface.setWsdlDefinition(theWSDL);\n-                    } catch (InvalidInterfaceException e) {\n-                        ContributionResolveException ce = new ContributionResolveException(e);\n-                        error(\"ContributionResolveException\", resolver, ce);\n-                        throw ce;\n-                    } // end try\n-                    resolver.addModel(wsdlInterface);\n-                    theInterfaces.add(wsdlInterface);\n-                } // end if\n-            } // end for\n-\n-            // -----------------------\n-\n+            if (theImport.getImportType().equals(WSDL_NS)) {\n+                \n+                // Find all the WSDL definitions matching the imported namespace\n+                List<Definition> wsdlDefinitions = new ArrayList<Definition>();\n+                WSDLDefinition theWSDL = theImport.getWSDLDefinition();\n+                wsdlDefinitions.add(theWSDL.getDefinition());\n+                for (WSDLDefinition importedWSDL: theWSDL.getImportedDefinitions()) {\n+                    wsdlDefinitions.add(importedWSDL.getDefinition());\n+                }\n+                for (Definition wsdlDefinition: wsdlDefinitions) {\n+\n+                    Collection<PortType> portTypes = (Collection<PortType>)wsdlDefinition.getPortTypes().values();\n+                    thePortTypes.addAll(portTypes);\n+\n+                    // Create WSDLInterface elements for each PortType found\n+                    for (PortType portType : portTypes) {\n+                        WSDLObject<PortType> wsdlPortType = theWSDL.getWSDLObject(PortType.class, portType.getQName());\n+                        WSDLInterface wsdlInterface;\n+                        if (wsdlPortType != null) {\n+                            // Introspect the WSDL portType and add the resulting\n+                            // WSDLInterface to the resolver\n+                            try {\n+                                theWSDL.setDefinition(wsdlPortType.getDefinition());\n+                                wsdlInterface = WSDLfactory.createWSDLInterface(wsdlPortType.getElement(), theWSDL, resolver);\n+                                wsdlInterface.setWsdlDefinition(theWSDL);\n+                            } catch (InvalidInterfaceException e) {\n+                                ContributionResolveException ce = new ContributionResolveException(e);\n+                                error(\"ContributionResolveException\", resolver, ce);\n+                                throw ce;\n+                            } // end try\n+                            resolver.addModel(wsdlInterface);\n+                            theInterfaces.add(wsdlInterface);\n+                        } // end if\n+                    } // end for\n+                }\n+            }\n         } // end for\n \n         return thePortTypes;"
            },
            {
                "sha": "c822eade1e07db0d2c5451a5b6565ae3a3bc676b",
                "filename": "modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELImplementationProcessor.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e50d74fc99ff17904f29f7aeef970519b6d7904c/modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELImplementationProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e50d74fc99ff17904f29f7aeef970519b6d7904c/modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELImplementationProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/implementation-bpel/src/main/java/org/apache/tuscany/sca/implementation/bpel/xml/BPELImplementationProcessor.java?ref=e50d74fc99ff17904f29f7aeef970519b6d7904c",
                "patch": "@@ -194,11 +194,11 @@ private void generateComponentType(BPELImplementation impl) throws ContributionR\n             // check that the partner link has been designated as service or\n             // reference in SCA terms\n             if (pLink.isSCATyped()) {\n-                String SCAName = pLink.getSCAName();\n+                String scaName = pLink.getSCAName();\n                 if (pLink.querySCAType().equals(\"reference\")) {\n-                    componentType.getReferences().add(generateReference(SCAName, pLink.getMyRolePortType(), pLink.getPartnerRolePortType(), theProcess.getInterfaces()));\n+                    componentType.getReferences().add(generateReference(scaName, pLink.getMyRolePortType(), pLink.getPartnerRolePortType(), theProcess.getInterfaces()));\n                 } else {\n-                    componentType.getServices().add(generateService(SCAName, pLink.getMyRolePortType(), pLink.getPartnerRolePortType(), theProcess.getInterfaces()));\n+                    componentType.getServices().add(generateService(scaName, pLink.getMyRolePortType(), pLink.getPartnerRolePortType(), theProcess.getInterfaces()));\n                 } // end if\n             } // end if\n         } // end for"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/537f380b9b479800a1db296c5de58907c0b34298",
        "message": "TUSCANY-2319 - fix NPE in binding.ws and add validation itests. Thanks for the patch Ram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@661651 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_60",
        "file": [
            {
                "sha": "013a55b61e8ada3fb996e0b504737ea215b7bc0f",
                "filename": "itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworld.wsdl",
                "status": "added",
                "additions": 92,
                "deletions": 0,
                "changes": 92,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworld.wsdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworld.wsdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworld.wsdl?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+-->\n+<wsdl:definitions targetNamespace=\"http://helloworld\" xmlns:tns=\"http://helloworld\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsdlsoap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+\tname=\"helloworld\">\n+\n+    <wsdl:types>\n+        <schema elementFormDefault=\"qualified\" targetNamespace=\"http://helloworld\" xmlns=\"http://www.w3.org/2001/XMLSchema\">\n+\n+            <element name=\"getGreetings\">\n+                <complexType>\n+                    <sequence>\n+                        <element name=\"name\" type=\"xsd:string\"/>\n+                    </sequence>\n+                </complexType>\n+            </element>\n+\n+            <element name=\"getGreetingsResponse\">\n+                <complexType>\n+                    <sequence>\n+                        <element name=\"getGreetingsReturn\" type=\"xsd:string\"/>\n+                    </sequence>\n+                </complexType>\n+            </element>\n+            \n+        </schema>\n+    </wsdl:types>\n+\n+    <wsdl:message name=\"getGreetingsRequest\">\n+        <wsdl:part element=\"tns:getGreetings\" name=\"parameters\"/>\n+    </wsdl:message>\n+\n+    <wsdl:message name=\"getGreetingsResponse\">\n+        <wsdl:part element=\"tns:getGreetingsResponse\" name=\"parameters\"/>\n+    </wsdl:message>\n+\n+    <wsdl:portType name=\"HelloWorld\">\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdl:input message=\"tns:getGreetingsRequest\" name=\"getGreetingsRequest\"/>\n+            <wsdl:output message=\"tns:getGreetingsResponse\" name=\"getGreetingsResponse\"/>\n+        </wsdl:operation>\n+    </wsdl:portType>\n+\n+    <wsdl:binding name=\"HelloWorldSoapBinding\" type=\"tns:HelloWorld\">\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdlsoap:operation soapAction=\"\"/>\n+            <wsdl:input name=\"getGreetingsRequest\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output name=\"getGreetingsResponse\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+\n+    <wsdl:binding name=\"HelloWorldSoapJmsBinding\" type=\"tns:HelloWorld\">\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/jms\"/>\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdlsoap:operation soapAction=\"\"/>\n+            <wsdl:input name=\"getGreetingsRequest\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output name=\"getGreetingsResponse\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+\n+    <wsdl:service name=\"HelloWorldService\">\n+        <wsdl:port binding=\"tns:HelloWorldSoapJmsBinding\" name=\"HelloWorldSoapJmsPort\">\n+            <wsdlsoap:address location=\"jms:/queue.sample?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;java.naming.provider.url=tcp://localhost:61619\"/>\n+        </wsdl:port>\n+    </wsdl:service>\n+\n+</wsdl:definitions>"
            },
            {
                "sha": "b7ff1e304f42cbfb766e6578ea023ce90f293129",
                "filename": "itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworldwsjms.composite",
                "status": "added",
                "additions": 34,
                "deletions": 0,
                "changes": 34,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworldwsjms.composite",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworldwsjms.composite",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworldwsjms.composite?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    * Licensed to the Apache Software Foundation (ASF) under one\n+    * or more contributor license agreements.  See the NOTICE file\n+    * distributed with this work for additional information\n+    * regarding copyright ownership.  The ASF licenses this file\n+    * to you under the Apache License, Version 2.0 (the\n+    * \"License\"); you may not use this file except in compliance\n+    * with the License.  You may obtain a copy of the License at\n+    * \n+    *   http://www.apache.org/licenses/LICENSE-2.0\n+    * \n+    * Unless required by applicable law or agreed to in writing,\n+    * software distributed under the License is distributed on an\n+    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    * KIND, either express or implied.  See the License for the\n+    * specific language governing permissions and limitations\n+    * under the License.    \n+-->\n+<composite xmlns=\"http://www.osoa.org/xmlns/sca/1.0\"\n+\ttargetNamespace=\"http://helloworld\"\n+\txmlns:hw=\"http://helloworld\"\n+    name=\"helloworldws\">\n+\n+    <component name=\"HelloWorldServiceComponent\">\n+        <implementation.java class=\"binding.jms.HelloWorldServiceImpl\" />\n+\t    <service name=\"HelloWorldService\">\n+\t        <interface.wsdl interface=\"http://helloworld#wsdl.interface(HelloWorld)\" />\n+            <binding.ws wsdlElement=\"http://helloworld#wsdl.binding(HelloWorldSoapJmsBinding2)\"\n+                    uri=\"jms:/queue.sample?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;java.naming.provider.url=tcp://localhost:61619\"/>\n+        </service>\n+    </component>\n+\n+</composite>"
            },
            {
                "sha": "013a55b61e8ada3fb996e0b504737ea215b7bc0f",
                "filename": "itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworld.wsdl",
                "status": "added",
                "additions": 92,
                "deletions": 0,
                "changes": 92,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworld.wsdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworld.wsdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworld.wsdl?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+-->\n+<wsdl:definitions targetNamespace=\"http://helloworld\" xmlns:tns=\"http://helloworld\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsdlsoap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+\tname=\"helloworld\">\n+\n+    <wsdl:types>\n+        <schema elementFormDefault=\"qualified\" targetNamespace=\"http://helloworld\" xmlns=\"http://www.w3.org/2001/XMLSchema\">\n+\n+            <element name=\"getGreetings\">\n+                <complexType>\n+                    <sequence>\n+                        <element name=\"name\" type=\"xsd:string\"/>\n+                    </sequence>\n+                </complexType>\n+            </element>\n+\n+            <element name=\"getGreetingsResponse\">\n+                <complexType>\n+                    <sequence>\n+                        <element name=\"getGreetingsReturn\" type=\"xsd:string\"/>\n+                    </sequence>\n+                </complexType>\n+            </element>\n+            \n+        </schema>\n+    </wsdl:types>\n+\n+    <wsdl:message name=\"getGreetingsRequest\">\n+        <wsdl:part element=\"tns:getGreetings\" name=\"parameters\"/>\n+    </wsdl:message>\n+\n+    <wsdl:message name=\"getGreetingsResponse\">\n+        <wsdl:part element=\"tns:getGreetingsResponse\" name=\"parameters\"/>\n+    </wsdl:message>\n+\n+    <wsdl:portType name=\"HelloWorld\">\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdl:input message=\"tns:getGreetingsRequest\" name=\"getGreetingsRequest\"/>\n+            <wsdl:output message=\"tns:getGreetingsResponse\" name=\"getGreetingsResponse\"/>\n+        </wsdl:operation>\n+    </wsdl:portType>\n+\n+    <wsdl:binding name=\"HelloWorldSoapBinding\" type=\"tns:HelloWorld\">\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdlsoap:operation soapAction=\"\"/>\n+            <wsdl:input name=\"getGreetingsRequest\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output name=\"getGreetingsResponse\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+\n+    <wsdl:binding name=\"HelloWorldSoapJmsBinding\" type=\"tns:HelloWorld\">\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/jms\"/>\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdlsoap:operation soapAction=\"\"/>\n+            <wsdl:input name=\"getGreetingsRequest\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output name=\"getGreetingsResponse\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+\n+    <wsdl:service name=\"HelloWorldService\">\n+        <wsdl:port binding=\"tns:HelloWorldSoapJmsBinding\" name=\"HelloWorldSoapJmsPort\">\n+            <wsdlsoap:address location=\"jms:/queue.sample?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;java.naming.provider.url=tcp://localhost:61619\"/>\n+        </wsdl:port>\n+    </wsdl:service>\n+\n+</wsdl:definitions>"
            },
            {
                "sha": "8cda0b007e9448cdf93636c463253691c4b29021",
                "filename": "itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworldwsjms.composite",
                "status": "added",
                "additions": 34,
                "deletions": 0,
                "changes": 34,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworldwsjms.composite",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworldwsjms.composite",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworldwsjms.composite?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    * Licensed to the Apache Software Foundation (ASF) under one\n+    * or more contributor license agreements.  See the NOTICE file\n+    * distributed with this work for additional information\n+    * regarding copyright ownership.  The ASF licenses this file\n+    * to you under the Apache License, Version 2.0 (the\n+    * \"License\"); you may not use this file except in compliance\n+    * with the License.  You may obtain a copy of the License at\n+    * \n+    *   http://www.apache.org/licenses/LICENSE-2.0\n+    * \n+    * Unless required by applicable law or agreed to in writing,\n+    * software distributed under the License is distributed on an\n+    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    * KIND, either express or implied.  See the License for the\n+    * specific language governing permissions and limitations\n+    * under the License.    \n+-->\n+<composite xmlns=\"http://www.osoa.org/xmlns/sca/1.0\"\n+\ttargetNamespace=\"http://helloworld\"\n+\txmlns:hw=\"http://helloworld\"\n+    name=\"helloworldws\">\n+\n+    <component name=\"HelloWorldServiceComponent\">\n+        <implementation.java class=\"binding.jms.HelloWorldServiceImpl\" />\n+\t    <service name=\"HelloWorldService\">\n+\t        <interface.wsdl interface=\"http://helloworld#wsdl.interface(HelloWorld)\" />\n+            <binding.ws wsdlElement=\"http://helloworld#wsdl.service(HelloWorldService2)\"\n+                    uri=\"jms:/queue.sample?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;java.naming.provider.url=tcp://localhost:61619\"/>\n+        </service>\n+    </component>\n+\n+</composite>"
            },
            {
                "sha": "013a55b61e8ada3fb996e0b504737ea215b7bc0f",
                "filename": "itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworld.wsdl",
                "status": "added",
                "additions": 92,
                "deletions": 0,
                "changes": 92,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworld.wsdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworld.wsdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworld.wsdl?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+-->\n+<wsdl:definitions targetNamespace=\"http://helloworld\" xmlns:tns=\"http://helloworld\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsdlsoap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+\tname=\"helloworld\">\n+\n+    <wsdl:types>\n+        <schema elementFormDefault=\"qualified\" targetNamespace=\"http://helloworld\" xmlns=\"http://www.w3.org/2001/XMLSchema\">\n+\n+            <element name=\"getGreetings\">\n+                <complexType>\n+                    <sequence>\n+                        <element name=\"name\" type=\"xsd:string\"/>\n+                    </sequence>\n+                </complexType>\n+            </element>\n+\n+            <element name=\"getGreetingsResponse\">\n+                <complexType>\n+                    <sequence>\n+                        <element name=\"getGreetingsReturn\" type=\"xsd:string\"/>\n+                    </sequence>\n+                </complexType>\n+            </element>\n+            \n+        </schema>\n+    </wsdl:types>\n+\n+    <wsdl:message name=\"getGreetingsRequest\">\n+        <wsdl:part element=\"tns:getGreetings\" name=\"parameters\"/>\n+    </wsdl:message>\n+\n+    <wsdl:message name=\"getGreetingsResponse\">\n+        <wsdl:part element=\"tns:getGreetingsResponse\" name=\"parameters\"/>\n+    </wsdl:message>\n+\n+    <wsdl:portType name=\"HelloWorld\">\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdl:input message=\"tns:getGreetingsRequest\" name=\"getGreetingsRequest\"/>\n+            <wsdl:output message=\"tns:getGreetingsResponse\" name=\"getGreetingsResponse\"/>\n+        </wsdl:operation>\n+    </wsdl:portType>\n+\n+    <wsdl:binding name=\"HelloWorldSoapBinding\" type=\"tns:HelloWorld\">\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdlsoap:operation soapAction=\"\"/>\n+            <wsdl:input name=\"getGreetingsRequest\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output name=\"getGreetingsResponse\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+\n+    <wsdl:binding name=\"HelloWorldSoapJmsBinding\" type=\"tns:HelloWorld\">\n+        <wsdlsoap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/jms\"/>\n+        <wsdl:operation name=\"getGreetings\">\n+            <wsdlsoap:operation soapAction=\"\"/>\n+            <wsdl:input name=\"getGreetingsRequest\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output name=\"getGreetingsResponse\">\n+                <wsdlsoap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+\n+    <wsdl:service name=\"HelloWorldService\">\n+        <wsdl:port binding=\"tns:HelloWorldSoapJmsBinding\" name=\"HelloWorldSoapJmsPort\">\n+            <wsdlsoap:address location=\"jms:/queue.sample?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;java.naming.provider.url=tcp://localhost:61619\"/>\n+        </wsdl:port>\n+    </wsdl:service>\n+\n+</wsdl:definitions>"
            },
            {
                "sha": "d9252ba54f7e52dd1db881068b363467dc4d0844",
                "filename": "itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworldwsjms.composite",
                "status": "added",
                "additions": 34,
                "deletions": 0,
                "changes": 34,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworldwsjms.composite",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworldwsjms.composite",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworldwsjms.composite?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    * Licensed to the Apache Software Foundation (ASF) under one\n+    * or more contributor license agreements.  See the NOTICE file\n+    * distributed with this work for additional information\n+    * regarding copyright ownership.  The ASF licenses this file\n+    * to you under the Apache License, Version 2.0 (the\n+    * \"License\"); you may not use this file except in compliance\n+    * with the License.  You may obtain a copy of the License at\n+    * \n+    *   http://www.apache.org/licenses/LICENSE-2.0\n+    * \n+    * Unless required by applicable law or agreed to in writing,\n+    * software distributed under the License is distributed on an\n+    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    * KIND, either express or implied.  See the License for the\n+    * specific language governing permissions and limitations\n+    * under the License.    \n+-->\n+<composite xmlns=\"http://www.osoa.org/xmlns/sca/1.0\"\n+\ttargetNamespace=\"http://helloworld\"\n+\txmlns:hw=\"http://helloworld\"\n+    name=\"helloworldws\">\n+\n+    <component name=\"HelloWorldServiceComponent\">\n+        <implementation.java class=\"binding.jms.HelloWorldServiceImpl\" />\n+\t    <service name=\"HelloWorldService\">\n+\t        <interface.wsdl interface=\"http://helloworld#wsdl.interface(HelloWorld2)\" />\n+            <binding.ws wsdlElement=\"http://helloworld#wsdl.binding(HelloWorldSoapJmsBinding)\"\n+                    uri=\"jms:/queue.sample?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory&amp;java.naming.provider.url=tcp://localhost:61619\"/>\n+        </service>\n+    </component>\n+\n+</composite>"
            },
            {
                "sha": "baea34c8ab29a37bdb7e51b70eac349e54392bcf",
                "filename": "itest/validation/src/test/java/binding/wsxml/WsdlBindingDoesNotMatchTestCase.java",
                "status": "added",
                "additions": 60,
                "deletions": 0,
                "changes": 60,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/test/java/binding/wsxml/WsdlBindingDoesNotMatchTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/test/java/binding/wsxml/WsdlBindingDoesNotMatchTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/test/java/binding/wsxml/WsdlBindingDoesNotMatchTestCase.java?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package binding.wsxml;\n+\n+import junit.framework.TestCase;\n+import org.apache.tuscany.sca.monitor.Monitor;\n+import org.apache.tuscany.sca.monitor.Problem;\n+import org.apache.tuscany.sca.monitor.impl.DefaultLoggingMonitorImpl;\n+\n+import domain.CustomCompositeBuilder;\n+\n+/**\n+ * This shows how to test the Calculator service component.\n+ */\n+public class WsdlBindingDoesNotMatchTestCase extends TestCase {\n+\t\n+    private CustomCompositeBuilder customDomain;\n+    \n+    @Override\n+    protected void setUp() throws Exception \n+    {\n+        customDomain = CustomCompositeBuilder.getInstance();\n+        try {\n+             customDomain.loadContribution(\"src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/helloworldwsjms.composite\", \n+                       \"TestContribution\", \"src/main/resources/binding/wsxml/WsdlBindingDoesNotMatch/\");\n+        } catch (Exception ex){\n+            //throw ex;\n+        }\n+    }\n+\n+    @Override\n+    protected void tearDown() throws Exception {\n+        //node.stop();\n+    }\n+\n+    public void testCalculator() {\n+    \tMonitor monitor = customDomain.getMonitorInstance();\n+    \tProblem problem = ((DefaultLoggingMonitorImpl)monitor).getLastLoggedProblem();\n+        \n+    \tassertNotNull(problem);\n+       assertEquals(\"WsdlBindingDoesNotMatch\", problem.getMessageId());\n+ \n+    }\n+}"
            },
            {
                "sha": "5fc5e39f9c586f3ea42d2eb32c441f05aac2432f",
                "filename": "itest/validation/src/test/java/binding/wsxml/WsdlServiceDoesNotMatchTestCase.java",
                "status": "added",
                "additions": 60,
                "deletions": 0,
                "changes": 60,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/test/java/binding/wsxml/WsdlServiceDoesNotMatchTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/test/java/binding/wsxml/WsdlServiceDoesNotMatchTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/test/java/binding/wsxml/WsdlServiceDoesNotMatchTestCase.java?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package binding.wsxml;\n+\n+import junit.framework.TestCase;\n+import org.apache.tuscany.sca.monitor.Monitor;\n+import org.apache.tuscany.sca.monitor.Problem;\n+import org.apache.tuscany.sca.monitor.impl.DefaultLoggingMonitorImpl;\n+\n+import domain.CustomCompositeBuilder;\n+\n+/**\n+ * This shows how to test the Calculator service component.\n+ */\n+public class WsdlServiceDoesNotMatchTestCase extends TestCase {\n+\t\n+    private CustomCompositeBuilder customDomain;\n+    \n+    @Override\n+    protected void setUp() throws Exception \n+    {\n+        customDomain = CustomCompositeBuilder.getInstance();\n+        try {\n+             customDomain.loadContribution(\"src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/helloworldwsjms.composite\", \n+                       \"TestContribution\", \"src/main/resources/binding/wsxml/WsdlServiceDoesNotMatch/\");\n+        } catch (Exception ex){\n+            //throw ex;\n+        }\n+    }\n+\n+    @Override\n+    protected void tearDown() throws Exception {\n+        //node.stop();\n+    }\n+\n+    public void testCalculator() {\n+    \tMonitor monitor = customDomain.getMonitorInstance();\n+    \tProblem problem = ((DefaultLoggingMonitorImpl)monitor).getLastLoggedProblem();\n+        \n+    \tassertNotNull(problem);\n+       assertEquals(\"WsdlServiceDoesNotMatch\", problem.getMessageId());\n+ \n+    }\n+}"
            },
            {
                "sha": "32f2e9751baf26d3774120c6b76282a28ea97d7c",
                "filename": "itest/validation/src/test/java/interfacewsdl/xml/WsdlInterfaceDoesNotMatchTestCase.java",
                "status": "added",
                "additions": 58,
                "deletions": 0,
                "changes": 58,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/test/java/interfacewsdl/xml/WsdlInterfaceDoesNotMatchTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/itest/validation/src/test/java/interfacewsdl/xml/WsdlInterfaceDoesNotMatchTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/validation/src/test/java/interfacewsdl/xml/WsdlInterfaceDoesNotMatchTestCase.java?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package interfacewsdl.xml;\n+\n+import junit.framework.TestCase;\n+import org.apache.tuscany.sca.monitor.Monitor;\n+import org.apache.tuscany.sca.monitor.Problem;\n+import org.apache.tuscany.sca.monitor.impl.DefaultLoggingMonitorImpl;\n+import domain.CustomCompositeBuilder;\n+\n+/**\n+ * This shows how to test the Calculator service component.\n+ */\n+public class WsdlInterfaceDoesNotMatchTestCase extends TestCase {\n+\n+    private CustomCompositeBuilder customDomain;\n+\t\n+    @Override\n+    protected void setUp() throws Exception \n+    {\n+        customDomain = CustomCompositeBuilder.getInstance();\n+        try {        \t\n+             customDomain.loadContribution(\"src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/helloworldwsjms.composite\", \n+                       \"TestContribution\", \"src/main/resources/interfacewsdl/xml/WsdlInterfaceDoesNotMatch/\");        \t            \n+        } catch (Exception ex){\n+            //throw ex;\n+        }\n+    }\n+\n+    @Override\n+    protected void tearDown() throws Exception {\n+        //node.stop();\n+    }\n+\n+    public void testCalculator() {\n+    \tMonitor monitor = customDomain.getMonitorInstance();\n+    \tProblem problem = ((DefaultLoggingMonitorImpl)monitor).getLastLoggedProblem();\n+        \n+    \tassertNotNull(problem);\n+       assertEquals(\"WsdlInterfaceDoesNotMatch\", problem.getMessageId());  \n+    }\n+}"
            },
            {
                "sha": "e5eb6581911273984699e64bcabf60b862c5047e",
                "filename": "modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-xml/src/main/java/org/apache/tuscany/sca/binding/ws/xml/WebServiceBindingProcessor.java?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -324,6 +324,8 @@ public void resolve(WebServiceBinding model, ModelResolver resolver) throws Cont\n                 if (binding != null) {\n                     wsdlDefinition.setDefinition(binding.getDefinition());\n                     model.setBinding(binding.getElement());\n+                } else {\n+                \twarning(\"WsdlBindingDoesNotMatch\", wsdlDefinition, model.getBindingName());\n                 }\n             }\n             if (model.getServiceName() != null) {\n@@ -336,6 +338,8 @@ public void resolve(WebServiceBinding model, ModelResolver resolver) throws Cont\n                         model.setPort(port);\n                         model.setBinding(port.getBinding());\n                     }\n+                } else {\n+                \twarning(\"WsdlServiceDoesNotMatch\", wsdlDefinition, model.getServiceName());\n                 }\n             }\n \n@@ -346,8 +350,7 @@ public void resolve(WebServiceBinding model, ModelResolver resolver) throws Cont\n                 try {\n                     wsdlInterface = wsdlFactory.createWSDLInterface(portType, wsdlDefinition, resolver);\n                 } catch (InvalidInterfaceException e) {\n-                \twarning(\"InvalidInterfaceException\", wsdlFactory, model.getName());\n-                    logger.log(Level.WARNING, \"Exception creating interface from WSDL for binding: \" + model.getName(), e); \n+                \twarning(\"InvalidInterfaceException\", wsdlFactory, model.getName()); \n                 }\n                 interfaceContract.setInterface(wsdlInterface);\n                 model.setBindingInterfaceContract(interfaceContract);"
            },
            {
                "sha": "60a7e9e2f21595a340f3d85134436c156c50cb4f",
                "filename": "modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-xml/src/main/resources/binding-wsxml-validation-messages.properties?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -21,4 +21,6 @@\n InvalidWsdlElementAttr = Invalid WebService binding wsdlElement attribute: {0}\n MustUseWsdlBinding = {0} must use wsdl.binding when using wsa:EndpointReference\n InvalidInterfaceException = Exception creating interface from WSDL for binding: {0}\n+WsdlBindingDoesNotMatch = The #wsdl.binding({0}) does not match with the WSDL Definitions \n+WsdlServiceDoesNotMatch = The #wsdl.service({0}) does not match with the WSDL Definitions\n "
            },
            {
                "sha": "abd9f15e49ea509748c9c2ab50ac8fe5426189b6",
                "filename": "modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java",
                "status": "modified",
                "additions": 18,
                "deletions": 2,
                "changes": 20,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-wsdl-xml/src/main/java/org/apache/tuscany/sca/interfacedef/wsdl/xml/WSDLInterfaceProcessor.java?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -59,6 +59,20 @@ public WSDLInterfaceProcessor(ModelFactoryExtensionPoint modelFactories, Monitor\n         this.monitor = monitor;\n     }\n     \n+    /**\n+     * Report a warning.\n+     * \n+     * @param problems\n+     * @param message\n+     * @param model\n+     */\n+    private void warning(String message, Object model, Object... messageParameters) {\n+        if (monitor != null) {\n+            Problem problem = new ProblemImpl(this.getClass().getName(), \"interface-wsdlxml-validation-messages\", Severity.WARNING, model, message, (Object[])messageParameters);\n+                                              monitor.problem(problem);\n+        }\n+     }\n+    \n     /**\n      * Report a error.\n      * \n@@ -188,8 +202,7 @@ private WSDLInterface resolveWSDLInterface(WSDLInterface wsdlInterface, ModelRes\n                     wsdlDefinition.getXmlSchemas().addAll(resolved.getXmlSchemas());\n                     wsdlDefinition.setUnresolved(false);\n                     WSDLObject<PortType> portType = wsdlDefinition.getWSDLObject(PortType.class, wsdlInterface.getName());\n-                    if (portType != null) {\n-                        \n+                    if (portType != null) {                        \n                         // Introspect the WSDL portType and add the resulting\n                         // WSDLInterface to the resolver\n                         try {\n@@ -203,6 +216,9 @@ private WSDLInterface resolveWSDLInterface(WSDLInterface wsdlInterface, ModelRes\n                         }\n                         resolver.addModel(wsdlInterface);\n                     }\n+                    else {\n+                    \twarning(\"WsdlInterfaceDoesNotMatch\", wsdlDefinition, wsdlInterface.getName());\n+                    }\n                 }\n             }\n         }"
            },
            {
                "sha": "2f8c3e05002973e76a0e93cbbce11820bf264ded",
                "filename": "modules/interface-wsdl-xml/src/main/resources/interface-wsdlxml-validation-messages.properties",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/interface-wsdl-xml/src/main/resources/interface-wsdlxml-validation-messages.properties",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/829c6cad362e4eccc5d0a9dcc85e1e77bead895e/modules/interface-wsdl-xml/src/main/resources/interface-wsdlxml-validation-messages.properties",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/interface-wsdl-xml/src/main/resources/interface-wsdlxml-validation-messages.properties?ref=829c6cad362e4eccc5d0a9dcc85e1e77bead895e",
                "patch": "@@ -20,4 +20,5 @@\n #\n ContributionReadException = ContributionReadException occured due to :\n ContributionResolveException = ContributionResolveException occured due to :\n-InvalidWSDLInterfaceAttr = Invalid WSDL interface attribute: {0}\n\\ No newline at end of file\n+InvalidWSDLInterfaceAttr = Invalid WSDL interface attribute: {0}\n+WsdlInterfaceDoesNotMatch = The #wsdl.interface({0}) specified does not match with WSDL Definitions\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/f57cb751969c30490ccaf071d081703d8f5fadca",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/a5c04b6e633f186eb1a2a9c3bf9bb8706dc85e99",
        "message": "Added null check to avoid NPE when ContentType on the Request is null (FindBugs reported issue)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@658242 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_61",
        "file": [
            {
                "sha": "7268d14a22b60c951c7a3bc12b53be638831228e",
                "filename": "modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f57cb751969c30490ccaf071d081703d8f5fadca/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f57cb751969c30490ccaf071d081703d8f5fadca/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java?ref=f57cb751969c30490ccaf071d081703d8f5fadca",
                "patch": "@@ -513,7 +513,7 @@ protected void doPost(HttpServletRequest request, HttpServletResponse response)\n \n             // Create a new Atom entry\n             String contentType = request.getContentType();\n-            if (contentType.startsWith(\"application/atom+xml\")) {\n+            if (contentType != null && contentType.startsWith(\"application/atom+xml\")) {\n \n                 // Read the entry from the request\n                 Entry feedEntry;\n@@ -623,7 +623,7 @@ protected void doPut(HttpServletRequest request, HttpServletResponse response) t\n \n             // Update an Atom entry\n             String contentType = request.getContentType();\n-            if (contentType.startsWith(\"application/atom+xml\")) {\n+            if (contentType != null && contentType.startsWith(\"application/atom+xml\")) {\n \n                 // Read the entry from the request\n                 Entry feedEntry;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/a5c04b6e633f186eb1a2a9c3bf9bb8706dc85e99",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/d279348e1ee81d39ca17c58a9da3e90dcc7bdd8c",
        "message": "Added null check to avoid NPE when ContentType on the Request is null (FindBugs reported issue)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@658239 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_62",
        "file": [
            {
                "sha": "54f3cbfa3934b69933ffc2112b6ba77c5a442035",
                "filename": "modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/a5c04b6e633f186eb1a2a9c3bf9bb8706dc85e99/modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/a5c04b6e633f186eb1a2a9c3bf9bb8706dc85e99/modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java?ref=a5c04b6e633f186eb1a2a9c3bf9bb8706dc85e99",
                "patch": "@@ -435,7 +435,7 @@ protected void doPut(HttpServletRequest request, HttpServletResponse response) t\n \n             // Update an Atom entry\n             String contentType = request.getContentType();\n-            if (contentType.startsWith(\"application/atom+xml\")) {\n+            if (contentType != null && contentType.startsWith(\"application/atom+xml\")) {\n \n                 // Read the entry from the request\n                 org.apache.abdera.model.Entry feedEntry;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/d279348e1ee81d39ca17c58a9da3e90dcc7bdd8c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/c35adfbfe9de9811d469abf80044503fcc005f53",
        "message": "Added null check to avoid NPE when ContentType on the Request is null (FindBugs reported issue)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@658237 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_63",
        "file": [
            {
                "sha": "98fa2e5338b6b52da3d7e61d5adf46b3afbf72e0",
                "filename": "modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/d279348e1ee81d39ca17c58a9da3e90dcc7bdd8c/modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/d279348e1ee81d39ca17c58a9da3e90dcc7bdd8c/modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-atom-abdera/src/main/java/org/apache/tuscany/sca/binding/atom/provider/AtomBindingListenerServlet.java?ref=d279348e1ee81d39ca17c58a9da3e90dcc7bdd8c",
                "patch": "@@ -329,7 +329,7 @@ protected void doPost(HttpServletRequest request, HttpServletResponse response)\n \n             // Create a new Atom entry\n             String contentType = request.getContentType();\n-            if (contentType.startsWith(\"application/atom+xml\")) {\n+            if (contentType != null && contentType.startsWith(\"application/atom+xml\")) {\n \n                 // Read the entry from the request\n                 org.apache.abdera.model.Entry feedEntry;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/2c1f28152fb696a4553ee497d5dd6a937901e810",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/21e3b17248191bf1128534af7f144ed30241dcf5",
        "message": "Checking if policedBinding has a null type before checking if it is unresolved to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@655687 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_64",
        "file": [
            {
                "sha": "c559cc63e875784a03461d8adecc3a31ccb8fc2c",
                "filename": "modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/BaseAssemblyProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/2c1f28152fb696a4553ee497d5dd6a937901e810/modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/BaseAssemblyProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/2c1f28152fb696a4553ee497d5dd6a937901e810/modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/BaseAssemblyProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/BaseAssemblyProcessor.java?ref=2c1f28152fb696a4553ee497d5dd6a937901e810",
                "patch": "@@ -383,7 +383,7 @@ protected Implementation resolveImplementation(Implementation implementation, Mo\n                     if (binding instanceof IntentAttachPoint) {\n                         IntentAttachPoint policiedBinding = (IntentAttachPoint)binding;\n                         \n-                        if ( policiedBinding.getType().isUnresolved() ) {\n+                        if ( policiedBinding.getType() != null && policiedBinding.getType().isUnresolved() ) {\n                             IntentAttachPointType resolved = \n                                 resolver.resolveModel(IntentAttachPointType.class, \n                                                       policiedBinding.getType());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/1a96dba267a94b907e520cc6cc9369eaec9bb5a9",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/dd1aa9eaa8c19c4869f3345205fd692140278e59",
        "message": "Check for null to fix an NPE with composite services that do not promote a component service.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@655642 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_65",
        "file": [
            {
                "sha": "2f18f44f09584173c5d3e96641aece6afdc98ac9",
                "filename": "modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/CompositeProcessor.java",
                "status": "modified",
                "additions": 21,
                "deletions": 19,
                "changes": 40,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/1a96dba267a94b907e520cc6cc9369eaec9bb5a9/modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/CompositeProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/1a96dba267a94b907e520cc6cc9369eaec9bb5a9/modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/CompositeProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly-xml/src/main/java/org/apache/tuscany/sca/assembly/xml/CompositeProcessor.java?ref=1a96dba267a94b907e520cc6cc9369eaec9bb5a9",
                "patch": "@@ -199,27 +199,29 @@ public Composite read(XMLStreamReader reader) throws ContributionReadException,\n                             compositeService.setName(getString(reader, NAME));\n \n                             String promoted = getString(reader, PROMOTE);\n-                            String promotedComponentName;\n-                            String promotedServiceName;\n-                            int s = promoted.indexOf('/');\n-                            if (s == -1) {\n-                                promotedComponentName = promoted;\n-                                promotedServiceName = null;\n-                            } else {\n-                                promotedComponentName = promoted.substring(0, s);\n-                                promotedServiceName = promoted.substring(s + 1);\n+                            if (promoted != null) {\n+                                String promotedComponentName;\n+                                String promotedServiceName;\n+                                int s = promoted.indexOf('/');\n+                                if (s == -1) {\n+                                    promotedComponentName = promoted;\n+                                    promotedServiceName = null;\n+                                } else {\n+                                    promotedComponentName = promoted.substring(0, s);\n+                                    promotedServiceName = promoted.substring(s + 1);\n+                                }\n+    \n+                                Component promotedComponent = assemblyFactory.createComponent();\n+                                promotedComponent.setUnresolved(true);\n+                                promotedComponent.setName(promotedComponentName);\n+                                compositeService.setPromotedComponent(promotedComponent);\n+    \n+                                ComponentService promotedService = assemblyFactory.createComponentService();\n+                                promotedService.setUnresolved(true);\n+                                promotedService.setName(promotedServiceName);\n+                                compositeService.setPromotedService(promotedService);\n                             }\n \n-                            Component promotedComponent = assemblyFactory.createComponent();\n-                            promotedComponent.setUnresolved(true);\n-                            promotedComponent.setName(promotedComponentName);\n-                            compositeService.setPromotedComponent(promotedComponent);\n-\n-                            ComponentService promotedService = assemblyFactory.createComponentService();\n-                            promotedService.setUnresolved(true);\n-                            promotedService.setName(promotedServiceName);\n-                            compositeService.setPromotedService(promotedService);\n-\n                             composite.getServices().add(compositeService);\n                             policyProcessor.readPolicies(contract, reader);\n                         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/1acec03b89168462bff29d773a56744cb3e99800",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/a1d4284911f4822335ebe120178f70efd849e66e",
        "message": "Check the null for implementation policy provider to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@635666 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_66",
        "file": [
            {
                "sha": "5c73a156991b394df28da450a37001ddd493b538",
                "filename": "modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/1acec03b89168462bff29d773a56744cb3e99800/modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/1acec03b89168462bff29d773a56744cb3e99800/modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/core/src/main/java/org/apache/tuscany/sca/core/assembly/CompositeActivatorImpl.java?ref=1acec03b89168462bff29d773a56744cb3e99800",
                "patch": "@@ -397,8 +397,11 @@ private void addImplementationProvider(RuntimeComponent component, Implementatio\n             throw new IllegalStateException(\"Provider factory not found for class: \" + implementation.getClass()\n                 .getName());\n         }\n-        for(PolicyProviderFactory f: providerFactories.getPolicyProviderFactories()){\n-            component.addPolicyProvider(f.createImplementationPolicyProvider(component, implementation));\n+        for (PolicyProviderFactory f : providerFactories.getPolicyProviderFactories()) {\n+            PolicyProvider policyProvider = f.createImplementationPolicyProvider(component, implementation);\n+            if (policyProvider != null) {\n+                component.addPolicyProvider(policyProvider);\n+            }\n         }\n         \n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/a35c31146f2b40846eef33c0101679a04effbe6c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/c8f19f8cebf8527a4b79829ae7f6d78bd3f69ce1",
        "message": "give more help than NPE when a connection factory isn't found\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@629793 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_67",
        "file": [
            {
                "sha": "5b68b4900fa96411486256c70473d1e5c5890afe",
                "filename": "modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/a35c31146f2b40846eef33c0101679a04effbe6c/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/a35c31146f2b40846eef33c0101679a04effbe6c/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/provider/JMSResourceFactory.java?ref=a35c31146f2b40846eef33c0101679a04effbe6c",
                "patch": "@@ -29,6 +29,8 @@\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n \n+import org.apache.tuscany.sca.binding.jms.impl.JMSBindingException;\n+\n /**\n  * Abstracts away any JMS provide specific feature from the JMS binding\n  */\n@@ -102,6 +104,9 @@ public void closeConnection() throws JMSException {\n \n     private void createConnection() throws NamingException, JMSException {\n         ConnectionFactory connectionFactory = (ConnectionFactory)jndiLookUp(connectionFactoryName);\n+        if (connectionFactory == null) {\n+            throw new JMSBindingException(\"connection factory not found: \" + connectionFactoryName);\n+        }\n         connection = connectionFactory.createConnection();\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/64a35d31448701f94ea246de5485294d59cff275",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/48e2ef9fc81a69a88ac28be77665b75647ad441a",
        "message": "Use a dummy service name to avoid NPE in the build\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@627796 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_68",
        "file": [
            {
                "sha": "c64cb5ee7a516df0455bf1285ed0dbfd1cdc5461",
                "filename": "modules/host-rmi/src/test/java/org/apache/tuscany/sca/host/rmi/RMIHostImplTestCase.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/64a35d31448701f94ea246de5485294d59cff275/modules/host-rmi/src/test/java/org/apache/tuscany/sca/host/rmi/RMIHostImplTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/64a35d31448701f94ea246de5485294d59cff275/modules/host-rmi/src/test/java/org/apache/tuscany/sca/host/rmi/RMIHostImplTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/host-rmi/src/test/java/org/apache/tuscany/sca/host/rmi/RMIHostImplTestCase.java?ref=64a35d31448701f94ea246de5485294d59cff275",
                "patch": "@@ -31,7 +31,7 @@ public void testInit() {\n \r\n     public void testFindServiceBadHost() throws RMIHostRuntimeException, RMIHostException {\r\n         try {\r\n-            new DefaultRMIHost().findService(null, \"0\", null);\r\n+            new DefaultRMIHost().findService(null, \"9994\", \"$BAD$\");\r\n             fail();\r\n         } catch (RMIHostRuntimeException e) {\r\n             // expected\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/847ccd803eda4e5c46326c80a68b3c2886ec48ce",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/f4ffcbfbdd40b16a6d7204ca8cd5f1cccca0e2d9",
        "message": "Fix for TUSCANY-1722, NPE in JSON webapp samples. Initialize default URI of bindings on top level composite services.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@576352 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_69",
        "file": [
            {
                "sha": "111424d6852eac2ac36c0d28c5ba8f25d037f495",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeConfigurationBuilderImpl.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/847ccd803eda4e5c46326c80a68b3c2886ec48ce/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeConfigurationBuilderImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/847ccd803eda4e5c46326c80a68b3c2886ec48ce/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeConfigurationBuilderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/sca/assembly/builder/impl/CompositeConfigurationBuilderImpl.java?ref=847ccd803eda4e5c46326c80a68b3c2886ec48ce",
                "patch": "@@ -133,7 +133,11 @@ private void configureComponents(Composite composite, String uri) {\n                     } else {\n                         // If there's only one service then binding URI defaults\n                         // to the parent URI\n-                        bindingURI = parentURI;\n+                        if (parentURI != null) {\n+                            bindingURI = parentURI;\n+                        } else {\n+                            bindingURI = String.valueOf(binding.getName());\n+                        }\n                     }\n                 } else {\n                     // Combine the specified binding URI with the component URI"
            },
            {
                "sha": "b8a8612a6c3ca95373876c725a3c44a13f791451",
                "filename": "modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ServiceProvider.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/847ccd803eda4e5c46326c80a68b3c2886ec48ce/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ServiceProvider.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/847ccd803eda4e5c46326c80a68b3c2886ec48ce/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ServiceProvider.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-axis2/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/Axis2ServiceProvider.java?ref=847ccd803eda4e5c46326c80a68b3c2886ec48ce",
                "patch": "@@ -214,9 +214,11 @@ protected URI computeActualURI(String baseURI, RuntimeComponent component, Abstr\n \n         // if the wsa:EndpointReference has an address element with an absolute URI use that\n         if (eprURI != null && eprURI.isAbsolute()) {\n-            if (wsBinding.getURI() != null) {\n-                throw new IllegalArgumentException(\"Cannot specify binding URI when wsa:EndpointReference has aboslute address URI\");\n-            }\n+            //FIXME Throwing an exception breaks as wsBinding.getURI() will return the default URI\n+            // derived from the service name or the URI actually configured in the .composite\n+//            if (wsBinding.getURI() != null) {\n+//                throw new IllegalArgumentException(\"Cannot specify binding URI when wsa:EndpointReference has aboslute address URI\");\n+//            }\n             return URI.create(eprURI.toString());\n         }\n         "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/f23debccb6d6b29ca3c2e05c5e31ce4c3024a9d7",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/d930a54bc8b2e29a2a8cb3de2ff92b50fb829b5e",
        "message": "Report service not found error with a ServiceRuntimeException except of an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@535709 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_70",
        "file": [
            {
                "sha": "051c18db45a3cd377c1484acec7d7d715d843518",
                "filename": "modules/host-embedded/src/main/java/org/apache/tuscany/host/embedded/impl/DefaultSCADomain.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f23debccb6d6b29ca3c2e05c5e31ce4c3024a9d7/modules/host-embedded/src/main/java/org/apache/tuscany/host/embedded/impl/DefaultSCADomain.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f23debccb6d6b29ca3c2e05c5e31ce4c3024a9d7/modules/host-embedded/src/main/java/org/apache/tuscany/host/embedded/impl/DefaultSCADomain.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/host-embedded/src/main/java/org/apache/tuscany/host/embedded/impl/DefaultSCADomain.java?ref=f23debccb6d6b29ca3c2e05c5e31ce4c3024a9d7",
                "patch": "@@ -282,9 +282,7 @@ private URL getContributionLocation(String contributionPath, String[] composites\n                 }\n             }\n             if (componentContext == null) {\n-                if (component == null) {\n-                    throw new ServiceRuntimeException(\"Composite service not found: \" + name);\n-                }\n+                throw new ServiceRuntimeException(\"Composite service not found: \" + name);\n             }\n         } else {\n             componentContext = (ComponentContext)component;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/62cb337f0a867d67f7a0bfc2987dd67cada56735",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/2f2040fe12acd654bafb95c34c8e2fbea04a0a91",
        "message": "log exception from failure\nalso prevents an NPE from Surefire's AbstractReporter\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@506788 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_71",
        "file": [
            {
                "sha": "afa07823302e7a57b864e80c01152b90e581d00c",
                "filename": "runtime/itest/plugin/src/main/java/org/apache/tuscany/sca/plugin/itest/SCATestSet.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/62cb337f0a867d67f7a0bfc2987dd67cada56735/runtime/itest/plugin/src/main/java/org/apache/tuscany/sca/plugin/itest/SCATestSet.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/62cb337f0a867d67f7a0bfc2987dd67cada56735/runtime/itest/plugin/src/main/java/org/apache/tuscany/sca/plugin/itest/SCATestSet.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/itest/plugin/src/main/java/org/apache/tuscany/sca/plugin/itest/SCATestSet.java?ref=62cb337f0a867d67f7a0bfc2987dd67cada56735",
                "patch": "@@ -25,6 +25,8 @@\n import org.apache.maven.surefire.testset.TestSetFailedException;\n import org.apache.maven.surefire.report.ReporterManager;\n import org.apache.maven.surefire.report.ReportEntry;\n+import org.apache.maven.surefire.report.StackTraceWriter;\n+import org.apache.maven.surefire.report.PojoStackTraceWriter;\n \n import org.apache.tuscany.spi.model.Operation;\n \n@@ -46,12 +48,14 @@ public SCATestSet(MavenEmbeddedRuntime runtime, String name, URI uri, Collection\n \n     public void execute(ReporterManager reporterManager, ClassLoader classLoader) throws TestSetFailedException {\n         for (Operation<?> operation : operations) {\n-            reporterManager.testStarting(new ReportEntry(this, operation.getName(), getName()));\n+            String operationName = operation.getName();\n+            reporterManager.testStarting(new ReportEntry(this, operationName, name));\n             try {\n                 runtime.executeTest(uri, operation);\n-                reporterManager.testSucceeded(new ReportEntry(this, operation.getName(), getName()));\n+                reporterManager.testSucceeded(new ReportEntry(this, operationName, name));\n             } catch (Exception e) {\n-                reporterManager.testFailed(new ReportEntry(this, operation.getName(), getName()));\n+                StackTraceWriter stw = new PojoStackTraceWriter(name, operationName, e);\n+                reporterManager.testFailed(new ReportEntry(this, operationName, name, stw));\n                 throw new TestSetFailedException(e);\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/2d5491af5c2e7cd7e2a36a0530cf77d74326b229",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/9e665bc7646c6c2a5e5e76364ce67383e67eff2b",
        "message": "TUSCANY-700, fix NPE if session destroyed before runtime is created\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@494020 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_72",
        "file": [
            {
                "sha": "0335c7bc6af04d86bdd4784e0b8f79cc029a0c46",
                "filename": "runtime/webapp/webapp-api/src/main/java/org/apache/tuscany/runtime/webapp/TuscanySessionListener.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/2d5491af5c2e7cd7e2a36a0530cf77d74326b229/runtime/webapp/webapp-api/src/main/java/org/apache/tuscany/runtime/webapp/TuscanySessionListener.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/2d5491af5c2e7cd7e2a36a0530cf77d74326b229/runtime/webapp/webapp-api/src/main/java/org/apache/tuscany/runtime/webapp/TuscanySessionListener.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/webapp-api/src/main/java/org/apache/tuscany/runtime/webapp/TuscanySessionListener.java?ref=2d5491af5c2e7cd7e2a36a0530cf77d74326b229",
                "patch": "@@ -46,7 +46,8 @@ public void sessionCreated(HttpSessionEvent event) {\n     }\n \n     public void sessionDestroyed(HttpSessionEvent event) {\n-        runtime.sessionDestroyed(event);\n-\n+        if (runtime != null) {\n+            runtime.sessionDestroyed(event);\n+        }\n     }\n }"
            },
            {
                "sha": "156ff35b68658cb182dfabdc3f746eccc34d7077",
                "filename": "runtime/webapp/webapp-api/src/test/java/org/apache/tuscany/runtime/webapp/TuscanySessionListenerTestCase.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/2d5491af5c2e7cd7e2a36a0530cf77d74326b229/runtime/webapp/webapp-api/src/test/java/org/apache/tuscany/runtime/webapp/TuscanySessionListenerTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/2d5491af5c2e7cd7e2a36a0530cf77d74326b229/runtime/webapp/webapp-api/src/test/java/org/apache/tuscany/runtime/webapp/TuscanySessionListenerTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/webapp-api/src/test/java/org/apache/tuscany/runtime/webapp/TuscanySessionListenerTestCase.java?ref=2d5491af5c2e7cd7e2a36a0530cf77d74326b229",
                "patch": "@@ -52,4 +52,9 @@ public void testRuntimeNotConfigured() throws Exception {\n         listener.sessionCreated(event);\n         EasyMock.verify(context);\n     }\n+\n+    public void testSessionDestroyedBeforeCreated() throws Exception {\n+        TuscanySessionListener listener = new TuscanySessionListener();\n+        listener.sessionDestroyed(null);\n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/911ca6e9359b0d0017ca8d2f1c2d5c631fbab2f2",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/204d21225259da1c63ca4bed3868fbfc6fec3e8e",
        "message": "need to give better error info than NPE for bad wsdl location\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@433593 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_73",
        "file": [
            {
                "sha": "f7767c91a23bbbe4c7fa1da11fd6768bbeafbcf1",
                "filename": "databinding/databinding-sdo/src/main/java/org/apache/tuscany/databinding/sdo/ImportSDOLoader.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/911ca6e9359b0d0017ca8d2f1c2d5c631fbab2f2/databinding/databinding-sdo/src/main/java/org/apache/tuscany/databinding/sdo/ImportSDOLoader.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/911ca6e9359b0d0017ca8d2f1c2d5c631fbab2f2/databinding/databinding-sdo/src/main/java/org/apache/tuscany/databinding/sdo/ImportSDOLoader.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/databinding/databinding-sdo/src/main/java/org/apache/tuscany/databinding/sdo/ImportSDOLoader.java?ref=911ca6e9359b0d0017ca8d2f1c2d5c631fbab2f2",
                "patch": "@@ -109,6 +109,9 @@ private void importWSDL(XMLStreamReader reader, DeploymentContext deploymentCont\n                     wsdlURL = uri.toURL();\n                 }\n                 wsdlURL = deploymentContext.getClassLoader().getResource(location);\n+                if(null == wsdlURL){\n+                    throw new LoaderException(\"WSDL location error '\" +location+\"'\");\n+                }\n                 InputStream xsdInputStream = wsdlURL.openStream();\n                 try {\n                     XSDHelper xsdHelper = SDOUtil.createXSDHelper(typeHelper);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/90811ab848c77f6837c00f70d99e561fb885ded2",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/2bd394fad1e2d3349e2d4cef4fcd78d88c51f7fd",
        "message": "Fixed the NPE instroduced by r432913 by adding the ComponentBindlessBuilder to the composite.scdl\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@433258 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_74",
        "file": [
            {
                "sha": "f84f58954881f2990e65ebf1904720779cb0e2ce",
                "filename": "commands/launcher/src/main/resources/META-INF/tuscany/composite.scdl",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/90811ab848c77f6837c00f70d99e561fb885ded2/commands/launcher/src/main/resources/META-INF/tuscany/composite.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/90811ab848c77f6837c00f70d99e561fb885ded2/commands/launcher/src/main/resources/META-INF/tuscany/composite.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/commands/launcher/src/main/resources/META-INF/tuscany/composite.scdl?ref=90811ab848c77f6837c00f70d99e561fb885ded2",
                "patch": "@@ -39,4 +39,7 @@\n     <component name=\"composite.builder\">\n         <system:implementation.system class=\"org.apache.tuscany.core.implementation.composite.CompositeBuilder\"/>\n     </component>\n+    <component name=\"composite.bindlessbuilder\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.implementation.composite.CompositeBindlessBuilder\"/>\n+    </component>\n </composite>"
            },
            {
                "sha": "b4cee97b4018f3dd4b34a622b3d7419d4c47209f",
                "filename": "runtime/webapp-host/src/main/resources/META-INF/sca/composite.scdl",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/90811ab848c77f6837c00f70d99e561fb885ded2/runtime/webapp-host/src/main/resources/META-INF/sca/composite.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/90811ab848c77f6837c00f70d99e561fb885ded2/runtime/webapp-host/src/main/resources/META-INF/sca/composite.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/main/resources/META-INF/sca/composite.scdl?ref=90811ab848c77f6837c00f70d99e561fb885ded2",
                "patch": "@@ -39,4 +39,7 @@\n     <component name=\"composite.builder\">\n         <system:implementation.system class=\"org.apache.tuscany.core.implementation.composite.CompositeBuilder\"/>\n     </component>\n+    <component name=\"composite.bindlessbuilder\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.implementation.composite.CompositeBindlessBuilder\"/>\n+    </component>\n </composite>"
            },
            {
                "sha": "8a9dec18cd34a81fe73853a25d71c4fe0a005359",
                "filename": "test/src/main/resources/META-INF/tuscany/composite.scdl",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/90811ab848c77f6837c00f70d99e561fb885ded2/test/src/main/resources/META-INF/tuscany/composite.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/90811ab848c77f6837c00f70d99e561fb885ded2/test/src/main/resources/META-INF/tuscany/composite.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/test/src/main/resources/META-INF/tuscany/composite.scdl?ref=90811ab848c77f6837c00f70d99e561fb885ded2",
                "patch": "@@ -39,4 +39,8 @@\n     <component name=\"composite.builder\">\n         <system:implementation.system class=\"org.apache.tuscany.core.implementation.composite.CompositeBuilder\"/>\n     </component>\n+    <component name=\"composite.bindlessbuilder\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.implementation.composite.CompositeBindlessBuilder\"/>\n+    </component>\n+    \n </composite>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/3a4ba8ecd78f33f753e576681590dc921db5c71c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/26982e37a5e63acf1b08e7dc285395af4f72d957",
        "message": "Fix for wrong wsdl location.\nThrow a better exception than NPE if wsdl is not found.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@431878 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_75",
        "file": [
            {
                "sha": "150972883860bdb37ef97bad7318ad003c53d9c9",
                "filename": "bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/WebServiceBindingLoader.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/3a4ba8ecd78f33f753e576681590dc921db5c71c/bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/WebServiceBindingLoader.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/3a4ba8ecd78f33f753e576681590dc921db5c71c/bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/WebServiceBindingLoader.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/WebServiceBindingLoader.java?ref=3a4ba8ecd78f33f753e576681590dc921db5c71c",
                "patch": "@@ -116,6 +116,7 @@ private WebServiceBinding createBinding(String port, String portURI, DeploymentC\n             // FIXME need to find out how to get wsdl and what context to use --- terrible hack attack!\n             // URL wsdlurl = Thread.currentThread().getContextClassLoader().getResource(wsdlLocation);\n             URL wsdlurl = deploymentContext.getClassLoader().getResource(wsdlLocation);\n+            if(wsdlurl == null) throw new RuntimeException(\"Failed to load wsdl from '\" + wsdlLocation +\"'\" );\n             \n             WSDLFactory factory = WSDLFactory.newInstance();\n             WSDLReader reader = factory.newWSDLReader();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/ea3bf0bb8286b98acf71fb4e2b280a1ce2aa6d10",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/2aae20e1c0041c43822b1c4b571cb5759a8d8a1c",
        "message": "Give a little better message than NPE when a type is not found in the registered SDO types.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@398921 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_76",
        "file": [
            {
                "sha": "5da21349c2181e11451d0777407636dc2208319a",
                "filename": "bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/util/AxiomHelper.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/ea3bf0bb8286b98acf71fb4e2b280a1ce2aa6d10/bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/util/AxiomHelper.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/ea3bf0bb8286b98acf71fb4e2b280a1ce2aa6d10/bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/util/AxiomHelper.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/bindings/binding.axis2/src/main/java/org/apache/tuscany/binding/axis2/util/AxiomHelper.java?ref=ea3bf0bb8286b98acf71fb4e2b280a1ce2aa6d10",
                "patch": "@@ -27,6 +27,7 @@\n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n \n+import org.apache.tuscany.core.wire.InvocationRuntimeException;\n import org.apache.tuscany.sdo.helper.DataFactoryImpl;\n import org.apache.tuscany.sdo.helper.XMLHelperImpl;\n import org.apache.tuscany.sdo.helper.XSDHelperImpl;\n@@ -176,6 +177,9 @@ public static DataObject toDataObject(TypeHelper typeHelper, OMElement omElement\n     public static DataObject toDataObject(TypeHelper typeHelper, Object[] os, QName typeQN) {\n         XSDHelper xsdHelper = new XSDHelperImpl(typeHelper);\n         Property property = xsdHelper.getGlobalProperty(typeQN.getNamespaceURI(), typeQN.getLocalPart(), true);\n+        if(null == property){\n+            throw new InvocationRuntimeException(\"Type '\" + typeQN.toString() + \"' not found in registered SDO types.\" );\n+        }\n         DataObject dataObject = new DataFactoryImpl(typeHelper).create(property.getType());\n         List ips = dataObject.getInstanceProperties();\n         for (int i = 0; i < ips.size(); i++) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/168b6aa57634aa5c99b0c6d49545008ce2fdeb6b",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/9a80c9308753d552d98c95ad77556cbdb04179f6",
        "message": "report missing implementation as a error rather than a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@381503 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_77",
        "file": [
            {
                "sha": "b7f319a10380d6da6136f8109f0a259e833ad3a7",
                "filename": "core/src/main/java/org/apache/tuscany/core/context/impl/AbstractAggregateContext.java",
                "status": "modified",
                "additions": 9,
                "deletions": 2,
                "changes": 11,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/168b6aa57634aa5c99b0c6d49545008ce2fdeb6b/core/src/main/java/org/apache/tuscany/core/context/impl/AbstractAggregateContext.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/168b6aa57634aa5c99b0c6d49545008ce2fdeb6b/core/src/main/java/org/apache/tuscany/core/context/impl/AbstractAggregateContext.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/core/src/main/java/org/apache/tuscany/core/context/impl/AbstractAggregateContext.java?ref=168b6aa57634aa5c99b0c6d49545008ce2fdeb6b",
                "patch": "@@ -53,6 +53,7 @@\n import org.apache.tuscany.model.assembly.ExternalService;\n import org.apache.tuscany.model.assembly.Module;\n import org.apache.tuscany.model.assembly.Scope;\n+import org.apache.tuscany.model.assembly.ComponentImplementation;\n import org.apache.tuscany.model.assembly.impl.AssemblyFactoryImpl;\n \n /**\n@@ -288,8 +289,14 @@ public void registerModelObject(Extensible model) throws ConfigurationException\n             Module newModule = (Module) model;\n             module = newModule;\n             for (Component component : newModule.getComponents()) {\n-                configuration = (RuntimeConfiguration<InstanceContext>) component.getComponentImplementation()\n-                        .getRuntimeConfiguration();\n+                ComponentImplementation componentImplementation = component.getComponentImplementation();\n+                if (componentImplementation == null) {\n+                    ConfigurationException e = new ConfigurationException(\"Component implementation not set\");\n+                    e.addContextName(component.getName());\n+                    e.addContextName(getName());\n+                    throw e;\n+                }\n+                configuration = (RuntimeConfiguration<InstanceContext>) componentImplementation .getRuntimeConfiguration();\n                 if (configuration == null) {\n                     ConfigurationException e = new ConfigurationException(\"Runtime configuration not set\");\n                     e.addContextName(component.getName());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/6ac8007e72eb76ab585e17c348ea2965c36e722c",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/9418d5a0e185fac6a4ab944dae7b87ca71cffd6a",
        "message": "TUSCANY-3430 - Processing asset contribution first to avoid NPE while processing contribution dependency. This looks like the issue that got fixed in 2.x by providing a pre-resolve phase to process/resolve the contribution dependencies\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/sca-java-1.x/trunk@903364 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_78",
        "file": [
            {
                "sha": "54605acb05588034bd6b3d7136f28d39ad9f4235",
                "filename": "samples/domain-management/src/main/java/manager/WireComponents.java",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/6ac8007e72eb76ab585e17c348ea2965c36e722c/samples/domain-management/src/main/java/manager/WireComponents.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/6ac8007e72eb76ab585e17c348ea2965c36e722c/samples/domain-management/src/main/java/manager/WireComponents.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/samples/domain-management/src/main/java/manager/WireComponents.java?ref=6ac8007e72eb76ab585e17c348ea2965c36e722c",
                "patch": "@@ -157,18 +157,18 @@ public static void main(String[] args) throws Exception {\n         Workspace workspace = workspaceFactory.createWorkspace();\n         workspace.setModelResolver(new ExtensibleModelResolver(workspace, extensionPoints));\n \n-        // Read the sample store contribution\n-        URI storeURI = URI.create(\"store\");\n-        URL storeURL = new File(\"./target/sample-domain-management-store.jar\").toURI().toURL();\n-        Contribution storeContribution = contributionProcessor.read(null, storeURI, storeURL);\n-        workspace.getContributions().add(storeContribution);\n-\n         // Read the sample assets contribution\n         URI assetsURI = URI.create(\"assets\");\n         URL assetsURL = new File(\"./target/sample-domain-management-assets.jar\").toURI().toURL();\n         Contribution assetsContribution = contributionProcessor.read(null, assetsURI, assetsURL);\n         workspace.getContributions().add(assetsContribution);\n \n+        // Read the sample store contribution\n+        URI storeURI = URI.create(\"store\");\n+        URL storeURL = new File(\"./target/sample-domain-management-store.jar\").toURI().toURL();\n+        Contribution storeContribution = contributionProcessor.read(null, storeURI, storeURL);\n+        workspace.getContributions().add(storeContribution);\n+\n         // Read the sample client contribution\n         URI clientURI = URI.create(\"client\");\n         URL clientURL = new File(\"./target/sample-domain-management-client.jar\").toURI().toURL();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/7d0d45321f1f35eb5e9fd29b57b21916c152c922",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/66a28877970cfec889909b8ab4dae6c1a500a23e",
        "message": "TUSCANY-3099 log an error if an invalid header priority is entered\nTUSCANY-3098 don't throw an NPE is a property doesn't have a name\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@788735 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_79",
        "file": [
            {
                "sha": "2ed1dcf48b326f335ba9dbb2f4c94a6b6369ba20",
                "filename": "modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessor.java",
                "status": "modified",
                "additions": 21,
                "deletions": 11,
                "changes": 32,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/7d0d45321f1f35eb5e9fd29b57b21916c152c922/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/7d0d45321f1f35eb5e9fd29b57b21916c152c922/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms/src/main/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessor.java?ref=7d0d45321f1f35eb5e9fd29b57b21916c152c922",
                "patch": "@@ -565,11 +565,15 @@ private void parseHeaders(XMLStreamReader reader, JMSBinding jmsBinding) throws\n \n         String jmsPriority = reader.getAttributeValue(null, \"JMSPriority\");\n         if (jmsPriority != null && jmsPriority.length() > 0) {\n-            int p = Integer.parseInt(jmsPriority);\n-            if (p >= 0 && p <= 9) {\n-                jmsBinding.setJMSPriority(p);\n-            } else {\n-                warning(\"InvalidJMSPriority\", jmsBinding, jmsPriority);\n+            try {\n+                int p = Integer.parseInt(jmsPriority);\n+                if (p >= 0 && p <= 9) {\n+                    jmsBinding.setJMSPriority(p);\n+                } else {\n+                    warning(\"InvalidJMSPriority\", jmsBinding, jmsPriority);\n+                }\n+            } catch (NumberFormatException ex) {\n+                error(\"InvalidJMSPriority\", jmsBinding, jmsPriority);\n             }\n         }\n \n@@ -702,11 +706,15 @@ private void parseOperationHeaders(XMLStreamReader reader, JMSBinding jmsBinding\n \n         String jmsPriority = reader.getAttributeValue(null, \"JMSPriority\");\n         if (jmsPriority != null && jmsPriority.length() > 0) {\n-            int p = Integer.parseInt(jmsPriority);\n-            if (p >= 0 && p <= 9) {\n-                jmsBinding.setOperationJMSPriority(opName, p);\n-            } else {\n-                warning(\"InvalidOPJMSPriority\", jmsBinding, jmsPriority);\n+            try {\n+                int p = Integer.parseInt(jmsPriority);\n+                if (p >= 0 && p <= 9) {\n+                    jmsBinding.setOperationJMSPriority(opName, p);\n+                } else {\n+                    warning(\"InvalidOPJMSPriority\", jmsBinding, jmsPriority);\n+                }\n+            } catch (NumberFormatException ex) {\n+                error(\"InvalidOPJMSPriority\", jmsBinding, jmsPriority);\n             }\n         }\n \n@@ -1195,7 +1203,9 @@ private void writeBindingProperties(Map<String, BindingProperty> properties, XML\n             Object value = entry.getValue();\n \n             writer.writeStartElement(Constants.SCA10_NS, \"property\" );\n-            writer.writeAttribute(\"name\", key.toString());\n+            if (key != null){\n+                writer.writeAttribute(\"name\", key.toString());\n+            }\n \n             if ( value instanceof String) {\n                 writer.writeCharacters( value.toString() );"
            },
            {
                "sha": "42a669b9ab427bbac4b64086ea7aaded145094be",
                "filename": "modules/binding-jms/src/test/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessorTestCase.java",
                "status": "modified",
                "additions": 30,
                "deletions": 0,
                "changes": 30,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/7d0d45321f1f35eb5e9fd29b57b21916c152c922/modules/binding-jms/src/test/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessorTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/7d0d45321f1f35eb5e9fd29b57b21916c152c922/modules/binding-jms/src/test/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessorTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jms/src/test/java/org/apache/tuscany/sca/binding/jms/impl/JMSBindingProcessorTestCase.java?ref=7d0d45321f1f35eb5e9fd29b57b21916c152c922",
                "patch": "@@ -77,6 +77,20 @@\n             + \"      </service>\"\r\n             + \" </component>\"\r\n             + \"</composite>\";\r\n+    \r\n+    public static final String HEADERS_INVALID_PRIORITY =\r\n+        \"<?xml version=\\\"1.0\\\" encoding=\\\"ASCII\\\"?>\" \r\n+        + \"<composite xmlns=\\\"http://www.osoa.org/xmlns/sca/1.0\\\" targetNamespace=\\\"http://binding-jms\\\" name=\\\"binding-jms\\\">\"\r\n+            + \" <component name=\\\"HelloWorldComponent\\\">\"\r\n+            + \"   <implementation.java class=\\\"services.HelloWorld\\\"/>\"\r\n+            + \"      <service name=\\\"HelloWorldService\\\">\"\r\n+            + \"          <binding.jms uri=\\\"jms:testQueue\\\" >\"\r\n+            + \"             <headers JMSType=\\\"myType\\\" JMSCorrelationID=\\\"myCorrelId\\\" JMSDeliveryMode=\\\"PERSISTENT\\\" JMSTimeToLive=\\\"54321\\\" JMSPriority=\\\"medium\\\">\"\r\n+            + \"             </headers>\" \r\n+            + \"          </binding.jms>\"\r\n+            + \"      </service>\"\r\n+            + \" </component>\"\r\n+            + \"</composite>\";\r\n \r\n     public static final String PROPERTIES1 =\r\n         \"<?xml version=\\\"1.0\\\" encoding=\\\"ASCII\\\"?>\" \r\n@@ -476,6 +490,22 @@ public void testParsingValidationErrors1() throws Exception {\n             assertTrue( e.getClass().isAssignableFrom( JMSBindingException.class ) );\r\n         }\r\n     }\r\n+    \r\n+    public void testParsingValidationErrors2() throws Exception {        \r\n+        // Composite with invalid priority\r\n+        XMLStreamReader reader = inputFactory.createXMLStreamReader(new StringReader(HEADERS_INVALID_PRIORITY));\r\n+\r\n+        try {\r\n+            Composite composite = (Composite)staxProcessor.read(reader);       \r\n+        } catch(Exception e) {\r\n+            // JMSBindingExceptions are expected with invalid composite.\r\n+            if ( !e.getClass().isAssignableFrom( JMSBindingException.class ) )\r\n+                throw e;\r\n+            // Do assertion to make sure test registers results.\r\n+            assertTrue( e.getClass().isAssignableFrom( JMSBindingException.class ) );\r\n+            return;\r\n+        }\r\n+    }    \r\n \r\n     /** Test various model validation requirements. */\r\n     public void testValidationErrors1() throws Exception {\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/39813d74e991bca165969500546234413a384bf4",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/3a727d0335e0c8b2d44e7c44688708c893eee014",
        "message": "TUSCANY-3111 - Fixed NPE when using the RSS binding on a Java component implementation that does not implement the org.apache.tuscany.sca.binding.rss.collection.Collections interface\n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@786955 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_80",
        "file": [
            {
                "sha": "66dca99ccffa0fbc0f50e039c4bbca988a15cdc3",
                "filename": "modules/binding-rss-rome/src/main/java/org/apache/tuscany/sca/binding/rss/provider/RSSBindingListenerServlet.java",
                "status": "modified",
                "additions": 11,
                "deletions": 10,
                "changes": 21,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/39813d74e991bca165969500546234413a384bf4/modules/binding-rss-rome/src/main/java/org/apache/tuscany/sca/binding/rss/provider/RSSBindingListenerServlet.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/39813d74e991bca165969500546234413a384bf4/modules/binding-rss-rome/src/main/java/org/apache/tuscany/sca/binding/rss/provider/RSSBindingListenerServlet.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-rss-rome/src/main/java/org/apache/tuscany/sca/binding/rss/provider/RSSBindingListenerServlet.java?ref=39813d74e991bca165969500546234413a384bf4",
                "patch": "@@ -108,16 +108,17 @@\n         }\n \n         // Determine the collection item type\n-        itemXMLType = new DataTypeImpl<Class<?>>(String.class.getName(), String.class, String.class);\n-        Class<?> itemClass = getOperation.getOutputType().getPhysical();\n-        if (itemClass == SyndEntry.class) {\n-            supportsFeedEntries = true;\n+        if (getOperation != null) {\n+            itemXMLType = new DataTypeImpl<Class<?>>(String.class.getName(), String.class, String.class);\n+            Class<?> itemClass = getOperation.getOutputType().getPhysical();\n+            if (itemClass == SyndEntry.class) {\n+                supportsFeedEntries = true;\n+            }\n+            DataType<XMLType> outputType = getOperation.getOutputType();\n+            QName qname = outputType.getLogical().getElementName();\n+            qname = new QName(qname.getNamespaceURI(), itemClass.getSimpleName());\n+            itemClassType = new DataTypeImpl<XMLType>(\"java:complexType\", itemClass, new XMLType(qname, null));\n         }\n-        DataType<XMLType> outputType = getOperation.getOutputType();\n-        QName qname = outputType.getLogical().getElementName();\n-        qname = new QName(qname.getNamespaceURI(), itemClass.getSimpleName());\n-        itemClassType = new DataTypeImpl<XMLType>(\"java:complexType\", itemClass, new XMLType(qname, null));\n-        \n     }\n \n     @Override\n@@ -196,7 +197,7 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response) t\n     }\n \n     /**\n-     * Create an Atom entry from a data collection entry.\n+     * Create an RSS entry from a data collection entry.\n      * @param entry \n      * @return\n      */"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/3dd5b501bf2222372d02d8dcf1fd776075ca8b48",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/decdd6fc2da62decb8912ac8b8bc8b00a1e15a61",
        "message": "Add monitor dependency to pom to solve NPE. Not sure why this test is not picking this up via host-embedded. I will investigate. \n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@659022 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_81",
        "file": [
            {
                "sha": "f1e6a62e2cd10c948de2850648fe4d858ef12242",
                "filename": "itest/contribution-classloader/contribution-test/pom.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/3dd5b501bf2222372d02d8dcf1fd776075ca8b48/itest/contribution-classloader/contribution-test/pom.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/3dd5b501bf2222372d02d8dcf1fd776075ca8b48/itest/contribution-classloader/contribution-test/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/contribution-classloader/contribution-test/pom.xml?ref=3dd5b501bf2222372d02d8dcf1fd776075ca8b48",
                "patch": "@@ -41,6 +41,13 @@\n             <version>2.0-incubating-SNAPSHOT</version>\n             <scope>runtime</scope>\n         </dependency>\n+        \n+        <dependency>\n+            <groupId>org.apache.tuscany.sca</groupId>\n+            <artifactId>tuscany-monitor-logging</artifactId>\n+            <version>2.0-incubating-SNAPSHOT</version>\n+            <scope>runtime</scope>\n+        </dependency>        \n \n         <dependency>\n             <groupId>junit</groupId>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/a025cb49b420fa75b0ad3c1043aa20b8f020ed4d",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/ba140a7706476ca831538e387c56e7aee01bd2f0",
        "message": "TUSCANY-2023 Fix NPE when Service Implementation exposes multiple services and has a callback and one of the implemented interfaces does not have a callback\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@616731 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_82",
        "file": [
            {
                "sha": "b82e0df117d2adad9074f0b6690730633f192910",
                "filename": "modules/implementation-java/src/main/java/org/apache/tuscany/sca/implementation/java/introspect/impl/ServiceProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/a025cb49b420fa75b0ad3c1043aa20b8f020ed4d/modules/implementation-java/src/main/java/org/apache/tuscany/sca/implementation/java/introspect/impl/ServiceProcessor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/a025cb49b420fa75b0ad3c1043aa20b8f020ed4d/modules/implementation-java/src/main/java/org/apache/tuscany/sca/implementation/java/introspect/impl/ServiceProcessor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/implementation-java/src/main/java/org/apache/tuscany/sca/implementation/java/introspect/impl/ServiceProcessor.java?ref=a025cb49b420fa75b0ad3c1043aa20b8f020ed4d",
                "patch": "@@ -135,7 +135,7 @@ private void createCallback(JavaImplementation type, JavaElementImpl element)\n         }        \n         for (Service service : type.getServices()) {\n             JavaInterface javaInterface = (JavaInterface)service.getInterfaceContract().getCallbackInterface();\n-            if (baseType == javaInterface.getJavaClass()) {\n+            if (javaInterface != null && baseType == javaInterface.getJavaClass()) {\n                 callbackService = service;\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/520920c4fdba44043793fcb34945a979c1049140",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/b439407d393b7a21a834ec4c7656b2a5336d1d9d",
        "message": "Fix for TUSCANY-1736, add a check for null request path in the Feed binding listener servlet, to fix an NPE in the store sample.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@576738 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_83",
        "file": [
            {
                "sha": "a949b4d16dcf4d5290bf573c1c58a11707d772ee",
                "filename": "modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java",
                "status": "modified",
                "additions": 16,
                "deletions": 15,
                "changes": 31,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/520920c4fdba44043793fcb34945a979c1049140/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/520920c4fdba44043793fcb34945a979c1049140/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-feed/src/main/java/org/apache/tuscany/sca/binding/feed/provider/FeedBindingListenerServlet.java?ref=520920c4fdba44043793fcb34945a979c1049140",
                "patch": "@@ -445,23 +445,24 @@ protected void doDelete(HttpServletRequest request, HttpServletResponse response\n         // Get the request path\n         String path = request.getPathInfo();\n \n-        if (path.startsWith(\"/\")) {\n-            String id = path.substring(1);\n+        String id;\n+        if (path != null && path.startsWith(\"/\")) {\n+            id = path.substring(1);\n+        } else {\n+            id = \"\";\n+        }\n \n-            // Delete a specific entry from the collection\n-            Message requestMessage = messageFactory.createMessage();\n-            requestMessage.setBody(new Object[] {id});\n-            Message responseMessage = deleteInvoker.invoke(requestMessage);\n-            if (responseMessage.isFault()) {\n-                Object body = responseMessage.getBody();\n-                if (body instanceof NotFoundException) {\n-                    response.sendError(HttpServletResponse.SC_NOT_FOUND);\n-                } else {\n-                    throw new ServletException((Throwable)responseMessage.getBody());\n-                }\n+        // Delete a specific entry from the collection\n+        Message requestMessage = messageFactory.createMessage();\n+        requestMessage.setBody(new Object[] {id});\n+        Message responseMessage = deleteInvoker.invoke(requestMessage);\n+        if (responseMessage.isFault()) {\n+            Object body = responseMessage.getBody();\n+            if (body instanceof NotFoundException) {\n+                response.sendError(HttpServletResponse.SC_NOT_FOUND);\n+            } else {\n+                throw new ServletException((Throwable)responseMessage.getBody());\n             }\n-        } else {\n-            response.sendError(HttpServletResponse.SC_NOT_FOUND);\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/0aa8d35c80a28716fce69466920557436c14a331",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/c8aad7528ca4334551d23af4f3f68b72d21e2325",
        "message": "Fix the databindings interop testcase that was failing with NPE as the sca domain instance can be null when the static initialised var is true. Not completly sure i understand this test to know this is the cirrect fix, but it does get eveything working\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@536812 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_84",
        "file": [
            {
                "sha": "f4792da2ad303a21324c5e5c775b65ab12ee7f14",
                "filename": "itest/databindings/interop/src/main/resources/generate/InteropDatabindingTestCase.java.vm",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/0aa8d35c80a28716fce69466920557436c14a331/itest/databindings/interop/src/main/resources/generate/InteropDatabindingTestCase.java.vm",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/0aa8d35c80a28716fce69466920557436c14a331/itest/databindings/interop/src/main/resources/generate/InteropDatabindingTestCase.java.vm",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/itest/databindings/interop/src/main/resources/generate/InteropDatabindingTestCase.java.vm?ref=0aa8d35c80a28716fce69466920557436c14a331",
                "patch": "@@ -43,7 +43,7 @@ public class InteropDatabindingTestCase extends TestCase  {\n \n     private static boolean initalised = false;\n     private GreeterService greeterClient;\n-    private SCADomain domain;\n+    private static SCADomain domain;\n \n     /**\n      * Runs before each test method"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/48424ac67e0e6fd2ecd6cd86913130214f565b7f",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/e64d757278d8a85e4694840173d9e473c009d5f4",
        "message": "Fixed NPE caused by changing the default multiplicity to null. We're changing it to null so that a component reference can inherit it from the corresponding reference.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@535760 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_85",
        "file": [
            {
                "sha": "ea801b9c67d277be7ea83471d0b2b9ac1a5a569b",
                "filename": "modules/assembly-xml/src/test/java/org/apache/tuscany/assembly/xml/ReadAllTestCase.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/48424ac67e0e6fd2ecd6cd86913130214f565b7f/modules/assembly-xml/src/test/java/org/apache/tuscany/assembly/xml/ReadAllTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/48424ac67e0e6fd2ecd6cd86913130214f565b7f/modules/assembly-xml/src/test/java/org/apache/tuscany/assembly/xml/ReadAllTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly-xml/src/test/java/org/apache/tuscany/assembly/xml/ReadAllTestCase.java?ref=48424ac67e0e6fd2ecd6cd86913130214f565b7f",
                "patch": "@@ -124,7 +124,6 @@ public void testReadComposite() throws Exception {\n         assertEquals(calcComponentReference.getName(), \"addService\");\n         assertEquals(calcComponentReference.isAutowire(), false);\n         assertEquals(calcComponentReference.isWiredByImpl(), false);\n-        assertEquals(calcComponentReference.getMultiplicity(), Multiplicity.ONE_ONE);\n         assertEquals(calcComponentReference.getRequiredIntents().get(0).getName(),\n                      new QName(\"http://test/confidentiality\", \"confidentiality\"));\n         assertEquals(calcComponentReference.getPolicySets().get(0).getName(), new QName(\"http://test/secure\", \"secure\"));"
            },
            {
                "sha": "7d2957fb0f0c9e28a9e534148816af053cb92a51",
                "filename": "modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/ReferenceUtil.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/48424ac67e0e6fd2ecd6cd86913130214f565b7f/modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/ReferenceUtil.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/48424ac67e0e6fd2ecd6cd86913130214f565b7f/modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/ReferenceUtil.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/assembly/src/main/java/org/apache/tuscany/assembly/builder/impl/ReferenceUtil.java?ref=48424ac67e0e6fd2ecd6cd86913130214f565b7f",
                "patch": "@@ -55,6 +55,13 @@ static boolean validateMultiplicityAndTargets(Multiplicity multiplicity,\n                 return false;\n             }\n         }\n+        \n+        //FIXME workaround, this validation is sometimes invoked too early\n+        // because we get a chance to init the multiplicity attribute\n+        if (multiplicity == null) {\n+            return true;\n+        }\n+        \n         switch (multiplicity) {\n             case ZERO_N:\n                 break;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/9bb9289d9d09dc1d01ea945c88b570f16cd7c714",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/ddfaff8c403cf85533ae56f4fa50ad6c54be5b0a",
        "message": "This seems to in the loanconversationWSclient case on a void case to be called with NULL as arg. resulting in NPE.\nThis fixes seems to fix it. Need venkat to look at it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@496829 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_86",
        "file": [
            {
                "sha": "53c5d891cb937bb29dd6ae9914bf2fdfdd4db769",
                "filename": "kernel/core/src/main/java/org/apache/tuscany/core/databinding/impl/PassByValueInterceptor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/9bb9289d9d09dc1d01ea945c88b570f16cd7c714/kernel/core/src/main/java/org/apache/tuscany/core/databinding/impl/PassByValueInterceptor.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/9bb9289d9d09dc1d01ea945c88b570f16cd7c714/kernel/core/src/main/java/org/apache/tuscany/core/databinding/impl/PassByValueInterceptor.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/kernel/core/src/main/java/org/apache/tuscany/core/databinding/impl/PassByValueInterceptor.java?ref=9bb9289d9d09dc1d01ea945c88b570f16cd7c714",
                "patch": "@@ -100,6 +100,7 @@ public Message invoke(Message msg) {\n     }\r\n \r\n     public Object copy(Object arg, DataBinding argDataBinding) {\r\n+        if(arg == null) return null;\r\n         Object copiedArg;\r\n         if (dataBinding != null) {\r\n             copiedArg = dataBinding.copy(arg);\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/976e670f8683be515925046b5282b8cfbb3d5b3f",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/598fc4218b777c7b02ccbb20e22928d391972d56",
        "message": "TUSCANY-2069 - Fixed a NPE build break by the recent change of paths from HashMap to ConcurrentHashMap. The problem is that HashMap supports null keys and values whereas ConcurrentHashMap does not. I've added a null check in the code to make sure that null values are not added to the ConcurrentHashMap\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@649008 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_87",
        "file": [
            {
                "sha": "5b7a189490ef504f7861d05d8a0ddd36ecde745f",
                "filename": "modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/976e670f8683be515925046b5282b8cfbb3d5b3f/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/976e670f8683be515925046b5282b8cfbb3d5b3f/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/databinding/src/main/java/org/apache/tuscany/sca/databinding/impl/DirectedGraph.java?ref=976e670f8683be515925046b5282b8cfbb3d5b3f",
                "patch": "@@ -316,7 +316,9 @@ public Path getShortestPath(V sourceValue, V targetValue) {\n             nextNode = extractMin(otherNodes);\n             if (nextNode.vertex == target) {\n                 path = getPath(nextNode);\n-                paths.put(pair, path); // Cache it\n+                if (path != null) {\n+                    paths.put(pair, path); // Cache it\n+                }\n                 return path;\n             }\n             nodesOnPath.add(nextNode);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/f6e36f91184f3a2f37a29849a28024d56038fa70",
        "message": "make autowire throw a TargetException when the target cannot be resolved (this will avoid NPEs being thrown in components as a result of configuration error; cleanup of system SCDLs to resolve all autowires; introduce test cases into webapp and webapp-host so that we can verify autowire configuration and basic bootstrap operation; cleanup of webapp and webapp-host projects\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@437500 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_88",
        "file": [
            {
                "sha": "48ab8cb59f7e25fbcce1b1e7b8da274ee067333d",
                "filename": "commands/launcher/src/main/resources/META-INF/tuscany/system.scdl",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/commands/launcher/src/main/resources/META-INF/tuscany/system.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/commands/launcher/src/main/resources/META-INF/tuscany/system.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/commands/launcher/src/main/resources/META-INF/tuscany/system.scdl?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -114,4 +114,12 @@\n         <system:implementation.system class=\"org.apache.tuscany.core.services.work.jsr237.Jsr237WorkScheduler\"/>\n     </component>\n \n+    <component name=\"policyBuilderRegistry\">\n+         <system:implementation.system class=\"org.apache.tuscany.core.policy.PolicyBuilderRegistryImpl\"/>\n+    </component>\n+\n+    <component name=\"propertyFactory\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.loader.StringParserPropertyFactory\"/>\n+    </component>\n+\n </composite>"
            },
            {
                "sha": "e4a364ada52cabeb003bf1bbbd842154e145081e",
                "filename": "core/src/main/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowire.java",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/main/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowire.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/main/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowire.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/core/src/main/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowire.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -24,6 +24,7 @@\n \n import org.apache.tuscany.spi.QualifiedName;\n import org.apache.tuscany.spi.component.TargetException;\n+import org.apache.tuscany.spi.component.TargetNotFoundException;\n import org.apache.tuscany.spi.wire.InboundInvocationChain;\n import org.apache.tuscany.spi.wire.InboundWire;\n import org.apache.tuscany.spi.wire.OutboundInvocationChain;\n@@ -39,12 +40,12 @@\n public class SystemOutboundAutowire<T> implements OutboundAutowire<T>, SystemOutboundWire<T> {\n     private String referenceName;\n     private Class<T> businessInterface;\n-    private AutowireComponent<?> context;\n+    private AutowireComponent<?> component;\n \n-    public SystemOutboundAutowire(String referenceName, Class<T> businessInterface, AutowireComponent<?> context) {\n+    public SystemOutboundAutowire(String referenceName, Class<T> businessInterface, AutowireComponent<?> component) {\n         this.referenceName = referenceName;\n         this.businessInterface = businessInterface;\n-        this.context = context;\n+        this.component = component;\n     }\n \n     public String getReferenceName() {\n@@ -63,7 +64,13 @@ public void setTargetName(QualifiedName targetName) {\n     }\n \n     public T getTargetService() throws TargetException {\n-        return context.resolveInstance(businessInterface);\n+        T service = component.resolveInstance(businessInterface);\n+        if (service == null) {\n+            TargetNotFoundException e = new TargetNotFoundException(\"Autowire target not found\");\n+            e.setIdentifier(businessInterface.getName());\n+            throw e;\n+        }\n+        return service;\n     }\n \n     public Class<T> getBusinessInterface() {"
            },
            {
                "sha": "cc81f95f3f2b3095f711aeab1684a0c03be642fb",
                "filename": "core/src/main/java/org/apache/tuscany/core/launcher/LauncherImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/main/java/org/apache/tuscany/core/launcher/LauncherImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/main/java/org/apache/tuscany/core/launcher/LauncherImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/core/src/main/java/org/apache/tuscany/core/launcher/LauncherImpl.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -85,6 +85,9 @@ public void bootRuntime(URL systemScdl, ClassLoader systemClassLoader, MonitorFa\n         RuntimeInfo runtimeInfo = new LauncherRuntimeInfo(getInstallDirectory(), getApplicationRootDirectory());\n         parent.registerJavaObject(\"RuntimeInfo\", RuntimeInfo.class, runtimeInfo);\n \n+        // registory the monitor factory\n+        parent.registerJavaObject(\"MonitorFactory\", MonitorFactory.class, monitor);\n+        \n         // create a ComponentDefinition to represent the component we are going to deploy\n         SystemCompositeImplementation moduleImplementation = new SystemCompositeImplementation();\n         moduleImplementation.setScdlLocation(systemScdl);"
            },
            {
                "sha": "d61525f1ef88fb8c5e6c879a8a5c21c1e1ac0627",
                "filename": "core/src/test/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowireTestCase.java",
                "status": "added",
                "additions": 41,
                "deletions": 0,
                "changes": 41,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/test/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowireTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/test/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowireTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/core/src/test/java/org/apache/tuscany/core/implementation/system/wire/SystemOutboundAutowireTestCase.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,41 @@\n+package org.apache.tuscany.core.implementation.system.wire;\n+\n+import org.apache.tuscany.spi.component.TargetNotFoundException;\n+\n+import junit.framework.TestCase;\n+import org.apache.tuscany.core.component.AutowireComponent;\n+import static org.easymock.EasyMock.createMock;\n+import static org.easymock.EasyMock.expect;\n+import static org.easymock.EasyMock.replay;\n+import static org.easymock.EasyMock.verify;\n+\n+/**\n+ * @version $Rev$ $Date$\n+ */\n+public class SystemOutboundAutowireTestCase extends TestCase {\n+\n+    public void testAutowire() {\n+        AutowireComponent<?> component = createMock(AutowireComponent.class);\n+        expect(component.resolveInstance(Object.class)).andReturn(new Object());\n+        replay(component);\n+        SystemOutboundAutowire<Object> wire = new SystemOutboundAutowire<Object>(\"foo\", Object.class, component);\n+        assertNotNull(wire.getTargetService());\n+        verify(component);\n+    }\n+\n+\n+    public void testNonExistentAutowire() {\n+        AutowireComponent<?> component = createMock(AutowireComponent.class);\n+        expect(component.resolveInstance(Object.class)).andReturn(null);\n+        replay(component);\n+        SystemOutboundAutowire<Object> wire = new SystemOutboundAutowire<Object>(\"foo\", Object.class, component);\n+        try {\n+            wire.getTargetService();\n+            fail();\n+        } catch (TargetNotFoundException e) {\n+            // expected\n+        }\n+        verify(component);\n+    }\n+\n+}"
            },
            {
                "sha": "a0f46e1e36bae5f373aa740f192506079557ba65",
                "filename": "core/src/test/resources/org/apache/tuscany/core/deployer/boot2.scdl",
                "status": "modified",
                "additions": 23,
                "deletions": 0,
                "changes": 23,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/test/resources/org/apache/tuscany/core/deployer/boot2.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/core/src/test/resources/org/apache/tuscany/core/deployer/boot2.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/core/src/test/resources/org/apache/tuscany/core/deployer/boot2.scdl?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -87,8 +87,31 @@\n         <system:implementation.system class=\"org.apache.tuscany.core.loader.ServiceLoader\"/>\n     </component>\n \n+    <component name=\"wireService\">\n+            <system:implementation.system class=\"org.apache.tuscany.core.wire.jdk.JDKWireService\"/>\n+    </component>\n+\n     <!-- Composite implementation type -->\n     <component name=\"composite.loader\">\n         <system:implementation.system class=\"org.apache.tuscany.core.implementation.composite.CompositeLoader\"/>\n     </component>\n+\n+    <component name=\"interfaceJava.introspector\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.idl.java.InterfaceJavaIntrospectorImpl\"/>\n+    </component>\n+\n+    <component name=\"artifactRepository\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.services.artifact.LocalMavenRepository\"/>\n+        <property name=\"repository\">.m2/repository</property>\n+    </component>\n+\n+    <component name=\"propertyFactory\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.loader.StringParserPropertyFactory\"/>\n+    </component>\n+\n+    <component name=\"policyBuilderRegistry\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.policy.PolicyBuilderRegistryImpl\"/>\n+    </component>\n+\n+\n </composite>"
            },
            {
                "sha": "3886f07f2d7dd60867eb1392bae2a4bfdef8f69c",
                "filename": "runtime/webapp-host/.ruleset",
                "status": "added",
                "additions": 190,
                "deletions": 0,
                "changes": 190,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/.ruleset",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/.ruleset",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/.ruleset?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,190 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+-->\n+<ruleset name=\"pmd-eclipse\">\n+  <description>PMD Plugin preferences rule set</description>\n+  \n+  \n+  <rule ref=\"rulesets/basic.xml/BooleanInstantiation\"/>\n+  <rule ref=\"rulesets/basic.xml/CollapsibleIfStatements\"/>\n+  <rule ref=\"rulesets/basic.xml/DoubleCheckedLocking\"/>\n+<!--<rule ref=\"rulesets/basic.xml/EmptyCatchBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyFinallyBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyIfStmt\"/>-->\n+  <rule ref=\"rulesets/basic.xml/EmptyStatementNotInLoop\"/>\n+<!--<rule ref=\"rulesets/basic.xml/EmptyStaticInitializer\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptySwitchStatements\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptySynchronizedBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyTryBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyWhileStmt\"/>-->\n+  <rule ref=\"rulesets/basic.xml/ForLoopShouldBeWhileLoop\"/>\n+  <rule ref=\"rulesets/basic.xml/JumbledIncrementer\"/>\n+<!--<rule ref=\"rulesets/basic.xml/OverrideBothEqualsAndHashcode\"/>-->\n+  <rule ref=\"rulesets/basic.xml/ReturnFromFinallyBlock\"/>\n+  <rule ref=\"rulesets/basic.xml/UnconditionalIfStatement\"/>\n+  <rule ref=\"rulesets/basic.xml/UnnecessaryConversionTemporary\"/>\n+  <rule ref=\"rulesets/basic.xml/UnnecessaryFinalModifier\"/>\n+  <rule ref=\"rulesets/basic.xml/UnnecessaryReturn\"/>\n+<!--<rule ref=\"rulesets/basic.xml/UselessOverridingMethod\"/>-->\n+  \n+<!--<rule ref=\"rulesets/braces.xml/ForLoopsMustUseBraces\"/>-->\n+<!--<rule ref=\"rulesets/braces.xml/IfElseStmtsMustUseBraces\"/>-->\n+<!--<rule ref=\"rulesets/braces.xml/IfStmtsMustUseBraces\"/>-->\n+<!--<rule ref=\"rulesets/braces.xml/WhileLoopsMustUseBraces\"/>-->\n+\n+<!--<rule ref=\"rulesets/clone.xml/CloneMethodMustImplementCloneable\"/>-->\n+<!--<rule ref=\"rulesets/clone.xml/CloneThrowsCloneNotSupportedException\"/>-->\n+<!--<rule ref=\"rulesets/clone.xml/ProperCloneImplementation\"/>-->\n+  \n+<!--<rule ref=\"rulesets/codesize.xml/CyclomaticComplexity\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessiveClassLength\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessiveMethodLength\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessiveParameterList\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessivePublicCount\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/TooManyFields\"/>-->\n+\n+<rule ref=\"rulesets/controversial.xml/AssignmentInOperand\"/>\n+<!--<rule ref=\"rulesets/controversial.xml/AtLeastOneConstructor\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/CallSuperInConstructor\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/DontImportSun\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/NullAssignment\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/OnlyOneReturn\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/SingularField\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/SuspiciousOctalEscape\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/UnnecessaryConstructor\"/>-->\n+<rule ref=\"rulesets/controversial.xml/UnnecessaryParentheses\"/>\n+<!--<rule ref=\"rulesets/controversial.xml/UnusedModifier\"/>-->\n+\n+<!--<rule ref=\"rulesets/coupling.xml/CouplingBetweenObjects\"/>-->\n+<!--<rule ref=\"rulesets/coupling.xml/ExcessiveImports\"/>-->\n+<!--<rule ref=\"rulesets/coupling.xml/LooseCoupling\"/>-->\n+\n+<!--<rule ref=\"rulesets/design.xml/AbstractClassWithoutAbstractMethod\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AccessorClassGeneration\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AssignmentToNonFinalStatic\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AvoidDeeplyNestedIfStmts\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AvoidInstanceofChecksInCatchClause\"/>-->\n+<rule ref=\"rulesets/design.xml/AvoidProtectedFieldInFinalClass\"/>\n+<!--<rule ref=\"rulesets/design.xml/AvoidReassigningParameters\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AvoidSynchronizedAtMethodLevel\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/BadComparison\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/CloseConnection\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/CompareObjectsWithEquals\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/ConfusingTernary\"/>-->\n+<rule ref=\"rulesets/design.xml/ConstructorCallsOverridableMethod\"/>\n+<!--<rule ref=\"rulesets/design.xml/DefaultLabelNotLastInSwitchStmt\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/FinalFieldCouldBeStatic\"/>-->\n+<rule ref=\"rulesets/design.xml/IdempotentOperations\"/>\n+<!--<rule ref=\"rulesets/design.xml/ImmutableField\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/InstantiationToGetClass\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/MissingBreakInSwitch\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/MissingStaticMethodInNonInstantiatableClass\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/NonCaseLabelInSwitchStatement\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/NonStaticInitializer\"/>-->\n+<rule ref=\"rulesets/design.xml/OptimizableToArrayCall\"/>\n+<rule ref=\"rulesets/design.xml/PositionLiteralsFirstInComparisons\"/>\n+<rule ref=\"rulesets/design.xml/SimplifyBooleanExpressions\"/>\n+<rule ref=\"rulesets/design.xml/SimplifyBooleanReturns\"/>\n+<rule ref=\"rulesets/design.xml/SimplifyConditional\"/>\n+<!--<rule ref=\"rulesets/design.xml/SwitchDensity\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/SwitchStmtsShouldHaveDefault\"/>-->\n+<rule ref=\"rulesets/design.xml/UnnecessaryLocalBeforeReturn\"/>\n+<!--<rule ref=\"rulesets/design.xml/UseLocaleWithCaseConversions\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/UseNotifyAllInsteadOfNotify\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/UseSingleton\"/>-->\n+\n+<!--<rule ref=\"rulesets/finalizers.xml/EmptyFinalizer\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeOnlyCallsSuperFinalize\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeOverloaded\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeDoesNotCallSuperFinalize\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeShouldBeProtected\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/AvoidCallingFinalize\"/>-->\n+\n+<!--<rule ref=\"rulesets/imports.xml/DuplicateImports\"/>-->\n+<!--<rule ref=\"rulesets/imports.xml/DontImportJavaLang\"/>-->\n+<!--<rule ref=\"rulesets/imports.xml/UnusedImports\"/>-->\n+<!--<rule ref=\"rulesets/imports.xml/ImportFromSamePackage\"/>-->\n+\n+<!--<rule ref=\"rulesets/javabeans.xml/BeanMembersShouldSerialize\"/>-->\n+<!--<rule ref=\"rulesets/javabeans.xml/MissingSerialVersionUID\"/>-->\n+\n+<!--<rule ref=\"rulesets/junit.xml/JUnitStaticSuite\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/JUnitSpelling\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/JUnitAssertionsShouldIncludeMessage\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/JUnitTestsShouldIncludeAssert\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/TestClassWithoutTestCases\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/UnnecessaryBooleanAssertion\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/UseAssertEqualsInsteadOfAssertTrue\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/UseAssertSameInsteadOfAssertTrue\"/>-->\n+\n+  <!--<rule ref=\"rulesets/logging-java.xml/AvoidPrintStackTrace\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/LoggerIsNotStaticFinal\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/MoreThanOneLogger\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/LoggerIsNotStaticFinal\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/LogBlockWithoutIf\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/SystemPrintln\"/>-->\n+  <!--<rule ref=\"rulesets/logging-jakarta-commons.xml/UseCorrectExceptionLogging\"/>-->\n+  <!--<rule ref=\"rulesets/logging-jakarta-commons.xml/ProperLogger\"/>-->\n+  \n+  <!--<rule ref=\"rulesets/naming.xml/ShortVariable\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/LongVariable\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/ShortMethodName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/VariableNamingConventions\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/MethodNamingConventions\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/ClassNamingConventions\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AbstractNaming\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidDollarSigns\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/MethodWithSameNameAsEnclosingClass\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/SuspiciousHashcodeMethodName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/SuspiciousConstantFieldName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidFieldNameMatchingTypeName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidFieldNameMatchingMethodName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidNonConstructorMethodsWithClassName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/NoPackage\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/PackageCase\"/>-->\n+\n+  <!--<rule ref=\"rulesets/optimizations.xml/LocalVariableCouldBeFinal\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/MethodArgumentCouldBeFinal\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/AvoidInstantiatingObjectsInLoops\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/UseArrayListInsteadOfVector\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/SimplifyStartsWith\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/UseStringBufferForStringAppends\"/>-->\n+\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidCatchingThrowable\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/SignatureDeclareThrowsException\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/ExceptionAsFlowControl\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidCatchingNPE\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidThrowingNullPointerException\"/>-->\n+ \n+  <!--<rule ref=\"rulesets/strings.xml/AvoidDuplicateLiterals\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/StringInstantiation\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/StringToString\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/AvoidConcatenatingNonLiteralsInStringBuffer\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/UnnecessaryCaseChange\"/>-->\n+  \n+  <!--<rule ref=\"rulesets/sunsecure.xml/MethodReturnsInternalArray\"/>-->\n+  <!--<rule ref=\"rulesets/sunsecure.xml/ArrayIsStoredDirectly\"/>-->\n+  \n+  <rule ref=\"rulesets/unusedcode.xml/UnusedLocalVariable\"/>\n+  <rule ref=\"rulesets/unusedcode.xml/UnusedPrivateField\"/>\n+  <rule ref=\"rulesets/unusedcode.xml/UnusedPrivateMethod\"/>\n+  <!--<rule ref=\"rulesets/unusedcode.xml/UnusedFormalParameter\"/>-->\n+  \n+</ruleset>"
            },
            {
                "sha": "f818c2eb20f4c4473bcbb482bbe040e38c5790b5",
                "filename": "runtime/webapp-host/pom.xml",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/pom.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/pom.xml?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -71,13 +71,20 @@\n             <scope>test</scope>\n         </dependency>\n \n+        <!-- test dependencies -->\n         <dependency>\n-            <groupId>jmock</groupId>\n-            <artifactId>jmock</artifactId>\n+            <groupId>org.easymock</groupId>\n+            <artifactId>easymockclassextension</artifactId>\n+            <version>2.2</version>\n+            <scope>test</scope>\n         </dependency>\n+\n         <dependency>\n-            <groupId>org.easymock</groupId>\n-            <artifactId>easymock</artifactId>\n+            <groupId>org.apache.tuscany</groupId>\n+            <artifactId>test</artifactId>\n+            <version>${sca.version}</version>\n+            <scope>test</scope>\n         </dependency>\n+\n     </dependencies>\n </project>"
            },
            {
                "sha": "c0036ca95e1deb1bb55cbc747f06b1356bf13dcd",
                "filename": "runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletHostImpl.java",
                "status": "modified",
                "additions": 10,
                "deletions": 7,
                "changes": 17,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletHostImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletHostImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletHostImpl.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -21,21 +21,22 @@\n import java.io.IOException;\n import java.util.HashMap;\n import java.util.Map;\n-\n import javax.servlet.Servlet;\n import javax.servlet.ServletException;\n import javax.servlet.ServletRequest;\n import javax.servlet.ServletResponse;\n import javax.servlet.http.HttpServletRequest;\n \n-import org.apache.tuscany.host.servlet.ServletRequestInjector;\n-import org.apache.tuscany.spi.host.ServletHost;\n import org.osoa.sca.annotations.Init;\n import org.osoa.sca.annotations.Service;\n \n+import org.apache.tuscany.spi.host.ServletHost;\n+\n+import org.apache.tuscany.host.servlet.ServletRequestInjector;\n+\n /**\n- * ServletHost impl that forwards requests to registered servlets\n- * TODO: TUSCANY-649, move this and ServletLauncherListener to a new webapp-host module\n+ * ServletHost impl that forwards requests to registered servlets TODO: TUSCANY-649, move this and\n+ * ServletLauncherListener to a new webapp-host module\n  */\n @Service(ServletHost.class)\n public class ServletHostImpl implements ServletHost, ServletRequestInjector {\n@@ -51,17 +52,19 @@ public void init() {\n     }\n \n     public void service(ServletRequest req, ServletResponse resp) throws ServletException, IOException {\n+        assert req instanceof HttpServletRequest : \"implementation only supports HttpServletRequest\";\n         String path = ((HttpServletRequest) req).getPathInfo();\n         Servlet servlet = servlets.get(path);\n         if (servlet == null) {\n-            throw new IllegalStateException(\"no servlet registered for path: \" + path);\n+            throw new IllegalStateException(\"No servlet registered for path: \" + path);\n         }\n         servlet.service(req, resp);\n     }\n \n     public void registerMapping(String path, Servlet servlet) {\n+\n         if (servlets.containsKey(path)) {\n-            throw new IllegalStateException(\"servlet already registered at path: \" + path);\n+            throw new IllegalStateException(\"Servlet already registered at path: \" + path);\n         }\n         servlets.put(path, servlet);\n     }"
            },
            {
                "sha": "a082f370a80878750aa51b0d65b248bc19482ea9",
                "filename": "runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletLauncherListener.java",
                "status": "modified",
                "additions": 38,
                "deletions": 20,
                "changes": 58,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletLauncherListener.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletLauncherListener.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/main/java/org/apache/tuscany/runtime/webapp/ServletLauncherListener.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -23,27 +23,27 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.logging.Level;\n-\n import javax.servlet.ServletContext;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n \n+import org.apache.tuscany.spi.component.CompositeComponent;\n+import org.apache.tuscany.spi.loader.LoaderException;\n+import org.apache.tuscany.spi.loader.MissingResourceException;\n+\n import org.apache.tuscany.core.launcher.CompositeContextImpl;\n import org.apache.tuscany.core.launcher.LauncherImpl;\n import org.apache.tuscany.core.monitor.MonitorFactoryUtil;\n import org.apache.tuscany.host.MonitorFactory;\n-import org.apache.tuscany.spi.component.CompositeComponent;\n-import org.apache.tuscany.spi.loader.LoaderException;\n \n /**\n- * LauncherImpl for runtime environment that loads info from servlet context params.\n- * This listener manages one top-level LauncherImpl (and hence one Tuscany runtime context)\n- * per servlet context; the lifecycle of that runtime corresponds to the the lifecycle of the\n- * associated servlet context.\n- *\n+ * LauncherImpl for runtime environment that loads info from servlet context params. This listener manages one top-level\n+ * LauncherImpl (and hence one Tuscany runtime context) per servlet context; the lifecycle of that runtime corresponds\n+ * to the the lifecycle of the associated servlet context.\n+ * <p/>\n  * Web application code may obtain the top-level CompositeContext via\n- * {@link org.osoa.sca.CurrentCompositeContext#getContext()}.  If that returns null,\n- * it is likely the runtime failed to boot: the context param {@link LAUNCHER_THROWABLE_ATTRIBUTE}\n+ * {@link org.osoa.sca.CurrentCompositeContext#getContext()}.\n+ * If that returns null, it is likely the runtime failed to boot: the context param {@link LAUNCHER_THROWABLE_ATTRIBUTE}\n  * will contain a {@link Throwable} with diagnostic information.\n  *\n  * @version $$Rev$$ $$Date$$\n@@ -59,9 +59,8 @@\n      */\n     public static final String APPLICATION_SCDL_PATH_PARAM = \"applicationScdlPath\";\n     /**\n-     * Servlet context-param name for system monitoring level.\n-     * Supported values are the names of statics defined in java.util.logging.Level.\n-     * If absent, no monitoring will take place.\n+     * Servlet context-param name for system monitoring level. Supported values are the names of statics defined in\n+     * java.util.logging.Level. If absent, no monitoring will take place.\n      */\n     public static final String SYSTEM_MONITORING_PARAM = \"tuscanyMonitoringLevel\";\n \n@@ -71,17 +70,18 @@\n     public static final String DEFAULT_APPLICATION_SCDL_PATH = \"/WEB-INF/default.scdl\";\n \n     /**\n-     * Context attribute to which an Exception or Error object will be bound to if the\n-     * launcher fails to initialize.\n+     * Context attribute to which an Exception or Error object will be bound to if the launcher fails to initialize.\n      */\n     public static final String LAUNCHER_THROWABLE_ATTRIBUTE = \"Tuscany.LauncherImpl.Throwable\";\n \n     /**\n-     * Context attribute to which the active {@link LauncherImpl} managing the runtime for this\n-     * servlet context is stored.\n+     * Context attribute to which the active {@link LauncherImpl} managing the runtime for this servlet context is\n+     * stored.\n      */\n     private static final String LAUNCHER_ATTRIBUTE = \"Tuscany.LauncherImpl\";\n \n+    private URL testSystemScdl;\n+\n     public void contextInitialized(ServletContextEvent servletContextEvent) {\n         ServletContext servletContext = servletContextEvent.getServletContext();\n \n@@ -111,10 +111,21 @@ public void contextInitialized(ServletContextEvent servletContextEvent) {\n         CompositeContextImpl context;\n \n         try {\n-            URL systemScdl = getClass().getResource(systemScdlPath);\n+            URL systemScdl;\n+            if (testSystemScdl != null) {\n+                systemScdl = testSystemScdl;\n+            } else {\n+                systemScdl = getClass().getResource(systemScdlPath);\n+                if (systemScdl == null) {\n+                    MissingResourceException e = new MissingResourceException(\"System SCDL not found\");\n+                    e.setIdentifier(systemScdlPath);\n+                    throw e;\n+                }\n+            }\n             CompositeComponent<?> rt = launcher.bootRuntime(systemScdl, mf);\n             servletContext.setAttribute(LAUNCHER_ATTRIBUTE, launcher);\n-            servletContext.setAttribute(\"Tuscany.ServletRequestInjector\", rt.getChild(\"servletHost\").getServiceInstance());\n+            servletContext\n+                .setAttribute(\"Tuscany.ServletRequestInjector\", rt.getChild(\"servletHost\").getServiceInstance());\n \n             URL appScdl;\n             if (applicationScdlPath.startsWith(\"/\")) {\n@@ -143,7 +154,7 @@ public void contextInitialized(ServletContextEvent servletContextEvent) {\n \n         } catch (Throwable t) {\n             servletContext.setAttribute(LAUNCHER_THROWABLE_ATTRIBUTE, t);\n-            t.printStackTrace();\n+            servletContext.log(\"Error launching Tuscany Runtime\", t);\n         }\n     }\n \n@@ -157,6 +168,13 @@ public void contextDestroyed(ServletContextEvent servletContextEvent) {\n         }\n     }\n \n+    /**\n+     * Sets the system SCDL url for testing\n+     */\n+    void setTestSystemScdl(URL testSystemScdl) {\n+        this.testSystemScdl = testSystemScdl;\n+    }\n+\n     private MonitorFactory getMonitorFactory(String loggingLevel) {\n         String factoryName = \"org.apache.tuscany.core.monitor.NullMonitorFactory\";\n         Map<String, Object> props = null;"
            },
            {
                "sha": "4480dcba71811b152b71ca55c771687b3dbc6fd1",
                "filename": "runtime/webapp-host/src/main/resources/META-INF/sca/webapp.system.scdl",
                "status": "modified",
                "additions": 19,
                "deletions": 4,
                "changes": 23,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/main/resources/META-INF/sca/webapp.system.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/main/resources/META-INF/sca/webapp.system.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/main/resources/META-INF/sca/webapp.system.scdl?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -113,11 +113,26 @@\n     <component name=\"servletHost\">\n         <system:implementation.system class=\"org.apache.tuscany.runtime.webapp.ServletHostImpl\"/>\n     </component>\n-    \n-    <!-- TODO: Hack the Axis extension in  -->\n-    <include name=\"binding.axis2\" scdlLocation=\"binding.axis2.scdl\"/>\n+\n+    <component name=\"policyBuilderRegistry\">\n+         <system:implementation.system class=\"org.apache.tuscany.core.policy.PolicyBuilderRegistryImpl\"/>\n+    </component>\n+\n+    <component name=\"propertyFactory\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.loader.StringParserPropertyFactory\"/>\n+    </component>\n+\n+    <component name=\"artifactRepository\">\n+            <system:implementation.system class=\"org.apache.tuscany.core.services.artifact.LocalMavenRepository\"/>\n+            <!-- this value needs to change to a correct one -->\n+            <property name = \"repository\">.</property>\n+    </component>\n+\n+\n+    <!-- TODO: Hack the Axis extension in -->\n+    <include name=\"binding.axis2\" scdlLocation=\"binding.axis2.scdl\"/> \n     \n     <!-- TODO: Hack the SDO DataBinding extension in -->\n-    <include name=\"databinding.sdo\" scdlLocation=\"databinding.sdo.scdl\"/>\n+    <include name=\"databinding.sdo\" scdlLocation=\"databinding.sdo.scdl\"/>  \n \n </composite>"
            },
            {
                "sha": "75b49de18843c077f9e4cf2858da0578ca3b44c5",
                "filename": "runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/Foo.java",
                "status": "added",
                "additions": 25,
                "deletions": 0,
                "changes": 25,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/Foo.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/Foo.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/Foo.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.tuscany.runtime.webapp;\n+\n+/**\n+ * @version $Rev$ $Date$\n+ */\n+public interface Foo {\n+}"
            },
            {
                "sha": "dd938f2a58eae3652b39f9f92e5c83a51876d961",
                "filename": "runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/FooImpl.java",
                "status": "added",
                "additions": 25,
                "deletions": 0,
                "changes": 25,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/FooImpl.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/FooImpl.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/FooImpl.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.tuscany.runtime.webapp;\n+\n+/**\n+ * @version $Rev$ $Date$\n+ */\n+public class FooImpl implements Foo {\n+}"
            },
            {
                "sha": "543be9b7df4e2a4f610c9b804aa53d81e35b07b6",
                "filename": "runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletHostTestCase.java",
                "status": "added",
                "additions": 83,
                "deletions": 0,
                "changes": 83,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletHostTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletHostTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletHostTestCase.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.tuscany.runtime.webapp;\n+\n+import static org.easymock.EasyMock.expect;\n+import static org.easymock.EasyMock.replay;\n+import static org.easymock.EasyMock.createMock;\n+import static org.easymock.EasyMock.verify;\n+\n+import javax.servlet.Servlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import junit.framework.TestCase;\n+import org.easymock.EasyMock;\n+\n+/**\n+ * @version $Rev$ $Date$\n+ */\n+public class ServletHostTestCase extends TestCase {\n+\n+    public void testDispatch() throws Exception {\n+        HttpServletRequest req = createMock(HttpServletRequest.class);\n+        expect(req.getPathInfo()).andReturn(\"foo\");\n+        replay(req);\n+        HttpServletResponse res = createMock(HttpServletResponse.class);\n+        Servlet servlet = createMock(Servlet.class);\n+        servlet.service(req, res);\n+        EasyMock.expectLastCall();\n+        replay(servlet);\n+        ServletHostImpl host = new ServletHostImpl();\n+        host.registerMapping(\"foo\", servlet);\n+        host.service(req, res);\n+        verify(servlet);\n+    }\n+\n+    public void testDuplicateRegistration() throws Exception {\n+        Servlet servlet = createMock(Servlet.class);\n+        ServletHostImpl host = new ServletHostImpl();\n+        host.registerMapping(\"foo\", servlet);\n+        try {\n+            host.registerMapping(\"foo\", servlet);\n+            fail();\n+        } catch (IllegalStateException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testUnregister() throws Exception {\n+        HttpServletRequest req = createMock(HttpServletRequest.class);\n+        expect(req.getPathInfo()).andReturn(\"foo\");\n+        replay(req);\n+        HttpServletResponse res = createMock(HttpServletResponse.class);\n+        Servlet servlet = createMock(Servlet.class);\n+        replay(servlet);\n+        ServletHostImpl host = new ServletHostImpl();\n+        host.registerMapping(\"foo\", servlet);\n+        host.unregisterMapping(\"foo\");\n+        try {\n+            host.service(req, res);\n+        } catch (IllegalStateException e) {\n+            // expected\n+        }\n+        verify(servlet);\n+    }\n+\n+}"
            },
            {
                "sha": "c881649acd352ccafc60260f5e762bed332c00bb",
                "filename": "runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletLauncherListenerTestCase.java",
                "status": "added",
                "additions": 123,
                "deletions": 0,
                "changes": 123,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletLauncherListenerTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletLauncherListenerTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/test/java/org/apache/tuscany/runtime/webapp/ServletLauncherListenerTestCase.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.tuscany.runtime.webapp;\n+\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletContextEvent;\n+\n+import org.apache.tuscany.spi.loader.LoaderException;\n+import org.apache.tuscany.spi.loader.MissingResourceException;\n+\n+import junit.framework.TestCase;\n+import static org.apache.tuscany.runtime.webapp.ServletLauncherListener.APPLICATION_SCDL_PATH_PARAM;\n+import static org.apache.tuscany.runtime.webapp.ServletLauncherListener.SYSTEM_MONITORING_PARAM;\n+import static org.apache.tuscany.runtime.webapp.ServletLauncherListener.SYSTEM_SCDL_PATH_PARAM;\n+import static org.easymock.EasyMock.expect;\n+import org.easymock.classextension.EasyMock;\n+\n+/**\n+ * @version $Rev$ $Date$\n+ */\n+public class ServletLauncherListenerTestCase extends TestCase {\n+\n+    /**\n+     * Verifies the web app host is configured properly to perform a basic boot\n+     * <p/>\n+     * FIXME Uncomment this test case when the webapp project is fixed by removing the dependency on web services\n+     */\n+    public void testBoot() throws Exception {\n+//        final Launcher[] launcher = new Launcher[1];\n+//        ServletLauncherListener listener = new ServletLauncherListener();\n+//        listener.setTestSystemScdl(getClass().getClassLoader().getResource(\"META-INF/sca/webapp.system.scdl\"));\n+//        ServletContext context = EasyMock.createMock(ServletContext.class);\n+//        expect(context.getServletContextName()).andReturn(\"foo\").anyTimes();\n+//        expect(context.getInitParameter(SYSTEM_SCDL_PATH_PARAM)).andReturn(null);\n+//        expect(context.getInitParameter(APPLICATION_SCDL_PATH_PARAM)).andReturn(null);\n+//        expect(context.getInitParameter(SYSTEM_MONITORING_PARAM)).andReturn(null);\n+//        context.setAttribute(EasyMock.eq(\"Tuscany.LauncherImpl\"), EasyMock.isA(Launcher.class));\n+//        EasyMock.expectLastCall().andStubAnswer(new IAnswer() {\n+//            public Object answer() throws Throwable {\n+//                Object o = EasyMock.getCurrentArguments()[1];\n+//                launcher[0] = (Launcher) o;\n+//                return null;\n+//            }\n+//        });\n+//        context.setAttribute(EasyMock.eq(\"Tuscany.ServletRequestInjector\"), EasyMock.isA(ServletHost.class));\n+//        expect(context.getResource(\"/WEB-INF/default.scdl\"))\n+//            .andReturn(getClass().getClassLoader().getResource(\"testapp.scdl\"));\n+//        expect(context.getAttribute(EasyMock.eq(\"Tuscany.LauncherImpl\"))).andReturn(launcher[0]);\n+//        EasyMock.replay(context);\n+//        ServletContextEvent event = EasyMock.createMock(ServletContextEvent.class);\n+//        EasyMock.expect(event.getServletContext()).andReturn(context).anyTimes();\n+//        EasyMock.replay(event);\n+//        listener.contextInitialized(event);\n+//        listener.contextDestroyed(event);\n+//        EasyMock.verify(context);\n+    }\n+\n+    /**\n+     * Verifies a {@link LoaderException} is thrown when the application SCDL is not found\n+     * <p/>\n+     * FIXME Uncomment this test case when the webapp project is fixed by removing the dependency on web services\n+     */\n+    public void testApplicationSCDLNotFound() throws Exception {\n+//        ServletLauncherListener listener = new ServletLauncherListener();\n+//        listener.setTestSystemScdl(getClass().getClassLoader().getResource(\"META-INF/sca/webapp.system.scdl\"));\n+//        ServletContext context = EasyMock.createMock(ServletContext.class);\n+//        expect(context.getInitParameter(SYSTEM_SCDL_PATH_PARAM)).andReturn(null);\n+//        expect(context.getServletContextName()).andReturn(\"foo\").anyTimes();\n+//        context.setAttribute(EasyMock.eq(\"Tuscany.LauncherImpl\"), EasyMock.isA(Launcher.class));\n+//        context.setAttribute(EasyMock.eq(\"Tuscany.ServletRequestInjector\"), EasyMock.isA(ServletHost.class));\n+//        expect(context.getInitParameter(APPLICATION_SCDL_PATH_PARAM)).andReturn(null);\n+//        expect(context.getInitParameter(SYSTEM_MONITORING_PARAM)).andReturn(null);\n+//        expect(context.getResource(\"/WEB-INF/default.scdl\")).andReturn(null);\n+//        context.setAttribute(EasyMock.eq(\"Tuscany.LauncherImpl.Throwable\"), EasyMock.isA(LoaderException.class));\n+//        context.log(EasyMock.isA(String.class), EasyMock.isA(Throwable.class));\n+//        EasyMock.replay(context);\n+//        ServletContextEvent event = EasyMock.createMock(ServletContextEvent.class);\n+//        expect(event.getServletContext()).andReturn(context);\n+//        EasyMock.replay(event);\n+//        listener.contextInitialized(event);\n+//        EasyMock.verify(context);\n+    }\n+\n+    /**\n+     * Verifies a {@link MissingResourceException} is thrown if the system SCDL is not found\n+     *\n+     * @throws Exception\n+     */\n+    public void testSystemSCDLNotFound() throws Exception {\n+        ServletLauncherListener listener = new ServletLauncherListener();\n+        ServletContext context = EasyMock.createMock(ServletContext.class);\n+        expect(context.getInitParameter(SYSTEM_SCDL_PATH_PARAM)).andReturn(\"notthere\");\n+        context\n+            .setAttribute(EasyMock.eq(\"Tuscany.LauncherImpl.Throwable\"), EasyMock.isA(MissingResourceException.class));\n+        expect(context.getInitParameter(APPLICATION_SCDL_PATH_PARAM)).andReturn(null);\n+        expect(context.getInitParameter(SYSTEM_MONITORING_PARAM)).andReturn(null);\n+        context.log(EasyMock.isA(String.class), EasyMock.isA(Throwable.class));\n+        EasyMock.replay(context);\n+        ServletContextEvent event = EasyMock.createMock(ServletContextEvent.class);\n+        EasyMock.expect(event.getServletContext()).andReturn(context);\n+        EasyMock.replay(event);\n+        listener.contextInitialized(event);\n+        EasyMock.verify(context);\n+    }\n+\n+\n+}"
            },
            {
                "sha": "9b5bda7fb6171cdea97eed31cde628e70195e282",
                "filename": "runtime/webapp-host/src/test/resources/testapp.scdl",
                "status": "added",
                "additions": 26,
                "deletions": 0,
                "changes": 26,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/resources/testapp.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp-host/src/test/resources/testapp.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp-host/src/test/resources/testapp.scdl?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+-->\n+<composite xmlns=\"http://www.osoa.org/xmlns/sca/1.0\" name=\"testapp\">\n+\n+    <component name=\"component\">\n+        <implementation.java class=\"org.apache.tuscany.runtime.webapp.FooImpl\"/>\n+    </component>\n+\n+</composite>"
            },
            {
                "sha": "3886f07f2d7dd60867eb1392bae2a4bfdef8f69c",
                "filename": "runtime/webapp/.ruleset",
                "status": "added",
                "additions": 190,
                "deletions": 0,
                "changes": 190,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/.ruleset",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/.ruleset",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/.ruleset?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,190 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+-->\n+<ruleset name=\"pmd-eclipse\">\n+  <description>PMD Plugin preferences rule set</description>\n+  \n+  \n+  <rule ref=\"rulesets/basic.xml/BooleanInstantiation\"/>\n+  <rule ref=\"rulesets/basic.xml/CollapsibleIfStatements\"/>\n+  <rule ref=\"rulesets/basic.xml/DoubleCheckedLocking\"/>\n+<!--<rule ref=\"rulesets/basic.xml/EmptyCatchBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyFinallyBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyIfStmt\"/>-->\n+  <rule ref=\"rulesets/basic.xml/EmptyStatementNotInLoop\"/>\n+<!--<rule ref=\"rulesets/basic.xml/EmptyStaticInitializer\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptySwitchStatements\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptySynchronizedBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyTryBlock\"/>-->\n+<!--<rule ref=\"rulesets/basic.xml/EmptyWhileStmt\"/>-->\n+  <rule ref=\"rulesets/basic.xml/ForLoopShouldBeWhileLoop\"/>\n+  <rule ref=\"rulesets/basic.xml/JumbledIncrementer\"/>\n+<!--<rule ref=\"rulesets/basic.xml/OverrideBothEqualsAndHashcode\"/>-->\n+  <rule ref=\"rulesets/basic.xml/ReturnFromFinallyBlock\"/>\n+  <rule ref=\"rulesets/basic.xml/UnconditionalIfStatement\"/>\n+  <rule ref=\"rulesets/basic.xml/UnnecessaryConversionTemporary\"/>\n+  <rule ref=\"rulesets/basic.xml/UnnecessaryFinalModifier\"/>\n+  <rule ref=\"rulesets/basic.xml/UnnecessaryReturn\"/>\n+<!--<rule ref=\"rulesets/basic.xml/UselessOverridingMethod\"/>-->\n+  \n+<!--<rule ref=\"rulesets/braces.xml/ForLoopsMustUseBraces\"/>-->\n+<!--<rule ref=\"rulesets/braces.xml/IfElseStmtsMustUseBraces\"/>-->\n+<!--<rule ref=\"rulesets/braces.xml/IfStmtsMustUseBraces\"/>-->\n+<!--<rule ref=\"rulesets/braces.xml/WhileLoopsMustUseBraces\"/>-->\n+\n+<!--<rule ref=\"rulesets/clone.xml/CloneMethodMustImplementCloneable\"/>-->\n+<!--<rule ref=\"rulesets/clone.xml/CloneThrowsCloneNotSupportedException\"/>-->\n+<!--<rule ref=\"rulesets/clone.xml/ProperCloneImplementation\"/>-->\n+  \n+<!--<rule ref=\"rulesets/codesize.xml/CyclomaticComplexity\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessiveClassLength\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessiveMethodLength\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessiveParameterList\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/ExcessivePublicCount\"/>-->\n+<!--<rule ref=\"rulesets/codesize.xml/TooManyFields\"/>-->\n+\n+<rule ref=\"rulesets/controversial.xml/AssignmentInOperand\"/>\n+<!--<rule ref=\"rulesets/controversial.xml/AtLeastOneConstructor\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/CallSuperInConstructor\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/DontImportSun\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/NullAssignment\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/OnlyOneReturn\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/SingularField\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/SuspiciousOctalEscape\"/>-->\n+<!--<rule ref=\"rulesets/controversial.xml/UnnecessaryConstructor\"/>-->\n+<rule ref=\"rulesets/controversial.xml/UnnecessaryParentheses\"/>\n+<!--<rule ref=\"rulesets/controversial.xml/UnusedModifier\"/>-->\n+\n+<!--<rule ref=\"rulesets/coupling.xml/CouplingBetweenObjects\"/>-->\n+<!--<rule ref=\"rulesets/coupling.xml/ExcessiveImports\"/>-->\n+<!--<rule ref=\"rulesets/coupling.xml/LooseCoupling\"/>-->\n+\n+<!--<rule ref=\"rulesets/design.xml/AbstractClassWithoutAbstractMethod\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AccessorClassGeneration\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AssignmentToNonFinalStatic\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AvoidDeeplyNestedIfStmts\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AvoidInstanceofChecksInCatchClause\"/>-->\n+<rule ref=\"rulesets/design.xml/AvoidProtectedFieldInFinalClass\"/>\n+<!--<rule ref=\"rulesets/design.xml/AvoidReassigningParameters\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/AvoidSynchronizedAtMethodLevel\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/BadComparison\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/CloseConnection\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/CompareObjectsWithEquals\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/ConfusingTernary\"/>-->\n+<rule ref=\"rulesets/design.xml/ConstructorCallsOverridableMethod\"/>\n+<!--<rule ref=\"rulesets/design.xml/DefaultLabelNotLastInSwitchStmt\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/FinalFieldCouldBeStatic\"/>-->\n+<rule ref=\"rulesets/design.xml/IdempotentOperations\"/>\n+<!--<rule ref=\"rulesets/design.xml/ImmutableField\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/InstantiationToGetClass\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/MissingBreakInSwitch\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/MissingStaticMethodInNonInstantiatableClass\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/NonCaseLabelInSwitchStatement\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/NonStaticInitializer\"/>-->\n+<rule ref=\"rulesets/design.xml/OptimizableToArrayCall\"/>\n+<rule ref=\"rulesets/design.xml/PositionLiteralsFirstInComparisons\"/>\n+<rule ref=\"rulesets/design.xml/SimplifyBooleanExpressions\"/>\n+<rule ref=\"rulesets/design.xml/SimplifyBooleanReturns\"/>\n+<rule ref=\"rulesets/design.xml/SimplifyConditional\"/>\n+<!--<rule ref=\"rulesets/design.xml/SwitchDensity\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/SwitchStmtsShouldHaveDefault\"/>-->\n+<rule ref=\"rulesets/design.xml/UnnecessaryLocalBeforeReturn\"/>\n+<!--<rule ref=\"rulesets/design.xml/UseLocaleWithCaseConversions\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/UseNotifyAllInsteadOfNotify\"/>-->\n+<!--<rule ref=\"rulesets/design.xml/UseSingleton\"/>-->\n+\n+<!--<rule ref=\"rulesets/finalizers.xml/EmptyFinalizer\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeOnlyCallsSuperFinalize\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeOverloaded\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeDoesNotCallSuperFinalize\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/FinalizeShouldBeProtected\"/>-->\n+<!--<rule ref=\"rulesets/finalizers.xml/AvoidCallingFinalize\"/>-->\n+\n+<!--<rule ref=\"rulesets/imports.xml/DuplicateImports\"/>-->\n+<!--<rule ref=\"rulesets/imports.xml/DontImportJavaLang\"/>-->\n+<!--<rule ref=\"rulesets/imports.xml/UnusedImports\"/>-->\n+<!--<rule ref=\"rulesets/imports.xml/ImportFromSamePackage\"/>-->\n+\n+<!--<rule ref=\"rulesets/javabeans.xml/BeanMembersShouldSerialize\"/>-->\n+<!--<rule ref=\"rulesets/javabeans.xml/MissingSerialVersionUID\"/>-->\n+\n+<!--<rule ref=\"rulesets/junit.xml/JUnitStaticSuite\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/JUnitSpelling\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/JUnitAssertionsShouldIncludeMessage\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/JUnitTestsShouldIncludeAssert\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/TestClassWithoutTestCases\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/UnnecessaryBooleanAssertion\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/UseAssertEqualsInsteadOfAssertTrue\"/>-->\n+<!--<rule ref=\"rulesets/junit.xml/UseAssertSameInsteadOfAssertTrue\"/>-->\n+\n+  <!--<rule ref=\"rulesets/logging-java.xml/AvoidPrintStackTrace\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/LoggerIsNotStaticFinal\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/MoreThanOneLogger\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/LoggerIsNotStaticFinal\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/LogBlockWithoutIf\"/>-->\n+  <!--<rule ref=\"rulesets/logging-java.xml/SystemPrintln\"/>-->\n+  <!--<rule ref=\"rulesets/logging-jakarta-commons.xml/UseCorrectExceptionLogging\"/>-->\n+  <!--<rule ref=\"rulesets/logging-jakarta-commons.xml/ProperLogger\"/>-->\n+  \n+  <!--<rule ref=\"rulesets/naming.xml/ShortVariable\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/LongVariable\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/ShortMethodName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/VariableNamingConventions\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/MethodNamingConventions\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/ClassNamingConventions\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AbstractNaming\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidDollarSigns\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/MethodWithSameNameAsEnclosingClass\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/SuspiciousHashcodeMethodName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/SuspiciousConstantFieldName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidFieldNameMatchingTypeName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidFieldNameMatchingMethodName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/AvoidNonConstructorMethodsWithClassName\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/NoPackage\"/>-->\n+  <!--<rule ref=\"rulesets/naming.xml/PackageCase\"/>-->\n+\n+  <!--<rule ref=\"rulesets/optimizations.xml/LocalVariableCouldBeFinal\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/MethodArgumentCouldBeFinal\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/AvoidInstantiatingObjectsInLoops\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/UseArrayListInsteadOfVector\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/SimplifyStartsWith\"/>-->\n+  <!--<rule ref=\"rulesets/optimizations.xml/UseStringBufferForStringAppends\"/>-->\n+\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidCatchingThrowable\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/SignatureDeclareThrowsException\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/ExceptionAsFlowControl\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidCatchingNPE\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes\"/>-->\n+  <!--<rule ref=\"rulesets/strictexception.xml/AvoidThrowingNullPointerException\"/>-->\n+ \n+  <!--<rule ref=\"rulesets/strings.xml/AvoidDuplicateLiterals\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/StringInstantiation\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/StringToString\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/AvoidConcatenatingNonLiteralsInStringBuffer\"/>-->\n+  <!--<rule ref=\"rulesets/strings.xml/UnnecessaryCaseChange\"/>-->\n+  \n+  <!--<rule ref=\"rulesets/sunsecure.xml/MethodReturnsInternalArray\"/>-->\n+  <!--<rule ref=\"rulesets/sunsecure.xml/ArrayIsStoredDirectly\"/>-->\n+  \n+  <rule ref=\"rulesets/unusedcode.xml/UnusedLocalVariable\"/>\n+  <rule ref=\"rulesets/unusedcode.xml/UnusedPrivateField\"/>\n+  <rule ref=\"rulesets/unusedcode.xml/UnusedPrivateMethod\"/>\n+  <!--<rule ref=\"rulesets/unusedcode.xml/UnusedFormalParameter\"/>-->\n+  \n+</ruleset>"
            },
            {
                "sha": "6592563bf299aa8cb8f173cfc0ec03c00b35d929",
                "filename": "runtime/webapp/pom.xml",
                "status": "modified",
                "additions": 10,
                "deletions": 4,
                "changes": 14,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/pom.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/pom.xml?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -43,13 +43,19 @@\n             <scope>compile</scope>\n         </dependency>\n \n+        <!-- test dependencies -->\n         <dependency>\n-            <groupId>jmock</groupId>\n-            <artifactId>jmock</artifactId>\n+            <groupId>org.easymock</groupId>\n+            <artifactId>easymockclassextension</artifactId>\n+            <version>2.2</version>\n+            <scope>test</scope>\n         </dependency>\n+\n         <dependency>\n-            <groupId>org.easymock</groupId>\n-            <artifactId>easymock</artifactId>\n+            <groupId>org.apache.tuscany</groupId>\n+            <artifactId>test</artifactId>\n+            <version>${sca.version}</version>\n+            <scope>test</scope>\n         </dependency>\n     </dependencies>\n </project>"
            },
            {
                "sha": "e1385e7a1b370c21f089c6cc319dca75cade8f47",
                "filename": "runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyServlet.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyServlet.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyServlet.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/src/main/java/org/apache/tuscany/runtime/webapp/TuscanyServlet.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -34,6 +34,7 @@\n  */\n public class TuscanyServlet extends HttpServlet {\n \n+    public static final String TUSCANY_SERVLET_REQUEST_INJECTOR = \"Tuscany.ServletRequestInjector\";\n     private static final long serialVersionUID = 1L;\n \n     private ServletRequestInjector servletRequestInjector;\n@@ -42,7 +43,7 @@\n     public void init(ServletConfig config) {\n         ServletContext servletContext = config.getServletContext();\n         this.servletRequestInjector =\n-            (ServletRequestInjector) servletContext.getAttribute(\"Tuscany.ServletRequestInjector\");\n+            (ServletRequestInjector) servletContext.getAttribute(TUSCANY_SERVLET_REQUEST_INJECTOR);\n     }\n \n     @Override"
            },
            {
                "sha": "abc26f6c35ffc2430b694fba1358e0a8f4c536a7",
                "filename": "runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyContextListenerTestCase.java",
                "status": "added",
                "additions": 76,
                "deletions": 0,
                "changes": 76,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyContextListenerTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyContextListenerTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyContextListenerTestCase.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.tuscany.runtime.webapp;\n+\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletContextEvent;\n+import javax.servlet.ServletContextListener;\n+\n+import junit.framework.TestCase;\n+import static org.easymock.EasyMock.expect;\n+import org.easymock.classextension.EasyMock;\n+\n+/**\n+ * Verifies a context listener is properly instantiated and lifecycle events are sent to it\n+ *\n+ * @version $Rev$ $Date$\n+ */\n+public class TuscanyContextListenerTestCase extends TestCase {\n+\n+    public void testLifecycle() {\n+        ServletContext context = EasyMock.createMock(ServletContext.class);\n+        expect(context.getInitParameter(TuscanyContextListener.BOOTDIR_PARAM)).andReturn(\"foo\");\n+        expect(context.getResourcePaths(\"foo\")).andReturn(null);\n+        expect(context.getInitParameter(TuscanyContextListener.LAUNCHER_PARAM)).andReturn(TestLauncher.class.getName());\n+        EasyMock.replay(context);\n+        ServletContextEvent event = EasyMock.createMock(ServletContextEvent.class);\n+        EasyMock.expect(event.getServletContext()).andReturn(context);\n+        EasyMock.replay(event);\n+        TuscanyContextListener listener = new TuscanyContextListener();\n+        listener.contextInitialized(event);\n+        assertEquals(1, TestLauncher.getInitialized());\n+        listener.contextDestroyed(event);\n+        assertEquals(1, TestLauncher.getDestroyed());\n+    }\n+\n+    public static class TestLauncher implements ServletContextListener {\n+\n+        private static int initialized;\n+        private static int destroyed;\n+\n+        public TestLauncher() {\n+        }\n+\n+        public static int getInitialized() {\n+            return initialized;\n+        }\n+\n+        public static int getDestroyed() {\n+            return destroyed;\n+        }\n+\n+        public void contextInitialized(ServletContextEvent servletContextEvent) {\n+            ++initialized;\n+        }\n+\n+        public void contextDestroyed(ServletContextEvent servletContextEvent) {\n+            ++destroyed;\n+        }\n+    }\n+}"
            },
            {
                "sha": "0cbd8333b71919ecc9fbbb402645889d7942da51",
                "filename": "runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyServletTestCase.java",
                "status": "added",
                "additions": 58,
                "deletions": 0,
                "changes": 58,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyServletTestCase.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyServletTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/runtime/webapp/src/test/java/org/apache/tuscany/runtime/webapp/TuscanyServletTestCase.java?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.tuscany.runtime.webapp;\n+\n+import javax.servlet.ServletConfig;\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+\n+import junit.framework.TestCase;\n+import org.apache.tuscany.host.servlet.ServletRequestInjector;\n+import org.easymock.EasyMock;\n+import static org.easymock.EasyMock.expect;\n+import static org.easymock.EasyMock.isA;\n+\n+/**\n+ * Verifies {@link TuscanyServlet} properly services a request\n+ *\n+ * @version $Rev$ $Date$\n+ */\n+public class TuscanyServletTestCase extends TestCase {\n+\n+    public void testService() throws Exception {\n+        ServletRequestInjector requestInjector = EasyMock.createMock(ServletRequestInjector.class);\n+        requestInjector.service(isA(ServletRequest.class), isA(ServletResponse.class));\n+        EasyMock.expectLastCall();\n+        EasyMock.replay(requestInjector);\n+        ServletContext context = org.easymock.classextension.EasyMock.createMock(ServletContext.class);\n+        expect(context.getAttribute(TuscanyServlet.TUSCANY_SERVLET_REQUEST_INJECTOR)).andReturn(requestInjector);\n+        org.easymock.classextension.EasyMock.replay(context);\n+        ServletConfig config = EasyMock.createMock(ServletConfig.class);\n+        EasyMock.expect(config.getServletContext()).andReturn(context);\n+        EasyMock.replay(config);\n+        TuscanyServlet servlet = new TuscanyServlet();\n+        servlet.init(config);\n+        ServletRequest req = EasyMock.createNiceMock(ServletRequest.class);\n+        ServletResponse res = EasyMock.createNiceMock(ServletResponse.class);\n+        servlet.service(req, res);\n+        EasyMock.verify(requestInjector);\n+    }\n+\n+}"
            },
            {
                "sha": "5f23fecb65e137fae2c1055b41822c95facfa6f0",
                "filename": "test/src/main/resources/META-INF/tuscany/system.scdl",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/test/src/main/resources/META-INF/tuscany/system.scdl",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/e22d946ccff042b39f00f310ccb1cb9cea58c5f7/test/src/main/resources/META-INF/tuscany/system.scdl",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/test/src/main/resources/META-INF/tuscany/system.scdl?ref=e22d946ccff042b39f00f310ccb1cb9cea58c5f7",
                "patch": "@@ -117,4 +117,12 @@\n         <system:implementation.system class=\"org.apache.tuscany.core.services.work.jsr237.Jsr237WorkScheduler\"/>\n     </component>\n \n+    <component name=\"policyBuilderRegistry\">\n+         <system:implementation.system class=\"org.apache.tuscany.core.policy.PolicyBuilderRegistryImpl\"/>\n+    </component>\n+\n+    <component name=\"propertyFactory\">\n+        <system:implementation.system class=\"org.apache.tuscany.core.loader.StringParserPropertyFactory\"/>\n+    </component>\n+    \n </composite>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/ba6389ec5dba927254a27e68c4cf3b8e800fbe9f",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/662c76b60248fafda30725730e81bd8cad15c693",
        "message": "The JSON and Ajax ServiceBindingProviders were incorrectly calling componentContext.createSelfReference() to get a proxy to the target ComponentService, and this was not working (NPE) with bindings declared on component services (although it was working by chance for bindings declared on composite services if you had no other binding declared on your first component service...). Since a self reference is configured to use the binding from its corresponding service for outgoing calls, it shoulnd't  be used to dispatch incoming calls to the component service, unless you want to go back out to the network :). I fixed the ServiceBindingProviders to use the correct runtime wires from the target service to create a proxy instead of using a self reference.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tuscany/java/sca@566470 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_89",
        "file": [
            {
                "sha": "cb7ef6d60cbff235880e30674ce5c13f1f4c9690",
                "filename": "modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxService.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/ba6389ec5dba927254a27e68c4cf3b8e800fbe9f/modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxService.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/ba6389ec5dba927254a27e68c4cf3b8e800fbe9f/modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxService.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ajax/src/main/java/org/apache/tuscany/sca/binding/ajax/AjaxService.java?ref=ba6389ec5dba927254a27e68c4cf3b8e800fbe9f",
                "patch": "@@ -20,6 +20,8 @@\n package org.apache.tuscany.sca.binding.ajax;\n \n import org.apache.tuscany.sca.assembly.Binding;\n+import org.apache.tuscany.sca.core.invocation.JDKProxyService;\n+import org.apache.tuscany.sca.core.invocation.ProxyFactory;\n import org.apache.tuscany.sca.http.ServletHost;\n import org.apache.tuscany.sca.interfacedef.java.JavaInterface;\n import org.apache.tuscany.sca.runtime.RuntimeComponent;\n@@ -52,9 +54,12 @@ public void start() {\n         }\n         \n         Class<?> type = ((JavaInterface)rcs.getInterfaceContract().getInterface()).getJavaClass();\n-        Object instance = rc.createSelfReference(type).getService();\n \n-        servlet.addService(binding.getName(), type, instance);\n+        // Create a Java proxy to the target service\n+        ProxyFactory proxyFactory = new JDKProxyService();\n+        Object proxy = proxyFactory.createProxy(type, rcs.getRuntimeWire(binding));\n+\n+        servlet.addService(binding.getName(), type, proxy);\n \n         servletHost.addServletMapping(SERVLET_PATH, servlet);\n     }"
            },
            {
                "sha": "a5f4d6cbc6751cfa6ee425df5317e9e8957df1a2",
                "filename": "modules/binding-jsonrpc/src/main/java/org/apache/tuscany/sca/binding/jsonrpc/JSONRPCService.java",
                "status": "modified",
                "additions": 11,
                "deletions": 3,
                "changes": 14,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/ba6389ec5dba927254a27e68c4cf3b8e800fbe9f/modules/binding-jsonrpc/src/main/java/org/apache/tuscany/sca/binding/jsonrpc/JSONRPCService.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/ba6389ec5dba927254a27e68c4cf3b8e800fbe9f/modules/binding-jsonrpc/src/main/java/org/apache/tuscany/sca/binding/jsonrpc/JSONRPCService.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-jsonrpc/src/main/java/org/apache/tuscany/sca/binding/jsonrpc/JSONRPCService.java?ref=ba6389ec5dba927254a27e68c4cf3b8e800fbe9f",
                "patch": "@@ -22,11 +22,14 @@\n import java.net.URI;\n \n import org.apache.tuscany.sca.assembly.Binding;\n+import org.apache.tuscany.sca.core.invocation.JDKProxyService;\n+import org.apache.tuscany.sca.core.invocation.ProxyFactory;\n import org.apache.tuscany.sca.http.ServletHost;\n import org.apache.tuscany.sca.interfacedef.Interface;\n import org.apache.tuscany.sca.interfacedef.java.JavaInterface;\n import org.apache.tuscany.sca.runtime.RuntimeComponent;\n import org.apache.tuscany.sca.runtime.RuntimeComponentService;\n+import org.apache.tuscany.sca.runtime.RuntimeWire;\n import org.apache.tuscany.sca.spi.ComponentLifecycle;\n \n /**\n@@ -66,10 +69,15 @@ public JSONRPCService(RuntimeComponent component,\n \n     public void start() {\n         \n-        // Create and register a servlet for this service\n+        // Determine the service business interface\n         Class<?> serviceInterface = getTargetJavaClass(service.getInterfaceContract().getInterface());\n-        Object instance = component.createSelfReference(serviceInterface).getService();\n-        JSONRPCServiceServlet serviceServlet = new JSONRPCServiceServlet(binding.getName(), serviceInterface, instance);\n+\n+        // Create a Java proxy to the target service\n+        ProxyFactory proxyFactory = new JDKProxyService();\n+        Object proxy = proxyFactory.createProxy(serviceInterface, service.getRuntimeWire(binding));\n+        \n+        // Create and register a servlet for this service\n+        JSONRPCServiceServlet serviceServlet = new JSONRPCServiceServlet(binding.getName(), serviceInterface, proxy);\n         int port;\n         servletHost.addServletMapping(binding.getURI(), serviceServlet);\n         URI uri = URI.create(binding.getURI());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/tuscany-sca-1.x/commit/f2b64d22969217e484f56c146ab92e948b32e059",
        "repo": "tuscany-sca-1.x",
        "parent": "https://github.com/apache/tuscany-sca-1.x/commit/f5b72d240100d36fbdbe8c69e93faaf4bbbe1656",
        "message": "TUSCANY-2824 - turn WSSecurity based policy back on. Two not so great fixes here. Firstly WSSecurityPolicyHandler pushes a property into the Axis configuration context to force Rampart to recognize the policy. I haven't discovered what part of our configuration is required to do this properly. Secondly I fixed the helloworld-ws-service-secure test case to reference the wsdl on binding.ws. Without this you get a NPE in axis/rampart as it fails to map binding operations to port type operation using QNames (don't know why it thinks these are QNames). Our generated WSDL has the generated binding in a different namespace to the port type. Associating the wsdl binding with binding.ws means that the binding is not generated at the made up QNames match. I also updated a few key stores as the runtime was complaining about X509 certificate version numbers. \n\ngit-svn-id: https://svn.apache.org/repos/asf/tuscany/branches/sca-java-1.x@743732 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "tuscany-sca-1.x_90",
        "file": [
            {
                "sha": "fabc07c7cf05c9066c9e93e6117cb7010821082e",
                "filename": "modules/binding-ws-axis2-policy/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/policy/wspolicy/WSSecurityPolicyHandler.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2-policy/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/policy/wspolicy/WSSecurityPolicyHandler.java",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2-policy/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/policy/wspolicy/WSSecurityPolicyHandler.java",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-axis2-policy/src/main/java/org/apache/tuscany/sca/binding/ws/axis2/policy/wspolicy/WSSecurityPolicyHandler.java?ref=f2b64d22969217e484f56c146ab92e948b32e059",
                "patch": "@@ -41,6 +41,15 @@ public void setUp(Object... context) {\n                         Policy wsPolicy = (Policy)policy;\n                         try {\n                             configContext.getAxisConfiguration().applyPolicy(wsPolicy);\n+                            \n+                            // TUSCANY-2824\n+                            // hack to make service side pick up rampart policies\n+                            // \"rampartPolicy\" comes from RampartMessageData.KEY_RAMPART_POLICY\n+                            // but I'm avoiding adding an explicit dependency just yet. \n+                            // There must be a proper way of getting rampart to recognize\n+                            // these policies\n+                            configContext.setProperty(\"rampartPolicy\", wsPolicy);\n+                            \n                         } catch ( AxisFault e ) {\n                             throw new RuntimeException(e);\n                         }"
            },
            {
                "sha": "9f1e9450ba7c33b44d630f04db32873b12a1b176",
                "filename": "modules/binding-ws-axis2-policy/src/main/resources/META-INF/services/org.apache.tuscany.sca.policy.util.PolicyHandler",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2-policy/src/main/resources/META-INF/services/org.apache.tuscany.sca.policy.util.PolicyHandler",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2-policy/src/main/resources/META-INF/services/org.apache.tuscany.sca.policy.util.PolicyHandler",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-axis2-policy/src/main/resources/META-INF/services/org.apache.tuscany.sca.policy.util.PolicyHandler?ref=f2b64d22969217e484f56c146ab92e948b32e059",
                "patch": "@@ -20,6 +20,6 @@\n org.apache.tuscany.sca.binding.ws.axis2.policy.configuration.Axis2ConfigParamPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#authentication,model=org.apache.tuscany.sca.binding.ws.axis2.policy.configuration.Axis2ConfigParamPolicy\r\n org.apache.tuscany.sca.binding.ws.axis2.policy.configuration.Axis2ConfigParamPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#integrity,model=org.apache.tuscany.sca.binding.ws.axis2.policy.configuration.Axis2ConfigParamPolicy\r\n org.apache.tuscany.sca.binding.ws.axis2.policy.configuration.Axis2ConfigParamPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#confidentiality,model=org.apache.tuscany.sca.binding.ws.axis2.policy.configuration.Axis2ConfigParamPolicy\r\n-#org.apache.tuscany.sca.binding.ws.axis2.policy.wspolicy.WSSecurityPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#authentication,model=org.apache.neethi.Policy\r\n-#org.apache.tuscany.sca.binding.ws.axis2.policy.wspolicy.WSSecurityPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#integrity,model=org.apache.neethi.Policy\r\n-#org.apache.tuscany.sca.binding.ws.axis2.policy.wspolicy.WSSecurityPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#confidentiality,model=org.apache.neethi.Policy\n\\ No newline at end of file\n+org.apache.tuscany.sca.binding.ws.axis2.policy.wspolicy.WSSecurityPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#authentication,model=org.apache.neethi.Policy\r\n+org.apache.tuscany.sca.binding.ws.axis2.policy.wspolicy.WSSecurityPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#integrity,model=org.apache.neethi.Policy\r\n+org.apache.tuscany.sca.binding.ws.axis2.policy.wspolicy.WSSecurityPolicyHandler;intent=http://www.osoa.org/xmlns/sca/1.0#confidentiality,model=org.apache.neethi.Policy\n\\ No newline at end of file"
            },
            {
                "sha": "bfa9b1a222f7e553afd4a354a2358099a87eae67",
                "filename": "modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/definitions.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/definitions.xml",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/definitions.xml",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/definitions.xml?ref=f2b64d22969217e484f56c146ab92e948b32e059",
                "patch": "@@ -43,11 +43,12 @@\n \t\t\t\t<ramp:passwordType>PasswordText</ramp:passwordType>\r\n \t\t\t\t<ramp:passwordCallbackClass>org.apache.tuscany.sca.binding.ws.axis2.itests.policy.wspolicy.ClientPWCBHandler</ramp:passwordCallbackClass>\r\n \t\t\t</ramp:RampartConfig>\r\n-\t\t\t</wsp:All>\r\n+\t       </wsp:All>\r\n \t\t</wsp:ExactlyOne>\r\n \t</wsp:Policy>\r\n  </sca:policySet>\r\n  \r\n+ \r\n   <!-- A policyset that uses WS Policy --> \r\n  <sca:policySet name=\"wsSecurityPolicyForIntegrity\"\r\n  \tprovides=\"sca:integrity\"\r"
            },
            {
                "sha": "d77c889141c173edeefb3136fa677f28969c882a",
                "filename": "modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/tuscanyKeys.jks",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/tuscanyKeys.jks",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f2b64d22969217e484f56c146ab92e948b32e059/modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/tuscanyKeys.jks",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/modules/binding-ws-axis2/src/test/resources/org/apache/tuscany/sca/binding/ws/axis2/itests/policy/wspolicy/tuscanyKeys.jks?ref=f2b64d22969217e484f56c146ab92e948b32e059"
            },
            {
                "sha": "e2184ad3c60cbbc70dcc0dbf7786607302b05ce9",
                "filename": "samples/helloworld-ws-reference-secure/src/main/resources/helloworldKeys.jks",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f2b64d22969217e484f56c146ab92e948b32e059/samples/helloworld-ws-reference-secure/src/main/resources/helloworldKeys.jks",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f2b64d22969217e484f56c146ab92e948b32e059/samples/helloworld-ws-reference-secure/src/main/resources/helloworldKeys.jks",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/samples/helloworld-ws-reference-secure/src/main/resources/helloworldKeys.jks?ref=f2b64d22969217e484f56c146ab92e948b32e059"
            },
            {
                "sha": "e2184ad3c60cbbc70dcc0dbf7786607302b05ce9",
                "filename": "samples/helloworld-ws-service-secure/src/main/resources/helloworldKeys.jks",
                "status": "modified",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f2b64d22969217e484f56c146ab92e948b32e059/samples/helloworld-ws-service-secure/src/main/resources/helloworldKeys.jks",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f2b64d22969217e484f56c146ab92e948b32e059/samples/helloworld-ws-service-secure/src/main/resources/helloworldKeys.jks",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/samples/helloworld-ws-service-secure/src/main/resources/helloworldKeys.jks?ref=f2b64d22969217e484f56c146ab92e948b32e059"
            },
            {
                "sha": "a078067e9a125c02d498e190b330feee83c53d28",
                "filename": "samples/helloworld-ws-service-secure/src/main/resources/helloworldws.composite",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/tuscany-sca-1.x/blob/f2b64d22969217e484f56c146ab92e948b32e059/samples/helloworld-ws-service-secure/src/main/resources/helloworldws.composite",
                "raw_url": "https://github.com/apache/tuscany-sca-1.x/raw/f2b64d22969217e484f56c146ab92e948b32e059/samples/helloworld-ws-service-secure/src/main/resources/helloworldws.composite",
                "contents_url": "https://api.github.com/repos/apache/tuscany-sca-1.x/contents/samples/helloworld-ws-service-secure/src/main/resources/helloworldws.composite?ref=f2b64d22969217e484f56c146ab92e948b32e059",
                "patch": "@@ -31,7 +31,8 @@\n     <service name=\"HelloWorldWsPolicyService\" promote=\"HelloWorldServiceComponent/HelloWorldService\"\r\n     \t\t requires=\"integrity\">\r\n         <interface.wsdl interface=\"http://helloworld#wsdl.interface(HelloWorld)\" />\r\n-        <binding.ws uri=\"http://localhost:8085/HelloWorldWsPolicyService\"/>\r\n+        <binding.ws wsdlElement=\"http://helloworld#wsdl.binding(HelloWorldSoapBinding)\"\r\n+                    uri=\"http://localhost:8085/HelloWorldWsPolicyService\"/>\r\n     </service>\r\n \r\n     <component name=\"HelloWorldServiceComponent\">\r"
            }
        ]
    }
]
