[
    {
        "commit": "https://github.com/apache/airavata/commit/6c6cfdc01c58bd475f2ec488ae01822a3f3262f0",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/c905ef59739bb9ad765457ca9baa04e6d09f882e",
        "message": "Fixing NPE when fetching the curator client",
        "bug_id": "airavata_1",
        "file": [
            {
                "sha": "70652a9a939bd8a34f06597321120c46806af46f",
                "filename": "modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/AbstractTask.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/airavata/blob/6c6cfdc01c58bd475f2ec488ae01822a3f3262f0/modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/AbstractTask.java",
                "raw_url": "https://github.com/apache/airavata/raw/6c6cfdc01c58bd475f2ec488ae01822a3f3262f0/modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/AbstractTask.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/AbstractTask.java?ref=6c6cfdc01c58bd475f2ec488ae01822a3f3262f0",
                "patch": "@@ -176,14 +176,13 @@ public AbstractTask setTaskHelper(TaskHelper taskHelper) {\n     }\n \n     protected int getCurrentRetryCount() throws Exception {\n-        return MonitoringUtil.getTaskRetryCount(curatorClient, taskId);\n+        return MonitoringUtil.getTaskRetryCount(getCuratorClient(), taskId);\n     }\n \n     protected void markNewRetry() throws Exception {\n-        MonitoringUtil.increaseTaskRetryCount(curatorClient, taskId);\n+        MonitoringUtil.increaseTaskRetryCount(getCuratorClient(), taskId);\n     }\n \n-\n     public int getRetryCount() {\n         return retryCount;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/aea2b55231eedd228474a2437b1eb7953ee833c6",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/9999156cbf7b8ce52e3dde8457e01b86488e6a81",
        "message": "Fixing possible NPE when publishing process status",
        "bug_id": "airavata_2",
        "file": [
            {
                "sha": "6006351f185611e787ca64285d025f6ed447b658",
                "filename": "modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/AiravataTask.java",
                "status": "modified",
                "additions": 13,
                "deletions": 7,
                "changes": 20,
                "blob_url": "https://github.com/apache/airavata/blob/aea2b55231eedd228474a2437b1eb7953ee833c6/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/AiravataTask.java",
                "raw_url": "https://github.com/apache/airavata/raw/aea2b55231eedd228474a2437b1eb7953ee833c6/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/AiravataTask.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/AiravataTask.java?ref=aea2b55231eedd228474a2437b1eb7953ee833c6",
                "patch": "@@ -50,7 +50,6 @@\n import org.slf4j.LoggerFactory;\n import org.slf4j.MDC;\n \n-import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.util.Collections;\n import java.util.List;\n@@ -105,7 +104,11 @@ protected TaskResult onFail(String reason, boolean fatal, Throwable error) {\n         logger.error(errorMessage, error);\n \n         status.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n-        getTaskContext().setProcessStatus(status);\n+        if (getTaskContext() != null) { // task context could be null if the initialization failed\n+            getTaskContext().setProcessStatus(status);\n+        } else {\n+            logger.warn(\"Task context is null. So can not store the process status in the context\");\n+        }\n \n         ErrorModel errorModel = new ErrorModel();\n         errorModel.setUserFriendlyMessage(reason);\n@@ -114,7 +117,7 @@ protected TaskResult onFail(String reason, boolean fatal, Throwable error) {\n \n         if (!skipTaskStatusPublish) {\n             publishTaskState(TaskState.FAILED);\n-            saveAndPublishProcessStatus();\n+            saveAndPublishProcessStatus(taskContext != null ? taskContext.getProcessStatus() : status);\n             saveExperimentError(errorModel);\n             saveProcessError(errorModel);\n             saveTaskError(errorModel);\n@@ -126,14 +129,17 @@ protected TaskResult onFail(String reason, boolean fatal, Throwable error) {\n     protected void saveAndPublishProcessStatus(ProcessState state) {\n         ProcessStatus processStatus = new ProcessStatus(state);\n         processStatus.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n-        getTaskContext().setProcessStatus(processStatus);\n-        saveAndPublishProcessStatus();\n+        if (getTaskContext() != null) {\n+            getTaskContext().setProcessStatus(processStatus);\n+        } else {\n+            logger.warn(\"Task context is null. So can not store the process status in the context\");\n+        }\n+        saveAndPublishProcessStatus((taskContext != null ? taskContext.getProcessStatus() : processStatus));\n     }\n \n     @SuppressWarnings(\"WeakerAccess\")\n-    protected void saveAndPublishProcessStatus() {\n+    protected void saveAndPublishProcessStatus(ProcessStatus status) {\n         try {\n-            ProcessStatus status = taskContext.getProcessStatus();\n             if (status.getTimeOfStateChange() == 0 || status.getTimeOfStateChange() > 0 ){\n                 status.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n             } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/5f58b1b65ee71c13ef24a092d1a39c7c186cb76e",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/ad72e82096cfc5cb4028c825d7cb6a2bf3e83532",
        "message": "Fixing NPE when creating an Optional from null object",
        "bug_id": "airavata_3",
        "file": [
            {
                "sha": "cd79cf01e769ea4ff879de970885c91cfdcd8b54",
                "filename": "modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/support/adaptor/AgentStore.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/5f58b1b65ee71c13ef24a092d1a39c7c186cb76e/modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/support/adaptor/AgentStore.java",
                "raw_url": "https://github.com/apache/airavata/raw/5f58b1b65ee71c13ef24a092d1a39c7c186cb76e/modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/support/adaptor/AgentStore.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-helix/task-core/src/main/java/org/apache/airavata/helix/core/support/adaptor/AgentStore.java?ref=5f58b1b65ee71c13ef24a092d1a39c7c186cb76e",
                "patch": "@@ -45,7 +45,7 @@\n         if (protoToTokenMap != null) {\n             Map<String, AgentAdaptor> tokenToAdaptorMap = protoToTokenMap.get(submissionProtocol);\n             if (tokenToAdaptorMap != null) {\n-                return Optional.of(tokenToAdaptorMap.get(authToken));\n+                return Optional.ofNullable(tokenToAdaptorMap.get(authToken));\n             } else {\n                 return Optional.empty();\n             }\n@@ -65,7 +65,7 @@ public void putAgentAdaptor(String computeResource, JobSubmissionProtocol submis\n         if (protoToTokenMap != null) {\n             Map<String, StorageResourceAdaptor> tokenToAdaptorMap = protoToTokenMap.get(dataMovementProtocol);\n             if (tokenToAdaptorMap != null) {\n-                return Optional.of(tokenToAdaptorMap.get(authToken));\n+                return Optional.ofNullable(tokenToAdaptorMap.get(authToken));\n             } else {\n                 return Optional.empty();\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/14ae2027f50ba0b30b112f181b32f2192f98f86c",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/4c807911877542c08a5774a9bccb9da51f8162e8",
        "message": "AIRAVATA-2663 Fix NPE in createProcesses",
        "bug_id": "airavata_4",
        "file": [
            {
                "sha": "ff4a5e6b17295090e405e06547e746f3b2025940",
                "filename": "modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/cpi/impl/SimpleOrchestratorImpl.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/14ae2027f50ba0b30b112f181b32f2192f98f86c/modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/cpi/impl/SimpleOrchestratorImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/14ae2027f50ba0b30b112f181b32f2192f98f86c/modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/cpi/impl/SimpleOrchestratorImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/cpi/impl/SimpleOrchestratorImpl.java?ref=14ae2027f50ba0b30b112f181b32f2192f98f86c",
                "patch": "@@ -280,21 +280,21 @@ public void initialize() throws OrchestratorException {\n         try {\n             ExperimentModel experimentModel = registryClient.getExperiment(experimentId);\n             List<ProcessModel> processModels = registryClient.getProcessList(experimentId);\n-            if (processModels.equals(null) || processModels.isEmpty()){\n+            if (processModels == null || processModels.isEmpty()){\n                 ProcessModel processModel = ExperimentModelUtil.cloneProcessFromExperiment(experimentModel);\n                 String processId = registryClient.addProcess(processModel, experimentId);\n                 processModel.setProcessId(processId);\n+                processModels = new ArrayList<>();\n                 processModels.add(processModel);\n-                return processModels;\n             }\n+            return processModels;\n         } catch (Exception e) {\n             throw new OrchestratorException(\"Error during creating process\", e);\n         } finally {\n             if (registryClient != null) {\n                 ThriftUtils.close(registryClient);\n             }\n         }\n-        return null;\n     }\n \n     public String createAndSaveTasks(String gatewayId, ProcessModel processModel, boolean autoSchedule) throws OrchestratorException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/0bc5513ecf5fe671b733b56ef6c3344c416ab244",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/7addfd91640c46194ec2b2181275bcc80c1c05d6",
        "message": "fixing NPE",
        "bug_id": "airavata_5",
        "file": [
            {
                "sha": "47d4205dc44609774705512d696b61f6c75116f4",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/resources/AppInterfaceResource.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/0bc5513ecf5fe671b733b56ef6c3344c416ab244/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/resources/AppInterfaceResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/0bc5513ecf5fe671b733b56ef6c3344c416ab244/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/resources/AppInterfaceResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/resources/AppInterfaceResource.java?ref=0bc5513ecf5fe671b733b56ef6c3344c416ab244",
                "patch": "@@ -389,7 +389,7 @@ public void save() throws AppCatalogException {\n                 applicationInterface.setCreationTime(AiravataUtils.getCurrentTimestamp());\n                 applicationInterface.setGatewayId(gatewayId);\n                 applicationInterface.setArchiveWorkingDirectory(archiveWorkingDirectory);\n-                existigAppInterface.setHasOptionalFileInputs(hasOptionalFileInputs);\n+                applicationInterface.setHasOptionalFileInputs(hasOptionalFileInputs);\n                 em.persist(applicationInterface);\n             }\n             em.getTransaction().commit();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/e4a6b18d44d915554194259b3b976a52caaf527a",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/c0665f1aaa804736a6a839ba5438387557a873e9",
        "message": "Fixed NPE with resource job manager",
        "bug_id": "airavata_6",
        "file": [
            {
                "sha": "22190c9a8fef39d78a1bde2c26903faff5cc49f1",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/e4a6b18d44d915554194259b3b976a52caaf527a/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/e4a6b18d44d915554194259b3b976a52caaf527a/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java?ref=e4a6b18d44d915554194259b3b976a52caaf527a",
                "patch": "@@ -607,9 +607,9 @@ public static GroovyMap createGroovyMap(ProcessContext processContext, TaskConte\n         }\n \n         ApplicationParallelismType parallelism = appDepDescription.getParallelism();\n-        Map<ApplicationParallelismType, String> parallelismPrefix = processContext.getResourceJobManager().getParallelismPrefix();\n         if (parallelism != null) {\n             if (parallelism != ApplicationParallelismType.SERIAL) {\n+                Map<ApplicationParallelismType, String> parallelismPrefix = processContext.getResourceJobManager().getParallelismPrefix();\n                 if (parallelismPrefix != null){\n                     String parallelismCommand = parallelismPrefix.get(parallelism);\n                     if (parallelismCommand != null){"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/aefd913a843f1bc764aa8da49f496a06dea27c77",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/fe7bc1fcaef59bb5df73700f175ce45c99e8d6ac",
        "message": "Fixed NPE with resource job manager",
        "bug_id": "airavata_7",
        "file": [
            {
                "sha": "88a3ada87c2fd84500926656f0d55df3a6b8730d",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/airavata/blob/aefd913a843f1bc764aa8da49f496a06dea27c77/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/aefd913a843f1bc764aa8da49f496a06dea27c77/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java?ref=aefd913a843f1bc764aa8da49f496a06dea27c77",
                "patch": "@@ -490,7 +490,7 @@ public static GroovyMap createGroovyMap(ProcessContext processContext, TaskConte\n         GroovyMap groovyMap = new GroovyMap();\n         try {\n             ProcessModel processModel = processContext.getProcessModel();\n-            ResourceJobManager resourceJobManager = getResourceJobManager(processContext);\n+            ResourceJobManager resourceJobManager = processContext.getResourceJobManager();\n             setMailAddresses(processContext, groovyMap); // set email options and addresses\n \n             groovyMap.add(Script.INPUT_DIR, processContext.getInputDir());\n@@ -611,8 +611,9 @@ public static GroovyMap createGroovyMap(ProcessContext processContext, TaskConte\n             }\n \n             ApplicationParallelismType parallelism = appDepDescription.getParallelism();\n-            Map<ApplicationParallelismType, String> parallelismPrefix = processContext.getResourceJobManager().getParallelismPrefix();\n-            if (parallelism != null) {\n+\n+            if (parallelism != null && resourceJobManager != null) {\n+                Map<ApplicationParallelismType, String> parallelismPrefix = resourceJobManager.getParallelismPrefix();\n                 if (parallelism != ApplicationParallelismType.SERIAL) {\n                     if (parallelismPrefix != null){\n                         String parallelismCommand = parallelismPrefix.get(parallelism);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/e66337028857c627576cc7260eae49e769e8c047",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/64f823b3a892efbad85099ca619c63325b1e5ff5",
        "message": "Fixed NPE with cloud monitor mode",
        "bug_id": "airavata_8",
        "file": [
            {
                "sha": "5e8de6d57a04fc26e25dcea0818e4833b7d7eb34",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/airavata/blob/e66337028857c627576cc7260eae49e769e8c047/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "raw_url": "https://github.com/apache/airavata/raw/e66337028857c627576cc7260eae49e769e8c047/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java?ref=e66337028857c627576cc7260eae49e769e8c047",
                "patch": "@@ -454,7 +454,7 @@ public static void loadConfiguration() throws GFacException {\n \t\t}\n \t}\n \n-\tpublic static JobMonitor getMonitorService(MonitorMode monitorMode) throws AiravataException {\n+\tpublic static JobMonitor getMonitorService(MonitorMode monitorMode) throws AiravataException, GFacException {\n \t\tJobMonitor jobMonitor = jobMonitorServices.get(monitorMode);\n \t\tif (jobMonitor == null) {\n \t\t\tsynchronized (JobMonitor.class) {\n@@ -471,14 +471,19 @@ public static JobMonitor getMonitorService(MonitorMode monitorMode) throws Airav\n \t\t\t\t\t\t\tAuroraJobMonitor auroraJobMonitor = AuroraJobMonitor.getInstance();\n \t\t\t\t\t\t\tnew Thread(auroraJobMonitor).start();\n \t\t\t\t\t\t\tjobMonitorServices.put(MonitorMode.CLOUD_JOB_MONITOR, auroraJobMonitor);\n+\t\t\t\t\t\t\tjobMonitor = auroraJobMonitor;\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tdefault:\n+\t\t\t\t\t\t\tthrow new GFacException(\"Unsupported monitor mode :\" + monitorMode.name());\n+\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn jobMonitor;\n \t}\n \n-\tpublic static JobMonitor getDefaultMonitorService() throws AiravataException {\n+\tpublic static JobMonitor getDefaultMonitorService() throws AiravataException, GFacException {\n \t\treturn getMonitorService(MonitorMode.JOB_EMAIL_NOTIFICATION_MONITOR);\n \t}\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/b284167d29172e28cff71575d82731a124ce4c4d",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/309a9ff83945b59930d9b37cff52e4fb6e405b5c",
        "message": "Fixed NPE with experiment cancellation",
        "bug_id": "airavata_9",
        "file": [
            {
                "sha": "b21be1881d11a4870337afc6158af7febcec4cba",
                "filename": "airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "status": "modified",
                "additions": 3,
                "deletions": 4,
                "changes": 7,
                "blob_url": "https://github.com/apache/airavata/blob/b284167d29172e28cff71575d82731a124ce4c4d/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/b284167d29172e28cff71575d82731a124ce4c4d/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java?ref=b284167d29172e28cff71575d82731a124ce4c4d",
                "patch": "@@ -1454,16 +1454,15 @@ public void terminateExperiment(AuthzToken authzToken, String airavataExperiment\n                 logger.error(airavataExperimentId, \"Error while cancelling experiment {}, experiment doesn't exist.\", airavataExperimentId);\n                 throw new ExperimentNotFoundException(\"Requested experiment id \" + airavataExperimentId + \" does not exist in the system..\");\n             }\n-            ExperimentStatus experimentStatus = null;\n-            switch (experimentStatus.getState()) {\n+            switch (existingExperiment.getExperimentStatus().getState()) {\n                 case COMPLETED: case CANCELED: case FAILED: case CANCELING:\n-                    logger.warn(\"Can't terminate already {} experiment\", experimentStatus.getState().name());\n+                    logger.warn(\"Can't terminate already {} experiment\", existingExperiment.getExperimentStatus().getState().name());\n                     break;\n                 case CREATED:\n                     logger.warn(\"Experiment termination is only allowed for launched experiments.\");\n                     break;\n                 default:\n-                    submitCancelExperiment(airavataExperimentId, gatewayId);\n+                    submitCancelExperiment(gatewayId, airavataExperimentId);\n                     logger.debug(\"Airavata cancelled experiment with experiment id : \" + airavataExperimentId);\n                     break;\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/79aa48650ec211b29ba2dcebe429b64a2a6f7eb5",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/01716e5360417926a32cf1e4e1aef441c4b939d7",
        "message": "Fixed NPE with Gateway resources",
        "bug_id": "airavata_10",
        "file": [
            {
                "sha": "97a83cb476ab6be4b9f764181ff105f1a1731dff",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/79aa48650ec211b29ba2dcebe429b64a2a6f7eb5/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/79aa48650ec211b29ba2dcebe429b64a2a6f7eb5/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java?ref=79aa48650ec211b29ba2dcebe429b64a2a6f7eb5",
                "patch": "@@ -93,7 +93,9 @@ public static Gateway getGateway (GatewayResource resource){\n         gateway.setIdentityServerPasswordToken(resource.getIdentityServerPasswordToken());\n         gateway.setOauthClientId(resource.getOauthClientId());\n         gateway.setOauthClientSecret(resource.getOauthClientSecret());\n-        gateway.setRequestCreationTime(resource.getRequestCreationTime().getTime());\n+        if (resource.getRequestCreationTime() != null) {\n+            gateway.setRequestCreationTime(resource.getRequestCreationTime().getTime());\n+        }\n         return gateway;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/f4aeee53487d72a1229f24218dfe5f785de09c45",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/1ecff7642340b49278172412c44ac49750d36e05",
        "message": "Fixed NPE with rabbitmq broker url",
        "bug_id": "airavata_11",
        "file": [
            {
                "sha": "985daad354855d4ecec1dd892d638776c4fd01f3",
                "filename": "modules/commons/src/main/java/org/apache/airavata/common/utils/ServerSettings.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/f4aeee53487d72a1229f24218dfe5f785de09c45/modules/commons/src/main/java/org/apache/airavata/common/utils/ServerSettings.java",
                "raw_url": "https://github.com/apache/airavata/raw/f4aeee53487d72a1229f24218dfe5f785de09c45/modules/commons/src/main/java/org/apache/airavata/common/utils/ServerSettings.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/commons/src/main/java/org/apache/airavata/common/utils/ServerSettings.java?ref=f4aeee53487d72a1229f24218dfe5f785de09c45",
                "patch": "@@ -123,8 +123,8 @@ public static String getRabbitmqExperimentLaunchQueueName() {\n         return getSetting(RABBITMQ_EXPERIMENT_EXCHANGE_NAME, \"experiment.launch.queue\");\n     }\n \n-    public static String getRabbitmqBrokerUrl() throws ApplicationSettingsException {\n-        return getSetting(RABBITMQ_BROKER_URL);\n+    public static String getRabbitmqBrokerUrl() {\n+        return getSetting(RABBITMQ_BROKER_URL, \"amqp://localhost:5672\");\n     }\n \n     public static String getRabbitmqStatusExchangeName(){"
            },
            {
                "sha": "b3e6d35b7c294ca1e16beca09bb0909c7bf4bca2",
                "filename": "modules/messaging/core/src/main/java/org/apache/airavata/messaging/core/MessagingFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/f4aeee53487d72a1229f24218dfe5f785de09c45/modules/messaging/core/src/main/java/org/apache/airavata/messaging/core/MessagingFactory.java",
                "raw_url": "https://github.com/apache/airavata/raw/f4aeee53487d72a1229f24218dfe5f785de09c45/modules/messaging/core/src/main/java/org/apache/airavata/messaging/core/MessagingFactory.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/messaging/core/src/main/java/org/apache/airavata/messaging/core/MessagingFactory.java?ref=f4aeee53487d72a1229f24218dfe5f785de09c45",
                "patch": "@@ -107,7 +107,7 @@ private static Publisher gerProcessPublisher(RabbitMQProperties rProperties) thr\n \n     private static RabbitMQProperties getProperties() {\n         return new RabbitMQProperties()\n-                .setBrokerUrl(ServerSettings.RABBITMQ_BROKER_URL)\n+                .setBrokerUrl(ServerSettings.getRabbitmqBrokerUrl())\n                 .setDurable(ServerSettings.getRabbitmqDurableQueue())\n                 .setPrefetchCount(ServerSettings.getRabbitmqPrefetchCount())\n                 .setAutoRecoveryEnable(true)"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/662728b4a3e74b24bd0a6437d7759c4235754dff",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/2536b339a88be99022171a3378ea2faafc48f3ee",
        "message": "Fixed NPE with scratch location",
        "bug_id": "airavata_12",
        "file": [
            {
                "sha": "45e7b94d67609b76e9215fa7d9ddb111123215b0",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/ProcessContext.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/662728b4a3e74b24bd0a6437d7759c4235754dff/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/ProcessContext.java",
                "raw_url": "https://github.com/apache/airavata/raw/662728b4a3e74b24bd0a6437d7759c4235754dff/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/ProcessContext.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/ProcessContext.java?ref=662728b4a3e74b24bd0a6437d7759c4235754dff",
                "patch": "@@ -169,7 +169,7 @@ public String getWorkingDir() {\n             }else {\n                 String scratchLocation = null;\n \t\t\t\tString overrideScratchLocation = processModel.getResourceSchedule().getOverrideScratchLocation();\n-                if (overrideScratchLocation != null || !overrideScratchLocation.equals(\"\")) {\n+                if (overrideScratchLocation != null && !overrideScratchLocation.equals(\"\")) {\n \t\t\t\t\tscratchLocation = overrideScratchLocation;\n \t\t\t\t} else {\n \t\t\t\t\tscratchLocation = computeResourcePreference.getScratchLocation();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/bd94e0df031f007eea390d638c0b445294001364",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/4e558e11edc752104b419bac8d2232d08f2b97cf",
        "message": "fixing NPE",
        "bug_id": "airavata_13",
        "file": [
            {
                "sha": "91c3a4b83532c13f759c90b2483cbf4174012c0c",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "status": "modified",
                "additions": 13,
                "deletions": 4,
                "changes": 17,
                "blob_url": "https://github.com/apache/airavata/blob/bd94e0df031f007eea390d638c0b445294001364/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/bd94e0df031f007eea390d638c0b445294001364/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java?ref=bd94e0df031f007eea390d638c0b445294001364",
                "patch": "@@ -420,16 +420,22 @@ public static ErrorModel getErrorModel (Object object){\n                 errorModel.setActualErrorMessage(errorResource.getActualErrorMessage());\n                 errorModel.setUserFriendlyMessage(errorResource.getUserFriendlyMessage());\n                 errorModel.setTransientOrPersistent(errorResource.getTransientOrPersistent());\n-                errorModel.setRootCauseErrorIdList(Arrays.asList(errorResource.getRootCauseErrorIdList().split(\",\")));\n+                String rootCauseErrorIdList = errorResource.getRootCauseErrorIdList();\n+                if (rootCauseErrorIdList != null){\n+                    errorModel.setRootCauseErrorIdList(Arrays.asList(rootCauseErrorIdList.split(\",\")));\n+                }\n                 return errorModel;\n-            } else if (object instanceof ProcessOutputResource) {\n+            } else if (object instanceof ProcessErrorResource) {\n                 ProcessErrorResource errorResource = (ProcessErrorResource) object;\n                 errorModel.setErrorId(errorResource.getErrorId());\n                 errorModel.setCreationTime(errorResource.getCreationTime().getTime());\n                 errorModel.setActualErrorMessage(errorResource.getActualErrorMessage());\n                 errorModel.setUserFriendlyMessage(errorResource.getUserFriendlyMessage());\n                 errorModel.setTransientOrPersistent(errorResource.getTransientOrPersistent());\n-                errorModel.setRootCauseErrorIdList(Arrays.asList(errorResource.getRootCauseErrorIdList().split(\",\")));\n+                String rootCauseErrorIdList = errorResource.getRootCauseErrorIdList();\n+                if (rootCauseErrorIdList != null){\n+                    errorModel.setRootCauseErrorIdList(Arrays.asList(rootCauseErrorIdList.split(\",\")));\n+                }\n                 return errorModel;\n             } else if (object instanceof TaskErrorResource) {\n                 TaskErrorResource errorResource = (TaskErrorResource) object;\n@@ -438,7 +444,10 @@ public static ErrorModel getErrorModel (Object object){\n                 errorModel.setActualErrorMessage(errorResource.getActualErrorMessage());\n                 errorModel.setUserFriendlyMessage(errorResource.getUserFriendlyMessage());\n                 errorModel.setTransientOrPersistent(errorResource.getTransientOrPersistent());\n-                errorModel.setRootCauseErrorIdList(Arrays.asList(errorResource.getRootCauseErrorIdList().split(\",\")));\n+                String rootCauseErrorIdList = errorResource.getRootCauseErrorIdList();\n+                if (rootCauseErrorIdList != null){\n+                    errorModel.setRootCauseErrorIdList(Arrays.asList(rootCauseErrorIdList.split(\",\")));\n+                }\n                 return errorModel;\n             } else {\n                 return null;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/54bb7192567f48c4d0a3b7b6c73b07ddb3d36a2a",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/4c790770685a77b1b43c7dadbea55396e983c465",
        "message": "fixing NPE at launch method",
        "bug_id": "airavata_14",
        "file": [
            {
                "sha": "db36ce6442285bb38d4c9a8a3bab5128bd32f45d",
                "filename": "modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/airavata/blob/54bb7192567f48c4d0a3b7b6c73b07ddb3d36a2a/modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/54bb7192567f48c4d0a3b7b6c73b07ddb3d36a2a/modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java?ref=54bb7192567f48c4d0a3b7b6c73b07ddb3d36a2a",
                "patch": "@@ -141,6 +141,12 @@ public boolean launchExperiment(String experimentId, String gatewayId) throws TE\n \t\t\tString experimentCancelNode = ZKPaths.makePath(experimentNodePath, ZkConstants.ZOOKEEPER_CANCEL_LISTENER_NODE);\n \t\t\tZKPaths.mkdirs(curatorClient.getZookeeperClient().getZooKeeper(), experimentCancelNode);\n \n+            experiment = (ExperimentModel) experimentCatalog.get(ExperimentCatalogModelType.EXPERIMENT, experimentId);\n+            if (experiment == null) {\n+                log.error(experimentId, \"Error retrieving the Experiment by the given experimentID: {} \", experimentId);\n+                return false;\n+            }\n+\n \t\t\tComputeResourcePreference computeResourcePreference = appCatalog.getGatewayProfile().\n \t\t\t\t\tgetComputeResourcePreference(gatewayId,\n \t\t\t\t\t\t\texperiment.getUserConfigurationData().getComputationalResourceScheduling().getResourceHostId());\n@@ -159,11 +165,6 @@ public boolean launchExperiment(String experimentId, String gatewayId) throws TE\n \t\t\tif (executionType == ExperimentType.SINGLE_APPLICATION) {\n \t\t\t\t//its an single application execution experiment\n \t\t\t\tList<ProcessModel> processes = orchestrator.createProcesses(experimentId, gatewayId);\n-\t\t\t\texperiment = (ExperimentModel) experimentCatalog.get(ExperimentCatalogModelType.EXPERIMENT, experimentId);\n-\t\t\t\tif (experiment == null) {\n-\t\t\t\t\tlog.error(experimentId, \"Error retrieving the Experiment by the given experimentID: {} \", experimentId);\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n \t\t\t\tfor (ProcessModel processModel : processes){\n \t\t\t\t\tString taskDag = orchestrator.createAndSaveTasks(gatewayId, processModel, experiment.getUserConfigurationData().isAiravataAutoSchedule());\n \t\t\t\t\tprocessModel.setTaskDag(taskDag);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/2bab21895ba24263f563bc6b24937548abd24acb",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/4c790770685a77b1b43c7dadbea55396e983c465",
        "message": "fixing NPE at launch method",
        "bug_id": "airavata_15",
        "file": [
            {
                "sha": "b0765ec1a9a30a4a6a8fae13df680e1ba41dd438",
                "filename": "modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "status": "modified",
                "additions": 22,
                "deletions": 21,
                "changes": 43,
                "blob_url": "https://github.com/apache/airavata/blob/2bab21895ba24263f563bc6b24937548abd24acb/modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/2bab21895ba24263f563bc6b24937548abd24acb/modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java?ref=2bab21895ba24263f563bc6b24937548abd24acb",
                "patch": "@@ -140,30 +140,31 @@ public boolean launchExperiment(String experimentId, String gatewayId) throws TE\n \t\t\tZKPaths.mkdirs(curatorClient.getZookeeperClient().getZooKeeper(), experimentNodePath);\n \t\t\tString experimentCancelNode = ZKPaths.makePath(experimentNodePath, ZkConstants.ZOOKEEPER_CANCEL_LISTENER_NODE);\n \t\t\tZKPaths.mkdirs(curatorClient.getZookeeperClient().getZooKeeper(), experimentCancelNode);\n+            experiment = (ExperimentModel) experimentCatalog.get(ExperimentCatalogModelType.EXPERIMENT, experimentId);\n+            if (experiment == null) {\n+                log.error(experimentId, \"Error retrieving the Experiment by the given experimentID: {} \", experimentId);\n+                return false;\n+            }\n \n-\t\t\tComputeResourcePreference computeResourcePreference = appCatalog.getGatewayProfile().\n+            ComputeResourcePreference computeResourcePreference = appCatalog.getGatewayProfile().\n \t\t\t\t\tgetComputeResourcePreference(gatewayId,\n \t\t\t\t\t\t\texperiment.getUserConfigurationData().getComputationalResourceScheduling().getResourceHostId());\n-\t\t\tString token = computeResourcePreference.getResourceSpecificCredentialStoreToken();\n-\t\t\tif (token == null || token.isEmpty()){\n-\t\t\t\t// try with gateway profile level token\n-\t\t\t\tGatewayResourceProfile gatewayProfile = appCatalog.getGatewayProfile().getGatewayProfile(gatewayId);\n-\t\t\t\ttoken = gatewayProfile.getCredentialStoreToken();\n-\t\t\t}\n-\t\t\t// still the token is empty, then we fail the experiment\n-\t\t\tif (token == null || token.isEmpty()){\n-\t\t\t\tlog.error(\"You have not configured credential store token at gateway profile or compute resource preference. Please provide the correct token at gateway profile or compute resource preference.\");\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t\tExperimentType executionType = experiment.getExperimentType();\n-\t\t\tif (executionType == ExperimentType.SINGLE_APPLICATION) {\n-\t\t\t\t//its an single application execution experiment\n-\t\t\t\tList<ProcessModel> processes = orchestrator.createProcesses(experimentId, gatewayId);\n-\t\t\t\texperiment = (ExperimentModel) experimentCatalog.get(ExperimentCatalogModelType.EXPERIMENT, experimentId);\n-\t\t\t\tif (experiment == null) {\n-\t\t\t\t\tlog.error(experimentId, \"Error retrieving the Experiment by the given experimentID: {} \", experimentId);\n-\t\t\t\t\treturn false;\n-\t\t\t\t}\n+            String token = computeResourcePreference.getResourceSpecificCredentialStoreToken();\n+            if (token == null || token.isEmpty()){\n+                // try with gateway profile level token\n+                GatewayResourceProfile gatewayProfile = appCatalog.getGatewayProfile().getGatewayProfile(gatewayId);\n+                token = gatewayProfile.getCredentialStoreToken();\n+            }\n+            // still the token is empty, then we fail the experiment\n+            if (token == null || token.isEmpty()){\n+                log.error(\"You have not configured credential store token at gateway profile or compute resource preference. Please provide the correct token at gateway profile or compute resource preference.\");\n+                return false;\n+            }\n+            ExperimentType executionType = experiment.getExperimentType();\n+            if (executionType == ExperimentType.SINGLE_APPLICATION) {\n+                //its an single application execution experiment\n+                List<ProcessModel> processes = orchestrator.createProcesses(experimentId, gatewayId);\n+\n \t\t\t\tfor (ProcessModel processModel : processes){\n \t\t\t\t\tString taskDag = orchestrator.createAndSaveTasks(gatewayId, processModel, experiment.getUserConfigurationData().isAiravataAutoSchedule());\n \t\t\t\t\tprocessModel.setTaskDag(taskDag);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/876a1405c7998cd713c3360283c184640c672404",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/a4716a7b3bdf07645370117edc0b9484d3308dab",
        "message": "Fixed NPE with reservataion start time and end time",
        "bug_id": "airavata_16",
        "file": [
            {
                "sha": "8b40d620845da1718dffe0a2430ae6cc547cbfcb",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/util/AppCatalogThriftConversion.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/airavata/blob/876a1405c7998cd713c3360283c184640c672404/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/util/AppCatalogThriftConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/876a1405c7998cd713c3360283c184640c672404/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/util/AppCatalogThriftConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/app/catalog/util/AppCatalogThriftConversion.java?ref=876a1405c7998cd713c3360283c184640c672404",
                "patch": "@@ -834,8 +834,13 @@ public static ComputeResourcePreference getComputeResourcePreference (ComputeHos\n         preference.setUsageReportingGatewayId(resource.getGatewayId());\n         preference.setQualityOfService(resource.getQualityOfService());\n         preference.setReservation(resource.getReservation());\n-        preference.setReservationStartTime(resource.getReservationStartTime().getTime());\n-        preference.setReservationEndTime(resource.getReservationEndTime().getTime());\n+        if (resource.getReservationStartTime() != null) {\n+            preference.setReservationStartTime(resource.getReservationStartTime().getTime());\n+        }\n+\n+        if (resource.getReservationEndTime() != null) {\n+            preference.setReservationEndTime(resource.getReservationEndTime().getTime());\n+        }\n         return preference;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/a4b13a3f7165358168f2f680dd0c36384fa12234",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/ea0cf5b3100599a7a89d2468cb9a1bb6001a8b81",
        "message": "fixing NPE at sort method",
        "bug_id": "airavata_17",
        "file": [
            {
                "sha": "0a2d207dffda730542a189cd010324b8aeb54f45",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/a4b13a3f7165358168f2f680dd0c36384fa12234/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/a4b13a3f7165358168f2f680dd0c36384fa12234/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java?ref=a4b13a3f7165358168f2f680dd0c36384fa12234",
                "patch": "@@ -579,7 +579,7 @@ public int compare(InputDataObjectType inputDataObjectType, InputDataObjectType\n         }\n         List<CommandObject> preJobCommands = appDepDescription.getPreJobCommands();\n         if (preJobCommands != null) {\n-            Collections.sort(moduleCmds,\n+            Collections.sort(preJobCommands,\n                     (o1, o2) -> ((CommandObject) o1).getCommandOrder() - ((CommandObject) o2).getCommandOrder());\n             for (CommandObject preJobCommand : preJobCommands) {\n                 jobDescriptor.addPreJobCommand(parseCommand(preJobCommand.getCommand(), processContext));\n@@ -588,7 +588,7 @@ public int compare(InputDataObjectType inputDataObjectType, InputDataObjectType\n \n         List<CommandObject> postJobCommands = appDepDescription.getPostJobCommands();\n         if (postJobCommands != null) {\n-            Collections.sort(moduleCmds,\n+            Collections.sort(postJobCommands,\n                     (o1, o2) -> ((CommandObject) o1).getCommandOrder() - ((CommandObject) o2).getCommandOrder());\n             for (CommandObject postJobCommand : postJobCommands) {\n                 jobDescriptor.addPostJobCommand(parseCommand(postJobCommand.getCommand(), processContext));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/0a2b24c0a2bb3e4c1dfbedee98270a52646d62ba",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/89d879e49aa7c58e388a7a35007e689490cf5cb3",
        "message": "Fixed npe with credential token",
        "bug_id": "airavata_18",
        "file": [
            {
                "sha": "0ab85ca5b7918db9ed05a29a77e916df8e759d99",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/0a2b24c0a2bb3e4c1dfbedee98270a52646d62ba/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "raw_url": "https://github.com/apache/airavata/raw/0a2b24c0a2bb3e4c1dfbedee98270a52646d62ba/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java?ref=0a2b24c0a2bb3e4c1dfbedee98270a52646d62ba",
                "patch": "@@ -260,7 +260,7 @@ public static SSHKeyAuthentication getComputerResourceSSHKeyAuthentication(Proce\n             ComputeResourcePreference computeResourcePreference = pc.getComputeResourcePreference();\n             String loginUserName = computeResourcePreference.getLoginUserName();\n             String credentialStoreToken = computeResourcePreference.getResourceSpecificCredentialStoreToken();\n-            if (credentialStoreToken == null && credentialStoreToken.isEmpty()) {\n+            if (credentialStoreToken == null || credentialStoreToken.isEmpty()) {\n                 credentialStoreToken = pc.getGatewayResourceProfile().getCredentialStoreToken();\n             }\n             return getSshKeyAuthentication(pc.getGatewayId(),loginUserName, credentialStoreToken);\n@@ -274,7 +274,7 @@ public static SSHKeyAuthentication getStorageSSHKeyAuthentication(ProcessContext\n             StoragePreference storagePreference = pc.getStoragePreference();\n             String loginUserName = storagePreference.getLoginUserName();\n             String credentialStoreToken = storagePreference.getResourceSpecificCredentialStoreToken();\n-            if (credentialStoreToken == null && credentialStoreToken.isEmpty()) {\n+            if (credentialStoreToken == null || credentialStoreToken.isEmpty()) {\n                 credentialStoreToken = pc.getGatewayResourceProfile().getCredentialStoreToken();\n             }\n             return getSshKeyAuthentication(pc.getGatewayId(), loginUserName, credentialStoreToken);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/3d0dd11defc3f069b48e712c76ba5edfafb4005e",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/c86e5508e60a229f73c6e35ba5ea3bbcf9804493",
        "message": "fixing NPE at AdvancedSCPHandler",
        "bug_id": "airavata_19",
        "file": [
            {
                "sha": "86b2d8775e8913712482b090423c32e612d9b07c",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "status": "modified",
                "additions": 26,
                "deletions": 3,
                "changes": 29,
                "blob_url": "https://github.com/apache/airavata/blob/3d0dd11defc3f069b48e712c76ba5edfafb4005e/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/3d0dd11defc3f069b48e712c76ba5edfafb4005e/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java?ref=3d0dd11defc3f069b48e712c76ba5edfafb4005e",
                "patch": "@@ -193,6 +193,21 @@ private boolean executeJobSubmission(ProcessContext processContext) throws GFacE\n \t\tGFacUtils.saveAndPublishTaskStatus(taskCtx);\n \t\ttaskStatus = executeTask(taskCtx, jobSubmissionTask, false);\n \t\tif (taskStatus.getState() == TaskState.FAILED) {\n+            log.error(\"expId: {}, processId: {}, taskId: {} type: {},:- Job submission task failed, \" +\n+                    \"reason:\" + \" {}\", taskCtx.getParentProcessContext().getExperimentId(), taskCtx\n+                    .getParentProcessContext().getProcessId(), taskCtx.getTaskId(), jobSubmissionTask.getType\n+                    ().name(), taskStatus.getReason());\n+            String errorMsg = \"expId: {}, processId: {}, taskId: {} type: {},:- Job submission task failed, \" +\n+                    \"reason:\" + \" {}\" + processContext.getExperimentId() + processContext.getProcessId() + taskCtx.getTaskId() + jobSubmissionTask.getType().name() + taskStatus.getReason();\n+            ErrorModel errorModel = new ErrorModel();\n+            errorModel.setUserFriendlyMessage(\"Job submission task failed\");\n+            errorModel.setActualErrorMessage(errorMsg);\n+            GFacUtils.saveTaskError(taskCtx, errorModel);\n+            ProcessStatus processStatus = processContext.getProcessStatus();\n+            processStatus.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n+            processStatus.setReason(errorMsg);\n+            processContext.setProcessStatus(processStatus);\n+            GFacUtils.saveAndPublishProcessStatus(processContext);\n \t\t\tthrow new GFacException(\"Job submission task failed\");\n \t\t}\n \t\tif (processContext.isInterrupted()) {\n@@ -246,6 +261,11 @@ private boolean inputDataStaging(ProcessContext processContext, boolean recover)\n                             errorModel.setUserFriendlyMessage(\"Error while staging input data\");\n                             errorModel.setActualErrorMessage(errorMsg);\n                             GFacUtils.saveTaskError(taskCtx, errorModel);\n+                            ProcessStatus processStatus = processContext.getProcessStatus();\n+                            processStatus.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n+                            processStatus.setReason(errorMsg);\n+                            processContext.setProcessStatus(processStatus);\n+                            GFacUtils.saveAndPublishProcessStatus(processContext);\n \t\t\t\t\t\t\tthrow new GFacException(\"Error while staging input data\");\n \t\t\t\t\t\t}\n \t\t\t\t\t\tbreak;\n@@ -287,6 +307,11 @@ private boolean configureWorkspace(ProcessContext processContext, boolean recove\n             errorModel.setUserFriendlyMessage(\"Error while environment setup\");\n             errorModel.setActualErrorMessage(errorMsg);\n             GFacUtils.saveTaskError(taskCtx, errorModel);\n+            ProcessStatus processStatus = processContext.getProcessStatus();\n+            processStatus.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n+            processStatus.setReason(errorMsg);\n+            processContext.setProcessStatus(processStatus);\n+            GFacUtils.saveAndPublishProcessStatus(processContext);\n \t\t\tthrow new GFacException(\"Error while environment setup\");\n \t\t}\n \t\tif (processContext.isInterrupted()) {\n@@ -410,7 +435,6 @@ private boolean outputDataStaging(ProcessContext processContext, boolean recover\n                         processStatus.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n                         processStatus.setReason(errorMsg);\n                         processContext.setProcessStatus(processStatus);\n-                        GFacUtils.saveAndPublishProcessStatus(processContext);\n                         GFacUtils.saveAndPublishProcessStatus(processContext);\n \t\t\t\t\t\tthrow new GFacException(\"Error while staging output data\");\n \t\t\t\t\t}\n@@ -484,8 +508,7 @@ private TaskContext getDataStagingTaskContext(ProcessContext processContext, Inp\n \t\t// create data staging sub task model\n \t\tDataStagingTaskModel submodel = new DataStagingTaskModel();\n \t\tsubmodel.setSource(processInput.getValue());\n-\t\tsubmodel.setDestination(processContext.getDataMovementProtocol().name() + \":\" + processContext.getWorkingDir\n-\t\t\t\t());\n+\t\tsubmodel.setDestination(processContext.getDataMovementProtocol().name() + \":\" + processContext.getWorkingDir());\n \t\ttaskModel.setSubTaskModel(ThriftUtils.serializeThriftObject(submodel));\n \t\ttaskCtx.setTaskModel(taskModel);\n         taskCtx.setProcessInput(processInput);"
            },
            {
                "sha": "364045595b203231955cabd463ace470247df56d",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/3d0dd11defc3f069b48e712c76ba5edfafb4005e/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "raw_url": "https://github.com/apache/airavata/raw/3d0dd11defc3f069b48e712c76ba5edfafb4005e/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java?ref=3d0dd11defc3f069b48e712c76ba5edfafb4005e",
                "patch": "@@ -88,7 +88,7 @@ public TaskStatus execute(TaskContext taskContext) {\n         DataStagingTaskModel subTaskModel = null;\n \n \t\tOutputDataObjectType processOutput = taskContext.getProcessOutput();\n-\t\tif (processOutput.getValue() == null) {\n+\t\tif (processOutput != null && processOutput.getValue() == null) {\n \t\t\t\tlog.error(\"expId: {}, processId:{} :- Couldn't stage file {} , file name shouldn't be null\",\n \t\t\t\t\t\ttaskContext.getExperimentId(), taskContext.getProcessId(), processOutput.getName ());\n \t\t\tstatus = new TaskStatus(TaskState.FAILED);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/fc1cffb221290d876adfc2ec6d666bbff01e7166",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/8ef27824c71ecbb467f767d964bf7fc330c67272",
        "message": "fixing NPE",
        "bug_id": "airavata_20",
        "file": [
            {
                "sha": "a8d2653c187f7444589ef21bf9fe2a29fcadf929",
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/fc1cffb221290d876adfc2ec6d666bbff01e7166/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "raw_url": "https://github.com/apache/airavata/raw/fc1cffb221290d876adfc2ec6d666bbff01e7166/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java?ref=fc1cffb221290d876adfc2ec6d666bbff01e7166",
                "patch": "@@ -58,7 +58,7 @@\n     private static final String DEFAULT_GATEWAY = \"php_reference_gateway\";\n     private static Airavata.Client airavataClient;\n \n-    private static String echoAppId = \"Echo_a3c69094-2591-47d9-b5c4-e14c9fa5abf5\";\n+    private static String echoAppId = \"Echo_f6eabb22-a7c0-4e13-90bc-7874c2d54a7d\";\n     private static String mpiAppId = \"HelloMPI_bfd56d58-6085-4b7f-89fc-646576830518\";\n     private static String wrfAppId = \"WRF_7ad5da38-c08b-417c-a9ea-da9298839762\";\n     private static String amberAppId = \"Amber_cb54b269-cf79-4276-8dbb-2ec16b759cc6\";\n@@ -168,12 +168,12 @@ public static void createAndLaunchExp() throws TException {\n //                final String expId = createMPIExperimentForFSD(airavataClient);\n //               final String expId = createEchoExperimentForStampede(airavataClient);\n //                final String expId = createEchoExperimentForTrestles(airavataClient);\n-//                final String expId = createExperimentEchoForLocalHost(airavataClient);\n+                final String expId = createExperimentEchoForLocalHost(airavataClient);\n //                final String expId = createExperimentWRFTrestles(airavataClient);\n //                final String expId = createExperimentForBR2(airavataClient);\n //                final String expId = createExperimentForBR2Amber(airavataClient);\n //                final String expId = createExperimentWRFStampede(airavataClient);\n-                final String expId = createExperimentForStampedeAmber(airavataClient);\n+//                final String expId = createExperimentForStampedeAmber(airavataClient);\n //                String expId = createExperimentForTrestlesAmber(airavataClient);\n //                final String expId = createExperimentGROMACSStampede(airavataClient);\n //                final String expId = createExperimentESPRESSOStampede(airavataClient);"
            },
            {
                "sha": "df7b84014a49ec0c83e5663fada5a8c38be6ffb8",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/fc1cffb221290d876adfc2ec6d666bbff01e7166/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/fc1cffb221290d876adfc2ec6d666bbff01e7166/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java?ref=fc1cffb221290d876adfc2ec6d666bbff01e7166",
                "patch": "@@ -964,6 +964,7 @@ public void invokeOutFlowHandlers(JobExecutionContext jobExecutionContext) throw\n                 synchronized (mutex) {\n                     mutex.wait(5000);  // waiting for the syncConnected event\n                 }\n+                experimentPath = AiravataZKUtils.getExpZnodePath(jobExecutionContext.getExperimentID());\n                 if (jobExecutionContext.getZk().exists(experimentPath, false) == null) {\n                     log.error(\"Experiment is already finalized so no output handlers will be invoked\");\n                     return;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/869a625046b74606070a140ac447fa3dfabbb4e1",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/9534a8104238ef07de5ac812911d41eb92c08de4",
        "message": "NPE check at yamlConfiguration",
        "bug_id": "airavata_21",
        "file": [
            {
                "sha": "8dafe091bff2b71760aae4410729da5628207590",
                "filename": "modules/configuration/server/src/main/resources/gfac-config.yaml",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/airavata/blob/869a625046b74606070a140ac447fa3dfabbb4e1/modules/configuration/server/src/main/resources/gfac-config.yaml",
                "raw_url": "https://github.com/apache/airavata/raw/869a625046b74606070a140ac447fa3dfabbb4e1/modules/configuration/server/src/main/resources/gfac-config.yaml",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/configuration/server/src/main/resources/gfac-config.yaml?ref=869a625046b74606070a140ac447fa3dfabbb4e1",
                "patch": "@@ -104,5 +104,4 @@ resources:\n       - iu.xsede.edu # test resource mail address\n \n   - jobManagerType: FORK\n-      commandOutputParser: org.apache.airavata.gfac.impl.job.ForkOutputParser\n-\n+    commandOutputParser: org.apache.airavata.gfac.impl.job.ForkOutputParser\n\\ No newline at end of file"
            },
            {
                "sha": "dfd396a3c06d22268edab25507356cba673d6541",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/airavata/blob/869a625046b74606070a140ac447fa3dfabbb4e1/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java",
                "raw_url": "https://github.com/apache/airavata/raw/869a625046b74606070a140ac447fa3dfabbb4e1/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java?ref=869a625046b74606070a140ac447fa3dfabbb4e1",
                "patch": "@@ -122,7 +122,10 @@ private void parse(InputStream resourceAsStream) throws GFacException {\n \t\t\t\t\tidentifier = resource.get(JOB_MANAGER_TYPE).toString();\n \t\t\t\t\tresourceConfig.setJobManagerType(ResourceJobManagerType.valueOf(identifier));\n \t\t\t\t\tresourceConfig.setCommandOutputParser(resource.get(COMMAND_OUTPUT_PARSER).toString());\n-\t\t\t\t\tresourceConfig.setEmailParser(resource.get(EMAIL_PARSER).toString());\n+                    Object emailParser = resource.get(EMAIL_PARSER);\n+                    if (emailParser != null){\n+                        resourceConfig.setEmailParser(emailParser.toString());\n+                    }\n \t\t\t\t\tList<String> emailAddressList = (List<String>) resource.get(RESOURCE_EMAIL_ADDRESS);\n \t\t\t\t\tresourceConfig.setResourceEmailAddresses(emailAddressList);\n \t\t\t\t\tresources.add(resourceConfig);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/a5ae2f29a341c988efe74192797f0a478e6c1287",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/7a0c97a9b51d92cd80dc709b14d95e4d0e2a14bb",
        "message": "Fixed NPE from output data streaming logic",
        "bug_id": "airavata_22",
        "file": [
            {
                "sha": "db6b2ab9eb5dc098b10632784c99569c7386fc4f",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/a5ae2f29a341c988efe74192797f0a478e6c1287/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/a5ae2f29a341c988efe74192797f0a478e6c1287/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java?ref=a5ae2f29a341c988efe74192797f0a478e6c1287",
                "patch": "@@ -321,7 +321,6 @@ private void executeTaskListFrom(ProcessContext processContext, String startingT\n                                         streamingTaskModel.setCreationTime(AiravataUtils.getCurrentTimestamp().getTime());\n                                         streamingTaskModel.setParentProcessId(processContext.getProcessId());\n                                         TaskContext streamingTaskContext = getTaskContext(processContext);\n-                                        streamingTaskContext.setTaskStatus(new TaskStatus(TaskState.CREATED));\n                                         DataStagingTaskModel submodel = new DataStagingTaskModel();\n                                         submodel.setType(DataStageType.OUPUT);\n                                         submodel.setProcessOutput(output);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/2527fe8a0b889a9d348a612f753495c45343f1b6",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/1fba5f95c369744b63f9e3fbbae4b3669b088b0e",
        "message": "fixing NPE at recover",
        "bug_id": "airavata_23",
        "file": [
            {
                "sha": "efd200553d80e5d0ab60c0e6408a8928e3436586",
                "filename": "modules/gfac/airavata-gfac-service/src/main/java/org/apache/airavata/gfac/server/GfacServerHandler.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/airavata/blob/2527fe8a0b889a9d348a612f753495c45343f1b6/modules/gfac/airavata-gfac-service/src/main/java/org/apache/airavata/gfac/server/GfacServerHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/2527fe8a0b889a9d348a612f753495c45343f1b6/modules/gfac/airavata-gfac-service/src/main/java/org/apache/airavata/gfac/server/GfacServerHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/airavata-gfac-service/src/main/java/org/apache/airavata/gfac/server/GfacServerHandler.java?ref=2527fe8a0b889a9d348a612f753495c45343f1b6",
                "patch": "@@ -301,7 +301,10 @@ protected void setGatewayProperties() throws ApplicationSettingsException {\n \n     private GFac getGfac() throws TException {\n         try {\n-            return new BetterGfacImpl(registry, appCatalog, new ZooKeeper(AiravataZKUtils.getZKhostPort(), AiravataZKUtils.getZKTimeout(), this), publisher);\n+            if (zk == null || !zk.getState().isConnected()) {\n+                zk = new ZooKeeper(AiravataZKUtils.getZKhostPort(), AiravataZKUtils.getZKTimeout(), this);\n+            }\n+            return new BetterGfacImpl(registry, appCatalog, zk, publisher);\n         } catch (Exception e) {\n             throw new TException(\"Error initializing gfac instance\", e);\n         }"
            },
            {
                "sha": "30889b83008ce687ca12a4b92596c8da0cc6649f",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "status": "modified",
                "additions": 9,
                "deletions": 2,
                "changes": 11,
                "blob_url": "https://github.com/apache/airavata/blob/2527fe8a0b889a9d348a612f753495c45343f1b6/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/2527fe8a0b889a9d348a612f753495c45343f1b6/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java?ref=2527fe8a0b889a9d348a612f753495c45343f1b6",
                "patch": "@@ -959,7 +959,10 @@ private void invokeInFlowHandlers(JobExecutionContext jobExecutionContext) throw\n \n     public void invokeOutFlowHandlers(JobExecutionContext jobExecutionContext) throws GFacException {\n         try {\n-            jobExecutionContext.setZk(new ZooKeeper(AiravataZKUtils.getZKhostPort(), AiravataZKUtils.getZKTimeout(),this));\n+            if (zk == null || !zk.getState().isConnected()){\n+                zk = new ZooKeeper(AiravataZKUtils.getZKhostPort(), AiravataZKUtils.getZKTimeout(),this);\n+            }\n+            jobExecutionContext.setZk(zk);\n             synchronized (mutex) {\n                 mutex.wait();  // waiting for the syncConnected event\n             }\n@@ -1086,6 +1089,7 @@ private void reInvokeInFlowHandlers(JobExecutionContext jobExecutionContext) thr\n                             // if these already ran we re-run only recoverable handlers\n                             log.info(handlerClassName.getClassName() + \" is a recoverable handler so we recover the handler\");\n                             GFacUtils.createPluginZnode(zk, jobExecutionContext, handlerClassName.getClassName(), GfacPluginState.INVOKING);\n+                            handler.initProperties(handlerClassName.getProperties());\n                             ((GFacRecoverableHandler) handler).recover(jobExecutionContext);\n                             GFacUtils.updatePluginState(zk, jobExecutionContext, handlerClassName.getClassName(), GfacPluginState.COMPLETED);\n                         } else {\n@@ -1124,7 +1128,10 @@ private void reInvokeInFlowHandlers(JobExecutionContext jobExecutionContext) thr\n \n     public void reInvokeOutFlowHandlers(JobExecutionContext jobExecutionContext) throws GFacException {\n         try {\n-            jobExecutionContext.setZk(new ZooKeeper(AiravataZKUtils.getZKhostPort(), AiravataZKUtils.getZKTimeout(),this));\n+            if (zk == null || !zk.getState().isConnected()){\n+                zk = new ZooKeeper(AiravataZKUtils.getZKhostPort(), AiravataZKUtils.getZKTimeout(),this);\n+            }\n+            jobExecutionContext.setZk(zk);\n \n         } catch (IOException e) {\n             log.error(e.getMessage(), e);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/831dbdce4a9f4874fe0198d72013f6251adbbb47",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/c36ab24191a5e1d549a745c7456a056e889bd156",
        "message": "fixing NPE",
        "bug_id": "airavata_24",
        "file": [
            {
                "sha": "00d271d41021460a683b9becea05b00ef6f4cf98",
                "filename": "modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogThriftConversion.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/831dbdce4a9f4874fe0198d72013f6251adbbb47/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogThriftConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/831dbdce4a9f4874fe0198d72013f6251adbbb47/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogThriftConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogThriftConversion.java?ref=831dbdce4a9f4874fe0198d72013f6251adbbb47",
                "patch": "@@ -670,8 +670,12 @@ public static ComputeResourcePreference getComputeResourcePreference (ComputeHos\n         ComputeResourcePreference preference = new ComputeResourcePreference();\n         preference.setComputeResourceId(resource.getResourceId());\n         preference.setOverridebyAiravata(resource.getOverrideByAiravata());\n-        preference.setPreferredJobSubmissionProtocol(JobSubmissionProtocol.valueOf(resource.getPreferredJobProtocol()));\n-        preference.setPreferredDataMovementProtocol(DataMovementProtocol.valueOf(resource.getPreferedDMProtocol()));\n+        if (resource.getPreferredJobProtocol() != null){\n+            preference.setPreferredJobSubmissionProtocol(JobSubmissionProtocol.valueOf(resource.getPreferredJobProtocol()));\n+        }\n+        if (resource.getPreferedDMProtocol() != null){\n+            preference.setPreferredDataMovementProtocol(DataMovementProtocol.valueOf(resource.getPreferedDMProtocol()));\n+        }\n         preference.setPreferredBatchQueue(resource.getBatchQueue());\n         preference.setScratchLocation(resource.getScratchLocation());\n         preference.setAllocationProjectNumber(resource.getProjectNumber());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/38bc592927b2fbee8c36ec9dbed800235fdd0c11",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/d8176e813b6cf7bb0fe5ec118f502781c4615ff9",
        "message": "fixing NPE",
        "bug_id": "airavata_25",
        "file": [
            {
                "sha": "827c560417d8596da5de51b81ff0e77c7d148aa0",
                "filename": "modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/impl/GwyResourceProfileImpl.java",
                "status": "modified",
                "additions": 15,
                "deletions": 4,
                "changes": 19,
                "blob_url": "https://github.com/apache/airavata/blob/38bc592927b2fbee8c36ec9dbed800235fdd0c11/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/impl/GwyResourceProfileImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/38bc592927b2fbee8c36ec9dbed800235fdd0c11/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/impl/GwyResourceProfileImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/impl/GwyResourceProfileImpl.java?ref=38bc592927b2fbee8c36ec9dbed800235fdd0c11",
                "patch": "@@ -66,8 +66,14 @@ public String addGatewayResourceProfile(org.apache.airavata.model.appcatalog.gat\n                     resource.setComputeHostResource((ComputeResourceResource)computeHostResource.get(preference.getComputeResourceId()));\n                     resource.setGatewayId(profileResource.getGatewayID());\n                     resource.setOverrideByAiravata(preference.isOverridebyAiravata());\n-                    resource.setPreferredJobProtocol(preference.getPreferredJobSubmissionProtocol().toString());\n-                    resource.setPreferedDMProtocol(preference.getPreferredDataMovementProtocol().toString());\n+                    if (preference.getPreferredJobSubmissionProtocol() != null){\n+                        resource.setPreferredJobProtocol(preference.getPreferredJobSubmissionProtocol().toString());\n+                    }\n+\n+                    if (preference.getPreferredDataMovementProtocol() != null){\n+                        resource.setPreferedDMProtocol(preference.getPreferredDataMovementProtocol().toString());\n+                    }\n+\n                     resource.setBatchQueue(preference.getPreferredBatchQueue());\n                     resource.setProjectNumber(preference.getAllocationProjectNumber());\n                     resource.setScratchLocation(preference.getScratchLocation());\n@@ -100,8 +106,13 @@ public void updateGatewayResourceProfile(String gatewayId, org.apache.airavata.m\n                     resource.setComputeHostResource((ComputeResourceResource)computeHostResource.get(preference.getComputeResourceId()));\n                     resource.setGatewayId(gatewayId);\n                     resource.setOverrideByAiravata(preference.isOverridebyAiravata());\n-                    resource.setPreferredJobProtocol(preference.getPreferredJobSubmissionProtocol().toString());\n-                    resource.setPreferedDMProtocol(preference.getPreferredDataMovementProtocol().toString());\n+                    if (preference.getPreferredJobSubmissionProtocol() != null){\n+                        resource.setPreferredJobProtocol(preference.getPreferredJobSubmissionProtocol().toString());\n+                    }\n+\n+                    if (preference.getPreferredDataMovementProtocol() != null){\n+                        resource.setPreferedDMProtocol(preference.getPreferredDataMovementProtocol().toString());\n+                    }\n                     resource.setBatchQueue(preference.getPreferredBatchQueue());\n                     resource.setProjectNumber(preference.getAllocationProjectNumber());\n                     resource.setScratchLocation(preference.getScratchLocation());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/fbc558ddc4ecce57833fdaff9062f264a631e2ad",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/766433652a3c968917b3200e8fd248e9e6a65280",
        "message": "fixing NPE s in job status method",
        "bug_id": "airavata_26",
        "file": [
            {
                "sha": "40d0758b71c7f381ccdde7d377bbcedf6c4d2fdc",
                "filename": "airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/apache/airavata/blob/fbc558ddc4ecce57833fdaff9062f264a631e2ad/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/fbc558ddc4ecce57833fdaff9062f264a631e2ad/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java?ref=fbc558ddc4ecce57833fdaff9062f264a631e2ad",
                "patch": "@@ -1637,9 +1637,15 @@ private ExperimentStatus getExperimentStatusInternal(String airavataExperimentId\n                       for (TaskModel task : tasks){\n                           String taskId =  task.getTaskId();\n                           List<Object> jobs = experimentCatalog.get(ExperimentCatalogModelType.JOB, Constants.FieldConstants.JobConstants.TASK_ID, taskId);\n-                          for (Object jobObject : jobs) {\n-                              String jobID = ((JobModel)jobObject).getJobId();\n-                              jobStatus.put(jobID, ((JobModel)jobObject).getJobStatus());\n+                          if (jobs != null && !jobs.isEmpty()){\n+                              for (Object jobObject : jobs) {\n+                                  JobModel jobModel = (JobModel) jobObject;\n+                                  String jobID = jobModel.getJobId();\n+                                  JobStatus status = jobModel.getJobStatus();\n+                                  if (status != null){\n+                                      jobStatus.put(jobID, status);\n+                                  }\n+                              }\n                           }\n                       }\n                     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/c4c03f3fb917e2833a1f8c54287c019d278ecc39",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/e060b47e8ec25771b338646c0df0c36d38565246",
        "message": "Fixed NPE from configuration loading",
        "bug_id": "airavata_27",
        "file": [
            {
                "sha": "5dbad8746703fd9f47974fa9c7288e28583b1428",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java",
                "status": "modified",
                "additions": 31,
                "deletions": 26,
                "changes": 57,
                "blob_url": "https://github.com/apache/airavata/blob/c4c03f3fb917e2833a1f8c54287c019d278ecc39/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java",
                "raw_url": "https://github.com/apache/airavata/raw/c4c03f3fb917e2833a1f8c54287c019d278ecc39/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/config/GFacYamlConfigruation.java?ref=c4c03f3fb917e2833a1f8c54287c019d278ecc39",
                "patch": "@@ -27,6 +27,7 @@\n import org.yaml.snakeyaml.Yaml;\n \n import java.io.InputStream;\n+import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n \n@@ -46,9 +47,9 @@\n \tprivate static final String EMAIL_PARSER = \"emailParser\";\n \tprivate static final String RESOURCE_EMAIL_ADDRESS = \"resourceEmailAddress\";\n \n-\tprivate List<JobSubmitterTaskConfig> jobSubmitters;\n-\tprivate List<DataTransferTaskConfig> fileTransferTasks;\n-\tprivate List<ResourceConfig> resources;\n+\tprivate List<JobSubmitterTaskConfig> jobSubmitters = new ArrayList<>();\n+\tprivate List<DataTransferTaskConfig> fileTransferTasks = new ArrayList<>();\n+\tprivate List<ResourceConfig> resources = new ArrayList<>();\n \n \n \tpublic GFacYamlConfigruation() throws GFacException {\n@@ -72,39 +73,43 @@ private void parse(InputStream resourceAsStream) throws GFacException {\n \t\t\tString identifier;\n \t\t\tList<Map<String, String>> jobSubYamls = (List<Map<String, String>>) loadMap.get(JOB_SUBMITTERS);\n \t\t\tJobSubmitterTaskConfig jobSubmitterTaskConfig;\n-\t\t\tfor (Map<String, String> jobSub : jobSubYamls) {\n-\t\t\t\tjobSubmitterTaskConfig = new JobSubmitterTaskConfig();\n-\t\t\t\tidentifier = jobSub.get (SUBMISSIO_PROTOCOL);\n-\t\t\t\tjobSubmitterTaskConfig.setSubmissionProtocol(JobSubmissionProtocol.valueOf(identifier));\n-\t\t\t\tjobSubmitterTaskConfig.setTaskClass(jobSub.get(TASK_CLASS));\n-\t\t\t\tjobSubmitters.add(jobSubmitterTaskConfig);\n+\t\t\tif (jobSubYamls != null) {\n+\t\t\t\tfor (Map<String, String> jobSub : jobSubYamls) {\n+\t\t\t\t\tjobSubmitterTaskConfig = new JobSubmitterTaskConfig();\n+\t\t\t\t\tidentifier = jobSub.get (SUBMISSIO_PROTOCOL);\n+\t\t\t\t\tjobSubmitterTaskConfig.setSubmissionProtocol(JobSubmissionProtocol.valueOf(identifier));\n+\t\t\t\t\tjobSubmitterTaskConfig.setTaskClass(jobSub.get(TASK_CLASS));\n+\t\t\t\t\tjobSubmitters.add(jobSubmitterTaskConfig);\n+\t\t\t\t}\n \t\t\t}\n \n \t\t\tList<Map<String, String>> fileTransYamls = (List<Map<String, String>>) loadMap.get(FILE_TRANSFER_TASKS);\n \t\t\tDataTransferTaskConfig dataTransferTaskConfig;\n-\t\t\tfor (Map<String, String> fileTransConfig : fileTransYamls) {\n-\t\t\t\tdataTransferTaskConfig = new DataTransferTaskConfig();\n-\t\t\t\tidentifier = fileTransConfig.get (TRANSFER_PROTOCOL);\n-\t\t\t\tdataTransferTaskConfig.setTransferProtocol(DataMovementProtocol.valueOf(identifier));\n-\t\t\t\tdataTransferTaskConfig.setTaskClass(fileTransConfig.get(TASK_CLASS));\n-\t\t\t\tfileTransferTasks.add(dataTransferTaskConfig);\n+\t\t\tif (fileTransYamls != null) {\n+\t\t\t\tfor (Map<String, String> fileTransConfig : fileTransYamls) {\n+\t\t\t\t\tdataTransferTaskConfig = new DataTransferTaskConfig();\n+\t\t\t\t\tidentifier = fileTransConfig.get (TRANSFER_PROTOCOL);\n+\t\t\t\t\tdataTransferTaskConfig.setTransferProtocol(DataMovementProtocol.valueOf(identifier));\n+\t\t\t\t\tdataTransferTaskConfig.setTaskClass(fileTransConfig.get(TASK_CLASS));\n+\t\t\t\t\tfileTransferTasks.add(dataTransferTaskConfig);\n+\t\t\t\t}\n \t\t\t}\n \n \t\t\tList<Map<String, Object>> resourcesYaml = (List<Map<String, Object>>) loadMap.get(RESOURCES);\n \t\t\tResourceConfig resourceConfig;\n-\t\t\tfor (Map<String, Object> resource : resourcesYaml) {\n-\t\t\t\tresourceConfig = new ResourceConfig();\n-\t\t\t\tidentifier = resource.get(JOB_MANAGER_TYPE).toString();\n-\t\t\t\tresourceConfig.setJobManagerType(ResourceJobManagerType.valueOf(identifier));\n-\t\t\t\tresourceConfig.setCommandOutputParser(resource.get(COMMAND_OUTPUT_PARSER).toString());\n-\t\t\t\tresourceConfig.setEmailParser(resource.get(EMAIL_PARSER).toString());\n-\t\t\t\tList<String> emailAddressList = (List<String>) resource.get(RESOURCE_EMAIL_ADDRESS);\n-\t\t\t\tresourceConfig.setResourceEmailAddresses(emailAddressList);\n-\t\t\t\tresources.add(resourceConfig);\n+\t\t\tif (resourcesYaml != null) {\n+\t\t\t\tfor (Map<String, Object> resource : resourcesYaml) {\n+\t\t\t\t\tresourceConfig = new ResourceConfig();\n+\t\t\t\t\tidentifier = resource.get(JOB_MANAGER_TYPE).toString();\n+\t\t\t\t\tresourceConfig.setJobManagerType(ResourceJobManagerType.valueOf(identifier));\n+\t\t\t\t\tresourceConfig.setCommandOutputParser(resource.get(COMMAND_OUTPUT_PARSER).toString());\n+\t\t\t\t\tresourceConfig.setEmailParser(resource.get(EMAIL_PARSER).toString());\n+\t\t\t\t\tList<String> emailAddressList = (List<String>) resource.get(RESOURCE_EMAIL_ADDRESS);\n+\t\t\t\t\tresourceConfig.setResourceEmailAddresses(emailAddressList);\n+\t\t\t\t\tresources.add(resourceConfig);\n+\t\t\t\t}\n \t\t\t}\n-\n \t\t}\n-\n \t}\n \n \tpublic List<JobSubmitterTaskConfig> getJobSbumitters() {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/1bc3ce8b7010395648d27227a5d1a0756e85c434",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/b5b522ba4fd07456863538dda35d4e7ce5bf50a2",
        "message": "Fixing NPEs at registry level",
        "bug_id": "airavata_28",
        "file": [
            {
                "sha": "413fbe5bd1d55fa19daa9aa4bfbe446c0a9a0f86",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java",
                "status": "modified",
                "additions": 17,
                "deletions": 13,
                "changes": 30,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/impl/ExperimentRegistry.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "patch": "@@ -242,9 +242,12 @@ public String addExperimentError(ErrorModel experimentError, String expId) throw\n     }\n \n     public String addProcess(ProcessModel process, String expId) throws RegistryException {\n+\n         try {\n             ProcessResource processResource = new ProcessResource();\n-            processResource.setProcessId(getProcessID(expId));\n+            String processId = getProcessID(expId);\n+            process.setProcessId(processId);\n+            processResource.setProcessId(processId);\n             processResource.setExperimentId(expId);\n             processResource.setCreationTime(AiravataUtils.getTime(process.getCreationTime()));\n             processResource.setLastUpdateTime(AiravataUtils.getTime(process.getLastUpdateTime()));\n@@ -286,7 +289,7 @@ public String addProcess(ProcessModel process, String expId) throws RegistryExce\n             logger.error(expId, \"Error while adding process...\", e);\n             throw new RegistryException(e);\n         }\n-        return expId;\n+        return process.getProcessId();\n     }\n \n \n@@ -364,17 +367,18 @@ public String addProcessStatus(ProcessStatus processStatus, String processID) th\n             processResource.setProcessId(processID);\n             ProcessStatusResource status = processResource.getProcessStatus();\n             if (status == null) {\n-                status = (ProcessStatusResource) processResource.create(ResourceType.EXPERIMENT_STATUS);\n-            }\n-            if (isValidStatusTransition(ProcessState.valueOf(status.getState()), processStatus.getState())) {\n-                status.setStatusId(getStatusID(processID));\n-                status.setProcessId(processID);\n-                status.setTimeOfStateChange(AiravataUtils.getTime(processStatus.getTimeOfStateChange()));\n-                status.setState(processStatus.getState().toString());\n-                status.setReason(processStatus.getReason());\n-                status.save();\n-                logger.debug(processID, \"Added process {} status to {}.\", processID, processStatus.toString());\n-            }\n+                status = (ProcessStatusResource) processResource.create(ResourceType.PROCESS_STATUS);\n+            }\n+            status.setStatusId(getStatusID(processID));\n+            status.setProcessId(processID);\n+            status.setTimeOfStateChange(AiravataUtils.getTime(processStatus.getTimeOfStateChange()));\n+            ProcessState state = processStatus.getState();\n+            if (state != null){\n+                status.setState(state.toString());\n+            }\n+            status.setReason(processStatus.getReason());\n+            status.save();\n+            logger.debug(processID, \"Added process {} status to {}.\", processID, processStatus.toString());\n         } catch (Exception e) {\n             logger.error(processID, \"Error while adding process status...\", e);\n             throw new RegistryException(e);"
            },
            {
                "sha": "8df4ac25cce96cc3f2614c791ca65414934e21e3",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/AbstractExpCatResource.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "patch": "@@ -105,7 +105,7 @@\n \t// Task table\n     public final class TaskConstants {\n         public static final String TASK_ID = \"taskId\";\n-        public static final String PROCESS_ID = \"processId\";\n+        public static final String PROCESS_ID = \"parentProcessId\";\n     }\n \n     // Task Error table"
            },
            {
                "sha": "c32a636064d27c7e310b66c1e9ddc47ec63e67c9",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "patch": "@@ -21,6 +21,7 @@\n \n package org.apache.airavata.registry.core.experiment.catalog.resources;\n \n+import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExpCatResourceUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExperimentCatResource;\n import org.apache.airavata.registry.core.experiment.catalog.ResourceType;\n@@ -506,8 +507,11 @@ public ExperimentStatusResource getExperimentStatus() throws RegistryException{\n         }else{\n             ExperimentStatusResource max = experimentStatusResources.get(0);\n             for(int i=1; i<experimentStatusResources.size();i++){\n-                if(experimentStatusResources.get(i).getTimeOfStateChange().after(max.getTimeOfStateChange())){\n-                    max = experimentStatusResources.get(i);\n+                Timestamp timeOfStateChange = experimentStatusResources.get(i).getTimeOfStateChange();\n+                if (timeOfStateChange != null){\n+                    if(timeOfStateChange.after(max.getTimeOfStateChange())){\n+                        max = experimentStatusResources.get(i);\n+                    }\n                 }\n             }\n             return max;"
            },
            {
                "sha": "5a95f97945b80cc04606163402dd35a93812e828",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "patch": "@@ -21,6 +21,7 @@\n \n package org.apache.airavata.registry.core.experiment.catalog.resources;\n \n+import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExpCatResourceUtils;\n import org.apache.airavata.registry.core.experiment.catalog.ExperimentCatResource;\n import org.apache.airavata.registry.core.experiment.catalog.ResourceType;\n@@ -448,10 +449,10 @@ public void save() throws RegistryException{\n             process.setCreationTime(creationTime);\n             process.setLastUpdateTime(lastUpdateTime);\n             process.setProcessDetail(processDetail);\n-            process.setApplicationInterfaceId(applicationInterfaceId);\n             process.setTaskDag(taskDag);\n             process.setComputeResourceId(computeResourceId);\n             process.setApplicationInterfaceId(applicationInterfaceId);\n+            process.setApplicationDeploymentId(applicationDeploymentId);\n             process.setGatewayExecutionId(gatewayExecutionId);\n             process.setEnableEmailNotification(enableEmailNotification);\n             process.setEmailAddresses(emailAddresses);\n@@ -507,8 +508,11 @@ public ProcessStatusResource getProcessStatus() throws RegistryException{\n         }else{\n             ProcessStatusResource max = processStatusResources.get(0);\n             for(int i=1; i<processStatusResources.size();i++){\n-                if(processStatusResources.get(i).getTimeOfStateChange().after(max.getTimeOfStateChange())){\n-                    max = processStatusResources.get(i);\n+                Timestamp timeOfStateChange = processStatusResources.get(i).getTimeOfStateChange();\n+                if (timeOfStateChange != null){\n+                    if(timeOfStateChange.after(max.getTimeOfStateChange())){\n+                        max = processStatusResources.get(i);\n+                    }\n                 }\n             }\n             return max;"
            },
            {
                "sha": "e3e6a5fd85ec63cc6966ce5ea6436597f0df445a",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/1bc3ce8b7010395648d27227a5d1a0756e85c434/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java?ref=1bc3ce8b7010395648d27227a5d1a0756e85c434",
                "patch": "@@ -119,6 +119,7 @@ public static ExperimentModel getExperiment(ExperimentResource experimentResourc\n             experiment.setCreationTime(experimentResource.getCreationTime().getTime());\n             experiment.setUserName(experimentResource.getUserName());\n             experiment.setExperimentName(experimentResource.getExperimentName());\n+            experiment.setExecutionId(experimentResource.getExecutionId());\n             experiment.setDescription(experimentResource.getDescription());\n             experiment.setEnableEmailNotification(experimentResource.getEnableEmailNotification());\n             experiment.setGatewayExecutionId(experimentResource.getGatewayExecutionId());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/82e60f39cdffd691a4a4afb7752ba870a0034a6d",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/cc792369ecd4c7b3d1a572127ed470dbaed5fe81",
        "message": "fixing NPEs at registry level",
        "bug_id": "airavata_29",
        "file": [
            {
                "sha": "5b84c6ebd149c69a937abe05a34cc23ca94db601",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentError.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -36,7 +36,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n     private Experiment experiment;\n \n@@ -94,11 +94,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n \n     @Basic\n     @Column(name = \"TRANSIENT_OR_PERSISTENT\")\n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n "
            },
            {
                "sha": "ffb6713018553f84f6d685440c7ca3133bd5773a",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java",
                "status": "modified",
                "additions": 12,
                "deletions": 12,
                "changes": 24,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentInput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -35,13 +35,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput;\n+    private boolean standardInput;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataStaged;\n     private Experiment experiment;\n \n     @Id\n@@ -97,11 +97,11 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"STANDARD_INPUT\")\n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -137,31 +137,31 @@ public void setInputOrder(Integer inputOrder) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_STAGED\")\n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n "
            },
            {
                "sha": "bd8b28886040dd0822703d647606aff8438ab103",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ExperimentOutput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -35,9 +35,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n     private Experiment experiment;\n@@ -95,31 +95,31 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_MOVEMENT\")\n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n "
            },
            {
                "sha": "c96c335d01fd38ef238a070b007683260f27a7db",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/Process.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -41,7 +41,7 @@\n     private String applicationDeploymentId;\n     private String computeResourceId;\n     private String gatewayExecutionId;\n-    private Boolean enableEmailNotification;\n+    private boolean enableEmailNotification;\n     private String emailAddresses;\n     private Experiment experiment;\n     private Collection<ProcessError> processErrors;\n@@ -155,11 +155,11 @@ public void setGatewayExecutionId(String gatewayExecutionId) {\n \n     @Basic\n     @Column(name = \"ENABLE_EMAIL_NOTIFICATION\")\n-    public Boolean getEnableEmailNotification() {\n+    public boolean getEnableEmailNotification() {\n         return enableEmailNotification;\n     }\n \n-    public void setEnableEmailNotification(Boolean enableEmailNotification) {\n+    public void setEnableEmailNotification(boolean enableEmailNotification) {\n         this.enableEmailNotification = enableEmailNotification;\n     }\n "
            },
            {
                "sha": "63fbdb297b8f87f4c09c708578c7579d694af518",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessError.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -37,7 +37,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n     private Process process;\n \n@@ -95,11 +95,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n \n     @Basic\n     @Column(name = \"TRANSIENT_OR_PERSISTENT\")\n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n "
            },
            {
                "sha": "57721c1cbda57dfa76f623163d898ea691291cd6",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java",
                "status": "modified",
                "additions": 12,
                "deletions": 12,
                "changes": 24,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessInput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -36,13 +36,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput;\n+    private boolean standardInput;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataStaged;\n     private Process process;\n \n     @Id\n@@ -98,11 +98,11 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"STANDARD_INPUT\")\n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -138,31 +138,31 @@ public void setInputOrder(Integer inputOrder) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_STAGED\")\n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n "
            },
            {
                "sha": "7c1738c50352e4a56bbc7953b7a8637d94e12840",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/ProcessOutput.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -36,9 +36,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n     private Process process;\n@@ -96,31 +96,31 @@ public void setApplicationArgument(String applicationArgument) {\n \n     @Basic\n     @Column(name = \"IS_REQUIRED\")\n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n     @Basic\n     @Column(name = \"REQUIRED_TO_ADDED_TO_CMD\")\n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n     @Basic\n     @Column(name = \"DATA_MOVEMENT\")\n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n "
            },
            {
                "sha": "281b9f378c5489a656fb6d7277d6c365f398284d",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/TaskError.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -36,7 +36,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n     private Task task;\n \n@@ -94,11 +94,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n \n     @Basic\n     @Column(name = \"TRANSIENT_OR_PERSISTENT\")\n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n "
            },
            {
                "sha": "8039ce122364d312f59857a6560b0fd09e9cbe64",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java",
                "status": "modified",
                "additions": 15,
                "deletions": 15,
                "changes": 30,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/model/UserConfigurationData.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -30,12 +30,12 @@\n public class UserConfigurationData {\n     private final static Logger logger = LoggerFactory.getLogger(UserConfigurationData.class);\n     private String experimentId;\n-    private Boolean airavataAutoSchedule;\n-    private Boolean overrideManualScheduledParams;\n-    private Boolean shareExperimentPublically;\n-    private Boolean throttleResources;\n+    private boolean airavataAutoSchedule;\n+    private boolean overrideManualScheduledParams;\n+    private boolean shareExperimentPublically;\n+    private boolean throttleResources;\n     private String userDn;\n-    private Boolean generateCert;\n+    private boolean generateCert;\n     private String resourceHostId;\n     private Integer totalCpuCount;\n     private Integer nodeCount;\n@@ -57,41 +57,41 @@ public void setExperimentId(String experimentId) {\n \n     @Basic\n     @Column(name = \"AIRAVATA_AUTO_SCHEDULE\")\n-    public Boolean getAiravataAutoSchedule() {\n+    public boolean getAiravataAutoSchedule() {\n         return airavataAutoSchedule;\n     }\n \n-    public void setAiravataAutoSchedule(Boolean airavataAutoSchedule) {\n+    public void setAiravataAutoSchedule(boolean airavataAutoSchedule) {\n         this.airavataAutoSchedule = airavataAutoSchedule;\n     }\n \n     @Basic\n     @Column(name = \"OVERRIDE_MANUAL_SCHEDULED_PARAMS\")\n-    public Boolean getOverrideManualScheduledParams() {\n+    public boolean getOverrideManualScheduledParams() {\n         return overrideManualScheduledParams;\n     }\n \n-    public void setOverrideManualScheduledParams(Boolean overrideManualScheduledParams) {\n+    public void setOverrideManualScheduledParams(boolean overrideManualScheduledParams) {\n         this.overrideManualScheduledParams = overrideManualScheduledParams;\n     }\n \n     @Basic\n     @Column(name = \"SHARE_EXPERIMENT_PUBLICALLY\")\n-    public Boolean getShareExperimentPublically() {\n+    public boolean getShareExperimentPublically() {\n         return shareExperimentPublically;\n     }\n \n-    public void setShareExperimentPublically(Boolean shareExperimentPublically) {\n+    public void setShareExperimentPublically(boolean shareExperimentPublically) {\n         this.shareExperimentPublically = shareExperimentPublically;\n     }\n \n     @Basic\n     @Column(name = \"THROTTLE_RESOURCES\")\n-    public Boolean getThrottleResources() {\n+    public boolean getThrottleResources() {\n         return throttleResources;\n     }\n \n-    public void setThrottleResources(Boolean throttleResources) {\n+    public void setThrottleResources(boolean throttleResources) {\n         this.throttleResources = throttleResources;\n     }\n \n@@ -107,11 +107,11 @@ public void setUserDn(String userDn) {\n \n     @Basic\n     @Column(name = \"GENERATE_CERT\")\n-    public Boolean getGenerateCert() {\n+    public boolean getGenerateCert() {\n         return generateCert;\n     }\n \n-    public void setGenerateCert(Boolean generateCert) {\n+    public void setGenerateCert(boolean generateCert) {\n         this.generateCert = generateCert;\n     }\n "
            },
            {
                "sha": "6a049d33ffdc2d0d0eeff449619f93f954c3a715",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentErrorResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -41,7 +41,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n \n     public String getErrorId() {\n@@ -84,11 +84,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n         this.userFriendlyMessage = userFriendlyMessage;\n     }\n \n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n "
            },
            {
                "sha": "56e3128e181574c0cfde51520fd5a1bf3a75622e",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java",
                "status": "modified",
                "additions": 12,
                "deletions": 12,
                "changes": 24,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentInputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -40,13 +40,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput = false;\n+    private boolean standardInput = false;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged = false;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataStaged = false;\n \n     public String getExperimentId() {\n         return experimentId;\n@@ -88,11 +88,11 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -120,27 +120,27 @@ public void setInputOrder(Integer inputOrder) {\n         this.inputOrder = inputOrder;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n "
            },
            {
                "sha": "1d4b06c49e89e0a63ed5d7da46cc4d0c620bde60",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentOutputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -40,9 +40,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n \n@@ -86,27 +86,27 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n "
            },
            {
                "sha": "ea55bec587cb23d67d21f8aa2230a3e540059d20",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ExperimentResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -49,7 +49,7 @@\n     private String description;\n     private String executionId;\n     private String gatewayExecutionId;\n-    private Boolean enableEmailNotification;\n+    private boolean enableEmailNotification;\n     private String emailAddresses;\n \n     public String getExperimentId() {\n@@ -132,11 +132,11 @@ public void setGatewayExecutionId(String gatewayExecutionId) {\n         this.gatewayExecutionId = gatewayExecutionId;\n     }\n \n-    public Boolean getEnableEmailNotification() {\n+    public boolean getEnableEmailNotification() {\n         return enableEmailNotification;\n     }\n \n-    public void setEnableEmailNotification(Boolean enableEmailNotification) {\n+    public void setEnableEmailNotification(boolean enableEmailNotification) {\n         this.enableEmailNotification = enableEmailNotification;\n     }\n "
            },
            {
                "sha": "7f84a7402f50001687d1c2764b0fc0c245994bb0",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessErrorResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -41,7 +41,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n \n     public String getErrorId() {\n@@ -84,11 +84,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n         this.userFriendlyMessage = userFriendlyMessage;\n     }\n \n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n "
            },
            {
                "sha": "d2437a0c3ba1bfb6bac301da514fc7bb5ca66d29",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java",
                "status": "modified",
                "additions": 12,
                "deletions": 12,
                "changes": 24,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessInputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -40,13 +40,13 @@\n     private String inputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean standardInput = false;\n+    private boolean standardInput = false;\n     private String userFriendlyDescription;\n     private String metadata;\n     private Integer inputOrder;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataStaged = false;\n+    private boolean isRequired = false;\n+    private boolean requiredToAddedToCmd = false;\n+    private boolean dataStaged = false;\n \n     public String getProcessId() {\n         return processId;\n@@ -88,11 +88,11 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getStandardInput() {\n+    public boolean getStandardInput() {\n         return standardInput;\n     }\n \n-    public void setStandardInput(Boolean standardInput) {\n+    public void setStandardInput(boolean standardInput) {\n         this.standardInput = standardInput;\n     }\n \n@@ -120,27 +120,27 @@ public void setInputOrder(Integer inputOrder) {\n         this.inputOrder = inputOrder;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataStaged() {\n+    public boolean getDataStaged() {\n         return dataStaged;\n     }\n \n-    public void setDataStaged(Boolean dataStaged) {\n+    public void setDataStaged(boolean dataStaged) {\n         this.dataStaged = dataStaged;\n     }\n "
            },
            {
                "sha": "bee0ef76ca46311631879746c0810bfcce4426a1",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessOutputResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -40,9 +40,9 @@\n     private String outputValue;\n     private String dataType;\n     private String applicationArgument;\n-    private Boolean isRequired;\n-    private Boolean requiredToAddedToCmd;\n-    private Boolean dataMovement;\n+    private boolean isRequired;\n+    private boolean requiredToAddedToCmd;\n+    private boolean dataMovement;\n     private String location;\n     private String searchQuery;\n \n@@ -86,27 +86,27 @@ public void setApplicationArgument(String applicationArgument) {\n         this.applicationArgument = applicationArgument;\n     }\n \n-    public Boolean getIsRequired() {\n+    public boolean getIsRequired() {\n         return isRequired;\n     }\n \n-    public void setIsRequired(Boolean isRequired) {\n+    public void setIsRequired(boolean isRequired) {\n         this.isRequired = isRequired;\n     }\n \n-    public Boolean getRequiredToAddedToCmd() {\n+    public boolean getRequiredToAddedToCmd() {\n         return requiredToAddedToCmd;\n     }\n \n-    public void setRequiredToAddedToCmd(Boolean requiredToAddedToCmd) {\n+    public void setRequiredToAddedToCmd(boolean requiredToAddedToCmd) {\n         this.requiredToAddedToCmd = requiredToAddedToCmd;\n     }\n \n-    public Boolean getDataMovement() {\n+    public boolean getDataMovement() {\n         return dataMovement;\n     }\n \n-    public void setDataMovement(Boolean dataMovement) {\n+    public void setDataMovement(boolean dataMovement) {\n         this.dataMovement = dataMovement;\n     }\n "
            },
            {
                "sha": "cdd1cfe96c9be93ab71cee14c11f21486033f653",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/ProcessResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -49,7 +49,7 @@\n     private String applicationDeploymentId;\n     private String computeResourceId;\n     private String gatewayExecutionId;\n-    private Boolean enableEmailNotification;\n+    private boolean enableEmailNotification;\n     private String emailAddresses;\n \n     public String getProcessId() {\n@@ -132,11 +132,11 @@ public void setGatewayExecutionId(String gatewayExecutionId) {\n         this.gatewayExecutionId = gatewayExecutionId;\n     }\n \n-    public Boolean getEnableEmailNotification() {\n+    public boolean getEnableEmailNotification() {\n         return enableEmailNotification;\n     }\n \n-    public void setEnableEmailNotification(Boolean enableEmailNotification) {\n+    public void setEnableEmailNotification(boolean enableEmailNotification) {\n         this.enableEmailNotification = enableEmailNotification;\n     }\n "
            },
            {
                "sha": "1ec0c451eb2dbcf91e6213d37dfd7c0e308bacfa",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/TaskErrorResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -41,7 +41,7 @@\n     private Timestamp creationTime;\n     private String actualErrorMessage;\n     private String userFriendlyMessage;\n-    private Boolean transientOrPersistent;\n+    private boolean transientOrPersistent;\n     private String rootCauseErrorIdList;\n \n     public String getErrorId() {\n@@ -84,11 +84,11 @@ public void setUserFriendlyMessage(String userFriendlyMessage) {\n         this.userFriendlyMessage = userFriendlyMessage;\n     }\n \n-    public Boolean getTransientOrPersistent() {\n+    public boolean getTransientOrPersistent() {\n         return transientOrPersistent;\n     }\n \n-    public void setTransientOrPersistent(Boolean transientOrPersistent) {\n+    public void setTransientOrPersistent(boolean transientOrPersistent) {\n         this.transientOrPersistent = transientOrPersistent;\n     }\n "
            },
            {
                "sha": "0ee986a3f02ee06b591b8090d2aa31e5b66b9533",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java",
                "status": "modified",
                "additions": 15,
                "deletions": 15,
                "changes": 30,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/resources/UserConfigurationDataResource.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -35,12 +35,12 @@\n public class UserConfigurationDataResource extends AbstractExpCatResource {\n     private static final Logger logger = LoggerFactory.getLogger(UserConfigurationDataResource.class);\n     private String experimentId;\n-    private Boolean airavataAutoSchedule;\n-    private Boolean overrideManualScheduledParams;\n-    private Boolean shareExperimentPublically;\n-    private Boolean throttleResources;\n+    private boolean airavataAutoSchedule;\n+    private boolean overrideManualScheduledParams;\n+    private boolean shareExperimentPublically;\n+    private boolean throttleResources;\n     private String userDn;\n-    private Boolean generateCert;\n+    private boolean generateCert;\n     private String resourceHostId;\n     private Integer totalCpuCount;\n     private Integer nodeCount;\n@@ -113,35 +113,35 @@ public void setTotalPhysicalMemory(Integer totalPhysicalMemory) {\n         this.totalPhysicalMemory = totalPhysicalMemory;\n     }\n \n-    public Boolean getAiravataAutoSchedule() {\n+    public boolean getAiravataAutoSchedule() {\n         return airavataAutoSchedule;\n     }\n \n-    public void setAiravataAutoSchedule(Boolean airavataAutoSchedule) {\n+    public void setAiravataAutoSchedule(boolean airavataAutoSchedule) {\n         this.airavataAutoSchedule = airavataAutoSchedule;\n     }\n \n-    public Boolean getOverrideManualScheduledParams() {\n+    public boolean getOverrideManualScheduledParams() {\n         return overrideManualScheduledParams;\n     }\n \n-    public void setOverrideManualScheduledParams(Boolean overrideManualScheduledParams) {\n+    public void setOverrideManualScheduledParams(boolean overrideManualScheduledParams) {\n         this.overrideManualScheduledParams = overrideManualScheduledParams;\n     }\n \n-    public Boolean getShareExperimentPublically() {\n+    public boolean getShareExperimentPublically() {\n         return shareExperimentPublically;\n     }\n \n-    public void setShareExperimentPublically(Boolean shareExperimentPublically) {\n+    public void setShareExperimentPublically(boolean shareExperimentPublically) {\n         this.shareExperimentPublically = shareExperimentPublically;\n     }\n \n-    public Boolean getThrottleResources() {\n+    public boolean getThrottleResources() {\n         return throttleResources;\n     }\n \n-    public void setThrottleResources(Boolean throttleResources) {\n+    public void setThrottleResources(boolean throttleResources) {\n         this.throttleResources = throttleResources;\n     }\n \n@@ -153,11 +153,11 @@ public void setUserDn(String userDn) {\n         this.userDn = userDn;\n     }\n \n-    public Boolean getGenerateCert() {\n+    public boolean getGenerateCert() {\n         return generateCert;\n     }\n \n-    public void setGenerateCert(Boolean generateCert) {\n+    public void setGenerateCert(boolean generateCert) {\n         this.generateCert = generateCert;\n     }\n "
            },
            {
                "sha": "b0226537363f9aa46357d6be9c3c9236d4dbd6a6",
                "filename": "modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "status": "modified",
                "additions": 22,
                "deletions": 16,
                "changes": 38,
                "blob_url": "https://github.com/apache/airavata/blob/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/82e60f39cdffd691a4a4afb7752ba870a0034a6d/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/experiment/catalog/utils/ThriftDataModelConversion.java?ref=82e60f39cdffd691a4a4afb7752ba870a0034a6d",
                "patch": "@@ -21,6 +21,7 @@\n \n package org.apache.airavata.registry.core.experiment.catalog.utils;\n \n+import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.model.application.io.DataType;\n import org.apache.airavata.model.application.io.InputDataObjectType;\n import org.apache.airavata.model.application.io.OutputDataObjectType;\n@@ -42,6 +43,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.sql.Timestamp;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n@@ -273,11 +275,12 @@ public static OutputDataObjectType getOutput(Object object){\n     public static ExperimentStatus getExperimentStatus(ExperimentStatusResource status){\n         if (status != null){\n             ExperimentStatus experimentStatus = new ExperimentStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             experimentStatus.setState(ExperimentState.valueOf(status.getState()));\n-            experimentStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            experimentStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             experimentStatus.setReason(status.getReason());\n             return experimentStatus;\n         }\n@@ -287,11 +290,12 @@ public static ExperimentStatus getExperimentStatus(ExperimentStatusResource stat\n     public static ProcessStatus getProcessStatus (ProcessStatusResource status){\n         if (status != null){\n             ProcessStatus processStatus = new ProcessStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             processStatus.setState(ProcessState.valueOf(status.getState()));\n-            processStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            processStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             processStatus.setReason(status.getReason());\n             return processStatus;\n         }\n@@ -301,11 +305,12 @@ public static ProcessStatus getProcessStatus (ProcessStatusResource status){\n     public static TaskStatus getTaskStatus (TaskStatusResource status){\n         if (status != null){\n             TaskStatus taskStatus = new TaskStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             taskStatus.setState(TaskState.valueOf(status.getState()));\n-            taskStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            taskStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             taskStatus.setReason(status.getReason());\n             return taskStatus;\n         }\n@@ -315,11 +320,12 @@ public static TaskStatus getTaskStatus (TaskStatusResource status){\n     public static JobStatus getJobStatus (JobStatusResource status){\n         if (status != null){\n             JobStatus jobStatus = new JobStatus();\n-            if (status.getState() == null || status.getState().equals(\"\")){\n-                status.setState(\"UNKNOWN\");\n-            }\n             jobStatus.setJobState(JobState.valueOf(status.getState()));\n-            jobStatus.setTimeOfStateChange(status.getTimeOfStateChange().getTime());\n+            Timestamp timeOfStateChange = status.getTimeOfStateChange();\n+            if (timeOfStateChange == null){\n+                timeOfStateChange = AiravataUtils.getCurrentTimestamp();\n+            }\n+            jobStatus.setTimeOfStateChange(timeOfStateChange.getTime());\n             jobStatus.setReason(status.getReason());\n             return jobStatus;\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/30d230c44e11aa7f4c3649dc1e5bcb82695a9846",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/69ecb680123cea1f86c4b562ef7aff9c978e14e4",
        "message": "Fixed NPE from output data streaming logic",
        "bug_id": "airavata_30",
        "file": [
            {
                "sha": "96d33022a162cb653317b374adb78d25e1836de4",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/30d230c44e11aa7f4c3649dc1e5bcb82695a9846/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/30d230c44e11aa7f4c3649dc1e5bcb82695a9846/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java?ref=30d230c44e11aa7f4c3649dc1e5bcb82695a9846",
                "patch": "@@ -274,7 +274,6 @@ private void executeTaskListFrom(ProcessContext processContext, String startingT\n                                         streamingTaskModel.setCreationTime(AiravataUtils.getCurrentTimestamp().getTime());\n                                         streamingTaskModel.setParentProcessId(processContext.getProcessId());\n                                         TaskContext streamingTaskContext = getTaskContext(processContext);\n-                                        streamingTaskContext.setTaskStatus(new TaskStatus(TaskState.CREATED));\n                                         DataStagingTaskModel submodel = new DataStagingTaskModel();\n                                         submodel.setType(DataStageType.OUPUT);\n                                         submodel.setProcessOutput(output);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/f5e0f227e50212a1f239f24f28e2616e420e41d5",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/6b4960809334c745b76d6af16787c035e9e3f096",
        "message": "Trying to fix for the NPE with scratch location",
        "bug_id": "airavata_31",
        "file": [
            {
                "sha": "9e1cbe56d585cdb805aba2da7c4aacf2fb34543f",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/f5e0f227e50212a1f239f24f28e2616e420e41d5/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "raw_url": "https://github.com/apache/airavata/raw/f5e0f227e50212a1f239f24f28e2616e420e41d5/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/Factory.java?ref=f5e0f227e50212a1f239f24f28e2616e420e41d5",
                "patch": "@@ -319,7 +319,7 @@ public static String  getLoginUserName(ProcessContext processContext) throws GFa\n             ProcessModel processModel = processContext.getProcessModel();\n             String loginUserName = null;\n             String overrideLoginUserName = processModel.getResourceSchedule().getOverrideLoginUserName();\n-            if (overrideLoginUserName != null || !overrideLoginUserName.equals(\"\")) {\n+            if (overrideLoginUserName != null && !overrideLoginUserName.equals(\"\")) {\n                 loginUserName = overrideLoginUserName;\n             } else {\n                 loginUserName = processContext.getComputeResourcePreference().getLoginUserName();\n@@ -336,7 +336,7 @@ public static String  getScratchLocation(ProcessContext processContext) throws G\n             ProcessModel processModel = processContext.getProcessModel();\n             String scratchLocation = null;\n             String overrideScratchLocation = processModel.getResourceSchedule().getOverrideScratchLocation();\n-            if (overrideScratchLocation != null || !overrideScratchLocation.equals(\"\")) {\n+            if (overrideScratchLocation != null && !overrideScratchLocation.equals(\"\")) {\n                 scratchLocation = overrideScratchLocation;\n             } else {\n                 scratchLocation = processContext.getComputeResourcePreference().getScratchLocation();"
            },
            {
                "sha": "95ff86e3f14f8a9a5de673875124f18ac8a4af94",
                "filename": "modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/core/utils/OrchestratorUtils.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/f5e0f227e50212a1f239f24f28e2616e420e41d5/modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/core/utils/OrchestratorUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/f5e0f227e50212a1f239f24f28e2616e420e41d5/modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/core/utils/OrchestratorUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/orchestrator-core/src/main/java/org/apache/airavata/orchestrator/core/utils/OrchestratorUtils.java?ref=f5e0f227e50212a1f239f24f28e2616e420e41d5",
                "patch": "@@ -125,7 +125,7 @@ public static String getLoginUserName(OrchestratorContext context, ProcessModel\n         try {\n             String loginUserName = null;\n             String overrideLoginUserName = processModel.getResourceSchedule().getOverrideLoginUserName();\n-            if (overrideLoginUserName != null || !overrideLoginUserName.equals(\"\")) {\n+            if (overrideLoginUserName != null && !overrideLoginUserName.equals(\"\")) {\n                 loginUserName = overrideLoginUserName;\n             } else {\n                 GwyResourceProfile gatewayProfile = context.getRegistry().getAppCatalog().getGatewayProfile();\n@@ -142,7 +142,7 @@ public static String getScratchLocation(OrchestratorContext context, ProcessMode\n         try {\n             String scratchLocation = null;\n             String overrideScratchLocation = processModel.getResourceSchedule().getOverrideScratchLocation();\n-            if (overrideScratchLocation != null || !overrideScratchLocation.equals(\"\")) {\n+            if (overrideScratchLocation != null && !overrideScratchLocation.equals(\"\")) {\n                 scratchLocation = overrideScratchLocation;\n             } else {\n                 GwyResourceProfile gatewayProfile = context.getRegistry().getAppCatalog().getGatewayProfile();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/40c5db4f4cd8797b5e4bf065ee8c22b3ab7d00ba",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/8a6298998d286f5d03662c617fe1c1824c02376a",
        "message": "fixing NPE",
        "bug_id": "airavata_32",
        "file": [
            {
                "sha": "575d5f0ed1213b612ce5e39f6630f9f0f86a3221",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "status": "modified",
                "additions": 13,
                "deletions": 4,
                "changes": 17,
                "blob_url": "https://github.com/apache/airavata/blob/40c5db4f4cd8797b5e4bf065ee8c22b3ab7d00ba/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "raw_url": "https://github.com/apache/airavata/raw/40c5db4f4cd8797b5e4bf065ee8c22b3ab7d00ba/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java?ref=40c5db4f4cd8797b5e4bf065ee8c22b3ab7d00ba",
                "patch": "@@ -597,7 +597,10 @@ private static Resource createExperimentInput (Experiment_Input o){\n             eInputResource.setInputType(o.getInputType());\n             eInputResource.setMetadata(o.getMetadata());\n             eInputResource.setExperimentKey(o.getEx_key());\n-            eInputResource.setValue(new String(o.getValue()));\n+            if (o.getValue() != null){\n+                eInputResource.setValue(new String(o.getValue()));\n+            }\n+\n         }\n         return eInputResource;\n     }\n@@ -608,7 +611,9 @@ private static Resource createExperimentOutput (Experiment_Output o){\n             ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n             eOutputResource.setExperimentResource(experimentResource);\n             eOutputResource.setExperimentKey(o.getEx_key());\n-            eOutputResource.setValue(new String(o.getValue()));\n+            if (o.getValue() != null){\n+                eOutputResource.setValue(new String(o.getValue()));\n+            }\n             eOutputResource.setOutputType(o.getOutputKeyType());\n             eOutputResource.setMetadata(o.getMetadata());\n         }\n@@ -678,7 +683,9 @@ private static Resource createApplicationInput (ApplicationInput o){\n             inputResource.setTaskDetailResource(taskDetailResource);\n             inputResource.setInputKey(o.getInputKey());\n             inputResource.setInputType(o.getInputKeyType());\n-            inputResource.setValue(new String(o.getValue()));\n+            if (o.getValue() != null){\n+                inputResource.setValue(new String(o.getValue()));\n+            }\n             inputResource.setMetadata(o.getMetadata());\n         }\n         return inputResource;\n@@ -691,7 +698,9 @@ private static Resource createApplicationOutput (ApplicationOutput o){\n             outputResource.setTaskDetailResource(taskDetailResource);\n             outputResource.setOutputType(o.getOutputKeyType());\n             outputResource.setOutputKey(o.getOutputKey());\n-            outputResource.setValue(new String(o.getValue()));\n+            if (o.getValue() != null){\n+                outputResource.setValue(new String(o.getValue()));\n+            }\n             outputResource.setMetadata(o.getMetadata());\n         }\n         return outputResource;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/66c88f6d262fd846e32f626d21ca6a4c2fb6ce05",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/93545e1419042f6fb9c6e62e00547eab0f6f4439",
        "message": "checking NPEs",
        "bug_id": "airavata_33",
        "file": [
            {
                "sha": "d90cefe636f9bf9303b7aeb6ba127b2bec3da5ec",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "status": "modified",
                "additions": 287,
                "deletions": 219,
                "changes": 506,
                "blob_url": "https://github.com/apache/airavata/blob/66c88f6d262fd846e32f626d21ca6a4c2fb6ce05/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "raw_url": "https://github.com/apache/airavata/raw/66c88f6d262fd846e32f626d21ca6a4c2fb6ce05/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java?ref=66c88f6d262fd846e32f626d21ca6a4c2fb6ce05",
                "patch": "@@ -418,14 +418,17 @@ private static Resource createGateway(Gateway o) {\n      */\n     private static Resource createProject(Project o) {\n         ProjectResource projectResource = new ProjectResource();\n-        projectResource.setName(o.getProject_name());\n-        GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n-        projectResource.setGateway(gatewayResource);\n-        Gateway_Worker gateway_worker = new Gateway_Worker();\n-        gateway_worker.setGateway(o.getGateway());\n-        gateway_worker.setUser(o.getUsers());\n-        WorkerResource workerResource = (WorkerResource) createGatewayWorker(gateway_worker);\n-        projectResource.setWorker(workerResource);\n+        if (o != null){\n+            projectResource.setName(o.getProject_name());\n+            GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n+            projectResource.setGateway(gatewayResource);\n+            Gateway_Worker gateway_worker = new Gateway_Worker();\n+            gateway_worker.setGateway(o.getGateway());\n+            gateway_worker.setUser(o.getUsers());\n+            WorkerResource workerResource = (WorkerResource) createGatewayWorker(gateway_worker);\n+            projectResource.setWorker(workerResource);\n+        }\n+\n         return projectResource;\n     }\n \n@@ -436,10 +439,13 @@ private static Resource createProject(Project o) {\n      */\n     private static Resource createConfiguration (Configuration o){\n         ConfigurationResource configurationResource = new ConfigurationResource();\n-        configurationResource.setConfigKey(o.getConfig_key());\n-        configurationResource.setConfigVal(o.getConfig_val());\n-        configurationResource.setExpireDate(o.getExpire_date());\n-        configurationResource.setCategoryID(o.getCategory_id());\n+        if (o != null){\n+            configurationResource.setConfigKey(o.getConfig_key());\n+            configurationResource.setConfigVal(o.getConfig_val());\n+            configurationResource.setExpireDate(o.getExpire_date());\n+            configurationResource.setCategoryID(o.getCategory_id());\n+        }\n+\n         return configurationResource;\n     }\n \n@@ -450,12 +456,14 @@ private static Resource createConfiguration (Configuration o){\n      */\n     private static Resource createApplicationDescriptor(Application_Descriptor o) {\n         ApplicationDescriptorResource applicationDescriptorResource = new ApplicationDescriptorResource();\n-        applicationDescriptorResource.setName(o.getApplication_descriptor_ID());\n-        applicationDescriptorResource.setHostDescName(o.getHost_descriptor_ID());\n-        applicationDescriptorResource.setServiceDescName(o.getService_descriptor_ID());\n-        applicationDescriptorResource.setContent(new String(o.getApplication_descriptor_xml()));\n-        applicationDescriptorResource.setUpdatedUser(o.getUser().getUser_name());\n-        applicationDescriptorResource.setGatewayName(o.getGateway().getGateway_name());\n+        if (o != null){\n+            applicationDescriptorResource.setName(o.getApplication_descriptor_ID());\n+            applicationDescriptorResource.setHostDescName(o.getHost_descriptor_ID());\n+            applicationDescriptorResource.setServiceDescName(o.getService_descriptor_ID());\n+            applicationDescriptorResource.setContent(new String(o.getApplication_descriptor_xml()));\n+            applicationDescriptorResource.setUpdatedUser(o.getUser().getUser_name());\n+            applicationDescriptorResource.setGatewayName(o.getGateway().getGateway_name());\n+        }\n         return applicationDescriptorResource;\n     }\n \n@@ -467,10 +475,13 @@ private static Resource createApplicationDescriptor(Application_Descriptor o) {\n      * @return  Gateway_Worker resource object\n      */\n     private static Resource createGatewayWorker(Gateway_Worker o) {\n-        GatewayResource gatewayResource = new GatewayResource(o.getGateway().getGateway_name());\n-        gatewayResource.setOwner(o.getGateway().getOwner());\n-        WorkerResource workerResource = new WorkerResource(o.getUser_name(), gatewayResource);\n-        return workerResource;\n+        if (o != null){\n+            GatewayResource gatewayResource = new GatewayResource(o.getGateway().getGateway_name());\n+            gatewayResource.setOwner(o.getGateway().getOwner());\n+            WorkerResource workerResource = new WorkerResource(o.getUser_name(), gatewayResource);\n+            return workerResource;\n+        }\n+        return null;\n     }\n \n     /**\n@@ -479,18 +490,21 @@ private static Resource createGatewayWorker(Gateway_Worker o) {\n      * @return  HostDescriptor resource object\n      */\n     private static Resource createHostDescriptor(Host_Descriptor o) {\n-        try {\n-            HostDescriptorResource hostDescriptorResource = new HostDescriptorResource();\n-            hostDescriptorResource.setGatewayName(o.getGateway().getGateway_name());\n-            hostDescriptorResource.setUserName(o.getUser().getUser_name());\n-            hostDescriptorResource.setHostDescName(o.getHost_descriptor_ID());\n-            byte[] bytes = o.getHost_descriptor_xml();\n-            hostDescriptorResource.setContent(new String(bytes));\n-            return hostDescriptorResource;\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            return null;\n+        if (o != null){\n+            try {\n+                HostDescriptorResource hostDescriptorResource = new HostDescriptorResource();\n+                hostDescriptorResource.setGatewayName(o.getGateway().getGateway_name());\n+                hostDescriptorResource.setUserName(o.getUser().getUser_name());\n+                hostDescriptorResource.setHostDescName(o.getHost_descriptor_ID());\n+                byte[] bytes = o.getHost_descriptor_xml();\n+                hostDescriptorResource.setContent(new String(bytes));\n+                return hostDescriptorResource;\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+                return null;\n+            }\n         }\n+        return null;\n     }\n \n     /**\n@@ -500,14 +514,17 @@ private static Resource createHostDescriptor(Host_Descriptor o) {\n      */\n     private static Resource createPublishWorkflow(Published_Workflow o) {\n         PublishWorkflowResource publishWorkflowResource = new PublishWorkflowResource();\n-        GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n-        publishWorkflowResource.setGateway(gatewayResource);\n-        publishWorkflowResource.setCreatedUser(o.getUser().getUser_name());\n-        publishWorkflowResource.setName(o.getPublish_workflow_name());\n-        publishWorkflowResource.setContent(new String(o.getWorkflow_content()));\n-        publishWorkflowResource.setPublishedDate(o.getPublished_date());\n-        publishWorkflowResource.setVersion(o.getVersion());\n-        publishWorkflowResource.setPath(o.getPath());\n+        if (o != null){\n+            GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n+            publishWorkflowResource.setGateway(gatewayResource);\n+            publishWorkflowResource.setCreatedUser(o.getUser().getUser_name());\n+            publishWorkflowResource.setName(o.getPublish_workflow_name());\n+            publishWorkflowResource.setContent(new String(o.getWorkflow_content()));\n+            publishWorkflowResource.setPublishedDate(o.getPublished_date());\n+            publishWorkflowResource.setVersion(o.getVersion());\n+            publishWorkflowResource.setPath(o.getPath());\n+        }\n+\n         return publishWorkflowResource;\n     }\n \n@@ -518,10 +535,13 @@ private static Resource createPublishWorkflow(Published_Workflow o) {\n      */\n     private static Resource createServiceDescriptor(Service_Descriptor o) {\n         ServiceDescriptorResource serviceDescriptorResource = new ServiceDescriptorResource();\n-        serviceDescriptorResource.setGatewayName(o.getGateway().getGateway_name());\n-        serviceDescriptorResource.setUserName(o.getUser().getUser_name());\n-        serviceDescriptorResource.setServiceDescName(o.getService_descriptor_ID());\n-        serviceDescriptorResource.setContent(new String(o.getService_descriptor_xml()));\n+        if (o != null){\n+            serviceDescriptorResource.setGatewayName(o.getGateway().getGateway_name());\n+            serviceDescriptorResource.setUserName(o.getUser().getUser_name());\n+            serviceDescriptorResource.setServiceDescName(o.getService_descriptor_ID());\n+            serviceDescriptorResource.setContent(new String(o.getService_descriptor_xml()));\n+        }\n+\n         return serviceDescriptorResource;\n     }\n \n@@ -532,17 +552,20 @@ private static Resource createServiceDescriptor(Service_Descriptor o) {\n      */\n     private static Resource createUserWorkflow(User_Workflow o) {\n         UserWorkflowResource userWorkflowResource = new UserWorkflowResource();\n-        userWorkflowResource.setName(o.getTemplate_name());\n-        GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n-        userWorkflowResource.setGateway(gatewayResource);\n-        Gateway_Worker gateway_worker = new Gateway_Worker();\n-        gateway_worker.setGateway(o.getGateway());\n-        gateway_worker.setUser(o.getUser());\n-        WorkerResource workerResource = (WorkerResource) createGatewayWorker(gateway_worker);\n-        userWorkflowResource.setWorker(workerResource);\n-        userWorkflowResource.setLastUpdateDate(o.getLast_updated_date());\n-        userWorkflowResource.setContent(new String(o.getWorkflow_graph()));\n-        userWorkflowResource.setPath(o.getPath());\n+        if (o != null){\n+            userWorkflowResource.setName(o.getTemplate_name());\n+            GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n+            userWorkflowResource.setGateway(gatewayResource);\n+            Gateway_Worker gateway_worker = new Gateway_Worker();\n+            gateway_worker.setGateway(o.getGateway());\n+            gateway_worker.setUser(o.getUser());\n+            WorkerResource workerResource = (WorkerResource) createGatewayWorker(gateway_worker);\n+            userWorkflowResource.setWorker(workerResource);\n+            userWorkflowResource.setLastUpdateDate(o.getLast_updated_date());\n+            userWorkflowResource.setContent(new String(o.getWorkflow_graph()));\n+            userWorkflowResource.setPath(o.getPath());\n+        }\n+\n         return userWorkflowResource;\n     }\n \n@@ -553,8 +576,11 @@ private static Resource createUserWorkflow(User_Workflow o) {\n      */\n     private static Resource createUser(Users o) {\n         UserResource userResource = new UserResource();\n-        userResource.setUserName(o.getUser_name());\n-        userResource.setPassword(o.getPassword());\n+        if (o != null){\n+            userResource.setUserName(o.getUser_name());\n+            userResource.setPassword(o.getPassword());\n+        }\n+\n         return userResource;\n     }\n \n@@ -564,257 +590,299 @@ private static Resource createUser(Users o) {\n      */\n     private static Resource createExperiment(Experiment o) {\n         ExperimentResource experimentResource = new ExperimentResource();\n-        GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n-        experimentResource.setGateway(gatewayResource);\n-//        Gateway_Worker gateway_worker = new Gateway_Worker();\n-//        gateway_worker.setGateway(o.getGateway());\n-//        gateway_worker.setUser_name(o.getExecutionUser());\n-        experimentResource.setExecutionUser(o.getExecutionUser());\n-        if (o.getProject() != null){\n-            ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n-            experimentResource.setProject(projectResource);\n-        }\n-        experimentResource.setExpID(o.getExpId());\n-        experimentResource.setCreationTime(o.getCreationTime());\n-        experimentResource.setDescription(o.getExpDesc());\n-        experimentResource.setApplicationId(o.getApplicationId());\n-        experimentResource.setApplicationVersion(o.getAppVersion());\n-        experimentResource.setWorkflowTemplateId(o.getWorkflowTemplateId());\n-        experimentResource.setWorkflowTemplateVersion(o.getWorkflowTemplateVersion());\n-        experimentResource.setWorkflowExecutionId(o.getWorkflowExecutionId());\n+        if (o != null){\n+            GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n+            experimentResource.setGateway(gatewayResource);\n+            experimentResource.setExecutionUser(o.getExecutionUser());\n+            if (o.getProject() != null){\n+                ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n+                experimentResource.setProject(projectResource);\n+            }\n+            experimentResource.setExpID(o.getExpId());\n+            experimentResource.setCreationTime(o.getCreationTime());\n+            experimentResource.setDescription(o.getExpDesc());\n+            experimentResource.setApplicationId(o.getApplicationId());\n+            experimentResource.setApplicationVersion(o.getAppVersion());\n+            experimentResource.setWorkflowTemplateId(o.getWorkflowTemplateId());\n+            experimentResource.setWorkflowTemplateVersion(o.getWorkflowTemplateVersion());\n+            experimentResource.setWorkflowExecutionId(o.getWorkflowExecutionId());\n+        }\n+\n         return experimentResource;\n     }\n \n     private static Resource createExperimentInput (Experiment_Input o){\n         ExperimentInputResource eInputResource = new ExperimentInputResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        eInputResource.setExperimentResource(experimentResource);\n-        eInputResource.setInputType(o.getInputType());\n-        eInputResource.setMetadata(o.getMetadata());\n-        eInputResource.setExperimentKey(o.getEx_key());\n-        eInputResource.setValue(o.getValue());\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            eInputResource.setExperimentResource(experimentResource);\n+            eInputResource.setInputType(o.getInputType());\n+            eInputResource.setMetadata(o.getMetadata());\n+            eInputResource.setExperimentKey(o.getEx_key());\n+            eInputResource.setValue(o.getValue());\n+        }\n         return eInputResource;\n     }\n \n     private static Resource createExperimentOutput (Experiment_Output o){\n         ExperimentOutputResource eOutputResource = new ExperimentOutputResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        eOutputResource.setExperimentResource(experimentResource);\n-        eOutputResource.setExperimentKey(o.getEx_key());\n-        eOutputResource.setValue(o.getValue());\n-        eOutputResource.setOutputType(o.getOutputKeyType());\n-        eOutputResource.setMetadata(o.getMetadata());\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            eOutputResource.setExperimentResource(experimentResource);\n+            eOutputResource.setExperimentKey(o.getEx_key());\n+            eOutputResource.setValue(o.getValue());\n+            eOutputResource.setOutputType(o.getOutputKeyType());\n+            eOutputResource.setMetadata(o.getMetadata());\n+        }\n         return eOutputResource;\n     }\n \n     private static Resource createWorkflowNodeDetail (WorkflowNodeDetail o){\n         WorkflowNodeDetailResource nodeDetailResource = new WorkflowNodeDetailResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        nodeDetailResource.setExperimentResource(experimentResource);\n-        nodeDetailResource.setCreationTime(o.getCreationTime());\n-        nodeDetailResource.setNodeInstanceId(o.getNodeId());\n-        nodeDetailResource.setNodeName(o.getNodeName());\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            nodeDetailResource.setExperimentResource(experimentResource);\n+            nodeDetailResource.setCreationTime(o.getCreationTime());\n+            nodeDetailResource.setNodeInstanceId(o.getNodeId());\n+            nodeDetailResource.setNodeName(o.getNodeName());\n+        }\n         return nodeDetailResource;\n     }\n \n     private static Resource createTaskDetail(TaskDetail o){\n         TaskDetailResource taskDetailResource = new TaskDetailResource();\n-        WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNodeDetail());\n-        taskDetailResource.setWorkflowNodeDetailResource(nodeDetailResource);\n-        taskDetailResource.setCreationTime(o.getCreationTime());\n-        taskDetailResource.setTaskId(o.getTaskId());\n-        taskDetailResource.setApplicationId(o.getAppId());\n-        taskDetailResource.setApplicationVersion(o.getAppVersion());\n+        if ( o != null){\n+            WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNodeDetail());\n+            taskDetailResource.setWorkflowNodeDetailResource(nodeDetailResource);\n+            taskDetailResource.setCreationTime(o.getCreationTime());\n+            taskDetailResource.setTaskId(o.getTaskId());\n+            taskDetailResource.setApplicationId(o.getAppId());\n+            taskDetailResource.setApplicationVersion(o.getAppVersion());\n+        }\n         return taskDetailResource;\n     }\n \n     private static Resource createErrorDetail (ErrorDetail o){\n         ErrorDetailResource errorDetailResource = new ErrorDetailResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        errorDetailResource.setExperimentResource(experimentResource);\n-        if (o.getTask() != null){\n-            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-            errorDetailResource.setTaskDetailResource(taskDetailResource);\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            errorDetailResource.setExperimentResource(experimentResource);\n+            if (o.getTask() != null){\n+                TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+                errorDetailResource.setTaskDetailResource(taskDetailResource);\n+            }\n+            if (o.getNodeDetails() != null){\n+                WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNodeDetails());\n+                errorDetailResource.setNodeDetail(nodeDetailResource);\n+            }\n+            errorDetailResource.setErrorId(o.getErrorID());\n+            errorDetailResource.setJobId(o.getJobId());\n+            errorDetailResource.setCreationTime(o.getCreationTime());\n+            errorDetailResource.setActualErrorMsg(new String(o.getActualErrorMsg()));\n+            errorDetailResource.setUserFriendlyErrorMsg(o.getUserFriendlyErrorMsg());\n+            errorDetailResource.setTransientPersistent(o.isTransientPersistent());\n+            errorDetailResource.setErrorCategory(o.getErrorCategory());\n+            errorDetailResource.setCorrectiveAction(o.getCorrectiveAction());\n+            errorDetailResource.setActionableGroup(o.getActionableGroup());\n         }\n-        if (o.getNodeDetails() != null){\n-            WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNodeDetails());\n-            errorDetailResource.setNodeDetail(nodeDetailResource);\n-        }\n-        errorDetailResource.setErrorId(o.getErrorID());\n-        errorDetailResource.setJobId(o.getJobId());\n-        errorDetailResource.setCreationTime(o.getCreationTime());\n-        errorDetailResource.setActualErrorMsg(new String(o.getActualErrorMsg()));\n-        errorDetailResource.setUserFriendlyErrorMsg(o.getUserFriendlyErrorMsg());\n-        errorDetailResource.setTransientPersistent(o.isTransientPersistent());\n-        errorDetailResource.setErrorCategory(o.getErrorCategory());\n-        errorDetailResource.setCorrectiveAction(o.getCorrectiveAction());\n-        errorDetailResource.setActionableGroup(o.getActionableGroup());\n+\n         return errorDetailResource;\n     }\n \n     private static Resource createApplicationInput (ApplicationInput o){\n         ApplicationInputResource inputResource = new ApplicationInputResource();\n-        TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-        inputResource.setTaskDetailResource(taskDetailResource);\n-        inputResource.setInputKey(o.getInputKey());\n-        inputResource.setInputType(o.getInputKeyType());\n-        inputResource.setValue(o.getValue());\n-        inputResource.setMetadata(o.getMetadata());\n+        if (o != null){\n+            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+            inputResource.setTaskDetailResource(taskDetailResource);\n+            inputResource.setInputKey(o.getInputKey());\n+            inputResource.setInputType(o.getInputKeyType());\n+            inputResource.setValue(o.getValue());\n+            inputResource.setMetadata(o.getMetadata());\n+        }\n         return inputResource;\n     }\n \n     private static Resource createApplicationOutput (ApplicationOutput o){\n         ApplicationOutputResource outputResource = new ApplicationOutputResource();\n-        TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-        outputResource.setTaskDetailResource(taskDetailResource);\n-        outputResource.setOutputType(o.getOutputKeyType());\n-        outputResource.setOutputKey(o.getOutputKey());\n-        outputResource.setValue(o.getValue());\n-        outputResource.setMetadata(o.getMetadata());\n+        if (o != null){\n+            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+            outputResource.setTaskDetailResource(taskDetailResource);\n+            outputResource.setOutputType(o.getOutputKeyType());\n+            outputResource.setOutputKey(o.getOutputKey());\n+            outputResource.setValue(o.getValue());\n+            outputResource.setMetadata(o.getMetadata());\n+        }\n         return outputResource;\n     }\n \n     private static Resource createNodeInput (NodeInput o){\n         NodeInputResource inputResource = new NodeInputResource();\n-        WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNodeDetails());\n-        inputResource.setNodeDetailResource(nodeDetailResource);\n-        inputResource.setInputKey(o.getInputKey());\n-        inputResource.setInputType(o.getInputKeyType());\n-        inputResource.setValue(o.getValue());\n-        inputResource.setMetadata(o.getMetadata());\n+        if (o != null){\n+            WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNodeDetails());\n+            inputResource.setNodeDetailResource(nodeDetailResource);\n+            inputResource.setInputKey(o.getInputKey());\n+            inputResource.setInputType(o.getInputKeyType());\n+            inputResource.setValue(o.getValue());\n+            inputResource.setMetadata(o.getMetadata());\n+        }\n         return inputResource;\n     }\n \n     private static Resource createNodeOutput (NodeOutput o){\n         NodeOutputResource outputResource = new NodeOutputResource();\n-        WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNode());\n-        outputResource.setNodeDetailResource(nodeDetailResource);\n-        outputResource.setOutputType(o.getOutputKeyType());\n-        outputResource.setOutputKey(o.getOutputKey());\n-        outputResource.setValue(o.getValue());\n-        outputResource.setMetadata(o.getMetadata());\n+        if (o != null){\n+            WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNode());\n+            outputResource.setNodeDetailResource(nodeDetailResource);\n+            outputResource.setOutputType(o.getOutputKeyType());\n+            outputResource.setOutputKey(o.getOutputKey());\n+            outputResource.setValue(o.getValue());\n+            outputResource.setMetadata(o.getMetadata());\n+        }\n+\n         return outputResource;\n     }\n \n     private static Resource createJobDetail (JobDetail o){\n         JobDetailResource jobDetailResource = new JobDetailResource();\n-        TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-        jobDetailResource.setTaskDetailResource(taskDetailResource);\n-        jobDetailResource.setJobDescription(o.getJobDescription());\n-        jobDetailResource.setJobId(o.getJobId());\n-        jobDetailResource.setCreationTime(o.getCreationTime());\n-        jobDetailResource.setComputeResourceConsumed(o.getComputeResourceConsumed());\n+        if (o != null){\n+            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+            jobDetailResource.setTaskDetailResource(taskDetailResource);\n+            jobDetailResource.setJobDescription(o.getJobDescription());\n+            jobDetailResource.setJobId(o.getJobId());\n+            jobDetailResource.setCreationTime(o.getCreationTime());\n+            jobDetailResource.setComputeResourceConsumed(o.getComputeResourceConsumed());\n+        }\n+\n         return jobDetailResource;\n     }\n \n     private static Resource createDataTransferResource (DataTransferDetail o){\n         DataTransferDetailResource transferDetailResource = new DataTransferDetailResource();\n-        TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-        transferDetailResource.setTaskDetailResource(taskDetailResource);\n-        transferDetailResource.setTransferId(o.getTransferId());\n-        transferDetailResource.setCreationTime(o.getCreationTime());\n-        transferDetailResource.setTransferDescription(o.getTransferDesc());\n+        if (o != null){\n+            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+            transferDetailResource.setTaskDetailResource(taskDetailResource);\n+            transferDetailResource.setTransferId(o.getTransferId());\n+            transferDetailResource.setCreationTime(o.getCreationTime());\n+            transferDetailResource.setTransferDescription(o.getTransferDesc());\n+        }\n         return transferDetailResource;\n     }\n \n     private static Resource createStatusResource (Status o){\n         StatusResource statusResource = new StatusResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        statusResource.setExperimentResource(experimentResource);\n-        if (o.getTask() != null){\n-            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-            statusResource.setTaskDetailResource(taskDetailResource);\n-        }\n-        if (o.getNode() != null){\n-            WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNode());\n-            statusResource.setWorkflowNodeDetail(nodeDetailResource);\n-        }\n-        if (o.getTransferDetail() != null){\n-            DataTransferDetailResource transferDetailResource = (DataTransferDetailResource)createDataTransferResource(o.getTransferDetail());\n-            statusResource.setDataTransferDetail(transferDetailResource);\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            statusResource.setExperimentResource(experimentResource);\n+            if (o.getTask() != null){\n+                TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+                statusResource.setTaskDetailResource(taskDetailResource);\n+            }\n+            if (o.getNode() != null){\n+                WorkflowNodeDetailResource nodeDetailResource = (WorkflowNodeDetailResource)createWorkflowNodeDetail(o.getNode());\n+                statusResource.setWorkflowNodeDetail(nodeDetailResource);\n+            }\n+            if (o.getTransferDetail() != null){\n+                DataTransferDetailResource transferDetailResource = (DataTransferDetailResource)createDataTransferResource(o.getTransferDetail());\n+                statusResource.setDataTransferDetail(transferDetailResource);\n+            }\n+            statusResource.setStatusId(o.getStatusId());\n+            statusResource.setJobId(o.getJobId());\n+            statusResource.setState(o.getState());\n+            statusResource.setStatusUpdateTime(o.getStatusUpdateTime());\n+            statusResource.setStatusType(o.getStatusType());\n         }\n-        statusResource.setStatusId(o.getStatusId());\n-        statusResource.setJobId(o.getJobId());\n-        statusResource.setState(o.getState());\n-        statusResource.setStatusUpdateTime(o.getStatusUpdateTime());\n-        statusResource.setStatusType(o.getStatusType());\n+\n         return statusResource;\n     }\n \n     private static Resource createExConfigDataResource (ExperimentConfigData o){\n         ConfigDataResource configDataResource = new ConfigDataResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        configDataResource.setExperimentResource(experimentResource);\n-        configDataResource.setAiravataAutoSchedule(o.isAiravataAutoSchedule());\n-        configDataResource.setOverrideManualParams(o.isOverrideManualParams());\n-        configDataResource.setShareExp(o.isShareExp());\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            configDataResource.setExperimentResource(experimentResource);\n+            configDataResource.setAiravataAutoSchedule(o.isAiravataAutoSchedule());\n+            configDataResource.setOverrideManualParams(o.isOverrideManualParams());\n+            configDataResource.setShareExp(o.isShareExp());\n+        }\n+\n         return configDataResource;\n     }\n \n     private static Resource createComputationalScheduling (Computational_Resource_Scheduling o){\n         ComputationSchedulingResource schedulingResource = new ComputationSchedulingResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        schedulingResource.setExperimentResource(experimentResource);\n-        if (o.getTask() != null){\n-            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-            schedulingResource.setTaskDetailResource(taskDetailResource);\n-        }\n-        schedulingResource.setSchedulingId(o.getSchedulingId());\n-        schedulingResource.setResourceHostId(o.getResourceHostId());\n-        schedulingResource.setCpuCount(o.getCpuCount());\n-        schedulingResource.setNodeCount(o.getNodeCount());\n-        schedulingResource.setNumberOfThreads(o.getNumberOfThreads());\n-        schedulingResource.setQueueName(o.getQueueName());\n-        schedulingResource.setWalltimeLimit(o.getWallTimeLimit());\n-        schedulingResource.setJobStartTime(o.getJobStartTime());\n-        schedulingResource.setPhysicalMemory(o.getTotalPhysicalmemory());\n-        schedulingResource.setProjectName(o.getProjectName());\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            schedulingResource.setExperimentResource(experimentResource);\n+            if (o.getTask() != null){\n+                TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+                schedulingResource.setTaskDetailResource(taskDetailResource);\n+            }\n+            schedulingResource.setSchedulingId(o.getSchedulingId());\n+            schedulingResource.setResourceHostId(o.getResourceHostId());\n+            schedulingResource.setCpuCount(o.getCpuCount());\n+            schedulingResource.setNodeCount(o.getNodeCount());\n+            schedulingResource.setNumberOfThreads(o.getNumberOfThreads());\n+            schedulingResource.setQueueName(o.getQueueName());\n+            schedulingResource.setWalltimeLimit(o.getWallTimeLimit());\n+            schedulingResource.setJobStartTime(o.getJobStartTime());\n+            schedulingResource.setPhysicalMemory(o.getTotalPhysicalmemory());\n+            schedulingResource.setProjectName(o.getProjectName());\n+        }\n+\n         return schedulingResource;\n     }\n \n     private static Resource createAdvancedInputDataResource (AdvancedInputDataHandling o){\n         AdvanceInputDataHandlingResource dataHandlingResource = new AdvanceInputDataHandlingResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        dataHandlingResource.setExperimentResource(experimentResource);\n-        if (o.getTask() != null){\n-            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-            dataHandlingResource.setTaskDetailResource(taskDetailResource);\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            dataHandlingResource.setExperimentResource(experimentResource);\n+            if (o.getTask() != null){\n+                TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+                dataHandlingResource.setTaskDetailResource(taskDetailResource);\n+            }\n+            dataHandlingResource.setDataHandlingId(o.getDataHandlingId());\n+            dataHandlingResource.setWorkingDirParent(o.getParentWorkingDir());\n+            dataHandlingResource.setWorkingDir(o.getWorkingDir());\n+            dataHandlingResource.setStageInputFiles(o.isStageInputsToWorkingDir());\n+            dataHandlingResource.setCleanAfterJob(o.isCleanAfterJob());\n         }\n-        dataHandlingResource.setDataHandlingId(o.getDataHandlingId());\n-        dataHandlingResource.setWorkingDirParent(o.getParentWorkingDir());\n-        dataHandlingResource.setWorkingDir(o.getWorkingDir());\n-        dataHandlingResource.setStageInputFiles(o.isStageInputsToWorkingDir());\n-        dataHandlingResource.setCleanAfterJob(o.isCleanAfterJob());\n+\n         return dataHandlingResource;\n     }\n \n     private static Resource createAdvancedOutputDataResource (AdvancedOutputDataHandling o){\n         AdvancedOutputDataHandlingResource dataHandlingResource = new AdvancedOutputDataHandlingResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        dataHandlingResource.setExperimentResource(experimentResource);\n-        if (o.getTask() != null){\n-            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-            dataHandlingResource.setTaskDetailResource(taskDetailResource);\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            dataHandlingResource.setExperimentResource(experimentResource);\n+            if (o.getTask() != null){\n+                TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+                dataHandlingResource.setTaskDetailResource(taskDetailResource);\n+            }\n+            dataHandlingResource.setOutputDataHandlingId(o.getOutputDataHandlingId());\n+            dataHandlingResource.setOutputDataDir(o.getOutputDataDir());\n+            dataHandlingResource.setDataRegUrl(o.getDataRegUrl());\n+            dataHandlingResource.setPersistOutputData(o.isPersistOutputData());\n         }\n-        dataHandlingResource.setOutputDataHandlingId(o.getOutputDataHandlingId());\n-        dataHandlingResource.setOutputDataDir(o.getOutputDataDir());\n-        dataHandlingResource.setDataRegUrl(o.getDataRegUrl());\n-        dataHandlingResource.setPersistOutputData(o.isPersistOutputData());\n         return dataHandlingResource;\n     }\n \n     private static Resource createQosParamResource (QosParam o){\n         QosParamResource qosParamResource = new QosParamResource();\n-        ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n-        qosParamResource.setExperimentResource(experimentResource);\n-        if (o.getTask() != null){\n-            TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n-            qosParamResource.setTaskDetailResource(taskDetailResource);\n+        if (o != null){\n+            ExperimentResource experimentResource = (ExperimentResource)createExperiment(o.getExperiment());\n+            qosParamResource.setExperimentResource(experimentResource);\n+            if (o.getTask() != null){\n+                TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n+                qosParamResource.setTaskDetailResource(taskDetailResource);\n+            }\n+            qosParamResource.setQosId(o.getQosId());\n+            qosParamResource.setExecuteBefore(o.getExecuteBefore());\n+            qosParamResource.setStartExecutionAt(o.getStartExecutionAt());\n+            qosParamResource.setNoOfRetries(o.getNoOfRetries());\n         }\n-        qosParamResource.setQosId(o.getQosId());\n-        qosParamResource.setExecuteBefore(o.getExecuteBefore());\n-        qosParamResource.setStartExecutionAt(o.getStartExecutionAt());\n-        qosParamResource.setNoOfRetries(o.getNoOfRetries());\n+\n         return qosParamResource;\n     }\n }"
            },
            {
                "sha": "7470d206f1ef55380231de7f99d3ce17bfc2be4f",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "status": "modified",
                "additions": 272,
                "deletions": 201,
                "changes": 473,
                "blob_url": "https://github.com/apache/airavata/blob/66c88f6d262fd846e32f626d21ca6a4c2fb6ce05/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/66c88f6d262fd846e32f626d21ca6a4c2fb6ce05/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java?ref=66c88f6d262fd846e32f626d21ca6a4c2fb6ce05",
                "patch": "@@ -34,370 +34,441 @@\n \n     public static Experiment getExperiment(ExperimentResource experimentResource){\n         Experiment experiment = new Experiment();\n-        if (experimentResource.getProject()!= null){\n-            experiment.setProjectID(experimentResource.getProject().getName());\n-        }\n-\n-        experiment.setCreationTime(experimentResource.getCreationTime().getTime());\n-        experiment.setUserName(experimentResource.getExecutionUser());\n-        experiment.setName(experimentResource.getExpName());\n-        experiment.setDescription(experimentResource.getDescription());\n-        experiment.setApplicationId(experimentResource.getApplicationId());\n-        experiment.setApplicationVersion(experimentResource.getApplicationVersion());\n-        experiment.setWorkflowTemplateId(experimentResource.getWorkflowTemplateId());\n-        experiment.setWorkflowTemplateVersion(experimentResource.getWorkflowTemplateVersion());\n-        experiment.setWorkflowExecutionInstanceId(experimentResource.getWorkflowExecutionId());\n-        List<ExperimentInputResource> experimentInputs = experimentResource.getExperimentInputs();\n-        experiment.setExperimentInputs(getExpInputs(experimentInputs));\n-        List<ExperimentOutputResource> experimentOutputs = experimentResource.getExperimentOutputs();\n-        experiment.setExperimentOutputs(getExpOutputs(experimentOutputs));\n-        StatusResource experimentStatus = experimentResource.getExperimentStatus();\n-        if (experimentStatus != null){\n-            experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n-        }\n-        List<StatusResource> changeList = experimentResource.getWorkflowNodeStatuses();\n-        if (changeList != null){\n-               experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n-        }\n-\n-        List<WorkflowNodeDetailResource> workflowNodeDetails = experimentResource.getWorkflowNodeDetails();\n-        if (workflowNodeDetails != null){\n+        if (experimentResource != null){\n+            if (experimentResource.getProject()!= null){\n+                experiment.setProjectID(experimentResource.getProject().getName());\n+            }\n+            experiment.setCreationTime(experimentResource.getCreationTime().getTime());\n+            experiment.setUserName(experimentResource.getExecutionUser());\n+            experiment.setName(experimentResource.getExpName());\n+            experiment.setDescription(experimentResource.getDescription());\n+            experiment.setApplicationId(experimentResource.getApplicationId());\n+            experiment.setApplicationVersion(experimentResource.getApplicationVersion());\n+            experiment.setWorkflowTemplateId(experimentResource.getWorkflowTemplateId());\n+            experiment.setWorkflowTemplateVersion(experimentResource.getWorkflowTemplateVersion());\n+            experiment.setWorkflowExecutionInstanceId(experimentResource.getWorkflowExecutionId());\n+            List<ExperimentInputResource> experimentInputs = experimentResource.getExperimentInputs();\n+            experiment.setExperimentInputs(getExpInputs(experimentInputs));\n+            List<ExperimentOutputResource> experimentOutputs = experimentResource.getExperimentOutputs();\n+            experiment.setExperimentOutputs(getExpOutputs(experimentOutputs));\n+            StatusResource experimentStatus = experimentResource.getExperimentStatus();\n+            if (experimentStatus != null){\n+                experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n+            }\n+            List<StatusResource> changeList = experimentResource.getWorkflowNodeStatuses();\n+            if (changeList != null){\n+                experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n+            }\n+\n+            List<WorkflowNodeDetailResource> workflowNodeDetails = experimentResource.getWorkflowNodeDetails();\n+            if (workflowNodeDetails != null){\n                 experiment.setWorkflowNodeDetailsList(getWfNodeList(workflowNodeDetails));\n+            }\n+            List<ErrorDetailResource> errorDetails = experimentResource.getErrorDetails();\n+            if (errorDetails!= null){\n+                experiment.setErrors(getErrorDetailList(errorDetails));\n+            }\n         }\n-        List<ErrorDetailResource> errorDetails = experimentResource.getErrorDetails();\n-        if (errorDetails!= null){\n-            experiment.setErrors(getErrorDetailList(errorDetails));\n-        }\n+\n         return experiment;\n     }\n \n     public static DataObjectType getInputOutput(Object object){\n         DataObjectType dataObjectType = new DataObjectType();\n-        if (object instanceof  ExperimentInputResource){\n-            ExperimentInputResource expInput = (ExperimentInputResource) object;\n-            dataObjectType.setKey(expInput.getExperimentKey());\n-            dataObjectType.setValue(expInput.getValue());\n-            dataObjectType.setType(expInput.getInputType());\n-            dataObjectType.setMetaData(expInput.getMetadata());\n-            return dataObjectType;\n-        }else if (object instanceof ExperimentOutputResource){\n-            ExperimentOutputResource expOutput = (ExperimentOutputResource)object;\n-            dataObjectType.setKey(expOutput.getExperimentKey());\n-            dataObjectType.setValue(expOutput.getValue());\n-            dataObjectType.setType(expOutput.getOutputType());\n-            dataObjectType.setMetaData(expOutput.getMetadata());\n-            return dataObjectType;\n-        }else if (object instanceof NodeInputResource){\n-            NodeInputResource nodeInputResource = (NodeInputResource)object;\n-            dataObjectType.setKey(nodeInputResource.getInputKey());\n-            dataObjectType.setValue(nodeInputResource.getValue());\n-            dataObjectType.setType(nodeInputResource.getInputType());\n-            dataObjectType.setMetaData(nodeInputResource.getMetadata());\n-            return dataObjectType;\n-        }else if (object instanceof NodeOutputResource){\n-            NodeOutputResource nodeOutputResource = (NodeOutputResource)object;\n-            dataObjectType.setKey(nodeOutputResource.getOutputKey());\n-            dataObjectType.setValue(nodeOutputResource.getValue());\n-            dataObjectType.setType(nodeOutputResource.getOutputType());\n-            dataObjectType.setMetaData(nodeOutputResource.getMetadata());\n-            return dataObjectType;\n-        }else if (object instanceof ApplicationInputResource){\n-            ApplicationInputResource inputResource = (ApplicationInputResource)object;\n-            dataObjectType.setKey(inputResource.getInputKey());\n-            dataObjectType.setValue(inputResource.getValue());\n-            dataObjectType.setType(inputResource.getInputType());\n-            dataObjectType.setMetaData(inputResource.getMetadata());\n-            return dataObjectType;\n-        }else if (object instanceof ApplicationOutputResource){\n-            ApplicationOutputResource outputResource = (ApplicationOutputResource)object;\n-            dataObjectType.setKey(outputResource.getOutputKey());\n-            dataObjectType.setValue(outputResource.getValue());\n-            dataObjectType.setType(outputResource.getOutputType());\n-            dataObjectType.setMetaData(outputResource.getMetadata());\n-            return dataObjectType;\n-        }else {\n-            return null;\n+        if (object != null){\n+            if (object instanceof  ExperimentInputResource){\n+                ExperimentInputResource expInput = (ExperimentInputResource) object;\n+                dataObjectType.setKey(expInput.getExperimentKey());\n+                dataObjectType.setValue(expInput.getValue());\n+                dataObjectType.setType(expInput.getInputType());\n+                dataObjectType.setMetaData(expInput.getMetadata());\n+                return dataObjectType;\n+            }else if (object instanceof ExperimentOutputResource){\n+                ExperimentOutputResource expOutput = (ExperimentOutputResource)object;\n+                dataObjectType.setKey(expOutput.getExperimentKey());\n+                dataObjectType.setValue(expOutput.getValue());\n+                dataObjectType.setType(expOutput.getOutputType());\n+                dataObjectType.setMetaData(expOutput.getMetadata());\n+                return dataObjectType;\n+            }else if (object instanceof NodeInputResource){\n+                NodeInputResource nodeInputResource = (NodeInputResource)object;\n+                dataObjectType.setKey(nodeInputResource.getInputKey());\n+                dataObjectType.setValue(nodeInputResource.getValue());\n+                dataObjectType.setType(nodeInputResource.getInputType());\n+                dataObjectType.setMetaData(nodeInputResource.getMetadata());\n+                return dataObjectType;\n+            }else if (object instanceof NodeOutputResource){\n+                NodeOutputResource nodeOutputResource = (NodeOutputResource)object;\n+                dataObjectType.setKey(nodeOutputResource.getOutputKey());\n+                dataObjectType.setValue(nodeOutputResource.getValue());\n+                dataObjectType.setType(nodeOutputResource.getOutputType());\n+                dataObjectType.setMetaData(nodeOutputResource.getMetadata());\n+                return dataObjectType;\n+            }else if (object instanceof ApplicationInputResource){\n+                ApplicationInputResource inputResource = (ApplicationInputResource)object;\n+                dataObjectType.setKey(inputResource.getInputKey());\n+                dataObjectType.setValue(inputResource.getValue());\n+                dataObjectType.setType(inputResource.getInputType());\n+                dataObjectType.setMetaData(inputResource.getMetadata());\n+                return dataObjectType;\n+            }else if (object instanceof ApplicationOutputResource){\n+                ApplicationOutputResource outputResource = (ApplicationOutputResource)object;\n+                dataObjectType.setKey(outputResource.getOutputKey());\n+                dataObjectType.setValue(outputResource.getValue());\n+                dataObjectType.setType(outputResource.getOutputType());\n+                dataObjectType.setMetaData(outputResource.getMetadata());\n+                return dataObjectType;\n+            }else {\n+                return dataObjectType;\n+            }\n         }\n+        return dataObjectType;\n     }\n \n     public static List<DataObjectType> getExpInputs (List<ExperimentInputResource> exInputList){\n         List<DataObjectType> expInputs = new ArrayList<DataObjectType>();\n-        for (ExperimentInputResource inputResource : exInputList){\n-            DataObjectType exInput = getInputOutput(inputResource);\n-            expInputs.add(exInput);\n+        if (exInputList != null){\n+            for (ExperimentInputResource inputResource : exInputList){\n+                DataObjectType exInput = getInputOutput(inputResource);\n+                expInputs.add(exInput);\n+            }\n         }\n+\n         return expInputs;\n     }\n \n     public static List<DataObjectType> getExpOutputs (List<ExperimentOutputResource> experimentOutputResourceList){\n         List<DataObjectType> exOutputs = new ArrayList<DataObjectType>();\n-        for (ExperimentOutputResource outputResource : experimentOutputResourceList){\n-            DataObjectType output = getInputOutput(outputResource);\n-            exOutputs.add(output);\n+        if (experimentOutputResourceList != null){\n+            for (ExperimentOutputResource outputResource : experimentOutputResourceList){\n+                DataObjectType output = getInputOutput(outputResource);\n+                exOutputs.add(output);\n+            }\n         }\n         return exOutputs;\n     }\n \n     public static List<DataObjectType> getNodeInputs (List<NodeInputResource> nodeInputResources){\n         List<DataObjectType> nodeInputs = new ArrayList<DataObjectType>();\n-        for (NodeInputResource inputResource : nodeInputResources){\n-            DataObjectType nodeInput = getInputOutput(inputResource);\n-            nodeInputs.add(nodeInput);\n+        if (nodeInputResources != null){\n+            for (NodeInputResource inputResource : nodeInputResources){\n+                DataObjectType nodeInput = getInputOutput(inputResource);\n+                nodeInputs.add(nodeInput);\n+            }\n         }\n         return nodeInputs;\n     }\n \n     public static List<DataObjectType> getNodeOutputs (List<NodeOutputResource> nodeOutputResourceList){\n         List<DataObjectType> nodeOutputs = new ArrayList<DataObjectType>();\n-        for (NodeOutputResource outputResource : nodeOutputResourceList){\n-            DataObjectType output = getInputOutput(outputResource);\n-            nodeOutputs.add(output);\n+        if (nodeOutputResourceList != null){\n+            for (NodeOutputResource outputResource : nodeOutputResourceList){\n+                DataObjectType output = getInputOutput(outputResource);\n+                nodeOutputs.add(output);\n+            }\n         }\n         return nodeOutputs;\n     }\n \n     public static List<DataObjectType> getApplicationInputs (List<ApplicationInputResource> applicationInputResources){\n         List<DataObjectType> appInputs = new ArrayList<DataObjectType>();\n-        for (ApplicationInputResource inputResource : applicationInputResources){\n-            DataObjectType appInput = getInputOutput(inputResource);\n-            appInputs.add(appInput);\n+        if (applicationInputResources != null){\n+            for (ApplicationInputResource inputResource : applicationInputResources){\n+                DataObjectType appInput = getInputOutput(inputResource);\n+                appInputs.add(appInput);\n+            }\n         }\n+\n         return appInputs;\n     }\n \n     public static List<DataObjectType> getApplicationOutputs (List<ApplicationOutputResource> outputResources){\n         List<DataObjectType> appOutputs = new ArrayList<DataObjectType>();\n-        for (ApplicationOutputResource outputResource : outputResources){\n-            DataObjectType output = getInputOutput(outputResource);\n-            appOutputs.add(output);\n+        if (outputResources != null){\n+            for (ApplicationOutputResource outputResource : outputResources){\n+                DataObjectType output = getInputOutput(outputResource);\n+                appOutputs.add(output);\n+            }\n         }\n+\n         return appOutputs;\n     }\n \n     public static ExperimentStatus getExperimentStatus(StatusResource status){\n         ExperimentStatus experimentStatus = new ExperimentStatus();\n-        experimentStatus.setExperimentState(ExperimentState.valueOf(status.getState()));\n-        experimentStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        if (status != null){\n+            experimentStatus.setExperimentState(ExperimentState.valueOf(status.getState()));\n+            experimentStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+            return experimentStatus;\n+        }\n         return experimentStatus;\n     }\n \n     public static WorkflowNodeStatus getWorkflowNodeStatus (StatusResource status){\n         WorkflowNodeStatus workflowNodeStatus = new WorkflowNodeStatus();\n-        workflowNodeStatus.setWorkflowNodeState(WorkflowNodeState.valueOf(status.getState()));\n-        workflowNodeStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        if (status != null){\n+            workflowNodeStatus.setWorkflowNodeState(WorkflowNodeState.valueOf(status.getState()));\n+            workflowNodeStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        }\n         return workflowNodeStatus;\n     }\n \n     public static TaskStatus getTaskStatus (StatusResource status){\n         TaskStatus taskStatus = new TaskStatus();\n-        taskStatus.setExecutionState(TaskState.valueOf(status.getState()));\n-        taskStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        if (status != null){\n+            taskStatus.setExecutionState(TaskState.valueOf(status.getState()));\n+            taskStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        }\n         return taskStatus;\n     }\n \n     public static JobStatus getJobStatus (StatusResource status){\n         JobStatus jobStatus = new JobStatus();\n-        jobStatus.setJobState(JobState.valueOf(status.getState()));\n-        jobStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        if (status != null){\n+            jobStatus.setJobState(JobState.valueOf(status.getState()));\n+            jobStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        }\n         return jobStatus;\n     }\n \n     public static TransferStatus getTransferStatus (StatusResource status){\n         TransferStatus transferStatus = new TransferStatus();\n-        transferStatus.setTransferState(TransferState.valueOf(status.getState()));\n-        transferStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        if (status != null){\n+            transferStatus.setTransferState(TransferState.valueOf(status.getState()));\n+            transferStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        }\n+\n         return transferStatus;\n     }\n \n     public static ApplicationStatus getApplicationStatus (StatusResource status){\n         ApplicationStatus applicationStatus = new ApplicationStatus();\n-        applicationStatus.setApplicationState(status.getState());\n-        applicationStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        if (status != null){\n+            applicationStatus.setApplicationState(status.getState());\n+            applicationStatus.setTimeOfStateChange(status.getStatusUpdateTime().getTime());\n+        }\n         return applicationStatus;\n     }\n \n     public static List<WorkflowNodeStatus> getWorkflowNodeStatusList(List<StatusResource> statuses){\n         List<WorkflowNodeStatus> wfNodeStatuses = new ArrayList<WorkflowNodeStatus>();\n-        for (StatusResource statusResource : statuses){\n-            wfNodeStatuses.add(getWorkflowNodeStatus(statusResource));\n+        if (statuses != null){\n+            for (StatusResource statusResource : statuses){\n+                wfNodeStatuses.add(getWorkflowNodeStatus(statusResource));\n+            }\n         }\n         return wfNodeStatuses;\n     }\n \n     public static WorkflowNodeDetails getWorkflowNodeDetails(WorkflowNodeDetailResource nodeDetailResource){\n         WorkflowNodeDetails wfNode = new WorkflowNodeDetails();\n-        wfNode.setNodeInstanceId(nodeDetailResource.getNodeInstanceId());\n-        wfNode.setCreationTime(nodeDetailResource.getCreationTime().getTime());\n-        wfNode.setNodeName(nodeDetailResource.getNodeName());\n-        List<NodeInputResource> nodeInputs = nodeDetailResource.getNodeInputs();\n-        wfNode.setNodeInputs(getNodeInputs(nodeInputs));\n-        List<NodeOutputResource> nodeOutputs = nodeDetailResource.getNodeOutputs();\n-        wfNode.setNodeOutputs(getNodeOutputs(nodeOutputs));\n-        List<TaskDetailResource> taskDetails = nodeDetailResource.getTaskDetails();\n-        wfNode.setTaskDetailsList(getTaskDetailsList(taskDetails));\n-        wfNode.setWorkflowNodeStatus(getWorkflowNodeStatus(nodeDetailResource.getWorkflowNodeStatus()));\n-        List<ErrorDetailResource> errorDetails = nodeDetailResource.getErrorDetails();\n-        wfNode.setErrors(getErrorDetailList(errorDetails));\n+        if (nodeDetailResource != null){\n+            wfNode.setNodeInstanceId(nodeDetailResource.getNodeInstanceId());\n+            wfNode.setCreationTime(nodeDetailResource.getCreationTime().getTime());\n+            wfNode.setNodeName(nodeDetailResource.getNodeName());\n+            List<NodeInputResource> nodeInputs = nodeDetailResource.getNodeInputs();\n+            wfNode.setNodeInputs(getNodeInputs(nodeInputs));\n+            List<NodeOutputResource> nodeOutputs = nodeDetailResource.getNodeOutputs();\n+            wfNode.setNodeOutputs(getNodeOutputs(nodeOutputs));\n+            List<TaskDetailResource> taskDetails = nodeDetailResource.getTaskDetails();\n+            wfNode.setTaskDetailsList(getTaskDetailsList(taskDetails));\n+            wfNode.setWorkflowNodeStatus(getWorkflowNodeStatus(nodeDetailResource.getWorkflowNodeStatus()));\n+            List<ErrorDetailResource> errorDetails = nodeDetailResource.getErrorDetails();\n+            wfNode.setErrors(getErrorDetailList(errorDetails));\n+        }\n+\n         return wfNode;\n     }\n \n     public static List<WorkflowNodeDetails> getWfNodeList (List<WorkflowNodeDetailResource> resources){\n         List<WorkflowNodeDetails> workflowNodeDetailsList = new ArrayList<WorkflowNodeDetails>();\n-        for (WorkflowNodeDetailResource resource : resources){\n-            workflowNodeDetailsList.add(getWorkflowNodeDetails(resource));\n+        if (resources != null){\n+            for (WorkflowNodeDetailResource resource : resources){\n+                workflowNodeDetailsList.add(getWorkflowNodeDetails(resource));\n+            }\n         }\n         return workflowNodeDetailsList;\n     }\n \n     public static TaskDetails getTaskDetail (TaskDetailResource taskDetailResource){\n         TaskDetails taskDetails = new TaskDetails();\n-        taskDetails.setTaskID(taskDetailResource.getTaskId());\n-        taskDetails.setApplicationId(taskDetailResource.getApplicationId());\n-        taskDetails.setApplicationVersion(taskDetailResource.getApplicationVersion());\n-        List<ApplicationInputResource> applicationInputs = taskDetailResource.getApplicationInputs();\n-        taskDetails.setApplicationInputs(getApplicationInputs(applicationInputs));\n-        List<ApplicationOutputResource> applicationOutputs = taskDetailResource.getApplicationOutputs();\n-        taskDetails.setApplicationOutputs(getApplicationOutputs(applicationOutputs));\n-        ComputationSchedulingResource computationScheduling = taskDetailResource.getComputationScheduling(taskDetailResource.getTaskId());\n-        taskDetails.setTaskScheduling(getComputationalResourceScheduling(computationScheduling));\n-        AdvanceInputDataHandlingResource inputDataHandling = taskDetailResource.getInputDataHandling(taskDetailResource.getTaskId());\n-        taskDetails.setAdvancedInputDataHandling(getAdvanceInputDataHandling(inputDataHandling));\n-        AdvancedOutputDataHandlingResource outputDataHandling = taskDetailResource.getOutputDataHandling(taskDetailResource.getTaskId());\n-        taskDetails.setAdvancedOutputDataHandling(getAdvanceOutputDataHandling(outputDataHandling));\n-        taskDetails.setTaskStatus(getTaskStatus(taskDetailResource.getTaskStatus()));\n-        List<JobDetailResource> jobDetailList = taskDetailResource.getJobDetailList();\n-        taskDetails.setJobDetailsList(getJobDetailsList(jobDetailList));\n-        taskDetails.setErrors(getErrorDetailList(taskDetailResource.getErrorDetailList()));\n-        taskDetails.setDataTransferDetailsList(getDataTransferlList(taskDetailResource.getDataTransferDetailList()));\n+        if (taskDetailResource != null){\n+            taskDetails.setTaskID(taskDetailResource.getTaskId());\n+            taskDetails.setApplicationId(taskDetailResource.getApplicationId());\n+            taskDetails.setApplicationVersion(taskDetailResource.getApplicationVersion());\n+            List<ApplicationInputResource> applicationInputs = taskDetailResource.getApplicationInputs();\n+            taskDetails.setApplicationInputs(getApplicationInputs(applicationInputs));\n+            List<ApplicationOutputResource> applicationOutputs = taskDetailResource.getApplicationOutputs();\n+            taskDetails.setApplicationOutputs(getApplicationOutputs(applicationOutputs));\n+            ComputationSchedulingResource computationScheduling = taskDetailResource.getComputationScheduling(taskDetailResource.getTaskId());\n+            taskDetails.setTaskScheduling(getComputationalResourceScheduling(computationScheduling));\n+            AdvanceInputDataHandlingResource inputDataHandling = taskDetailResource.getInputDataHandling(taskDetailResource.getTaskId());\n+            taskDetails.setAdvancedInputDataHandling(getAdvanceInputDataHandling(inputDataHandling));\n+            AdvancedOutputDataHandlingResource outputDataHandling = taskDetailResource.getOutputDataHandling(taskDetailResource.getTaskId());\n+            taskDetails.setAdvancedOutputDataHandling(getAdvanceOutputDataHandling(outputDataHandling));\n+            taskDetails.setTaskStatus(getTaskStatus(taskDetailResource.getTaskStatus()));\n+            List<JobDetailResource> jobDetailList = taskDetailResource.getJobDetailList();\n+            taskDetails.setJobDetailsList(getJobDetailsList(jobDetailList));\n+            taskDetails.setErrors(getErrorDetailList(taskDetailResource.getErrorDetailList()));\n+            taskDetails.setDataTransferDetailsList(getDataTransferlList(taskDetailResource.getDataTransferDetailList()));\n+        }\n+\n         return taskDetails;\n     }\n \n     public static List<TaskDetails> getTaskDetailsList (List<TaskDetailResource> resources){\n         List<TaskDetails> taskDetailsList = new ArrayList<TaskDetails>();\n-        for (TaskDetailResource resource : resources){\n-            taskDetailsList.add(getTaskDetail(resource));\n+        if (resources != null){\n+            for (TaskDetailResource resource : resources){\n+                taskDetailsList.add(getTaskDetail(resource));\n+            }\n         }\n+\n         return taskDetailsList;\n     }\n \n     public static List<JobDetails> getJobDetailsList(List<JobDetailResource> jobs){\n         List<JobDetails> jobDetailsList = new ArrayList<JobDetails>();\n-        for (JobDetailResource resource : jobs){\n-            jobDetailsList.add(getJobDetail(resource));\n+        if (jobs != null){\n+            for (JobDetailResource resource : jobs){\n+                jobDetailsList.add(getJobDetail(resource));\n+            }\n         }\n         return jobDetailsList;\n     }\n \n \n     public static JobDetails getJobDetail(JobDetailResource jobDetailResource){\n         JobDetails jobDetails = new JobDetails();\n-        jobDetails.setJobID(jobDetailResource.getJobId());\n-        jobDetails.setJobDescription(jobDetailResource.getJobDescription());\n-        jobDetails.setCreationTime(jobDetailResource.getCreationTime().getTime());\n-        StatusResource jobStatus = jobDetailResource.getJobStatus();\n-        jobDetails.setJobStatus(getJobStatus(jobStatus));\n-        StatusResource applicationStatus = jobDetailResource.getApplicationStatus();\n-        jobDetails.setApplicationStatus(getApplicationStatus(applicationStatus));\n-        List<ErrorDetailResource> errorDetails = jobDetailResource.getErrorDetails();\n-        jobDetails.setErrors(getErrorDetailList(errorDetails));\n-        jobDetails.setComputeResourceConsumed(jobDetailResource.getComputeResourceConsumed());\n+        if (jobDetailResource != null){\n+            jobDetails.setJobID(jobDetailResource.getJobId());\n+            jobDetails.setJobDescription(jobDetailResource.getJobDescription());\n+            jobDetails.setCreationTime(jobDetailResource.getCreationTime().getTime());\n+            StatusResource jobStatus = jobDetailResource.getJobStatus();\n+            jobDetails.setJobStatus(getJobStatus(jobStatus));\n+            StatusResource applicationStatus = jobDetailResource.getApplicationStatus();\n+            jobDetails.setApplicationStatus(getApplicationStatus(applicationStatus));\n+            List<ErrorDetailResource> errorDetails = jobDetailResource.getErrorDetails();\n+            jobDetails.setErrors(getErrorDetailList(errorDetails));\n+            jobDetails.setComputeResourceConsumed(jobDetailResource.getComputeResourceConsumed());\n+        }\n         return jobDetails;\n     }\n \n     public static ErrorDetails getErrorDetails (ErrorDetailResource resource){\n         ErrorDetails errorDetails = new ErrorDetails();\n-        errorDetails.setErrorID(String.valueOf(resource.getErrorId()));\n-        errorDetails.setCreationTime(resource.getCreationTime().getTime());\n-        errorDetails.setActualErrorMessage(resource.getActualErrorMsg());\n-        errorDetails.setUserFriendlyMessage(resource.getUserFriendlyErrorMsg());\n-        errorDetails.setErrorCategory(ErrorCategory.valueOf(resource.getErrorCategory()));\n-        errorDetails.setTransientOrPersistent(resource.isTransientPersistent());\n-        errorDetails.setCorrectiveAction(CorrectiveAction.valueOf(resource.getCorrectiveAction()));\n-        errorDetails.setActionableGroup(ActionableGroup.valueOf(resource.getActionableGroup()));\n+        if (resource != null){\n+            errorDetails.setErrorID(String.valueOf(resource.getErrorId()));\n+            errorDetails.setCreationTime(resource.getCreationTime().getTime());\n+            errorDetails.setActualErrorMessage(resource.getActualErrorMsg());\n+            errorDetails.setUserFriendlyMessage(resource.getUserFriendlyErrorMsg());\n+            errorDetails.setErrorCategory(ErrorCategory.valueOf(resource.getErrorCategory()));\n+            errorDetails.setTransientOrPersistent(resource.isTransientPersistent());\n+            errorDetails.setCorrectiveAction(CorrectiveAction.valueOf(resource.getCorrectiveAction()));\n+            errorDetails.setActionableGroup(ActionableGroup.valueOf(resource.getActionableGroup()));\n+        }\n         return errorDetails;\n \n     }\n \n     public static List<ErrorDetails> getErrorDetailList (List<ErrorDetailResource> errorDetailResources){\n         List<ErrorDetails> errorDetailsList = new ArrayList<ErrorDetails>();\n-        for (ErrorDetailResource errorDetailResource : errorDetailResources){\n-            errorDetailsList.add(getErrorDetails(errorDetailResource));\n+        if (errorDetailResources != null){\n+            for (ErrorDetailResource errorDetailResource : errorDetailResources){\n+                errorDetailsList.add(getErrorDetails(errorDetailResource));\n+            }\n         }\n         return errorDetailsList;\n     }\n \n     public static DataTransferDetails getDataTransferDetail (DataTransferDetailResource resource){\n         DataTransferDetails details = new DataTransferDetails();\n-        details.setTransferID(resource.getTransferId());\n-        details.setCreationTime(resource.getCreationTime().getTime());\n-        details.setTransferDescription(resource.getTransferDescription());\n-        details.setTransferStatus(getTransferStatus(resource.getDataTransferStatus()));\n+        if (resource != null){\n+            details.setTransferID(resource.getTransferId());\n+            details.setCreationTime(resource.getCreationTime().getTime());\n+            details.setTransferDescription(resource.getTransferDescription());\n+            details.setTransferStatus(getTransferStatus(resource.getDataTransferStatus()));\n+        }\n         return details;\n     }\n \n     public static List<DataTransferDetails> getDataTransferlList (List<DataTransferDetailResource> resources){\n         List<DataTransferDetails> transferDetailsList = new ArrayList<DataTransferDetails>();\n-        for (DataTransferDetailResource resource : resources){\n-            transferDetailsList.add(getDataTransferDetail(resource));\n+        if (resources != null){\n+            for (DataTransferDetailResource resource : resources){\n+                transferDetailsList.add(getDataTransferDetail(resource));\n+            }\n         }\n         return transferDetailsList;\n     }\n \n \n     public static UserConfigurationData getUserConfigData (ConfigDataResource resource){\n         UserConfigurationData data = new UserConfigurationData();\n-        data.setAiravataAutoSchedule(resource.isAiravataAutoSchedule());\n-        data.setOverrideManualScheduledParams(resource.isOverrideManualParams());\n-        data.setShareExperimentPublicly(resource.isShareExp());\n-        ExperimentResource experimentResource = resource.getExperimentResource();\n-        String expID = experimentResource.getExpID();\n-        ComputationSchedulingResource computationScheduling = experimentResource.getComputationScheduling(expID);\n-        AdvanceInputDataHandlingResource inputDataHandling = experimentResource.getInputDataHandling(expID);\n-        AdvancedOutputDataHandlingResource outputDataHandling = experimentResource.getOutputDataHandling(expID);\n-        data.setAdvanceInputDataHandling(getAdvanceInputDataHandling(inputDataHandling));\n-        data.setAdvanceOutputDataHandling(getAdvanceOutputDataHandling(outputDataHandling));\n-        data.setComputationalResourceScheduling(getComputationalResourceScheduling(computationScheduling));\n-        data.setQosParams(getQOSParams(experimentResource.getQOSparams(expID)));\n+        if (resource != null){\n+            data.setAiravataAutoSchedule(resource.isAiravataAutoSchedule());\n+            data.setOverrideManualScheduledParams(resource.isOverrideManualParams());\n+            data.setShareExperimentPublicly(resource.isShareExp());\n+            ExperimentResource experimentResource = resource.getExperimentResource();\n+            String expID = experimentResource.getExpID();\n+            ComputationSchedulingResource computationScheduling = experimentResource.getComputationScheduling(expID);\n+            AdvanceInputDataHandlingResource inputDataHandling = experimentResource.getInputDataHandling(expID);\n+            AdvancedOutputDataHandlingResource outputDataHandling = experimentResource.getOutputDataHandling(expID);\n+            data.setAdvanceInputDataHandling(getAdvanceInputDataHandling(inputDataHandling));\n+            data.setAdvanceOutputDataHandling(getAdvanceOutputDataHandling(outputDataHandling));\n+            data.setComputationalResourceScheduling(getComputationalResourceScheduling(computationScheduling));\n+            data.setQosParams(getQOSParams(experimentResource.getQOSparams(expID)));\n+        }\n+\n         return data;\n     }\n \n \n     public static ComputationalResourceScheduling getComputationalResourceScheduling (ComputationSchedulingResource csr){\n         ComputationalResourceScheduling scheduling = new ComputationalResourceScheduling();\n-        scheduling.setResourceHostId(csr.getResourceHostId());\n-        scheduling.setTotalCPUCount(csr.getCpuCount());\n-        scheduling.setNodeCount(csr.getNodeCount());\n-        scheduling.setNumberOfThreads(csr.getNumberOfThreads());\n-        scheduling.setQueueName(csr.getQueueName());\n-        scheduling.setWallTimeLimit(csr.getWalltimeLimit());\n-        scheduling.setJobStartTime((int)csr.getJobStartTime().getTime());\n-        scheduling.setTotalPhysicalMemory(csr.getPhysicalMemory());\n-        scheduling.setComputationalProjectAccount(csr.getProjectName());\n+        if (csr != null){\n+            scheduling.setResourceHostId(csr.getResourceHostId());\n+            scheduling.setTotalCPUCount(csr.getCpuCount());\n+            scheduling.setNodeCount(csr.getNodeCount());\n+            scheduling.setNumberOfThreads(csr.getNumberOfThreads());\n+            scheduling.setQueueName(csr.getQueueName());\n+            scheduling.setWallTimeLimit(csr.getWalltimeLimit());\n+            scheduling.setJobStartTime((int)csr.getJobStartTime().getTime());\n+            scheduling.setTotalPhysicalMemory(csr.getPhysicalMemory());\n+            scheduling.setComputationalProjectAccount(csr.getProjectName());\n+        }\n+\n         return scheduling;\n     }\n \n     public static AdvancedInputDataHandling getAdvanceInputDataHandling(AdvanceInputDataHandlingResource adhr){\n         AdvancedInputDataHandling adih = new AdvancedInputDataHandling();\n-        adih.setStageInputFilesToWorkingDir(adhr.isStageInputFiles());\n-        adih.setParentWorkingDirectory(adhr.getWorkingDirParent());\n-        adih.setUniqueWorkingDirectory(adhr.getWorkingDir());\n-        adih.setCleanUpWorkingDirAfterJob(adhr.isCleanAfterJob());\n+        if (adhr != null){\n+            adih.setStageInputFilesToWorkingDir(adhr.isStageInputFiles());\n+            adih.setParentWorkingDirectory(adhr.getWorkingDirParent());\n+            adih.setUniqueWorkingDirectory(adhr.getWorkingDir());\n+            adih.setCleanUpWorkingDirAfterJob(adhr.isCleanAfterJob());\n+        }\n         return adih;\n     }\n \n     public static AdvancedOutputDataHandling getAdvanceOutputDataHandling(AdvancedOutputDataHandlingResource adodh){\n         AdvancedOutputDataHandling outputDataHandling = new AdvancedOutputDataHandling();\n-        outputDataHandling.setOutputDataDir(adodh.getOutputDataDir());\n-        outputDataHandling.setDataRegistryURL(adodh.getDataRegUrl());\n-        outputDataHandling.setPersistOutputData(adodh.isPersistOutputData());\n+        if (adodh != null){\n+            outputDataHandling.setOutputDataDir(adodh.getOutputDataDir());\n+            outputDataHandling.setDataRegistryURL(adodh.getDataRegUrl());\n+            outputDataHandling.setPersistOutputData(adodh.isPersistOutputData());\n+        }\n         return outputDataHandling;\n     }\n \n     public static QualityOfServiceParams getQOSParams (QosParamResource qos){\n         QualityOfServiceParams qosParams = new QualityOfServiceParams();\n-        qosParams.setStartExecutionAt(qos.getStartExecutionAt());\n-        qosParams.setExecuteBefore(qos.getExecuteBefore());\n-        qosParams.setNumberofRetries(qos.getNoOfRetries());\n+        if (qos != null){\n+            qosParams.setStartExecutionAt(qos.getStartExecutionAt());\n+            qosParams.setExecuteBefore(qos.getExecuteBefore());\n+            qosParams.setNumberofRetries(qos.getNoOfRetries());\n+        }\n         return qosParams;\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/cc19eed947797706f151d4bce222ca9cb195b14d",
        "message": "Handled NPE thrown by savePluginData method.",
        "bug_id": "airavata_34",
        "file": [
            {
                "sha": "58ef8550d9097f670fccaa7f8c71969e66380106",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/handler/AppDescriptorCheckHandler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/handler/AppDescriptorCheckHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/handler/AppDescriptorCheckHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/handler/AppDescriptorCheckHandler.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -55,7 +55,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n \n \n         logger.info(\"Recoverable data is saving to zk: \" + data.toString());\n-        GFacUtils.savePluginData(jobExecutionContext, data,this.getClass().getName());\n+        GFacUtils.saveHandlerData(jobExecutionContext, data, this.getClass().getName());\n     }\n \n \n@@ -66,7 +66,7 @@ public void initProperties(Properties properties) throws GFacHandlerException {\n \n     public void recover(JobExecutionContext jobExecutionContext) throws GFacHandlerException {\n         try {\n-            String s = GFacUtils.getPluginData(jobExecutionContext, this.getClass().getName());\n+            String s = GFacUtils.getHandlerData(jobExecutionContext, this.getClass().getName());\n             String[] split = s.split(\",\");                   // this is ugly code but nobody else is saving or reading this data, so this is the fastest way\n             jobExecutionContext.getApplicationContext().getComputeResourcePreference().setScratchLocation(split[0]);\n             jobExecutionContext.setWorkingDir(split[1]);"
            },
            {
                "sha": "8966091fc4e2ad5d01e067ed846389ffbd2263cc",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "status": "modified",
                "additions": 12,
                "deletions": 8,
                "changes": 20,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -192,7 +192,7 @@ public static String createGsiftpURIAsString(String host, String localPath)\n \tpublic static void saveJobStatus(JobExecutionContext jobExecutionContext,\n                                      JobDetails details, JobState state, MonitorPublisher monitorPublisher) throws GFacException {\n \t\ttry {\n-            // first we save job details to the registry for safe side and then save the job status.\n+            // first we save job details to the registry for sa and then save the job status.\n             Registry registry = jobExecutionContext.getRegistry();\n             JobStatus status = new JobStatus();\n             status.setJobState(state);\n@@ -581,8 +581,8 @@ public static boolean isCancelled(String experimentID, ZooKeeper zk\n         return false;\n     }\n \n-    public static void savePluginData(JobExecutionContext jobExecutionContext,\n-\t\t\tStringBuffer data, String className) throws GFacHandlerException {\n+    public static void saveHandlerData(JobExecutionContext jobExecutionContext,\n+                                       StringBuffer data, String className) throws GFacHandlerException {\n \t\ttry {\n \t\t\tZooKeeper zk = jobExecutionContext.getZk();\n \t\t\tif (zk != null) {\n@@ -591,16 +591,20 @@ public static void savePluginData(JobExecutionContext jobExecutionContext,\n \t\t\t\t\t\t\t\tjobExecutionContext.getExperimentID(),\n \t\t\t\t\t\t\t\tclassName);\n \t\t\t\tStat exists = zk.exists(expZnodeHandlerPath, false);\n-\t\t\t\tzk.setData(expZnodeHandlerPath, data.toString().getBytes(),\n-\t\t\t\t\t\texists.getVersion());\n-\t\t\t}\n+                if (exists != null) {\n+                    zk.setData(expZnodeHandlerPath, data.toString().getBytes(),\n+                            exists.getVersion());\n+                } else {\n+                    log.error(\"Saving Handler data failed, Stat is null\");\n+                }\n+            }\n \t\t} catch (Exception e) {\n \t\t\tthrow new GFacHandlerException(e);\n \t\t}\n \t}\n \n-\tpublic static String getPluginData(JobExecutionContext jobExecutionContext,\n-\t\t\tString className) throws ApplicationSettingsException,\n+\tpublic static String getHandlerData(JobExecutionContext jobExecutionContext,\n+                                        String className) throws ApplicationSettingsException,\n \t\t\tKeeperException, InterruptedException {\n \t\tZooKeeper zk = jobExecutionContext.getZk();\n \t\tif (zk != null) {"
            },
            {
                "sha": "3b36e860db9ee3845cfd13aa96648757fd7f1095",
                "filename": "modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -81,7 +81,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                 log.info(\"Successfully retrieved the Security Context\");\n             }\n \n-            String pluginData = GFacUtils.getPluginData(jobExecutionContext, this.getClass().getName());\n+            String pluginData = GFacUtils.getHandlerData(jobExecutionContext, this.getClass().getName());\n             if (pluginData != null) {\n                 try {\n                     oldIndex = Integer.parseInt(pluginData.split(\"\\\\|\")[0].trim());\n@@ -131,7 +131,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                         detail.setTransferDescription(\"Input Data Staged: \" + stageInputFile);\n                         registry.add(ChildDataType.DATA_TRANSFER_DETAIL, detail, jobExecutionContext.getTaskData().getTaskID());\n \n-                        GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                        GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                     }\n                 } // FIXME: what is the thrift model DataType equivalent for URIArray type?\n //                else if (\"URIArray\".equals(inputParamType.getType().getType().toString())) {"
            },
            {
                "sha": "18dcb97bfc3509e36ef6644a6cd33a43f534cf9b",
                "filename": "modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHOutputHandler.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHOutputHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHOutputHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHOutputHandler.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -91,7 +91,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n             }\n \n             // Get the Stdouts and StdErrs\n-            String pluginData = GFacUtils.getPluginData(jobExecutionContext, this.getClass().getName());\n+            String pluginData = GFacUtils.getHandlerData(jobExecutionContext, this.getClass().getName());\n             if (pluginData != null) {\n                 try {\n                     oldIndex = Integer.parseInt(pluginData.split(\"\\\\|\")[0].trim());\n@@ -143,7 +143,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                 }\n                 \n                 StringBuffer temp = new StringBuffer(data.append(localStdOutFile.getAbsolutePath()).append(\",\").toString());\n-                GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n             }\n             if (index < oldIndex) {\n                 localStdErrFile = new File(oldFiles.get(index));\n@@ -152,7 +152,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                 localStdErrFile = new File(outputDataDir + File.separator + jobExecutionContext.getApplicationName() + \".stderr\");\n                 cluster.scpFrom(jobExecutionContext.getStandardError(), localStdErrFile.getAbsolutePath());\n                 StringBuffer temp = new StringBuffer(data.append(localStdErrFile.getAbsolutePath()).append(\",\").toString());\n-                GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n             }\n \n             String stdErrStr = GFacUtils.readFileToString(localStdErrFile.getAbsolutePath());\n@@ -207,7 +207,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                                     String fileName = downloadFile.substring(downloadFile.lastIndexOf(File.separatorChar) + 1, downloadFile.length());\n                                     localFile = outputDataDir + File.separator + fileName;\n                                     StringBuffer temp = new StringBuffer(data.append(localFile).append(\",\").toString());\n-                                    GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                                    GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                                 }\n                                 jobExecutionContext.addOutputFile(localFile);\n                                 outputDataObjectType1.setValue(localFile);\n@@ -225,7 +225,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                                     String fileName = localStdOutFile.getName();\n                                     localFile = outputDataDir + File.separator + fileName;\n                                     StringBuffer temp = new StringBuffer(data.append(localFile).append(\",\").toString());\n-                                    GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                                    GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                                 }\n                                 jobExecutionContext.addOutputFile(localFile);\n                                 outputDataObjectType1.setValue(localFile);\n@@ -243,7 +243,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                                     String fileName = localStdErrFile.getName();\n                                     localFile = outputDataDir + File.separator + fileName;\n                                     StringBuffer temp = new StringBuffer(data.append(localFile).append(\",\").toString());\n-                                    GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                                    GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                                 }\n                                 jobExecutionContext.addOutputFile(localFile);\n                                 outputDataObjectType1.setValue(localFile);\n@@ -266,7 +266,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                             outputFile = outputDataDir + File.separator + valueList;\n                             jobExecutionContext.addOutputFile(outputFile);\n                             StringBuffer temp = new StringBuffer(data.append(outputFile).append(\",\").toString());\n-                            GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                            GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                         }\n                         jobExecutionContext.addOutputFile(outputFile);\n                         outputDataObjectType.setValue(outputFile);"
            },
            {
                "sha": "444ebf23e00cd696da86f9cd4e37a145087fd0a1",
                "filename": "modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/provider/impl/GSISSHProvider.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/provider/impl/GSISSHProvider.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/provider/impl/GSISSHProvider.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/provider/impl/GSISSHProvider.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -136,7 +136,7 @@ public void execute(JobExecutionContext jobExecutionContext) throws GFacProvider\n         } finally {\n             log.info(\"Saving data for future recovery: \");\n             log.info(data.toString());\n-            GFacUtils.savePluginData(jobExecutionContext, data, this.getClass().getName());\n+            GFacUtils.saveHandlerData(jobExecutionContext, data, this.getClass().getName());\n         } \n           \n     }\n@@ -235,7 +235,7 @@ public void recover(JobExecutionContext jobExecutionContext) throws GFacProvider\n         String jobId = \"\";\n         String jobDesc = \"\";\n         try {\n-            String pluginData = GFacUtils.getPluginData(jobExecutionContext, this.getClass().getName());\n+            String pluginData = GFacUtils.getHandlerData(jobExecutionContext, this.getClass().getName());\n             String[] split = pluginData.split(\",\");\n             if (split.length < 2) {\n                 try {"
            },
            {
                "sha": "46f1dc382cc7a0e030b1fe6ff8ecc81d20bb216f",
                "filename": "modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/AdvancedSCPInputHandler.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/AdvancedSCPInputHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/AdvancedSCPInputHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/AdvancedSCPInputHandler.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -96,7 +96,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n         Cluster pbsCluster = null;\n \n         try {\n-            String pluginData = GFacUtils.getPluginData(jobExecutionContext, this.getClass().getName());\n+            String pluginData = GFacUtils.getHandlerData(jobExecutionContext, this.getClass().getName());\n             if (pluginData != null) {\n                 try {\n                     oldIndex = Integer.parseInt(pluginData.split(\"\\\\|\")[0].trim());\n@@ -128,7 +128,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n             } else {\n                 (new File(parentPath)).mkdirs();\n                 StringBuffer temp = new StringBuffer(data.append(parentPath).append(\",\").toString());\n-                GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n             }\n             DataTransferDetails detail = new DataTransferDetails();\n             TransferStatus status = new TransferStatus();\n@@ -168,7 +168,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                         detail.setTransferDescription(\"Input Data Staged: \" + stageInputFile);\n                         registry.add(ChildDataType.DATA_TRANSFER_DETAIL, detail, jobExecutionContext.getTaskData().getTaskID());\n \n-                        GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                        GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                     }\n                 }\n                 // FIXME: what is the thrift model DataType equivalent for URIArray type?"
            },
            {
                "sha": "b2210a9c679072c359e85f3a07536a222635da8b",
                "filename": "modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/SSHInputHandler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/SSHInputHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/SSHInputHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/handler/SSHInputHandler.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -110,7 +110,7 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n                         detail.setTransferDescription(\"Input Data Staged: \" + stageInputFile);\n                         registry.add(ChildDataType.DATA_TRANSFER_DETAIL, detail, jobExecutionContext.getTaskData().getTaskID());\n \n-                        GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+                        GFacUtils.saveHandlerData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                     }\n                 }// FIXME: what is the thrift model DataType equivalent for URIArray type?\n //                else if (\"URIArray\".equals(actualParameter.getType().getType().toString())) {"
            },
            {
                "sha": "5cb111a860f80a50563585b9ca8eef5ddb18f898",
                "filename": "modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/provider/impl/SSHProvider.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/provider/impl/SSHProvider.java",
                "raw_url": "https://github.com/apache/airavata/raw/acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/provider/impl/SSHProvider.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-ssh/src/main/java/org/apache/airavata/gfac/ssh/provider/impl/SSHProvider.java?ref=acf30c0131aa8f7ed3d5801fa558ab0d7a2342c5",
                "patch": "@@ -211,7 +211,7 @@ public void execute(JobExecutionContext jobExecutionContext) throws GFacProvider\n                 } finally {\n                     log.info(\"Saving data for future recovery: \");\n                     log.info(data.toString());\n-                    GFacUtils.savePluginData(jobExecutionContext, data, this.getClass().getName());\n+                    GFacUtils.saveHandlerData(jobExecutionContext, data, this.getClass().getName());\n                 }\n             } catch (GFacException e) {\n                 throw new GFacProviderException(e.getMessage(), e);\n@@ -379,7 +379,7 @@ public void recover(JobExecutionContext jobExecutionContext) throws GFacProvider\n             String jobDesc = \"\";\n             String jobName = \"\";\n             try {\n-                String pluginData = GFacUtils.getPluginData(jobExecutionContext, this.getClass().getName());\n+                String pluginData = GFacUtils.getHandlerData(jobExecutionContext, this.getClass().getName());\n                 String[] split = pluginData.split(\",\");\n                 if (split.length < 2) {\n                     this.execute(jobExecutionContext);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/2fa6af64b1846257e27289e60a982dfda6facecf",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/7781079dd6687eecd7afed0399c5ec681ed437c5",
        "message": "Fix AIRAVATA-1465 and NPE.",
        "bug_id": "airavata_35",
        "file": [
            {
                "sha": "4d338e39d31e17b4af39a07583d6a00f901dd4df",
                "filename": "modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/util/GFACGSISSHUtils.java",
                "status": "modified",
                "additions": 12,
                "deletions": 5,
                "changes": 17,
                "blob_url": "https://github.com/apache/airavata/blob/2fa6af64b1846257e27289e60a982dfda6facecf/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/util/GFACGSISSHUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/2fa6af64b1846257e27289e60a982dfda6facecf/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/util/GFACGSISSHUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/util/GFACGSISSHUtils.java?ref=2fa6af64b1846257e27289e60a982dfda6facecf",
                "patch": "@@ -20,6 +20,7 @@\n */\n package org.apache.airavata.gfac.gsissh.util;\n \n+import java.sql.SQLException;\n import java.util.*;\n \n import org.apache.airavata.common.exception.ApplicationSettingsException;\n@@ -57,6 +58,7 @@\n import org.apache.airavata.schemas.gfac.StringArrayType;\n import org.apache.airavata.schemas.gfac.URIArrayType;\n import org.apache.airavata.schemas.gfac.UnicoreHostType;\n+import org.apache.openjpa.lib.log.Log;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -84,11 +86,16 @@ public static void addSecurityContext(JobExecutionContext jobExecutionContext) t\n             GSISecurityContext context = null;\n             try {\n                 TokenizedMyProxyAuthInfo tokenizedMyProxyAuthInfo = new TokenizedMyProxyAuthInfo(requestData);\n-//                CredentialReader credentialReader = GFacUtils.getCredentialReader();\n-//                if(credentialReader != null){\n-//                \tCertificateCredential credential = (CertificateCredential)credentialReader.getCredential(ServerSettings.getDefaultUserGateway(), credentialStoreToken);\n-//                \t\trequestData.setMyProxyUserName(credential.getCommunityUser().getUserName());\n-//                }\n+                CredentialReader credentialReader = GFacUtils.getCredentialReader();\n+                if(credentialReader != null){\n+                \tCertificateCredential credential = null;\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tcredential = (CertificateCredential)credentialReader.getCredential(ServerSettings.getDefaultUserGateway(), credentialStoreToken);\n+\t\t\t      \t\trequestData.setMyProxyUserName(credential.getCommunityUser().getUserName());\n+\t\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\t\tlogger.error(e.getLocalizedMessage());\n+\t\t\t\t\t}\n+                }\n \n                 GsisshHostType gsisshHostType = (GsisshHostType) registeredHost.getType();\n                 String key = requestData.getMyProxyUserName() + registeredHost.getType().getHostAddress() +"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/703a92be62d82756aa1f54f852c415609b55a14d",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/12dd3c6846902f9b07b5cc6d895af6a90571e009",
        "message": "NPE in saving error details",
        "bug_id": "airavata_36",
        "file": [
            {
                "sha": "ffd767053a5f31c6e3cc380a2cf3f6ec95af19ad",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/apache/airavata/blob/703a92be62d82756aa1f54f852c415609b55a14d/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java",
                "raw_url": "https://github.com/apache/airavata/raw/703a92be62d82756aa1f54f852c415609b55a14d/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java?ref=703a92be62d82756aa1f54f852c415609b55a14d",
                "patch": "@@ -1291,10 +1291,16 @@ public String addErrorDetails(ErrorDetails error, Object id) throws Exception {\n                 errorResource.setCreationTime(AiravataUtils.getTime(error.getCreationTime()));\n                 errorResource.setActualErrorMsg(error.getActualErrorMessage());\n                 errorResource.setUserFriendlyErrorMsg(error.getUserFriendlyMessage());\n-                errorResource.setErrorCategory(error.getErrorCategory().toString());\n+                if (error.getErrorCategory() != null){\n+                    errorResource.setErrorCategory(error.getErrorCategory().toString());\n+                }\n                 errorResource.setTransientPersistent(error.isTransientOrPersistent());\n-                errorResource.setCorrectiveAction(error.getCorrectiveAction().toString());\n-                errorResource.setActionableGroup(error.getActionableGroup().toString());\n+                if (error.getCorrectiveAction() != null){\n+                    errorResource.setCorrectiveAction(error.getCorrectiveAction().toString());\n+                }\n+                if (error.getActionableGroup() != null){\n+                    errorResource.setActionableGroup(error.getActionableGroup().toString());\n+                }\n                 errorResource.save();\n                 return String.valueOf(errorResource.getErrorId());\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/6938f907f6d994a84f0ed6cd02291ed828211ca9",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/55aa6dfa0b58ff7cb1ec9c54e8b6ba551f2ec0b9",
        "message": "fixing priority order logic and NPE in monitor - AIRAVATA-1820",
        "bug_id": "airavata_37",
        "file": [
            {
                "sha": "2d045bdf37d2dd368d93e270e188ebfaf7826c1f",
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "status": "modified",
                "additions": 10,
                "deletions": 10,
                "changes": 20,
                "blob_url": "https://github.com/apache/airavata/blob/6938f907f6d994a84f0ed6cd02291ed828211ca9/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "raw_url": "https://github.com/apache/airavata/raw/6938f907f6d994a84f0ed6cd02291ed828211ca9/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java?ref=6938f907f6d994a84f0ed6cd02291ed828211ca9",
                "patch": "@@ -48,7 +48,7 @@\n public class CreateLaunchExperiment {\n \n     //FIXME: Read from a config file\n-    public static final String THRIFT_SERVER_HOST = \"localhost\";\n+    public static final String THRIFT_SERVER_HOST = \"gw56.iu.xsede.org\";\n     public static final int THRIFT_SERVER_PORT = 8930;\n //\tpublic static final String THRIFT_SERVER_HOST = \"gw111.iu.xsede.org\";\n //\tpublic static final int THRIFT_SERVER_PORT = 9930;\n@@ -58,7 +58,7 @@\n     public static final String DEFAULT_GATEWAY = \"default\";\n     private static Airavata.Client airavataClient;\n \n-    private static String echoAppId = \"Echo_b730bf47-6a22-44ac-91f3-91bd463bd627\";\n+    private static String echoAppId = \"Python_Echo_069ea651-4937-4b89-9684-fb0682ac52f5\";\n     private static String mpiAppId = \"HelloMPI_71b6f45e-40c2-46e9-a417-160b2640fcb9\";\n     private static String wrfAppId = \"WRF_7ad5da38-c08b-417c-a9ea-da9298839762\";\n     private static String amberAppId = \"Amber_74ad818e-7633-476a-b861-952de9b0a529\";\n@@ -967,19 +967,19 @@ public static String createExperimentEchoForLocalHost(Airavata.Client client) th\n     public static String createEchoExperimentForStampede(Airavata.Client client) throws TException {\n         try {\n             List<InputDataObjectType> exInputs = client.getApplicationInputs(new AuthzToken(\"\"), echoAppId);\n-            for (InputDataObjectType inputDataObjectType : exInputs) {\n-                if (inputDataObjectType.getName().equalsIgnoreCase(\"Input_to_Echo\")) {\n-                    inputDataObjectType.setValue(\"Hello World\");\n-                }\n-            }\n-            List<OutputDataObjectType> exOut = client.getApplicationOutputs(new AuthzToken(\"\"), echoAppId);\n+//            for (InputDataObjectType inputDataObjectType : exInputs) {\n+//                if (inputDataObjectType.getName().equalsIgnoreCase(\"Input_to_Echo\")) {\n+//                    inputDataObjectType.setValue(\"Hello World\");\n+//                }\n+//            }\n+//            List<OutputDataObjectType> exOut = client.getApplicationOutputs(new AuthzToken(\"\"), echoAppId);\n \n             Project project = ProjectModelUtil.createProject(\"default\", \"admin\", \"test project\");\n \t        String projectId = client.createProject(new AuthzToken(\"\"), DEFAULT_GATEWAY, project);\n \n             ExperimentModel simpleExperiment =\n                     ExperimentModelUtil.createSimpleExperiment(DEFAULT_GATEWAY,projectId, \"admin\", \"echoExperiment\", \"SimpleEcho3\", echoAppId, exInputs);\n-            simpleExperiment.setExperimentOutputs(exOut);\n+//            simpleExperiment.setExperimentOutputs(exOut);\n \n             Map<String, String> computeResources = airavataClient.getAvailableAppInterfaceComputeResources(new AuthzToken(\"\"), echoAppId);\n             if (computeResources != null && computeResources.size() != 0) {\n@@ -1441,7 +1441,7 @@ public static String createExperimentForTrestlesAmber(Airavata.Client client) th\n     public static void launchExperiment(Airavata.Client client, String expId)\n             throws TException {\n         try {\n-            String tokenId = \"-0bbb-403b-a88a-42b6dbe198e9\";\n+            String tokenId = \"47507a08-1579-4883-be03-3c8e3b7da061\";\n             client.launchExperiment(new AuthzToken(\"\"), expId, tokenId);\n         } catch (ExperimentNotFoundException e) {\n             logger.error(\"Error occured while launching the experiment...\", e.getMessage());"
            },
            {
                "sha": "5880fcc348aac724f53ee311a63fd32fa063c81c",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "status": "modified",
                "additions": 28,
                "deletions": 4,
                "changes": 32,
                "blob_url": "https://github.com/apache/airavata/blob/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/GFacUtils.java?ref=6938f907f6d994a84f0ed6cd02291ed828211ca9",
                "patch": "@@ -29,8 +29,6 @@\n import org.apache.airavata.credential.store.store.impl.CredentialReaderImpl;\n import org.apache.airavata.gfac.core.context.ProcessContext;\n import org.apache.airavata.gfac.core.context.TaskContext;\n-import org.apache.airavata.gfac.core.watcher.CancelRequestWatcher;\n-import org.apache.airavata.gfac.core.watcher.RedeliveryRequestWatcher;\n import org.apache.airavata.messaging.core.MessageContext;\n import org.apache.airavata.model.appcatalog.appdeployment.ApplicationDeploymentDescription;\n import org.apache.airavata.model.appcatalog.appdeployment.ApplicationParallelismType;\n@@ -1008,10 +1006,36 @@ public static boolean isEmailBasedJobMonitor(ProcessContext processContext) thro\n     public static JobSubmissionInterface getPreferredJobSubmissionInterface(ProcessContext context) throws AppCatalogException {\n         try {\n             String resourceHostId = context.getComputeResourceDescription().getComputeResourceId();\n+            ComputeResourcePreference resourcePreference = context.getComputeResourcePreference();\n+            JobSubmissionProtocol preferredJobSubmissionProtocol = resourcePreference.getPreferredJobSubmissionProtocol();\n             ComputeResourceDescription resourceDescription = context.getAppCatalog().getComputeResource().getComputeResource(resourceHostId);\n             List<JobSubmissionInterface> jobSubmissionInterfaces = resourceDescription.getJobSubmissionInterfaces();\n+            Map<JobSubmissionProtocol, List<JobSubmissionInterface>> orderedInterfaces = new HashMap<>();\n+            List<JobSubmissionInterface> interfaces = new ArrayList<>();\n             if (jobSubmissionInterfaces != null && !jobSubmissionInterfaces.isEmpty()) {\n-                Collections.sort(jobSubmissionInterfaces, new Comparator<JobSubmissionInterface>() {\n+                for (JobSubmissionInterface submissionInterface : jobSubmissionInterfaces){\n+\n+                    if (preferredJobSubmissionProtocol != null){\n+                        if (preferredJobSubmissionProtocol.toString().equals(submissionInterface.getJobSubmissionProtocol().toString())){\n+                            if (orderedInterfaces.containsKey(submissionInterface.getJobSubmissionProtocol())){\n+                                List<JobSubmissionInterface> interfaceList = orderedInterfaces.get(submissionInterface.getJobSubmissionProtocol());\n+                                interfaceList.add(submissionInterface);\n+                            }else {\n+                                interfaces.add(submissionInterface);\n+                                orderedInterfaces.put(submissionInterface.getJobSubmissionProtocol(), interfaces);\n+                            }\n+                        }\n+                    }else {\n+                        Collections.sort(jobSubmissionInterfaces, new Comparator<JobSubmissionInterface>() {\n+                            @Override\n+                            public int compare(JobSubmissionInterface jobSubmissionInterface, JobSubmissionInterface jobSubmissionInterface2) {\n+                                return jobSubmissionInterface.getPriorityOrder() - jobSubmissionInterface2.getPriorityOrder();\n+                            }\n+                        });\n+                    }\n+                }\n+                interfaces = orderedInterfaces.get(preferredJobSubmissionProtocol);\n+                Collections.sort(interfaces, new Comparator<JobSubmissionInterface>() {\n                     @Override\n                     public int compare(JobSubmissionInterface jobSubmissionInterface, JobSubmissionInterface jobSubmissionInterface2) {\n                         return jobSubmissionInterface.getPriorityOrder() - jobSubmissionInterface2.getPriorityOrder();\n@@ -1020,7 +1044,7 @@ public int compare(JobSubmissionInterface jobSubmissionInterface, JobSubmissionI\n             } else {\n                 throw new AppCatalogException(\"Compute resource should have at least one job submission interface defined...\");\n             }\n-            return jobSubmissionInterfaces.get(0);\n+            return interfaces.get(0);\n         } catch (AppCatalogException e) {\n             throw new AppCatalogException(\"Error occurred while retrieving data from app catalog\", e);\n         }"
            },
            {
                "sha": "616373dbe60909d70912a9a8d3b8b0ffd71d9b21",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java",
                "status": "modified",
                "additions": 12,
                "deletions": 10,
                "changes": 22,
                "blob_url": "https://github.com/apache/airavata/blob/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java",
                "raw_url": "https://github.com/apache/airavata/raw/6938f907f6d994a84f0ed6cd02291ed828211ca9/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/monitor/email/EmailBasedMonitor.java?ref=6938f907f6d994a84f0ed6cd02291ed828211ca9",
                "patch": "@@ -103,16 +103,18 @@ private void populateAddressAndParserMap(Map<ResourceJobManagerType, ResourceCon\n \t\t\tResourceJobManagerType type = resourceConfigEntry.getKey();\n \t\t\tResourceConfig config = resourceConfigEntry.getValue();\n \t\t\tList<String> resourceEmailAddresses = config.getResourceEmailAddresses();\n-\t\t\tfor (String resourceEmailAddress : resourceEmailAddresses) {\n-\t\t\t\taddressMap.put(resourceEmailAddress, type);\n-\t\t\t}\n-\t\t\ttry {\n-\t\t\t\tClass<? extends EmailParser> emailParserClass = Class.forName(config.getEmailParser()).asSubclass(EmailParser.class);\n-\t\t\t\tEmailParser emailParser = emailParserClass.getConstructor().newInstance();\n-\t\t\t\temailParserMap.put(type, emailParser);\n-\t\t\t} catch (Exception e) {\n-\t\t\t\tthrow new AiravataException(\"Error while instantiation email parsers\", e);\n-\t\t\t}\n+            if (resourceEmailAddresses != null && !resourceEmailAddresses.isEmpty()){\n+                for (String resourceEmailAddress : resourceEmailAddresses) {\n+                    addressMap.put(resourceEmailAddress, type);\n+                }\n+                try {\n+                    Class<? extends EmailParser> emailParserClass = Class.forName(config.getEmailParser()).asSubclass(EmailParser.class);\n+                    EmailParser emailParser = emailParserClass.getConstructor().newInstance();\n+                    emailParserMap.put(type, emailParser);\n+                } catch (Exception e) {\n+                    throw new AiravataException(\"Error while instantiation email parsers\", e);\n+                }\n+            }\n \t\t}\n \n \t}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/28f0b429530b6d46fa3d5f57334cb28ad07a7269",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/5e3f0cfdc8622d72c85584e88338b8451ed5032b",
        "message": "fixing NPE on AIRAVATA-1052",
        "bug_id": "airavata_38",
        "file": [
            {
                "sha": "e8f39d7a0a7c53b6548aff15643b329ac1f1963d",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/28f0b429530b6d46fa3d5f57334cb28ad07a7269/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "raw_url": "https://github.com/apache/airavata/raw/28f0b429530b6d46fa3d5f57334cb28ad07a7269/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java?ref=28f0b429530b6d46fa3d5f57334cb28ad07a7269",
                "patch": "@@ -747,7 +747,9 @@ private static Resource createJobDetail (JobDetail o){\n         if (o != null){\n             TaskDetailResource taskDetailResource = (TaskDetailResource)createTaskDetail(o.getTask());\n             jobDetailResource.setTaskDetailResource(taskDetailResource);\n-            jobDetailResource.setJobDescription(new String(o.getJobDescription()));\n+            if (o.getJobDescription() != null){\n+                jobDetailResource.setJobDescription(new String(o.getJobDescription()));\n+            }\n             jobDetailResource.setJobId(o.getJobId());\n             jobDetailResource.setCreationTime(o.getCreationTime());\n             jobDetailResource.setComputeResourceConsumed(o.getComputeResourceConsumed());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/d29a148f610b0d92bfa9d1005f6cb712cf6ec182",
        "message": "Adding NPE fixes - AIRAVATA-1028",
        "bug_id": "airavata_39",
        "file": [
            {
                "sha": "06d04ac2c51dc19399b0406fdf68b4edf04394f3",
                "filename": "modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "patch": "@@ -22,6 +22,7 @@\n \n import org.apache.airavata.commons.gfac.type.HostDescription;\n import org.apache.airavata.gsi.ssh.api.authentication.AuthenticationInfo;\n+import org.apache.airavata.gsi.ssh.impl.authentication.MyProxyAuthenticationInfo;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -72,6 +73,12 @@ public MonitorID(HostDescription host, String jobID,String taskID,String experim\n         this.jobStartedTime = new Timestamp((new Date()).getTime());\n         this.authenticationInfo = authenticationInfo;\n         this.userName = userName;\n+        // if we give myproxyauthenticationInfo, so we try to use myproxy user as the user\n+        if(this.authenticationInfo != null){\n+            if(this.authenticationInfo instanceof MyProxyAuthenticationInfo){\n+                this.userName = ((MyProxyAuthenticationInfo)this.authenticationInfo).getUserName();\n+            }\n+        }\n         this.jobID = jobID;\n         this.taskID = taskID;\n         this.experimentID = experimentID;"
            },
            {
                "sha": "9610a56a9da98b5d3f18986606069bcbcbc5a78a",
                "filename": "modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "patch": "@@ -171,6 +171,10 @@ public boolean launchExperiment(String experimentId) throws TException {\n                 //iterate through all the generated tasks and performs the job submisssion+monitoring\n \n                 Experiment experiment = (Experiment) registry.get(DataType.EXPERIMENT, experimentId);\n+                if(experiment == null){\n+                    log.error(\"Error retrieving the Experiment by the given experimentID: \" + experimentId);\n+                    return false;\n+                }\n                 String userName = experiment.getUserName();\n \n                 HostDescription hostDescription = OrchestratorUtils.getHostDescription(orchestrator, taskID);"
            },
            {
                "sha": "0b6e8b2f049d364fc1919b73df72b807fe20dbc3",
                "filename": "modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "patch": "@@ -47,12 +47,12 @@\n \n public class OrchestratorClientFactoryTest {\n     private DocumentCreator documentCreator;\n-//    private OrchestratorService.Client orchestratorClient;\n+    private OrchestratorService.Client orchestratorClient;\n     private Registry registry;\n \n     @Before\n     public void setUp(){\n-//        orchestratorClient = OrchestratorClientFactory.createOrchestratorClient(\"localhost\", 8940);\n+        orchestratorClient = OrchestratorClientFactory.createOrchestratorClient(\"localhost\", 8940);\n         registry = RegistryFactory.getDefaultRegistry();\n         AiravataUtils.setExecutionAsServer();\n         documentCreator = new DocumentCreator(getAiravataAPI());\n@@ -95,6 +95,8 @@ public void storeExperimentDetail(){\n             String expId = (String)registry.add(ParentDataType.EXPERIMENT, simpleExperiment);\n             CompositeIdentifier compositeIdentifier = new CompositeIdentifier(expId, null);\n             registry.add(ChildDataType.COMPUTATIONAL_RESOURCE_SCHEDULING, scheduling, compositeIdentifier);\n+\n+            orchestratorClient.launchExperiment(expId);\n         } catch (Exception e) {\n             e.printStackTrace();\n         }"
            },
            {
                "sha": "e7bb86589a786fe98afebd029c05fec7f41ad315",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "patch": "@@ -566,12 +566,14 @@ private static Resource createExperiment(Experiment o) {\n         ExperimentResource experimentResource = new ExperimentResource();\n         GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n         experimentResource.setGateway(gatewayResource);\n-        Gateway_Worker gateway_worker = new Gateway_Worker();\n-        gateway_worker.setGateway(o.getGateway());\n-        gateway_worker.setUser_name(o.getExecutionUser());\n+//        Gateway_Worker gateway_worker = new Gateway_Worker();\n+//        gateway_worker.setGateway(o.getGateway());\n+//        gateway_worker.setUser_name(o.getExecutionUser());\n         experimentResource.setExecutionUser(o.getExecutionUser());\n-        ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n-        experimentResource.setProject(projectResource);\n+        if (o.getProject() != null){\n+            ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n+            experimentResource.setProject(projectResource);\n+        }\n         experimentResource.setExpID(o.getExpId());\n         experimentResource.setCreationTime(o.getCreationTime());\n         experimentResource.setDescription(o.getExpDesc());"
            },
            {
                "sha": "3f9ff66328e84601333aac85f5eb98a10df02a7d",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "status": "modified",
                "additions": 17,
                "deletions": 5,
                "changes": 22,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "patch": "@@ -34,7 +34,10 @@\n \n     public static Experiment getExperiment(ExperimentResource experimentResource){\n         Experiment experiment = new Experiment();\n-        experiment.setProjectID(experimentResource.getProject().getName());\n+        if (experimentResource.getProject()!= null){\n+            experiment.setProjectID(experimentResource.getProject().getName());\n+        }\n+\n         experiment.setCreationTime(experimentResource.getCreationTime().getTime());\n         experiment.setUserName(experimentResource.getExecutionUser());\n         experiment.setName(experimentResource.getExpName());\n@@ -49,13 +52,22 @@ public static Experiment getExperiment(ExperimentResource experimentResource){\n         List<ExperimentOutputResource> experimentOutputs = experimentResource.getExperimentOutputs();\n         experiment.setExperimentOutputs(getExpOutputs(experimentOutputs));\n         StatusResource experimentStatus = experimentResource.getExperimentStatus();\n-        experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n+        if (experimentStatus != null){\n+            experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n+        }\n         List<StatusResource> changeList = experimentResource.getWorkflowNodeStatuses();\n-        experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n+        if (changeList != null){\n+               experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n+        }\n+\n         List<WorkflowNodeDetailResource> workflowNodeDetails = experimentResource.getWorkflowNodeDetails();\n-        experiment.setWorkflowNodeDetailsList(getWfNodeList(workflowNodeDetails));\n+        if (workflowNodeDetails != null){\n+                experiment.setWorkflowNodeDetailsList(getWfNodeList(workflowNodeDetails));\n+        }\n         List<ErrorDetailResource> errorDetails = experimentResource.getErrorDetails();\n-        experiment.setErrors(getErrorDetailList(errorDetails));\n+        if (errorDetails!= null){\n+            experiment.setErrors(getErrorDetailList(errorDetails));\n+        }\n         return experiment;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/2beace387b507a1467447e8df9b3456011b93dc0",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/d8059128e41b4f3f9984fa0f631d51ef592ba3ff",
        "message": "checking for NPE for inputs and outputs",
        "bug_id": "airavata_40",
        "file": [
            {
                "sha": "775518b1bbfceff3fb2bb5d7a6b58a73bee4d2e1",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "status": "modified",
                "additions": 18,
                "deletions": 6,
                "changes": 24,
                "blob_url": "https://github.com/apache/airavata/blob/2beace387b507a1467447e8df9b3456011b93dc0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "raw_url": "https://github.com/apache/airavata/raw/2beace387b507a1467447e8df9b3456011b93dc0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java?ref=2beace387b507a1467447e8df9b3456011b93dc0",
                "patch": "@@ -185,42 +185,54 @@ public static DataObjectType getInputOutput(Object object){\n                 ExperimentInputResource expInput = (ExperimentInputResource) object;\n                 dataObjectType.setKey(expInput.getExperimentKey());\n                 dataObjectType.setValue(expInput.getValue());\n-                dataObjectType.setType(DataType.valueOf(expInput.getInputType()));\n+                if (expInput.getInputType() != null){\n+                    dataObjectType.setType(DataType.valueOf(expInput.getInputType()));\n+                }\n                 dataObjectType.setMetaData(expInput.getMetadata());\n                 return dataObjectType;\n             }else if (object instanceof ExperimentOutputResource){\n                 ExperimentOutputResource expOutput = (ExperimentOutputResource)object;\n                 dataObjectType.setKey(expOutput.getExperimentKey());\n                 dataObjectType.setValue(expOutput.getValue());\n-                dataObjectType.setType(DataType.valueOf(expOutput.getOutputType()));\n+                if (expOutput.getOutputType() != null){\n+                    dataObjectType.setType(DataType.valueOf(expOutput.getOutputType()));\n+                }\n                 dataObjectType.setMetaData(expOutput.getMetadata());\n                 return dataObjectType;\n             }else if (object instanceof NodeInputResource){\n                 NodeInputResource nodeInputResource = (NodeInputResource)object;\n                 dataObjectType.setKey(nodeInputResource.getInputKey());\n                 dataObjectType.setValue(nodeInputResource.getValue());\n-                dataObjectType.setType(DataType.valueOf(nodeInputResource.getInputType()));\n+                if (nodeInputResource.getInputType() != null){\n+                    dataObjectType.setType(DataType.valueOf(nodeInputResource.getInputType()));\n+                }\n                 dataObjectType.setMetaData(nodeInputResource.getMetadata());\n                 return dataObjectType;\n             }else if (object instanceof NodeOutputResource){\n                 NodeOutputResource nodeOutputResource = (NodeOutputResource)object;\n                 dataObjectType.setKey(nodeOutputResource.getOutputKey());\n                 dataObjectType.setValue(nodeOutputResource.getValue());\n-                dataObjectType.setType(DataType.valueOf(nodeOutputResource.getOutputType()));\n+                if (nodeOutputResource.getOutputType() != null){\n+                    dataObjectType.setType(DataType.valueOf(nodeOutputResource.getOutputType()));\n+                }\n                 dataObjectType.setMetaData(nodeOutputResource.getMetadata());\n                 return dataObjectType;\n             }else if (object instanceof ApplicationInputResource){\n                 ApplicationInputResource inputResource = (ApplicationInputResource)object;\n                 dataObjectType.setKey(inputResource.getInputKey());\n                 dataObjectType.setValue(inputResource.getValue());\n-                dataObjectType.setType(DataType.valueOf(inputResource.getInputType()));\n+                if (inputResource.getInputType() != null){\n+                    dataObjectType.setType(DataType.valueOf(inputResource.getInputType()));\n+                }\n                 dataObjectType.setMetaData(inputResource.getMetadata());\n                 return dataObjectType;\n             }else if (object instanceof ApplicationOutputResource){\n                 ApplicationOutputResource outputResource = (ApplicationOutputResource)object;\n                 dataObjectType.setKey(outputResource.getOutputKey());\n                 dataObjectType.setValue(outputResource.getValue());\n-                dataObjectType.setType(DataType.valueOf(outputResource.getOutputType()));\n+                if (outputResource.getOutputType() != null){\n+                    dataObjectType.setType(DataType.valueOf(outputResource.getOutputType()));\n+                }\n                 dataObjectType.setMetaData(outputResource.getMetadata());\n                 return dataObjectType;\n             }else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/d8059128e41b4f3f9984fa0f631d51ef592ba3ff",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/1c5b22ac2c88d954f910e5a670eb95c13ffffa74",
        "message": "checking for NPE for inputs and outputs",
        "bug_id": "airavata_41",
        "file": [
            {
                "sha": "f43fd185ebbbc807f08837a9073009d3ea1bdd64",
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java",
                "status": "modified",
                "additions": 44,
                "deletions": 18,
                "changes": 62,
                "blob_url": "https://github.com/apache/airavata/blob/d8059128e41b4f3f9984fa0f631d51ef592ba3ff/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java",
                "raw_url": "https://github.com/apache/airavata/raw/d8059128e41b4f3f9984fa0f631d51ef592ba3ff/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/impl/ExperimentRegistry.java?ref=d8059128e41b4f3f9984fa0f631d51ef592ba3ff",
                "patch": "@@ -266,7 +266,9 @@ public void addExpInputs(List<DataObjectType> exInputs, ExperimentResource exper\n                 resource.setExperimentResource(experimentResource);\n                 resource.setExperimentKey(input.getKey());\n                 resource.setValue(input.getValue());\n-                resource.setInputType(input.getType().toString());\n+                if (input.getType() != null){\n+                    resource.setInputType(input.getType().toString());\n+                }\n                 resource.setMetadata(input.getMetaData());\n                 resource.save();\n             }\n@@ -283,7 +285,9 @@ public void updateExpInputs(List<DataObjectType> exInputs, ExperimentResource ex\n                 for (ExperimentInputResource exinput : experimentInputs) {\n                     if (exinput.getExperimentKey().equals(input.getKey())) {\n                         exinput.setValue(input.getValue());\n-                        exinput.setInputType(input.getType().toString());\n+                        if (input.getType() != null){\n+                            exinput.setInputType(input.getType().toString());\n+                        }\n                         exinput.setMetadata(input.getMetaData());\n                         exinput.save();\n                     }\n@@ -304,7 +308,9 @@ public String addExpOutputs(List<DataObjectType> exOutput, String expId) throws\n                 resource.setExperimentResource(experiment);\n                 resource.setExperimentKey(output.getKey());\n                 resource.setValue(output.getValue());\n-                resource.setOutputType(output.getType().toString());\n+                if (output.getType() != null){\n+                    resource.setOutputType(output.getType().toString());\n+                }\n                 resource.setMetadata(output.getMetaData());\n                 resource.save();\n             }\n@@ -325,7 +331,9 @@ public void updateExpOutputs(List<DataObjectType> exOutput, String expId) throws\n                         resource.setExperimentResource(experiment);\n                         resource.setExperimentKey(output.getKey());\n                         resource.setValue(output.getValue());\n-                        resource.setOutputType(output.getType().toString());\n+                        if (output.getType() != null){\n+                            resource.setOutputType(output.getType().toString());\n+                        }\n                         resource.setMetadata(output.getMetaData());\n                         resource.save();\n                     }\n@@ -346,7 +354,9 @@ public String addNodeOutputs(List<DataObjectType> wfOutputs, CompositeIdentifier\n                 resource.setNodeDetailResource(workflowNode);\n                 resource.setOutputKey(output.getKey());\n                 resource.setValue(output.getValue());\n-                resource.setOutputType(output.getType().toString());\n+                if (output.getType() != null){\n+                    resource.setOutputType(output.getType().toString());\n+                }\n                 resource.setMetadata(output.getMetaData());\n                 resource.save();\n             }\n@@ -367,7 +377,9 @@ public void updateNodeOutputs(List<DataObjectType> wfOutputs, String nodeId) thr\n                     resource.setNodeDetailResource(workflowNode);\n                     resource.setOutputKey(output.getKey());\n                     resource.setValue(output.getValue());\n-                    resource.setOutputType(output.getType().toString());\n+                    if (output.getType() != null){\n+                        resource.setOutputType(output.getType().toString());\n+                    }\n                     resource.setMetadata(output.getMetaData());\n                     resource.save();\n                 }\n@@ -388,7 +400,9 @@ public String addApplicationOutputs(List<DataObjectType> appOutputs, CompositeId\n                 resource.setTaskDetailResource(taskDetail);\n                 resource.setOutputKey(output.getKey());\n                 resource.setValue(output.getValue());\n-                resource.setOutputType(output.getType().toString());\n+                if (output.getType() != null){\n+                    resource.setOutputType(output.getType().toString());\n+                }\n                 resource.setMetadata(output.getMetaData());\n                 resource.save();\n             }\n@@ -790,7 +804,9 @@ public void addWorkflowInputs(List<DataObjectType> wfInputs, WorkflowNodeDetailR\n                 resource.setNodeDetailResource(nodeDetailResource);\n                 resource.setInputKey(input.getKey());\n                 resource.setValue(input.getValue());\n-                resource.setInputType(input.getType().toString());\n+                if (input.getType() != null){\n+                    resource.setInputType(input.getType().toString());\n+                }\n                 resource.setMetadata(input.getMetaData());\n                 resource.save();\n             }\n@@ -809,7 +825,9 @@ public void updateWorkflowInputs(List<DataObjectType> wfInputs, WorkflowNodeDeta\n                     resource.setNodeDetailResource(nodeDetailResource);\n                     resource.setInputKey(input.getKey());\n                     resource.setValue(input.getValue());\n-                    resource.setInputType(input.getType().toString());\n+                    if (input.getType() != null){\n+                        resource.setInputType(input.getType().toString());\n+                    }\n                     resource.setMetadata(input.getMetaData());\n                     resource.save();\n                 }\n@@ -964,7 +982,9 @@ public void addAppInputs(List<DataObjectType> appInputs, TaskDetailResource task\n                 resource.setTaskDetailResource(taskDetailResource);\n                 resource.setInputKey(input.getKey());\n                 resource.setValue(input.getValue());\n-                resource.setInputType(input.getType().toString());\n+                if (input.getType() != null){\n+                    resource.setInputType(input.getType().toString());\n+                }\n                 resource.setMetadata(input.getMetaData());\n                 resource.save();\n             }\n@@ -975,15 +995,17 @@ public void addAppInputs(List<DataObjectType> appInputs, TaskDetailResource task\n \n     }\n \n-    public void addAppOutputs(List<DataObjectType> appInputs, TaskDetailResource taskDetailResource) throws RegistryException {\n+    public void addAppOutputs(List<DataObjectType> appOytputs, TaskDetailResource taskDetailResource) throws RegistryException {\n         try {\n-            for (DataObjectType input : appInputs) {\n+            for (DataObjectType output : appOytputs) {\n                 ApplicationOutputResource resource = (ApplicationOutputResource) taskDetailResource.create(ResourceType.APPLICATION_OUTPUT);\n                 resource.setTaskDetailResource(taskDetailResource);\n-                resource.setOutputKey(input.getKey());\n-                resource.setValue(input.getValue());\n-                resource.setOutputType(input.getType().toString());\n-                resource.setMetadata(input.getMetaData());\n+                resource.setOutputKey(output.getKey());\n+                resource.setValue(output.getValue());\n+                if (output.getType() != null){\n+                    resource.setOutputType(output.getType().toString());\n+                }\n+                resource.setMetadata(output.getMetaData());\n                 resource.save();\n             }\n         } catch (Exception e) {\n@@ -1004,7 +1026,9 @@ public void updateAppOutputs(List<DataObjectType> appOutputs, String taskId) thr\n                     resource.setTaskDetailResource(taskDetail);\n                     resource.setOutputKey(output.getKey());\n                     resource.setValue(output.getValue());\n-                    resource.setOutputType(output.getType().toString());\n+                    if (output.getType() != null){\n+                        resource.setOutputType(output.getType().toString());\n+                    }\n                     resource.setMetadata(output.getMetaData());\n                     resource.save();\n                 }\n@@ -1023,7 +1047,9 @@ public void updateAppInputs(List<DataObjectType> appInputs, TaskDetailResource t\n                     resource.setTaskDetailResource(taskDetailResource);\n                     resource.setInputKey(input.getKey());\n                     resource.setValue(input.getValue());\n-                    resource.setInputType(input.getType().toString());\n+                    if (input.getType() != null){\n+                        resource.setInputType(input.getType().toString());\n+                    }\n                     resource.setMetadata(input.getMetaData());\n                     resource.save();\n                 }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/aa7af1bc34ed7fec7b66a9ab5d5806815ad4a9f0",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/a6a80d5ac827976f0c637c8adf9447b98795c7c7",
        "message": "Fixed NPE throws from reInvoked Output Handler method.",
        "bug_id": "airavata_42",
        "file": [
            {
                "sha": "3d5c58099c88e785872b4dce19dc0f97bbc44fe1",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "status": "modified",
                "additions": 0,
                "deletions": 23,
                "changes": 23,
                "blob_url": "https://github.com/apache/airavata/blob/aa7af1bc34ed7fec7b66a9ab5d5806815ad4a9f0/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/aa7af1bc34ed7fec7b66a9ab5d5806815ad4a9f0/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/cpi/BetterGfacImpl.java?ref=aa7af1bc34ed7fec7b66a9ab5d5806815ad4a9f0",
                "patch": "@@ -1092,29 +1092,6 @@ private void reInvokeInFlowHandlers(JobExecutionContext jobExecutionContext) thr\n \n     // TODO - Did refactoring, but need to recheck the logic again.\n     public void reInvokeOutFlowHandlers(JobExecutionContext jobExecutionContext) throws GFacException {\n-        String experimentPath = null;\n-        try {\n-            jobExecutionContext.setZk(new ZooKeeper(AiravataZKUtils.getZKhostPort(), AiravataZKUtils.getZKTimeout(), this));\n-            zk = jobExecutionContext.getZk();\n-            log.info(\"Waiting for zookeeper to connect to the server\");\n-            synchronized (mutex) {\n-                mutex.wait(5000);  // waiting for the syncConnected event\n-            }\n-            if (jobExecutionContext.getZk().exists(experimentPath, false) == null) {\n-                log.error(\"Experiment is already finalized so no output handlers will be invoked\");\n-                return;\n-            }\n-        } catch (IOException e) {\n-            log.error(e.getMessage(), e);\n-        } catch (ApplicationSettingsException e) {\n-            log.error(e.getMessage(), e);\n-        } catch (InterruptedException e) {\n-            log.error(e.getMessage(), e);\n-        } catch (KeeperException e) {\n-            log.error(e.getMessage(), e);\n-        }\n-\n-\n         GFacConfiguration gFacConfiguration = jobExecutionContext.getGFacConfiguration();\n         List<GFacHandlerConfig> handlers = null;\n         if (gFacConfiguration != null) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/b96366fec08ea12ee336a4b10ac91bd8e990a3e8",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/4a38f819abae1de0c4d08d1a908d712e97bdbe5a",
        "message": "Save JobDetails in saveJobStatus method to fix NPE.",
        "bug_id": "airavata_43",
        "file": [
            {
                "sha": "846d639c88259bfbc2953cb724354a0119746b15",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/b96366fec08ea12ee336a4b10ac91bd8e990a3e8/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/b96366fec08ea12ee336a4b10ac91bd8e990a3e8/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java?ref=b96366fec08ea12ee336a4b10ac91bd8e990a3e8",
                "patch": "@@ -192,6 +192,14 @@ public static String createGsiftpURIAsString(String host, String localPath)\n \tpublic static void saveJobStatus(JobExecutionContext jobExecutionContext,\n                                      JobDetails details, JobState state, MonitorPublisher monitorPublisher) throws GFacException {\n \t\ttry {\n+            // first we save job details to the registry for safe side and then save the job status.\n+            Registry registry = jobExecutionContext.getRegistry();\n+            JobStatus status = new JobStatus();\n+            status.setJobState(state);\n+            details.setJobStatus(status);\n+            registry.add(ChildDataType.JOB_DETAIL, details,\n+                    new CompositeIdentifier(jobExecutionContext.getTaskData()\n+                            .getTaskID(), details.getJobID()));\n             JobIdentifier identifier = new JobIdentifier(details.getJobID(), jobExecutionContext.getTaskData().getTaskID(),\n                     jobExecutionContext.getWorkflowNodeDetails().getNodeInstanceId(), jobExecutionContext.getExperimentID(),\n                     jobExecutionContext.getGatewayID());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/d8176e813b6cf7bb0fe5ec118f502781c4615ff9",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/3eea1a3095f735f7db3b37e65f92b653f0f28f03",
        "message": "Fixed NPE of scheduler and changed gfac-config.xml",
        "bug_id": "airavata_44",
        "file": [
            {
                "sha": "b5fc2b26936512ab842c65f7d5622fae331e24e5",
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplications.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplications.java",
                "raw_url": "https://github.com/apache/airavata/raw/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplications.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplications.java?ref=d8176e813b6cf7bb0fe5ec118f502781c4615ff9",
                "patch": "@@ -1092,12 +1092,12 @@ public void registerGatewayResourceProfile() {\n \n \n             ComputeResourcePreference stampedeResourcePreferences = RegisterSampleApplicationsUtils.\n-                    createComputeResourcePreference(stampedeResourceId, \"TG-STA110014S\", false, null, null, null,\n-                            \"/scratch/01437/ogce/gta-work-dirs\");\n+                    createComputeResourcePreference(stampedeResourceId, \"TG-STA110014S\", false, null,\n+                            JobSubmissionProtocol.SSH, DataMovementProtocol.SCP, \"/scratch/01437/ogce/gta-work-dirs\");\n \n             ComputeResourcePreference trestlesResourcePreferences = RegisterSampleApplicationsUtils.\n-                    createComputeResourcePreference(trestlesResourceId, \"sds128\", false, null, null, null,\n-                            \"/oasis/scratch/trestles/ogce/temp_project/gta-work-dirs\");\n+                    createComputeResourcePreference(trestlesResourceId, \"sds128\", false, null, JobSubmissionProtocol.SSH,\n+                            DataMovementProtocol.SCP, \"/oasis/scratch/trestles/ogce/temp_project/gta-work-dirs\");\n \n             ComputeResourcePreference bigRedResourcePreferences = RegisterSampleApplicationsUtils.\n                     createComputeResourcePreference(bigredResourceId, \"TG-STA110014S\", false, null, null, null,"
            },
            {
                "sha": "502192fb0e584c34da24c033a3f2beb1cce15671",
                "filename": "modules/configuration/server/src/main/resources/gfac-config.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/configuration/server/src/main/resources/gfac-config.xml",
                "raw_url": "https://github.com/apache/airavata/raw/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/configuration/server/src/main/resources/gfac-config.xml",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/configuration/server/src/main/resources/gfac-config.xml?ref=d8176e813b6cf7bb0fe5ec118f502781c4615ff9",
                "patch": "@@ -22,7 +22,7 @@\n         </InHandlers>\n         <OutHandlers></OutHandlers>\n     </GlobalHandlers>\n-    <Provider class=\"org.apache.airavata.gfac.local.provider.impl.LocalProvider\" host=\"org.apache.airavata.schemas.gfac.impl.HostDescriptionTypeImpl\">\n+    <Provider class=\"org.apache.airavata.gfac.local.provider.impl.LocalProvider\" submission=\"LOCAL\">\n         <InHandlers>\n             <Handler class=\"org.apache.airavata.gfac.local.handler.LocalDirectorySetupHandler\"/>\n         </InHandlers>\n@@ -65,7 +65,7 @@\n         </OutHandlers>\n     </Application>\n \n-     <Provider class=\"org.apache.airavata.gfac.ssh.provider.impl.SSHProvider\" host=\"org.apache.airavata.schemas.gfac.impl.SSHHostTypeImpl\" executionMode=\"async\">\n+     <Provider class=\"org.apache.airavata.gfac.ssh.provider.impl.SSHProvider\" submission=\"SSH\" executionMode=\"async\">\n          <InHandlers>\n             <Handler class=\"org.apache.airavata.gfac.ssh.handler.SSHDirectorySetupHandler\"/>\n             <Handler class=\"org.apache.airavata.gfac.ssh.handler.SSHInputHandler\"/>\n@@ -74,7 +74,7 @@\n             <Handler class=\"org.apache.airavata.gfac.ssh.handler.SSHOutputHandler\"/>\n         </OutHandlers>\n     </Provider>\n-    <Provider class=\"org.apache.airavata.gfac.gsissh.provider.impl.GSISSHProvider\" host=\"org.apache.airavata.schemas.gfac.impl.GsisshHostTypeImpl\" executionMode=\"async\">\n+    <Provider class=\"org.apache.airavata.gfac.gsissh.provider.impl.GSISSHProvider\" submission=\"SSH\" security=\"GSI\" executionMode=\"async\">\n              <InHandlers>\n                 <Handler class=\"org.apache.airavata.gfac.gsissh.handler.GSISSHDirectorySetupHandler\"/>\n                  <!--Handler class=\"org.apache.airavata.gfac.ssh.handler.AdvancedSCPInputHandler\">"
            },
            {
                "sha": "c1550dfc9d176438d5f25ba3d5ce49325f998a58",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Constants.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/airavata/blob/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Constants.java",
                "raw_url": "https://github.com/apache/airavata/raw/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Constants.java?ref=d8176e813b6cf7bb0fe5ec118f502781c4615ff9",
                "patch": "@@ -34,10 +34,13 @@\n \n \tpublic static final String XPATH_EXPR_PROVIDER_HANDLERS_START = \"/GFac/Provider[@class='\";\n     public static final String XPATH_EXPR_PROVIDER_ON_HOST = \"/GFac/Provider[@host='\";\n+    public static final String XPATH_EXPR_PROVIDER_ON_SUBMISSION = \"/GFac/Provider[@submission='\";\n \tpublic static final String XPATH_EXPR_PROVIDER_INFLOW_HANDLERS_END = \"']/InHandlers/Handler\";\n \tpublic static final String XPATH_EXPR_PROVIDER_OUTFLOW_HANDLERS_END = \"']/OutHandlers/Handler\";\n \n \tpublic static final String GFAC_CONFIG_CLASS_ATTRIBUTE = \"class\";\n+\tpublic static final String GFAC_CONFIG_SECURITY_ATTRIBUTE = \"security\";\n+\tpublic static final String GFAC_CONFIG_SUBMISSION_ATTRIBUTE = \"submission\";\n     public static final String GFAC_CONFIG_EXECUTION_MODE_ATTRIBUTE = \"executionMode\";\n \tpublic static final String GFAC_CONFIG_APPLICATION_NAME_ATTRIBUTE = \"class\";\n \tpublic static final String NEWLINE = System.getProperty(\"line.separator\");"
            },
            {
                "sha": "0dae029c4b625256a7784735467e170eceb8ec5d",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Scheduler.java",
                "status": "modified",
                "additions": 47,
                "deletions": 9,
                "changes": 56,
                "blob_url": "https://github.com/apache/airavata/blob/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Scheduler.java",
                "raw_url": "https://github.com/apache/airavata/raw/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Scheduler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/Scheduler.java?ref=d8176e813b6cf7bb0fe5ec118f502781c4615ff9",
                "patch": "@@ -21,15 +21,24 @@\n \n package org.apache.airavata.gfac;\n \n+import org.airavata.appcatalog.cpi.AppCatalog;\n+import org.airavata.appcatalog.cpi.AppCatalogException;\n+import org.apache.aiaravata.application.catalog.data.impl.AppCatalogFactory;\n import org.apache.airavata.commons.gfac.type.HostDescription;\n import org.apache.airavata.gfac.core.context.JobExecutionContext;\n import org.apache.airavata.gfac.core.provider.GFacProvider;\n import org.apache.airavata.gfac.core.provider.GFacProviderConfig;\n import org.apache.airavata.gfac.core.provider.GFacProviderException;\n+import org.apache.airavata.gfac.core.utils.GFacUtils;\n import org.apache.airavata.model.appcatalog.computeresource.JobSubmissionInterface;\n+import org.apache.airavata.model.appcatalog.computeresource.JobSubmissionProtocol;\n+import org.apache.airavata.model.appcatalog.computeresource.LOCALSubmission;\n+import org.apache.airavata.model.appcatalog.computeresource.SSHJobSubmission;\n+import org.apache.airavata.model.appcatalog.computeresource.SecurityProtocol;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n import org.xml.sax.SAXException;\n \n import javax.xml.parsers.DocumentBuilder;\n@@ -109,15 +118,44 @@ private static GFacProvider getProvider(JobExecutionContext jobExecutionContext)\n             if (provider == null) {\n \n                 List<JobSubmissionInterface> jobSubmissionInterfaces = jobExecutionContext.getApplicationContext().getComputeResourceDescription().getJobSubmissionInterfaces();\n-                String hostClass = jobExecutionContext.getPreferredJobSubmissionProtocol().toString();\n-                providerClassName = GFacConfiguration.getAttributeValue(GFacConfiguration.getHandlerDoc(), Constants.XPATH_EXPR_PROVIDER_ON_HOST + hostClass + \"']\", Constants.GFAC_CONFIG_CLASS_ATTRIBUTE);\n-                Class<? extends GFacProvider> aClass1 = Class.forName(providerClassName).asSubclass(GFacProvider.class);\n-                provider = aClass1.newInstance();\n-                //loading the provider properties\n-                aClass = GFacConfiguration.getProviderConfig(GFacConfiguration.getHandlerDoc(), Constants.XPATH_EXPR_PROVIDER_HANDLERS_START +\n-                        providerClassName + \"']\", Constants.GFAC_CONFIG_APPLICATION_NAME_ATTRIBUTE);\n-                if(!aClass.isEmpty()){\n-                    provider.initProperties(aClass.get(0).getProperties());\n+                JobSubmissionProtocol jobSubmissionProtocol = jobExecutionContext.getPreferredJobSubmissionProtocol();\n+                SSHJobSubmission sshJobSubmission;\n+                LOCALSubmission localSubmission;\n+                String securityProtocol = null;\n+                try {\n+                    AppCatalog appCatalog = AppCatalogFactory.getAppCatalog();\n+                    if (jobSubmissionProtocol == JobSubmissionProtocol.SSH) {\n+                        sshJobSubmission = appCatalog.getComputeResource().getSSHJobSubmission(\n+                                jobExecutionContext.getPreferredJobSubmissionInterface().getJobSubmissionInterfaceId());\n+                        if (sshJobSubmission != null) {\n+                            securityProtocol  = sshJobSubmission.getSecurityProtocol().toString();\n+                        }\n+                    }else if (jobSubmissionProtocol == JobSubmissionProtocol.LOCAL) {\n+                        localSubmission = appCatalog.getComputeResource().getLocalJobSubmission(jobExecutionContext.getPreferredJobSubmissionInterface().getJobSubmissionInterfaceId());\n+                    }\n+                    List<Element> elements = GFacUtils.getElementList(GFacConfiguration.getHandlerDoc(), Constants.XPATH_EXPR_PROVIDER_ON_SUBMISSION + jobSubmissionProtocol + \"']\");\n+                    for (Element element : elements) {\n+                        String security = element.getAttribute(Constants.GFAC_CONFIG_SECURITY_ATTRIBUTE);\n+                        if (securityProtocol == null && security == null) {\n+                            providerClassName = element.getAttribute(Constants.GFAC_CONFIG_CLASS_ATTRIBUTE);\n+                        }else if (securityProtocol.equals(security)) {\n+                            providerClassName = element.getAttribute(Constants.GFAC_CONFIG_CLASS_ATTRIBUTE);\n+                        }\n+                    }\n+                    if (providerClassName == null) {\n+                        throw new GFacException(\"Couldn't find provider class\");\n+                    }\n+\n+                    Class<? extends GFacProvider> aClass1 = Class.forName(providerClassName).asSubclass(GFacProvider.class);\n+                    provider = aClass1.newInstance();\n+                    //loading the provider properties\n+                    aClass = GFacConfiguration.getProviderConfig(GFacConfiguration.getHandlerDoc(), Constants.XPATH_EXPR_PROVIDER_HANDLERS_START +\n+                            providerClassName + \"']\", Constants.GFAC_CONFIG_APPLICATION_NAME_ATTRIBUTE);\n+                    if (!aClass.isEmpty()) {\n+                        provider.initProperties(aClass.get(0).getProperties());\n+                    }\n+                } catch (AppCatalogException e) {\n+                    throw new GFacException(\"Couldn't retrieve job submission protocol from app catalog \");\n                 }\n             }\n         } catch (XPathExpressionException e) {"
            },
            {
                "sha": "c5a96f96ab94f79bf977942a74eeb13e8fcd9c16",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "status": "modified",
                "additions": 25,
                "deletions": 1,
                "changes": 26,
                "blob_url": "https://github.com/apache/airavata/blob/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/d8176e813b6cf7bb0fe5ec118f502781c4615ff9/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/utils/GFacUtils.java?ref=d8176e813b6cf7bb0fe5ec118f502781c4615ff9",
                "patch": "@@ -52,7 +52,16 @@\n import org.apache.zookeeper.data.Stat;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathExpression;\n+import javax.xml.xpath.XPathExpressionException;\n+import javax.xml.xpath.XPathFactory;\n import java.io.*;\n import java.net.InetAddress;\n import java.net.URISyntaxException;\n@@ -151,6 +160,21 @@ public static String createUniqueNameWithDate(String name) {\n \t\treturn name + \"_\" + date;\n \t}\n \n+    public static List<Element> getElementList(Document doc, String expression) throws XPathExpressionException {\n+        XPathFactory xPathFactory = XPathFactory.newInstance();\n+        XPath xPath = xPathFactory.newXPath();\n+        XPathExpression expr = xPath.compile(expression);\n+        NodeList nodeList = (NodeList) expr.evaluate(doc, XPathConstants.NODESET);\n+        List<Element> elementList = new ArrayList<Element>();\n+        for (int i = 0; i < nodeList.getLength(); i++) {\n+            Node item = nodeList.item(i);\n+            if (item instanceof Element) {\n+                elementList.add((Element) item);\n+            }\n+        }\n+        return elementList;\n+    }\n+\n \tpublic static String createGsiftpURIAsString(String host, String localPath)\n \t\t\tthrows URISyntaxException {\n \t\tStringBuffer buf = new StringBuffer();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/c37054be449b70b62b7fd19aa1acc04aa2fbef55",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/3e151ce37690a1664b2a18747153ef12466e82ec",
        "message": "fixing tests in orchestrator and fixing NPE for AIRAVATA-1342",
        "bug_id": "airavata_45",
        "file": [
            {
                "sha": "ddcc527ed2555380d331021e7a09f312fac76380",
                "filename": "modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "status": "modified",
                "additions": 219,
                "deletions": 149,
                "changes": 368,
                "blob_url": "https://github.com/apache/airavata/blob/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java?ref=c37054be449b70b62b7fd19aa1acc04aa2fbef55",
                "patch": "@@ -408,321 +408,391 @@ public static Resource getResource(AppCatalogResourceType type, Object o) {\n \t\n \tprivate static Resource createLocalDataMovement(LocalDataMovement o) {\n \t\tLocalDataMovementResource localDataMovementResource = new LocalDataMovementResource();\n-\t\tlocalDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+        if (o != null){\n+            localDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+        }\n \t\treturn localDataMovementResource;\n \t}\n \t\n     private static Resource createLocalSubmission(LocalSubmission o) {\n \t\tLocalSubmissionResource localSubmissionResource = new LocalSubmissionResource();\n-\t\tlocalSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tlocalSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tlocalSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+        if (o != null){\n+            localSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            localSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n+            localSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+        }\n \t\treturn localSubmissionResource;\n \t}\n     \n     private static Resource createJobManagerCommand(JobManagerCommand o) {\n \t\tJobManagerCommandResource jobManagerCommandResource = new JobManagerCommandResource();\n-\t\tjobManagerCommandResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tjobManagerCommandResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tjobManagerCommandResource.setCommandType(o.getCommandType());\n-\t\tjobManagerCommandResource.setCommand(o.getCommand());\n+        if (o != null){\n+            jobManagerCommandResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            jobManagerCommandResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n+            jobManagerCommandResource.setCommandType(o.getCommandType());\n+            jobManagerCommandResource.setCommand(o.getCommand());\n+        }\n \t\treturn jobManagerCommandResource;\n \t}\n     \n     private static Resource createResourceJobManager(ResourceJobManager o) {\n \t\tResourceJobManagerResource resourceJobManagerResource = new ResourceJobManagerResource();\n-\t\tresourceJobManagerResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tresourceJobManagerResource.setPushMonitoringEndpoint(o.getPushMonitoringEndpoint());\n-\t\tresourceJobManagerResource.setJobManagerBinPath(o.getJobManagerBinPath());\n-\t\tresourceJobManagerResource.setResourceJobManagerType(o.getResourceJobManagerType());\n+        if (o != null) {\n+            resourceJobManagerResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            resourceJobManagerResource.setPushMonitoringEndpoint(o.getPushMonitoringEndpoint());\n+            resourceJobManagerResource.setJobManagerBinPath(o.getJobManagerBinPath());\n+            resourceJobManagerResource.setResourceJobManagerType(o.getResourceJobManagerType());\n+        }\n \t\treturn resourceJobManagerResource;\n \t}\n     \n     private static Resource createDataMovementInterface(DataMovementInterface o) {\n \t\tDataMovementInterfaceResource dataMovementInterfaceResource = new DataMovementInterfaceResource();\n-\t\tdataMovementInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tdataMovementInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tdataMovementInterfaceResource.setDataMovementProtocol(o.getDataMovementProtocol());\n-\t\tdataMovementInterfaceResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tdataMovementInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        if (o != null) {\n+            dataMovementInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n+            dataMovementInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            dataMovementInterfaceResource.setDataMovementProtocol(o.getDataMovementProtocol());\n+            dataMovementInterfaceResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            dataMovementInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        }\n \t\treturn dataMovementInterfaceResource;\n \t}\n     \n     private static Resource createJobSubmissionInterface(JobSubmissionInterface o) {\n \t\tJobSubmissionInterfaceResource jobSubmissionInterfaceResource = new JobSubmissionInterfaceResource();\n-\t\tjobSubmissionInterfaceResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n-\t\tjobSubmissionInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tjobSubmissionInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tjobSubmissionInterfaceResource.setJobSubmissionProtocol(o.getJobSubmissionProtocol());\n-\t\tjobSubmissionInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        if (o != null) {\n+            jobSubmissionInterfaceResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+            jobSubmissionInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n+            jobSubmissionInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            jobSubmissionInterfaceResource.setJobSubmissionProtocol(o.getJobSubmissionProtocol());\n+            jobSubmissionInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        }\n \t\treturn jobSubmissionInterfaceResource;\n \t}\n     \n     private static Resource createComputeResourceFileSystem(ComputeResourceFileSystem o) {\n \t\tComputeResourceFileSystemResource computeResourceFileSystemResource = new ComputeResourceFileSystemResource();\n-\t\tcomputeResourceFileSystemResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tcomputeResourceFileSystemResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tcomputeResourceFileSystemResource.setPath(o.getPath());\n-\t\tcomputeResourceFileSystemResource.setFileSystem(o.getFileSystem());\n+        if (o != null){\n+            computeResourceFileSystemResource.setComputeResourceId(o.getComputeResourceId());\n+            computeResourceFileSystemResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            computeResourceFileSystemResource.setPath(o.getPath());\n+            computeResourceFileSystemResource.setFileSystem(o.getFileSystem());\n+        }\n \t\treturn computeResourceFileSystemResource;\n \t}\n     \n     private static Resource createBatchQueue(BatchQueue o) {\n \t\tBatchQueueResource batchQueueResource = new BatchQueueResource();\n-\t\tbatchQueueResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tbatchQueueResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tbatchQueueResource.setMaxRuntime(o.getMaxRuntime());\n-\t\tbatchQueueResource.setMaxJobInQueue(o.getMaxJobInQueue());\n-\t\tbatchQueueResource.setQueueDescription(o.getQueueDescription());\n-\t\tbatchQueueResource.setQueueName(o.getQueueName());\n-\t\tbatchQueueResource.setMaxProcessors(o.getMaxProcessors());\n-\t\tbatchQueueResource.setMaxNodes(o.getMaxNodes());\n+        if (o != null){\n+            batchQueueResource.setComputeResourceId(o.getComputeResourceId());\n+            batchQueueResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            batchQueueResource.setMaxRuntime(o.getMaxRuntime());\n+            batchQueueResource.setMaxJobInQueue(o.getMaxJobInQueue());\n+            batchQueueResource.setQueueDescription(o.getQueueDescription());\n+            batchQueueResource.setQueueName(o.getQueueName());\n+            batchQueueResource.setMaxProcessors(o.getMaxProcessors());\n+            batchQueueResource.setMaxNodes(o.getMaxNodes());\n+        }\n \t\treturn batchQueueResource;\n \t}\n     private static Resource createComputeResource(ComputeResource o) {\n \t\tComputeResourceResource computeResourceResource = new ComputeResourceResource();\n-\t\tcomputeResourceResource.setResourceDescription(o.getResourceDescription());\n-\t\tcomputeResourceResource.setResourceId(o.getResourceId());\n-\t\tcomputeResourceResource.setHostName(o.getHostName());\n+        if (o != null) {\n+            computeResourceResource.setResourceDescription(o.getResourceDescription());\n+            computeResourceResource.setResourceId(o.getResourceId());\n+            computeResourceResource.setHostName(o.getHostName());\n+        }\n \t\treturn computeResourceResource;\n \t}\n \n     private static Resource createHostAlias(HostAlias o) {\n         HostAliasResource aliasResource = new HostAliasResource();\n-        aliasResource.setResourceID(o.getResourceID());\n-        aliasResource.setAlias(o.getAlias());\n-        aliasResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            aliasResource.setResourceID(o.getResourceID());\n+            aliasResource.setAlias(o.getAlias());\n+            aliasResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return aliasResource;\n     }\n \n     private static Resource createHostIPAddress(HostIPAddress o) {\n         HostIPAddressResource ipAddressResource = new HostIPAddressResource();\n-        ipAddressResource.setResourceID(o.getResourceID());\n-        ipAddressResource.setIpaddress(o.getIpaddress());\n-        ipAddressResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            ipAddressResource.setResourceID(o.getResourceID());\n+            ipAddressResource.setIpaddress(o.getIpaddress());\n+            ipAddressResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return ipAddressResource;\n     }\n \n     private static Resource createGSSISSHSubmission(GSISSHSubmission o) {\n         GSISSHSubmissionResource submissionResource = new GSISSHSubmissionResource();\n-        submissionResource.setSubmissionID(o.getSubmissionID());\n-        submissionResource.setResourceJobManager(o.getResourceJobManager());\n-        submissionResource.setSshPort(o.getSshPort());\n-        submissionResource.setInstalledPath(o.getInstalledPath());\n-        submissionResource.setMonitorMode(o.getMonitorMode());\n+        if (o != null) {\n+            submissionResource.setSubmissionID(o.getSubmissionID());\n+            submissionResource.setResourceJobManager(o.getResourceJobManager());\n+            submissionResource.setSshPort(o.getSshPort());\n+            submissionResource.setInstalledPath(o.getInstalledPath());\n+            submissionResource.setMonitorMode(o.getMonitorMode());\n+        }\n         return submissionResource;\n     }\n \n     private static Resource createGSISSHExport(GSISSHExport o){\n         GSISSHExportResource resource = new GSISSHExportResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setExport(o.getExport());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshJobSubmission()));\n+        if (o != null) {\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setExport(o.getExport());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshJobSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGSISSHPreJObCommand(GSISSHPreJobCommand o){\n         GSISSHPreJobCommandResource resource = new GSISSHPreJobCommandResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setCommand(o.getCommand());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        if (o != null) {\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setCommand(o.getCommand());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGSISSHPostJObCommand(GSISSHPostJobCommand o){\n         GSISSHPostJobCommandResource resource = new GSISSHPostJobCommandResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setCommand(o.getCommand());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setCommand(o.getCommand());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGlobusJobSubmission(GlobusJobSubmission o) {\n         GlobusJobSubmissionResource resource = new GlobusJobSubmissionResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setResourceJobManager(o.getResourceJobManager());\n-        resource.setSecurityProtocol(o.getSecurityProtocol());\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setResourceJobManager(o.getResourceJobManager());\n+            resource.setSecurityProtocol(o.getSecurityProtocol());\n+        }\n         return resource;\n     }\n \n     private static Resource createGlobusEndpoint(GlobusGKEndpoint o) {\n         GlobusGKEndpointResource resource = new GlobusGKEndpointResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setEndpoint(o.getEndpoint());\n-        resource.setGlobusJobSubmissionResource((GlobusJobSubmissionResource)createGlobusJobSubmission(o.getGlobusSubmission()));\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setEndpoint(o.getEndpoint());\n+            resource.setGlobusJobSubmissionResource((GlobusJobSubmissionResource)createGlobusJobSubmission(o.getGlobusSubmission()));\n+        }\n         return resource;\n     }\n \t\n \tprivate static Resource createSshJobSubmission(SshJobSubmission o) {\n-\t\tSshJobSubmissionResource sshJobSubmissionResource = new SshJobSubmissionResource();\n-\t\tsshJobSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tsshJobSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tsshJobSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n-\t\tsshJobSubmissionResource.setAlternativeSshHostname(o.getAlternativeSshHostname());\n-\t\tsshJobSubmissionResource.setSecurityProtocol(o.getSecurityProtocol());\n-\t\tsshJobSubmissionResource.setSshPort(o.getSshPort());\n-\t\treturn sshJobSubmissionResource;\n-\t}\n+        SshJobSubmissionResource sshJobSubmissionResource = new SshJobSubmissionResource();\n+        if (o != null) {\n+            sshJobSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            sshJobSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource) createResourceJobManager(o.getResourceJobManager()));\n+            sshJobSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+            sshJobSubmissionResource.setAlternativeSshHostname(o.getAlternativeSshHostname());\n+            sshJobSubmissionResource.setSecurityProtocol(o.getSecurityProtocol());\n+            sshJobSubmissionResource.setSshPort(o.getSshPort());\n+        }\n+        return sshJobSubmissionResource;\n+    }\n \n     private static Resource createScpDataMovement(ScpDataMovement o) {\n \t\tScpDataMovementResource scpDataMovementResource = new ScpDataMovementResource();\n-\t\tscpDataMovementResource.setQueueDescription(o.getQueueDescription());\n-\t\tscpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tscpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n-\t\tscpDataMovementResource.setAlternativeScpHostname(o.getAlternativeScpHostname());\n-\t\tscpDataMovementResource.setSshPort(o.getSshPort());\n+        if (o != null){\n+            scpDataMovementResource.setQueueDescription(o.getQueueDescription());\n+            scpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            scpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+            scpDataMovementResource.setAlternativeScpHostname(o.getAlternativeScpHostname());\n+            scpDataMovementResource.setSshPort(o.getSshPort());\n+        }\n \t\treturn scpDataMovementResource;\n \t}\n \n     private static Resource createGridftpDataMovement(GridftpDataMovement o) {\n \t\tGridftpDataMovementResource gridftpDataMovementResource = new GridftpDataMovementResource();\n-\t\tgridftpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tgridftpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+        if (o != null){\n+            gridftpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            gridftpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+        }\n \t\treturn gridftpDataMovementResource;\n \t}\n \n     private static Resource createGridftpEndpoint(GridftpEndpoint o) {\n \t\tGridftpEndpointResource gridftpEndpointResource = new GridftpEndpointResource();\n-\t\tgridftpEndpointResource.setEndpoint(o.getEndpoint());\n-\t\tgridftpEndpointResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tgridftpEndpointResource.setGridftpDataMovementResource((GridftpDataMovementResource)createGridftpDataMovement(o.getGridftpDataMovement()));\n+        if (o != null){\n+            gridftpEndpointResource.setEndpoint(o.getEndpoint());\n+            gridftpEndpointResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            gridftpEndpointResource.setGridftpDataMovementResource((GridftpDataMovementResource)createGridftpDataMovement(o.getGridftpDataMovement()));\n+        }\n \t\treturn gridftpEndpointResource;\n \t}\n \n     private static Resource createJobSubmissionProtocol(JobSubmissionProtocol o) {\n         JobSubmissionProtocolResource resource = new JobSubmissionProtocolResource();\n-        resource.setResourceID(o.getResourceID());\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setJobType(o.getJobType());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            resource.setResourceID(o.getResourceID());\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setJobType(o.getJobType());\n+            resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createDataMovementProtocol(DataMovementProtocol o) {\n         DataMovementProtocolResource resource = new DataMovementProtocolResource();\n-        resource.setResourceID(o.getResourceID());\n-        resource.setDataMoveID(o.getDataMoveID());\n-        resource.setDataMoveType(o.getDataMoveType());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null) {\n+            resource.setResourceID(o.getResourceID());\n+            resource.setDataMoveID(o.getDataMoveID());\n+            resource.setDataMoveType(o.getDataMoveType());\n+            resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationModule(ApplicationModule o) {\n         AppModuleResource moduleResource = new AppModuleResource();\n-        moduleResource.setModuleId(o.getModuleID());\n-        moduleResource.setModuleDesc(o.getModuleDesc());\n-        moduleResource.setModuleName(o.getModuleName());\n-        moduleResource.setModuleVersion(o.getModuleVersion());\n+        if (o != null){\n+            moduleResource.setModuleId(o.getModuleID());\n+            moduleResource.setModuleDesc(o.getModuleDesc());\n+            moduleResource.setModuleName(o.getModuleName());\n+            moduleResource.setModuleVersion(o.getModuleVersion());\n+        }\n         return moduleResource;\n     }\n \n     private static Resource createApplicationDeployment(ApplicationDeployment o) {\n         AppDeploymentResource resource = new AppDeploymentResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setAppDes(o.getApplicationDesc());\n-        resource.setAppModuleId(o.getAppModuleID());\n-        resource.setHostId(o.getHostID());\n-        resource.setExecutablePath(o.getExecutablePath());\n-        resource.setParallelism(o.getParallelism());\n-        resource.setModuleResource((AppModuleResource) createApplicationModule(o.getApplicationModule()));\n-        resource.setHostResource((ComputeResourceResource) createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setAppDes(o.getApplicationDesc());\n+            resource.setAppModuleId(o.getAppModuleID());\n+            resource.setHostId(o.getHostID());\n+            resource.setExecutablePath(o.getExecutablePath());\n+            resource.setParallelism(o.getParallelism());\n+            resource.setModuleResource((AppModuleResource) createApplicationModule(o.getApplicationModule()));\n+            resource.setHostResource((ComputeResourceResource) createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createLibraryPrepPathResource(LibraryPrepandPath o) {\n         LibraryPrepandPathResource resource = new LibraryPrepandPathResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource) createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource) createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createLibraryApendPathResource(LibraryApendPath o) {\n         LibraryApendPathResource resource = new LibraryApendPathResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createAppEnvironmentResource(AppEnvironment o) {\n         AppEnvironmentResource resource = new AppEnvironmentResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createAppInterfaceResource(ApplicationInterface o) {\n         AppInterfaceResource resource = new AppInterfaceResource();\n-        resource.setInterfaceId(o.getInterfaceID());\n-        resource.setAppName(o.getAppName());\n-        resource.setAppDescription(o.getAppDescription());\n+        if (o != null){\n+            resource.setInterfaceId(o.getInterfaceID());\n+            resource.setAppName(o.getAppName());\n+            resource.setAppDescription(o.getAppDescription());\n+        }\n         return resource;\n     }\n \n     private static Resource createAppModMappingResource(AppModuleMapping o) {\n         AppModuleMappingResource resource = new AppModuleMappingResource();\n-        resource.setInterfaceId(o.getInterfaceID());\n-        resource.setModuleId(o.getModuleID());\n+        if (o != null){\n+            resource.setInterfaceId(o.getInterfaceID());\n+            resource.setModuleId(o.getModuleID());\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationInput(ApplicationInput o) {\n         ApplicationInputResource resource = new ApplicationInputResource();\n-        resource.setInterfaceID(o.getInterfaceID());\n-        resource.setInputKey(o.getInputKey());\n-        resource.setInputVal(o.getInputVal());\n-        resource.setDataType(o.getDataType());\n-        resource.setMetadata(o.getMetadata());\n-        resource.setAppArgument(o.getAppArgument());\n-        resource.setUserFriendlyDesc(o.getUserFriendlyDesc());\n-        resource.setStandareInput(o.isStandardInput());\n-        resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        if (o != null){\n+            resource.setInterfaceID(o.getInterfaceID());\n+            resource.setInputKey(o.getInputKey());\n+            resource.setInputVal(o.getInputVal());\n+            resource.setDataType(o.getDataType());\n+            resource.setMetadata(o.getMetadata());\n+            resource.setAppArgument(o.getAppArgument());\n+            resource.setUserFriendlyDesc(o.getUserFriendlyDesc());\n+            resource.setStandareInput(o.isStandardInput());\n+            resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationOutput(ApplicationOutput o) {\n         ApplicationOutputResource resource = new ApplicationOutputResource();\n-        resource.setInterfaceID(o.getInterfaceID());\n-        resource.setOutputKey(o.getOutputKey());\n-        resource.setOutputVal(o.getOutputVal());\n-        resource.setDataType(o.getDataType());\n-        resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        if (o != null){\n+            resource.setInterfaceID(o.getInterfaceID());\n+            resource.setOutputKey(o.getOutputKey());\n+            resource.setOutputVal(o.getOutputVal());\n+            resource.setDataType(o.getDataType());\n+            resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGatewayProfile(GatewayProfile o) {\n         GatewayProfileResource resource = new GatewayProfileResource();\n-        resource.setGatewayID(o.getGatewayID());\n-        resource.setGatewayName(o.getGatewayName());\n-        resource.setGatewayDesc(o.getGatewayDesc());\n+        if (o != null) {\n+            resource.setGatewayID(o.getGatewayID());\n+            resource.setGatewayName(o.getGatewayName());\n+            resource.setGatewayDesc(o.getGatewayDesc());\n+        }\n         return resource;\n     }\n \n     private static Resource createComputeResourcePref(ComputeResourcePreference o) {\n         ComputeHostPreferenceResource resource = new ComputeHostPreferenceResource();\n-        resource.setGatewayId(o.getGatewayId());\n-        resource.setResourceId(o.getResourceId());\n-        resource.setOverrideByAiravata(o.isOverrideByAiravata());\n-        resource.setPreferredJobProtocol(o.getPreferedJobSubmissionProtocol());\n-        resource.setPreferedDMProtocol(o.getPreferedDataMoveProtocol());\n-        resource.setBatchQueue(o.getBatchQueue());\n-        resource.setScratchLocation(o.getScratchLocation());\n-        resource.setProjectNumber(o.getProjectNumber());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeHostResource()));\n-        resource.setGatewayProfile((GatewayProfileResource)createGatewayProfile(o.getGatewayProfile()));\n+        if (o != null) {\n+            resource.setGatewayId(o.getGatewayId());\n+            resource.setResourceId(o.getResourceId());\n+            resource.setOverrideByAiravata(o.isOverrideByAiravata());\n+            resource.setPreferredJobProtocol(o.getPreferedJobSubmissionProtocol());\n+            resource.setPreferedDMProtocol(o.getPreferedDataMoveProtocol());\n+            resource.setBatchQueue(o.getBatchQueue());\n+            resource.setScratchLocation(o.getScratchLocation());\n+            resource.setProjectNumber(o.getProjectNumber());\n+            resource.setComputeHostResource((ComputeResourceResource) createComputeResource(o.getComputeHostResource()));\n+            resource.setGatewayProfile((GatewayProfileResource) createGatewayProfile(o.getGatewayProfile()));\n+        }\n         return resource;\n     }\n \n     private static Resource createModuleLoadCmd(ModuleLoadCmd o) {\n         ModuleLoadCmdResource moduleLoadCmdResource = new ModuleLoadCmdResource();\n-        moduleLoadCmdResource.setCmd(o.getCmd());\n-        moduleLoadCmdResource.setAppDeploymentId(o.getAppDeploymentId());\n-        moduleLoadCmdResource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            moduleLoadCmdResource.setCmd(o.getCmd());\n+            moduleLoadCmdResource.setAppDeploymentId(o.getAppDeploymentId());\n+            moduleLoadCmdResource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return moduleLoadCmdResource;\n     }\n }"
            },
            {
                "sha": "e281851b250161771cda28b0e0e8e14a50594b76",
                "filename": "modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "raw_url": "https://github.com/apache/airavata/raw/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java?ref=c37054be449b70b62b7fd19aa1acc04aa2fbef55",
                "patch": "@@ -42,11 +42,11 @@\n     public void setUp() throws Exception {\n         initialize = new Initialize(\"registry-derby.sql\");\n         initialize.initializeDB();\n-        gatewayResource = (GatewayResource) ResourceUtils.getGateway(\"default\");\n-        workerResource = (WorkerResource) ResourceUtils.getWorker(gatewayResource.getGatewayName(), \"admin\");\n+        gatewayResource = (GatewayResource) ResourceUtils.getGateway(ServerSettings.getSystemUserGateway());\n+        workerResource = (WorkerResource) ResourceUtils.getWorker(gatewayResource.getGatewayName(), ServerSettings.getDefaultUser());\n         userResource = new UserResource();\n-        userResource.setUserName(\"admin\");\n-        userResource.setPassword(\"admin\");\n+        userResource.setUserName(ServerSettings.getDefaultUser());\n+        userResource.setPassword(ServerSettings.getDefaultUser());\n \n         documentCreator = new DocumentCreator(getAiravataAPI());\n         documentCreator.createLocalHostDocs();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/c87eb4270bfb89953da252985e27d9037241a108",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/a65c01e2be52a707e8d98ca426685b42a9929a25",
        "message": "fixing NPE s in recovery and process state update when output staging fail",
        "bug_id": "airavata_46",
        "file": [
            {
                "sha": "2c6d3a385d76025e2e2a49a745019809192867b8",
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "status": "modified",
                "additions": 9,
                "deletions": 2,
                "changes": 11,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/samples/CreateLaunchExperiment.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "patch": "@@ -34,6 +34,7 @@\n import org.apache.airavata.model.scheduling.ComputationalResourceSchedulingModel;\n import org.apache.airavata.model.security.AuthzToken;\n import org.apache.airavata.model.status.ExperimentState;\n+import org.apache.airavata.model.status.JobStatus;\n import org.apache.airavata.model.util.ExperimentModelUtil;\n import org.apache.airavata.model.util.ProjectModelUtil;\n import org.apache.airavata.model.workspace.Gateway;\n@@ -85,9 +86,15 @@\n     public static void main(String[] args) throws Exception {\n         airavataClient = AiravataClientFactory.createAiravataClient(THRIFT_SERVER_HOST, THRIFT_SERVER_PORT);\n         AuthzToken token = new AuthzToken(\"empty_token\");\n-        System.out.println(\"API version is \" + airavataClient.getAPIVersion(null));\n+        System.out.println(\"API version is \" + airavataClient.getAPIVersion(token));\n //        registerApplications(); // run this only the first time\n-        createAndLaunchExp();\n+        Map<String, JobStatus> jobStatuses = airavataClient.getJobStatuses(token, \"test_78ddc6f0-ddd1-4154-ba45-6d597b8c8f3b\");\n+        for (String jobId : jobStatuses.keySet()){\n+            JobStatus jobStatus = jobStatuses.get(jobId);\n+            System.out.println(jobId);\n+            System.out.println(jobStatus.getJobState().toString());\n+        }\n+//        createAndLaunchExp();\n     }\n \n     private static String fsdResourceId;"
            },
            {
                "sha": "c14e5bceb55521b2102a3d32de3591cfcdd7bd8c",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/GFacEngineImpl.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "patch": "@@ -25,6 +25,7 @@\n import org.apache.airavata.common.utils.AiravataUtils;\n import org.apache.airavata.common.utils.ServerSettings;\n import org.apache.airavata.common.utils.ThriftUtils;\n+import org.apache.airavata.gfac.core.GFac;\n import org.apache.airavata.gfac.core.GFacEngine;\n import org.apache.airavata.gfac.core.GFacException;\n import org.apache.airavata.gfac.core.GFacUtils;\n@@ -405,6 +406,12 @@ private boolean outputDataStaging(ProcessContext processContext, boolean recover\n                         errorModel.setUserFriendlyMessage(\"Error while staging output data\");\n                         errorModel.setActualErrorMessage(errorMsg);\n                         GFacUtils.saveTaskError(taskCtx, errorModel);\n+                        ProcessStatus processStatus = processContext.getProcessStatus();\n+                        processStatus.setTimeOfStateChange(AiravataUtils.getCurrentTimestamp().getTime());\n+                        processStatus.setReason(errorMsg);\n+                        processContext.setProcessStatus(processStatus);\n+                        GFacUtils.saveAndPublishProcessStatus(processContext);\n+                        GFacUtils.saveAndPublishProcessStatus(processContext);\n \t\t\t\t\t\tthrow new GFacException(\"Error while staging output data\");\n \t\t\t\t\t}\n \t\t\t\t\tbreak;"
            },
            {
                "sha": "4e70ac058754ce9fc04c2170a7a4c37599deb77f",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/AdvancedSCPDataStageTask.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "patch": "@@ -250,12 +250,19 @@ private void outputDataStaging(TaskContext taskContext, Session sshSession, URI\n \n \t@Override\n \tpublic TaskStatus recover(TaskContext taskContext) {\n-\t\treturn null;\n-\t}\n+        // FIXME - Recover gives NPE s because of this\n+        TaskState state = taskContext.getTaskStatus().getState();\n+        if (state == TaskState.EXECUTING || state == TaskState.CREATED) {\n+            return execute(taskContext);\n+        } else {\n+            // files already transferred or failed\n+            return taskContext.getTaskStatus();\n+        }\n+    }\n \n \t@Override\n \tpublic TaskTypes getType() {\n-\t\treturn null;\n+\t\treturn TaskTypes.DATA_STAGING;\n \t}\n \n \tprivate SSHPasswordAuthentication getSSHPasswordAuthentication() {"
            },
            {
                "sha": "a6539632403ec51d6bf2f0b8d583429019f1c54a",
                "filename": "modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java",
                "raw_url": "https://github.com/apache/airavata/raw/c87eb4270bfb89953da252985e27d9037241a108/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-impl/src/main/java/org/apache/airavata/gfac/impl/task/SCPDataStageTask.java?ref=c87eb4270bfb89953da252985e27d9037241a108",
                "patch": "@@ -115,6 +115,6 @@ public TaskStatus recover(TaskContext taskContext) {\n \n \t@Override\n \tpublic TaskTypes getType() {\n-\t\treturn null;\n+\t\treturn TaskTypes.DATA_STAGING;\n \t}\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/95354eab81fdfe4f2d17c5c7f8f7a2deaf9a2b21",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/38bc592927b2fbee8c36ec9dbed800235fdd0c11",
        "message": "Fixed NPE of security context and replaced ActualParameter objects  with DataObjectType obejects",
        "bug_id": "airavata_47",
        "file": [
            {
                "sha": "ff764a0b4a2c843440879f766ae284d99a093931",
                "filename": "modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/JobExecutionContext.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/95354eab81fdfe4f2d17c5c7f8f7a2deaf9a2b21/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/JobExecutionContext.java",
                "raw_url": "https://github.com/apache/airavata/raw/95354eab81fdfe4f2d17c5c7f8f7a2deaf9a2b21/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/JobExecutionContext.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-core/src/main/java/org/apache/airavata/gfac/core/context/JobExecutionContext.java?ref=95354eab81fdfe4f2d17c5c7f8f7a2deaf9a2b21",
                "patch": "@@ -279,7 +279,7 @@ public void setOutPath(){\n     }\n \n \tpublic SecurityContext getSecurityContext(String name) throws GFacException{\n-\t\tSecurityContext secContext = securityContext.get(name+\"-\"+this.getHostName());\n+\t\tSecurityContext secContext = securityContext.get(name);\n \t\treturn secContext;\n \t}\n "
            },
            {
                "sha": "d9e669d6f34b77e95f18c86976041f0a1a41f345",
                "filename": "modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java",
                "status": "modified",
                "additions": 32,
                "deletions": 34,
                "changes": 66,
                "blob_url": "https://github.com/apache/airavata/blob/95354eab81fdfe4f2d17c5c7f8f7a2deaf9a2b21/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/95354eab81fdfe4f2d17c5c7f8f7a2deaf9a2b21/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac/gfac-gsissh/src/main/java/org/apache/airavata/gfac/gsissh/handler/GSISSHInputHandler.java?ref=95354eab81fdfe4f2d17c5c7f8f7a2deaf9a2b21",
                "patch": "@@ -21,9 +21,6 @@\n package org.apache.airavata.gfac.gsissh.handler;\n \n import org.apache.airavata.common.exception.ApplicationSettingsException;\n-import org.apache.airavata.common.utils.StringUtil;\n-import org.apache.airavata.commons.gfac.type.ActualParameter;\n-import org.apache.airavata.commons.gfac.type.MappingFactory;\n import org.apache.airavata.gfac.GFacException;\n import org.apache.airavata.gfac.core.context.JobExecutionContext;\n import org.apache.airavata.gfac.core.context.MessageContext;\n@@ -34,13 +31,13 @@\n import org.apache.airavata.gfac.gsissh.util.GFACGSISSHUtils;\n import org.apache.airavata.gsi.ssh.api.Cluster;\n import org.apache.airavata.model.workspace.experiment.CorrectiveAction;\n+import org.apache.airavata.model.workspace.experiment.DataObjectType;\n import org.apache.airavata.model.workspace.experiment.DataTransferDetails;\n+import org.apache.airavata.model.workspace.experiment.DataType;\n import org.apache.airavata.model.workspace.experiment.ErrorCategory;\n import org.apache.airavata.model.workspace.experiment.TransferState;\n import org.apache.airavata.model.workspace.experiment.TransferStatus;\n import org.apache.airavata.registry.cpi.ChildDataType;\n-import org.apache.airavata.schemas.gfac.URIArrayType;\n-import org.apache.airavata.schemas.gfac.URIParameterType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -116,48 +113,49 @@ public void invoke(JobExecutionContext jobExecutionContext) throws GFacHandlerEx\n             MessageContext input = jobExecutionContext.getInMessageContext();\n             Set<String> parameters = input.getParameters().keySet();\n             for (String paramName : parameters) {\n-                ActualParameter actualParameter = (ActualParameter) input.getParameters().get(paramName);\n-                String paramValue = MappingFactory.toString(actualParameter);\n+                DataObjectType inputParamType = (DataObjectType) input.getParameters().get(paramName);\n+                String paramValue = inputParamType.getKey();\n                 //TODO: Review this with type\n-                if (\"URI\".equals(actualParameter.getType().getType().toString())) {\n+                if (inputParamType.getType() == DataType.URI) {\n                     if (index < oldIndex) {\n                         log.info(\"Input File: \" + paramValue + \" is already transfered, so we skip this operation !!!\");\n-                        ((URIParameterType) actualParameter.getType()).setValue(oldFiles.get(index));\n+                        inputParamType.setValue(oldFiles.get(index));\n                         data.append(oldFiles.get(index++)).append(\",\"); // we get already transfered file and increment the index\n                     } else {\n                         String stageInputFile = stageInputFiles(cluster, jobExecutionContext, paramValue);\n-                        ((URIParameterType) actualParameter.getType()).setValue(stageInputFile);\n+                        inputParamType.setValue(stageInputFile);\n                         StringBuffer temp = new StringBuffer(data.append(stageInputFile).append(\",\").toString());\n                         status.setTransferState(TransferState.UPLOAD);\n                         detail.setTransferStatus(status);\n                         detail.setTransferDescription(\"Input Data Staged: \" + stageInputFile);\n                         registry.add(ChildDataType.DATA_TRANSFER_DETAIL, detail, jobExecutionContext.getTaskData().getTaskID());\n-                \n-                        GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n-                    }\n-                } else if (\"URIArray\".equals(actualParameter.getType().getType().toString())) {\n-                    List<String> split = Arrays.asList(StringUtil.getElementsFromString(paramValue));\n-                    List<String> newFiles = new ArrayList<String>();\n-                    for (String paramValueEach : split) {\n-                        if (index < oldIndex) {\n-                            log.info(\"Input File: \" + paramValue + \" is already transfered, so we skip this operation !!!\");\n-                            newFiles.add(oldFiles.get(index));\n-                            data.append(oldFiles.get(index++)).append(\",\");\n-                        } else {\n-                            String stageInputFiles = stageInputFiles(cluster, jobExecutionContext, paramValueEach);\n-                            status.setTransferState(TransferState.UPLOAD);\n-                            detail.setTransferStatus(status);\n-                            detail.setTransferDescription(\"Input Data Staged: \" + stageInputFiles);\n-                            registry.add(ChildDataType.DATA_TRANSFER_DETAIL, detail, jobExecutionContext.getTaskData().getTaskID());\n-                            StringBuffer temp = new StringBuffer(data.append(stageInputFiles).append(\",\").toString());\n-                            GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n-                            newFiles.add(stageInputFiles);\n-                        }\n \n+                        GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n                     }\n-                    ((URIArrayType) actualParameter.getType()).setValueArray(newFiles.toArray(new String[newFiles.size()]));\n-                }\n-                inputNew.getParameters().put(paramName, actualParameter);\n+                } // FIXME: what is the thrift model DataType equivalent for URIArray type?\n+//                else if (\"URIArray\".equals(inputParamType.getType().getType().toString())) {\n+//                    List<String> split = Arrays.asList(StringUtil.getElementsFromString(paramValue));\n+//                    List<String> newFiles = new ArrayList<String>();\n+//                    for (String paramValueEach : split) {\n+//                        if (index < oldIndex) {\n+//                            log.info(\"Input File: \" + paramValue + \" is already transfered, so we skip this operation !!!\");\n+//                            newFiles.add(oldFiles.get(index));\n+//                            data.append(oldFiles.get(index++)).append(\",\");\n+//                        } else {\n+//                            String stageInputFiles = stageInputFiles(cluster, jobExecutionContext, paramValueEach);\n+//                            status.setTransferState(TransferState.UPLOAD);\n+//                            detail.setTransferStatus(status);\n+//                            detail.setTransferDescription(\"Input Data Staged: \" + stageInputFiles);\n+//                            registry.add(ChildDataType.DATA_TRANSFER_DETAIL, detail, jobExecutionContext.getTaskData().getTaskID());\n+//                            StringBuffer temp = new StringBuffer(data.append(stageInputFiles).append(\",\").toString());\n+//                            GFacUtils.savePluginData(jobExecutionContext, temp.insert(0, ++index), this.getClass().getName());\n+//                            newFiles.add(stageInputFiles);\n+//                        }\n+//\n+//                    }\n+//                    ((URIArrayType) inputParamType.getType()).setValueArray(newFiles.toArray(new String[newFiles.size()]));\n+//                }\n+                inputNew.getParameters().put(paramName, inputParamType);\n             }\n         } catch (Exception e) {\n \t\t\tlog.error(e.getMessage());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/80cbc3e884cbc4f0609d5ff216b59430fee0abaf",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/d68afe9b29a0ad968be6f8902a52e62d3dcfadd5",
        "message": "Fixing a NPE during error scenario and fixing the code to show proper error message",
        "bug_id": "airavata_48",
        "file": [
            {
                "sha": "59de0f44e991542abc1a7606a5654408bfbd3626",
                "filename": "tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java",
                "status": "modified",
                "additions": 17,
                "deletions": 9,
                "changes": 26,
                "blob_url": "https://github.com/apache/airavata/blob/80cbc3e884cbc4f0609d5ff216b59430fee0abaf/tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java",
                "raw_url": "https://github.com/apache/airavata/raw/80cbc3e884cbc4f0609d5ff216b59430fee0abaf/tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/tools/job-monitor/src/main/java/org/apache/airavata/job/monitor/impl/pull/qstat/QstatMonitor.java?ref=80cbc3e884cbc4f0609d5ff216b59430fee0abaf",
                "patch": "@@ -21,6 +21,7 @@\n package org.apache.airavata.job.monitor.impl.pull.qstat;\n \n import org.apache.airavata.common.utils.ServerSettings;\n+import org.apache.airavata.commons.gfac.type.HostDescription;\n import org.apache.airavata.gsi.ssh.api.SSHApiException;\n import org.apache.airavata.job.monitor.HostMonitorData;\n import org.apache.airavata.job.monitor.MonitorID;\n@@ -109,12 +110,14 @@ public boolean startPulling() throws AiravataMonitorException {\n         UserMonitorData take = null;\n         JobStatus jobStatus = new JobStatus();\n         MonitorID currentMonitorID = null;\n+        HostDescription currentHostDescription = null;\n         try {\n             take = this.queue.take();\n             List<MonitorID> completedJobs = new ArrayList<MonitorID>();\n             List<HostMonitorData> hostMonitorData = take.getHostMonitorData();\n             for (HostMonitorData iHostMonitorData : hostMonitorData) {\n                 if (iHostMonitorData.getHost().getType() instanceof GsisshHostType) {\n+                    currentHostDescription = iHostMonitorData.getHost();\n                     GsisshHostType gsisshHostType = (GsisshHostType) iHostMonitorData.getHost().getType();\n                     String hostName = gsisshHostType.getHostAddress();\n                     ResourceConnection connection = null;\n@@ -183,16 +186,21 @@ public boolean startPulling() throws AiravataMonitorException {\n             } else if (e.getMessage().contains(\"illegally formed job identifier\")) {\n                 logger.error(\"Wrong job ID is given so dropping the job from monitoring system\");\n             } else if (!this.queue.contains(take)) {   // we put the job back to the queue only if its state is not unknown\n-                if (currentMonitorID.getFailedCount() < 2) {\n-                    try {\n-                        currentMonitorID.setFailedCount(currentMonitorID.getFailedCount() + 1);\n-                        this.queue.put(take);\n-                    } catch (InterruptedException e1) {\n-                        e1.printStackTrace();\n-                    }\n+                if (currentMonitorID == null) {\n+                    logger.error(\"Monitoring the jobs failed, for user: \" + take.getUserName()\n+                            + \" in Host: \" + currentHostDescription.getType().getHostAddress());\n                 } else {\n-                    logger.error(e.getMessage());\n-                    logger.error(\"Tried to monitor the job 3 times, so dropping of the the Job with ID: \" + currentMonitorID.getJobID());\n+                    if (currentMonitorID.getFailedCount() < 2) {\n+                        try {\n+                            currentMonitorID.setFailedCount(currentMonitorID.getFailedCount() + 1);\n+                            this.queue.put(take);\n+                        } catch (InterruptedException e1) {\n+                            e1.printStackTrace();\n+                        }\n+                    } else {\n+                        logger.error(e.getMessage());\n+                        logger.error(\"Tried to monitor the job 3 times, so dropping of the the Job with ID: \" + currentMonitorID.getJobID());\n+                    }\n                 }\n             }\n             throw new AiravataMonitorException(\"Error retrieving the job status\", e);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/af89a1580c8c53adb848397b42263b5384ca8520",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/a1a54f25f844c10f8aaf39bcafe3c462c5d9e4cf",
        "message": "npe chk\n\ngit-svn-id: https://svn.apache.org/repos/asf/airavata/trunk@1462278 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_49",
        "file": [
            {
                "sha": "1efa019f1a9fbff1573556a10b80ec06f0844013",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/af89a1580c8c53adb848397b42263b5384ca8520/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "raw_url": "https://github.com/apache/airavata/raw/af89a1580c8c53adb848397b42263b5384ca8520/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java?ref=af89a1580c8c53adb848397b42263b5384ca8520",
                "patch": "@@ -337,7 +337,7 @@ private String setupAndLaunch(String workflowAsString, String topic, String gate\n         workflowInterpreterConfiguration.setGfacEmbeddedMode(gfacEmbeddedMode);\n         workflowInterpreterConfiguration.setActOnProvenance(provenance);\n \n-        if (builder.getSecurityContext().getAmazonWebservices().getSecretAccessKey() != null) {\n+        if (builder.getSecurityContext().getAmazonWebservices() != null) {\n             workflowInterpreterConfiguration.setAwsSecretKey(builder.getSecurityContext().getAmazonWebservices().getSecretAccessKey());\n             workflowInterpreterConfiguration.setAwsAccessKey(builder.getSecurityContext().getAmazonWebservices().getAccessKeyId());\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/07009cba4296d915c767114e50e778282dd25e08",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/8c8f667be61896fed1fb7a5aa2da104fd9a5a4c1",
        "message": "Fixing NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/airavata/trunk@1454626 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_50",
        "file": [
            {
                "sha": "7152bda241cc6d1ea171852c0617f3d28779a903",
                "filename": "modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/07009cba4296d915c767114e50e778282dd25e08/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "raw_url": "https://github.com/apache/airavata/raw/07009cba4296d915c767114e50e778282dd25e08/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java?ref=07009cba4296d915c767114e50e778282dd25e08",
                "patch": "@@ -79,6 +79,8 @@ public void setUp() throws Exception {\n         ApplicationDescription ec2Desc = new ApplicationDescription(Ec2ApplicationDeploymentType.type);\n         Ec2ApplicationDeploymentType ec2App = (Ec2ApplicationDeploymentType)ec2Desc.getType();\n \n+        String serviceName = \"Gnome_distance_calculation_workflow\";\n+        ec2Desc.getType().addNewApplicationName().setStringValue(serviceName);\n         ec2App.setJobType(JobTypeType.EC_2);\n         ec2App.setExecutable(\"/home/ec2-user/run.sh\");\n         ec2App.setExecutableType(\"sh\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/d9e31d9405bb98ec64db548fa4f672908495b9f5",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/82c8623d0301a6115de589a89b81039fae0274f0",
        "message": "Fixing NPEs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1298869 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_51",
        "file": [
            {
                "sha": "119ce29d712186d56cd354fccbe4095835b5f1b9",
                "filename": "modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "status": "modified",
                "additions": 12,
                "deletions": 4,
                "changes": 16,
                "blob_url": "https://github.com/apache/airavata/blob/d9e31d9405bb98ec64db548fa4f672908495b9f5/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "raw_url": "https://github.com/apache/airavata/raw/d9e31d9405bb98ec64db548fa4f672908495b9f5/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java?ref=d9e31d9405bb98ec64db548fa4f672908495b9f5",
                "patch": "@@ -218,8 +218,12 @@ public static ApplicationDeploymentDescription createAppDeploymentDescription(\n             gram.setScratchWorkingDirectory(appBean.getTmpDir());\n             //TODO: add to documentation --> ask user to check the hostcount\n             gram.setMaxWallTime(appBean.getMaxWallTime());\n-            gram.setCpuCount(appBean.getPcount());\n-            gram.setMinMemory(appBean.getMinMemory());\n+            if (appBean.getPcount() != null) {\n+                gram.setCpuCount(appBean.getPcount());\n+            }\n+            if (appBean.getMinMemory() != null) {\n+                gram.setMinMemory(appBean.getMinMemory());\n+            }\n \n             gram.setJobType(getJobTypeEnum(appBean.getJobType()));\n             // TODO : verify the following\n@@ -278,8 +282,12 @@ public static ApplicationDeploymentDescription createAppDeploymentDescription(\n             gram.setScratchWorkingDirectory(appBean.getTmpDir());\n             //TODO: add to documentation --> ask user to check the hostcount\n             gram.setMaxWallTime(appBean.getMaxWallTime());\n-            gram.setCpuCount(appBean.getPcount());\n-            gram.setMinMemory(appBean.getMinMemory());\n+            if (appBean.getPcount() != null) {\n+                gram.setCpuCount(appBean.getPcount());\n+            }\n+            if (appBean.getMinMemory() != null) {\n+                gram.setMinMemory(appBean.getMinMemory());\n+            }\n \n             gram.setJobType(getJobTypeEnum(appBean.getJobType()));\n             // TODO : verify the following"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/b361cd176ab2cc7074873b0ef6078701cde2e990",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/300f3ea473c3e0e8837200fa7ef2f43c517107c7",
        "message": "Fixing NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1297219 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_52",
        "file": [
            {
                "sha": "206f65d24c7af85c00175b95f68beeb44078b724",
                "filename": "modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/b361cd176ab2cc7074873b0ef6078701cde2e990/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "raw_url": "https://github.com/apache/airavata/raw/b361cd176ab2cc7074873b0ef6078701cde2e990/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java?ref=b361cd176ab2cc7074873b0ef6078701cde2e990",
                "patch": "@@ -179,9 +179,15 @@ public static ApplicationDeploymentDescription createAppDeploymentDescription(Ap\n \n             gram.setJobType(getJobTypeEnum(appBean.getJobType()));\n             // TODO : verify the following\n-            ProjectAccountType projectAccount = gram.getProjectAccount();\n+            ProjectAccountType projectAccount;\n+            if(gram.getProjectAccount() != null) {\n+                projectAccount = gram.getProjectAccount();\n+            } else {\n+                projectAccount = gram.addNewProjectAccount();\n+            }\n             projectAccount.setProjectAccountNumber(appBean.getProjectName());\n             projectAccount.setProjectAccountDescription(appBean.getPcount().toString());\n+\n             QueueType queueName = gram.getQueue();\n             queueName.setQueueName(appBean.getQueue());\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/8604bd8ce2a3c62bdd543d35647b8e91d0e755f8",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/191d8c299c23445adba852cf30e254c1fb418355",
        "message": "Fixing NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1293336 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_53",
        "file": [
            {
                "sha": "5da42e4effa4d8375aad9d10e1887a963fd981f1",
                "filename": "modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/apache/airavata/blob/8604bd8ce2a3c62bdd543d35647b8e91d0e755f8/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java",
                "raw_url": "https://github.com/apache/airavata/raw/8604bd8ce2a3c62bdd543d35647b8e91d0e755f8/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java?ref=8604bd8ce2a3c62bdd543d35647b8e91d0e755f8",
                "patch": "@@ -97,15 +97,15 @@ private static ServiceDescription saveAllServiceDescriptions(XRegistryClient cli\n \n             if(serviceBean != null) {\n                 service = MigrationUtil.createServiceDescription(serviceBean);\n+                try {\n+                    jcrRegistry.saveServiceDescription(service);\n+                    ApplicationBean appBean = saveApplicationDescriptionWithName(client, applicationName, service);\n+                    jcrRegistry.deployServiceOnHost(service.getType().getName(), appBean.getHostName());\n+                } catch (RegistryException e) {\n+                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n+                }\n             }\n \n-            try {\n-                jcrRegistry.saveServiceDescription(service);\n-                ApplicationBean appBean = saveApplicationDescriptionWithName(client, applicationName, service);\n-                jcrRegistry.deployServiceOnHost(service.getType().getName(), appBean.getHostName());\n-            } catch (RegistryException e) {\n-                e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n-            }\n         }\n         return service;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/89f36bf8198161ddd3cab72152aa7cc3d5818fbc",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/e43ad3bf15b1529636d4cdc8b9355c11c484011e",
        "message": "Fixing NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1292930 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_54",
        "file": [
            {
                "sha": "9d4aa217348552869a5110930225f79278cf0fb8",
                "filename": "modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "status": "modified",
                "additions": 24,
                "deletions": 20,
                "changes": 44,
                "blob_url": "https://github.com/apache/airavata/blob/89f36bf8198161ddd3cab72152aa7cc3d5818fbc/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "raw_url": "https://github.com/apache/airavata/raw/89f36bf8198161ddd3cab72152aa7cc3d5818fbc/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java?ref=89f36bf8198161ddd3cab72152aa7cc3d5818fbc",
                "patch": "@@ -28,34 +28,38 @@ public static ServiceDescription createServiceDescription(ServiceBean serviceBea\n \n         org.ogce.schemas.gfac.documents.InputParameterType[] inputParameterTypes = serviceBean.getInputParam();\n         List<InputParameterType> inputList = new ArrayList<InputParameterType>();\n-        for (org.ogce.schemas.gfac.documents.InputParameterType inputParameterType : inputParameterTypes) {\n-            InputParameterType input = InputParameterType.Factory.newInstance();\n-            String inputParamName = inputParameterType.getParameterName();\n-            input.setParameterName(inputParamName);\n+        if (inputParameterTypes != null) {\n+            for (org.ogce.schemas.gfac.documents.InputParameterType inputParameterType : inputParameterTypes) {\n+                InputParameterType input = InputParameterType.Factory.newInstance();\n+                String inputParamName = inputParameterType.getParameterName();\n+                input.setParameterName(inputParamName);\n \n-            //TODO\n-            org.ogce.schemas.gfac.documents.InputDataType.Enum en = inputParameterType.getParameterType();\n-            input.setParameterType(StringParameterType.Factory.newInstance());\n-            inputList.add(input);\n+                //TODO\n+                org.ogce.schemas.gfac.documents.InputDataType.Enum en = inputParameterType.getParameterType();\n+                input.setParameterType(StringParameterType.Factory.newInstance());\n+                inputList.add(input);\n+            }\n+            InputParameterType[] inputParamList = inputList.toArray(new InputParameterType[inputList.size()]);\n+            serv.getType().setInputParametersArray(inputParamList);\n         }\n-        InputParameterType[] inputParamList = inputList.toArray(new InputParameterType[inputList.size()]);\n-        serv.getType().setInputParametersArray(inputParamList);\n \n         org.ogce.schemas.gfac.documents.OutputParameterType[] outputParameterTypes = serviceBean.getOutputParam();\n         List<OutputParameterType> outputList = new ArrayList<OutputParameterType>();\n-        for (org.ogce.schemas.gfac.documents.OutputParameterType outputParameterType : outputParameterTypes) {\n-            String outputParamName = outputParameterType.getParameterName();\n-            OutputParameterType output = OutputParameterType.Factory.newInstance();\n-            output.setParameterName(outputParamName);\n+        if (outputParameterTypes != null){\n+            for (org.ogce.schemas.gfac.documents.OutputParameterType outputParameterType : outputParameterTypes) {\n+                String outputParamName = outputParameterType.getParameterName();\n+                OutputParameterType output = OutputParameterType.Factory.newInstance();\n+                output.setParameterName(outputParamName);\n \n-            //TODO\n-            org.ogce.schemas.gfac.documents.OutputDataType.Enum en = outputParameterType.getParameterType();\n-            output.setParameterType(StringParameterType.Factory.newInstance());\n-            outputList.add(output);\n+                //TODO\n+                org.ogce.schemas.gfac.documents.OutputDataType.Enum en = outputParameterType.getParameterType();\n+                output.setParameterType(StringParameterType.Factory.newInstance());\n+                outputList.add(output);\n \n+            }\n+            OutputParameterType[] outputParamList = outputList.toArray(new OutputParameterType[outputList.size()]);\n+            serv.getType().setOutputParametersArray(outputParamList);\n         }\n-        OutputParameterType[] outputParamList = outputList.toArray(new OutputParameterType[outputList.size()]);\n-        serv.getType().setOutputParametersArray(outputParamList);\n \n         return serv;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/3eea1a3095f735f7db3b37e65f92b653f0f28f03",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/ce1354e96d1f3d2eedc851ca87e00207ca9f56aa",
        "message": "Changed job submission and data movement protocol to their enums instead of String which will cause to NPE with null values",
        "bug_id": "airavata_55",
        "file": [
            {
                "sha": "184f3e9c9192086ee9886c090171bc6ca42ac1e1",
                "filename": "airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplicationsUtils.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/airavata/blob/3eea1a3095f735f7db3b37e65f92b653f0f28f03/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplicationsUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/3eea1a3095f735f7db3b37e65f92b653f0f28f03/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplicationsUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/airavata-api/airavata-client-sdks/java-client-samples/src/main/java/org/apache/airavata/client/tools/RegisterSampleApplicationsUtils.java?ref=3eea1a3095f735f7db3b37e65f92b653f0f28f03",
                "patch": "@@ -41,15 +41,16 @@\n     public static ComputeResourcePreference\n         createComputeResourcePreference(String computeResourceId, String allocationProjectNumber,\n                                         boolean overridebyAiravata, String preferredBatchQueue,\n-                                        String preferredJobSubmissionProtocol,String preferredDataMovementProtocol,\n+                                        JobSubmissionProtocol preferredJobSubmissionProtocol,\n+                                        DataMovementProtocol preferredDataMovementProtocol,\n                                         String scratchLocation) {\n         ComputeResourcePreference computeResourcePreference = new ComputeResourcePreference();\n         computeResourcePreference.setComputeResourceId(computeResourceId);\n         computeResourcePreference.setOverridebyAiravata(overridebyAiravata);\n         computeResourcePreference.setAllocationProjectNumber(allocationProjectNumber);\n         computeResourcePreference.setPreferredBatchQueue(preferredBatchQueue);\n-        computeResourcePreference.setPreferredDataMovementProtocol(DataMovementProtocol.valueOf(preferredDataMovementProtocol));\n-        computeResourcePreference.setPreferredJobSubmissionProtocol(JobSubmissionProtocol.valueOf(preferredJobSubmissionProtocol));\n+        computeResourcePreference.setPreferredDataMovementProtocol(preferredDataMovementProtocol);\n+        computeResourcePreference.setPreferredJobSubmissionProtocol(preferredJobSubmissionProtocol);\n         computeResourcePreference.setScratchLocation(scratchLocation);\n         return computeResourcePreference;\n     }"
            },
            {
                "sha": "a49d22f4beacf75d0b014db8acad4bdf01e7d3f0",
                "filename": "modules/integration-tests/src/test/java/org/apache/airavata/integration/tools/DocumentCreatorUtils.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/3eea1a3095f735f7db3b37e65f92b653f0f28f03/modules/integration-tests/src/test/java/org/apache/airavata/integration/tools/DocumentCreatorUtils.java",
                "raw_url": "https://github.com/apache/airavata/raw/3eea1a3095f735f7db3b37e65f92b653f0f28f03/modules/integration-tests/src/test/java/org/apache/airavata/integration/tools/DocumentCreatorUtils.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/integration-tests/src/test/java/org/apache/airavata/integration/tools/DocumentCreatorUtils.java?ref=3eea1a3095f735f7db3b37e65f92b653f0f28f03",
                "patch": "@@ -45,15 +45,15 @@\n \n \tpublic static ComputeResourcePreference createComputeResourcePreference(String computeResourceId, String scratchLocation,\n \t\t\tString allocationProjectNumber, boolean overridebyAiravata,\n-\t\t\tString preferredBatchQueue, String preferredJobSubmissionProtocol,\n-\t\t\tString preferredDataMovementProtocol) throws AppCatalogException {\n+\t\t\tString preferredBatchQueue, JobSubmissionProtocol preferredJobSubmissionProtocol,\n+\t\t\tDataMovementProtocol preferredDataMovementProtocol) throws AppCatalogException {\n \t\tComputeResourcePreference computeResourcePreference = new ComputeResourcePreference();\n \t\tcomputeResourcePreference.setComputeResourceId(computeResourceId);\n \t\tcomputeResourcePreference.setOverridebyAiravata(overridebyAiravata);\n \t\tcomputeResourcePreference.setAllocationProjectNumber(allocationProjectNumber);\n \t\tcomputeResourcePreference.setPreferredBatchQueue(preferredBatchQueue);\n-\t\tcomputeResourcePreference.setPreferredDataMovementProtocol(DataMovementProtocol.valueOf(preferredDataMovementProtocol));\n-\t\tcomputeResourcePreference.setPreferredJobSubmissionProtocol(JobSubmissionProtocol.valueOf(preferredJobSubmissionProtocol));\n+\t\tcomputeResourcePreference.setPreferredDataMovementProtocol(preferredDataMovementProtocol);\n+\t\tcomputeResourcePreference.setPreferredJobSubmissionProtocol(preferredJobSubmissionProtocol);\n \t\tcomputeResourcePreference.setScratchLocation(scratchLocation);\n \t\treturn computeResourcePreference;\n \t}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/b1b7798396512c91e3e6f9d0a0086daa34db8a29",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/74e462d08100522230c537c61cbf21149b3c9170",
        "message": "fixing a NPE during error saving.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/airavata/trunk@1483497 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_56",
        "file": [
            {
                "sha": "9b586f9375fc6b6a10544896e7338c2191c8783f",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorEventListener.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/b1b7798396512c91e3e6f9d0a0086daa34db8a29/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorEventListener.java",
                "raw_url": "https://github.com/apache/airavata/raw/b1b7798396512c91e3e6f9d0a0086daa34db8a29/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorEventListener.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorEventListener.java?ref=b1b7798396512c91e3e6f9d0a0086daa34db8a29",
                "patch": "@@ -216,6 +216,7 @@ private void handleEvent(EventData event, boolean forward, Graph graph) throws A\n             nodeExecutionError.setWorkflowInstanceId(event.getExperimentID());\n             nodeExecutionError.setErrorMessage(event.getMessage());\n             nodeExecutionError.setErrorDescription(event.getMessage());\n+            nodeExecutionError.setErrorTime(event.getTimestamp());\n             this.workflowInterpreterConfiguration.getAiravataAPI().getExecutionManager().addNodeExecutionError(nodeExecutionError);\n             if (node == null) {\n             \tif (nodeID!=null && !nodeID.equals(\"\")) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/1495d09fd4a0f7e1b2a26f744fc0fdac06d58b3e",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/9eb7239cc5ea0f213f29a68a9877c9ca0d0292c3",
        "message": "fixing a NPE during startup.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1359737 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_57",
        "file": [
            {
                "sha": "b2fb13cbdf03a497837d7a7b1688044016fb3de4",
                "filename": "modules/commons/registry-api/src/main/java/org/apache/airavata/registry/api/impl/AiravataJCRRegistry.java",
                "status": "modified",
                "additions": 10,
                "deletions": 7,
                "changes": 17,
                "blob_url": "https://github.com/apache/airavata/blob/1495d09fd4a0f7e1b2a26f744fc0fdac06d58b3e/modules/commons/registry-api/src/main/java/org/apache/airavata/registry/api/impl/AiravataJCRRegistry.java",
                "raw_url": "https://github.com/apache/airavata/raw/1495d09fd4a0f7e1b2a26f744fc0fdac06d58b3e/modules/commons/registry-api/src/main/java/org/apache/airavata/registry/api/impl/AiravataJCRRegistry.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/commons/registry-api/src/main/java/org/apache/airavata/registry/api/impl/AiravataJCRRegistry.java?ref=1495d09fd4a0f7e1b2a26f744fc0fdac06d58b3e",
                "patch": "@@ -1016,7 +1016,7 @@ public WorkflowInstanceStatus getWorkflowExecutionStatus(String experimentId)thr\n \tprivate Node getWorkflowExperimentDataNode(String experimentId,\n \t\t\tSession session) throws RepositoryException {\n \t\treturn getOrAddNode(getOrAddNode(getWorkflowDataNode(session),\n-\t\t                experimentId),experimentId);\n+                experimentId),experimentId);\n \t}\n \n \tprivate Node getWorkflowDataNode(Session session)\n@@ -1138,7 +1138,7 @@ private Node getWorkflowExperimentResultNode(String experimentId,\n             session = getSession();\n             List<String> matchingExperimentIds = getMatchingExperimentIds(regex, session);\n             for(String experimentId:matchingExperimentIds){\n-            \tWorkflowIOData workflowOutputData = getWorkflowExecutionOutput(experimentId,outputName);\n+            \tWorkflowIOData workflowOutputData = getWorkflowExecutionOutput(experimentId, outputName);\n                 workflowStatusMap.put(experimentId,workflowOutputData);\n             }\n \t\t} catch (RepositoryException e) {\n@@ -1598,11 +1598,14 @@ private void setupProvenanceRegistry(){\n         Properties properties = new Properties();\n \t\tURL url = this.getClass().getClassLoader().getResource(REPOSITORY_PROPERTIES);\n         if (url!=null) {\n-\t\t\ttry {\n-\t\t\t\tproperties.load(url.openStream());\n-\t\t\t\tString provRegAccessorClass = properties.getProperty(\"class.provenance.registry.accessor\");\n-\t\t\t\tClass<AiravataProvenanceRegistry> provenanceRegistryClass = (Class<AiravataProvenanceRegistry>) getClass().getClassLoader().loadClass(provRegAccessorClass);\n-\t\t\t\tprovenanceRegistry=(AiravataProvenanceRegistry)provenanceRegistryClass.getConstructor(String.class).newInstance(getUsername());\n+            try {\n+                properties.load(url.openStream());\n+                String provenanceClass = \"class.provenance.registry.accessor\";\n+                String provRegAccessorClass = properties.getProperty(provenanceClass, null);\n+                if (provRegAccessorClass != null) {\n+                    Class<AiravataProvenanceRegistry> provenanceRegistryClass = (Class<AiravataProvenanceRegistry>) getClass().getClassLoader().loadClass(provRegAccessorClass);\n+                    provenanceRegistry = provenanceRegistryClass.getConstructor(String.class).newInstance(getUsername());\n+                }\n \t\t\t} catch (ClassNotFoundException e) {\n \t\t\t\te.printStackTrace();\n \t\t\t} catch (IllegalArgumentException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/9709e1926df48d14ba8375c27f183c5b845ba2f7",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/db13392853589a51a79db26506c107a42744ba2b",
        "message": "Fixing a NPE while testing tutorials.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1357912 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_58",
        "file": [
            {
                "sha": "a92efedbee9b2a95621c362521701cb44c13d5f8",
                "filename": "modules/airavata-client/src/main/java/org/apache/airavata/client/impl/ProvenanceManagerImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/9709e1926df48d14ba8375c27f183c5b845ba2f7/modules/airavata-client/src/main/java/org/apache/airavata/client/impl/ProvenanceManagerImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/9709e1926df48d14ba8375c27f183c5b845ba2f7/modules/airavata-client/src/main/java/org/apache/airavata/client/impl/ProvenanceManagerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-client/src/main/java/org/apache/airavata/client/impl/ProvenanceManagerImpl.java?ref=9709e1926df48d14ba8375c27f183c5b845ba2f7",
                "patch": "@@ -46,7 +46,7 @@\n \tprivate AiravataClient client;\n \t\n \tpublic ProvenanceManagerImpl(AiravataClient client) {\n-\t\tsetClient(getClient());\n+\t\tsetClient(client);\n \t}\n \t\n \t@Override"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/83ce9bab2a645a0995974e485c0dad1dba7c37f2",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/0036a7effec70b650c523d5b847411b9bd214a80",
        "message": "fixing NPE during gridjob submission.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1355188 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_59",
        "file": [
            {
                "sha": "22693bfdb22f6891fc1dbf6de1a10ff30f227eda",
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "status": "modified",
                "additions": 75,
                "deletions": 69,
                "changes": 144,
                "blob_url": "https://github.com/apache/airavata/blob/83ce9bab2a645a0995974e485c0dad1dba7c37f2/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "raw_url": "https://github.com/apache/airavata/raw/83ce9bab2a645a0995974e485c0dad1dba7c37f2/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java?ref=83ce9bab2a645a0995974e485c0dad1dba7c37f2",
                "patch": "@@ -30,6 +30,7 @@\n import org.apache.airavata.commons.gfac.type.ActualParameter;\n import org.apache.airavata.core.gfac.context.invocation.InvocationContext;\n import org.apache.airavata.core.gfac.context.message.MessageContext;\n+import org.apache.airavata.core.gfac.exception.ProviderException;\n import org.apache.airavata.core.gfac.exception.ToolsException;\n import org.apache.airavata.core.gfac.utils.GFacConstants;\n import org.apache.airavata.schemas.gfac.GramApplicationDeploymentType;\n@@ -111,77 +112,82 @@ public static GramAttributes configureRemoteJob(InvocationContext context) throw\n \t\t\t}\n \t\t}\n         // Using the workflowContext Header values if user provided them in the request and overwrite the default values in DD\n-        ContextHeaderDocument.ContextHeader currentContextHeader = WorkflowContextHeaderBuilder.getCurrentContextHeader();\n-        if (currentContextHeader != null &&\n-                currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray() != null &&\n-                currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray().length > 0) {\n-            try {\n-                int cpuCount = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getCpuCount();\n-                app.setCpuCount(cpuCount);\n-            } catch (NullPointerException e) {\n-                log.info(\"No Value sent in WorkflowContextHeader for CPU Count, value in the Deployment Descriptor will be used\");\n-            }\n-            try {\n-                int nodeCount = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getNodeCount();\n-                app.setNodeCount(nodeCount);\n-            } catch (NullPointerException e) {\n-                log.info(\"No Value sent in WorkflowContextHeader for Node Count, value in the Deployment Descriptor will be used\");\n-            }\n-            try {\n-                String queueName = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getQueueName();\n-                if(queueName != null){\n-                    jobAttr.setQueue(queueName);\n-                }else{\n-                    if (app.getQueue() != null) {\n-                        if (app.getQueue().getQueueName() != null) {\n-                            System.out.println(\"Testing\");\n-                            log.info(\"Setting job queue to \" + app.getQueue().getQueueName());\n-                            jobAttr.setQueue(app.getQueue().getQueueName());\n-                        }\n-                    }\n+ContextHeaderDocument.ContextHeader currentContextHeader = WorkflowContextHeaderBuilder.getCurrentContextHeader();\n+if(currentContextHeader.getWorkflowSchedulingContext()!= null){\n+if (currentContextHeader != null &&\n+        currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray() != null &&\n+        currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray().length > 0) {\n+    try {\n+        int cpuCount = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getCpuCount();\n+        app.setCpuCount(cpuCount);\n+    } catch (NullPointerException e) {\n+        log.info(\"No Value sent in WorkflowContextHeader for CPU Count, value in the Deployment Descriptor will be used\");\n+        context.getExecutionContext().getNotifier().executionFail(context,e,\"No Value sent in WorkflowContextHeader for Node Count, value in the Deployment Descriptor will be used\");\n+    }\n+    try {\n+        int nodeCount = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getNodeCount();\n+        app.setNodeCount(nodeCount);\n+    } catch (NullPointerException e) {\n+        log.info(\"No Value sent in WorkflowContextHeader for Node Count, value in the Deployment Descriptor will be used\");\n+         context.getExecutionContext().getNotifier().executionFail(context,e,\"No Value sent in WorkflowContextHeader for Node Count, value in the Deployment Descriptor will be used\");\n+    }\n+    try {\n+        String queueName = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getQueueName();\n+        if(queueName != null){\n+            jobAttr.setQueue(queueName);\n+        }else{\n+            if (app.getQueue() != null) {\n+                if (app.getQueue().getQueueName() != null) {\n+                    System.out.println(\"Testing\");\n+                    log.info(\"Setting job queue to \" + app.getQueue().getQueueName());\n+                    jobAttr.setQueue(app.getQueue().getQueueName());\n                 }\n-            } catch (NullPointerException e) {\n-                log.info(\"No Value sent in WorkflowContextHeader for Node Count, value in the Deployment Descriptor will be used\");\n             }\n         }\n-        if (app.getNodeCount() > 0) {\n-            jobAttr.set(\"hostCount\", String.valueOf(app.getNodeCount()));\n-        }\n-        if (app.getCpuCount() > 0) {\n-            log.info(\"Setting number of procs to \" + app.getCpuCount());\n-            jobAttr.setNumProcs(app.getCpuCount());\n-        }\n-        if (app.getMinMemory() > 0) {\n-            log.info(\"Setting minimum memory to \" + app.getMinMemory());\n-            jobAttr.setMinMemory(app.getMinMemory());\n-        }\n-        if (app.getMaxMemory() > 0) {\n-            log.info(\"Setting maximum memory to \" + app.getMaxMemory());\n-            jobAttr.setMaxMemory(app.getMaxMemory());\n-        }\n-        if (app.getProjectAccount() != null) {\n-            if (app.getProjectAccount().getProjectAccountNumber() != null) {\n-                log.info(\"Setting project to \" + app.getProjectAccount().getProjectAccountNumber());\n-                jobAttr.setProject(app.getProjectAccount().getProjectAccountNumber());\n-            }\n-        }\n-        String jobType = JobType.SINGLE.toString();\n-        if (app.getJobType() != null) {\n-            jobType = app.getJobType().toString();\n-        }\n-        if (jobType.equalsIgnoreCase(JobType.SINGLE.toString())) {\n-            log.info(\"Setting job type to single\");\n-            jobAttr.setJobType(GramAttributes.JOBTYPE_SINGLE);\n-        } else if (jobType.equalsIgnoreCase(JobType.MPI.toString())) {\n-            log.info(\"Setting job type to mpi\");\n-            jobAttr.setJobType(GramAttributes.JOBTYPE_MPI);\n-        } else if (jobType.equalsIgnoreCase(JobType.MULTIPLE.toString())) {\n-            log.info(\"Setting job type to multiple\");\n-            jobAttr.setJobType(GramAttributes.JOBTYPE_MULTIPLE);\n-        } else if (jobType.equalsIgnoreCase(JobType.CONDOR.toString())) {\n-            jobAttr.setJobType(GramAttributes.JOBTYPE_CONDOR);\n-        }\n-\n-        return jobAttr;\n+    } catch (NullPointerException e) {\n+        log.info(\"No Value sent in WorkflowContextHeader for Node Count, value in the Deployment Descriptor will be used\");\n+        context.getExecutionContext().getNotifier().executionFail(context,e,\"No Value sent in WorkflowContextHeader for Node Count, value in the Deployment Descriptor will be used\");\n     }\n }\n+}\n+if (app.getNodeCount() > 0) {\n+    jobAttr.set(\"hostCount\", String.valueOf(app.getNodeCount()));\n+}\n+if (app.getCpuCount() > 0) {\n+    log.info(\"Setting number of procs to \" + app.getCpuCount());\n+    jobAttr.setNumProcs(app.getCpuCount());\n+}\n+if (app.getMinMemory() > 0) {\n+    log.info(\"Setting minimum memory to \" + app.getMinMemory());\n+    jobAttr.setMinMemory(app.getMinMemory());\n+}\n+if (app.getMaxMemory() > 0) {\n+    log.info(\"Setting maximum memory to \" + app.getMaxMemory());\n+    jobAttr.setMaxMemory(app.getMaxMemory());\n+}\n+if (app.getProjectAccount() != null) {\n+    if (app.getProjectAccount().getProjectAccountNumber() != null) {\n+        log.info(\"Setting project to \" + app.getProjectAccount().getProjectAccountNumber());\n+        jobAttr.setProject(app.getProjectAccount().getProjectAccountNumber());\n+    }\n+}\n+String jobType = JobType.SINGLE.toString();\n+if (app.getJobType() != null) {\n+    jobType = app.getJobType().toString();\n+}\n+if (jobType.equalsIgnoreCase(JobType.SINGLE.toString())) {\n+    log.info(\"Setting job type to single\");\n+    jobAttr.setJobType(GramAttributes.JOBTYPE_SINGLE);\n+} else if (jobType.equalsIgnoreCase(JobType.MPI.toString())) {\n+    log.info(\"Setting job type to mpi\");\n+    jobAttr.setJobType(GramAttributes.JOBTYPE_MPI);\n+} else if (jobType.equalsIgnoreCase(JobType.MULTIPLE.toString())) {\n+    log.info(\"Setting job type to multiple\");\n+    jobAttr.setJobType(GramAttributes.JOBTYPE_MULTIPLE);\n+} else if (jobType.equalsIgnoreCase(JobType.CONDOR.toString())) {\n+    jobAttr.setJobType(GramAttributes.JOBTYPE_CONDOR);\n+}\n+\n+return jobAttr;\n+}\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/05fe41a4c91c1802e342147deeb2df4f0c5966d8",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/184c805b1cd17115cf8c737deecfb444f00e4879",
        "message": "Fixing a NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1350007 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_60",
        "file": [
            {
                "sha": "9ea5072bf68ab49690feac96eef1aa842e9146ff",
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java",
                "raw_url": "https://github.com/apache/airavata/raw/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/impl/GramProvider.java?ref=05fe41a4c91c1802e342147deeb2df4f0c5966d8",
                "patch": "@@ -479,6 +479,7 @@ private String doStaging(String outputFileStagingPath, String paramValue, Actual\n                 gssCred, outputFile);\n         return outputFileStagingPath + File.separator + fileName;\n     }\n+\n     private String readLastLinesofStdOut(String path, int count) {\n         StringBuffer buffer = new StringBuffer();\n         FileInputStream in = null;"
            },
            {
                "sha": "9dd19dde22a3374d772c110f98763fdbb9bf6c01",
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/airavata/blob/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "raw_url": "https://github.com/apache/airavata/raw/05fe41a4c91c1802e342147deeb2df4f0c5966d8/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/provider/utils/GramRSLGenerator.java?ref=05fe41a4c91c1802e342147deeb2df4f0c5966d8",
                "patch": "@@ -100,7 +100,8 @@ public static GramAttributes configureRemoteJob(InvocationContext context) throw\n         }\n         // Using the workflowContext Header values if user provided them in the request and overwrite the default values in DD\n         ContextHeaderDocument.ContextHeader currentContextHeader = WorkflowContextHeaderBuilder.getCurrentContextHeader();\n-        if (currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray() != null &&\n+        if (currentContextHeader != null &&\n+                currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray() != null &&\n                 currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray().length > 0) {\n             try {\n                 int cpuCount = currentContextHeader.getWorkflowSchedulingContext().getApplicationSchedulingContextArray()[0].getCpuCount();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/d7ffbe3ee7192a32a9ac76c2a1bd82387bb99886",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/b731bc943e48e0fbc8a951d26f2a94fce98a01aa",
        "message": "NPE issue fixed (engine.getGUI() is not set yet)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1342847 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_61",
        "file": [
            {
                "sha": "d98203d507c39deeb4161ec2bd4be54a3bb11323",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/XBayaGUI.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/d7ffbe3ee7192a32a9ac76c2a1bd82387bb99886/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/XBayaGUI.java",
                "raw_url": "https://github.com/apache/airavata/raw/d7ffbe3ee7192a32a9ac76c2a1bd82387bb99886/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/XBayaGUI.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/XBayaGUI.java?ref=d7ffbe3ee7192a32a9ac76c2a1bd82387bb99886",
                "patch": "@@ -566,7 +566,7 @@ private void initPane() {\n         this.componentViewer = new ComponentViewer();\n         this.componentSelector = new ComponentSelector(this.engine);\n         this.componentSelector.addComponentSelectorListener(this.componentViewer);\n-        this.monitorPane = new MonitorPanel(this.engine.getGUI(),this.engine.getMonitor());\n+        this.monitorPane = new MonitorPanel(this,this.engine.getMonitor());\n \n         compTreeXBayapanel = new ScrollPanel(this.componentSelector, ComponentSelector.TITLE);\n         ScrollPanel compViewXBayaPanel = new ScrollPanel(this.componentViewer, ComponentViewer.TITLE);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/afc9e808bbbb7ed69495ce1faaf9fd6370a918de",
        "message": "Fixing NPE during embedded mode invocations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1311979 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_62",
        "file": [
            {
                "sha": "9ba75daee8dc90e940ea630d051ecca93e84d1fb",
                "filename": "modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "raw_url": "https://github.com/apache/airavata/raw/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java?ref=fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
                "patch": "@@ -316,7 +316,7 @@ private OMElement getWSDL(ConfigurationContext context, String serviceName) thro\n      */\n     private Axis2Registry getRegistry(ConfigurationContext context) {\n         if (this.registry == null) {\n-            this.registry = (Axis2Registry) context.getProperty(GFacService.CONFIGURATION_CONTEXT_REGISTRY);\n+            this.registry = (Axis2Registry) ((GFacConfiguration)context.getProperty(GFacService.GFAC_CONFIGURATION)).getRegistry();\n         }\n         return registry;\n     }"
            },
            {
                "sha": "1a52d7af112093e2d2192f12ff7af816523196ab",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "raw_url": "https://github.com/apache/airavata/raw/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
                "patch": "@@ -923,7 +923,7 @@ private void handleWSComponent(Node node) throws XBayaException {\n                                         .getComponent().getWSDL()), node.getID(),\n                                 this.engine.getMonitor().getConfiguration()\n                                         .getMessageBoxURL().toASCIIString(),\n-                                gfacURLString, this.notifier, this.topic,\n+                                this.engine.getMonitor().getConfiguration().getBrokerURL().toASCIIString(), this.notifier, this.topic,\n                                 this.engine.getConfiguration().getJcrComponentRegistry().getRegistry(),\n                                 portTypeQName.getLocalPart(),this.engine.getConfiguration());\n                     } else {\n@@ -941,7 +941,7 @@ private void handleWSComponent(Node node) throws XBayaException {\n                                         .getComponent().getWSDL()), node.getID(),\n                                 this.configuration.getMessageBoxURL()\n                                         .toASCIIString(),\n-                                gfacURLString, this.notifier, this.topic, configuration.getJcrComponentRegistry().getRegistry(),\n+                                this.configuration.getBrokerURL().toASCIIString(), this.notifier, this.topic, configuration.getJcrComponentRegistry().getRegistry(),\n                                 portTypeQName.getLocalPart(),this.configuration);\n                     }else{\n                         invoker = new GenericInvoker(portTypeQName,"
            },
            {
                "sha": "3fa956471ec4d0729df7546f4a7e94a273a65755",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "raw_url": "https://github.com/apache/airavata/raw/fab4836033ecc1571c0f0c2fc5c2634d2a25f14f/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java?ref=fab4836033ecc1571c0f0c2fc5c2634d2a25f14f",
                "patch": "@@ -199,6 +199,7 @@ public EmbeddedGFacInvoker(QName portTypeQName, WsdlDefinitions wsdl, String nod\n      * @throws XBayaException\n      */\n     public void setup() throws XBayaException {\n+        this.notifier.setServiceID(this.nodeID);\n     }\n \n     private void setup(WsdlDefinitions definitions) throws XBayaException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/11b3622200318580df2a497c2fa917a99d3dd7af",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/ffe98f28d870cc030af8a2629e74f8f9057071e0",
        "message": "Fixing NPE during embedded mode of XBaya.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1311884 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_63",
        "file": [
            {
                "sha": "b53cf5b28562f04cffd8ec7d17bb5f32bc04fdef",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "status": "modified",
                "additions": 10,
                "deletions": 2,
                "changes": 12,
                "blob_url": "https://github.com/apache/airavata/blob/11b3622200318580df2a497c2fa917a99d3dd7af/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "raw_url": "https://github.com/apache/airavata/raw/11b3622200318580df2a497c2fa917a99d3dd7af/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java?ref=11b3622200318580df2a497c2fa917a99d3dd7af",
                "patch": "@@ -59,6 +59,7 @@\n import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n import org.xml.sax.SAXException;\n+import xsul5.MLogger;\n \n import javax.jcr.RepositoryException;\n import javax.xml.namespace.QName;\n@@ -73,13 +74,14 @@\n  * WorkflowInterpretorSkeleton java skeleton for the axisService\n  */\n public class WorkflowInterpretorSkeleton implements ServiceLifeCycle {\n+    private static final MLogger log = MLogger.getLogger();\n \n \tpublic static final String PROXYSERVER = \"proxyserver\";\n \tpublic static final String MSGBOX = \"msgbox\";\n \tpublic static final String GFAC = \"gfac\";\n \tpublic static final String DSC = \"dsc\";\n \tpublic static final String BROKER = \"broker\";\n-    public static final String MYPROXY_USER = \"myproxy.user\";\n+    public static final String MYPROXY_USER = \"myproxy.username\";\n     public static final String MYPROXY_PASS = \"myproxy.password\";\n     public static final String JCR_USER = \"jcr.username\";\n     public static final String JCR_PASS = \"jcr.password\";\n@@ -127,7 +129,11 @@ public void run() {\n \t\t                    jcrComponentRegistry = new JCRComponentRegistry(new URI(jcrURL),jcrUserName,jcrPassword);\n                             List<HostDescription> hostList = getDefinedHostDescriptions();\n                             for(HostDescription host:hostList){\n-                                jcrComponentRegistry.getRegistry().saveHostDescription(host);\n+                                // This will avoid the changes user is doing to one of the predefined Hosts during a restart of the system\n+                                if(jcrComponentRegistry.getRegistry().getHostDescription(host.getType().getHostName()) == null){\n+                                    log.info(\"Saving the predefined Host: \" + host.getType().getHostName());\n+                                    jcrComponentRegistry.getRegistry().saveHostDescription(host);\n+                                }\n                             }\n \t\t                } catch (RepositoryException e) {\n \t\t                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n@@ -279,6 +285,8 @@ public  XBayaConfiguration getConfiguration(NameValue[] vals) throws URISyntaxEx\n \t\tconfiguration.setMyProxyLifetime(XBayaConstants.DEFAULT_MYPROXY_LIFTTIME);\n \t\tconfiguration.setMyProxyPort(XBayaConstants.DEFAULT_MYPROXY_PORT);\n \t\tconfiguration.setMyProxyServer(findValue(vals, PROXYSERVER, XBayaConstants.DEFAULT_MYPROXY_SERVER));\n+        configuration.setMyProxyPassphrase(findValue(vals, MYPROXY_PASS, \"\"));\n+        configuration.setMyProxyUsername(findValue(vals,MYPROXY_USER,\"\"));\n         configuration.setTrustedCertLocation(findValue(vals, TRUSTED_CERT_LOCATION, \"\"));\n \t\treturn configuration;\n \t}"
            },
            {
                "sha": "7cc25b0bbc7ff565fd0a243aefb7c08a4b189d8f",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/11b3622200318580df2a497c2fa917a99d3dd7af/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "raw_url": "https://github.com/apache/airavata/raw/11b3622200318580df2a497c2fa917a99d3dd7af/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/invoker/EmbeddedGFacInvoker.java?ref=11b3622200318580df2a497c2fa917a99d3dd7af",
                "patch": "@@ -232,7 +232,7 @@ public void setInput(String name, Object value) throws XBayaException {\n             ServiceDescriptionType serviceDescriptionType = serviceDescription.getType();\n             for (Parameter parameter : serviceDescriptionType.getInputParametersArray()) {\n                 //todo this implementation doesn't work when there are n number of nodes connecting .. need to fix\n-                actualParameters.put(parameter, GfacUtils.getInputActualParameter(parameter, (String) value));\n+                actualParameters.put(parameter, GfacUtils.getInputActualParameter(parameter, XMLUtil.xmlElementToString((XmlElement)value)));\n             }\n         } catch (RuntimeException e) {\n             logger.error(e.getMessage(), e);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/b6d597602af05a4901ac896385c7b9f421a4a06d",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/9aa14fa766129ce64c805085aab04388cb0d6b2b",
        "message": "Fixing a NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1297225 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_64",
        "file": [
            {
                "sha": "f2f39d70b78b3d1b045ca79bfab41114a02961e3",
                "filename": "modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/airavata/blob/b6d597602af05a4901ac896385c7b9f421a4a06d/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "raw_url": "https://github.com/apache/airavata/raw/b6d597602af05a4901ac896385c7b9f421a4a06d/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/MigrationUtil.java?ref=b6d597602af05a4901ac896385c7b9f421a4a06d",
                "patch": "@@ -188,7 +188,12 @@ public static ApplicationDeploymentDescription createAppDeploymentDescription(Ap\n             projectAccount.setProjectAccountNumber(appBean.getProjectName());\n             projectAccount.setProjectAccountDescription(appBean.getPcount().toString());\n \n-            QueueType queueName = gram.getQueue();\n+            QueueType queueName;\n+            if(gram.getQueue() != null) {\n+                queueName = gram.getQueue();\n+            } else {\n+                queueName = gram.addNewQueue();\n+            }\n             queueName.setQueueName(appBean.getQueue());\n \n         } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/6ea1fb3146c4f7fe946c8eb472788741c2bc3226",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/a27d8086195c686866ae5f3eb50aa142f40b18be",
        "message": "AIRAVATA-309 Fixing NPE when accessing a remote jcr registry. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1295654 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_65",
        "file": [
            {
                "sha": "6b94e02bdafa357f497f0d015017de8d7e480fc7",
                "filename": "modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java",
                "status": "modified",
                "additions": 10,
                "deletions": 6,
                "changes": 16,
                "blob_url": "https://github.com/apache/airavata/blob/6ea1fb3146c4f7fe946c8eb472788741c2bc3226/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java",
                "raw_url": "https://github.com/apache/airavata/raw/6ea1fb3146c4f7fe946c8eb472788741c2bc3226/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry-migrator/src/main/java/org/apache/airavata/migrator/registry/XRegistryMigrate.java?ref=6ea1fb3146c4f7fe946c8eb472788741c2bc3226",
                "patch": "@@ -42,17 +42,21 @@ public static void main(String[] args) throws XRegistryClientException {\n             e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n         }\n \n-        /* Create database */\n         Map<String,String> config = new HashMap<String,String>();\n-        config.put(\"org.apache.jackrabbit.repository.home\",\"target\");\n+        URI uri = null;\n         try {\n-            jcrRegistry = new AiravataJCRRegistry(new URI(jcrRegsitryURL),\n-                    \"org.apache.jackrabbit.core.RepositoryFactoryImpl\",\n+            uri = new URI(jcrRegsitryURL);\n+        } catch (URISyntaxException e) {\n+            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n+        }\n+        config.put(\"org.apache.jackrabbit.repository.uri\", uri.toString());\n+\n+        try {\n+            jcrRegistry = new AiravataJCRRegistry(uri,\n+                    \"org.apache.jackrabbit.rmi.repository.RmiRepositoryFactory\",\n                     jcrUsername, jcrPassword, config);\n         } catch (RepositoryException e) {\n             e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n-        } catch (URISyntaxException e) {\n-            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n         }\n \n         XRegistryClient client = XRegistryClientUtil.CreateGSISecureRegistryInstance(propertyfile);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/e2f83e8c466558def7a833b7529030426877a2ca",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/bf41c0bf90f7edf22805fb736b5f4ec141402989",
        "message": "fixing test failure and NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1245073 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_66",
        "file": [
            {
                "sha": "e5ad7e9086e0fd83843155679e0ea66e48d1f6f8",
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "raw_url": "https://github.com/apache/airavata/raw/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java?ref=e2f83e8c466558def7a833b7529030426877a2ca",
                "patch": "@@ -252,6 +252,7 @@ public void preProcess(InvocationContext context) throws ServiceException {\n \n     @Override\n     public void postProcess(InvocationContext context) throws ServiceException {\n+        if(this.registryService != null)\n         ((JCRRegistry)this.registryService).closeConnection();\n     }\n "
            },
            {
                "sha": "d05ba070c1dbedf8b0988c73494b1831038ca765",
                "filename": "modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "raw_url": "https://github.com/apache/airavata/raw/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java?ref=e2f83e8c466558def7a833b7529030426877a2ca",
                "patch": "@@ -125,7 +125,13 @@ public void testExecute() {\n \t\t\tDefaultExecutionContext ec = new DefaultExecutionContext();\n \t\t\tec.addNotifiable(new LoggingNotification());\n \t\t\tct.setExecutionContext(ec);\n+             Map<String,String> config = new HashMap<String,String>();\n+            config.put(\"org.apache.jackrabbit.repository.home\",\"target\");\n+\t\t    AiravataJCRRegistry jcrRegistry = new AiravataJCRRegistry(null,\n+\t\t\t\t\"org.apache.jackrabbit.core.RepositoryFactoryImpl\", \"admin\",\n+\t\t\t\t\"admin\", config);\n \n+            ec.setRegistryService(jcrRegistry);\n \t\t\tct.setServiceName(\"SimpleEcho\");\n \n \t\t\t/*"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/fa553cd35fd41c99c70b118238e5040574967ee3",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/4b6ca8799086c8f62eab9983b8e15ededeebaba6",
        "message": "fixing NPE hwen invoking GFac service.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1235072 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_67",
        "file": [
            {
                "sha": "c0844ce7828187365003f299d26b63d478f81a84",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/airavata/blob/fa553cd35fd41c99c70b118238e5040574967ee3/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "raw_url": "https://github.com/apache/airavata/raw/fa553cd35fd41c99c70b118238e5040574967ee3/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=fa553cd35fd41c99c70b118238e5040574967ee3",
                "patch": "@@ -1377,7 +1377,7 @@ private Invoker createInvokerForEachSingleWSNode(Node foreachWSNode,\n     private void runInThread(final LinkedList<String> listOfValues,\n                              ForEachNode forEachNode, final Node middleNode,\n                               Node[] endForEachNodes,\n-\t\t\tMap<Node,Invoker> tempInvoker,\n+\t\t\t                Map<Node,Invoker> tempInvoker,\n                              AtomicInteger counter, final Integer[] inputNumber) throws XBayaException {\n \n         final LinkedList<Invoker> invokerList = new LinkedList<Invoker>();\n@@ -1435,7 +1435,8 @@ public void run() {\n                     */\n                     Node fromNode = port.getFromNode();\n //                if (fromNode instanceof ForEachNode) {\n-                    inputVal = input;\n+                    inputVal = ODEClientUtil.parseValue((WSComponentPort) port.getComponentPort(),\n+                                                    input);\n //                }\n \n                     if (null == inputVal) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/565f14fb87cc55c333b62f9d608bc7420cc61e80",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/9f5a6d03351bf76a51c4c519c783eccef2de8768",
        "message": "fixing NPE in Interpreter service.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1231322 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_68",
        "file": [
            {
                "sha": "348213629e825817fa3e41f151174c685e9bb052",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "status": "modified",
                "additions": 11,
                "deletions": 1,
                "changes": 12,
                "blob_url": "https://github.com/apache/airavata/blob/565f14fb87cc55c333b62f9d608bc7420cc61e80/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "raw_url": "https://github.com/apache/airavata/raw/565f14fb87cc55c333b62f9d608bc7420cc61e80/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=565f14fb87cc55c333b62f9d608bc7420cc61e80",
                "patch": "@@ -765,11 +765,21 @@ private void handleWSComponent(Node node) throws XBayaException {\n \t\t\t\t\t\t\t\t.getID()));\n \n \t\t\t} else {\n-\t\t\t\tinvoker = new GenericInvoker(portTypeQName,\n+                if(this.mode == GUI_MODE){\n+                    //if user configure the msgBox url using the UI we have to pick the latest one which\n+                    //set by the UI\n+\t\t\t\t    invoker = new GenericInvoker(portTypeQName,\n \t\t\t\t\t\tWSDLUtil.wsdlDefinitions5ToWsdlDefintions3(wsNode\n \t\t\t\t\t\t\t\t.getComponent().getWSDL()), node.getID(),\n \t\t\t\t\t\tthis.engine.getMonitor().getConfiguration().getMessageBoxURL().toASCIIString(),\n \t\t\t\t\t\tgfacURLString, this.notifier);\n+                }else{\n+                    invoker = new GenericInvoker(portTypeQName,\n+\t\t\t\t\t\tWSDLUtil.wsdlDefinitions5ToWsdlDefintions3(wsNode\n+\t\t\t\t\t\t\t\t.getComponent().getWSDL()), node.getID(),\n+\t\t\t\t\t\tthis.configuration.getMessageBoxURL().toASCIIString(),\n+\t\t\t\t\t\tgfacURLString, this.notifier);\n+                }\n \t\t\t}\n \n \t\t} else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/9f5a6d03351bf76a51c4c519c783eccef2de8768",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/f231d6d25a5f5a81220783febf74afed9f266f87",
        "message": "fixing NPE in WorkflowInterpreter service.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1231317 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_69",
        "file": [
            {
                "sha": "45bd62c131920ebd9ccc713ed216cf02a19db0b7",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/airavata/blob/9f5a6d03351bf76a51c4c519c783eccef2de8768/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "raw_url": "https://github.com/apache/airavata/raw/9f5a6d03351bf76a51c4c519c783eccef2de8768/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=9f5a6d03351bf76a51c4c519c783eccef2de8768",
                "patch": "@@ -167,6 +167,7 @@ public WorkflowInterpreter(XBayaConfiguration configuration, String topic,\n \t\tthis.mode = SERVER_MODE;\n \t\tthis.retryFailed = false;\n \t\tthis.runWithCrossProduct = this.configuration.isRunWithCrossProduct();\n+        provenanceWriter = new PredicatedTaskRunner(1);\n \t}\n \n \n@@ -195,7 +196,7 @@ public WorkflowInterpreter(XBayaConfiguration configuration, String topic,\n                 }\n                 this.mode = SERVER_MODE;\n                 this.retryFailed = false;\n-            provenanceWriter = new PredicatedTaskRunner(1);\n+                provenanceWriter = new PredicatedTaskRunner(1);\n \n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/5c412773b4dd63325c0e007d38bce14057193f68",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/6eba54cf0b7786e3c22a6fd03ecf81fece01dddd",
        "message": "fixing NPE during invocation of interpreterservice.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1230297 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_70",
        "file": [
            {
                "sha": "7a1a3a5c0516b9465037a4873ff68edc5b7de142",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/airavata/blob/5c412773b4dd63325c0e007d38bce14057193f68/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "raw_url": "https://github.com/apache/airavata/raw/5c412773b4dd63325c0e007d38bce14057193f68/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpreter.java?ref=5c412773b4dd63325c0e007d38bce14057193f68",
                "patch": "@@ -751,16 +751,16 @@ private void handleWSComponent(Node node) throws XBayaException {\n \t\t\t\t}\n \n \t\t\t\tinvoker = new WorkflowInvokerWrapperForGFacInvoker(\n-\t\t\t\t\t\tportTypeQName, gfacURLString, this.configuration\n-\t\t\t\t\t\t\t\t.getMessageBoxURL().toString(), leadCtxHeader,\n+\t\t\t\t\t\tportTypeQName, gfacURLString,\n+                        this.engine.getMonitor().getConfiguration().getMessageBoxURL().toString(), leadCtxHeader,\n \t\t\t\t\t\tthis.notifier.createServiceNotificationSender(node\n \t\t\t\t\t\t\t\t.getID()));\n \n \t\t\t} else {\n \t\t\t\tinvoker = new GenericInvoker(portTypeQName,\n \t\t\t\t\t\tWSDLUtil.wsdlDefinitions5ToWsdlDefintions3(wsNode\n \t\t\t\t\t\t\t\t.getComponent().getWSDL()), node.getID(),\n-\t\t\t\t\t\tthis.configuration.getMessageBoxURL().toString(),\n+\t\t\t\t\t\tthis.engine.getMonitor().getConfiguration().getMessageBoxURL().toASCIIString(),\n \t\t\t\t\t\tgfacURLString, this.notifier);\n \t\t\t}\n \n@@ -1326,7 +1326,7 @@ private void runInThread(LinkedList<String> listOfValues,\n \t\t\tfor (Iterator<String> iterator = listOfValues.iterator(); iterator\n \t\t\t\t\t.hasNext();) {\n \t\t\t\tString input = iterator.next();\n-\t\t\t\tfinal String gfacURLString = this.engine.getConfiguration()\n+\t\t\t\tfinal String gfacURLString = this.configuration\n \t\t\t\t\t\t.getGFacURL().toString();\n \n \t\t\t\tif (middleNode instanceof WSNode) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/6f78b6667da6a5b28ff32d468ab5f448ebf17925",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/1719ac04b934332f1485c8676eff6fc0b4d4f703",
        "message": "fixing NPE during gfac-service invocation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1195474 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_71",
        "file": [
            {
                "sha": "31997a63f7f204626a30501b8a3a5ed3f056228b",
                "filename": "modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/airavata/blob/6f78b6667da6a5b28ff32d468ab5f448ebf17925/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "raw_url": "https://github.com/apache/airavata/raw/6f78b6667da6a5b28ff32d468ab5f448ebf17925/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-axis2/src/main/java/org/apache/airavata/services/gfac/axis2/reciever/GFacMessageReciever.java?ref=6f78b6667da6a5b28ff32d468ab5f448ebf17925",
                "patch": "@@ -23,6 +23,7 @@\n \n import java.io.StringReader;\n import java.net.URI;\n+import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n \n@@ -43,6 +44,7 @@\n import org.apache.airavata.core.gfac.services.GenericService;\n import org.apache.airavata.registry.api.Axis2Registry;\n import org.apache.airavata.registry.api.exception.RegistryException;\n+import org.apache.airavata.schemas.gfac.InputParameterType;\n import org.apache.airavata.schemas.gfac.OutputParameterType;\n import org.apache.airavata.schemas.gfac.Parameter;\n import org.apache.airavata.schemas.gfac.ServiceDescriptionType;\n@@ -179,7 +181,7 @@ private OMElement invokeApplication(String serviceName, OMElement input, Message\n             ParameterContextImpl inputParam = new ParameterContextImpl();\n             ServiceDescriptionType serviceDescriptionType = serviceDescription.getType();\n \n-            List<Parameter> newInputs = null;\n+            List<InputParameterType> newInputs = new ArrayList<InputParameterType>();\n             for (int i = 0; i < serviceDescriptionType.getInputParametersArray().length; i++) {\n                 newInputs.add(serviceDescriptionType.getInputParametersArray(i));\n             }\n@@ -199,7 +201,7 @@ private OMElement invokeApplication(String serviceName, OMElement input, Message\n              */\n             ParameterContextImpl outputParam = new ParameterContextImpl();\n \n-            List<OutputParameterType> newOutputs = null;\n+            List<OutputParameterType> newOutputs = new ArrayList<OutputParameterType>();\n             for (int i = 0; i < serviceDescriptionType.getOutputParametersArray().length; i++) {\n                 newOutputs.add(serviceDescriptionType.getOutputParametersArray(i));\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/4984417fc162a3e0966f45c10debd9c34f826b00",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/36ff4e5b74b54ac2d5a2348ddb7b3fab082c1f64",
        "message": "issue with hosts not getting added + NPE in host desc dialog + removing unused import + making samples optional in xbaya jar\n\ngit-svn-id: https://svn.apache.org/repos/asf/airavata/trunk@1532595 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_72",
        "file": [
            {
                "sha": "597ad9f5368ba43ec0b5f7c5947ababc3d153347",
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/gfac/handler/SCPInputHandler.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/4984417fc162a3e0966f45c10debd9c34f826b00/modules/gfac-core/src/main/java/org/apache/airavata/gfac/handler/SCPInputHandler.java",
                "raw_url": "https://github.com/apache/airavata/raw/4984417fc162a3e0966f45c10debd9c34f826b00/modules/gfac-core/src/main/java/org/apache/airavata/gfac/handler/SCPInputHandler.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/gfac/handler/SCPInputHandler.java?ref=4984417fc162a3e0966f45c10debd9c34f826b00",
                "patch": "@@ -24,7 +24,6 @@\n import java.io.IOException;\n import java.util.*;\n \n-import com.sun.tools.javac.util.Paths;\n import net.schmizz.sshj.xfer.scp.SCPFileTransfer;\n \n import org.apache.airavata.common.utils.StringUtil;"
            },
            {
                "sha": "aa5eab298585f39967e49a99194c4b449b9a5389",
                "filename": "modules/rest/mappings/src/main/java/org/apache/airavata/rest/mappings/utils/DescriptorUtil.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/airavata/blob/4984417fc162a3e0966f45c10debd9c34f826b00/modules/rest/mappings/src/main/java/org/apache/airavata/rest/mappings/utils/DescriptorUtil.java",
                "raw_url": "https://github.com/apache/airavata/raw/4984417fc162a3e0966f45c10debd9c34f826b00/modules/rest/mappings/src/main/java/org/apache/airavata/rest/mappings/utils/DescriptorUtil.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/rest/mappings/src/main/java/org/apache/airavata/rest/mappings/utils/DescriptorUtil.java?ref=4984417fc162a3e0966f45c10debd9c34f826b00",
                "patch": "@@ -151,7 +151,6 @@ public static HostDescriptor createHostDescriptor (HostDescription hostDescripti\n             }\n         }else if (hostDescriptionType instanceof GsisshHostType) {\n             hostType.add(HostTypes.GSISSH_HOST_TYPE);\n-            GlobusHostType globusHostType = (GlobusHostType) hostDescriptionType;\n         } else if (hostDescriptionType instanceof SSHHostType) {\n             hostType.add(HostTypes.SSH_HOST_TYPE);\n             SSHHostType sshHostType = (SSHHostType) hostDescriptionType;"
            },
            {
                "sha": "e94eac3ef001bace7b097e54237c06d2caff1ee1",
                "filename": "modules/xbaya-gui/pom.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/airavata/blob/4984417fc162a3e0966f45c10debd9c34f826b00/modules/xbaya-gui/pom.xml",
                "raw_url": "https://github.com/apache/airavata/raw/4984417fc162a3e0966f45c10debd9c34f826b00/modules/xbaya-gui/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/pom.xml?ref=4984417fc162a3e0966f45c10debd9c34f826b00",
                "patch": "@@ -110,7 +110,8 @@\n             <groupId>org.apache.airavata</groupId>\n             <artifactId>apache-airavata-samples</artifactId>\n             <version>${project.version}</version>\n-\t\t\t<type>zip</type>\n+\t    <type>zip</type>\n+\t    <optional>true</optional>\n         </dependency>\n \n         <dependency>"
            },
            {
                "sha": "768ea817ed7775b7aa26bf4cf11c4cabeb814e2c",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/airavata/blob/4984417fc162a3e0966f45c10debd9c34f826b00/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "raw_url": "https://github.com/apache/airavata/raw/4984417fc162a3e0966f45c10debd9c34f826b00/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/interpretor/WorkflowInterpretorSkeleton.java?ref=4984417fc162a3e0966f45c10debd9c34f826b00",
                "patch": "@@ -50,7 +50,6 @@\n import org.apache.airavata.commons.gfac.type.HostDescription;\n import org.apache.airavata.schemas.gfac.GlobusHostType;\n import org.apache.airavata.schemas.gfac.GsisshHostType;\n-import org.apache.airavata.schemas.gfac.HostDescriptionType;\n import org.apache.airavata.schemas.gfac.SSHHostType;\n import org.apache.airavata.schemas.wec.ContextHeaderDocument;\n import org.apache.airavata.workflow.model.component.ComponentException;\n@@ -530,8 +529,8 @@ public void shutDown(ConfigurationContext configctx, AxisService service) {\n         StAXOMBuilder builder = new StAXOMBuilder(reader);\n         OMElement documentElement = builder.getDocumentElement();\n         Iterator<?> server = documentElement.getChildrenWithName(new QName(\"server\"));\n-        HostDescription hostDescription = new HostDescription();\n         while (server.hasNext()) {\n+            HostDescription hostDescription = new HostDescription();\n             OMElement next = (OMElement) server.next();\n             if (next.getFirstChildWithName(new QName(\"gram.endpoint\")) != null &&\n                     \"globus\".equals(next.getFirstChildWithName(new QName(\"type\")).getText())) {"
            },
            {
                "sha": "5dece7b93d63a0b94676cf1accc5277a88148749",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/airavata/blob/4984417fc162a3e0966f45c10debd9c34f826b00/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "raw_url": "https://github.com/apache/airavata/raw/4984417fc162a3e0966f45c10debd9c34f826b00/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java?ref=4984417fc162a3e0966f45c10debd9c34f826b00",
                "patch": "@@ -418,10 +418,14 @@ private void loadData() {\n \t\t\tcmbResourceProtocol.setSelectedItem(REMOTE_PROTOCOL_STR_AMAZON_EC2);\n \t\t}else if (t instanceof GsisshHostType){\n \t\t\tcmbResourceProtocol.setSelectedItem(REMOTE_PROTOCOL_GSI_SSH);\n-\t\t\tName[] nameArray = ((GsisshHostType) t).getExports().getNameArray();\n \t\t\tList<String> arr=new ArrayList<String>();\n-\t\t\tfor (Name name : nameArray) {\n-\t\t\t\tarr.add(name.getStringValue()+\"=\"+StringUtil.quoteString(name.getValue(),\"=\"));\n+\t\t\tExportProperties exports = ((GsisshHostType) t).getExports();\n+\t\t\tif (exports!=null) {\n+\t\t\t\tName[] nameArray = exports.getNameArray();\n+\t\t\t\tfor (Name name : nameArray) {\n+\t\t\t\t\tarr.add(name.getStringValue() + \"=\"\n+\t\t\t\t\t\t\t+ StringUtil.quoteString(name.getValue(), \"=\"));\n+\t\t\t\t}\n \t\t\t}\n \t\t\texportsTextField.setText(StringUtil.createDelimiteredString(arr.toArray(new String[]{})));\n \t\t\tpreJobCommandsTextField.setText(StringUtil.createDelimiteredString(((GsisshHostType) t).getPreJobCommandsArray()));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/f76708aa2ded069344d7cee1f4c0fe1d493a867a",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/009460dcce21f05158ee961bc213f11473f4a873",
        "message": "updating the API version to airavata version + NPE in host desc dialog when saving\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1359237 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_73",
        "file": [
            {
                "sha": "6845dc80e985d38cc6dd69b621377d13f4abe0f9",
                "filename": "modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/airavata/blob/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java",
                "raw_url": "https://github.com/apache/airavata/raw/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-client/src/main/java/org/apache/airavata/client/AiravataClient.java?ref=f76708aa2ded069344d7cee1f4c0fe1d493a867a",
                "patch": "@@ -124,7 +124,7 @@\n \n \t// private NameValue[] configurations = new NameValue[7];\n \n-\tprivate static final Version API_VERSION=new Version(\"Airavata\",0,1,null,\"INCUBATING\",null);\n+\tprivate static final Version API_VERSION=new Version(\"Airavata\",0,4,null,\"INCUBATING\",null);\n \t\n \tprotected AiravataClient(Map<String,String> configuration)\n \t\t\tthrows MalformedURLException {"
            },
            {
                "sha": "8b24acd89c26762dbb9404dd9b06eb35d9a750d9",
                "filename": "modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/airavata/blob/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "raw_url": "https://github.com/apache/airavata/raw/f76708aa2ded069344d7cee1f4c0fe1d493a867a/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/ui/dialogs/descriptors/HostDescriptionDialog.java?ref=f76708aa2ded069344d7cee1f4c0fe1d493a867a",
                "patch": "@@ -139,12 +139,12 @@ public void close() {\n     private void ok() {\n         hostId = this.hostIdTextField.getText();\n         String hostAddress = this.hostAddressTextField.getText();\n-        String globusGateKeeperEPR = this.globusGateKeeperTextField.getText();\n-        String gridFTP = this.GridFTPTextField.getText();\n \n         setHostId(hostId);\n         setHostLocation(hostAddress);\n         if(isGlobusHostType()) {\n+        \tString globusGateKeeperEPR = this.globusGateKeeperTextField.getText();\n+            String gridFTP = this.GridFTPTextField.getText();\n         \tsetGlobusGateKeeperEPR(globusGateKeeperEPR);\n         \tsetGridFTPEPR(gridFTP);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/airavata/commit/4c0231c36ee272fd023acf540cad24f87d459e2a",
        "repo": "airavata",
        "parent": "https://github.com/apache/airavata/commit/9160312783536dc622afd22c7e44e7d14c3d07ab",
        "message": "Adding the full airavata-server properties to this file. \nIf these are not there and if we build with just the default properties file, airavata tomcat deployment will start complaining with NPEs because we have not added them to the configuration file.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/airavata/trunk@1407496 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "airavata_74",
        "file": [
            {
                "sha": "a4117dc78c576b5e8fb27e83b174defa963d6ebb",
                "filename": "modules/xbaya-gui/src/main/resources/airavata-server.properties",
                "status": "modified",
                "additions": 153,
                "deletions": 4,
                "changes": 157,
                "blob_url": "https://github.com/apache/airavata/blob/4c0231c36ee272fd023acf540cad24f87d459e2a/modules/xbaya-gui/src/main/resources/airavata-server.properties",
                "raw_url": "https://github.com/apache/airavata/raw/4c0231c36ee272fd023acf540cad24f87d459e2a/modules/xbaya-gui/src/main/resources/airavata-server.properties",
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/xbaya-gui/src/main/resources/airavata-server.properties?ref=4c0231c36ee272fd023acf540cad24f87d459e2a",
                "patch": "@@ -17,16 +17,29 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-#\n-\n \n ###########################################################################\n #\n-#  This properties file provides configuration for XBaya to connect to\n-#   Registry. Please do not use this for any server configurations.\n+#  This properties file provides configuration for all Airavata Services: \n+#  Registry, Workflow Interpreter, GFac, Message Broker, Message Box\n #\n ###########################################################################\n \n+###########################################################################\n+# Airavata Axis2-Tomcat Server Configuration\n+###########################################################################\n+# By default, tomcat runs on port 80. If the port is changed, it will be  \n+#  have to be specified with port properties. This will be picked up by \n+#  the registry service to register the service end-points.\n+\n+port=8080\n+\n+# Axis2 server automatically picks up IP address from axis configuration, \n+#  but some DHCP enables machines do not report correct ip addresses,  \n+#  in which case, the IP address can be manually specified. \n+\n+#ip=192.2.33.12 \n+\n ###########################################################################\n # Airavata Registry Configuration\n ###########################################################################\n@@ -46,4 +59,140 @@ start.derby.server.mode=true\n registry.jdbc.driver=org.apache.derby.jdbc.ClientDriver\n registry.jdbc.url=jdbc:derby://localhost:1527/persistent_data;create=true;user=airavata;password=airavata\n \n+###########################################################################\n+# Airavata Workflow Interpreter Configurations\n+###########################################################################\n+\n+runInThread=false\n+provenance=true\n+provenanceWriterThreadPoolSize=20\n+gfac.embedded=false\n+\n+#\n+# Security Configuration used by Airavata Generic Factory Service\n+#  to interact with Computational Resources.\n+#\n+\n+###########################################################################\n+# Airavata GFac MyProxy GSI credentials to access Grid Resources.\n+###########################################################################\n+\n+myproxy.server=myproxy.teragrid.org\n+myproxy.user=username\n+myproxy.pass=password\n+myproxy.life=3600\n+# XSEDE Trusted certificates can be downloaded from https://software.xsede.org/security/xsede-certs.tar.gz\n+trusted.cert.location=/path/to/trusted/certificates\n+\n+# SSH PKI key pair is SSH based authentication is used.\n+#ssh.key=/home/user/.ssh/id_rsa\n+#ssh.keypass=\n+#ssh.username=usernameAtHost\n+\n+###########################################################################\n+# Airavata Message Broker Basic Configurations.\n+#  the Advanced section provides detailed custom configuration properties.\n+###########################################################################\n+\n+# Default derby database configuration\n+broker.jdbc.driver=org.apache.derby.jdbc.EmbeddedDriver\n+broker.jdbc.url=jdbc:derby:wsmg;create=true;user=airavata;password=airavata\n+\n+# Note: This database will only be used  if 'broker.storage.type=persistent' \n+#       is set in advanced properties below.\n+# MySql database configuration\n+#broker.jdbc.driver=com.mysql.jdbc.Driver\n+#broker.jdbc.url=jdbc:mysql://localhost:3306/wsmg?user=airavata&password=airavata\n+\n+###########################################################################\n+# Airavata Message Box Basic Configurations, \n+#  the Advanced section provides detailed custom configuration properties.\n+###########################################################################  \n+\n+# Default derby database\n+msgBox.jdbc.driver=org.apache.derby.jdbc.EmbeddedDriver\n+msgBox.jdbc.url=jdbc:derby:wsmg;create=true;user=airavata;password=airavata\n+\n+# MySql database configuration\n+#msgBox.jdbc.driver=com.mysql.jdbc.Driver\n+#msgBox.jdbc.url=jdbc:mysql://localhost:3306/wsmg?user=airavata&password=airavata\n+\n+###########################################################################\n+# Advance configuration to change service implementations\n+###########################################################################\n+\n+# By default all provenance data is also cataloged in Airavata Registry. \n+# A custom provenance implementation can be plugged in for Provenance Registry. \n+# The full qualified path to the implementation class has to be specified.\n+# BY default a mysql JPA provenanceRegistry implementation is bundled.\n class.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry\n+\n+#\n+# Class which implemented Scheduler interface. It will be used to determine a Provider\n+#\n+scheduler.class= org.apache.airavata.core.gfac.scheduler.impl.SchedulerImpl\n+\n+#\n+# Data Service Plugins classes\n+#\n+datachain.classes= org.apache.airavata.core.gfac.extension.data.RegistryDataService\n+\n+#\n+# Pre execution Plugins classes. For example, GridFTP Input Staging\n+#\n+prechain.classes= org.apache.airavata.core.gfac.extension.pre.GridFtpInputStaging\n+prechain.classes= org.apache.airavata.core.gfac.extension.pre.HttpInputStaging\n+\n+#\n+# Post execution Plugins classes. For example, GridFTP Output Staging\n+#\n+postchain.classes= org.apache.airavata.core.gfac.extension.post.GridFtpOutputStaging\n+postchain.classes= org.apache.airavata.core.gfac.extension.post.OutputRegister\n+\n+#\n+# Advanced Message Broker Configurations\n+#\n+\n+#socket time out in milliseconds for sending messages. (defaults is 20000)\n+broker.socket.timeout=60000\n+\n+broker.storage.type=persistent\n+#broker.storage.type=memory\n+\n+#specifies wether delivery component should be started or not.\n+broker.start.delivery.thread=true\n+\n+#fixed thread pool based delivery\n+#broker.delivery.method=pcrew\n+\n+#dynamic thread pool based delivery\n+#broker.delivery.method=parallel\n+\n+#single thread delivery\n+broker.delivery.method=serial\n+\n+#number of message delivery failures before a url become black listed (default is 2)\n+#broker.msg.delivery.retries=2\n+\n+#time period (in seconds) a url will be kept blacklisted (default is 5 seconds) \n+#consumer.expiration.time.gap=5 \n+\n+#maximum number of messages to be send to a one consumer/url at time. \n+#applicable if 'broker.delivery.method' is 'pcrew' . (default is 10)\n+\n+#sending.batch.size=10\n+\n+#size of the thread pool. only applicable if 'broker.delivery.method' is 'pcrew'. (default is 4)\n+#sending.thread.pool.size=4\n+\n+#\n+# Advanced Message Box Configurations\n+# \n+msgBox.usedatabase=true\n+messagePreservationDays=2\n+messagePreservationHours=0\n+messagePreservationMinutes=0\n+messagePerservationIntervalDays=0\n+messagePerservationIntervalHours=1\n+messagePerservationIntervalMinutes=0\n+"
            }
        ]
    }
]
