[
    {
        "commit": "https://github.com/apache/geronimo/commit/e14efdd5ba17df832c8e418806b8e705593cfafc",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/12b3096115e8e9df0c9d87f8da38237fcd8b710b",
        "message": "Avoid NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@109820 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_1",
        "file": [
            {
                "sha": "7c8215e239fc7bca7a9d8b8878e311e7c02e7de3",
                "filename": "modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/Module.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/e14efdd5ba17df832c8e418806b8e705593cfafc/modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/Module.java",
                "raw_url": "https://github.com/apache/geronimo/raw/e14efdd5ba17df832c8e418806b8e705593cfafc/modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/Module.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/Module.java?ref=e14efdd5ba17df832c8e418806b8e705593cfafc",
                "patch": "@@ -39,6 +39,8 @@\n     private final String originalSpecDD;\n \n     protected Module(boolean standAlone, URI configId, URI parentId, JarFile moduleFile, String targetPath, XmlObject specDD, XmlObject vendorDD, String originalSpecDD) {\n+        assert targetPath != null: \"targetPath is null\";\n+\n         this.standAlone = standAlone;\n         this.configId = configId;\n         this.parentId = parentId;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/b156bab79a8faab29600f10797998f4bea9d6a97",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/d95990c1e5bb71c3ee31b4d37e29d46eed669b71",
        "message": "Avoid NullPointerException when deploy EBA\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1311135 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_2",
        "file": [
            {
                "sha": "3fcc3098b8ed79884712081f97bc09e9bddcee73",
                "filename": "plugins/aries/geronimo-aries/src/main/java/org/apache/geronimo/aries/ApplicationGBean.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/b156bab79a8faab29600f10797998f4bea9d6a97/plugins/aries/geronimo-aries/src/main/java/org/apache/geronimo/aries/ApplicationGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/b156bab79a8faab29600f10797998f4bea9d6a97/plugins/aries/geronimo-aries/src/main/java/org/apache/geronimo/aries/ApplicationGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/aries/geronimo-aries/src/main/java/org/apache/geronimo/aries/ApplicationGBean.java?ref=b156bab79a8faab29600f10797998f4bea9d6a97",
                "patch": "@@ -453,7 +453,8 @@ private void calculateBundleDependencies(PackageAdmin packageAdmin) throws Bundl\n     @SuppressWarnings(\"deprecation\")\n     private Bundle[] getRequiringBundles(Bundle targetBundle, PackageAdmin packageAdmin) {\n         ExportedPackage[] ePackages = packageAdmin.getExportedPackages(targetBundle);\n-        \n+        if(ePackages == null || ePackages.length == 0) return new Bundle[]{};\n+\t\t\n         Set<Bundle> requiringBundles = new HashSet<Bundle>();\n         \n         for(ExportedPackage ePackage : ePackages) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/e9d85db550187da55856a0d95186c49db5e1a299",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/20e37b078930a2684d756f22bc4781b0acdfd512",
        "message": "Avoid potential NullPointerException on rar undeploy\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@528998 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_3",
        "file": [
            {
                "sha": "6ede226564a6078148255463b8092d30c8faeb1d",
                "filename": "modules/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenEjbSystemGBean.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/geronimo/blob/e9d85db550187da55856a0d95186c49db5e1a299/modules/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenEjbSystemGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/e9d85db550187da55856a0d95186c49db5e1a299/modules/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenEjbSystemGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenEjbSystemGBean.java?ref=e9d85db550187da55856a0d95186c49db5e1a299",
                "patch": "@@ -238,13 +238,15 @@ private void addResourceAdapter(ResourceAdapterWrapper resourceAdapterWrapper) {\n     }\n \n     private void removeResourceAdapter(ResourceAdapterWrapper resourceAdapterWrapper) {\n-        for (String messageListenerInterface : resourceAdapterWrapper.getMessageListenerToActivationSpecMap().keySet()) {\n-            String containerName = getResourceAdapterId(resourceAdapterWrapper) + \"-\" + messageListenerInterface;\n-            processedResourceAdapterWrappers.remove(containerName);\n-            assembler.removeContainer(containerName);\n+        Map<String, String> listenerToActivationSpecMap = resourceAdapterWrapper.getMessageListenerToActivationSpecMap();\n+        if (listenerToActivationSpecMap != null) {\n+            for (String messageListenerInterface : listenerToActivationSpecMap.keySet()) {\n+                String containerName = getResourceAdapterId(resourceAdapterWrapper) + \"-\" + messageListenerInterface;\n+                processedResourceAdapterWrappers.remove(containerName);\n+                assembler.removeContainer(containerName);\n+            }\n+            registeredResouceAdapters.remove(resourceAdapterWrapper.getName());\n         }\n-\n-        registeredResouceAdapters.remove(resourceAdapterWrapper.getName());\n     }\n \n     private String getResourceAdapterId(ResourceAdapterWrapper resourceAdapterWrapper) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/e46ff5e766de8d1e7cd9df1df63065ee7733595f",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/51feacecec475535faf04d4b5c842d36dd4fd8a0",
        "message": "GERONIMO-2585 KeystorePortlet: Lock keystore throws NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@477197 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_4",
        "file": [
            {
                "sha": "abc1dd5662d458ce840319de9af7fe32716edc01",
                "filename": "modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreInstance.java",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/e46ff5e766de8d1e7cd9df1df63065ee7733595f/modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreInstance.java",
                "raw_url": "https://github.com/apache/geronimo/raw/e46ff5e766de8d1e7cd9df1df63065ee7733595f/modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreInstance.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreInstance.java?ref=e46ff5e766de8d1e7cd9df1df63065ee7733595f",
                "patch": "@@ -182,10 +182,6 @@ public void setKeystorePassword(String password) {\n     }\n \n     public void lockKeystore(char[] password) throws KeystoreException {\n-        if (password == null) {\n-            throw new NullPointerException(\"password is null\");\n-        }\n-        ensureLoaded(password);\n         try {\n             kernel.setAttribute(abstractName, \"keystorePassword\", null);\n             keyPasswords.clear();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/4b6d65cee7756d11051be65aa3018671aa5a4c98",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/ddacdbf3e0b03959507d3f32288e3cb630bd3429",
        "message": "Fix a NullPointerException when no module is identified.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@45709 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_5",
        "file": [
            {
                "sha": "7ebca74ffcdb2f2faaecd6134b6f901e70bfd2d3",
                "filename": "modules/core/src/java/org/apache/geronimo/console/cli/controller/ListDeployments.java",
                "status": "modified",
                "additions": 17,
                "deletions": 21,
                "changes": 38,
                "blob_url": "https://github.com/apache/geronimo/blob/4b6d65cee7756d11051be65aa3018671aa5a4c98/modules/core/src/java/org/apache/geronimo/console/cli/controller/ListDeployments.java",
                "raw_url": "https://github.com/apache/geronimo/raw/4b6d65cee7756d11051be65aa3018671aa5a4c98/modules/core/src/java/org/apache/geronimo/console/cli/controller/ListDeployments.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/core/src/java/org/apache/geronimo/console/cli/controller/ListDeployments.java?ref=4b6d65cee7756d11051be65aa3018671aa5a4c98",
                "patch": "@@ -32,10 +32,17 @@\n /**\n  * List deployed modules for the selected targets\n  *\n- * @version $Revision: 1.5 $ $Date: 2004/07/22 03:14:48 $\n+ * @version $Revision: 1.6 $ $Date: 2004/07/23 07:27:50 $\n  */\n public class ListDeployments extends TextController {\n     private static final Log log = LogFactory.getLog(ListDeployments.class);\n+\n+    private static final ModuleType[] ALL = new ModuleType[] {ModuleType.CAR,\n+        ModuleType.EAR,\n+        ModuleType.EJB,\n+        ModuleType.RAR,\n+        ModuleType.WAR};\n+    \n     ModuleType type = null;\n     boolean selected = false;\n \n@@ -102,31 +109,20 @@ private void showModules() {\n         try {\n             if(type != null) {\n                 ids = context.deployer.getAvailableModules(type, context.targets);\n+                if ( null == ids ) {\n+                    ids = new TargetModuleID[0];\n+                }\n             } else {\n                 List list = new ArrayList();\n-                TargetModuleID[] modules = context.deployer.getAvailableModules(ModuleType.CAR, context.targets);\n-                if ( null != modules ) {\n-                    list.addAll(Arrays.asList(modules));\n-                }\n-                modules = context.deployer.getAvailableModules(ModuleType.EAR, context.targets);\n-                if ( null != modules ) {\n-                    list.addAll(Arrays.asList(modules));\n-                }\n-                modules = context.deployer.getAvailableModules(ModuleType.EJB, context.targets);\n-                if ( null != modules ) {\n-                    list.addAll(Arrays.asList(modules));\n-                }\n-                modules = context.deployer.getAvailableModules(ModuleType.RAR, context.targets);\n-                if ( null != modules ) {\n-                    list.addAll(Arrays.asList(modules));\n-                }\n-                modules = context.deployer.getAvailableModules(ModuleType.WAR, context.targets);\n-                if ( null != modules ) {\n-                    list.addAll(Arrays.asList(modules));\n+                for (int i = 0; i < ALL.length; i++) {\n+                    TargetModuleID[] modules = context.deployer.getAvailableModules(ALL[i], context.targets);\n+                    if ( null != modules ) {\n+                        list.addAll(Arrays.asList(modules));\n+                    }\n                 }\n                 ids = (TargetModuleID[])list.toArray(new TargetModuleID[list.size()]);\n             }\n-            println(null == ids || ids.length == 0 ? \"No matching modules found.\" : \"Found \"+ids.length+\" matching module\"+(ids.length == 1 ? \"\" : \"s\"));\n+            println(ids.length == 0 ? \"No matching modules found.\" : \"Found \"+ids.length+\" matching module\"+(ids.length == 1 ? \"\" : \"s\"));\n             for(int i=0; i<ids.length; i++) {\n                 println(\"  \"+ids[i].toString());\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/7cbbc3e41992b084425b217ac443245c3e8b4ab4",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/952d403c02971b152169c009c74e7374b3564a99",
        "message": "GERONIMO-5909 daytrader: java.lang.NullPointerException,  connector build should export schemaorg_apache_xmlbeans*.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1095306 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_6",
        "file": [
            {
                "sha": "8f9fe1ec65c6bc65cdaf30e4c71f483a40b1072e",
                "filename": "plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/7cbbc3e41992b084425b217ac443245c3e8b4ab4/plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/7cbbc3e41992b084425b217ac443245c3e8b4ab4/plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml?ref=7cbbc3e41992b084425b217ac443245c3e8b4ab4",
                "patch": "@@ -186,6 +186,7 @@\n                             org.apache.geronimo.xbeans.connector,\n                             org.apache.geronimo.xbeans.connector.impl\n                         </Export-Package>\n+                        <_exportcontents>schemaorg_apache_xmlbeans*</_exportcontents>\n                         <DynamicImport-Package>schemaorg_apache_xmlbeans.*,\n                             org.omg.CORBA</DynamicImport-Package>\n                         <!--<_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>-->"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/bd4b0ad9c06328b2aeec4935f971137364a4c45d",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/5cf8cc42b90e359dfe45ee92339f76909af49f07",
        "message": "Fix NullPointerException when no entry is found in WEB-INF/lib directory\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@940240 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_7",
        "file": [
            {
                "sha": "3dc5079c6d85018f22d07a01e28d76282176d9c0",
                "filename": "plugins/j2ee/geronimo-web-2.5-builder/src/main/java/org/apache/geronimo/web25/deployment/merge/MergeHelper.java",
                "status": "modified",
                "additions": 31,
                "deletions": 25,
                "changes": 56,
                "blob_url": "https://github.com/apache/geronimo/blob/bd4b0ad9c06328b2aeec4935f971137364a4c45d/plugins/j2ee/geronimo-web-2.5-builder/src/main/java/org/apache/geronimo/web25/deployment/merge/MergeHelper.java",
                "raw_url": "https://github.com/apache/geronimo/raw/bd4b0ad9c06328b2aeec4935f971137364a4c45d/plugins/j2ee/geronimo-web-2.5-builder/src/main/java/org/apache/geronimo/web25/deployment/merge/MergeHelper.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/j2ee/geronimo-web-2.5-builder/src/main/java/org/apache/geronimo/web25/deployment/merge/MergeHelper.java?ref=bd4b0ad9c06328b2aeec4935f971137364a4c45d",
                "patch": "@@ -354,35 +354,41 @@ public boolean rangeDiscoveryRequired(DiscoveryRange discoveryRange) {\n     public static void processWebFragmentsAndAnnotations(EARContext earContext, Module module, Bundle bundle, WebAppType webApp) throws DeploymentException {\n         final Map<String, WebFragmentDocument> jarUrlWebFragmentDocumentMap = new LinkedHashMap<String, WebFragmentDocument>();\n         final String validJarNamePrefix = module.isStandAlone() ? \"WEB-INF/lib\" : module.getName() + \"/WEB-INF/lib\";\n-        for (Enumeration<String> enumeration = bundle.getEntryPaths(validJarNamePrefix); enumeration.hasMoreElements();) {\n-            String url = enumeration.nextElement();\n-            if (url.endsWith(\".jar\")) {\n-                URL webFragmentUrl = bundle.getEntry(url + \"/META-INF/web-fragment.xml\");\n-                WebFragmentDocument webFragmentDocument = null;\n-                if (webFragmentUrl != null) {\n-                    InputStream in = null;\n-                    try {\n-                        in = webFragmentUrl.openStream();\n-                        webFragmentDocument = (WebFragmentDocument) XmlBeansUtil.parse(in);\n-                        //Hopefully, XmlBeansUtil should help to check most of errors against the schema files, like none null servlet-name etc.\n-                        XmlBeansUtil.validateDD(webFragmentDocument);\n-                    } catch (IOException e) {\n-                        logger.error(\"Fail to parse web-fragment.xml files in jar \" + url, e);\n-                        throw new DeploymentException(\"Fail to scan web-fragment.xml files\", e);\n-                    } catch (XmlException e) {\n-                        logger.error(\"Fail to parse web-fragment.xml files in jar \" + url, e);\n-                        throw new DeploymentException(\"Fail to scan web-fragment.xml files\", e);\n-                    } finally {\n-                        IOUtils.close(in);\n+        WebFragmentEntry[] webFragmentEntries = null;\n+        Enumeration<String> enumeration = bundle.getEntryPaths(validJarNamePrefix);\n+        if (enumeration != null) {\n+            while (enumeration.hasMoreElements()) {\n+                String url = enumeration.nextElement();\n+                if (url.endsWith(\".jar\")) {\n+                    URL webFragmentUrl = bundle.getEntry(url + \"/META-INF/web-fragment.xml\");\n+                    WebFragmentDocument webFragmentDocument = null;\n+                    if (webFragmentUrl != null) {\n+                        InputStream in = null;\n+                        try {\n+                            in = webFragmentUrl.openStream();\n+                            webFragmentDocument = (WebFragmentDocument) XmlBeansUtil.parse(in);\n+                            //Hopefully, XmlBeansUtil should help to check most of errors against the schema files, like none null servlet-name etc.\n+                            XmlBeansUtil.validateDD(webFragmentDocument);\n+                        } catch (IOException e) {\n+                            logger.error(\"Fail to parse web-fragment.xml files in jar \" + url, e);\n+                            throw new DeploymentException(\"Fail to scan web-fragment.xml files\", e);\n+                        } catch (XmlException e) {\n+                            logger.error(\"Fail to parse web-fragment.xml files in jar \" + url, e);\n+                            throw new DeploymentException(\"Fail to scan web-fragment.xml files\", e);\n+                        } finally {\n+                            IOUtils.close(in);\n+                        }\n+                    } else {\n+                        webFragmentDocument = WebFragmentDocument.Factory.newInstance();\n+                        webFragmentDocument.setWebFragment(WebFragmentType.Factory.newInstance());\n                     }\n-                } else {\n-                    webFragmentDocument = WebFragmentDocument.Factory.newInstance();\n-                    webFragmentDocument.setWebFragment(WebFragmentType.Factory.newInstance());\n+                    jarUrlWebFragmentDocumentMap.put(url, webFragmentDocument);\n                 }\n-                jarUrlWebFragmentDocumentMap.put(url, webFragmentDocument);\n             }\n+            webFragmentEntries = sortWebFragments(earContext, module, bundle, webApp, jarUrlWebFragmentDocumentMap);\n+        } else {\n+            webFragmentEntries = new WebFragmentEntry[0];\n         }\n-        WebFragmentEntry[] webFragmentEntries = sortWebFragments(earContext, module, bundle, webApp, jarUrlWebFragmentDocumentMap);\n         //\n         MergeContext mergeContext = new MergeContext();\n         mergeContext.setEarContext(earContext);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/124d3573043c58cc1aa389ba18f0481e8e7f297b",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/c3ff08f5fe2faabd4173390e677749de0278be09",
        "message": "GERONIMO-2549 NullPointerException when listing plugins on a bogus server.\nThanks for the patch Mark DeLaFranier\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@483670 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_8",
        "file": [
            {
                "sha": "e567b3b1b683efff1e022f7cb3d2a805ff6908ed",
                "filename": "modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/geronimo/blob/124d3573043c58cc1aa389ba18f0481e8e7f297b/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "raw_url": "https://github.com/apache/geronimo/raw/124d3573043c58cc1aa389ba18f0481e8e7f297b/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java?ref=124d3573043c58cc1aa389ba18f0481e8e7f297b",
                "patch": "@@ -79,6 +79,11 @@ public void execute(PrintWriter out, ServerConnection connection, String[] args)\n                 } catch (FailedLoginException e) {\n                     throw new DeploymentException(\"Invalid login for Maven repository '\"+repo+\"'\");\n                 }\n+                if (data == null) {\n+                    out.println();\n+                    out.println(\"No plugins were returned from this site.\");\n+                    return;\n+                }\n                 Map categories = new HashMap();\n                 List available = new ArrayList();\n                 for (int i = 0; i < data.getPlugins().length; i++) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/5d33390328acf360419e46239b6ee43b125a27ba",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/a65e8e3b969bb9419b8f7c65d588d88cc9fd836e",
        "message": "GERONIMO-286 detected by Toby Cabot.\n\nIf an EAR DD defines a client application module, a NullPointerException was raised. This is now fixed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@45781 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_9",
        "file": [
            {
                "sha": "8f46be7a3f97f54a1d43fd12e039f6f9c0625635",
                "filename": "modules/j2ee/src/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/geronimo/blob/5d33390328acf360419e46239b6ee43b125a27ba/modules/j2ee/src/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/5d33390328acf360419e46239b6ee43b125a27ba/modules/j2ee/src/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/j2ee/src/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java?ref=5d33390328acf360419e46239b6ee43b125a27ba",
                "patch": "@@ -67,7 +67,7 @@\n import java.util.zip.ZipEntry;\n \n /**\n- * @version $Revision: 1.20 $ $Date: 2004/08/09 04:19:35 $\n+ * @version $Revision: 1.21 $ $Date: 2004/08/13 08:16:29 $\n  */\n public class EARConfigBuilder implements ConfigurationBuilder {\n     static final SchemaTypeLoader SCHEMA_TYPE_LOADER = XmlBeans.typeLoaderUnion(new SchemaTypeLoader[]{\n@@ -498,11 +498,13 @@ private ApplicationType addModules(URI configId, XmlObject plan, ApplicationType\n                     moduleLocations.add(uri.toString());\n                     connectorModules.add(currentModule);\n                 }\n-                moduleMap.put(currentModule.getName(), currentModule);\n                 // TODO remove test against null when application clients will be supported.\n-                if ( module.isSetAltDd() && null != currentModule ) {\n-                    URL altDDURL = appLocator.toURL(module.getAltDd().getStringValue());\n-                    currentModule.setAltSpecDD(altDDURL);\n+                if ( null != currentModule ) {\n+                    moduleMap.put(currentModule.getName(), currentModule);\n+                    if ( module.isSetAltDd() ) {\n+                        URL altDDURL = appLocator.toURL(module.getAltDd().getStringValue());\n+                        currentModule.setAltSpecDD(altDDURL);\n+                    }\n                 }\n             }\n             "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/59b1738b4aaa2ab07e045d2b3e393bd075474ba7",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/e542c6b8d31fb4db4390c6366f7fe007b269c940",
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@918171 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_10",
        "file": [
            {
                "sha": "1ac35c0be700917d6cf718d7c73658566fcd6c7f",
                "filename": "plugins/wab/geronimo-web-extender/src/main/java/org/apache/geronimo/osgi/web/extender/WebContainerExtender.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/59b1738b4aaa2ab07e045d2b3e393bd075474ba7/plugins/wab/geronimo-web-extender/src/main/java/org/apache/geronimo/osgi/web/extender/WebContainerExtender.java",
                "raw_url": "https://github.com/apache/geronimo/raw/59b1738b4aaa2ab07e045d2b3e393bd075474ba7/plugins/wab/geronimo-web-extender/src/main/java/org/apache/geronimo/osgi/web/extender/WebContainerExtender.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/wab/geronimo-web-extender/src/main/java/org/apache/geronimo/osgi/web/extender/WebContainerExtender.java?ref=59b1738b4aaa2ab07e045d2b3e393bd075474ba7",
                "patch": "@@ -209,8 +209,12 @@ public void stop(BundleContext context) {\n         if (bt != null) {\n             bt.close();\n         }\n-        eventDispatcher.destroy();\n-        executor.shutdown();\n+        if (eventDispatcher != null) {\n+            eventDispatcher.destroy();\n+        }\n+        if (executor != null) {\n+            executor.shutdown();\n+        }\n         \n         LOGGER.debug(\"Web container extender stopped\");\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/d9a86b75ddca2244ccac6fae17ebf3cb4d95ba6e",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/ed435858efeee8145a0f713406dcc8c548dde19b",
        "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@901910 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_11",
        "file": [
            {
                "sha": "cee7af484030e64af73f195778d5464b1c784216",
                "filename": "plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/d9a86b75ddca2244ccac6fae17ebf3cb4d95ba6e/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d9a86b75ddca2244ccac6fae17ebf3cb4d95ba6e/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java?ref=d9a86b75ddca2244ccac6fae17ebf3cb4d95ba6e",
                "patch": "@@ -148,6 +148,7 @@\n \n     public GeronimoTldLocationsCache(ServletContext ctxt) {\n         super(ctxt);\n+        this.ctxt = ctxt;\n     }\n \n     /** Constructor."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/ac13e3938f108c2cc9787ba3812a2e0a7fe5c633",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/4a6f8769a4288f5e9aa5d39389601b17dce2b9ea",
        "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@527745 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_12",
        "file": [
            {
                "sha": "56cbe1ee9eceaf3e1b29c8befe1bc745142f287a",
                "filename": "modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/geronimo/blob/ac13e3938f108c2cc9787ba3812a2e0a7fe5c633/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ac13e3938f108c2cc9787ba3812a2e0a7fe5c633/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java?ref=ac13e3938f108c2cc9787ba3812a2e0a7fe5c633",
                "patch": "@@ -472,7 +472,10 @@ protected void processGetRequest(Request request, Response response, AxisService\n             if (portInfo.getWsdlFile() != null && !portInfo.getWsdlFile().equals(\"\")) { //wsdl file has been provided\n                 Definition wsdlDefinition = new AxisServiceGenerator().getWSDLDefition(portInfo, configurationBaseUrl, classLoader);\n                 if(wsdlDefinition != null){\n-                    String portName = portInfo.getWsdlPort().getLocalPart();\n+                    String portName = null;\n+                    if(portInfo.getWsdlPort() != null) {\n+                        portName = portInfo.getWsdlPort().getLocalPart();\n+                    }\n                     QName qName = portInfo.getWsdlService();\n                     if (qName == null) {\n                         qName = new QName(service.getTargetNamespace(), service.getName());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/c9e2908af07d2bb6acf412627722847adfdae87a",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/73a5058ff322655cf7962e1eb3221bfe5f505af0",
        "message": "Fixed a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@354228 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_13",
        "file": [
            {
                "sha": "25150b1402ba09ae211d93faa518670d7592a9d3",
                "filename": "modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/c9e2908af07d2bb6acf412627722847adfdae87a/modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java",
                "raw_url": "https://github.com/apache/geronimo/raw/c9e2908af07d2bb6acf412627722847adfdae87a/modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java?ref=c9e2908af07d2bb6acf412627722847adfdae87a",
                "patch": "@@ -279,7 +279,7 @@ public boolean hasRole(Principal principal, String role) {\n         }\r\n \r\n         Request request = (Request) currentRequest.get();\r\n-        if (currentRequest == null) {\r\n+        if (request == null) {\r\n             log.error(\"No currentRequest found.\");\r\n             return false;\r\n         }\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/84938ceedbfbe010c08a73cb8e5c9c14c216bbb9",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/5e79292b117bf65e9d7943ac4cbad0dc85bfb53f",
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@171157 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_14",
        "file": [
            {
                "sha": "a349f00bfa7fc44356e431095fa76bef2f29218d",
                "filename": "modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/geronimo/blob/84938ceedbfbe010c08a73cb8e5c9c14c216bbb9/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/84938ceedbfbe010c08a73cb8e5c9c14c216bbb9/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java?ref=84938ceedbfbe010c08a73cb8e5c9c14c216bbb9",
                "patch": "@@ -49,7 +49,6 @@\n import org.apache.geronimo.xbeans.geronimo.naming.GerEjbLocalRefType;\n import org.apache.geronimo.xbeans.geronimo.naming.GerEjbRefType;\n import org.apache.geronimo.xbeans.geronimo.naming.GerGbeanLocatorType;\n-import org.apache.geronimo.xbeans.geronimo.naming.GerPortType;\n import org.apache.geronimo.xbeans.geronimo.naming.GerResourceEnvRefType;\n import org.apache.geronimo.xbeans.geronimo.naming.GerResourceRefType;\n import org.apache.geronimo.xbeans.geronimo.naming.GerServiceRefType;\n@@ -733,10 +732,12 @@ private static Map mapResourceEnvRefs(GerResourceEnvRefType[] refs) {\n \n     private static Map mapServiceRefs(GerServiceRefType[] refs) {\n         Map refMap = new HashMap();\n-        for (int i = 0; i < refs.length; i++) {\n-            GerServiceRefType ref = refs[i];\n-            String serviceRefName = ref.getServiceRefName().trim();\n-            refMap.put(serviceRefName, ref);\n+        if (refs != null) {\n+            for (int i = 0; i < refs.length; i++) {\n+                GerServiceRefType ref = refs[i];\n+                String serviceRefName = ref.getServiceRefName().trim();\n+                refMap.put(serviceRefName, ref);\n+            }\n         }\n         return refMap;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/51b8b0210c4f02aa457d100754286e886d44beaa",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/cd5cd011e3ec8d6c36c44c975a98b7c89ccd78f0",
        "message": "GERONIMO-6224 NPE while accessing the system modules portlet\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1294046 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_15",
        "file": [
            {
                "sha": "a8a68a9908e3dc3d8cd3abd9f6a4e4b0d97f6613",
                "filename": "framework/modules/geronimo-kernel/src/main/java/org/apache/geronimo/kernel/config/SimpleConfigurationManager.java",
                "status": "modified",
                "additions": 44,
                "deletions": 5,
                "changes": 49,
                "blob_url": "https://github.com/apache/geronimo/blob/51b8b0210c4f02aa457d100754286e886d44beaa/framework/modules/geronimo-kernel/src/main/java/org/apache/geronimo/kernel/config/SimpleConfigurationManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/51b8b0210c4f02aa457d100754286e886d44beaa/framework/modules/geronimo-kernel/src/main/java/org/apache/geronimo/kernel/config/SimpleConfigurationManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-kernel/src/main/java/org/apache/geronimo/kernel/config/SimpleConfigurationManager.java?ref=51b8b0210c4f02aa457d100754286e886d44beaa",
                "patch": "@@ -498,7 +498,7 @@ protected Configuration doLoad(ConfigurationData configurationData, LinkedHashSe\n         return configuration;\n     }\n \n-    protected List<Configuration> buildAllServiceParents(Map<Artifact, Configuration> loadedConfigurations, DependencyNode dependencyNode) throws InvalidConfigException {\n+    protected List<Configuration> buildAllServiceParents(Map<Artifact, Configuration> loadedConfigurations, DependencyNode dependencyNode) throws InvalidConfigException, MissingDependencyException {\n         List<Configuration> allServiceParents = new ArrayList<Configuration>();\n         for (Artifact parentId : dependencyNode.getServiceParents()) {\n             addDepthFirstServiceParents(parentId, allServiceParents, new HashSet<Artifact>(), loadedConfigurations);\n@@ -512,9 +512,14 @@ protected DependencyNode buildDependencyNode(ConfigurationData configurationData\n         return dependencyNode;\n     }\n \n-    private void addDepthFirstServiceParents(Artifact id, List<Configuration> ancestors, Set<Artifact> ids, Map<Artifact, Configuration> loadedConfigurations) throws InvalidConfigException {\n+    private void addDepthFirstServiceParents(Artifact id, List<Configuration> ancestors, Set<Artifact> ids, Map<Artifact, Configuration> loadedConfigurations) throws InvalidConfigException, MissingDependencyException {\n         if (!ids.contains(id)) {\n-            Configuration configuration = getConfiguration(id, loadedConfigurations);\n+        \tConfiguration configuration = null;\n+        \ttry {\n+        \t\tconfiguration = getConfiguration(id, loadedConfigurations);\n+        \t} catch (InvalidConfigException e) {\n+        \t\tthrow new MissingDependencyException(id);\n+        \t}\n             ancestors.add(configuration);\n             ids.add(id);\n             for (Artifact parentId : configuration.getDependencyNode().getServiceParents()) {\n@@ -936,7 +941,9 @@ public synchronized LifecycleResults unloadConfiguration(Artifact id, LifecycleM\n         LifecycleResults results = new LifecycleResults();\n         for (Artifact configurationId : unloadList) {\n             Configuration configuration = getConfiguration(configurationId);\n-\n+            \n+            if(configuration == null) throw new NoSuchConfigException(configurationId);\n+            \n             // first make sure it is stopped\n             if (started.contains(configurationId)) {\n                 monitor.stopping(configurationId);\n@@ -959,6 +966,11 @@ public synchronized LifecycleResults unloadConfiguration(Artifact id, LifecycleM\n \n             try {\n                 Bundle bundle = bundles.remove(configurationId);\n+                if(bundle == null) {\n+                \t// Attempt to get the bundle from framework directly\n+\t\t\t\t\tbundle = attemptGetBundleByLocation(configurationId, monitor);\n+                }\n+                \n                 if (bundle != null) {\n                     if (BundleUtils.canStop(bundle)) {\n                         bundle.stop(Bundle.STOP_TRANSIENT);\n@@ -975,7 +987,34 @@ public synchronized LifecycleResults unloadConfiguration(Artifact id, LifecycleM\n         monitor.finished();\n         return results;\n     }\n-\n+    /**\n+     * Attempt to get the bundle by searching the bundle's location in all bundles in framework \n+     * \n+     * @param artifact\n+     * @param monitor\n+     * @return \n+     * @throws NoSuchConfigException\n+     * @throws IOException\n+     * @throws InvalidConfigException\n+     */\n+    protected Bundle attemptGetBundleByLocation(Artifact artifact, LifecycleMonitor monitor) {\n+    \tString artifactLoc = \"\";\n+    \ttry {\n+    \t\tartifactLoc = locateBundle(artifact, monitor);\n+    \t} catch (Exception e) {\n+    \t\t// Because just attempt to get, so ignore\n+    \t\treturn null;\n+    \t}\n+    \t \n+    \tBundle[] bundles = this.bundleContext.getBundles();\n+    \t\n+    \tfor(Bundle bundle : bundles) {\n+    \t\tif(artifactLoc.equals(bundle.getLocation())) return bundle;\n+    \t}\n+    \t\n+    \treturn null;\n+    }\n+    \n     protected void removeConfigurationFromModel(Artifact configurationId) throws NoSuchConfigException {\n         if (configurationModel.containsConfiguration(configurationId)) {\n             configurationModel.removeConfiguration(configurationId);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/4d210253efcf0f7e06afed0f564fb30c9c53be74",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/47ac83f31bf8d417df8d6e816103280ead78aff1",
        "message": "GERONIMO-6144 NPE in DependencyManager if configurations/bundles are uninstalled\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1165151 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_16",
        "file": [
            {
                "sha": "9eaaa23a2fb56df45260a131032ddc33be736773",
                "filename": "framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/configuration/DependencyManager.java",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/apache/geronimo/blob/4d210253efcf0f7e06afed0f564fb30c9c53be74/framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/configuration/DependencyManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/4d210253efcf0f7e06afed0f564fb30c9c53be74/framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/configuration/DependencyManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/configuration/DependencyManager.java?ref=4d210253efcf0f7e06afed0f564fb30c9c53be74",
                "patch": "@@ -141,7 +141,10 @@ public void bundleChanged(BundleEvent bundleEvent) {\n         }\n         List<Bundle> dependentBundles = new ArrayList<Bundle>(dependentBundleIds.size());\n         for (Long dependentBundleId : dependentBundleIds) {\n-            dependentBundles.add(bundleContext.getBundle(dependentBundleId));\n+            Bundle b = bundleContext.getBundle(dependentBundleId);\n+            if (b!=null) {\n+                dependentBundles.add(b);\n+            }\n         }\n         return dependentBundles;\n     }\n@@ -162,7 +165,10 @@ public void bundleChanged(BundleEvent bundleEvent) {\n         }\n         Set<Bundle> dependentBundles = new HashSet<Bundle>(fullDependentBundleIds.size());\n         for (Long dependentBundleId : fullDependentBundleIds) {\n-            dependentBundles.add(bundleContext.getBundle(dependentBundleId));\n+            Bundle b = bundleContext.getBundle(dependentBundleId);\n+            if (b!=null) {\n+                dependentBundles.add(b);\n+            }\n         }\n         return dependentBundles;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/fc6991da02f9de54eb33522297e71b7e91777fef",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/bfd98b314c0203d479a41c973147007a6de4c289",
        "message": "GERONIMO-6010:NPE when creating keystores\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1140982 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_17",
        "file": [
            {
                "sha": "967c9843a287f776a8a5da855bf3b7238d1fd8b5",
                "filename": "framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreManager.java",
                "status": "modified",
                "additions": 16,
                "deletions": 13,
                "changes": 29,
                "blob_url": "https://github.com/apache/geronimo/blob/fc6991da02f9de54eb33522297e71b7e91777fef/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/fc6991da02f9de54eb33522297e71b7e91777fef/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/keystore/FileKeystoreManager.java?ref=fc6991da02f9de54eb33522297e71b7e91777fef",
                "patch": "@@ -55,6 +55,9 @@\n import org.apache.geronimo.gbean.GBeanInfoBuilder;\n import org.apache.geronimo.gbean.GBeanLifecycle;\n import org.apache.geronimo.kernel.Kernel;\n+import org.apache.geronimo.kernel.config.ConfigurationUtil;\n+import org.apache.geronimo.kernel.config.EditableConfigurationManager;\n+import org.apache.geronimo.kernel.config.InvalidConfigException;\n import org.apache.geronimo.kernel.util.InputUtils;\n import org.apache.geronimo.management.geronimo.KeyIsLocked;\n import org.apache.geronimo.management.geronimo.KeystoreException;\n@@ -178,21 +181,21 @@ public KeystoreInstance getKeystore(String name, String type) {\n             }\n         }\n         data.setAttribute(\"keystoreType\", type);\n-//        EditableConfigurationManager mgr = ConfigurationUtil.getEditableConfigurationManager(kernel);\n-//        if(mgr != null) {\n-//            try {\n-//                mgr.addGBeanToConfiguration(myName.getArtifact(), data, true);\n-//                return (KeystoreInstance) kernel.getProxyManager().createProxy(aName, KeystoreInstance.class);\n-//            } catch (InvalidConfigException e) {\n-//                log.error(\"Should never happen\", e);\n-//                throw new IllegalStateException(\"Unable to add Keystore GBean (\"+e.getMessage()+\")\", e);\n-//            } finally {\n-//                ConfigurationUtil.releaseConfigurationManager(kernel, mgr);\n-//            }\n-//        } else {\n+        EditableConfigurationManager mgr = ConfigurationUtil.getEditableConfigurationManager(kernel);\n+        if(mgr != null) {\n+            try {\n+                mgr.addGBeanToConfiguration(myName.getArtifact(), data, true);\n+                return (KeystoreInstance) kernel.getProxyManager().createProxy(aName, KeystoreInstance.class);\n+            } catch (InvalidConfigException e) {\n+                log.error(\"Should never happen\", e);\n+                throw new IllegalStateException(\"Unable to add Keystore GBean (\"+e.getMessage()+\")\", e);\n+            } finally {\n+                ConfigurationUtil.releaseConfigurationManager(kernel, mgr);\n+            }\n+        } else {\n             log.warn(\"The ConfigurationManager in the kernel does not allow changes at runtime\");\n             return null;\n-//        }\n+        }\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/1dc93fe4e5ee68dd113885eebcb5429dec6d0203",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/04b7d297a985188e023c7ebfce4a1443a90a6d87",
        "message": "NPE protection for resource type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1126453 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_18",
        "file": [
            {
                "sha": "50b154317d15b36cba5b6fa4da4faf1e071206d3",
                "filename": "plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/ResourceRefBuilder.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/1dc93fe4e5ee68dd113885eebcb5429dec6d0203/plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/ResourceRefBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/1dc93fe4e5ee68dd113885eebcb5429dec6d0203/plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/ResourceRefBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/ResourceRefBuilder.java?ref=1dc93fe4e5ee68dd113885eebcb5429dec6d0203",
                "patch": "@@ -282,7 +282,12 @@ public void setResourceEnvironment(ResourceEnvironmentBuilder builder, Collectio\n         Set<AbstractNameQuery> applicationManagedSecurityResources = new HashSet<AbstractNameQuery>();\n         for (ResourceRef resourceRef : resourceRefList) {\n \n-            String type = resourceRef.getResType().trim();\n+            String type = resourceRef.getResType();\n+            if(type == null){\n+                continue;\n+            }else {\n+                type = type.trim();\n+            }\n \n             if (!URL.class.getName().equals(type)\n                     && !\"javax.mail.Session\".equals(type)"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/609d6d34e253b8b31aa2000339b0d425e30f94ff",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/b73893a5f15e7e6d3dc6fe2e3665b6a077b6ba43",
        "message": "Elimiate the potential  NPE and java.util.ConcurrentModificationException in EjbRefBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1084479 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_19",
        "file": [
            {
                "sha": "1c8afb34af6677d03ff4ee93391bd54d45454a44",
                "filename": "plugins/openejb/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbRefBuilder.java",
                "status": "modified",
                "additions": 10,
                "deletions": 3,
                "changes": 13,
                "blob_url": "https://github.com/apache/geronimo/blob/609d6d34e253b8b31aa2000339b0d425e30f94ff/plugins/openejb/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbRefBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/609d6d34e253b8b31aa2000339b0d425e30f94ff/plugins/openejb/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbRefBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openejb/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbRefBuilder.java?ref=609d6d34e253b8b31aa2000339b0d425e30f94ff",
                "patch": "@@ -231,7 +231,7 @@ private void addRefs(JndiConsumer jndiConsumer, Map<String, GerEjbRefType> refMa\n                 spec_ejbRef.setEjbRefName(refName);\n \n                 // ejb-ref-type\n-                String refType = getStringValue(spec_ejbRef.getType());\n+                String refType = getStringValue(spec_ejbRef.getEjbRefType()==null?null:spec_ejbRef.getEjbRefType().name());\n                 if (\"SESSION\".equalsIgnoreCase(refType)) {\n                     spec_ejbRef.setEjbRefType(org.apache.openejb.jee.EjbRefType.SESSION);\n                 } else if (\"ENTITY\".equalsIgnoreCase(refType)) {\n@@ -275,14 +275,17 @@ private void addRefs(JndiConsumer jndiConsumer, Map<String, GerEjbRefType> refMa\n \n                 // openejb handling of injection-targets\n                 if (spec_ejbRef.getInjectionTarget() != null) {\n+                    \n+                    List<InjectionTarget> injectionTargetsToAdd=new ArrayList<InjectionTarget>();\n                     for (InjectionTarget injectionTargetType : spec_ejbRef.getInjectionTarget()) {\n                         InjectionTarget newInjectionTarget = new InjectionTarget();\n                         newInjectionTarget.setInjectionTargetClass(getStringValue(injectionTargetType\n                                 .getInjectionTargetClass()));\n                         newInjectionTarget.setInjectionTargetName(getStringValue(injectionTargetType\n                                 .getInjectionTargetName()));\n-                        spec_ejbRef.getInjectionTarget().add(newInjectionTarget);\n+                        injectionTargetsToAdd.add(newInjectionTarget);\n                     }\n+                    spec_ejbRef.getInjectionTarget().addAll(injectionTargetsToAdd);\n                 }\n \n                 // TODO: geronimo's handling of injection-target\n@@ -341,14 +344,18 @@ private void addRefs(JndiConsumer jndiConsumer, Map<String, GerEjbRefType> refMa\n \n                 // openejb handling of injection-targets\n                 if (localRefFromSpecDD.getInjectionTarget() != null) {\n+                    List<InjectionTarget> injectionTargetsToAdd=new ArrayList<InjectionTarget>();\n+                    \n                     for (InjectionTarget injectionTargetType : localRefFromSpecDD.getInjectionTarget()) {\n                         InjectionTarget injectionTarget = new InjectionTarget();\n                         injectionTarget.setInjectionTargetClass(getStringValue(injectionTargetType\n                                 .getInjectionTargetClass()));\n                         injectionTarget.setInjectionTargetName(getStringValue(injectionTargetType\n                                 .getInjectionTargetName()));\n-                        localRefFromSpecDD.getInjectionTarget().add(injectionTarget);\n+                        injectionTargetsToAdd.add(injectionTarget);\n                     }\n+                    \n+                    localRefFromSpecDD.getInjectionTarget().addAll(injectionTargetsToAdd);\n                 }\n                 // TODO: geronimo's handling of injection-target\n                 // addInjections(refName, localRefFromSpecDD.getInjectionTarget(), NamingBuilder.INJECTION_KEY.get(sharedContext));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/23902eb0321393c407953090495541bb1d1aff4e",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/deea15e25e1172f5f75953278fd090379c583729",
        "message": "Add NPE check for configurePOJO\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1082410 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_20",
        "file": [
            {
                "sha": "088ffebe96052ee782fccef38b7e5380b8dbc49d",
                "filename": "plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "status": "modified",
                "additions": 35,
                "deletions": 31,
                "changes": 66,
                "blob_url": "https://github.com/apache/geronimo/blob/23902eb0321393c407953090495541bb1d1aff4e/plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/23902eb0321393c407953090495541bb1d1aff4e/plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java?ref=23902eb0321393c407953090495541bb1d1aff4e",
                "patch": "@@ -47,6 +47,7 @@\n \n import org.apache.axis.constants.Style;\n import org.apache.axis.description.JavaServiceDesc;\n+import org.apache.axis.description.OperationDesc;\n import org.apache.axis.handlers.HandlerInfoChainFactory;\n import org.apache.axis.handlers.soap.SOAPService;\n import org.apache.axis.providers.java.RPCProvider;\n@@ -98,7 +99,7 @@\n public class AxisBuilder implements WebServiceBuilder {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AxisBuilder.class);\n-    \n+\n     private static final SOAPConstants SOAP_VERSION = SOAPConstants.SOAP11_CONSTANTS;\n \n     private final Environment defaultEnvironment;\n@@ -111,11 +112,11 @@ public AxisBuilder(@ParamAttribute(name = \"defaultEnvironment\") Environment defa\n     @Override\n     public void findWebServices(Module module, boolean isEJB, Map servletLocations, Environment environment, Map sharedContext) throws DeploymentException {\n         final String path = isEJB ? \"META-INF/webservices.xml\" : \"WEB-INF/webservices.xml\";\n-            \n+\n         URL wsDDUrl = module.getDeployable().getResource(path);\n         if (wsDDUrl != null) {\n             // \"JarFile moduleFile\" is useless in parseWebServiceDescriptor, so we pass \"null\" to it.\n-            Map portMap = WSDescriptorParser.parseWebServiceDescriptor(wsDDUrl, null, isEJB, servletLocations);\n+            Map<String, PortInfo> portMap = WSDescriptorParser.parseWebServiceDescriptor(wsDDUrl, null, isEJB, servletLocations);\n             if (portMap != null) {\n                 if (defaultEnvironment != null) {\n                     EnvironmentBuilder.mergeEnvironments(environment, defaultEnvironment);\n@@ -126,36 +127,39 @@ public void findWebServices(Module module, boolean isEJB, Map servletLocations,\n             }\n         }\n     }\n-    \n+\n     @Override\n     public boolean configurePOJO(GBeanData targetGBean, String servletName, Module module, String servletClassName, DeploymentContext context) throws DeploymentException {\n         Map sharedContext = ((WebModule) module).getSharedContext();\n-        Map portInfoMap = (Map) sharedContext.get(KEY);\n-        PortInfo portInfo = (PortInfo) portInfoMap.get(servletName);\n+        Map<String, PortInfo> portInfoMap = (Map<String, PortInfo>) sharedContext.get(KEY);\n+\n+        if(portInfoMap == null) {\n+            return false;\n+        }\n+        PortInfo portInfo = portInfoMap.get(servletName);\n         if (portInfo == null) {\n             //not ours\n             return false;\n         }\n-        \n+\n         Bundle bundle = context.getDeploymentBundle();\n-        Class serviceClass = loadClass(servletClassName, bundle);\n+        Class<?> serviceClass = loadClass(servletClassName, bundle);\n         if (isJAXWSWebService(serviceClass)) {\n             if (DescriptorVersion.J2EE.equals(portInfo.getDescriptorVersion())) {\n                 // This is a JAX-WS web service in J2EE descriptor so throw an exception\n-                throw new DeploymentException(\"JAX-WS web service '\" + portInfo.getPortComponentName() \n+                throw new DeploymentException(\"JAX-WS web service '\" + portInfo.getPortComponentName()\n                                               + \"' cannot be specified in J2EE webservices.xml descriptor.\");\n             } else {\n                 // This is a JAX-WS web service in JAVAEE descriptor so ignore\n                 return false;\n             }\n         }\n-        \n+\n         portInfo.initialize(module.getModuleFile());\n-        \n-        LOG.debug(\"Publishing JAX-RPC '\" + portInfo.getPortComponentName() \n-                  + \"' service at \" + portInfo.getContextURI());\n \n-        BundleClassLoader loader = new BundleClassLoader(bundle);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Publishing JAX-RPC '\" + portInfo.getPortComponentName() + \"' service at \" + portInfo.getContextURI());\n+        }\n         ServiceInfo serviceInfo = AxisServiceBuilder.createServiceInfo(portInfo, bundle);\n         JavaServiceDesc serviceDesc = serviceInfo.getServiceDesc();\n \n@@ -198,38 +202,38 @@ public boolean configurePOJO(GBeanData targetGBean, String servletName, Module m\n \n     @Override\n     public boolean configureEJB(GBeanData targetGBean, String ejbName, Module module, Map sharedContext, Bundle bundle) throws DeploymentException {\n-        \n+\n         if (sharedContext.get(KEY) == null){\n             return false;\n         }\n-        \n-        Map portInfoMap = (Map) sharedContext.get(KEY);\n-        \n+\n+        Map<String, PortInfo> portInfoMap = (Map<String, PortInfo>) sharedContext.get(KEY);\n+\n         if (portInfoMap.get(ejbName) == null) {\n             //not ours\n             return false;\n         }\n-        \n-        PortInfo portInfo = (PortInfo) portInfoMap.get(ejbName);\n-        \n+\n+        PortInfo portInfo = portInfoMap.get(ejbName);\n+\n         String beanClassName = (String)targetGBean.getAttribute(\"ejbClass\");\n-        Class serviceClass = loadClass(beanClassName, bundle);\n+        Class<?> serviceClass = loadClass(beanClassName, bundle);\n         if (isJAXWSWebService(serviceClass)) {\n             if (DescriptorVersion.J2EE.equals(portInfo.getDescriptorVersion())) {\n                 // This is a JAX-WS web service in J2EE descriptor so throw an exception\n-                throw new DeploymentException(\"JAX-WS web service '\" + portInfo.getPortComponentName() \n+                throw new DeploymentException(\"JAX-WS web service '\" + portInfo.getPortComponentName()\n                                               + \"' cannot be specified in J2EE webservices.xml descriptor.\");\n             } else {\n                 // This is a JAX-WS web service in JAVAEE descriptor so ignore\n                 return false;\n             }\n         }\n-        \n+\n         portInfo.initialize(module.getModuleFile());\n-        \n-        LOG.debug(\"Publishing EJB JAX-RPC '\" + portInfo.getPortComponentName() \n-                  + \"' service at \" + portInfo.getContextURI());\n-        \n+\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Publishing EJB JAX-RPC '\" + portInfo.getPortComponentName() + \"' service at \" + portInfo.getContextURI());\n+        }\n         ServiceInfo serviceInfo = AxisServiceBuilder.createServiceInfo(portInfo, bundle);\n         targetGBean.setAttribute(\"serviceInfo\", serviceInfo);\n         JavaServiceDesc serviceDesc = serviceInfo.getServiceDesc();\n@@ -438,7 +442,7 @@ private void doHeavyweightMapping(QName serviceName, PortType portType, List<Ser\n         }\n //        Class enhancedServiceEndpointClass = enhanceServiceEndpointInterface(serviceEndpointInterface, context, module, classLoader);\n \n-        Collection operationDescs = new ArrayList();\n+        Collection<OperationDesc> operationDescs = new ArrayList<OperationDesc>();\n         List<ServiceEndpointMethodMapping> methodMappings = endpointMapping.getServiceEndpointMethodMapping();\n         int i = 0;\n         Set wrapperElementQNames = new HashSet();\n@@ -547,9 +551,9 @@ public OperationInfo buildOperationInfoLightweight(Method method, BindingOperati\n             throw new DeploymentException(\"Unable to load Web Service class: \" + className);\n         }\n     }\n-    \n+\n     static boolean isJAXWSWebService(Class clazz) {\n-        return (clazz.isAnnotationPresent(WebService.class) || \n+        return (clazz.isAnnotationPresent(WebService.class) ||\n                 clazz.isAnnotationPresent(WebServiceProvider.class));\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/0608adac62b0982978999f1fce0b9b60c8e32bea",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/615d109b7a09c0d0adf0427bd0477c5eee778275",
        "message": "Fix NPE when deploying a non jaxrpc ejb module.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1082378 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_21",
        "file": [
            {
                "sha": "b15be55ee0c052e246e1a81e2d709057b3e1b1a7",
                "filename": "plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "status": "modified",
                "additions": 9,
                "deletions": 2,
                "changes": 11,
                "blob_url": "https://github.com/apache/geronimo/blob/0608adac62b0982978999f1fce0b9b60c8e32bea/plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/0608adac62b0982978999f1fce0b9b60c8e32bea/plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/axis/geronimo-axis-builder/src/main/java/org/apache/geronimo/axis/builder/AxisBuilder.java?ref=0608adac62b0982978999f1fce0b9b60c8e32bea",
                "patch": "@@ -198,13 +198,20 @@ public boolean configurePOJO(GBeanData targetGBean, String servletName, Module m\n \n     @Override\n     public boolean configureEJB(GBeanData targetGBean, String ejbName, Module module, Map sharedContext, Bundle bundle) throws DeploymentException {\n+        \n+        if (sharedContext.get(KEY) == null){\n+            return false;\n+        }\n+        \n         Map portInfoMap = (Map) sharedContext.get(KEY);\n-        PortInfo portInfo = (PortInfo) portInfoMap.get(ejbName);\n-        if (portInfo == null) {\n+        \n+        if (portInfoMap.get(ejbName) == null) {\n             //not ours\n             return false;\n         }\n         \n+        PortInfo portInfo = (PortInfo) portInfoMap.get(ejbName);\n+        \n         String beanClassName = (String)targetGBean.getAttribute(\"ejbClass\");\n         Class serviceClass = loadClass(beanClassName, bundle);\n         if (isJAXWSWebService(serviceClass)) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/ccfcb94bedc3487dd2c537b98a1c59b54c3f4bd4",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/184379eba0b3cbe2a1d76ec0b6dff7b55e62b2d4",
        "message": "fix NPE during build caused by cache clearing changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1063294 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_22",
        "file": [
            {
                "sha": "d2c42ef33756b939f16c7cab37db34f5104df50d",
                "filename": "framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/main/EmbeddedDaemon.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/ccfcb94bedc3487dd2c537b98a1c59b54c3f4bd4/framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/main/EmbeddedDaemon.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ccfcb94bedc3487dd2c537b98a1c59b54c3f4bd4/framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/main/EmbeddedDaemon.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-system/src/main/java/org/apache/geronimo/system/main/EmbeddedDaemon.java?ref=ccfcb94bedc3487dd2c537b98a1c59b54c3f4bd4",
                "patch": "@@ -67,7 +67,12 @@\n     static {\n         \n         String CACHES_TO_CLEAN_STRING= System.getProperty(\"directorys.to.remove.on.start\");\n-        CACHES_TO_CLEAN = CACHES_TO_CLEAN_STRING.split(\",\");\n+        if (CACHES_TO_CLEAN_STRING != null) {\n+            CACHES_TO_CLEAN = CACHES_TO_CLEAN_STRING.split(\",\");\n+        }\n+        else {\n+            CACHES_TO_CLEAN = new String[0];\n+        }\n     }\n \n     public EmbeddedDaemon(Kernel kernel, Bundle bundle) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/d8a3e226138d82c07fcb5220a8277c64a745da95",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/cc58a9d8c9856e5159505775ff6d076adf0cfb45",
        "message": "help prevent NPE in java.util.zip.Inflater on Jetty\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@903093 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_23",
        "file": [
            {
                "sha": "de74761513ea56a82cba328562a7137fae6126f2",
                "filename": "plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/handler/GeronimoWebAppContext.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/geronimo/blob/d8a3e226138d82c07fcb5220a8277c64a745da95/plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/handler/GeronimoWebAppContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d8a3e226138d82c07fcb5220a8277c64a745da95/plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/handler/GeronimoWebAppContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/handler/GeronimoWebAppContext.java?ref=d8a3e226138d82c07fcb5220a8277c64a745da95",
                "patch": "@@ -139,5 +139,14 @@ public Resource getResource(String uriInContext) throws MalformedURLException {\n         protected BasicURLResource(URL url) {\n             super(url, null);\n         }\n+        \n+        /* \n+         * Always return true as we are pretty sure the resource does exist. This prevents \n+         * NPE as described at https://bugs.eclipse.org/bugs/show_bug.cgi?id=193269\n+         */\n+        @Override\n+        public boolean exists() {\n+            return true;\n+        }\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/df79a8437c574d5790a66148b8fd87c87747fae9",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/d9a86b75ddca2244ccac6fae17ebf3cb4d95ba6e",
        "message": "and prevent another NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@901918 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_24",
        "file": [
            {
                "sha": "b21a4a77b76e899ea402cd9d139b0bc12e3d488b",
                "filename": "plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/df79a8437c574d5790a66148b8fd87c87747fae9/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java",
                "raw_url": "https://github.com/apache/geronimo/raw/df79a8437c574d5790a66148b8fd87c87747fae9/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/GeronimoTldLocationsCache.java?ref=df79a8437c574d5790a66148b8fd87c87747fae9",
                "patch": "@@ -149,6 +149,7 @@\n     public GeronimoTldLocationsCache(ServletContext ctxt) {\n         super(ctxt);\n         this.ctxt = ctxt;\n+        this.mappings = new Hashtable<String,String[]>();\n     }\n \n     /** Constructor."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/3b75897b63c21a2728d621e118492e2e0a06796a",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/5c9f00bc43b29f70f10cba9c3242f0f1c34360d2",
        "message": "GERONIMO-4467 Fix NPE - patch by Shawn Jiang - thanks\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@726699 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_25",
        "file": [
            {
                "sha": "4bea5dd088845422ecf2dcb022edb411db40b272",
                "filename": "framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/NestedJarFile.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/3b75897b63c21a2728d621e118492e2e0a06796a/framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/NestedJarFile.java",
                "raw_url": "https://github.com/apache/geronimo/raw/3b75897b63c21a2728d621e118492e2e0a06796a/framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/NestedJarFile.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/NestedJarFile.java?ref=3b75897b63c21a2728d621e118492e2e0a06796a",
                "patch": "@@ -199,7 +199,7 @@ public InputStream getInputStream(ZipEntry zipEntry) throws IOException {\n         }\n \n         if (baseEntry == null) {\n-            throw new IOException(\"Entry not found: name=\" + baseEntry.getName());\n+            throw new IOException(\"Entry not found: name=\" + zipEntry.getName());\n         } else if (baseEntry.isDirectory()) {\n             return new DeploymentUtil.EmptyInputStream();\n         }"
            },
            {
                "sha": "75fb48e9b85fb786e1683d73271eb23fcee837ca",
                "filename": "framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/UnpackedJarFile.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/3b75897b63c21a2728d621e118492e2e0a06796a/framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/UnpackedJarFile.java",
                "raw_url": "https://github.com/apache/geronimo/raw/3b75897b63c21a2728d621e118492e2e0a06796a/framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/UnpackedJarFile.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-deployment/src/main/java/org/apache/geronimo/deployment/util/UnpackedJarFile.java?ref=3b75897b63c21a2728d621e118492e2e0a06796a",
                "patch": "@@ -115,7 +115,7 @@ public InputStream getInputStream(ZipEntry zipEntry) throws IOException {\n         }\n \n         if (file == null) {\n-            throw new IOException(\"Entry not found: name=\" + file.getAbsolutePath());\n+            throw new IOException(\"Entry not found: name=\" + zipEntry.getName());\n         } else if (file.isDirectory()) {\n             return new DeploymentUtil.EmptyInputStream();\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/18f4d203642ff98a887bbf3ab7da6edb8d3dce78",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/8a93ea2d8aae130714a0557e647610d3a4112a0c",
        "message": "improve error message and prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@662891 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_26",
        "file": [
            {
                "sha": "32d4231afb71fa63a1161f5231fb586c64b4b0b4",
                "filename": "framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallCAR.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/18f4d203642ff98a887bbf3ab7da6edb8d3dce78/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallCAR.java",
                "raw_url": "https://github.com/apache/geronimo/raw/18f4d203642ff98a887bbf3ab7da6edb8d3dce78/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallCAR.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallCAR.java?ref=18f4d203642ff98a887bbf3ab7da6edb8d3dce78",
                "patch": "@@ -68,7 +68,7 @@ public void execute(ConsoleReader consoleReader, ServerConnection connection, Co\n                 throw new DeploymentException(\"Cannot install plugin\", e);\n             }\n         } else {\n-            throw new DeploymentException(\"Cannot install plugins when connected to \"+connection.getServerURI());\n+            throw new DeploymentException(\"Cannot install plugins using \" + dmgr.getClass().getName() + \" deployment manager\");\n         }\n     }\n "
            },
            {
                "sha": "5aee1c0f33e287c34c469553fabcf462780b0913",
                "filename": "framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallLibrary.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/18f4d203642ff98a887bbf3ab7da6edb8d3dce78/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallLibrary.java",
                "raw_url": "https://github.com/apache/geronimo/raw/18f4d203642ff98a887bbf3ab7da6edb8d3dce78/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallLibrary.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandInstallLibrary.java?ref=18f4d203642ff98a887bbf3ab7da6edb8d3dce78",
                "patch": "@@ -61,7 +61,7 @@ public void execute(ConsoleReader consoleReader, ServerConnection connection, Co\n                 throw new DeploymentException(\"Unable to install library \"+installLibraryCommandArgs.getArgs()[0], e);\n             }\n         } else {\n-            throw new DeploymentException(\"Cannot install library when connected to \"+connection.getServerURI());\n+            throw new DeploymentException(\"Cannot install library using \" + dmgr.getClass().getName() + \" deployment manager\");\n         }\n     }\n }"
            },
            {
                "sha": "7660fe01d30c8402994a4c3842e381cd6c18f8b8",
                "filename": "framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/18f4d203642ff98a887bbf3ab7da6edb8d3dce78/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "raw_url": "https://github.com/apache/geronimo/raw/18f4d203642ff98a887bbf3ab7da6edb8d3dce78/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java?ref=18f4d203642ff98a887bbf3ab7da6edb8d3dce78",
                "patch": "@@ -77,7 +77,7 @@ public void execute(ConsoleReader consoleReader, ServerConnection connection, Co\n                 throw new DeploymentException(\"Invalid response\");\n             }\n         } else {\n-            throw new DeploymentException(\"Cannot list repositories when connected to \" + connection.getServerURI());\n+            throw new DeploymentException(\"Cannot list repositories using \" + dmgr.getClass().getName() + \" deployment manager\");\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/4ba8184565389516ba1dc6c9a9408badcd621280",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/dfa11cd94858629ce67b6beaef1bf74e6bbe9ee7",
        "message": "avoid a likely NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@639185 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_27",
        "file": [
            {
                "sha": "cc8eea30d4eb8b6e24c92e66997d7aa79c4527f1",
                "filename": "plugins/openejb/geronimo-openejb-clustering-builder-wadi/src/main/java/org/apache/geronimo/openejb/deployment/cluster/WADIOpenEJBClusteringBuilder.java",
                "status": "modified",
                "additions": 16,
                "deletions": 14,
                "changes": 30,
                "blob_url": "https://github.com/apache/geronimo/blob/4ba8184565389516ba1dc6c9a9408badcd621280/plugins/openejb/geronimo-openejb-clustering-builder-wadi/src/main/java/org/apache/geronimo/openejb/deployment/cluster/WADIOpenEJBClusteringBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/4ba8184565389516ba1dc6c9a9408badcd621280/plugins/openejb/geronimo-openejb-clustering-builder-wadi/src/main/java/org/apache/geronimo/openejb/deployment/cluster/WADIOpenEJBClusteringBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openejb/geronimo-openejb-clustering-builder-wadi/src/main/java/org/apache/geronimo/openejb/deployment/cluster/WADIOpenEJBClusteringBuilder.java?ref=4ba8184565389516ba1dc6c9a9408badcd621280",
                "patch": "@@ -157,20 +157,22 @@ public void addGBeans(EARContext earContext, Module module, ClassLoader cl, Coll\n         \n         OpenejbGeronimoEjbJarType geronimoEjbJarType = ejbModule.getVendorDD();\n         GerOpenejbClusteringWadiType clusteringWadiType = getWadiClusterConfig(geronimoEjbJarType);\n-        AbstractName sessionManagerName = addSessionManager(clusteringWadiType, ejbModule, earContext);\n-\n-        addNetworkConnectorMonitor(earContext, sessionManagerName);\n-\n-        EjbJar ejbJar = ejbModule.getEjbJar();\n-        for (EnterpriseBean enterpriseBean : ejbJar.getEnterpriseBeans()) {\n-            if (enterpriseBean instanceof SessionBean) {\n-                SessionBean sessionBean = (SessionBean) enterpriseBean;\n-                switch (sessionBean.getSessionType()) {\n-                    case STATEFUL:\n-                        replaceByClusteredDeploymentGBean(earContext,\n-                            ejbModule,\n-                            sessionManagerName,\n-                            enterpriseBean);\n+        if (clusteringWadiType != null) {\n+            AbstractName sessionManagerName = addSessionManager(clusteringWadiType, ejbModule, earContext);\n+\n+            addNetworkConnectorMonitor(earContext, sessionManagerName);\n+\n+            EjbJar ejbJar = ejbModule.getEjbJar();\n+            for (EnterpriseBean enterpriseBean : ejbJar.getEnterpriseBeans()) {\n+                if (enterpriseBean instanceof SessionBean) {\n+                    SessionBean sessionBean = (SessionBean) enterpriseBean;\n+                    switch (sessionBean.getSessionType()) {\n+                        case STATEFUL:\n+                            replaceByClusteredDeploymentGBean(earContext,\n+                                ejbModule,\n+                                sessionManagerName,\n+                                enterpriseBean);\n+                    }\n                 }\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/e04d2ef98aadaa5be6848480eaa4d9f1762b4ac9",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/006fac90997163bbb0d0822911579c60ca5c17b0",
        "message": "GERONIMO-3880 another NPE fix, for persistenceUnitRootUrl\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@632359 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_28",
        "file": [
            {
                "sha": "28499a9ad872ba5ecb758eec2eee587b8eb8a580",
                "filename": "plugins/openjpa/geronimo-persistence-jpa10/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/e04d2ef98aadaa5be6848480eaa4d9f1762b4ac9/plugins/openjpa/geronimo-persistence-jpa10/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/e04d2ef98aadaa5be6848480eaa4d9f1762b4ac9/plugins/openjpa/geronimo-persistence-jpa10/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openjpa/geronimo-persistence-jpa10/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java?ref=e04d2ef98aadaa5be6848480eaa4d9f1762b4ac9",
                "patch": "@@ -87,10 +87,9 @@ public PersistenceUnitGBean(String persistenceUnitName,\n         List<String> mappingFileNames = mappingFileNamesUntyped == null? new ArrayList<String>(): new ArrayList<String>(mappingFileNamesUntyped);\n         this.persistenceUnitRoot = persistenceUnitRoot;\n         URI configurationBaseURI = new File(configurationBaseURL.getFile()).toURI();\n-        URL rootURL = null;\n+        URL rootURL = configurationBaseURI.resolve(persistenceUnitRoot).normalize().toURL();\n         List<URL> jarFileUrls = NO_URLS;\n         if (!excludeUnlistedClassesValue) {\n-            rootURL = configurationBaseURI.resolve(persistenceUnitRoot).normalize().toURL();\n             jarFileUrls = new ArrayList<URL>();\n             for (String urlString: jarFileUrlsUntyped) {\n                 URL url = configurationBaseURI.resolve(urlString).normalize().toURL();"
            },
            {
                "sha": "0f4fc0eff7d24496338aa3fee9bfabbb0229f38a",
                "filename": "plugins/openjpa/geronimo-persistence-jpa10/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/e04d2ef98aadaa5be6848480eaa4d9f1762b4ac9/plugins/openjpa/geronimo-persistence-jpa10/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/e04d2ef98aadaa5be6848480eaa4d9f1762b4ac9/plugins/openjpa/geronimo-persistence-jpa10/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openjpa/geronimo-persistence-jpa10/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java?ref=e04d2ef98aadaa5be6848480eaa4d9f1762b4ac9",
                "patch": "@@ -49,5 +49,6 @@ public void testNonNullJavaFileUrls() throws Exception {\n                 new File(\"/foo/bar/Root\").toURL(),\n                 getClass().getClassLoader());\n         assertNotNull(gbean.getJarFileUrls());\n+        assertNotNull(gbean.getPersistenceUnitRootUrl());\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/98d254d37a57d8ce364ea0962783dc99a7f43fc1",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/02355218d512a6aadc64b03f072df7081e19901e",
        "message": "GERONIMO-3805 Avoid some NPEs from incomplete poms\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@617774 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_29",
        "file": [
            {
                "sha": "fac8acc24abccbc496d93d8cf5047abc747abde3",
                "filename": "buildsupport/car-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/car/PluginMetadataGeneratorMojo.java",
                "status": "modified",
                "additions": 10,
                "deletions": 8,
                "changes": 18,
                "blob_url": "https://github.com/apache/geronimo/blob/98d254d37a57d8ce364ea0962783dc99a7f43fc1/buildsupport/car-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/car/PluginMetadataGeneratorMojo.java",
                "raw_url": "https://github.com/apache/geronimo/raw/98d254d37a57d8ce364ea0962783dc99a7f43fc1/buildsupport/car-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/car/PluginMetadataGeneratorMojo.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/buildsupport/car-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/car/PluginMetadataGeneratorMojo.java?ref=98d254d37a57d8ce364ea0962783dc99a7f43fc1",
                "patch": "@@ -137,17 +137,19 @@ protected void doExecute() throws Exception {\n \n         PluginType metadata = new PluginType();\n         metadata.setName(project.getName());\n-        metadata.setAuthor(project.getOrganization().getName());\n-        metadata.setUrl(project.getOrganization().getUrl());\n+        metadata.setAuthor(project.getOrganization() == null? \"unknown\": project.getOrganization().getName());\n+        metadata.setUrl(project.getOrganization() == null? \"unknown\": project.getOrganization().getUrl());\n         metadata.setDescription(project.getDescription());\n         metadata.setCategory(category);\n \n-        for (Object licenseObj : project.getLicenses()) {\n-            License license = (License) licenseObj;\n-            LicenseType licenseType = new LicenseType();\n-            licenseType.setValue(license.getName());\n-            licenseType.setOsiApproved(osiApproved);\n-            metadata.getLicense().add(licenseType);\n+        if (project.getLicenses() != null) {\n+            for (Object licenseObj : project.getLicenses()) {\n+                License license = (License) licenseObj;\n+                LicenseType licenseType = new LicenseType();\n+                licenseType.setValue(license.getName());\n+                licenseType.setOsiApproved(osiApproved);\n+                metadata.getLicense().add(licenseType);\n+            }\n         }\n \n         PluginArtifactType instance;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/fa0931c4e09a86dd6de3e82aa02818e452d0b028",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/4b8b3c662041bea0b7d47834f46e19a66e8fd56f",
        "message": "avoid an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@573794 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_30",
        "file": [
            {
                "sha": "3f8014bc077af22db533a7c4841b198b434b7b89",
                "filename": "modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/fa0931c4e09a86dd6de3e82aa02818e452d0b028/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "raw_url": "https://github.com/apache/geronimo/raw/fa0931c4e09a86dd6de3e82aa02818e452d0b028/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-deploy-tool/src/main/java/org/apache/geronimo/deployment/cli/CommandListConfigurations.java?ref=fa0931c4e09a86dd6de3e82aa02818e452d0b028",
                "patch": "@@ -87,6 +87,9 @@ public void execute(PrintWriter out, ServerConnection connection, CommandArgs co\n                 List<PluginType> available = new ArrayList<PluginType>();\n                 for (Map.Entry<String, List<PluginType>> entry : categories.entrySet()) {\n                     String category = entry.getKey();\n+                    if (category == null) {\n+                        category = \"<no category>\";\n+                    }\n                     List<PluginType> items = entry.getValue();\n                     out.println();\n                     out.print(DeployUtils.reformat(category, 4, 72));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/e124380307dee9e6ceb89e98fc5a918f1d0c8749",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/a8f6d344ca49a717e7cc1d95d1b060472f3ffe48",
        "message": "What a difference one character makes.  Less NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@518802 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_31",
        "file": [
            {
                "sha": "530830869115705b6320cb540724039fea5434b2",
                "filename": "modules/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/e124380307dee9e6ceb89e98fc5a918f1d0c8749/modules/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java",
                "raw_url": "https://github.com/apache/geronimo/raw/e124380307dee9e6ceb89e98fc5a918f1d0c8749/modules/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java?ref=e124380307dee9e6ceb89e98fc5a918f1d0c8749",
                "patch": "@@ -165,7 +165,7 @@ public void addGBeans(EARContext earContext, Module module, ClassLoader cl, Coll\n \n     private boolean hasFacesServlet(WebAppType webApp) {\n         for (ServletType servlet : webApp.getServletArray()) {\n-            if (servlet.isSetServletClass() & FACES_SERVLET_NAME.equals(servlet.getServletClass().getStringValue().trim())) {\n+            if (servlet.isSetServletClass() && FACES_SERVLET_NAME.equals(servlet.getServletClass().getStringValue().trim())) {\n                 return true;\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/6c156639700940e76d5083d18e3f5ca17bb0211c",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/2b198398d72eef362597becdbe89c69781cd4d90",
        "message": "Fix NPE in CorbaModuleBuilderExtension\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@518243 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_32",
        "file": [
            {
                "sha": "ef556c681b4b90336f964ce22c4c99f30f590715",
                "filename": "modules/geronimo-corba-builder/src/main/java/org/apache/geronimo/corba/deployment/CorbaModuleBuilderExtension.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/6c156639700940e76d5083d18e3f5ca17bb0211c/modules/geronimo-corba-builder/src/main/java/org/apache/geronimo/corba/deployment/CorbaModuleBuilderExtension.java",
                "raw_url": "https://github.com/apache/geronimo/raw/6c156639700940e76d5083d18e3f5ca17bb0211c/modules/geronimo-corba-builder/src/main/java/org/apache/geronimo/corba/deployment/CorbaModuleBuilderExtension.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-corba-builder/src/main/java/org/apache/geronimo/corba/deployment/CorbaModuleBuilderExtension.java?ref=6c156639700940e76d5083d18e3f5ca17bb0211c",
                "patch": "@@ -101,9 +101,11 @@ public void createModule(Module module, Object plan, JarFile moduleFile, String\n             EjbModule ejbModule = (EjbModule) module;\n             OpenejbGeronimoEjbJarType jarInfo = ejbModule.getVendorDD(); \n \n-            OpenejbTssLinkType[] links = jarInfo.getTssLinkArray(); \n-            if (links != null && links.length > 0) {\n-                EnvironmentBuilder.mergeEnvironments(environment, this.defaultEnvironment);\n+            if (jarInfo != null) {\n+                OpenejbTssLinkType[] links = jarInfo.getTssLinkArray(); \n+                if (links != null && links.length > 0) {\n+                    EnvironmentBuilder.mergeEnvironments(environment, this.defaultEnvironment);\n+                }\n             }\n         }        \n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/63fd018f1a5e59108bcad11dfc94618c6558aee4",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/471339238c32cddade2288ebbfdbdeb2717ab338",
        "message": "fix NPE.. continue search if no applclient or ejbjar \n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@496754 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_33",
        "file": [
            {
                "sha": "e841122f05c63f75393796623b3ce1244f0d1a23",
                "filename": "modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/63fd018f1a5e59108bcad11dfc94618c6558aee4/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/63fd018f1a5e59108bcad11dfc94618c6558aee4/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java?ref=63fd018f1a5e59108bcad11dfc94618c6558aee4",
                "patch": "@@ -788,7 +788,6 @@ private void addModules(JarFile earFile, ApplicationType application, GerApplica\n             \t\t} \n             \t} else {\n             \t\t//no application.xml available, must inspect ear to locate and process modules\n-            \t\t//TODO //suport EE.8.2.1 bundled libraries\n             \t\tEnumeration entries = earFile.entries();\n             \t\twhile (entries.hasMoreElements()) {\n             \t\t\tModuleBuilder builder = null;\n@@ -823,6 +822,8 @@ private void addModules(JarFile earFile, ApplicationType application, GerApplica\n             \t\t\t\t\t\t\tthrow new DeploymentException(\"Cannot deploy ejb application; No ejb deployer defined: \" + entry.getName());\n             \t\t\t\t\t\t}\n             \t\t\t\t\t\tmoduleTypeName = \"an EJB\";\n+            \t\t\t\t\t} else {\n+            \t\t\t\t\t\tcontinue;\n             \t\t\t\t\t}\n             \t\t\t\t\t//TODO if no ejb-jar.xml inspect classes for EJB component annotations to identify as EJBJar module\n             \t\t\t\t} catch (IOException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/883ad6d06eeb30a03b3ae5f3adb65b6f695d4461",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/a5ee0360bb71b04ee874899bf48b4608ac002977",
        "message": "prevent NPE if the hashmap is empty\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@488106 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_34",
        "file": [
            {
                "sha": "917472d9ca8f2c9abbe02f3222f6b7e9dcb7e75d",
                "filename": "modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/binding/GBeanBinding.java",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/apache/geronimo/blob/883ad6d06eeb30a03b3ae5f3adb65b6f695d4461/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/binding/GBeanBinding.java",
                "raw_url": "https://github.com/apache/geronimo/raw/883ad6d06eeb30a03b3ae5f3adb65b6f695d4461/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/binding/GBeanBinding.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/binding/GBeanBinding.java?ref=883ad6d06eeb30a03b3ae5f3adb65b6f695d4461",
                "patch": "@@ -156,12 +156,13 @@ private synchronized void addBinding(AbstractName abstractName, Object value) th\n      * @param abstractName the abstract name of the gbean to unbind\n      */\n     protected synchronized void removeBinding(AbstractName abstractName) {\n-        if (first(bindings).getKey().equals(abstractName)) {\n+        Map.Entry entry = first(bindings);\n+        if (entry != null && entry.getKey().equals(abstractName)) {\n             Object oldValue = bindings.remove(abstractName);\n-            Map.Entry newEntry = first(bindings);\n-            if (newEntry != null) {\n-                Object newAbstractName = newEntry.getValue();\n-                Object newValue = newEntry.getValue();\n+            entry = first(bindings);\n+            if (entry != null) {\n+                Object newAbstractName = entry.getValue();\n+                Object newValue = entry.getValue();\n                 try {\n                     context.rebind(name, newValue);\n                 } catch (NamingException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/087a94950199ed28076ab2dc13ed10a892c4095d",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/22ff9857ec1b41558a5c5f734a1ff258aaf91235",
        "message": "GERONIMO-2477 Fixed NPE in JCAResourceImpl\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@454370 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_35",
        "file": [
            {
                "sha": "ca46cd04ae0bef8abd33b99a3b76e962ceb6f6f9",
                "filename": "modules/geronimo-connector/src/main/java/org/apache/geronimo/connector/JCAResourceImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/087a94950199ed28076ab2dc13ed10a892c4095d/modules/geronimo-connector/src/main/java/org/apache/geronimo/connector/JCAResourceImpl.java",
                "raw_url": "https://github.com/apache/geronimo/raw/087a94950199ed28076ab2dc13ed10a892c4095d/modules/geronimo-connector/src/main/java/org/apache/geronimo/connector/JCAResourceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-connector/src/main/java/org/apache/geronimo/connector/JCAResourceImpl.java?ref=087a94950199ed28076ab2dc13ed10a892c4095d",
                "patch": "@@ -107,7 +107,7 @@ public JCAResourceImpl(String objectName, Collection connectionFactories, Collec\n     }\n \n     public JCAAdminObject[] getAdminObjectInstances() {\n-        return (JCAAdminObject[]) adminObjects.toArray(new JCAAdminObject[connectionFactories.size()]);\n+        return (JCAAdminObject[]) adminObjects.toArray(new JCAAdminObject[adminObjects.size()]);\n     }\n \n     public JCAAdminObject[] getAdminObjectInstances(String adminObjectInterface) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/bdb4e3638eb92b5bef8eed11e269ea6c5b12234a",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/c443591a8ed9b5ea0bc22c7031d5534dce558f9b",
        "message": "Fixed debug log NPE when no reporters are configured\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@451383 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_36",
        "file": [
            {
                "sha": "138c2d8d30bb55440245fd00de7ba5626a80ad1a",
                "filename": "maven-plugins/geronimo-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/geronimo/reporting/ReportingMojoSupport.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/bdb4e3638eb92b5bef8eed11e269ea6c5b12234a/maven-plugins/geronimo-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/geronimo/reporting/ReportingMojoSupport.java",
                "raw_url": "https://github.com/apache/geronimo/raw/bdb4e3638eb92b5bef8eed11e269ea6c5b12234a/maven-plugins/geronimo-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/geronimo/reporting/ReportingMojoSupport.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/maven-plugins/geronimo-maven-plugin/src/main/java/org/apache/geronimo/mavenplugins/geronimo/reporting/ReportingMojoSupport.java?ref=bdb4e3638eb92b5bef8eed11e269ea6c5b12234a",
                "patch": "@@ -77,7 +77,12 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n         init();\n \n         if (log.isDebugEnabled()) {\n-            log.debug(\"Reporters: \" + Arrays.asList(reporters));\n+            if (reporters != null) {\n+                log.debug(\"Reporters: \" + Arrays.asList(reporters));\n+            }\n+            else {\n+                log.debug(\"No reporters configured\");\n+            }\n         }\n         \n         reportBegin();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/379e11aec15512154072168c2873794ebb8d7f99",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/e467dceb72a881fc0ee08e13590813925c9c22f6",
        "message": "GERONIMO-2362 fix a couple npes\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@438104 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_37",
        "file": [
            {
                "sha": "6497b54ac4b5426efac374a72e38618c875bd309",
                "filename": "modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/RARConfigurer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/379e11aec15512154072168c2873794ebb8d7f99/modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/RARConfigurer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/379e11aec15512154072168c2873794ebb8d7f99/modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/RARConfigurer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/RARConfigurer.java?ref=379e11aec15512154072168c2873794ebb8d7f99",
                "patch": "@@ -38,7 +38,8 @@\n \n     public DeploymentConfiguration createConfiguration(DeployableObject deployable) {\n         if (ModuleType.RAR.equals(deployable.getType())) {\n-            if (deployable.getDDBeanRoot().getDDBeanRootVersion().equals(\"1.5\")) {\n+            String ddBeanRootVersion = deployable.getDDBeanRoot().getDDBeanRootVersion();\n+            if (ddBeanRootVersion != null && ddBeanRootVersion.equals(\"1.5\")) {\n                 return new RARConfiguration(deployable, new Connector15DCBRoot(deployable.getDDBeanRoot()));\n             }\n             String[] specVersion = deployable.getDDBeanRoot().getText(\"connector/spec-version\");"
            },
            {
                "sha": "943edf31587c4cddfd2924b0562e8995d3660ced",
                "filename": "modules/geronimo-test-ddbean/src/main/java/org/apache/geronimo/deployment/tools/DDBeanRootImpl.java",
                "status": "modified",
                "additions": 17,
                "deletions": 17,
                "changes": 34,
                "blob_url": "https://github.com/apache/geronimo/blob/379e11aec15512154072168c2873794ebb8d7f99/modules/geronimo-test-ddbean/src/main/java/org/apache/geronimo/deployment/tools/DDBeanRootImpl.java",
                "raw_url": "https://github.com/apache/geronimo/raw/379e11aec15512154072168c2873794ebb8d7f99/modules/geronimo-test-ddbean/src/main/java/org/apache/geronimo/deployment/tools/DDBeanRootImpl.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-test-ddbean/src/main/java/org/apache/geronimo/deployment/tools/DDBeanRootImpl.java?ref=379e11aec15512154072168c2873794ebb8d7f99",
                "patch": "@@ -32,8 +32,6 @@\n import org.apache.xmlbeans.XmlObject;\n \n /**\n- *\n- *\n  * @version $Rev$ $Date$\n  */\n public class DDBeanRootImpl implements DDBeanRoot {\n@@ -45,21 +43,21 @@ public DDBeanRootImpl(DeployableObject deployable, URL descriptor) throws DDBean\n         InputStream is = null;\n         try {\n             is = descriptor.openStream();\n-        try {\n-        XmlObject xmlObject = XmlBeansUtil.parse(is);\n-            XmlCursor c = xmlObject.newCursor();\n             try {\n-                c.toStartDoc();\n-                c.toFirstChild();\n-                docBean = new DDBeanImpl(this, this, \"/\" + c.getName().getLocalPart(), c);\n+                XmlObject xmlObject = XmlBeansUtil.parse(is);\n+                XmlCursor c = xmlObject.newCursor();\n+                try {\n+                    c.toStartDoc();\n+                    c.toFirstChild();\n+                    docBean = new DDBeanImpl(this, this, \"/\" + c.getName().getLocalPart(), c);\n+                } finally {\n+                    c.dispose();\n+                }\n             } finally {\n-                c.dispose();\n+                is.close();\n             }\n-        } finally {\n-            is.close();\n-        }\n         } catch (Exception e) {\n-            throw (DDBeanCreateException)new DDBeanCreateException(\"problem\").initCause(e);\n+            throw (DDBeanCreateException) new DDBeanCreateException(\"problem\").initCause(e);\n         }\n     }\n \n@@ -115,11 +113,13 @@ public String getAttributeValue(String attrName) {\n         String childName = (index == -1) ? xpath : xpath.substring(0, index);\n         if ((\"/\" + childName).equals(docBean.getXpath())) {\n             if (index == -1) {\n-                return new DDBean[] {new DDBeanImpl((DDBeanImpl)docBean, xpath)};\n+                return new DDBean[]{new DDBeanImpl((DDBeanImpl) docBean, xpath)};\n             } else {\n-                DDBean[] newDDBeans = docBean.getChildBean(xpath.substring(index+1));\n-                for (int i = 0; i < newDDBeans.length; i++) {\n-                    newDDBeans[i] = new DDBeanImpl((DDBeanImpl)newDDBeans[i], xpath);\n+                DDBean[] newDDBeans = docBean.getChildBean(xpath.substring(index + 1));\n+                if (newDDBeans != null) {\n+                    for (int i = 0; i < newDDBeans.length; i++) {\n+                        newDDBeans[i] = new DDBeanImpl((DDBeanImpl) newDDBeans[i], xpath);\n+                    }\n                 }\n                 return newDDBeans;\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/ae6b0d4defa093fe83b47613f16dccdaeaccb3b3",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/2f1b5097525cdae007be943690ee0d453319f1c4",
        "message": "GERONIMO-2186 fix npe on attributes with null values\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@424307 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_38",
        "file": [
            {
                "sha": "6696493036c9ad82279fe6053ecb1536f641959c",
                "filename": "modules/system/src/java/org/apache/geronimo/system/configuration/GBeanOverride.java",
                "status": "modified",
                "additions": 14,
                "deletions": 9,
                "changes": 23,
                "blob_url": "https://github.com/apache/geronimo/blob/ae6b0d4defa093fe83b47613f16dccdaeaccb3b3/modules/system/src/java/org/apache/geronimo/system/configuration/GBeanOverride.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ae6b0d4defa093fe83b47613f16dccdaeaccb3b3/modules/system/src/java/org/apache/geronimo/system/configuration/GBeanOverride.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/system/src/java/org/apache/geronimo/system/configuration/GBeanOverride.java?ref=ae6b0d4defa093fe83b47613f16dccdaeaccb3b3",
                "patch": "@@ -348,16 +348,21 @@ public Element writeXml(Document doc, Element parent) {\n             Map.Entry entry = (Map.Entry) iterator.next();\n             String name = (String) entry.getKey();\n             String value = (String) entry.getValue();\n-            if(name.toLowerCase().indexOf(\"password\") > -1) {\n-                value = EncryptionManager.encrypt(value);\n+            if (value==null) {\n+            \tsetNullAttribute(name);\n+            }\n+            else {\n+                if(name.toLowerCase().indexOf(\"password\") > -1) {\n+                    value = EncryptionManager.encrypt(value);\n+                }\n+                Element attribute = doc.createElement(\"attribute\");\n+                attribute.setAttribute(\"name\", name);\n+                gbean.appendChild(attribute);\n+                if (value.length() == 0)\n+                    attribute.setAttribute(\"value\", \"\");\n+                else\n+                    attribute.appendChild(doc.createTextNode(value));\n             }\n-            Element attribute = doc.createElement(\"attribute\");\n-            gbean.appendChild(attribute);\n-            attribute.setAttribute(\"name\", name);\n-            if (value.length() == 0)\n-                attribute.setAttribute(\"value\", \"\");\n-            else\n-                attribute.appendChild(doc.createTextNode(value));\n         }\n \n         // cleared attributes"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/cbedbea434efb4ec73426796058e6d2112d6b20c",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/172356efd9d2f5e26bf926dd4613ee2b15eeb67c",
        "message": "GERONIMO-2104 fix NPE when bad directory is listed\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@413323 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_39",
        "file": [
            {
                "sha": "d824b19f2f8207fcf0e0e4883abef6578cec4d54",
                "filename": "modules/system/src/java/org/apache/geronimo/system/repository/Maven1Repository.java",
                "status": "modified",
                "additions": 11,
                "deletions": 9,
                "changes": 20,
                "blob_url": "https://github.com/apache/geronimo/blob/cbedbea434efb4ec73426796058e6d2112d6b20c/modules/system/src/java/org/apache/geronimo/system/repository/Maven1Repository.java",
                "raw_url": "https://github.com/apache/geronimo/raw/cbedbea434efb4ec73426796058e6d2112d6b20c/modules/system/src/java/org/apache/geronimo/system/repository/Maven1Repository.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/system/src/java/org/apache/geronimo/system/repository/Maven1Repository.java?ref=cbedbea434efb4ec73426796058e6d2112d6b20c",
                "patch": "@@ -66,16 +66,18 @@ public SortedSet list(Artifact query) {\n             path = new File(path, query.getType() + \"s\");\n \n             File[] files = path.listFiles();\n-            for (int i = 0; i < files.length; i++) {\n-                File file = files[i];\n-                String fileName = file.getName();\n-                if (fileName.startsWith(query.getArtifactId() + \"-\") && fileName.endsWith(\".\" + query.getType())) {\n-                    String version = fileName.substring(query.getArtifactId().length() + 1);\n-                    version = version.substring(0, version.length() - 1 - query.getType().length());\n-                    if(query.getVersion() != null && !query.getVersion().toString().equals(version)) {\n-                        continue;\n+            if (files != null) {\n+                for (int i = 0; i < files.length; i++) {\n+                    File file = files[i];\n+                    String fileName = file.getName();\n+                    if (fileName.startsWith(query.getArtifactId() + \"-\") && fileName.endsWith(\".\" + query.getType())) {\n+                        String version = fileName.substring(query.getArtifactId().length() + 1);\n+                        version = version.substring(0, version.length() - 1 - query.getType().length());\n+                        if(query.getVersion() != null && !query.getVersion().toString().equals(version)) {\n+                            continue;\n+                        }\n+                        artifacts.add(new Artifact(query.getGroupId(), query.getArtifactId(), version, query.getType()));\n                     }\n-                    artifacts.add(new Artifact(query.getGroupId(), query.getArtifactId(), version, query.getType()));\n                 }\n             }\n         } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/d58c2cd0fab495302c3df374b9dbdea7159e010f",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/9d660d69b18ef8c09c5a3cb091c95f2248ab88bc",
        "message": "Prevent NPE in setHost.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@348557 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_40",
        "file": [
            {
                "sha": "221d8f62ad2d5f7fc664ac7d67167387727c8796",
                "filename": "modules/directory/src/java/org/apache/geronimo/directory/DirectoryGBean.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/d58c2cd0fab495302c3df374b9dbdea7159e010f/modules/directory/src/java/org/apache/geronimo/directory/DirectoryGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d58c2cd0fab495302c3df374b9dbdea7159e010f/modules/directory/src/java/org/apache/geronimo/directory/DirectoryGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/directory/src/java/org/apache/geronimo/directory/DirectoryGBean.java?ref=d58c2cd0fab495302c3df374b9dbdea7159e010f",
                "patch": "@@ -135,8 +135,10 @@ public String getHost() {\n \n     public void setHost(String host) {\n         try{\n-            if (host == null )\n+            if (host == null ){\n                 this.host = null;\n+                return;\n+            }\n             \n             String strHost = host.trim();\n             if (strHost.equals(\"0.0.0.0\")){"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/a7886c9b20bb6c473dbbc2f3bb045f0d8ec46ea3",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/29f8dbfbedccae62ffc010e3d65f9484fdf84206",
        "message": "avoid an npe on early failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@344299 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_41",
        "file": [
            {
                "sha": "7f0c3e9a80bc1c2a80487cd4af3cd9678571d8cb",
                "filename": "modules/system/src/java/org/apache/geronimo/system/main/ProgressBarStartupMonitor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/a7886c9b20bb6c473dbbc2f3bb045f0d8ec46ea3/modules/system/src/java/org/apache/geronimo/system/main/ProgressBarStartupMonitor.java",
                "raw_url": "https://github.com/apache/geronimo/raw/a7886c9b20bb6c473dbbc2f3bb045f0d8ec46ea3/modules/system/src/java/org/apache/geronimo/system/main/ProgressBarStartupMonitor.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/system/src/java/org/apache/geronimo/system/main/ProgressBarStartupMonitor.java?ref=a7886c9b20bb6c473dbbc2f3bb045f0d8ec46ea3",
                "patch": "@@ -33,7 +33,7 @@\n     private PrintStream out;\n     private String currentOperation;\n     private URI[] configurations;\n-    private char[] configStatus;\n+    private char[] configStatus = new char[0];\n     private long started;\n     private int percent = 0;\n     private Kernel kernel;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/b5c2a8fa941f238b0cc44e7e2943dc32b62b96d4",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/9067f81cbf2b282b432a0fbc086703111113634f",
        "message": "GERONIMO-1034 avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@292831 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_42",
        "file": [
            {
                "sha": "773a712475468bbf830a7874c2bd3c24579a580b",
                "filename": "modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/b5c2a8fa941f238b0cc44e7e2943dc32b62b96d4/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/b5c2a8fa941f238b0cc44e7e2943dc32b62b96d4/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java?ref=b5c2a8fa941f238b0cc44e7e2943dc32b62b96d4",
                "patch": "@@ -398,7 +398,7 @@ static void addEJBRefs(NamingContext earContext, NamingContext ejbContext, RefCo\n \n                 String ejbLink = null;\n                 GerEjbRefType remoteRef = (GerEjbRefType) ejbRefMap.get(ejbRefName);\n-                if (remoteRef.isSetNsCorbaloc()) {\n+                if (remoteRef != null && remoteRef.isSetNsCorbaloc()) {\n                     try {\n                         ObjectName cssBean;\n                         if (remoteRef.isSetCssName()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/ca269b2d22fb143557d5e1b0d5a5892cfc58dd4a",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/5409576f984c2705527091bd26d4e1637370277d",
        "message": "GERONIMO-1031, avoid NPE when looking for context-root\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@292881 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_43",
        "file": [
            {
                "sha": "a8ba1e2b10bfb75e0fa0032a666d72dd0a9e2937",
                "filename": "modules/tomcat-builder/src/java/org/apache/geronimo/tomcat/deployment/TomcatModuleBuilder.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/ca269b2d22fb143557d5e1b0d5a5892cfc58dd4a/modules/tomcat-builder/src/java/org/apache/geronimo/tomcat/deployment/TomcatModuleBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ca269b2d22fb143557d5e1b0d5a5892cfc58dd4a/modules/tomcat-builder/src/java/org/apache/geronimo/tomcat/deployment/TomcatModuleBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/tomcat-builder/src/java/org/apache/geronimo/tomcat/deployment/TomcatModuleBuilder.java?ref=ca269b2d22fb143557d5e1b0d5a5892cfc58dd4a",
                "patch": "@@ -194,7 +194,11 @@ private Module createModule(Object plan, JarFile moduleFile, String targetPath,\n         }\n \n         if (contextRoot == null) {\n-            contextRoot = tomcatWebApp.getContextRoot();\n+            if (tomcatWebApp.isSetContextRoot()) {\n+                contextRoot = tomcatWebApp.getContextRoot();\n+            } else {\n+                contextRoot = determineDefaultContextRoot(webApp, standAlone, moduleFile, targetPath);\n+            }\n         }\n         //look for a webservices dd\n         Map portMap = Collections.EMPTY_MAP;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/dcbeef367e5b54cd9da405cf42b7dba56a3b9b8a",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/402f74afaac737eb2bba7e520f702aa9df60b78a",
        "message": "avoid NPE when no password is given\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@291324 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_44",
        "file": [
            {
                "sha": "eda93a5dd5158ad956f6aea74112592767571d1d",
                "filename": "modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java",
                "status": "modified",
                "additions": 5,
                "deletions": 10,
                "changes": 15,
                "blob_url": "https://github.com/apache/geronimo/blob/dcbeef367e5b54cd9da405cf42b7dba56a3b9b8a/modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java",
                "raw_url": "https://github.com/apache/geronimo/raw/dcbeef367e5b54cd9da405cf42b7dba56a3b9b8a/modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/tomcat/src/java/org/apache/geronimo/tomcat/realm/TomcatGeronimoRealm.java?ref=dcbeef367e5b54cd9da405cf42b7dba56a3b9b8a",
                "patch": "@@ -21,7 +21,6 @@\n import java.security.AccessControlException;\r\n import java.security.Principal;\r\n import java.security.cert.X509Certificate;\r\n-\r\n import javax.security.auth.Subject;\r\n import javax.security.auth.callback.CallbackHandler;\r\n import javax.security.auth.login.AccountExpiredException;\r\n@@ -42,27 +41,22 @@\n import org.apache.catalina.connector.Response;\r\n import org.apache.catalina.deploy.LoginConfig;\r\n import org.apache.catalina.deploy.SecurityConstraint;\r\n-import org.apache.catalina.realm.JAASCallbackHandler;\r\n import org.apache.catalina.realm.JAASRealm;\r\n import org.apache.commons.logging.Log;\r\n import org.apache.commons.logging.LogFactory;\r\n import org.apache.geronimo.security.ContextManager;\r\n-import org.apache.geronimo.security.realm.providers.PasswordCallbackHandler;\r\n-import org.apache.geronimo.security.realm.providers.CertificateCallbackHandler;\r\n-import org.apache.geronimo.security.realm.providers.CertificateChainCallbackHandler;\r\n import org.apache.geronimo.security.jacc.PolicyContextHandlerContainerSubject;\r\n+import org.apache.geronimo.security.realm.providers.CertificateChainCallbackHandler;\r\n+import org.apache.geronimo.security.realm.providers.PasswordCallbackHandler;\r\n import org.apache.geronimo.tomcat.JAASTomcatPrincipal;\r\n \r\n \r\n public class TomcatGeronimoRealm extends JAASRealm {\r\n \r\n     private static final Log log = LogFactory.getLog(TomcatGeronimoRealm.class);\r\n \r\n-//    private Context context = null;\r\n     private static ThreadLocal currentRequest = new ThreadLocal();\r\n \r\n-    private boolean enabled = false;\r\n-\r\n     /**\r\n      * Descriptive information about this <code>Realm</code> implementation.\r\n      */\r\n@@ -144,7 +138,7 @@ public boolean hasUserDataPermission(Request request,\n      *\r\n      * @param request    Request we are processing\r\n      * @param response   Response we are creating\r\n-     * @param constraint Security constraint we are enforcing\r\n+     * @param constraints Security constraints we are enforcing\r\n      * @param context    The Context to which client of this class is attached.\r\n      * @throws java.io.IOException if an input/output error occurs\r\n      */\r\n@@ -325,7 +319,8 @@ public boolean hasRole(Principal principal, String role) {\n      */\r\n     public Principal authenticate(String username, String credentials) {\r\n \r\n-        CallbackHandler callbackHandler = new PasswordCallbackHandler(username, credentials.toCharArray());\r\n+        char[] cred = credentials == null? null: credentials.toCharArray();\r\n+        CallbackHandler callbackHandler = new PasswordCallbackHandler(username, cred);\r\n         return authenticate(callbackHandler, username);\r\n     }\r\n \r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/2e286f1f88e83141c27ed98ea3d13ed03d4e931c",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/a23f5d5f1f119de3b061387ec917d01fc168c5c3",
        "message": "GERONIMO 750 simple NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@216114 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_45",
        "file": [
            {
                "sha": "88fed602b30b6de779334c7b743d73c45ed06fe2",
                "filename": "modules/kernel/src/java/org/apache/geronimo/kernel/config/Configuration.java",
                "status": "modified",
                "additions": 11,
                "deletions": 9,
                "changes": 20,
                "blob_url": "https://github.com/apache/geronimo/blob/2e286f1f88e83141c27ed98ea3d13ed03d4e931c/modules/kernel/src/java/org/apache/geronimo/kernel/config/Configuration.java",
                "raw_url": "https://github.com/apache/geronimo/raw/2e286f1f88e83141c27ed98ea3d13ed03d4e931c/modules/kernel/src/java/org/apache/geronimo/kernel/config/Configuration.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/kernel/src/java/org/apache/geronimo/kernel/config/Configuration.java?ref=2e286f1f88e83141c27ed98ea3d13ed03d4e931c",
                "patch": "@@ -380,15 +380,17 @@ public void doStop() throws Exception {\n \n     private void shutdown() {\n         // unregister all GBeans\n-        for (Iterator i = objectNames.iterator(); i.hasNext();) {\n-            ObjectName name = (ObjectName) i.next();\n-            kernel.getDependencyManager().removeDependency(name, objectName);\n-            try {\n-                log.trace(\"Unregistering GBean \" + name);\n-                kernel.unloadGBean(name);\n-            } catch (Exception e) {\n-                // ignore\n-                log.warn(\"Could not unregister child \" + name, e);\n+        if (objectNames != null) {\n+            for (Iterator i = objectNames.iterator(); i.hasNext();) {\n+                ObjectName name = (ObjectName) i.next();\n+                kernel.getDependencyManager().removeDependency(name, objectName);\n+                try {\n+                    log.trace(\"Unregistering GBean \" + name);\n+                    kernel.unloadGBean(name);\n+                } catch (Exception e) {\n+                    // ignore\n+                    log.warn(\"Could not unregister child \" + name, e);\n+                }\n             }\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/da06cbfd96108aba4e29a849580b83e7176c6ec6",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/1c42f8de9cb791a73166963875e959e1967b58f7",
        "message": "Fixed NPE for setting the class loader.  Using the WebClassLoader instead\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@178403 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_46",
        "file": [
            {
                "sha": "967de514b405264a886e1f78cfac035048efc90a",
                "filename": "modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 4,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/da06cbfd96108aba4e29a849580b83e7176c6ec6/modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/da06cbfd96108aba4e29a849580b83e7176c6ec6/modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java?ref=da06cbfd96108aba4e29a849580b83e7176c6ec6",
                "patch": "@@ -59,15 +59,13 @@ public void setContextProperties(TomcatContext ctx){\n         Map componentContext = ctx.getComponentContext();\n         try {\n             if (componentContext != null) {\n-                for (Iterator iterator = componentContext.values().iterator(); iterator\n-                        .hasNext();) {\n+                for (Iterator iterator = componentContext.values().iterator(); iterator.hasNext();) {\n                     Object value = iterator.next();\n                     if (value instanceof KernelAwareReference) {\n                         ((KernelAwareReference) value).setKernel(ctx.getKernel());\n                     }\n                     if (value instanceof ClassLoaderAwareReference) {\n-                        ((ClassLoaderAwareReference) value)\n-                                .setClassLoader(getLoader().getClassLoader());\n+                        ((ClassLoaderAwareReference) value).setClassLoader(ctx.getWebClassLoader());\n                     }\n                 }\n                 enc = new SimpleReadOnlyContext(componentContext);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/979ef4ef41110c7a93c232fe3b15db3ac9c3c5ad",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/18d06f8dbd2b5ca84e22cabe0132b2a0a8a0b811",
        "message": "better error message than npe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@45712 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_47",
        "file": [
            {
                "sha": "22afad154ee90f8a13804b0743221b07ebfd40a6",
                "filename": "modules/naming/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/979ef4ef41110c7a93c232fe3b15db3ac9c3c5ad/modules/naming/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/979ef4ef41110c7a93c232fe3b15db3ac9c3c5ad/modules/naming/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/naming/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java?ref=979ef4ef41110c7a93c232fe3b15db3ac9c3c5ad",
                "patch": "@@ -31,7 +31,7 @@\n /**\n  *\n  *\n- * @version $Revision: 1.3 $ $Date: 2004/06/25 21:33:27 $\n+ * @version $Revision: 1.4 $ $Date: 2004/07/25 08:12:39 $\n  *\n  * */\n public class ENCConfigBuilder {\n@@ -65,6 +65,9 @@ public static void addResourceRefs(ResourceRefType[] resourceRefs, ClassLoader c\n                 throw new DeploymentException(\"could not load class \" + type, e);\n             }\n             RefAdapter refAdapter = (RefAdapter) refAdapterMap.get(name);\n+            if (refAdapter == null) {\n+                throw  new DeploymentException(\"No geronimo configuration for resource ref named: \" + name);\n+            }\n             try {\n                 builder.addResourceRef(name, iface, refAdapter);\n             } catch (NamingException e) {\n@@ -86,6 +89,9 @@ public static void addResourceEnvRefs(ResourceEnvRefType[] resourceEnvRefArray,\n                 throw new DeploymentException(\"could not load class \" + type, e);\n             }\n             RefAdapter refAdapter = (RefAdapter) refAdapterMap.get(name);\n+            if (refAdapter == null) {\n+                throw  new DeploymentException(\"No geronimo configuration for resource env ref named: \" + name);\n+            }\n             try {\n                 builder.addResourceRef(name, iface, refAdapter);\n             } catch (NamingException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/aba213751c2414fab49b443a94051413da9bcf67",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/797d4cca2e578e07e23bb7a40e009d8ecf5e3b2e",
        "message": "Put in work-around for NPE from NIO impl.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@45375 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_48",
        "file": [
            {
                "sha": "103aa3c5b7204d025e808a69b34dde57fc074457",
                "filename": "modules/network/src/java/org/apache/geronimo/network/protocol/SocketProtocol.java",
                "status": "modified",
                "additions": 3,
                "deletions": 7,
                "changes": 10,
                "blob_url": "https://github.com/apache/geronimo/blob/aba213751c2414fab49b443a94051413da9bcf67/modules/network/src/java/org/apache/geronimo/network/protocol/SocketProtocol.java",
                "raw_url": "https://github.com/apache/geronimo/raw/aba213751c2414fab49b443a94051413da9bcf67/modules/network/src/java/org/apache/geronimo/network/protocol/SocketProtocol.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/network/src/java/org/apache/geronimo/network/protocol/SocketProtocol.java?ref=aba213751c2414fab49b443a94051413da9bcf67",
                "patch": "@@ -37,7 +37,7 @@\n \n \n /**\n- * @version $Revision: 1.11 $ $Date: 2004/05/01 17:23:55 $\n+ * @version $Revision: 1.12 $ $Date: 2004/05/01 23:16:37 $\n  */\n public class SocketProtocol implements AcceptableProtocol, SelectionEventListner {\n \n@@ -284,7 +284,6 @@ public void selectionEvent(SelectionKey selection) {\n                 }\n             }\n         } catch (CancelledKeyException e) {\n-            log.trace(\"Key Cancelled:\", e);\n             // who knows, by the time we get here,\n             // the key could have been canceled.\n         }\n@@ -403,11 +402,9 @@ public void serviceRead() {\n             if (tracing) log.trace(\"No more data available to be read.\");\n \n         } catch (CancelledKeyException e) {\n-            log.trace(\"Key Cancelled: \", e);\n             // who knows, by the time we get here,\n             // the key could have been canceled.\n         } catch (ClosedChannelException e) {\n-            log.trace(\"Channel Closed: \", e);\n             // who knows, by the time we get here,\n             // the channel could have been closed.\n         } catch (IOException e) {\n@@ -426,11 +423,10 @@ public void serviceRead() {\n \n     public void close() {\n         synchronized (this) {\n-            if (socketChannel != null) {\n+            if (state == STARTED) {\n                 log.trace(\"Closing\");\n                 try {\n-                    selectionKey.cancel();\n-                    socketChannel.close();\n+                    selectorManager.closeChannel(socketChannel);\n                 } catch (Throwable e) {\n                     log.info(\"Closing error: \", e);\n                 }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/53fef55d4af4b2783662fe3e9b7944b4f7e3d366",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/f7beb06377b2dbc198065171f92a8b34a07b3fb4",
        "message": "GERONIMO-6282 Test if the repository folder of the new instance exists to avoid NPE, for trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1291341 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_49",
        "file": [
            {
                "sha": "08178d070c4ce04d16652d5068e54f41c9311010",
                "filename": "framework/modules/geronimo-main/src/main/java/org/apache/geronimo/main/FrameworkLauncher.java",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/53fef55d4af4b2783662fe3e9b7944b4f7e3d366/framework/modules/geronimo-main/src/main/java/org/apache/geronimo/main/FrameworkLauncher.java",
                "raw_url": "https://github.com/apache/geronimo/raw/53fef55d4af4b2783662fe3e9b7944b4f7e3d366/framework/modules/geronimo-main/src/main/java/org/apache/geronimo/main/FrameworkLauncher.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-main/src/main/java/org/apache/geronimo/main/FrameworkLauncher.java?ref=53fef55d4af4b2783662fe3e9b7944b4f7e3d366",
                "patch": "@@ -456,6 +456,12 @@ private static File findFile(List<File> bundleDirs, String name) {\n     }\n \n     private static File findFile(File dir, String name) {\n+        if (!dir.exists()) dir.mkdir();\n+        if (!dir.isDirectory()) {\n+            dir.delete();\n+            dir.mkdir();\n+        }\n+        \n         File theFile = new File(dir, name);\n \n         if (theFile.exists() && !theFile.isDirectory()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/8aed92b123a2d520645679d7556559efdd09d57e",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/4612c74c652da0d33ed4db73e6acb2d8be440338",
        "message": "GERONIMO-6079 NPE in MyFacesWebAppContext.doStart() if jsf web application is packaged into an EAR\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1147443 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_50",
        "file": [
            {
                "sha": "ee77b8339705951e121481158110041d435c6f70",
                "filename": "plugins/myfaces/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/8aed92b123a2d520645679d7556559efdd09d57e/plugins/myfaces/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java",
                "raw_url": "https://github.com/apache/geronimo/raw/8aed92b123a2d520645679d7556559efdd09d57e/plugins/myfaces/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/myfaces/geronimo-myfaces-builder/src/main/java/org/apache/geronimo/myfaces/deployment/MyFacesModuleBuilderExtension.java?ref=8aed92b123a2d520645679d7556559efdd09d57e",
                "patch": "@@ -200,7 +200,7 @@ public void addGBeans(EARContext earContext, Module module, Bundle bundle, Colle\n             }\n         }\n \n-        AbstractName moduleName = moduleContext.getModuleName();\n+        AbstractName moduleName = module.getModuleName();\n         Map<EARContext.Key, Object> buildingContext = new HashMap<EARContext.Key, Object>();\n         buildingContext.put(NamingBuilder.GBEAN_NAME_KEY, moduleName);\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/601e2f78272a5dfd0cd432934d91f433b619d2fa",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/16534cb495c2ed2c421eb955157018a95977d7f2",
        "message": "to avoid NPE when building plugin with ext-module tag in DD.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1103356 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_51",
        "file": [
            {
                "sha": "744d86f6831e9a65ed29dd5a21654212e50102ad",
                "filename": "plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/601e2f78272a5dfd0cd432934d91f433b619d2fa/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/601e2f78272a5dfd0cd432934d91f433b619d2fa/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java?ref=601e2f78272a5dfd0cd432934d91f433b619d2fa",
                "patch": "@@ -444,7 +444,7 @@ private ApplicationInfo getEarPlan(File planFile, JarFile earFile, ModuleIDBuild\n         // todo change module so you can extract the real module path back out.. then we can eliminate\n         // the moduleLocations and have addModules return the modules\n         String applicationName = null;\n-        if (application.getApplicationName() != null) {\n+        if (application!=null && application.getApplicationName() != null) {\n             applicationName = application.getApplicationName().trim();\n         } else if (earFile != null) {\n             applicationName = FileUtils.removeExtension(new File(earFile.getName()).getName(), \".ear\");\n@@ -458,14 +458,14 @@ private ApplicationInfo getEarPlan(File planFile, JarFile earFile, ModuleIDBuild\n                 earFile,\n                 application,\n                 gerApplication,\n-                application.toString()\n+                application==null ? null : application.toString()\n         );\n         try {\n             addModules(earFile, application, gerApplication, environment, applicationInfo, idBuilder);\n             if (applicationInfo.getModules().isEmpty()) {\n                 //if no application.xml and no modules detected, return null for stand-alone module processing\n                 return null;\n-            } else {\n+            } else if (application!=null){\n                 addModulesToDefaultPlan(application, applicationInfo.getModules());\n             }\n         } catch (Throwable e) {"
            },
            {
                "sha": "6d2b11cf57087919584823f587c56fdebea44fe9",
                "filename": "plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/NamingBuilderCollection.java",
                "status": "modified",
                "additions": 135,
                "deletions": 0,
                "changes": 135,
                "blob_url": "https://github.com/apache/geronimo/blob/601e2f78272a5dfd0cd432934d91f433b619d2fa/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/NamingBuilderCollection.java",
                "raw_url": "https://github.com/apache/geronimo/raw/601e2f78272a5dfd0cd432934d91f433b619d2fa/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/NamingBuilderCollection.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/NamingBuilderCollection.java?ref=601e2f78272a5dfd0cd432934d91f433b619d2fa",
                "patch": "@@ -21,6 +21,7 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -32,7 +33,17 @@\n import org.apache.geronimo.gbean.annotation.GBean;\n import org.apache.geronimo.gbean.annotation.ParamReference;\n import org.apache.geronimo.j2ee.j2eeobjectnames.NameFactory;\n+import org.apache.openejb.jee.DataSource;\n+import org.apache.openejb.jee.EjbLocalRef;\n+import org.apache.openejb.jee.EjbRef;\n+import org.apache.openejb.jee.EnvEntry;\n import org.apache.openejb.jee.JndiConsumer;\n+import org.apache.openejb.jee.MessageDestinationRef;\n+import org.apache.openejb.jee.PersistenceContextRef;\n+import org.apache.openejb.jee.PersistenceUnitRef;\n+import org.apache.openejb.jee.ResourceEnvRef;\n+import org.apache.openejb.jee.ResourceRef;\n+import org.apache.openejb.jee.ServiceRef;\n import org.apache.xmlbeans.QNameSet;\n import org.apache.xmlbeans.XmlObject;\n \n@@ -47,18 +58,35 @@ public NamingBuilderCollection(@ParamReference(name = \"NamingBuilders\", namingTy\n     }\n \n     public void buildEnvironment(JndiConsumer specDD, XmlObject plan, Environment environment) throws DeploymentException {\n+        if(specDD == null){\n+            // java ee 5 and 6 might not have spec DD, adding this to avoid the NPE.\n+            specDD = new JndiConsumerNonNull();\n+        }\n+        \n         for (NamingBuilder namingBuilder : getSortedBuilders()) {\n             namingBuilder.buildEnvironment(specDD, plan, environment);\n         }\n     }\n \n     public void initContext(JndiConsumer specDD, XmlObject plan, Module module) throws DeploymentException {\n+        \n+        if(specDD == null){\n+            // java ee 5 and 6 might not have spec DD, adding this to avoid the NPE.\n+            specDD = new JndiConsumerNonNull();\n+        }\n+        \n         for (NamingBuilder namingBuilder : getSortedBuilders()) {\n             namingBuilder.initContext(specDD, plan, module);\n         }\n     }\n \n     public void buildNaming(JndiConsumer specDD, XmlObject plan, Module module, Map<EARContext.Key, Object> sharedContext) throws DeploymentException {\n+        \n+        if(specDD == null){\n+            // java ee 5 and 6 might not have spec DD, adding this to avoid the NPE.\n+            specDD = new JndiConsumerNonNull();\n+        }\n+        \n         for (NamingBuilder namingBuilder : getSortedBuilders()) {\n             if (EARConfigBuilder.createPlanMode.get().booleanValue()) {\n                 try {\n@@ -78,6 +106,113 @@ public void buildNaming(JndiConsumer specDD, XmlObject plan, Module module, Map<\n         return list;        \n     }\n     \n+    private final class JndiConsumerNonNull implements JndiConsumer {\n+        @Override\n+        public String getJndiConsumerName() {\n+            return null;\n+        }\n+\n+        @Override\n+        public Collection<EnvEntry> getEnvEntry() {\n+            return new ArrayList<EnvEntry>();\n+        }\n+\n+        @Override\n+        public Map<String, EnvEntry> getEnvEntryMap() {\n+            return new HashMap<String, EnvEntry>();\n+        }\n+\n+        @Override\n+        public Collection<EjbRef> getEjbRef() {\n+            return new ArrayList<EjbRef>();\n+        }\n+\n+        @Override\n+        public Map<String, EjbRef> getEjbRefMap() {\n+             return new HashMap<String, EjbRef>();\n+        }\n+\n+        @Override\n+        public Collection<EjbLocalRef> getEjbLocalRef() {\n+            return new ArrayList<EjbLocalRef>();\n+        }\n+\n+        @Override\n+        public Map<String, EjbLocalRef> getEjbLocalRefMap() {\n+            return new HashMap<String, EjbLocalRef>();\n+        }\n+\n+        @Override\n+        public Collection<ServiceRef> getServiceRef() {\n+            return new ArrayList<ServiceRef>();\n+        }\n+\n+        @Override\n+        public Map<String, ServiceRef> getServiceRefMap() {\n+            return new HashMap<String, ServiceRef>();\n+        }\n+\n+        @Override\n+        public Collection<ResourceRef> getResourceRef() {\n+            return new ArrayList<ResourceRef>();\n+        }\n+\n+        @Override\n+        public Map<String, ResourceRef> getResourceRefMap() {\n+            return new HashMap<String, ResourceRef>();\n+        }\n+\n+        @Override\n+        public Collection<ResourceEnvRef> getResourceEnvRef() {\n+            return new ArrayList<ResourceEnvRef>();\n+        }\n+\n+        @Override\n+        public Map<String, ResourceEnvRef> getResourceEnvRefMap() {\n+            return new HashMap<String, ResourceEnvRef>();\n+        }\n+\n+        @Override\n+        public Collection<MessageDestinationRef> getMessageDestinationRef() {\n+            return new ArrayList<MessageDestinationRef>();\n+        }\n+\n+        @Override\n+        public Map<String, MessageDestinationRef> getMessageDestinationRefMap() {\n+            return new HashMap<String, MessageDestinationRef>();\n+        }\n+\n+        @Override\n+        public Collection<PersistenceContextRef> getPersistenceContextRef() {\n+            return new ArrayList<PersistenceContextRef>();\n+        }\n+\n+        @Override\n+        public Map<String, PersistenceContextRef> getPersistenceContextRefMap() {\n+            return new HashMap<String, PersistenceContextRef>();\n+        }\n+\n+        @Override\n+        public Collection<PersistenceUnitRef> getPersistenceUnitRef() {\n+            return new ArrayList<PersistenceUnitRef>();\n+        }\n+\n+        @Override\n+        public Map<String, PersistenceUnitRef> getPersistenceUnitRefMap() {\n+            return new HashMap<String, PersistenceUnitRef>();\n+        }\n+\n+        @Override\n+        public Collection<DataSource> getDataSource() {\n+            return new ArrayList<DataSource>();\n+        }\n+\n+        @Override\n+        public Map<String, DataSource> getDataSourceMap() {\n+            return new HashMap<String, DataSource>();\n+        }\n+    }\n+\n     private static class NamingBuilderComparator implements Comparator<NamingBuilder> {\n         public int compare(NamingBuilder o1, NamingBuilder o2) {\n             return o1.getPriority() - o2.getPriority();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/2fd8253be05dfa24881f72f74bb55a1c6d581560",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/fea148a0585b882bf5899d59fb751b4a7024d741",
        "message": "GERONIMO-5945 GBean startup NPE when en EJB module includes two EJB associated with the same IOR object\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1101797 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_52",
        "file": [
            {
                "sha": "e8e1ef0b3229320b8c7adee459c1f9c2f7705d22",
                "filename": "plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/AdapterWrapper.java",
                "status": "modified",
                "additions": 12,
                "deletions": 2,
                "changes": 14,
                "blob_url": "https://github.com/apache/geronimo/blob/2fd8253be05dfa24881f72f74bb55a1c6d581560/plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/AdapterWrapper.java",
                "raw_url": "https://github.com/apache/geronimo/raw/2fd8253be05dfa24881f72f74bb55a1c6d581560/plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/AdapterWrapper.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/AdapterWrapper.java?ref=2fd8253be05dfa24881f72f74bb55a1c6d581560",
                "patch": "@@ -28,7 +28,7 @@\n  * @version $Revision: 477657 $ $Date: 2006-11-21 04:54:49 -0800 (Tue, 21 Nov 2006) $\n  */\n public final class AdapterWrapper {\n-    private final static Map adapters = new HashMap();\n+    private final static Map<String,Adapter> adapters = new HashMap<String,Adapter>();\n     private final TSSLink tssLink;\n     private Adapter generator;\n \n@@ -38,6 +38,13 @@ public AdapterWrapper(TSSLink tssLink) {\n     }\n \n     public void start(ORB orb, POA poa, Policy securityPolicy) throws CORBAException {\n+        \n+        if (tssLink.getDeployment() == null || tssLink.getDeployment().getDeploymentInfo() == null) {\n+            \n+            throw new CORBAException(\"tssLink's ejb deployment info is not ready\");\n+\n+        }\n+        \n         ContainerType containerType = tssLink.getDeployment().getContainer().getContainerType();\n         switch (containerType) {\n             case STATELESS:\n@@ -57,7 +64,10 @@ public void start(ORB orb, POA poa, Policy securityPolicy) throws CORBAException\n     }\n \n     public void stop() throws CORBAException {\n-        generator.stop();\n+        \n+        if (generator != null) {\n+            generator.stop();\n+        }\n         adapters.remove(tssLink.getContainerId());\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/c96eb3d7b96e8af3fe96f7606c720bedb5bda92b",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/2de2b50e15fbd500867a8d558b50888d5613e814",
        "message": "NPE fix for AxisBuilder, need to find a way avoid the duplicate webservice.xml analysis for both jax-rpc and jax-ws\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1087973 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_53",
        "file": [
            {
                "sha": "4cdfb29607878dae75029b36c18275a74088a42c",
                "filename": "plugins/webservices/geronimo-webservices-builder/src/main/java/org/apache/geronimo/webservices/builder/WSDescriptorParser.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/c96eb3d7b96e8af3fe96f7606c720bedb5bda92b/plugins/webservices/geronimo-webservices-builder/src/main/java/org/apache/geronimo/webservices/builder/WSDescriptorParser.java",
                "raw_url": "https://github.com/apache/geronimo/raw/c96eb3d7b96e8af3fe96f7606c720bedb5bda92b/plugins/webservices/geronimo-webservices-builder/src/main/java/org/apache/geronimo/webservices/builder/WSDescriptorParser.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/webservices/geronimo-webservices-builder/src/main/java/org/apache/geronimo/webservices/builder/WSDescriptorParser.java?ref=c96eb3d7b96e8af3fe96f7606c720bedb5bda92b",
                "patch": "@@ -301,7 +301,7 @@ public static Method getMethodForOperation(Class serviceEndpointInterface, Opera\n         SharedPortInfo sharedPortInfo;\n         for (WebserviceDescription webserviceDescription : webserviceDescriptions) {\n             String wsdlLocation = webserviceDescription.getWsdlFile().trim();\n-            String jaxrpcMappingFile = webserviceDescription.getJaxrpcMappingFile().trim();\n+            String jaxrpcMappingFile = webserviceDescription.getJaxrpcMappingFile() == null ? \"\" : webserviceDescription.getJaxrpcMappingFile().trim();\n \n             sharedPortInfo = new SharedPortInfo(wsdlLocation,\n                                                 jaxrpcMappingFile,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/6081a9c076ca8f964780ff79d38bb115ef443ccf",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/609d6d34e253b8b31aa2000339b0d425e30f94ff",
        "message": "add a fake RefAddr to the refrence is there's no StringAddrType set in geronimo DD to avoid a following NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1084487 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_54",
        "file": [
            {
                "sha": "7144e0c6d8be00fee7962b10ba17f9c4e21e087a",
                "filename": "plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/AdminObjectRefBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/6081a9c076ca8f964780ff79d38bb115ef443ccf/plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/AdminObjectRefBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/6081a9c076ca8f964780ff79d38bb115ef443ccf/plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/AdminObjectRefBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/connector-1_6/geronimo-connector-builder-1_6/src/main/java/org/apache/geronimo/connector/deployment/AdminObjectRefBuilder.java?ref=6081a9c076ca8f964780ff79d38bb115ef443ccf",
                "patch": "@@ -257,7 +257,10 @@ private Object buildResourceReference(Module module, String name, String type, G\n                 String refAddrType = getStringValue(gerResourceEnvRef.getStringAddrType());\n                 String refAddr = getStringValue(gerResourceEnvRef.getStringAddr());\n                 addr = new StringRefAddr(refAddrType, refAddr);\n+            } else {\n+                addr = new StringRefAddr(\"\",\"\");\n             }\n+            \n             String objectFactory = getStringValue(gerResourceEnvRef.getObjectFactory());\n             String objectFactoryLocation = getStringValue(gerResourceEnvRef.getObjectFactoryLocation());\n             return new Reference(clazz, addr, objectFactory, objectFactoryLocation);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/8a541eb24c8a750b897fd6d29b9622e7081b1e53",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/2b970ae9221f96a074b6199dd8f34d9af483eb54",
        "message": "GERONIMO-5647 avoid an NPE in jetty if no security realm is specified anywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1022726 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_55",
        "file": [
            {
                "sha": "8dee3e295eb246dc6c45d67ce545247685c7de49",
                "filename": "plugins/jetty8/geronimo-jetty8-builder/src/main/java/org/apache/geronimo/jetty8/deployment/JettyModuleBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/8a541eb24c8a750b897fd6d29b9622e7081b1e53/plugins/jetty8/geronimo-jetty8-builder/src/main/java/org/apache/geronimo/jetty8/deployment/JettyModuleBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/8a541eb24c8a750b897fd6d29b9622e7081b1e53/plugins/jetty8/geronimo-jetty8-builder/src/main/java/org/apache/geronimo/jetty8/deployment/JettyModuleBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jetty8/geronimo-jetty8-builder/src/main/java/org/apache/geronimo/jetty8/deployment/JettyModuleBuilder.java?ref=8a541eb24c8a750b897fd6d29b9622e7081b1e53",
                "patch": "@@ -692,8 +692,8 @@ private void configureConfigurationFactory(JettyWebAppType jettyWebApp, LoginCon\n         if (jettyWebApp.isSetSecurityRealmName()) {\n             securityRealmName = jettyWebApp.getSecurityRealmName().trim();\n         } else {\n-            if (loginConfigInfo == null) return;\n-            securityRealmName = loginConfigInfo.realmName.trim();\n+            if (loginConfigInfo == null ||loginConfigInfo.realmName == null) return;\n+            securityRealmName = loginConfigInfo.realmName;\n         }\n         AbstractNameQuery configurationFactoryName = new AbstractNameQuery(null, Collections.singletonMap(\"name\", securityRealmName), ConfigurationFactory.class.getName());\n         securityFactoryData.setReferencePattern(\"ConfigurationFactory\", configurationFactoryName);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/27b184f1ca8caff1060f6ec8a74c2d95587d5a76",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/237137bed0005b7b71b029f3ca6d08ff51b23cc1",
        "message": "Fix compilation error.  jetty 8.0.0.M1 has a NPE bug, so go to M2-SNAPSHOT\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@964633 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_56",
        "file": [
            {
                "sha": "fa0409c48db9ae799271511f254f17daf0b48a4f",
                "filename": "plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/WebAppContextWrapper.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/27b184f1ca8caff1060f6ec8a74c2d95587d5a76/plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/WebAppContextWrapper.java",
                "raw_url": "https://github.com/apache/geronimo/raw/27b184f1ca8caff1060f6ec8a74c2d95587d5a76/plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/WebAppContextWrapper.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jetty8/geronimo-jetty8/src/main/java/org/apache/geronimo/jetty8/WebAppContextWrapper.java?ref=27b184f1ca8caff1060f6ec8a74c2d95587d5a76",
                "patch": "@@ -226,7 +226,9 @@ public WebAppContextWrapper(@ParamSpecial(type = SpecialAttributeType.objectName\n \n         //stuff from spec dd\n         setDisplayName(displayName);\n-        webAppContext.setInitParams(contextParamMap);\n+        if (contextParamMap != null) {\n+            webAppContext.getInitParams().putAll(contextParamMap);\n+        }\n         setListenerClassNames(listenerClassNames);\n         webAppContext.setDistributable(distributable);\n         webAppContext.setWelcomeFiles(welcomeFiles);"
            },
            {
                "sha": "eb286751ff047d0c6a48d7c5f663aa2030f2e55e",
                "filename": "plugins/jetty8/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/27b184f1ca8caff1060f6ec8a74c2d95587d5a76/plugins/jetty8/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/27b184f1ca8caff1060f6ec8a74c2d95587d5a76/plugins/jetty8/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jetty8/pom.xml?ref=27b184f1ca8caff1060f6ec8a74c2d95587d5a76",
                "patch": "@@ -34,7 +34,7 @@\n     </description>\n \n     <properties>\n-        <jettyVersion>8.0.0.M1</jettyVersion>\n+        <jettyVersion>8.0.0.M2-SNAPSHOT</jettyVersion>\n     </properties>\n \n     <dependencyManagement>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/5ece3880adc2a8068d38a4f4e6ff1e309f5bea97",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/787dd73329024f13c55bff21754c36888622305e",
        "message": "we expect the bundle to be in active state - prevents NPE if bundle is in some other state\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@957300 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_57",
        "file": [
            {
                "sha": "2765097778d211fa734bc697703a31f3eeade756",
                "filename": "plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/TldRegistration.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/5ece3880adc2a8068d38a4f4e6ff1e309f5bea97/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/TldRegistration.java",
                "raw_url": "https://github.com/apache/geronimo/raw/5ece3880adc2a8068d38a4f4e6ff1e309f5bea97/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/TldRegistration.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jasper/geronimo-jasper/src/main/java/org/apache/geronimo/jasper/TldRegistration.java?ref=5ece3880adc2a8068d38a4f4e6ff1e309f5bea97",
                "patch": "@@ -65,8 +65,8 @@ private void registerTlds(PackageAdmin packageAdmin) throws Exception {\n         String[] packageNames = packageNameList.split(\",\");\n         for (String packageName : packageNames) {\n             ExportedPackage exportedPackage = packageAdmin.getExportedPackage(packageName.trim());\n-            if (exportedPackage == null) {\n-                LOGGER.warn(\"Package {} is not currently exported by any bundle\", packageName);\n+            if (exportedPackage == null || exportedPackage.getExportingBundle().getState() != Bundle.ACTIVE) {\n+                LOGGER.warn(\"Package {} is not currently exported by any active bundle\", packageName);\n             } else {\n                 Bundle exportingBundle = exportedPackage.getExportingBundle();\n                 "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/9053152cfa28e3993b36ce94f778a370b8636d32",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/87df0c61164f00ea4fd2979b6677d033506cc7f2",
        "message": "Create a default ApplicationType if no application.xml is not found, or NPE will be thrown while processing namingbuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@946528 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_58",
        "file": [
            {
                "sha": "7f78786c7f942a4321e0ed0738478bb9e4d41372",
                "filename": "plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "status": "modified",
                "additions": 30,
                "deletions": 5,
                "changes": 35,
                "blob_url": "https://github.com/apache/geronimo/blob/9053152cfa28e3993b36ce94f778a370b8636d32/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/9053152cfa28e3993b36ce94f778a370b8636d32/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/j2ee/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java?ref=9053152cfa28e3993b36ce94f778a370b8636d32",
                "patch": "@@ -32,6 +32,7 @@\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.jar.Attributes;\n import java.util.jar.JarEntry;\n import java.util.jar.JarFile;\n@@ -97,6 +98,7 @@\n import org.apache.geronimo.xbeans.geronimo.j2ee.GerApplicationType;\n import org.apache.geronimo.xbeans.geronimo.j2ee.GerExtModuleType;\n import org.apache.geronimo.xbeans.geronimo.j2ee.GerModuleType;\n+import org.apache.geronimo.xbeans.javaee6.WebType;\n import org.apache.geronimo.xbeans.javaee6.ApplicationDocument;\n import org.apache.geronimo.xbeans.javaee6.ApplicationType;\n import org.apache.geronimo.xbeans.javaee6.ModuleType;\n@@ -427,16 +429,19 @@ private ApplicationInfo getEarPlan(File planFile, JarFile earFile, ModuleIDBuild\n         LinkedHashSet<Module> modules = new LinkedHashSet<Module>();\n         try {\n             addModules(earFile, application, gerApplication, moduleLocations, modules, environment, earName, idBuilder);\n-            if (application == null && modules.isEmpty()) {\n-                //if no application.xml and no modules detected, return null for stand-alone module processing\n-                return null;\n+            if (application == null) {\n+                if (modules.isEmpty()) {\n+                    //if no application.xml and no modules detected, return null for stand-alone module processing\n+                    return null;\n+                } else {\n+                    application = createDefaultSpecPlan(modules);\n+                }\n             }\n         } catch (Throwable e) {\n             // close all the modules\n             for (Module module : modules) {\n                 module.close();\n             }\n-\n             if (e instanceof DeploymentException) {\n                 throw (DeploymentException) e;\n             } else if (e instanceof RuntimeException) {\n@@ -448,7 +453,7 @@ private ApplicationInfo getEarPlan(File planFile, JarFile earFile, ModuleIDBuild\n         }\n \n         String applicationName = null;\n-        if (application != null && application.isSetApplicationName()) {\n+        if (application.isSetApplicationName()) {\n             applicationName = application.getApplicationName().getStringValue().trim();\n         } else if (earFile != null) {\n             applicationName = FileUtils.removeExtension(new File(earFile.getName()).getName(), \".ear\");\n@@ -469,6 +474,26 @@ private ApplicationInfo getEarPlan(File planFile, JarFile earFile, ModuleIDBuild\n                 annotatedApp);\n     }\n \n+    private ApplicationType createDefaultSpecPlan(Set<Module> modules) {\n+        ApplicationType application = ApplicationType.Factory.newInstance();\n+        for (Module module : modules) {\n+            ConfigurationModuleType configurationModuleType = module.getType();\n+            ModuleType moduleType = application.addNewModule();\n+            if (configurationModuleType.equals(ConfigurationModuleType.WAR)) {\n+                WebModule webModule = (WebModule) module;\n+                WebType web = moduleType.addNewWeb();\n+                web.addNewContextRoot().setStringValue(webModule.getContextRoot());\n+                web.addNewWebUri().setStringValue(webModule.getTargetPath());\n+            } else if (configurationModuleType.equals(ConfigurationModuleType.EJB)) {\n+                moduleType.addNewEjb().setStringValue(module.getTargetPath());\n+            } else if (configurationModuleType.equals(ConfigurationModuleType.RAR)) {\n+                moduleType.addNewConnector().setStringValue(module.getTargetPath());\n+            } else if (configurationModuleType.equals(ConfigurationModuleType.CAR)) {\n+                moduleType.addNewJava().setStringValue(module.getTargetPath());\n+            }\n+        }\n+        return application;\n+    }\n \n     private GerApplicationType createDefaultPlan(ApplicationType application, JarFile module) {\n         // construct the empty geronimo-application.xml"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/c9b4080edc550f9fc1111aae29d659f8f1d78bdb",
        "message": "GERONINMO-4680 slightly osgi-ify PersistenceUnitInfo, at least eliminating an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@935103 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_59",
        "file": [
            {
                "sha": "cbfdf8f2a714287f9229d2fb4d0e850d67ed61b7",
                "filename": "plugins/openjpa2/geronimo-persistence-jpa20-builder/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20-builder/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20-builder/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openjpa2/geronimo-persistence-jpa20-builder/pom.xml?ref=28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9",
                "patch": "@@ -47,6 +47,7 @@\n             <artifactId>geronimo-persistence-jpa20</artifactId>\n             <version>${version}</version>\n         </dependency>\n+        \n     </dependencies>\n \n </project>"
            },
            {
                "sha": "38673c3bcc454903af1ad28cee035c2fffebee1a",
                "filename": "plugins/openjpa2/geronimo-persistence-jpa20-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java",
                "status": "modified",
                "additions": 17,
                "deletions": 17,
                "changes": 34,
                "blob_url": "https://github.com/apache/geronimo/blob/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openjpa2/geronimo-persistence-jpa20-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java?ref=28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9",
                "patch": "@@ -228,23 +228,23 @@ protected PersistenceDocument convertToPersistenceDocument(XmlObject xmlObject)\n     }\n \n     protected PersistenceDocument.Persistence convertToPersistenceUnit(XmlObject xmlObject) throws XmlException {\n-        XmlCursor cursor = null;\n-        try {\n-            cursor = xmlObject.newCursor();\n-            cursor.toStartDoc();\n-            cursor.toFirstChild();\n-            SchemaConversionUtils.convertSchemaVersion(cursor, SchemaConversionUtils.JPA_PERSISTENCE_NAMESPACE, \"http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\", \"2.0\");\n+//        XmlCursor cursor = null;\n+//        try {\n+//            cursor = xmlObject.newCursor();\n+//            cursor.toStartDoc();\n+//            cursor.toFirstChild();\n+//            SchemaConversionUtils.convertSchemaVersion(cursor, SchemaConversionUtils.JPA_PERSISTENCE_NAMESPACE, \"http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\", \"2.0\");\n             XmlObject result = xmlObject.changeType(PersistenceDocument.Persistence.type);\n             XmlBeansUtil.validateDD(result);\n             return (PersistenceDocument.Persistence) result;\n-        } finally {\n-            if (cursor != null) {\n-                try {\n-                    cursor.dispose();\n-                } catch (Exception e) {\n-                }\n-            }\n-        }\n+//        } finally {\n+//            if (cursor != null) {\n+//                try {\n+//                    cursor.dispose();\n+//                } catch (Exception e) {\n+//                }\n+//            }\n+//        }\n     }\n \n     private void buildPersistenceUnits(PersistenceDocument.Persistence persistence, Map<String, PersistenceDocument.Persistence.PersistenceUnit> overrides, Module module, String persistenceModulePath) throws DeploymentException {\n@@ -267,12 +267,12 @@ private GBeanData installPersistenceUnitGBean(PersistenceDocument.Persistence.Pe\n         }\n         AbstractName abstractName;\n         if (persistenceModulePath == null || persistenceModulePath.length() == 0) {\n-            abstractName = moduleContext.getNaming().createChildName(module.getModuleName(), persistenceUnitName, PersistenceUnitGBean.GBEAN_INFO.getJ2eeType());\n+            abstractName = moduleContext.getNaming().createChildName(module.getModuleName(), persistenceUnitName, NameFactory.PERSISTENCE_UNIT);\n         } else {\n             abstractName = moduleContext.getNaming().createChildName(module.getModuleName(), persistenceModulePath, NameFactory.PERSISTENCE_UNIT_MODULE);\n-            abstractName = moduleContext.getNaming().createChildName(abstractName, moduleContext.getConfigID(), persistenceUnitName, PersistenceUnitGBean.GBEAN_INFO.getJ2eeType());\n+            abstractName = moduleContext.getNaming().createChildName(abstractName, moduleContext.getConfigID(), persistenceUnitName, NameFactory.PERSISTENCE_UNIT);\n         }\n-        GBeanData gbeanData = new GBeanData(abstractName, PersistenceUnitGBean.GBEAN_INFO);\n+        GBeanData gbeanData = new GBeanData(abstractName, PersistenceUnitGBean.class);\n         try {\n             moduleContext.addGBean(gbeanData);\n         } catch (GBeanAlreadyExistsException e) {"
            },
            {
                "sha": "8fa0760395e2e339f11b2391b104de40efd62ee8",
                "filename": "plugins/openjpa2/geronimo-persistence-jpa20/pom.xml",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/geronimo/blob/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openjpa2/geronimo-persistence-jpa20/pom.xml?ref=28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9",
                "patch": "@@ -91,6 +91,15 @@\n             <artifactId>jcl-over-slf4j</artifactId>\n             <scope>test</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>org.apache.geronimo.framework</groupId>\n+            <artifactId>geronimo-kernel</artifactId>\n+            <version>${version}</version>\n+            <classifier>tests</classifier>\n+            <scope>test</scope>\n+        </dependency>\n+\n     </dependencies>\n \n </project>"
            },
            {
                "sha": "fa429e020cdc90c8b0ff81d4b642f875cba489d1",
                "filename": "plugins/openjpa2/geronimo-persistence-jpa20/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java",
                "status": "modified",
                "additions": 65,
                "deletions": 108,
                "changes": 173,
                "blob_url": "https://github.com/apache/geronimo/blob/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openjpa2/geronimo-persistence-jpa20/src/main/java/org/apache/geronimo/persistence/PersistenceUnitGBean.java?ref=28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9",
                "patch": "@@ -17,44 +17,53 @@\n \n package org.apache.geronimo.persistence;\n \n-import java.io.File;\n import java.net.MalformedURLException;\n import java.net.URI;\n import java.net.URISyntaxException;\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n-import java.util.Collections;\n \n import javax.persistence.EntityManager;\n import javax.persistence.EntityManagerFactory;\n import javax.persistence.PersistenceException;\n+import javax.persistence.SharedCacheMode;\n+import javax.persistence.ValidationMode;\n import javax.persistence.spi.ClassTransformer;\n import javax.persistence.spi.PersistenceProvider;\n import javax.persistence.spi.PersistenceUnitInfo;\n import javax.persistence.spi.PersistenceUnitTransactionType;\n-import javax.persistence.SharedCacheMode;\n-import javax.persistence.ValidationMode;\n import javax.resource.ResourceException;\n import javax.sql.DataSource;\n-\n import org.apache.geronimo.gbean.GBeanInfo;\n import org.apache.geronimo.gbean.GBeanInfoBuilder;\n import org.apache.geronimo.gbean.GBeanLifecycle;\n import org.apache.geronimo.gbean.SingleElementCollection;\n-import org.apache.geronimo.naming.ResourceSource;\n+import org.apache.geronimo.gbean.annotation.GBean;\n+import org.apache.geronimo.gbean.annotation.ParamAttribute;\n+import org.apache.geronimo.gbean.annotation.ParamReference;\n+import org.apache.geronimo.gbean.annotation.ParamSpecial;\n+import org.apache.geronimo.gbean.annotation.SpecialAttributeType;\n import org.apache.geronimo.j2ee.j2eeobjectnames.NameFactory;\n import org.apache.geronimo.kernel.classloader.TemporaryClassLoader;\n+import org.apache.geronimo.naming.ResourceSource;\n import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n import org.apache.geronimo.transformer.TransformerAgent;\n+import org.osgi.framework.Bundle;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * @version $Rev$ $Date$\n  */\n+@GBean(j2eeType = NameFactory.PERSISTENCE_UNIT)\n public class PersistenceUnitGBean implements GBeanLifecycle {\n+    private static final Logger log = LoggerFactory.getLogger(PersistenceUnitGBean.class);\n+\n     private static final List<URL> NO_URLS = Collections.emptyList();\n     private static final List<String> NO_STRINGS = Collections.emptyList();\n     private final String persistenceUnitRoot;\n@@ -63,45 +72,39 @@\n     private final TransactionManagerImpl transactionManager;\n     private final SingleElementCollection<ExtendedEntityManagerRegistry> entityManagerRegistry;\n \n-\n-    public PersistenceUnitGBean() {\n-        persistenceUnitRoot = null;\n-        persistenceUnitInfo = null;\n-        entityManagerFactory = null;\n-        transactionManager = null;\n-        entityManagerRegistry = null;\n-    }\n-\n-    public PersistenceUnitGBean(String persistenceUnitName,\n-            String persistenceProviderClassName,\n-            String persistenceUnitTransactionTypeString,\n-            ResourceSource<ResourceException> jtaDataSourceWrapper,\n-            ResourceSource<ResourceException> nonJtaDataSourceWrapper,\n-            List<String> mappingFileNamesUntyped,\n-            List<String> jarFileUrlsUntyped,\n-            String persistenceUnitRoot,\n-            List<String> managedClassNames,\n-            boolean excludeUnlistedClassesValue,\n-            Properties properties,\n-            TransactionManagerImpl transactionManager,\n-            Collection<ExtendedEntityManagerRegistry > entityManagerRegistry,\n-            URL configurationBaseURL,\n-            String persistenceXMLSchemaVersion,\n-            SharedCacheMode sharedCacheMode,\n-            ValidationMode validationMode,\n-            ClassLoader classLoader) throws URISyntaxException, MalformedURLException, ResourceException {\n-        List<String> mappingFileNames = mappingFileNamesUntyped == null? NO_STRINGS: new ArrayList<String>(mappingFileNamesUntyped);\n+    public PersistenceUnitGBean(@ParamAttribute(name = \"persistenceUnitName\") String persistenceUnitName,\n+                                @ParamAttribute(name = \"persistenceProviderClassName\") String persistenceProviderClassName,\n+                                @ParamAttribute(name = \"persistenceUnitTransactionType\") String persistenceUnitTransactionTypeString,\n+                                @ParamReference(name = \"JtaDataSourceWrapper\", namingType = NameFactory.JCA_CONNECTION_FACTORY) ResourceSource<ResourceException> jtaDataSourceWrapper,\n+                                @ParamReference(name = \"NonJtaDataSourceWrapper\", namingType = NameFactory.JCA_CONNECTION_FACTORY) ResourceSource<ResourceException> nonJtaDataSourceWrapper,\n+                                @ParamAttribute(name = \"mappingFileNames\") List<String> mappingFileNamesUntyped,\n+                                @ParamAttribute(name = \"jarFileUrls\") List<String> jarFileUrlsUntyped,\n+                                @ParamAttribute(name = \"persistenceUnitRoot\") String persistenceUnitRoot,\n+                                @ParamAttribute(name = \"managedClassNames\") List<String> managedClassNames,\n+                                @ParamAttribute(name = \"excludeUnlistedClasses\") boolean excludeUnlistedClassesValue,\n+                                @ParamAttribute(name = \"properties\") Properties properties,\n+                                @ParamReference(name = \"TransactionManager\", namingType = NameFactory.JTA_RESOURCE) TransactionManagerImpl transactionManager,\n+                                @ParamReference(name = \"EntityManagerRegistry\", namingType = GBeanInfoBuilder.DEFAULT_J2EE_TYPE) Collection<ExtendedEntityManagerRegistry> entityManagerRegistry,\n+                                @ParamAttribute(name = \"persistenceXMLSchemaVersion\") String persistenceXMLSchemaVersion,\n+                                @ParamAttribute(name = \"sharedCacheMode\") SharedCacheMode sharedCacheMode,\n+                                @ParamAttribute(name = \"validationMode\") ValidationMode validationMode,\n+                                @ParamSpecial(type = SpecialAttributeType.bundle) Bundle bundle,\n+                                @ParamSpecial(type = SpecialAttributeType.classLoader) ClassLoader classLoader) throws URISyntaxException, MalformedURLException, ResourceException {\n+        List<String> mappingFileNames = mappingFileNamesUntyped == null ? NO_STRINGS : new ArrayList<String>(mappingFileNamesUntyped);\n         this.persistenceUnitRoot = persistenceUnitRoot;\n-        URI configurationBaseURI = new File(configurationBaseURL.getFile()).toURI();\n-        URL rootURL = configurationBaseURI.resolve(persistenceUnitRoot).normalize().toURL();\n+        URI rootUri = new URI(persistenceUnitRoot);\n+        URL rootURL = bundle.getResource(persistenceUnitRoot);\n         List<URL> jarFileUrls = NO_URLS;\n         if (!excludeUnlistedClassesValue) {\n             jarFileUrls = new ArrayList<URL>();\n             //Per the EJB3.0 Persistence Specification section 6.2, the jar-file should be related to the Persistence Unit Root, which is the jar or directory where the persistence.xml is found             \n-            URI persistenceUnitBaseURI = configurationBaseURI.resolve(persistenceUnitRoot);\n-            for (String urlString: jarFileUrlsUntyped) {\n-                URL url = persistenceUnitBaseURI.resolve(urlString).normalize().toURL();\n-                jarFileUrls.add(url);\n+            for (String urlString : jarFileUrlsUntyped) {\n+                URL url = bundle.getResource(rootUri.resolve(urlString).toString());\n+                if (url != null) {\n+                    jarFileUrls.add(url);\n+                } else {\n+                    log.warn(\"jar file {} not found in bundle: {}\", urlString, bundle.toString());\n+                }\n             }\n         }\n         if (managedClassNames == null) {\n@@ -110,15 +113,15 @@ public PersistenceUnitGBean(String persistenceUnitName,\n         if (properties == null) {\n             properties = new Properties();\n         }\n-        PersistenceUnitTransactionType persistenceUnitTransactionType = persistenceUnitTransactionTypeString == null? PersistenceUnitTransactionType.JTA: PersistenceUnitTransactionType.valueOf(persistenceUnitTransactionTypeString);\n+        PersistenceUnitTransactionType persistenceUnitTransactionType = persistenceUnitTransactionTypeString == null ? PersistenceUnitTransactionType.JTA : PersistenceUnitTransactionType.valueOf(persistenceUnitTransactionTypeString);\n \n         if (persistenceProviderClassName == null) persistenceProviderClassName = \"org.apache.openjpa.persistence.PersistenceProviderImpl\";\n-        \n+\n         persistenceUnitInfo = new PersistenceUnitInfoImpl(persistenceUnitName,\n                 persistenceProviderClassName,\n                 persistenceUnitTransactionType,\n-                jtaDataSourceWrapper == null? null: (DataSource)jtaDataSourceWrapper.$getResource(),\n-                nonJtaDataSourceWrapper == null? null: (DataSource)nonJtaDataSourceWrapper.$getResource(),\n+                jtaDataSourceWrapper == null ? null : (DataSource) jtaDataSourceWrapper.$getResource(),\n+                nonJtaDataSourceWrapper == null ? null : (DataSource) nonJtaDataSourceWrapper.$getResource(),\n                 mappingFileNames,\n                 jarFileUrls,\n                 rootURL,\n@@ -256,13 +259,22 @@ public void doFail() {\n         private final ValidationMode validationMode;\n \n \n-        public PersistenceUnitInfoImpl(String persistenceUnitName, String persistenceProviderClassName,\n-                PersistenceUnitTransactionType persistenceUnitTransactionType, DataSource jtaDataSource,\n-                DataSource nonJtaDataSource, List<String> mappingFileNames, List<URL> jarFileUrls,\n-                URL persistenceUnitRootUrl, List<String> managedClassNames, boolean excludeUnlistedClassesValue,\n-                Properties properties, String persistenceXMLSchemaVersion, SharedCacheMode sharedCacheMode,\n-                ValidationMode validationMode, ClassLoader classLoader) {\n-            \n+        public PersistenceUnitInfoImpl(String persistenceUnitName,\n+                                       String persistenceProviderClassName,\n+                                       PersistenceUnitTransactionType persistenceUnitTransactionType,\n+                                       DataSource jtaDataSource,\n+                                       DataSource nonJtaDataSource,\n+                                       List<String> mappingFileNames,\n+                                       List<URL> jarFileUrls,\n+                                       URL persistenceUnitRootUrl,\n+                                       List<String> managedClassNames,\n+                                       boolean excludeUnlistedClassesValue,\n+                                       Properties properties,\n+                                       String persistenceXMLSchemaVersion,\n+                                       SharedCacheMode sharedCacheMode,\n+                                       ValidationMode validationMode,\n+                                       ClassLoader classLoader) {\n+\n             this.persistenceUnitName = persistenceUnitName;\n             this.persistenceProviderClassName = persistenceProviderClassName;\n             this.persistenceUnitTransactionType = persistenceUnitTransactionType;\n@@ -280,10 +292,10 @@ public PersistenceUnitInfoImpl(String persistenceUnitName, String persistencePro\n \n             this.classLoader = classLoader;\n             this.transformers = new ArrayList<TransformerWrapper>();\n-            \n+\n             // This classloader can only be used during PersistenceProvider.createContainerEntityManagerFactory() calls\n             // Possible that it could be cleaned up sooner, but for now it's destroyed when the PUGBean is stopped\n-            this.tempClassLoader = new TemporaryClassLoader(classLoader); \n+            this.tempClassLoader = new TemporaryClassLoader(classLoader);\n         }\n \n         @Override\n@@ -384,59 +396,4 @@ public ValidationMode getValidationMode() {\n \n     }\n \n-    public static final GBeanInfo GBEAN_INFO;\n-\n-    static {\n-        GBeanInfoBuilder infoBuilder = GBeanInfoBuilder.createStatic(PersistenceUnitGBean.class, NameFactory.PERSISTENCE_UNIT);\n-        infoBuilder.setPriority(GBeanInfo.PRIORITY_CLASSLOADER);\n-\n-        infoBuilder.addAttribute(\"persistenceUnitName\", String.class, true, true);\n-        infoBuilder.addAttribute(\"persistenceProviderClassName\", String.class, true, true);\n-        infoBuilder.addAttribute(\"persistenceUnitTransactionType\", String.class, true, true);\n-        infoBuilder.addAttribute(\"mappingFileNames\", List.class, true, true);\n-        infoBuilder.addAttribute(\"jarFileUrls\", List.class, true, true);\n-        infoBuilder.addAttribute(\"persistenceUnitRoot\", String.class, true, true);\n-        infoBuilder.addAttribute(\"managedClassNames\", List.class, true, true);\n-        infoBuilder.addAttribute(\"excludeUnlistedClasses\", boolean.class, true, true);\n-        infoBuilder.addAttribute(\"properties\", Properties.class, true, true);\n-        infoBuilder.addAttribute(\"configurationBaseUrl\", URL.class, true);\n-\n-        infoBuilder.addAttribute(\"persistenceXMLSchemaVersion\", String.class, true, true);\n-        infoBuilder.addAttribute(\"sharedCacheMode\", SharedCacheMode.class, true, true);\n-        infoBuilder.addAttribute(\"validationMode\", ValidationMode.class, true, true);\n-\n-        infoBuilder.addReference(\"TransactionManager\", TransactionManagerImpl.class, NameFactory.JTA_RESOURCE);\n-        infoBuilder.addReference(\"JtaDataSourceWrapper\", ResourceSource.class, NameFactory.JCA_CONNECTION_FACTORY);\n-        infoBuilder.addReference(\"NonJtaDataSourceWrapper\", ResourceSource.class, NameFactory.JCA_CONNECTION_FACTORY);\n-        infoBuilder.addReference(\"EntityManagerRegistry\", ExtendedEntityManagerRegistry.class, GBeanInfoBuilder.DEFAULT_J2EE_TYPE);\n-\n-        infoBuilder.setConstructor(new String[] {\n-                \"persistenceUnitName\",\n-                \"persistenceProviderClassName\",\n-                \"persistenceUnitTransactionType\",\n-                \"JtaDataSourceWrapper\",\n-                \"NonJtaDataSourceWrapper\",\n-                \"mappingFileNames\",\n-                \"jarFileUrls\",\n-                \"persistenceUnitRoot\",\n-                \"managedClassNames\",\n-                \"excludeUnlistedClasses\",\n-                \"properties\",\n-                \"TransactionManager\",\n-                \"EntityManagerRegistry\",\n-                \"configurationBaseUrl\",\n-                \"persistenceXMLSchemaVersion\",\n-                \"sharedCacheMode\",\n-                \"validationMode\",\n-                \"classLoader\"\n-        });\n-\n-        GBEAN_INFO = infoBuilder.getBeanInfo();\n-\n-    }\n-\n-    public static GBeanInfo getGBeanInfo() {\n-        return GBEAN_INFO;\n-    }\n-\n }"
            },
            {
                "sha": "4e4443cf086725432fb93b449663976cbb3637e2",
                "filename": "plugins/openjpa2/geronimo-persistence-jpa20/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/apache/geronimo/blob/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9/plugins/openjpa2/geronimo-persistence-jpa20/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openjpa2/geronimo-persistence-jpa20/src/test/java/org/apache/geronimo/persistence/PersistenceUnitGBeanTest.java?ref=28e0bb4abbe4a5c72301c7fe2f180dcf54c9a6f9",
                "patch": "@@ -24,15 +24,16 @@\n import javax.persistence.ValidationMode;\n \n import junit.framework.TestCase;\n+import org.apache.geronimo.kernel.osgi.MockBundle;\n \n /**\n  * @version $Rev$ $Date$\n  */\n public class PersistenceUnitGBeanTest extends TestCase {\n \n-    public void testNoArgConstructor() throws Exception {\n-        new PersistenceUnitGBean();\n-    }\n+//    public void testNoArgConstructor() throws Exception {\n+//        new PersistenceUnitGBean();\n+//    }\n     \n     public void testNonNullJavaFileUrls() throws Exception {\n         PersistenceUnitGBean gbean = new PersistenceUnitGBean(\"foo\",\n@@ -42,21 +43,21 @@ public void testNonNullJavaFileUrls() throws Exception {\n                 null,\n                 null,\n                 null,\n-                \"/foo/bar/Root\",\n+                \"/\",\n                 null,\n                 true,\n                 null,\n                 null,\n                 null,\n-                new File(\"/foo/bar/Root\").toURL(),\n                 \"2.0\",\n                 SharedCacheMode.NONE,\n                 ValidationMode.AUTO,\n+                new MockBundle(getClass().getClassLoader(), \"\", 0L),\n                 getClass().getClassLoader());\n         assertNotNull(gbean.getManagedClassNames());\n         assertNotNull(gbean.getProperties());\n         assertNotNull(gbean.getJarFileUrls());\n-        assertNotNull(gbean.getPersistenceUnitRootUrl());\n+//        assertNotNull(gbean.getPersistenceUnitRootUrl());\n         assertNotNull(gbean.getPersistenceProviderClassName());\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/582abf1c5b2a2320a405f11a4dd532b80d6f8434",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/0d3b198d25bedc0ae9e25f09c68a2e2236623021",
        "message": "try to explain a couple mistakes better, and avoid an NPE when a non-bundle is encountered\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@883918 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_60",
        "file": [
            {
                "sha": "357ad105ac463073563cf6c79d348582bdac1829",
                "filename": "framework/buildsupport/geronimo-osgi-plugin/src/main/java/org/apache/geronimo/mavenplugins/osgi/utils/BundleResolver.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/582abf1c5b2a2320a405f11a4dd532b80d6f8434/framework/buildsupport/geronimo-osgi-plugin/src/main/java/org/apache/geronimo/mavenplugins/osgi/utils/BundleResolver.java",
                "raw_url": "https://github.com/apache/geronimo/raw/582abf1c5b2a2320a405f11a4dd532b80d6f8434/framework/buildsupport/geronimo-osgi-plugin/src/main/java/org/apache/geronimo/mavenplugins/osgi/utils/BundleResolver.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/buildsupport/geronimo-osgi-plugin/src/main/java/org/apache/geronimo/mavenplugins/osgi/utils/BundleResolver.java?ref=582abf1c5b2a2320a405f11a4dd532b80d6f8434",
                "patch": "@@ -300,6 +300,13 @@ private void analyzeErrors(BundleDescription bundle, Set<BundleDescription> bund\n                         if (b == bundle) {\n                             continue;\n                         }\n+                        if (b.getSymbolicName() == null) {\n+                            logError(b, level, \"No SymbolicName \" );\n+                            continue;\n+                        }\n+                        if (constraint.getName() == null) {\n+                            logError(bundle, level, \"no constraint name: \" + constraint);\n+                        }\n                         if (b.getSymbolicName().equals(constraint.getName())) {\n                             if (constraint.getVersionRange().isIncluded(b.getVersion())) {\n                                 // There must be something wrong in the bundle"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/2aaff961aca3874a2721f4d2782d287f9cea5ec3",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/8073fdadb46976ef326d44dea20a214dbdd36e41",
        "message": "GERONIMO-4480 Trying to view a graph in the Monitoring portlet results in a NPE.  Patch provided by Shawn Jiang (genspring).\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@731589 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_61",
        "file": [
            {
                "sha": "d4bd9ead03f500ec7725dc126ef2229cbef785ed",
                "filename": "plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/Constants.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/2aaff961aca3874a2721f4d2782d287f9cea5ec3/plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/Constants.java",
                "raw_url": "https://github.com/apache/geronimo/raw/2aaff961aca3874a2721f4d2782d287f9cea5ec3/plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/Constants.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/Constants.java?ref=2aaff961aca3874a2721f4d2782d287f9cea5ec3",
                "patch": "@@ -21,8 +21,8 @@\n package org.apache.geronimo.monitoring.console;\n \n /**\n- * @version $Rev:$ $Date:$\n+ * @version $Rev$ $Date$\n  */\n public interface Constants {\n-    static String DOJO_JS = \"/dojo/dojo/dojo/dojo.js\";\n+    static String DOJO_JS = \"/dojo/dojo/dojo.js\";\n }"
            },
            {
                "sha": "73be8b73756c94112e21a104353fb276cc152bd8",
                "filename": "plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/MonitoringPortlet.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/2aaff961aca3874a2721f4d2782d287f9cea5ec3/plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/MonitoringPortlet.java",
                "raw_url": "https://github.com/apache/geronimo/raw/2aaff961aca3874a2721f4d2782d287f9cea5ec3/plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/MonitoringPortlet.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/monitoring/mconsole-war/src/main/java/org/apache/geronimo/monitoring/console/MonitoringPortlet.java?ref=2aaff961aca3874a2721f4d2782d287f9cea5ec3",
                "patch": "@@ -297,6 +297,7 @@ public void doView(RenderRequest request, RenderResponse response)\n             pageView.include(request, response);\n         } else if (action.equals(\"showAllViews\")) {\n             request.setAttribute(\"message\", \"\");\n+            addAllViewsAttribute(request);\n             viewViews.include(request, response);\n         } else if (action.equals(\"showAllServers\")) {\n             request.setAttribute(\"message\", \"\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/60da02b2caed92213f149b59c1323783287da413",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/d229f270aa46467b645815fd41c66cc1c36c0e00",
        "message": "comment out the provided scope to resolve the daytrader build error NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@701153 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_62",
        "file": [
            {
                "sha": "d732876bfc34964efd9d2ee2fc3eda488eb498c5",
                "filename": "plugins/client/geronimo-client-builder/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/60da02b2caed92213f149b59c1323783287da413/plugins/client/geronimo-client-builder/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/60da02b2caed92213f149b59c1323783287da413/plugins/client/geronimo-client-builder/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/client/geronimo-client-builder/pom.xml?ref=60da02b2caed92213f149b59c1323783287da413",
                "patch": "@@ -43,7 +43,7 @@\n             <groupId>org.apache.geronimo.modules</groupId>\n             <artifactId>geronimo-connector-builder</artifactId>\n             <version>${version}</version>\n-            <scope>provided</scope>\n+            <!--<scope>provided</scope>-->\n         </dependency>\n \n         <dependency>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/7ad6c23197760c8972a0bbf5c83c65a52c943620",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/3d2dc841b74f7daad25f533736bed861a625651b",
        "message": "GERONIMO-3913 - NPE in org.apache.geronimo.security.SubjectId.hashCode() caused by incorrect JAVA_HOME or JRE_HOME.  Patch from Toby Cabot.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@643431 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_63",
        "file": [
            {
                "sha": "1466869b4e4cdc680501cfffeed206ed845db01b",
                "filename": "framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/ContextManager.java",
                "status": "modified",
                "additions": 15,
                "deletions": 15,
                "changes": 30,
                "blob_url": "https://github.com/apache/geronimo/blob/7ad6c23197760c8972a0bbf5c83c65a52c943620/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/ContextManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7ad6c23197760c8972a0bbf5c83c65a52c943620/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/ContextManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/ContextManager.java?ref=7ad6c23197760c8972a0bbf5c83c65a52c943620",
                "patch": "@@ -24,6 +24,7 @@\n import java.security.NoSuchAlgorithmException;\n import java.security.Principal;\n import java.security.PrivilegedAction;\n+import java.security.ProviderException;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.IdentityHashMap;\n@@ -260,8 +261,13 @@ public Object run() {\n             context.principal = principals.iterator().next();\n         }\n         Long id = nextSubjectId++;\n-        context.id = new SubjectId(id, hash(id));\n-\n+        try {\n+            context.id = new SubjectId(id, hash(id));\n+        } catch (NoSuchAlgorithmException e) {\n+            throw new ProviderException(\"No such algorithm: \" + algorithm + \".  This can be caused by a misconfigured java.ext.dirs, JAVA_HOME or JRE_HOME environment variable\");\n+        } catch (InvalidKeyException e) {\n+            throw new ProviderException(\"Invalid key: \" + key.toString());\n+        }\n         subjectIds.put(context.id, subject);\n         subjectContexts.put(subject, context);\n \n@@ -333,8 +339,10 @@ public static void setAlgorithm(String algorithm) {\n             mac.init(key);\n         } catch (NoSuchAlgorithmException e) {\n             assert false : \"Should never have reached here\";\n+            throw new ProviderException(\"No such algorithm: \" + algorithm + \".  This can be caused by a misconfigured java.ext.dirs, JAVA_HOME or JRE_HOME environment variable.\");\n         } catch (InvalidKeyException e) {\n             assert false : \"Should never have reached here\";\n+            throw new ProviderException(\"Invalid key: \" + key.toString());\n         }\n     }\n \n@@ -354,27 +362,19 @@ public static void setPassword(String password) {\n         key = new SecretKeySpec(password.getBytes(), algorithm);\n     }\n \n-    private static byte[] hash(Long id) {\n+    private static byte[] hash(Long id) throws NoSuchAlgorithmException, InvalidKeyException {\n         long n = id;\n         byte[] bytes = new byte[8];\n         for (int i = 7; i >= 0; i--) {\n             bytes[i] = (byte) (n);\n             n >>>= 8;\n         }\n \n-        try {\n-            Mac mac = Mac.getInstance(algorithm);\n-            mac.init(key);\n-            mac.update(bytes);\n+        Mac mac = Mac.getInstance(algorithm);\n+        mac.init(key);\n+        mac.update(bytes);\n \n-            return mac.doFinal();\n-        } catch (NoSuchAlgorithmException e) {\n-            //shouldn't happen\n-        } catch (InvalidKeyException e) {\n-            //shouldn't happen\n-        }\n-        assert false : \"Should never have reached here\";\n-        return null;\n+        return mac.doFinal();\n     }\n \n     private static class Context {"
            },
            {
                "sha": "9004545e94497d3bafd1f687afdd092e5ee67c59",
                "filename": "framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/SubjectId.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/7ad6c23197760c8972a0bbf5c83c65a52c943620/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/SubjectId.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7ad6c23197760c8972a0bbf5c83c65a52c943620/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/SubjectId.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-security/src/main/java/org/apache/geronimo/security/SubjectId.java?ref=7ad6c23197760c8972a0bbf5c83c65a52c943620",
                "patch": "@@ -30,6 +30,9 @@\n     private transient String name;\n \n     public SubjectId(Long subjectId, byte[] hash) {\n+        if (subjectId == null) throw new IllegalArgumentException(\"subjectId cannot be null\");\n+        if (hash == null) throw new IllegalArgumentException(\"hash cannot be null\");\n+\n         this.subjectId = subjectId;\n         this.hash = hash;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/a41b0d8a059421f30ebef96e3af83d20a67d846d",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/3dde2e160fdce526e20667ea0128c1ae1bde255d",
        "message": "GERONIMO-3866 return fabricated meta-data for plugin being exported and avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@631760 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_64",
        "file": [
            {
                "sha": "2103fa697f665a32d2bfb13b388720b824611659",
                "filename": "framework/modules/geronimo-plugin/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "status": "modified",
                "additions": 13,
                "deletions": 1,
                "changes": 14,
                "blob_url": "https://github.com/apache/geronimo/blob/a41b0d8a059421f30ebef96e3af83d20a67d846d/framework/modules/geronimo-plugin/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/a41b0d8a059421f30ebef96e3af83d20a67d846d/framework/modules/geronimo-plugin/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-plugin/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java?ref=a41b0d8a059421f30ebef96e3af83d20a67d846d",
                "patch": "@@ -420,7 +420,19 @@ public Map getInstalledPlugins() {\n      *                 The configId must be fully resolved (isResolved() == true)\n      */\n     public PluginType getPluginMetadata(Artifact moduleId) {\n-        return localSourceRepository.extractPluginMetadata(moduleId);\n+        PluginType type = localSourceRepository.extractPluginMetadata(moduleId);\n+        if (null == type) {\n+            try {\n+                type = createDefaultMetadata(moduleId);\n+            } catch (InvalidConfigException e) {\n+                e.printStackTrace();\n+                log.warn(\"Unable to generate metadata for \" + moduleId, e);\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+                log.warn(\"Error generating metadata for \" + moduleId, e);\n+            }\n+        }\n+        return type;\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/c3a2bb5bd58f7ab6c6523f841cb1833697272645",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/abde11c0547370f87012c536d47b9c0c18f0bd81",
        "message": "GERONIMO-3808 fix npe on shutdown.  Not convinced this is compatible with resource bindings\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@619712 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_65",
        "file": [
            {
                "sha": "938518c790644cb4db1e60fa58b2548e547cd8fe",
                "filename": "framework/configs/rmi-naming/src/main/plan/plan.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/c3a2bb5bd58f7ab6c6523f841cb1833697272645/framework/configs/rmi-naming/src/main/plan/plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/c3a2bb5bd58f7ab6c6523f841cb1833697272645/framework/configs/rmi-naming/src/main/plan/plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/configs/rmi-naming/src/main/plan/plan.xml?ref=c3a2bb5bd58f7ab6c6523f841cb1833697272645",
                "patch": "@@ -32,9 +32,7 @@\n \n     <gbean name=\"GlobalContext\" class=\"org.apache.geronimo.gjndi.GlobalContextGBean\"/>\n \n-    <gbean name=\"JavaCompContext\" class=\"org.apache.geronimo.gjndi.JavaCompContextGBean\">\n-        <dependency><name>GlobalContext</name></dependency>\n-    </gbean>\n+    <gbean name=\"JavaCompContext\" class=\"org.apache.geronimo.gjndi.JavaCompContextGBean\"/>\n \n     <gbean name=\"JavaContext\" class=\"org.apache.geronimo.gjndi.WritableContextGBean\">\n         <attribute name=\"nameInNamespace\">java:</attribute>"
            },
            {
                "sha": "d4eaa7dba3d9a6eb71daf7ae8e8d31c6ccfb9b18",
                "filename": "framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/KernelContextGBean.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/c3a2bb5bd58f7ab6c6523f841cb1833697272645/framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/KernelContextGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/c3a2bb5bd58f7ab6c6523f841cb1833697272645/framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/KernelContextGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/KernelContextGBean.java?ref=c3a2bb5bd58f7ab6c6523f841cb1833697272645",
                "patch": "@@ -203,7 +203,7 @@ protected synchronized void removeBinding(AbstractName abstractName) {\n                 } else {\n                     bindingsByName.remove(name);\n                     try {\n-                        removeDeepBinding(name, true);\n+                        removeDeepBinding(name, true, true);\n                     } catch (ContextNotEmptyException e) {\n                         //ignore\n                     } catch (NamingException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/396e54b0b816598167ce8f7af878865d19353986",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/913e1c3e9bb14b381b87b28b65303ed7c09fbab0",
        "message": "GERONIMO-3744 fix NPE when using long option names in OpenEjbRemoteLoginModule\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@616098 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_66",
        "file": [
            {
                "sha": "f520f3e08c76b270d718561c975a2010f254c942",
                "filename": "plugins/openejb/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenejbRemoteLoginModule.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/geronimo/blob/396e54b0b816598167ce8f7af878865d19353986/plugins/openejb/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenejbRemoteLoginModule.java",
                "raw_url": "https://github.com/apache/geronimo/raw/396e54b0b816598167ce8f7af878865d19353986/plugins/openejb/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenejbRemoteLoginModule.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/openejb/geronimo-openejb/src/main/java/org/apache/geronimo/openejb/OpenejbRemoteLoginModule.java?ref=396e54b0b816598167ce8f7af878865d19353986",
                "patch": "@@ -85,10 +85,15 @@ public void initialize(Subject subject, CallbackHandler callbackHandler, Map<Str\n         if (securityRealm == null) {\n             securityRealm = (String) options.get(SECURITY_REALM_KEY_LONG);\n         }\n-        serverURI = URI.create((String) options.get(SERVER_URI_KEY));\n-        if (serverURI == null) {\n+\n+        String serverURIshort = (String) options.get(SERVER_URI_KEY);\n+        if (serverURIshort == null) {\n             serverURI = URI.create((String) options.get(SERVER_URI_KEY_LONG));\n         }\n+        else {\n+            serverURI = URI.create((String) options.get(SERVER_URI_KEY));\n+        }\n+\n     }\n \n     public boolean login() throws LoginException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/9e33dc136365e59efacc89142e2305baa5cc56d7",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/904e7f103425aa14628d1784a69591427b305313",
        "message": "Throws NPE when the id does not exist.  Supposed to return null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@582984 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_67",
        "file": [
            {
                "sha": "b41f38efcbad1585db96dc8943cc974053cd2ea5",
                "filename": "modules/geronimo-security/src/main/java/org/apache/geronimo/security/ca/FileCertificateRequestStore.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/9e33dc136365e59efacc89142e2305baa5cc56d7/modules/geronimo-security/src/main/java/org/apache/geronimo/security/ca/FileCertificateRequestStore.java",
                "raw_url": "https://github.com/apache/geronimo/raw/9e33dc136365e59efacc89142e2305baa5cc56d7/modules/geronimo-security/src/main/java/org/apache/geronimo/security/ca/FileCertificateRequestStore.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-security/src/main/java/org/apache/geronimo/security/ca/FileCertificateRequestStore.java?ref=9e33dc136365e59efacc89142e2305baa5cc56d7",
                "patch": "@@ -223,6 +223,10 @@ public String storeRequest(String id, String csr) {\n      */\n     public BigInteger getSerialNumberForRequest(String id) {\n         BigInteger sNo = null;\n+        if(requestStatus.getProperty(id) == null) {\n+            // No such request\n+            return null;\n+        }\n         try {\n             sNo = new BigInteger(requestStatus.getProperty(id));\n         } catch(NumberFormatException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/47f2b5a4b17f72286a492b82d756942a36603ee8",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/d099146d65e95bdb444e966559f6a433d2485a3d",
        "message": "GERONIMO-3514 Merge from branches/2.0. Avoid NPE when RA GBean does not hava a messageListenerToActivationSpecMap\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@582667 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_68",
        "file": [
            {
                "sha": "180eac96c588b0ec09b542963005107959c32d15",
                "filename": "modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbModuleBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/47f2b5a4b17f72286a492b82d756942a36603ee8/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbModuleBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/47f2b5a4b17f72286a492b82d756942a36603ee8/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbModuleBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbModuleBuilder.java?ref=47f2b5a4b17f72286a492b82d756942a36603ee8",
                "patch": "@@ -631,6 +631,9 @@ private void addResourceAdapterMDBInfos(Configuration configuration, ContainerSy\n         for (GBeanData resourceAdapterWrapperData : resourceAdapterWrappers) {\n             String resourceAdapterId = getResourceAdapterId(resourceAdapterWrapperData.getAbstractName());\n             Map<String, String> messageListenerToActivationSpecMap = (Map<String, String>) resourceAdapterWrapperData.getAttribute(\"messageListenerToActivationSpecMap\");\n+            if (messageListenerToActivationSpecMap == null) {\n+                continue;\n+            }\n             for (Map.Entry<String, String> entry : messageListenerToActivationSpecMap.entrySet()) {\n                 String messageListenerInterface = entry.getKey();\n                 String activationSpecClass = entry.getValue();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/b1cc7d9263428c0076ab83e88397105ad8ad5be6",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/f98b16a70dcdb5c04c412cde8195b747e0e5667f",
        "message": "GERONIMO-3437 - Axis2:  serviceimplClass being null caused NPE at invoke in JavaBeanDispatcher \n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@569121 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_69",
        "file": [
            {
                "sha": "93b1820a55b58804e44d6112e79a71fb8169944b",
                "filename": "modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBEndpointController.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/b1cc7d9263428c0076ab83e88397105ad8ad5be6/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBEndpointController.java",
                "raw_url": "https://github.com/apache/geronimo/raw/b1cc7d9263428c0076ab83e88397105ad8ad5be6/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBEndpointController.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBEndpointController.java?ref=b1cc7d9263428c0076ab83e88397105ad8ad5be6",
                "patch": "@@ -38,7 +38,7 @@ protected EndpointDispatcher getEndpointDispatcher(Class serviceImplClass, Objec\n         if (Provider.class.isAssignableFrom(serviceImplClass)) {\n             return new EJBProviderDispatcher(serviceImplClass, this.invContext);\n         } else {\n-            return new EJBServiceDispatcher(this.invContext);\n+            return new EJBServiceDispatcher(serviceImplClass, this.invContext);\n         }\n     }\n "
            },
            {
                "sha": "89c22395cf1c1708855f5de16c02edd0fb3d25f4",
                "filename": "modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBServiceDispatcher.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/b1cc7d9263428c0076ab83e88397105ad8ad5be6/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBServiceDispatcher.java",
                "raw_url": "https://github.com/apache/geronimo/raw/b1cc7d9263428c0076ab83e88397105ad8ad5be6/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBServiceDispatcher.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/ejb/EJBServiceDispatcher.java?ref=b1cc7d9263428c0076ab83e88397105ad8ad5be6",
                "patch": "@@ -29,8 +29,8 @@\n \n     private InvocationContext invContext;\n \n-    public EJBServiceDispatcher(InvocationContext invContext) {\n-        super(null, null); \n+    public EJBServiceDispatcher(Class serviceImplClass, InvocationContext invContext) {\n+        super(serviceImplClass, null); \n         this.invContext = invContext;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/67a9c37ad821c6b8043c05883630b3e2a7db968e",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/18b4cd6a727708ae002ddbc32a0ef71f27bbb28e",
        "message": "GERONIMO-3226 NPE when attempting to export an EJB without a home or remote interface via CORBA.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@545246 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_70",
        "file": [
            {
                "sha": "0504aa3b7b3b6a056125956fb953bf00a2926909",
                "filename": "modules/geronimo-corba/src/main/java/org/apache/geronimo/corba/StandardServant.java",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/67a9c37ad821c6b8043c05883630b3e2a7db968e/modules/geronimo-corba/src/main/java/org/apache/geronimo/corba/StandardServant.java",
                "raw_url": "https://github.com/apache/geronimo/raw/67a9c37ad821c6b8043c05883630b3e2a7db968e/modules/geronimo-corba/src/main/java/org/apache/geronimo/corba/StandardServant.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-corba/src/main/java/org/apache/geronimo/corba/StandardServant.java?ref=67a9c37ad821c6b8043c05883630b3e2a7db968e",
                "patch": "@@ -100,8 +100,14 @@ public StandardServant(ORB orb, InterfaceType ejbInterfaceType, EjbDeployment ej\n         Class type;\n         if (InterfaceType.EJB_HOME == ejbInterfaceType) {\n             type = ejbDeployment.getHomeInterface();\n+            if (type == null) {\n+                throw new IllegalArgumentException(\"EJB \" + ejbDeployment.getEjbName() + \" does not have a home interface\");\n+            }\n         } else if (InterfaceType.EJB_OBJECT == ejbInterfaceType) {\n             type = ejbDeployment.getRemoteInterface();\n+            if (type == null) {\n+                throw new IllegalArgumentException(\"EJB \" + ejbDeployment.getEjbName() + \" does not have a remote interface\");\n+            }\n         } else {\n             throw new IllegalArgumentException(\"Only home and remote interfaces are supported in this servant: \" + ejbInterfaceType);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/4cba7c6624e70004fe30ed2b185fc17c2fbdaefe",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/219f21255817eae4ec813bc88c4e9ff0c016ded0",
        "message": "GERONIMO-2605 NPE if exporting plugin for module having dependency on module with no groupId\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@545163 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_71",
        "file": [
            {
                "sha": "0575896d78fda7a2ab25431d8ee24657fb0d4110",
                "filename": "modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/4cba7c6624e70004fe30ed2b185fc17c2fbdaefe/modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/4cba7c6624e70004fe30ed2b185fc17c2fbdaefe/modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java?ref=4cba7c6624e70004fe30ed2b185fc17c2fbdaefe",
                "patch": "@@ -1566,7 +1566,7 @@ private static String getText(Node target) {\n     private PluginMetadata.Prerequisite processDependencyList(List real, PluginMetadata.Prerequisite prereq, List deps) {\n         for (int i = 0; i < real.size(); i++) {\n             Dependency dep = (Dependency) real.get(i);\n-            if(dep.getArtifact().getGroupId().equals(\"geronimo\")) {\n+            if ((dep.getArtifact().getGroupId() != null) && (dep.getArtifact().getGroupId().equals(\"geronimo\"))) {\n                 if(dep.getArtifact().getArtifactId().indexOf(\"jetty\") > -1) {\n                     if(prereq == null) {\n                         prereq = new PluginMetadata.Prerequisite(dep.getArtifact(), true, \"Web Container\", \"This plugin works with the Geronimo/Jetty distribution.  It is not intended to run in the Geronimo/Tomcat distribution.  There is a separate version of this plugin that works with Tomcat.\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/219f21255817eae4ec813bc88c4e9ff0c016ded0",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/20e538ffc4759a26a630ffb31b8c8eaea22b5876",
        "message": "added generateServiceFromClass method (right now disabled as it generated NPE when get wsdl is called (bug in axis2))\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@544948 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_72",
        "file": [
            {
                "sha": "ee204ab2e5932310490c2b8f7a6af5e56191c2bb",
                "filename": "modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java",
                "status": "modified",
                "additions": 17,
                "deletions": 12,
                "changes": 29,
                "blob_url": "https://github.com/apache/geronimo/blob/219f21255817eae4ec813bc88c4e9ff0c016ded0/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/219f21255817eae4ec813bc88c4e9ff0c016ded0/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/Axis2WebServiceContainer.java?ref=219f21255817eae4ec813bc88c4e9ff0c016ded0",
                "patch": "@@ -97,23 +97,28 @@ public void init() {\n         try {\n             this.endpointClass = classLoader.loadClass(this.endpointClassName);\n             configurationContext = ConfigurationContextFactory.createDefaultConfigurationContext();\n-            \n-            //check to see if the wsdlLocation property is set in portInfo, \n-            //if not checking if wsdlLocation exists in annotation\n-            //if already set, annotation should not overwrite it.\n-            if (portInfo.getWsdlFile() == null || portInfo.getWsdlFile().equals(\"\")){\n-                //getwsdllocation from annotation if it exists\n+\n+            // check to see if the wsdlLocation property is set in portInfo,\n+            // if not checking if wsdlLocation exists in annotation\n+            // if already set, annotation should not overwrite it.\n+            if (portInfo.getWsdlFile() == null || portInfo.getWsdlFile().equals(\"\")) {\n+                // getwsdllocation from annotation if it exists\n                 if (JAXWSUtils.containsWsdlLocation(this.endpointClass, classLoader)) {\n                     portInfo.setWsdlFile(JAXWSUtils.getServiceWsdlLocation(this.endpointClass, classLoader));\n                 }\n             }\n \n-            if(portInfo.getWsdlFile() != null && !portInfo.getWsdlFile().equals(\"\")){ //WSDL file Has been provided\n-                AxisServiceGenerator serviceGen = createServiceGenerator();\n+            AxisServiceGenerator serviceGen = createServiceGenerator();            \n+            if (portInfo.getWsdlFile() != null && !portInfo.getWsdlFile().equals(\"\")) { \n+                // WSDL file has been provided \n                 service = serviceGen.getServiceFromWSDL(portInfo, endpointClass, configurationBaseUrl);\n-                                            \n-            }else { //No WSDL, Axis2 will handle it. Is it ?\n-                service = AxisService.createService(endpointClassName, configurationContext.getAxisConfiguration(), JAXWSMessageReceiver.class);\n+            } else {\n+                // No WSDL, let Axis2 handle it.\n+                \n+                // FIXME: AxisServiceGenerator method should be used as it understands annotations\n+                // but right now that method causes some problems when WSDL is requested.\n+                service = AxisService.createService(endpointClassName, configurationContext.getAxisConfiguration(), JAXWSMessageReceiver.class);                \n+                // service = serviceGen.getServiceFromClass(this.endpointClass);\n             }\n \n             service.setScope(Constants.SCOPE_APPLICATION);\n@@ -124,7 +129,7 @@ public void init() {\n         } catch (Exception e) {\n             throw new RuntimeException(e);\n         }\n-        \n+\n         this.wsdlQueryHandler = new WSDLQueryHandler(this.service);\n     }  \n "
            },
            {
                "sha": "1ce0f507adca4c2560f4865fa85afdbb07f5d608",
                "filename": "modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java",
                "status": "modified",
                "additions": 22,
                "deletions": 1,
                "changes": 23,
                "blob_url": "https://github.com/apache/geronimo/blob/219f21255817eae4ec813bc88c4e9ff0c016ded0/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java",
                "raw_url": "https://github.com/apache/geronimo/raw/219f21255817eae4ec813bc88c4e9ff0c016ded0/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java?ref=219f21255817eae4ec813bc88c4e9ff0c016ded0",
                "patch": "@@ -24,7 +24,6 @@\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n \n import javax.wsdl.Binding;\n import javax.wsdl.Definition;\n@@ -45,6 +44,7 @@\n import org.apache.axis2.description.Parameter;\n import org.apache.axis2.description.WSDL11ToAxisServiceBuilder;\n import org.apache.axis2.description.WSDLToAxisServiceBuilder;\n+import org.apache.axis2.description.java2wsdl.Java2WSDLConstants;\n import org.apache.axis2.engine.MessageReceiver;\n import org.apache.axis2.jaxws.description.DescriptionFactory;\n import org.apache.axis2.jaxws.description.EndpointDescription;\n@@ -65,6 +65,7 @@\n import org.apache.geronimo.axis2.util.SimpleWSDLLocator;\n import org.apache.geronimo.jaxws.JAXWSUtils;\n import org.apache.geronimo.jaxws.PortInfo;\n+import org.apache.ws.commons.schema.utils.NamespaceMap;\n \n //TODO: Handle RPC Style Messaging\n \n@@ -86,6 +87,26 @@ public void setMessageReceiver(MessageReceiver messageReceiver) {\n         this.messageReceiver = messageReceiver;\n     }\n    \n+    public AxisService getServiceFromClass(Class endpointClass) throws Exception {\n+        AxisService service = DescriptionFactory.createAxisService(endpointClass);\n+        \n+        for(Iterator<AxisOperation> opIterator = service.getOperations() ; opIterator.hasNext() ;){\n+            AxisOperation operation = opIterator.next();\n+            operation.setMessageReceiver(this.messageReceiver);\n+        }\n+        \n+        if (service.getNameSpacesMap() == null) {\n+            NamespaceMap map = new NamespaceMap();\n+            map.put(Java2WSDLConstants.AXIS2_NAMESPACE_PREFIX,\n+                    Java2WSDLConstants.AXIS2_XSD);\n+            map.put(Java2WSDLConstants.DEFAULT_SCHEMA_NAMESPACE_PREFIX,\n+                    Java2WSDLConstants.URI_2001_SCHEMA_XSD);\n+            service.setNameSpacesMap(map);\n+        }\n+        \n+        return service;\n+    }\n+    \n     public AxisService getServiceFromWSDL(PortInfo portInfo, Class endpointClass, URL configurationBaseUrl) throws Exception {\n         String wsdlFile = portInfo.getWsdlFile();\n         if (wsdlFile == null || wsdlFile.equals(\"\")) {"
            },
            {
                "sha": "d68f7b1b28a46a9c4744f7df2a065ea81f80ed0e",
                "filename": "modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/GeronimoHandlerChainBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/219f21255817eae4ec813bc88c4e9ff0c016ded0/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/GeronimoHandlerChainBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/219f21255817eae4ec813bc88c4e9ff0c016ded0/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/GeronimoHandlerChainBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/GeronimoHandlerChainBuilder.java?ref=219f21255817eae4ec813bc88c4e9ff0c016ded0",
                "patch": "@@ -53,7 +53,7 @@ public ClassLoader getHandlerClassLoader() {\n                 && matchBinding(portInfo, hc.getProtocolBindings())) {\n             return super.buildHandlerChain(hc, classLoader);\n         } else {\n-            return Collections.EMPTY_LIST;\n+            return Collections.emptyList();\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/3f9fca62bf92edf81f695186d92f62e1143f499c",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/317cda1fb9c85b283b58359366ff0e2eabf21787",
        "message": "Fix for GERONIMO-3085 - Axis2: Response Wrapper class isn't set correctly which caused a NPE in Axis2\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@527272 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_73",
        "file": [
            {
                "sha": "8d42ae837a595cf1972434bca2659abeca35eac1",
                "filename": "modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java",
                "status": "modified",
                "additions": 9,
                "deletions": 13,
                "changes": 22,
                "blob_url": "https://github.com/apache/geronimo/blob/3f9fca62bf92edf81f695186d92f62e1143f499c/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java",
                "raw_url": "https://github.com/apache/geronimo/raw/3f9fca62bf92edf81f695186d92f62e1143f499c/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-axis2/src/main/java/org/apache/geronimo/axis2/AxisServiceGenerator.java?ref=3f9fca62bf92edf81f695186d92f62e1143f499c",
                "patch": "@@ -287,6 +287,7 @@ private void fillDocOperationInfo(Method method, AxisOperation operation, Descri\n \n                     ResponseWrapperAnnot responseWrap = ResponseWrapperAnnot.createResponseWrapperAnnotImpl();\n                     responseWrap.setClassName(getWrapperClassName(outAxisMessage.getElementQName()));\n+                    responseWrap.setTargetNamespace(outAxisMessage.getElementQName().getNamespaceURI());\n                     mdc.setResponseWrapperAnnot(responseWrap);\n                 } \n             }\n@@ -304,6 +305,7 @@ private void fillDocOperationInfo(Method method, AxisOperation operation, Descri\n     }\n     \n     //TODO: Has to verify how JAXB default class wrapper class generation logic\n+    //Note that this only works when the package name is based on the domain name of the namespace.\n     private String getWrapperClassName(QName element) throws Exception {\n         String localPart = element.getLocalPart();\n         String nameSpace = element.getNamespaceURI();\n@@ -312,21 +314,15 @@ private String getWrapperClassName(QName element) throws Exception {\n         \n         String host = nameSpaceURI.getHost();\n         String path = nameSpaceURI.getPath();\n+        String[] hostParts = host.split(\"\\\\.\");\n         String[] pathParts = path.split(\"/\");\n-        int index = 0;\n-        \n-        while(index < host.length()){\n-            if(host.charAt(index) == '.'){\n-                break;\n-            }\n-            index ++;\n-        }\n-        \n         String packageName = \"\";\n-        if(pathParts.length == 1){ \n-        \tpackageName = host.substring(index+1, host.length())+\".\"+host.substring(0, index);\n-        }else {\n-        \tpackageName = host;\n+        \n+        for (int i = hostParts.length - 1; i > -1; i--) {\n+            if (i == 0)\n+                packageName += hostParts[i];\n+            else \n+                packageName += hostParts[i] + \".\";\n         }\n         \n         for(String pathPart : pathParts){"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/ecba2a9a04f7da4ac55622ce323b115614569aba",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/bbf4bf751f16f795d513cd9576e942234c072657",
        "message": "GERONIMO-3018 avoid NPE when transactiontype is not specified.  I defaulted to JTA but didn't check if that is correct\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@521982 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_74",
        "file": [
            {
                "sha": "2b574c45f68c208a49a88c2f1f6aed624d498ee4",
                "filename": "modules/geronimo-persistence-jpa10-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/ecba2a9a04f7da4ac55622ce323b115614569aba/modules/geronimo-persistence-jpa10-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ecba2a9a04f7da4ac55622ce323b115614569aba/modules/geronimo-persistence-jpa10-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-persistence-jpa10-builder/src/main/java/org/apache/geronimo/persistence/builder/PersistenceUnitBuilder.java?ref=ecba2a9a04f7da4ac55622ce323b115614569aba",
                "patch": "@@ -139,7 +139,12 @@ private void installPersistenceUnitGBean(PersistenceDocument.Persistence.Persist\n         } else {\n             gbeanData.setAttribute(\"persistenceProviderClassName\", defaultPersistenceProviderClassName);\n         }\n-        gbeanData.setAttribute(\"persistenceUnitTransactionType\", persistenceUnit.getTransactionType().toString());\n+        if (persistenceUnit.isSetTransactionType()) {\n+            gbeanData.setAttribute(\"persistenceUnitTransactionType\", persistenceUnit.getTransactionType().toString());\n+        } else {\n+            //TODO verify that the default is supposed to be JTA\n+            gbeanData.setAttribute(\"persistenceUnitTransactionType\", \"JTA\");\n+        }\n         if (persistenceUnit.isSetJtaDataSource()) {\n             String jtaDataSourceString = persistenceUnit.getJtaDataSource().trim();\n             if (jtaDataSourceString.indexOf('=') == -1) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/452cd127715598557e7a7b8764d6e4b2997d6be2",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/68ff3c6f7ef71263cff6cf35de23f24f5ddcd5f5",
        "message": "Fix potential NPE in ConnectorModuleBuilder. Need to guard against potentially non-existent elements...\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@518034 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_75",
        "file": [
            {
                "sha": "3ffca88e472c47edf9a3bc3c1f77d0fccf197302",
                "filename": "modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "blob_url": "https://github.com/apache/geronimo/blob/452cd127715598557e7a7b8764d6e4b2997d6be2/modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/452cd127715598557e7a7b8764d6e4b2997d6be2/modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-connector-builder/src/main/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java?ref=452cd127715598557e7a7b8764d6e4b2997d6be2",
                "patch": "@@ -421,12 +421,14 @@ TODO include admin objects (n) from JCAResource presumably\n \n             // Add map from messageListenerInterface to activationSpec class\n             Map<String,String> messageListenerToActivationSpecMap = new TreeMap<String,String>();\n-            for (MessagelistenerType messagelistenerType : resourceadapter.getInboundResourceadapter().getMessageadapter().getMessagelistenerArray()) {\n-                String messageListenerInterface = messagelistenerType.getMessagelistenerType().getStringValue().trim();\n-                ActivationspecType activationspec = messagelistenerType.getActivationspec();\n-                String activationSpecClassName = activationspec.getActivationspecClass().getStringValue().trim();\n-                messageListenerToActivationSpecMap.put(messageListenerInterface, activationSpecClassName);\n-                resourceAdapterGBeanData.setAttribute(\"messageListenerToActivationSpecMap\", messageListenerToActivationSpecMap);\n+            if (resourceadapter.isSetInboundResourceadapter() && resourceadapter.getInboundResourceadapter().isSetMessageadapter()) {\n+                for (MessagelistenerType messagelistenerType : resourceadapter.getInboundResourceadapter().getMessageadapter().getMessagelistenerArray()) {\n+                    String messageListenerInterface = messagelistenerType.getMessagelistenerType().getStringValue().trim();\n+                    ActivationspecType activationspec = messagelistenerType.getActivationspec();\n+                    String activationSpecClassName = activationspec.getActivationspecClass().getStringValue().trim();\n+                    messageListenerToActivationSpecMap.put(messageListenerInterface, activationSpecClassName);\n+                    resourceAdapterGBeanData.setAttribute(\"messageListenerToActivationSpecMap\", messageListenerToActivationSpecMap);\n+                }\n             }\n \n             resourceAdapterModuleData.setAttribute(\"resourceAdapterGBeanData\", resourceAdapterGBeanData);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/9115641990cebcb3498c8ec1de58d1863121cf79",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/994ffbb71fabf359f53ffe2ad79f5df4b4db9c28",
        "message": "GERONIMO-2893 implement AnnotatedEjbJar methods.  Undo NPE guard, no longer needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@516815 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_76",
        "file": [
            {
                "sha": "f5d8b634a882ff36a91794f1c9d3afe4b635afa0",
                "filename": "modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/AnnotatedEjbJar.java",
                "status": "modified",
                "additions": 367,
                "deletions": 41,
                "changes": 408,
                "blob_url": "https://github.com/apache/geronimo/blob/9115641990cebcb3498c8ec1de58d1863121cf79/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/AnnotatedEjbJar.java",
                "raw_url": "https://github.com/apache/geronimo/raw/9115641990cebcb3498c8ec1de58d1863121cf79/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/AnnotatedEjbJar.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/AnnotatedEjbJar.java?ref=9115641990cebcb3498c8ec1de58d1863121cf79",
                "patch": "@@ -20,17 +20,20 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n+import org.apache.geronimo.common.DeploymentException;\n import org.apache.geronimo.xbeans.javaee.EjbJarType;\n import org.apache.geronimo.xbeans.javaee.EjbLocalRefType;\n import org.apache.geronimo.xbeans.javaee.EjbRefType;\n+import org.apache.geronimo.xbeans.javaee.EntityBeanType;\n import org.apache.geronimo.xbeans.javaee.EnvEntryType;\n+import org.apache.geronimo.xbeans.javaee.LifecycleCallbackType;\n import org.apache.geronimo.xbeans.javaee.MessageDestinationRefType;\n+import org.apache.geronimo.xbeans.javaee.MessageDrivenBeanType;\n import org.apache.geronimo.xbeans.javaee.ResourceEnvRefType;\n import org.apache.geronimo.xbeans.javaee.ResourceRefType;\n import org.apache.geronimo.xbeans.javaee.ServiceRefType;\n-import org.apache.geronimo.xbeans.javaee.LifecycleCallbackType;\n+import org.apache.geronimo.xbeans.javaee.SessionBeanType;\n+import org.apache.xmlbeans.XmlObject;\n \n /**\n  * Wrapper class to encapsulate the EjbJarType class with an interface that the various\n@@ -46,82 +49,104 @@\n  */\n public class AnnotatedEjbJar implements AnnotatedApp {\n \n-    // Private instance variables\n-    private static final Log log = LogFactory.getLog(AnnotatedEjbJar.class);\n-    private EjbJarType ejbJar;\n+    private final EjbJarType ejbJar;\n     private List<EjbRefType> ambiguousEjbRefs;\n+    private AnnotatedApp delegate;\n+\n \n-    /**\n-     * EjbJarType-qualified constructor\n-     *\n-     * @param ejbJar EjbJarType\n-     */\n     public AnnotatedEjbJar(EjbJarType ejbJar) {\n         this.ejbJar = ejbJar;\n     }\n \n+    public void setBean(XmlObject bean) throws DeploymentException {\n+        if (bean instanceof EntityBeanType) {\n+            delegate = new EntityBean((EntityBeanType) bean);\n+        } else if (bean instanceof MessageDrivenBeanType) {\n+            delegate = new MessageDriveBean((MessageDrivenBeanType) bean);\n+        } else if (bean instanceof SessionBeanType) {\n+            delegate = new SessionBean((SessionBeanType) bean);\n+        } else {\n+            throw new DeploymentException(\"Unrecognized XmlBeans object: \" + bean);\n+        }\n+    }\n \n     /**\n      * EjbJarType methods used for the @EJB, @EJBs annotations\n      */\n     public EjbLocalRefType[] getEjbLocalRefArray() {\n-        return null;\n+        return delegate.getEjbLocalRefArray();\n     }\n \n     public EjbLocalRefType addNewEjbLocalRef() {\n-        return null;\n+        return delegate.addNewEjbLocalRef();\n     }\n \n     public EjbRefType[] getEjbRefArray() {\n-        return null;\n+        return delegate.getEjbRefArray();\n     }\n \n     public EjbRefType addNewEjbRef() {\n-        return null;\n+        return delegate.addNewEjbRef();\n     }\n \n \n     /**\n      * EjbJarType methods used for the @Resource, @Resources annotations\n      */\n     public EnvEntryType[] getEnvEntryArray() {\n-        return null;\n+        return delegate.getEnvEntryArray();\n     }\n \n     public EnvEntryType addNewEnvEntry() {\n-        return null;\n+        return delegate.addNewEnvEntry();\n     }\n \n     public ServiceRefType[] getServiceRefArray() {\n-        return null;\n+        return delegate.getServiceRefArray();\n     }\n \n     public ServiceRefType addNewServiceRef() {\n-        return null;\n+        return delegate.addNewServiceRef();\n     }\n \n     public ResourceRefType[] getResourceRefArray() {\n-        return null;\n+        return delegate.getResourceRefArray();\n     }\n \n     public ResourceRefType addNewResourceRef() {\n-        return null;\n+        return delegate.addNewResourceRef();\n     }\n \n     public MessageDestinationRefType[] getMessageDestinationRefArray() {\n-        return null;\n+        return delegate.getMessageDestinationRefArray();\n     }\n \n     public MessageDestinationRefType addNewMessageDestinationRef() {\n-        return null;\n+        return delegate.addNewMessageDestinationRef();\n     }\n \n     public ResourceEnvRefType[] getResourceEnvRefArray() {\n-        return null;\n+        return delegate.getResourceEnvRefArray();\n     }\n \n     public ResourceEnvRefType addNewResourceEnvRef() {\n-        return null;\n+        return delegate.addNewResourceEnvRef();\n+    }\n+\n+    public LifecycleCallbackType[] getPostConstructArray() {\n+        return delegate.getPostConstructArray();\n+    }\n+\n+    public LifecycleCallbackType addPostConstruct() {\n+        return delegate.addPostConstruct();\n+    }\n+\n+    public LifecycleCallbackType[] getPreDestroyArray() {\n+        return delegate.getPreDestroyArray();\n+    }\n+\n+    public LifecycleCallbackType addPreDestroy() {\n+        return delegate.addPreDestroy();\n     }\n \n \n@@ -131,20 +156,14 @@ public ResourceEnvRefType addNewResourceEnvRef() {\n      * @return String representation of ejbJar\n      */\n     public String toString() {\n-        return ejbJar.toString();\n+        return ejbJar.xmlText();\n     }\n \n \n-    /**\n-     * ejbJar getter\n-     *\n-     * @return ejbJar EjbJarType\n-     */\n     public EjbJarType getEjbJar() {\n         return ejbJar;\n     }\n \n-\n     /**\n      * ambiguousRefs getter\n      * <p/>\n@@ -162,19 +181,326 @@ public EjbJarType getEjbJar() {\n         return this.ambiguousEjbRefs;\n     }\n \n-    public LifecycleCallbackType[] getPostConstructArray() {\n-        return new LifecycleCallbackType[0];\n-    }\n+    public static class EntityBean implements AnnotatedApp {\n+        private final EntityBeanType bean;\n \n-    public LifecycleCallbackType addPostConstruct() {\n-        return null;\n+\n+        public EntityBean(EntityBeanType bean) {\n+            this.bean = bean;\n+        }\n+\n+        public EjbLocalRefType[] getEjbLocalRefArray() {\n+            return bean.getEjbLocalRefArray();\n+        }\n+\n+\n+        public EjbLocalRefType addNewEjbLocalRef() {\n+            return bean.addNewEjbLocalRef();\n+        }\n+\n+\n+        public EjbRefType[] getEjbRefArray() {\n+            return bean.getEjbRefArray();\n+        }\n+\n+\n+        public EjbRefType addNewEjbRef() {\n+            return bean.addNewEjbRef();\n+        }\n+\n+\n+        public EnvEntryType[] getEnvEntryArray() {\n+            return bean.getEnvEntryArray();\n+        }\n+\n+\n+        public EnvEntryType addNewEnvEntry() {\n+            return bean.addNewEnvEntry();\n+        }\n+\n+\n+        public ServiceRefType[] getServiceRefArray() {\n+            return bean.getServiceRefArray();\n+        }\n+\n+\n+        public ServiceRefType addNewServiceRef() {\n+            return bean.addNewServiceRef();\n+        }\n+\n+\n+        public ResourceRefType[] getResourceRefArray() {\n+            return bean.getResourceRefArray();\n+        }\n+\n+\n+        public ResourceRefType addNewResourceRef() {\n+            return bean.addNewResourceRef();\n+        }\n+\n+\n+        public MessageDestinationRefType[] getMessageDestinationRefArray() {\n+            return bean.getMessageDestinationRefArray();\n+        }\n+\n+\n+        public MessageDestinationRefType addNewMessageDestinationRef() {\n+            return bean.addNewMessageDestinationRef();\n+        }\n+\n+\n+        public ResourceEnvRefType[] getResourceEnvRefArray() {\n+            return bean.getResourceEnvRefArray();\n+        }\n+\n+\n+        public ResourceEnvRefType addNewResourceEnvRef() {\n+            return bean.addNewResourceEnvRef();\n+        }\n+\n+\n+        public String toString() {\n+            return bean.xmlText();\n+        }\n+\n+        public List<EjbRefType> getAmbiguousEjbRefs() {\n+            throw new AssertionError(\"don't call this\");\n+        }\n+\n+\n+        public LifecycleCallbackType[] getPostConstructArray() {\n+            return bean.getPostConstructArray();\n+        }\n+\n+\n+        public LifecycleCallbackType addPostConstruct() {\n+            return bean.addNewPostConstruct();\n+        }\n+\n+\n+        public LifecycleCallbackType[] getPreDestroyArray() {\n+            return bean.getPreDestroyArray();\n+        }\n+\n+\n+        public LifecycleCallbackType addPreDestroy() {\n+            return bean.addNewPreDestroy();\n+        }\n     }\n \n-    public LifecycleCallbackType[] getPreDestroyArray() {\n-        return new LifecycleCallbackType[0];\n+    public static class MessageDriveBean implements AnnotatedApp {\n+        private final MessageDrivenBeanType bean;\n+\n+\n+        public MessageDriveBean(MessageDrivenBeanType bean) {\n+            this.bean = bean;\n+        }\n+\n+\n+        public EjbLocalRefType[] getEjbLocalRefArray() {\n+            return bean.getEjbLocalRefArray();\n+        }\n+\n+\n+        public EjbLocalRefType addNewEjbLocalRef() {\n+            return bean.addNewEjbLocalRef();\n+        }\n+\n+\n+        public EjbRefType[] getEjbRefArray() {\n+            return bean.getEjbRefArray();\n+        }\n+\n+\n+        public EjbRefType addNewEjbRef() {\n+            return bean.addNewEjbRef();\n+        }\n+\n+\n+        public EnvEntryType[] getEnvEntryArray() {\n+            return bean.getEnvEntryArray();\n+        }\n+\n+\n+        public EnvEntryType addNewEnvEntry() {\n+            return bean.addNewEnvEntry();\n+        }\n+\n+\n+        public ServiceRefType[] getServiceRefArray() {\n+            return bean.getServiceRefArray();\n+        }\n+\n+\n+        public ServiceRefType addNewServiceRef() {\n+            return bean.addNewServiceRef();\n+        }\n+\n+\n+        public ResourceRefType[] getResourceRefArray() {\n+            return bean.getResourceRefArray();\n+        }\n+\n+\n+        public ResourceRefType addNewResourceRef() {\n+            return bean.addNewResourceRef();\n+        }\n+\n+\n+        public MessageDestinationRefType[] getMessageDestinationRefArray() {\n+            return bean.getMessageDestinationRefArray();\n+        }\n+\n+\n+        public MessageDestinationRefType addNewMessageDestinationRef() {\n+            return bean.addNewMessageDestinationRef();\n+        }\n+\n+\n+        public ResourceEnvRefType[] getResourceEnvRefArray() {\n+            return bean.getResourceEnvRefArray();\n+        }\n+\n+\n+        public ResourceEnvRefType addNewResourceEnvRef() {\n+            return bean.addNewResourceEnvRef();\n+        }\n+\n+\n+        public String toString() {\n+            return bean.xmlText();\n+        }\n+\n+        public List<EjbRefType> getAmbiguousEjbRefs() {\n+            throw new AssertionError(\"don't call this\");\n+        }\n+\n+\n+        public LifecycleCallbackType[] getPostConstructArray() {\n+            return bean.getPostConstructArray();\n+        }\n+\n+\n+        public LifecycleCallbackType addPostConstruct() {\n+            return bean.addNewPostConstruct();\n+        }\n+\n+\n+        public LifecycleCallbackType[] getPreDestroyArray() {\n+            return bean.getPreDestroyArray();\n+        }\n+\n+\n+        public LifecycleCallbackType addPreDestroy() {\n+            return bean.addNewPreDestroy();\n+        }\n     }\n \n-    public LifecycleCallbackType addPreDestroy() {\n-        return null;\n+    public static class SessionBean implements AnnotatedApp {\n+        private final SessionBeanType bean;\n+\n+\n+        public SessionBean(SessionBeanType bean) {\n+            this.bean = bean;\n+        }\n+\n+\n+        public EjbLocalRefType[] getEjbLocalRefArray() {\n+            return bean.getEjbLocalRefArray();\n+        }\n+\n+\n+        public EjbLocalRefType addNewEjbLocalRef() {\n+            return bean.addNewEjbLocalRef();\n+        }\n+\n+\n+        public EjbRefType[] getEjbRefArray() {\n+            return bean.getEjbRefArray();\n+        }\n+\n+\n+        public EjbRefType addNewEjbRef() {\n+            return bean.addNewEjbRef();\n+        }\n+\n+\n+        public EnvEntryType[] getEnvEntryArray() {\n+            return bean.getEnvEntryArray();\n+        }\n+\n+\n+        public EnvEntryType addNewEnvEntry() {\n+            return bean.addNewEnvEntry();\n+        }\n+\n+\n+        public ServiceRefType[] getServiceRefArray() {\n+            return bean.getServiceRefArray();\n+        }\n+\n+\n+        public ServiceRefType addNewServiceRef() {\n+            return bean.addNewServiceRef();\n+        }\n+\n+\n+        public ResourceRefType[] getResourceRefArray() {\n+            return bean.getResourceRefArray();\n+        }\n+\n+\n+        public ResourceRefType addNewResourceRef() {\n+            return bean.addNewResourceRef();\n+        }\n+\n+\n+        public MessageDestinationRefType[] getMessageDestinationRefArray() {\n+            return bean.getMessageDestinationRefArray();\n+        }\n+\n+\n+        public MessageDestinationRefType addNewMessageDestinationRef() {\n+            return bean.addNewMessageDestinationRef();\n+        }\n+\n+\n+        public ResourceEnvRefType[] getResourceEnvRefArray() {\n+            return bean.getResourceEnvRefArray();\n+        }\n+\n+\n+        public ResourceEnvRefType addNewResourceEnvRef() {\n+            return bean.addNewResourceEnvRef();\n+        }\n+\n+\n+        public String toString() {\n+            return bean.xmlText();\n+        }\n+\n+        public List<EjbRefType> getAmbiguousEjbRefs() {\n+            throw new AssertionError(\"don't call this\");\n+        }\n+\n+\n+        public LifecycleCallbackType[] getPostConstructArray() {\n+            return bean.getPostConstructArray();\n+        }\n+\n+\n+        public LifecycleCallbackType addPostConstruct() {\n+            return bean.addNewPostConstruct();\n+        }\n+\n+\n+        public LifecycleCallbackType[] getPreDestroyArray() {\n+            return bean.getPreDestroyArray();\n+        }\n+\n+\n+        public LifecycleCallbackType addPreDestroy() {\n+            return bean.addNewPreDestroy();\n+        }\n     }\n }"
            },
            {
                "sha": "d976c48db3342cf4d361f38ef5f869e4439e0288",
                "filename": "modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/WebServiceRefAnnotationHelper.java",
                "status": "modified",
                "additions": 7,
                "deletions": 9,
                "changes": 16,
                "blob_url": "https://github.com/apache/geronimo/blob/9115641990cebcb3498c8ec1de58d1863121cf79/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/WebServiceRefAnnotationHelper.java",
                "raw_url": "https://github.com/apache/geronimo/raw/9115641990cebcb3498c8ec1de58d1863121cf79/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/WebServiceRefAnnotationHelper.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/annotation/WebServiceRefAnnotationHelper.java?ref=9115641990cebcb3498c8ec1de58d1863121cf79",
                "patch": "@@ -257,17 +257,15 @@ else if (field != null) {\n         //------------------------------------------------------------------------------------------\n         boolean exists = false;\n         ServiceRefType[] serviceRefs = annotatedApp.getServiceRefArray();\n-        if (serviceRefs != null){\n-            for ( ServiceRefType serviceRef : serviceRefs ) {\n-                if ( serviceRef.getServiceRefName().getStringValue().trim().equals(webServiceRefName) ) {\n-                    if (method != null || field != null) {\n-                        InjectionTargetType[] targets = serviceRef.getInjectionTargetArray();\n-                        if (!hasTarget(method, field, targets)) {\n-                            configureInjectionTarget(serviceRef.addNewInjectionTarget(), method, field);\n-                        }\n+        for ( ServiceRefType serviceRef : serviceRefs ) {\n+            if ( serviceRef.getServiceRefName().getStringValue().trim().equals(webServiceRefName) ) {\n+                if (method != null || field != null) {\n+                    InjectionTargetType[] targets = serviceRef.getInjectionTargetArray();\n+                    if (!hasTarget(method, field, targets)) {\n+                        configureInjectionTarget(serviceRef.addNewInjectionTarget(), method, field);\n                     }\n-                    return;\n                 }\n+                return;\n             }\n         }\n         if ( !exists ) {"
            },
            {
                "sha": "1763face8ac6f347850b6c660cd256a1aad3a2c8",
                "filename": "modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/9115641990cebcb3498c8ec1de58d1863121cf79/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/9115641990cebcb3498c8ec1de58d1863121cf79/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java?ref=9115641990cebcb3498c8ec1de58d1863121cf79",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.geronimo.gbean.AbstractNameQuery;\n import org.apache.geronimo.j2ee.deployment.EARContext;\n import org.apache.geronimo.j2ee.deployment.NamingBuilder;\n+import org.apache.geronimo.j2ee.deployment.annotation.AnnotatedEjbJar;\n import org.apache.geronimo.j2ee.j2eeobjectnames.NameFactory;\n import org.apache.geronimo.kernel.GBeanAlreadyExistsException;\n import org.apache.geronimo.naming.deployment.GBeanResourceEnvironmentBuilder;\n@@ -262,7 +263,7 @@ public void buildEnc() throws DeploymentException {\n     }\n \n     private void addEnc(GBeanData gbean, XmlObject xmlbeansEjb, ResourceRefType[] resourceRefs) throws DeploymentException {\n-        OpenejbGeronimoEjbJarType geronimoOpenejb = (OpenejbGeronimoEjbJarType) ejbModule.getVendorDD();\n+        OpenejbGeronimoEjbJarType geronimoOpenejb = ejbModule.getVendorDD();\n \n         //\n         // Build ENC\n@@ -271,6 +272,7 @@ private void addEnc(GBeanData gbean, XmlObject xmlbeansEjb, ResourceRefType[] re\n         // Geronimo uses a map to pass data to the naming build and for the results data\n         Map<Object,Object> buildingContext = new HashMap<Object,Object>();\n         buildingContext.put(NamingBuilder.GBEAN_NAME_KEY, gbean.getAbstractName());\n+        ((AnnotatedEjbJar)ejbModule.getAnnotatedApp()).setBean(xmlbeansEjb);\n \n         namingBuilder.buildNaming(xmlbeansEjb,\n                 geronimoOpenejb,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/27c2c4c8fd2cbe56a00decc778bf45b321add5f4",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/d3b87b67f61628d51c095f6cff08b5685fd29f91",
        "message": "temporarily comment out block as \"id\" is currently unused and causes an NPE if appclient contains no dd\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@512801 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_77",
        "file": [
            {
                "sha": "9fe98e06eacb380cec1e3a950b55f1a04e51c1e9",
                "filename": "modules/geronimo-client-builder/src/main/java/org/apache/geronimo/client/builder/AppClientModuleBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/27c2c4c8fd2cbe56a00decc778bf45b321add5f4/modules/geronimo-client-builder/src/main/java/org/apache/geronimo/client/builder/AppClientModuleBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/27c2c4c8fd2cbe56a00decc778bf45b321add5f4/modules/geronimo-client-builder/src/main/java/org/apache/geronimo/client/builder/AppClientModuleBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-client-builder/src/main/java/org/apache/geronimo/client/builder/AppClientModuleBuilder.java?ref=27c2c4c8fd2cbe56a00decc778bf45b321add5f4",
                "patch": "@@ -348,7 +348,7 @@ GerApplicationClientType getGeronimoAppClient(Object plan, JarFile moduleFile, b\n     }\n \n     private GerApplicationClientType createDefaultPlan(String name, ApplicationClientType appClient, boolean standAlone, Environment environment) {\n-        String id = appClient.getId();\n+        /*String id = appClient.getId();\n         if (id == null) {\n             id = name;\n             if (id.endsWith(\".jar\")) {\n@@ -357,7 +357,7 @@ private GerApplicationClientType createDefaultPlan(String name, ApplicationClien\n             if (id.endsWith(\"/\")) {\n                 id = id.substring(0, id.length() - 1);\n             }\n-        }\n+        }*/\n \n         GerApplicationClientType geronimoAppClient = GerApplicationClientType.Factory.newInstance();\n         EnvironmentType clientEnvironmentType = geronimoAppClient.addNewClientEnvironment();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/8d869777a52005a9ee514ef9c3426fa653668278",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/267d64b2e8843da3f5e092173471cd07ee9f5405",
        "message": "GERONIMO-2834 fix ejb method permission names. Also fix an npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@507463 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_78",
        "file": [
            {
                "sha": "51ab14e0d727378704ebf4fe72ad83acf66f4e1d",
                "filename": "modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/8d869777a52005a9ee514ef9c3426fa653668278/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/8d869777a52005a9ee514ef9c3426fa653668278/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/EjbDeploymentBuilder.java?ref=8d869777a52005a9ee514ef9c3426fa653668278",
                "patch": "@@ -199,7 +199,7 @@ private void addSecurityData(EnterpriseBean enterpriseBean, ComponentPermissions\n \n                 // RunAs subject\n                 SecurityIdentity securityIdentity = remoteBean.getSecurityIdentity();\n-                if (securityIdentity != null) {\n+                if (securityIdentity != null && securityIdentity.getRunAs() != null) {\n                     String runAsName = securityIdentity.getRunAs().getRoleName();\n                     if (runAsName != null) {\n                         Subject runAsSubject = (Subject) securityConfiguration.getRoleDesignates().get(runAsName);"
            },
            {
                "sha": "8f2fe231d0de8af6a7d204f602785eb8eb77403d",
                "filename": "modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/SecurityBuilder.java",
                "status": "modified",
                "additions": 11,
                "deletions": 3,
                "changes": 14,
                "blob_url": "https://github.com/apache/geronimo/blob/8d869777a52005a9ee514ef9c3426fa653668278/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/SecurityBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/8d869777a52005a9ee514ef9c3426fa653668278/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/SecurityBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-openejb-builder/src/main/java/org/apache/geronimo/openejb/deployment/SecurityBuilder.java?ref=8d869777a52005a9ee514ef9c3426fa653668278",
                "patch": "@@ -25,6 +25,7 @@\n import java.util.Map;\n import javax.security.jacc.EJBMethodPermission;\n import javax.security.jacc.EJBRoleRefPermission;\n+import javax.xml.bind.annotation.XmlEnumValue;\n \n import org.apache.geronimo.common.DeploymentException;\n import org.apache.geronimo.security.jacc.ComponentPermissions;\n@@ -33,6 +34,7 @@\n import org.apache.openejb.jee.Method;\n import org.apache.openejb.jee.MethodPermission;\n import org.apache.openejb.jee.SecurityRoleRef;\n+import org.apache.openejb.jee.MethodIntf;\n \n public class SecurityBuilder {\n     /**\n@@ -41,12 +43,14 @@\n      * is also filled with permissions that need to be used to fill the JACC\n      * policy configuration.\n      *\n+     * @param defaultRole default role for otherwise unassigned permissions\n      * @param notAssigned the set of all possible permissions.  These will be\n      * culled so that all that are left are those that have\n      * not been assigned roles.\n      * @param assemblyDescriptor the assembly descriptor\n      * @param ejbName the name of the EJB\n      * @param securityRoleRefs the EJB's role references\n+     * @param componentPermissions the holder for the ejb's permissions\n      * @throws DeploymentException if any constraints are violated\n      */\n     public void addComponentPermissions(String defaultRole,\n@@ -81,9 +85,8 @@ public void addComponentPermissions(String defaultRole,\n                         // jacc uses null instead of *\n                         methodName = null;\n                     }\n-\n                     // method interface\n-                    String methodIntf = method.getMethodIntf().toString();\n+                    String methodIntf = getMethodIntfName(method);\n \n                     // method parameters\n                     String[] methodParams;\n@@ -128,7 +131,7 @@ public void addComponentPermissions(String defaultRole,\n                     // method name\n                     String methodName = method.getMethodName();\n                     // method interface\n-                    String methodIntf = method.getMethodIntf().toString();\n+                    String methodIntf = getMethodIntfName(method);\n \n                     // method parameters\n                     String[] methodParams;\n@@ -195,6 +198,10 @@ public void addComponentPermissions(String defaultRole,\n \n     }\n \n+    private String getMethodIntfName(Method method) {\n+        return MethodIntf.class.getFields()[method.getMethodIntf().ordinal()].getAnnotation(XmlEnumValue.class).value();\n+    }\n+\n     /**\n      * Generate all the possible permissions for a bean's interface.\n      * <p/>\n@@ -210,6 +217,7 @@ public void addComponentPermissions(String defaultRole,\n      * @param methodInterface the EJB method interface\n      * @param interfaceClass the class name of the interface to be used to generate the permissions\n      * @param classLoader the class loader to be used in obtaining the interface class\n+     * @throws org.apache.geronimo.common.DeploymentException in case a class could not be found\n      */\n     public void addToPermissions(Permissions permissions,\n             String ejbName,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/83600edbf70b34a67e3eab55cf2f40b29d67b332",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/883ad6d06eeb30a03b3ae5f3adb65b6f695d4461",
        "message": "drilldown into JAXBElement to extract the WebservicesType object, set default transport id (causes NPE if absent)\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@488107 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_79",
        "file": [
            {
                "sha": "9ce312881e6f2a6ae4c797c19b629de3b43c3f65",
                "filename": "modules/geronimo-cxf-builder/src/main/java/org/apache/geronimo/cxf/builder/CXFBuilder.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/83600edbf70b34a67e3eab55cf2f40b29d67b332/modules/geronimo-cxf-builder/src/main/java/org/apache/geronimo/cxf/builder/CXFBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/83600edbf70b34a67e3eab55cf2f40b29d67b332/modules/geronimo-cxf-builder/src/main/java/org/apache/geronimo/cxf/builder/CXFBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-cxf-builder/src/main/java/org/apache/geronimo/cxf/builder/CXFBuilder.java?ref=83600edbf70b34a67e3eab55cf2f40b29d67b332",
                "patch": "@@ -99,7 +99,11 @@ public void findWebServices(JarFile moduleFile, boolean isEJB, Map servletLocati\n             }\n \n             Unmarshaller unmarshaller = ctx.createUnmarshaller();\n-            Object obj = unmarshaller.unmarshal(in);\n+            Object obj = unmarshaller.unmarshal(new javax.xml.transform.stream.StreamSource(in), WebservicesType.class);\n+\n+            if (obj instanceof JAXBElement) {\n+                obj = ((JAXBElement)obj).getValue();\n+            }\n \n             if (!(obj instanceof WebservicesType)) {\n                 return map;"
            },
            {
                "sha": "c3ed026d471bf69b0b081d7912c44271d6db58d6",
                "filename": "modules/geronimo-cxf/src/main/java/org/apache/geronimo/cxf/CXFWebServiceContainer.java",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/apache/geronimo/blob/83600edbf70b34a67e3eab55cf2f40b29d67b332/modules/geronimo-cxf/src/main/java/org/apache/geronimo/cxf/CXFWebServiceContainer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/83600edbf70b34a67e3eab55cf2f40b29d67b332/modules/geronimo-cxf/src/main/java/org/apache/geronimo/cxf/CXFWebServiceContainer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-cxf/src/main/java/org/apache/geronimo/cxf/CXFWebServiceContainer.java?ref=83600edbf70b34a67e3eab55cf2f40b29d67b332",
                "patch": "@@ -23,6 +23,9 @@\n import org.apache.cxf.transport.DestinationFactoryManager;\n import org.apache.geronimo.webservices.WebServiceContainer;\n \n+import java.util.List;\n+import java.util.ArrayList;\n+\n //TODO consider putting most of this in the CXFWebServiceContaInerFactoryGBean\n public class CXFWebServiceContainer implements WebServiceContainer {\n \n@@ -33,8 +36,13 @@\n     public CXFWebServiceContainer(PortInfo portInfo, Object target, Bus bus) {\n         //TODO actually use portInfo\n         this.bus = bus;\n+\n+        List ids = new ArrayList();\n+        ids.add(\"http://schemas.xmlsoap.org/wsdl/soap/http\");\n+\n         DestinationFactoryManager destinationFactoryManager = bus.getExtension(DestinationFactoryManager.class);\n-        DestinationFactory factory = new GeronimoDestinationFactory(bus);\n+        GeronimoDestinationFactory factory = new GeronimoDestinationFactory(bus);\n+        factory.setTransportIds(ids);\n         destinationFactoryManager.registerDestinationFactory(\"http://cxf.apache.org/transports/http/configuration\", factory);\n         destinationFactoryManager.registerDestinationFactory(\"http://www.w3.org/2003/05/soap/bindings/HTTP/\", factory);\n         destinationFactoryManager.registerDestinationFactory(\"http://schemas.xmlsoap.org/soap/http\", factory);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/f9f47f342e2bff5d0bb7a35379f61c226d2758d9",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/7a18d1238a2f8af1d77201a46f4d0fb1a0e0f567",
        "message": "GERONIMO-2197 (merge from 1.1 branch) NPE when the \"edit\" link is selected on the Security Realms console page\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@422646 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_80",
        "file": [
            {
                "sha": "58d9392494e19b0e86be1d2deb094299dc40c385",
                "filename": "applications/console/console-standard/src/java/org/apache/geronimo/console/securitymanager/realm/SecurityRealmPortlet.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/f9f47f342e2bff5d0bb7a35379f61c226d2758d9/applications/console/console-standard/src/java/org/apache/geronimo/console/securitymanager/realm/SecurityRealmPortlet.java",
                "raw_url": "https://github.com/apache/geronimo/raw/f9f47f342e2bff5d0bb7a35379f61c226d2758d9/applications/console/console-standard/src/java/org/apache/geronimo/console/securitymanager/realm/SecurityRealmPortlet.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/applications/console/console-standard/src/java/org/apache/geronimo/console/securitymanager/realm/SecurityRealmPortlet.java?ref=f9f47f342e2bff5d0bb7a35379f61c226d2758d9",
                "patch": "@@ -762,7 +762,7 @@ public void load(PortletRequest request) {\n             if (lockoutWindow != null && lockoutWindow.equals(\"\")) lockoutWindow = null;\n             lockoutDuration = request.getParameter(\"lockoutDuration\");\n             if (lockoutDuration != null && lockoutDuration.equals(\"\")) lockoutDuration = null;\n-            abstractName = request.getParameter(\"objectName\");\n+            abstractName = request.getParameter(\"abstractName\");\n             if (abstractName != null && abstractName.equals(\"\")) abstractName = null;\n             String test = request.getParameter(\"storePassword\");\n             storePassword = test != null && !test.equals(\"\") && !test.equals(\"false\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/22e51022646a6dfb086659791965ab1d92fcd5c2",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/566aa7699a495cea2972ba4bd6aad5a1c90ed844",
        "message": "Push some jsr-77 info into the tomcat mbeans. Avoid some resulting potential NPEs. Clean up formatting a little bit\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/branches/1.1@404881 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_81",
        "file": [
            {
                "sha": "404c83d4fa966e5b21614c1b4ae58388d43d0609",
                "filename": "modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/22e51022646a6dfb086659791965ab1d92fcd5c2/modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/22e51022646a6dfb086659791965ab1d92fcd5c2/modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/tomcat/src/java/org/apache/geronimo/tomcat/GeronimoStandardContext.java?ref=22e51022646a6dfb086659791965ab1d92fcd5c2",
                "patch": "@@ -80,6 +80,12 @@\n     private int contextCount = 0;\n     \n     public void setContextProperties(TomcatContext ctx) throws DeploymentException {\n+        //try to make sure this mbean properties match those of the TomcatWebAppContext\n+        if (ctx instanceof TomcatWebAppContext) {\n+            TomcatWebAppContext tctx = (TomcatWebAppContext) ctx;\n+            setJavaVMs(tctx.getJavaVMs());\n+            setServer(tctx.getServer());\n+        }\n         // Create ReadOnlyContext\n         javax.naming.Context enc = null;\n         Map componentContext = ctx.getComponentContext();"
            },
            {
                "sha": "bb3a45c97c43f469bfa9f9d003161b848387ca26",
                "filename": "modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatContainer.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/22e51022646a6dfb086659791965ab1d92fcd5c2/modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatContainer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/22e51022646a6dfb086659791965ab1d92fcd5c2/modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatContainer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatContainer.java?ref=22e51022646a6dfb086659791965ab1d92fcd5c2",
                "patch": "@@ -238,14 +238,14 @@ public void addContext(TomcatContext ctx) throws Exception {\n         ctx.setContext(anotherCtxObj);\n \n         // Have the context to set its properties if its a GeronimoStandardContext\n-        if (anotherCtxObj instanceof GeronimoStandardContext)\n+        if (anotherCtxObj instanceof GeronimoStandardContext) {\n             ((GeronimoStandardContext) anotherCtxObj).setContextProperties(ctx);\n-\n+        }\n         //Was a virtual server defined?\n         String virtualServer = ctx.getVirtualServer();\n-        if (virtualServer == null)\n+        if (virtualServer == null) {\n             virtualServer = engine.getDefaultHost();\n-\n+        }\n         Container host = engine.findChild(virtualServer);\n         if (host == null) {\n             throw new IllegalArgumentException(\"Invalid virtual host '\" + virtualServer + \"'.  Do you have a matching Host entry in the plan?\");"
            },
            {
                "sha": "25d3a8d319a9b8f44c8ff3ac463f6966debdac9c",
                "filename": "modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatWebAppContext.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/22e51022646a6dfb086659791965ab1d92fcd5c2/modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatWebAppContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/22e51022646a6dfb086659791965ab1d92fcd5c2/modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatWebAppContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/tomcat/src/java/org/apache/geronimo/tomcat/TomcatWebAppContext.java?ref=22e51022646a6dfb086659791965ab1d92fcd5c2",
                "patch": "@@ -274,7 +274,7 @@ public WebContainer getContainer() {\n     }\n \n     public String getServer() {\n-        return server.getObjectName();\n+        return server == null? null: server.getObjectName();\n     }\n \n     public String getDocBase() {\n@@ -435,7 +435,7 @@ private void verifyObjectName(ObjectName objectName) {\n     }\n \n     public String[] getJavaVMs() {\n-        return server.getJavaVMs();\n+        return server == null? new String[0]: server.getJavaVMs();\n     }\n \n     public String getDeploymentDescriptor() {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/29e40de11b6bd518fcf974dbf3857f67f4cdd1c5",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/891f3b69a66111de3245a325f1a8850f265b9b79",
        "message": "Throw a meaningful NPE when the configurationManager is not set\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/branches/1.1@398559 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_82",
        "file": [
            {
                "sha": "0db24af509c54907ef31978e05993dae66508f56",
                "filename": "modules/deployment/src/java/org/apache/geronimo/deployment/DeploymentContext.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/29e40de11b6bd518fcf974dbf3857f67f4cdd1c5/modules/deployment/src/java/org/apache/geronimo/deployment/DeploymentContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/29e40de11b6bd518fcf974dbf3857f67f4cdd1c5/modules/deployment/src/java/org/apache/geronimo/deployment/DeploymentContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/deployment/src/java/org/apache/geronimo/deployment/DeploymentContext.java?ref=29e40de11b6bd518fcf974dbf3857f67f4cdd1c5",
                "patch": "@@ -83,10 +83,10 @@ public DeploymentContext(File baseDir, File inPlaceConfigurationDir, Environment\n     }\n \n     public DeploymentContext(File baseDir, File inPlaceConfigurationDir, Environment environment, ConfigurationModuleType moduleType, Naming naming, ConfigurationManager configurationManager) throws DeploymentException {\n-        this.configurationManager = configurationManager;\n         if (baseDir == null) throw new NullPointerException(\"baseDir is null\");\n         if (environment == null) throw new NullPointerException(\"environment is null\");\n         if (moduleType == null) throw new NullPointerException(\"type is null\");\n+        if (configurationManager == null) throw new NullPointerException(\"configurationManager is null\");\n \n         if (!baseDir.exists()) {\n             baseDir.mkdirs();\n@@ -99,6 +99,8 @@ public DeploymentContext(File baseDir, File inPlaceConfigurationDir, Environment\n \n         this.configuration = createTempConfiguration(environment, moduleType, baseDir, inPlaceConfigurationDir, configurationManager, naming);\n \n+        this.configurationManager = configurationManager;\n+        \n         if (null == inPlaceConfigurationDir) {\n             resourceContext = new CopyResourceContext(configuration, baseDir);\n         } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/7441bbda0b665524b15e8259e071132f3ee079ce",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
        "message": "GERONIMO-1599 HOWLLog throws NPE because XidFactory is missing\n\nWrongly rolled-back the implementation of recover.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@376288 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_83",
        "file": [
            {
                "sha": "372894fd39797c6b72d1d38bab2c6e1b2c8a3233",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/geronimo/blob/7441bbda0b665524b15e8259e071132f3ee079ce/modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7441bbda0b665524b15e8259e071132f3ee079ce/modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java?ref=7441bbda0b665524b15e8259e071132f3ee079ce",
                "patch": "@@ -309,6 +309,11 @@ public void rollback(Xid xid, Object logMark) throws LogException {\n     }\n \n     public Collection recover(XidFactory xidFactory) throws LogException {\n+        log.debug(\"Initiating transaction manager recovery\");\n+        Map recovered = new HashMap();\n+        ReplayListener replayListener = new GeronimoReplayListener(xidFactory, recovered);\n+        logger.replayActiveTx(replayListener);\n+        log.debug(\"In doubt transactions recovered from log\");\n         return recovered.values();\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/900b36b246dd285cde492593f5332e06d64c69f6",
        "message": "GERONIMO-1599 HOWLLog throws NPE because XidFactory is missing\n\nExtract XidFactory from TransactionManagerImpl.\n\nDefine an XidFactory GBean shared by HOWLTransactionLog and TransactionManager\n~                                                                          \n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@376284 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_84",
        "file": [
            {
                "sha": "8cfb1a8d8fec9c2edc22c00f218cb9f10f0db621",
                "filename": "configs/client/src/plan/plan.xml",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/configs/client/src/plan/plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/configs/client/src/plan/plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/configs/client/src/plan/plan.xml?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -56,9 +56,14 @@ by the app client.\n         </reference>\n     </gbean>\n \n+    <gbean name=\"XidFactory\" class=\"org.apache.geronimo.transaction.manager.XidFactoryImplGBean\">\n+        <attribute name=\"tmId\">71,84,77,73,68</attribute>\n+    </gbean>\n+\n     <gbean name=\"TransactionManager\" class=\"org.apache.geronimo.transaction.manager.TransactionManagerImplGBean\">\n         <!--no transaction log on the client-->\n         <attribute name=\"defaultTransactionTimeoutSeconds\">600</attribute>\n+        <reference name=\"XidFactory\"><name>XidFactory</name></reference>\n         <references name=\"ResourceManagers\">\n             <pattern>\n                 <gbean-name>*:j2eeType=JCAManagedConnectionFactory,*</gbean-name>"
            },
            {
                "sha": "c1fe1ab39b15c40376e7a53071572340d9b18a30",
                "filename": "configs/j2ee-server/src/plan/plan.xml",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/configs/j2ee-server/src/plan/plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/configs/j2ee-server/src/plan/plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/configs/j2ee-server/src/plan/plan.xml?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -60,11 +60,17 @@ by the server.\n         <attribute name=\"maxLogFiles\">2</attribute>\n         <attribute name=\"minBuffers\">4</attribute>\n         <attribute name=\"threadsWaitingForceThreshold\">-1</attribute>\n+        <reference name=\"XidFactory\"><name>XidFactory</name></reference>\n         <reference name=\"ServerInfo\"><module>geronimo/j2ee-system/${pom.currentVersion}/car</module><name>ServerInfo</name></reference>\n     </gbean>\n+    \n+    <gbean name=\"XidFactory\" class=\"org.apache.geronimo.transaction.manager.XidFactoryImplGBean\">\n+        <attribute name=\"tmId\">71,84,77,73,68</attribute>\n+    </gbean>\n \n     <gbean name=\"TransactionManager\" class=\"org.apache.geronimo.transaction.manager.TransactionManagerImplGBean\">\n         <attribute name=\"defaultTransactionTimeoutSeconds\">600</attribute>\n+        <reference name=\"XidFactory\"><name>XidFactory</name></reference>\n         <reference name=\"TransactionLog\"><name>HOWLTransactionLog</name></reference>\n         <references name=\"ResourceManagers\">\n             <pattern><gbean-name>geronimo.server:j2eeType=JCAManagedConnectionFactory,*</gbean-name></pattern>"
            },
            {
                "sha": "977abf40907a06afe1ebc3ac448793b202388201",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -39,6 +39,7 @@\n import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.apache.geronimo.transaction.context.UserTransactionImpl;\n import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n+import org.apache.geronimo.transaction.manager.XidFactoryImpl;\n \n /**\n  *\n@@ -90,7 +91,8 @@ public Object invoke(InstanceContext newInstanceContext) throws Throwable {\n \n     protected void setUp() throws Exception {\n         connectionTrackingCoordinator = new ConnectionTrackingCoordinator();\n-        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000, null, null);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000,\n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         transactionContextManager = new TransactionContextManager(transactionManager, transactionManager);\n         mockManagedConnectionFactory = new MockManagedConnectionFactory();\n         subject = new Subject();"
            },
            {
                "sha": "7596bb4d48cd1920c315b1a574ef5fbc44372776",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.apache.geronimo.transaction.context.TransactionContext;\n import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n+import org.apache.geronimo.transaction.manager.XidFactoryImpl;\n \n /**\n  *\n@@ -37,7 +38,8 @@\n \n     protected void setUp() throws Exception {\n         super.setUp();\n-        transactionManager = new TransactionManagerImpl(10 * 1000, null, null);\n+        transactionManager = new TransactionManagerImpl(10 * 1000, \n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         transactionContextManager = new TransactionContextManager(transactionManager, transactionManager);\n         transactionCachingInterceptor = new TransactionCachingInterceptor(this, transactionContextManager);\n     }"
            },
            {
                "sha": "1a4e1045d366b0b3c47becca12879c2cc38a67a3",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -26,6 +26,7 @@\n import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.apache.geronimo.transaction.manager.NamedXAResource;\n import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n+import org.apache.geronimo.transaction.manager.XidFactoryImpl;\n \n /**\n  *\n@@ -45,7 +46,8 @@\n \n     protected void setUp() throws Exception {\n         super.setUp();\n-        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000, null, null);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000, \n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         transactionContextManager = new TransactionContextManager(transactionManager, transactionManager);\n         transactionEnlistingInterceptor = new TransactionEnlistingInterceptor(this, transactionContextManager);\n     }"
            },
            {
                "sha": "afba2bc163b89b61db664fecc00473b22a228821",
                "filename": "modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -19,6 +19,7 @@\n \n import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n+import org.apache.geronimo.transaction.manager.XidFactoryImpl;\n \n /**\n  *\n@@ -29,7 +30,8 @@\n public class NontransactionalThreadPooledTimerTest extends AbstractThreadPooledTimerTest {\n \n     protected void setUp() throws Exception {\n-        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000, null, null);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000, \n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         transactionContextManager = new TransactionContextManager(transactionManager, transactionManager);\n         executableWorkFactory = new NontransactionalExecutorTaskFactory(transactionContextManager);\n         super.setUp();"
            },
            {
                "sha": "177945c51c918adf29649938a9dc83ef5a8b9b52",
                "filename": "modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -19,6 +19,7 @@\n \n import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n+import org.apache.geronimo.transaction.manager.XidFactoryImpl;\n \n /**\n  *\n@@ -29,7 +30,8 @@\n public class TransactionalThreadPooledTimerTest extends AbstractThreadPooledTimerTest {\n \n     protected void setUp() throws Exception {\n-        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000, null, null);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl(10 * 1000, \n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         transactionContextManager = new TransactionContextManager(transactionManager, transactionManager);\n         executableWorkFactory = new TransactionalExecutorTaskFactory(transactionContextManager, 1);\n         super.setUp();"
            },
            {
                "sha": "54c9cd3b08652bc1e37e3deedb31dbcf4aa0264c",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java",
                "status": "modified",
                "additions": 12,
                "deletions": 17,
                "changes": 29,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/log/HOWLLog.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -66,12 +66,12 @@\n     private final ServerInfo serverInfo;\n     private String logFileDir;\n \n-//    private final XidFactory xidFactory;\n+    private final XidFactory xidFactory;\n \n     private final XALogger logger;\n     private final Configuration configuration = new Configuration();\n     private boolean started = false;\n-//    private HashMap recovered;\n+    private HashMap recovered;\n \n     public HOWLLog(String bufferClassName,\n                    int bufferSize,\n@@ -85,7 +85,7 @@ public HOWLLog(String bufferClassName,\n                    int maxLogFiles,\n                    int minBuffers,\n                    int threadsWaitingForceThreshold,\n-//                   XidFactory xidFactory,\n+                   XidFactory xidFactory,\n                    ServerInfo serverInfo) throws IOException, LogConfigurationException {\n         this.serverInfo = serverInfo;\n         setBufferClassName(bufferClassName);\n@@ -101,7 +101,7 @@ public HOWLLog(String bufferClassName,\n         setMaxLogFiles(maxLogFiles);\n         setMinBuffers(minBuffers);\n         setThreadsWaitingForceThreshold(threadsWaitingForceThreshold);\n-//        this.xidFactory = xidFactory;\n+        this.xidFactory = xidFactory;\n         this.logger = new XALogger(configuration);\n     }\n \n@@ -211,21 +211,21 @@ public ServerInfo getServerInfo() {\n     public void doStart() throws Exception {\n         started = true;\n         setLogFileDir(logFileDir);\n-//        log.debug(\"Initiating transaction manager recovery\");\n-//        recovered = new HashMap();\n+        log.debug(\"Initiating transaction manager recovery\");\n+        recovered = new HashMap();\n \n         logger.open(null);\n \n-//        ReplayListener replayListener = new GeronimoReplayListener(xidFactory, recovered);\n-//        logger.replayActiveTx(replayListener);\n+        ReplayListener replayListener = new GeronimoReplayListener(xidFactory, recovered);\n+        logger.replayActiveTx(replayListener);\n \n-//        log.debug(\"In doubt transactions recovered from log\");\n+        log.debug(\"In doubt transactions recovered from log\");\n     }\n \n     public void doStop() throws Exception {\n         started = false;\n         logger.close();\n-//        recovered = null;\n+        recovered = null;\n     }\n \n     public void doFail() {\n@@ -309,11 +309,6 @@ public void rollback(Xid xid, Object logMark) throws LogException {\n     }\n \n     public Collection recover(XidFactory xidFactory) throws LogException {\n-        log.debug(\"Initiating transaction manager recovery\");\n-        Map recovered = new HashMap();\n-        ReplayListener replayListener = new GeronimoReplayListener(xidFactory, recovered);\n-        logger.replayActiveTx(replayListener);\n-        log.debug(\"In doubt transactions recovered from log\");\n         return recovered.values();\n     }\n \n@@ -413,7 +408,7 @@ public LogRecord getLogRecord() {\n         infoFactory.addAttribute(\"minBuffers\", Integer.TYPE, true);\n         infoFactory.addAttribute(\"threadsWaitingForceThreshold\", Integer.TYPE, true);\n \n-//        infoFactory.addReference(\"XidFactory\", XidFactory.class, NameFactory.XID_FACTORY);\n+        infoFactory.addReference(\"XidFactory\", XidFactory.class, NameFactory.XID_FACTORY);\n         infoFactory.addReference(\"ServerInfo\", ServerInfo.class, NameFactory.GERONIMO_SERVICE);\n \n         infoFactory.addInterface(TransactionLog.class);\n@@ -431,7 +426,7 @@ public LogRecord getLogRecord() {\n             \"maxLogFiles\",\n             \"minBuffers\",\n             \"threadsWaitingForceThreshold\",\n-//            \"XidFactory\",\n+            \"XidFactory\",\n             \"ServerInfo\"});\n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }"
            },
            {
                "sha": "9af823c7695827945cc4f3d7fdcf06957f49b529",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImpl.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImpl.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImpl.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -46,14 +46,14 @@\n     /**\n      * TODO NOTE!!! this should be called in an unspecified transaction context, but we cannot enforce this restriction!\n      */\n-    public TransactionManagerImpl(int defaultTransactionTimeoutSeconds, TransactionLog transactionLog, Collection resourceManagers) throws XAException {\n+    public TransactionManagerImpl(int defaultTransactionTimeoutSeconds, XidFactory xidFactory, TransactionLog transactionLog, Collection resourceManagers) throws XAException {\n         if (defaultTransactionTimeoutSeconds <= 0) {\n             throw new IllegalArgumentException(\"defaultTransactionTimeoutSeconds must be positive: attempted value: \" + defaultTransactionTimeoutSeconds);\n         }\n \n         this.defaultTransactionTimeoutMilliseconds = defaultTransactionTimeoutSeconds * 1000;\n         this.transactionLog = transactionLog == null ? new UnrecoverableLog() : transactionLog;\n-        this.xidFactory = new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes());\n+        this.xidFactory = xidFactory;\n         this.resourceManagers = resourceManagers;\n         recovery = new RecoveryImpl(this.transactionLog, this.xidFactory);\n "
            },
            {
                "sha": "2d1d00daa08e6764c235b887c2427045e3266d82",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImplGBean.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImplGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImplGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionManagerImplGBean.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -36,10 +36,11 @@\n     /**\n      * TODO NOTE!!! this should be called in an unspecified transaction context, but we cannot enforce this restriction!\n      */\n-    public TransactionManagerImplGBean(int defaultTransactionTimeoutSeconds, TransactionLog transactionLog, Collection resourceManagers) throws XAException {\n-        super(defaultTransactionTimeoutSeconds, transactionLog, resourceManagers);\n+    public TransactionManagerImplGBean(int defaultTransactionTimeoutSeconds, XidFactory xidFactory, TransactionLog transactionLog, Collection resourceManagers) throws XAException {\n+        super(defaultTransactionTimeoutSeconds, xidFactory, transactionLog, resourceManagers);\n     }\n \n+    \n     /**\n      * We can track as resources are added into the geronimo kernel.\n      *\n@@ -74,13 +75,18 @@ public void memberRemoved(ReferenceCollectionEvent event) {\n         GBeanInfoBuilder infoBuilder = GBeanInfoBuilder.createStatic(TransactionManagerImplGBean.class, NameFactory.TRANSACTION_MANAGER);\n \n         infoBuilder.addAttribute(\"defaultTransactionTimeoutSeconds\", int.class, true);\n+        infoBuilder.addReference(\"XidFactory\", XidFactory.class, NameFactory.XID_FACTORY);\n         infoBuilder.addReference(\"TransactionLog\", TransactionLog.class, NameFactory.TRANSACTION_LOG);\n         infoBuilder.addReference(\"ResourceManagers\", ResourceManager.class);//two kinds of things, so specify the type in each pattern.\n \n         infoBuilder.addInterface(ExtendedTransactionManager.class);\n         infoBuilder.addInterface(XidImporter.class);\n \n-        infoBuilder.setConstructor(new String[]{\"defaultTransactionTimeoutSeconds\", \"TransactionLog\", \"ResourceManagers\"});\n+        infoBuilder.setConstructor(new String[]{\n+                \"defaultTransactionTimeoutSeconds\",\n+                \"XidFactory\",\n+                \"TransactionLog\",\n+                \"ResourceManagers\"});\n \n         GBEAN_INFO = infoBuilder.getBeanInfo();\n     }"
            },
            {
                "sha": "b149c4b5c63790da80457b7a4d11446aaf21bab4",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/manager/XidFactoryImplGBean.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/manager/XidFactoryImplGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/java/org/apache/geronimo/transaction/manager/XidFactoryImplGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/manager/XidFactoryImplGBean.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -29,8 +29,13 @@\n     public static final GBeanInfo GBEAN_INFO;\n \n     static {\n-        GBeanInfoBuilder infoFactory = GBeanInfoBuilder.createStatic(XidFactoryImplGBean.class, NameFactory.XID_FACTORY);\n+        GBeanInfoBuilder infoFactory = GBeanInfoBuilder.createStatic(XidFactoryImpl.class, NameFactory.XID_FACTORY);\n+        \n+        infoFactory.addAttribute(\"tmId\", byte[].class, true);\n         infoFactory.addInterface(XidFactory.class);\n+\n+        infoFactory.setConstructor(new String[]{\"tmId\"});\n+        \n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }\n "
            },
            {
                "sha": "24b99a39fe9ad5b3ef28f1fb859e6a4437aa6cd7",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/context/TransactionContextManagerTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/context/TransactionContextManagerTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/context/TransactionContextManagerTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/context/TransactionContextManagerTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -38,7 +38,8 @@\n     private XidFactory xidFactory = new XidFactoryImpl(\"geronimo.test.tm\".getBytes());\n \n     protected void setUp() throws Exception {\n-        TransactionManagerImpl tm = new TransactionManagerImpl(1000, null, null);\n+        TransactionManagerImpl tm = new TransactionManagerImpl(1000, \n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         transactionContextManager = new TransactionContextManager(tm, tm);\n     }\n "
            },
            {
                "sha": "31d5bf1b2efbc2ded5af8adf08530bc31c48c7b8",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/log/HOWLLogTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/log/HOWLLogTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/log/HOWLLogTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/log/HOWLLogTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -62,7 +62,7 @@ protected TransactionLog createTransactionLog() throws Exception {\n                 2, //                \"maxLogFiles\",\n                 2, //                \"minBuffers\",\n                 10,//                \"threadsWaitingForceThreshold\"});\n-//                xidFactory,\n+                xidFactory,\n                 new BasicServerInfo(new File(basedir, \"target\").getAbsolutePath())\n         );\n         howlLog.doStart();"
            },
            {
                "sha": "711a2b541b9eb48bc15a6e9112763df2d40c33c5",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/manager/HOWLLogRecoveryTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/HOWLLogRecoveryTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/HOWLLogRecoveryTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/manager/HOWLLogRecoveryTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -71,7 +71,7 @@ private void setUpHowlLog() throws Exception {\n                 2, //                \"maxLogFiles\",\n                 2, //                \"minBuffers\",\n                 10,//                \"threadsWaitingForceThreshold\"});\n-//                xidFactory,\n+                xidFactory,\n                 new BasicServerInfo(targetDir)\n         );\n         howlLog.doStart();"
            },
            {
                "sha": "33018150e83724cd33e370de2c509a8088861eab",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/manager/ProtocolTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/ProtocolTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/ProtocolTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/manager/ProtocolTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -31,7 +31,8 @@\n     private MockResource mr11, mr12, mr21, mr22;\n \n     protected void setUp() throws Exception {\n-        tm = new TransactionManagerImpl(1000, null, null);\n+        tm = new TransactionManagerImpl(1000, \n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         mrm1 = new MockResourceManager(true);\n         mrm2 = new MockResourceManager(true);\n         mr11 = new MockResource(mrm1, \"mr11\");"
            },
            {
                "sha": "0f482e7ed89f17e7aa14a90daabe82789fa8e1c9",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/manager/TestTransactionManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/TestTransactionManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/TestTransactionManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/manager/TestTransactionManager.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -112,7 +112,8 @@ public void testOneResource() throws Exception {\n     }\n \n     protected void setUp() throws Exception {\n-        tm = new TransactionManagerImpl(10 * 1000, null, null);\n+        tm = new TransactionManagerImpl(10 * 1000,\n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n         rm1 = new MockResourceManager(true);\n         rm2 = new MockResourceManager(true);\n         rm3 = new MockResourceManager(false);"
            },
            {
                "sha": "be1effb5bfc91315dd49526fa74ea02d4da78847",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/manager/TransactionManagerImplTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/TransactionManagerImplTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/TransactionManagerImplTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/manager/TransactionManagerImplTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -49,7 +49,8 @@\n     TransactionManagerImpl tm;\n \n     protected void setUp() throws Exception {\n-        tm = new TransactionManagerImplGBean(10, transactionLog, resourceManagers);\n+        tm = new TransactionManagerImplGBean(10,\n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), transactionLog, resourceManagers);\n     }\n \n     protected void tearDown() throws Exception {"
            },
            {
                "sha": "cfa454985b8bd532328e34d5a8f7abe0f86bf5b8",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/manager/XATransactionTester.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/XATransactionTester.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/XATransactionTester.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/manager/XATransactionTester.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -47,7 +47,9 @@ public void run(String[] args) throws Exception {\n         ds = getDataSource(args);\n         XAConnection xaConn = ds.getXAConnection(\"test\", \"test\");\n         XAResource xaRes = xaConn.getXAResource();\n-        manager = new TransactionManagerImpl(10, new DummyLog(), null);\n+        manager = new TransactionManagerImpl(10,\n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), \n+                new DummyLog(), null);\n         Connection c = xaConn.getConnection();\n         Statement s = c.createStatement();\n "
            },
            {
                "sha": "abdc77a7afe896b0b2d1c3cb3e7e9834f5b76cbe",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/manager/XidImporterTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/XidImporterTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ec981b3d664a5586bfda8824e45b3bc2d0a782e8/modules/transaction/src/test/org/apache/geronimo/transaction/manager/XidImporterTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/manager/XidImporterTest.java?ref=ec981b3d664a5586bfda8824e45b3bc2d0a782e8",
                "patch": "@@ -44,7 +44,8 @@\n     XidFactory xidFactory = new XidFactoryImpl();\n \n     protected void setUp() throws Exception {\n-        tm = new TransactionManagerImpl(10 * 1000, null, null);\n+        tm = new TransactionManagerImpl(10 * 1000, \n+                new XidFactoryImpl(\"WHAT DO WE CALL IT?\".getBytes()), null, null);\n     }\n \n     public void testImportXid() throws Exception {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/a719028c2275aa0704452ae1f78054375b65cbd9",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
        "message": "Missed this file in the last commit (avoid NPE in portlet, GERONIMO-1382)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/branches/1.0@357487 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_85",
        "file": [
            {
                "sha": "74276fd303ac1cc79223574661569e6725b627ec",
                "filename": "applications/console-standard/src/java/org/apache/geronimo/console/databasemanager/wizard/DatabasePoolPortlet.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/a719028c2275aa0704452ae1f78054375b65cbd9/applications/console-standard/src/java/org/apache/geronimo/console/databasemanager/wizard/DatabasePoolPortlet.java",
                "raw_url": "https://github.com/apache/geronimo/raw/a719028c2275aa0704452ae1f78054375b65cbd9/applications/console-standard/src/java/org/apache/geronimo/console/databasemanager/wizard/DatabasePoolPortlet.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/applications/console-standard/src/java/org/apache/geronimo/console/databasemanager/wizard/DatabasePoolPortlet.java?ref=a719028c2275aa0704452ae1f78054375b65cbd9",
                "patch": "@@ -786,8 +786,12 @@ private static String attemptConnect(PortletRequest request, PoolData data) thro\n         Driver driver = (Driver) driverClass.newInstance();\n         if(driver.acceptsURL(data.url)) {\n             Properties props = new Properties();\n-            props.put(\"user\", data.user);\n-            props.put(\"password\", data.password);\n+            if(data.user != null) {\n+                props.put(\"user\", data.user);\n+            }\n+            if(data.password != null) {\n+                props.put(\"password\", data.password);\n+            }\n             Connection con = null;\n             try {\n                 con = driver.connect(data.url, props);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/7af28f531505251968a4136dc56be9b4f34e33d9",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/fad5748b78af830601be409bc8306553883e5eeb",
        "message": "fixed NPE on deployment of a webapp with WADI as SessionManager\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/branches/1.0@355389 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_86",
        "file": [
            {
                "sha": "e0536f22a72d3187342bdfe05556e060bd886fb5",
                "filename": "modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java",
                "status": "modified",
                "additions": 58,
                "deletions": 12,
                "changes": 70,
                "blob_url": "https://github.com/apache/geronimo/blob/7af28f531505251968a4136dc56be9b4f34e33d9/modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7af28f531505251968a4136dc56be9b4f34e33d9/modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java?ref=7af28f531505251968a4136dc56be9b4f34e33d9",
                "patch": "@@ -107,6 +107,38 @@\n \n     private String sessionManager;\n \n+    \n+    public class SessionManagerConfiguration implements WebApplicationContext.Configuration {\n+\n+    \tprivate WebApplicationContext webAppContext;\n+    \t\n+    \t\n+\t\tpublic void setWebApplicationContext(WebApplicationContext webAppContext) {\n+\t\t\tthis.webAppContext = webAppContext;\n+\t\t}\n+\n+\t\tpublic WebApplicationContext getWebApplicationContext() {\n+\t\t\treturn this.webAppContext;\n+\t\t}\n+\n+\t\tpublic void configureClassPath() throws Exception {\n+\t\t}\n+\n+\t\tpublic void configureDefaults() throws Exception {\t\n+\t\t}\n+\n+\t\n+\t\tpublic void configureWebApp() throws Exception {\n+\t\t       //setup a SessionManager\n+\t        if (getSessionManager() != null) {\n+\t        \tClass clazz = Thread.currentThread().getContextClassLoader().loadClass(getSessionManager());\n+\t          Object o = clazz.newInstance();\n+\t        \tthis.webAppContext.getServletHandler().setSessionManager((SessionManager)o);\n+\t        }\n+\t\t}\n+    \t\n+    }\n+    \n     /**\n      * @deprecated never use this... this is only here because Jetty WebApplicationContext is externalizable\n      */\n@@ -213,7 +245,7 @@ public JettyWebAppContext(String objectName,\n         setClassLoader(this.webClassLoader);\n \n         setHosts(virtualHosts);\n-        this.sessionManager = sessionManager;\n+        \n         handler = new WebApplicationHandler();\n         addHandler(handler);\n \n@@ -268,26 +300,23 @@ public JettyWebAppContext(String objectName,\n         } else {\n             securityInterceptor = null;\n         }\n-//end JACC\n+//      end JACC\n         interceptor = new RequestWrappingBeforeAfter(interceptor, handler);\n         chain = interceptor;\n         contextLength = index;\n-\n+        \n         //cheat -- add jsr154 filter not as a gbean\n         FilterHolder jsr154FilterHolder = new FilterHolder(handler, \"jsr154\", JSR154Filter.class.getName());\n         handler.addFilterHolder(jsr154FilterHolder);\n         jsr154FilterHolder.setInitParameter(\"unwrappedDispatch\", \"true\");\n         handler.addFilterPathMapping(\"/*\", \"jsr154\", Dispatcher.__REQUEST | Dispatcher.__FORWARD | Dispatcher.__INCLUDE | Dispatcher.__ERROR);\n-\n-        //setup a SessionManager\n-        if (getSessionManager()!=null) {\n-        \tClass clazz = Thread.currentThread().getContextClassLoader().loadClass(getSessionManager());\n-          Object o = clazz.newInstance();\n-        \tgetServletHandler().setSessionManager((SessionManager)o);\n-        }\n-\n+        \n+        configureSessionManager (sessionManager);\n+      \n     }\n \n+    \n+\n     public String getObjectName() {\n         return objectName;\n     }\n@@ -327,7 +356,8 @@ public ClassLoader getWebClassLoader() {\n     public void doStart() throws Exception {\n         // reset the classsloader... jetty likes to set it to null when stopping\n         setClassLoader(webClassLoader);\n-\n+        \n+ \n         // merge Geronimo and Jetty Lifecycles\n         if (!isStarting()) {\n             super.start();\n@@ -487,6 +517,22 @@ public String getSessionManager(){\n     }\n \n \n+    private void configureSessionManager (String sessionManagerClassName) {\n+    \t  this.sessionManager = sessionManagerClassName;\n+          if (this.sessionManager != null) {\n+        \t  addConfiguration (SessionManagerConfiguration.class.getName());\n+          }\n+    }\n+    \n+    private void addConfiguration (String configClassName) {\n+          String[] configClassNames = getConfigurationClassNames();\n+          String[] newConfigClassNames = new String[configClassNames==null?1:configClassNames.length+1];\n+          for (int i=0;i<configClassNames.length;i++)\n+        \t  newConfigClassNames[i] = configClassNames[i];\n+          \n+          newConfigClassNames[newConfigClassNames.length-1] = configClassName;\n+    }\n+    \n     /**\n      * ObjectName must match this pattern:\n      * <p/>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/701c6db9df772f70175af0b7e5043b6a1251601a",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/537b423724cdf781eea770270d30df52e4b45226",
        "message": "GERONIMO-1000 avoid NPE on client where there is no loginService reference\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@279928 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_87",
        "file": [
            {
                "sha": "0758df8f03a0177a9dcb1bc6e2857711e633b2b3",
                "filename": "modules/security/src/java/org/apache/geronimo/security/jaas/ServerRealmConfigurationEntry.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/701c6db9df772f70175af0b7e5043b6a1251601a/modules/security/src/java/org/apache/geronimo/security/jaas/ServerRealmConfigurationEntry.java",
                "raw_url": "https://github.com/apache/geronimo/raw/701c6db9df772f70175af0b7e5043b6a1251601a/modules/security/src/java/org/apache/geronimo/security/jaas/ServerRealmConfigurationEntry.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/security/src/java/org/apache/geronimo/security/jaas/ServerRealmConfigurationEntry.java?ref=701c6db9df772f70175af0b7e5043b6a1251601a",
                "patch": "@@ -66,7 +66,9 @@ public JaasLoginModuleConfiguration generateConfiguration() {\n         Properties options = new Properties();\n         options.put(JaasLoginCoordinator.OPTION_REALM, realmName);\n         options.put(JaasLoginCoordinator.OPTION_KERNEL, kernel.getKernelName());\n-        options.put(JaasLoginCoordinator.OPTION_SERVICENAME, loginService.getObjectName());\n+        if (loginService != null) {\n+            options.put(JaasLoginCoordinator.OPTION_SERVICENAME, loginService.getObjectName());\n+        }\n \n         options.put(\"realm\", realmName);\n         options.put(\"kernel\", kernel.getKernelName());"
            },
            {
                "sha": "6464fc84bd55d752afc68d7b811a2e9da3e9d5f9",
                "filename": "modules/security/src/java/org/apache/geronimo/security/realm/GenericSecurityRealm.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/701c6db9df772f70175af0b7e5043b6a1251601a/modules/security/src/java/org/apache/geronimo/security/realm/GenericSecurityRealm.java",
                "raw_url": "https://github.com/apache/geronimo/raw/701c6db9df772f70175af0b7e5043b6a1251601a/modules/security/src/java/org/apache/geronimo/security/realm/GenericSecurityRealm.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/security/src/java/org/apache/geronimo/security/realm/GenericSecurityRealm.java?ref=701c6db9df772f70175af0b7e5043b6a1251601a",
                "patch": "@@ -156,7 +156,9 @@ public JaasLoginModuleConfiguration generateConfiguration() {\n         Map options = new HashMap();\n         options.put(JaasLoginCoordinator.OPTION_REALM, realmName);\n         options.put(JaasLoginCoordinator.OPTION_KERNEL, kernel.getKernelName());\n-        options.put(JaasLoginCoordinator.OPTION_SERVICENAME, loginService.getObjectName());\n+        if (loginService != null) {\n+            options.put(JaasLoginCoordinator.OPTION_SERVICENAME, loginService.getObjectName());\n+        }\n \n         return new JaasLoginModuleConfiguration(JaasLoginCoordinator.class.getName(), LoginModuleControlFlag.REQUIRED, options, true, realmName);\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/d337cb6a632e296ba21f49e09b861f607d3a6861",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/1a9c592308c7af3e14d9aa6eb891a056994b4cb9",
        "message": "GERONIMO-989 Make app client css-links work.  Also remove an NPE possibility\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@279717 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_88",
        "file": [
            {
                "sha": "26da9ed3f53822c40d0714aa9ce1311b2bdc7130",
                "filename": "modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/RefContext.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/d337cb6a632e296ba21f49e09b861f607d3a6861/modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/RefContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d337cb6a632e296ba21f49e09b861f607d3a6861/modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/RefContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/j2ee-builder/src/java/org/apache/geronimo/j2ee/deployment/RefContext.java?ref=d337cb6a632e296ba21f49e09b861f607d3a6861",
                "patch": "@@ -259,7 +259,7 @@ private GBeanData locateComponentInApplication(String resourceLink, URI moduleUR\n     private GBeanData locateComponentInModule(String resourceLink, URI moduleURI, String moduleType, String type, J2eeContext j2eeContext, String queryType, NamingContext context) throws UnresolvedReferenceException {\n         GBeanData match;\n         String name = resourceLink.substring(resourceLink.lastIndexOf('#') + 1);\n-        String module = moduleURI.getPath();\n+        String module = moduleURI == null? \"\": moduleURI.getPath();\n \n         if (resourceLink.indexOf('#') > -1) {\n             //presence of # means they explicitly want only gbeans in specified module in this application."
            },
            {
                "sha": "2d86b064b10dd85b3d71487c8494ed6cd058b850",
                "filename": "modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "status": "modified",
                "additions": 11,
                "deletions": 11,
                "changes": 22,
                "blob_url": "https://github.com/apache/geronimo/blob/d337cb6a632e296ba21f49e09b861f607d3a6861/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d337cb6a632e296ba21f49e09b861f607d3a6861/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/naming-builder/src/java/org/apache/geronimo/naming/deployment/ENCConfigBuilder.java?ref=d337cb6a632e296ba21f49e09b861f607d3a6861",
                "patch": "@@ -165,7 +165,7 @@ public static ObjectName getGBeanId(String j2eeType, GerGbeanLocatorType gerGbea\n     }\n \n \n-    public static void addEnvEntries(EnvEntryType[] envEntries, ComponentContextBuilder builder, ClassLoader classLoader) throws DeploymentException {\n+    static void addEnvEntries(EnvEntryType[] envEntries, ComponentContextBuilder builder, ClassLoader classLoader) throws DeploymentException {\n         for (int i = 0; i < envEntries.length; i++) {\n             EnvEntryType envEntry = envEntries[i];\n             String name = getStringValue(envEntry.getEnvEntryName());\n@@ -182,7 +182,7 @@ public static void addEnvEntries(EnvEntryType[] envEntries, ComponentContextBuil\n \n     }\n \n-    public static void addResourceRefs(EARContext earContext, URI moduleURI, ResourceRefType[] resourceRefs, Map refMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n+    static void addResourceRefs(EARContext earContext, URI moduleURI, ResourceRefType[] resourceRefs, Map refMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n         if (refMap == null) {\n             refMap = Collections.EMPTY_MAP;\n         }\n@@ -264,7 +264,7 @@ private static String getResourceContainerId(String name, String type, URI modul\n         return containerId;\n     }\n \n-    public static void addResourceEnvRefs(EARContext earContext, ResourceEnvRefType[] resourceEnvRefArray, Map refMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n+    static void addResourceEnvRefs(EARContext earContext, ResourceEnvRefType[] resourceEnvRefArray, Map refMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n         if (refMap == null) {\n             refMap = Collections.EMPTY_MAP;\n         }\n@@ -331,7 +331,7 @@ private static String getAdminObjectContainerId(String name, GerResourceEnvRefTy\n         return containerId;\n     }\n \n-    public static void addMessageDestinationRefs(RefContext refContext, NamingContext namingContext, MessageDestinationRefType[] messageDestinationRefs, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n+    static void addMessageDestinationRefs(RefContext refContext, NamingContext namingContext, MessageDestinationRefType[] messageDestinationRefs, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n         for (int i = 0; i < messageDestinationRefs.length; i++) {\n             MessageDestinationRefType messageDestinationRef = messageDestinationRefs[i];\n             String name = getStringValue(messageDestinationRef.getMessageDestinationRefName());\n@@ -358,7 +358,7 @@ public static void addMessageDestinationRefs(RefContext refContext, NamingContex\n                     linkName = destination.getAdminObjectLink().trim();\n                 }\n             } else {\n-                //well, we know for sure an admin object is not going to be defined in a modules that can have a message-destination \n+                //well, we know for sure an admin object is not going to be defined in a modules that can have a message-destination\n                 int pos = linkName.indexOf('#');\n                 if (pos > -1) {\n                     linkName = linkName.substring(pos + 1);\n@@ -375,7 +375,7 @@ public static void addMessageDestinationRefs(RefContext refContext, NamingContex\n \n     }\n \n-    public static void addEJBRefs(NamingContext ejbContext, RefContext refContext, URI moduleURI, EjbRefType[] ejbRefs, Map ejbRefMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n+    static void addEJBRefs(NamingContext earContext, NamingContext ejbContext, RefContext refContext, URI moduleURI, EjbRefType[] ejbRefs, Map ejbRefMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n         J2eeContext j2eeContext = ejbContext.getJ2eeContext();\n         for (int i = 0; i < ejbRefs.length; i++) {\n             EjbRefType ejbRef = ejbRefs[i];\n@@ -418,7 +418,7 @@ public static void addEJBRefs(NamingContext ejbContext, RefContext refContext, U\n                                 String cssLink = remoteRef.getCssLink().trim();\n                                 //TODO is this correct?\n                                 String moduleType = null;\n-                                cssBean = refContext.locateComponentName(cssLink, moduleURI, moduleType, NameFactory.CORBA_CSS, j2eeContext, ejbContext, \"css gbean\");\n+                                cssBean = refContext.locateComponentName(cssLink, moduleURI, moduleType, NameFactory.CORBA_CSS, earContext.getJ2eeContext(), earContext, \"css gbean\");\n                             } else {\n                                 GerCssType css = remoteRef.getCss();\n                                 cssBean = NameFactory.getComponentName(getStringValue(css.getDomain()),\n@@ -427,7 +427,7 @@ public static void addEJBRefs(NamingContext ejbContext, RefContext refContext, U\n                                     getStringValue(css.getModule()),\n                                     getStringValue(css.getName()),\n                                     getStringValue(NameFactory.CORBA_CSS),\n-                                    j2eeContext);\n+                                    earContext.getJ2eeContext());\n                             }\n                             ejbReference = refContext.getCORBARemoteRef(new URI(getStringValue(remoteRef.getNsCorbaloc())),\n                                                                         getStringValue(remoteRef.getName()),\n@@ -462,7 +462,7 @@ public static void addEJBRefs(NamingContext ejbContext, RefContext refContext, U\n         }\n     }\n \n-    public static void addEJBLocalRefs(NamingContext ejbContext, RefContext refContext, URI moduleURI, EjbLocalRefType[] ejbLocalRefs, Map ejbLocalRefMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n+    static void addEJBLocalRefs(NamingContext ejbContext, RefContext refContext, URI moduleURI, EjbLocalRefType[] ejbLocalRefs, Map ejbLocalRefMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n         J2eeContext j2eeContext = ejbContext.getJ2eeContext();\n         for (int i = 0; i < ejbLocalRefs.length; i++) {\n             EjbLocalRefType ejbLocalRef = ejbLocalRefs[i];\n@@ -515,7 +515,7 @@ public static void addEJBLocalRefs(NamingContext ejbContext, RefContext refConte\n     }\n \n     //TODO current implementation does not deal with portComponentRef links.\n-    public static void addServiceRefs(EARContext earContext, Module module, ServiceRefType[] serviceRefs, Map serviceRefMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n+    static void addServiceRefs(EARContext earContext, Module module, ServiceRefType[] serviceRefs, Map serviceRefMap, ClassLoader cl, ComponentContextBuilder builder) throws DeploymentException {\n \n         RefContext refContext = earContext.getRefContext();\n \n@@ -752,7 +752,7 @@ public static Map buildComponentContext(EARContext earContext,\n \n         RefContext refContext = earContext.getRefContext();\n         // ejb-ref\n-        addEJBRefs(ejbContext, refContext, moduleURI, ejbRefs, mapEjbRefs(gerEjbRefs), cl, builder);\n+        addEJBRefs(earContext, ejbContext, refContext, moduleURI, ejbRefs, mapEjbRefs(gerEjbRefs), cl, builder);\n \n         // ejb-local-ref\n         addEJBLocalRefs(ejbContext, refContext, moduleURI, ejbLocalRefs, mapEjbLocalRefs(gerEjbLocalRef), cl, builder);"
            },
            {
                "sha": "a240f34e5c9894da7ef895ae3de2a5ea1f0d924c",
                "filename": "modules/naming-builder/src/test/org/apache/geronimo/naming/deployment/MessageDestinationTest.java",
                "status": "renamed",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/d337cb6a632e296ba21f49e09b861f607d3a6861/modules/naming-builder/src/test/org/apache/geronimo/naming/deployment/MessageDestinationTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d337cb6a632e296ba21f49e09b861f607d3a6861/modules/naming-builder/src/test/org/apache/geronimo/naming/deployment/MessageDestinationTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/naming-builder/src/test/org/apache/geronimo/naming/deployment/MessageDestinationTest.java?ref=d337cb6a632e296ba21f49e09b861f607d3a6861",
                "patch": "@@ -14,7 +14,7 @@\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  */\n-package org.apache.geronimo.naming;\n+package org.apache.geronimo.naming.deployment;\n \n import java.net.URI;\n import java.util.Map;",
                "previous_filename": "modules/naming-builder/src/test/org/apache/geronimo/naming/MessageDestinationTest.java"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/9f5925821d4ce102c8f423fc491d363d8266386d",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/87e0e873a0d65dfecb41787fdac31e8e4b6bae9c",
        "message": "GERONIMO-768.  Fix 2 NPEs for doc/lit/wrapped with no in or out params corresponding to an empty element\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@219289 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_89",
        "file": [
            {
                "sha": "fb0bbf2c75bbd7ef8cb2550b2e0fd149622a1486",
                "filename": "modules/axis-builder/src/java/org/apache/geronimo/axis/builder/HeavyweightOperationDescBuilder.java",
                "status": "modified",
                "additions": 24,
                "deletions": 12,
                "changes": 36,
                "blob_url": "https://github.com/apache/geronimo/blob/9f5925821d4ce102c8f423fc491d363d8266386d/modules/axis-builder/src/java/org/apache/geronimo/axis/builder/HeavyweightOperationDescBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/9f5925821d4ce102c8f423fc491d363d8266386d/modules/axis-builder/src/java/org/apache/geronimo/axis/builder/HeavyweightOperationDescBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/axis-builder/src/java/org/apache/geronimo/axis/builder/HeavyweightOperationDescBuilder.java?ref=9f5925821d4ce102c8f423fc491d363d8266386d",
                "patch": "@@ -229,12 +229,21 @@ public OperationDesc buildOperationDesc() throws DeploymentException {\n \n             // schemaType should be complex using xsd:sequence compositor\n             SchemaParticle parametersType = operationType.getContentModel();\n-            if (SchemaParticle.ELEMENT == parametersType.getParticleType()) {\n-                expectedInParams.add(parametersType.getName().getLocalPart());\n-            } else if (SchemaParticle.SEQUENCE == parametersType.getParticleType()) {\n-                SchemaParticle[] parameters = parametersType.getParticleChildren();\n-                for (int i = 0; i < parameters.length; i++) {\n-                    expectedInParams.add(parameters[i].getName().getLocalPart());\n+            //parametersType can be null if the element has empty content such as\n+//            <element name=\"getMarketSummary\">\n+//             <complexType>\n+//              <sequence/>\n+//             </complexType>\n+//            </element>\n+\n+            if (parametersType != null) {\n+                if (SchemaParticle.ELEMENT == parametersType.getParticleType()) {\n+                    expectedInParams.add(parametersType.getName().getLocalPart());\n+                } else if (SchemaParticle.SEQUENCE == parametersType.getParticleType()) {\n+                    SchemaParticle[] parameters = parametersType.getParticleChildren();\n+                    for (int i = 0; i < parameters.length; i++) {\n+                        expectedInParams.add(parameters[i].getName().getLocalPart());\n+                    }\n                 }\n             }\n             if (!inParamNames.equals(expectedInParams)) {\n@@ -297,12 +306,15 @@ public OperationDesc buildOperationDesc() throws DeploymentException {\n \n             // schemaType should be complex using xsd:sequence compositor\n             SchemaParticle parametersType = operationType.getContentModel();\n-            if (SchemaParticle.ELEMENT == parametersType.getParticleType()) {\n-                expectedOutParams.add(parametersType.getName().getLocalPart());\n-            } else if (SchemaParticle.SEQUENCE == parametersType.getParticleType()) {\n-                SchemaParticle[] parameters = parametersType.getParticleChildren();\n-                for (int i = 0; i < parameters.length; i++) {\n-                    expectedOutParams.add(parameters[i].getName().getLocalPart());\n+            //again, no output can give null parametersType\n+            if (parametersType != null) {\n+                if (SchemaParticle.ELEMENT == parametersType.getParticleType()) {\n+                    expectedOutParams.add(parametersType.getName().getLocalPart());\n+                } else if (SchemaParticle.SEQUENCE == parametersType.getParticleType()) {\n+                    SchemaParticle[] parameters = parametersType.getParticleChildren();\n+                    for (int i = 0; i < parameters.length; i++) {\n+                        expectedOutParams.add(parameters[i].getName().getLocalPart());\n+                    }\n                 }\n             }\n             if (!outParamNames.equals(expectedOutParams)) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/9b15dd1e8491ca60ccae0929b4b0e91e682c33d6",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/fa3775516be276c9aa6205e23574a6156ad3b71c",
        "message": "fix npe if login fails.  This code needs to be cleaned up\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@190366 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_90",
        "file": [
            {
                "sha": "3a4f071bcd8daffa5281c81a8c6a9ab35878c5a0",
                "filename": "modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/geronimo/blob/9b15dd1e8491ca60ccae0929b4b0e91e682c33d6/modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/9b15dd1e8491ca60ccae0929b4b0e91e682c33d6/modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java?ref=9b15dd1e8491ca60ccae0929b4b0e91e682c33d6",
                "patch": "@@ -106,6 +106,7 @@ public String getMainClassName() {\n     }\n \n     public void main(final String[] args) throws Exception {\n+        //TODO reorganize this so it makes more sense.  maybe use an interceptor stack.\n         Thread thread = Thread.currentThread();\n \n         ClassLoader oldClassLoader = thread.getContextClassLoader();\n@@ -164,7 +165,9 @@ public Object run() {\n \n             thread.setContextClassLoader(oldClassLoader);\n             transactionContextManager.setContext(oldTransactionContext);\n-            currentTransactionContext.commit();\n+            if (currentTransactionContext != null) {\n+                currentTransactionContext.commit();\n+            }\n             ContextManager.setCurrentCaller(oldCurrentCaller);\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/797d4cca2e578e07e23bb7a40e009d8ecf5e3b2e",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/2ec865bfcb84e11235d3aab1af790b32c22b20e1",
        "message": "Put in work-around for NPE from NIO impl.\n\nSelectorManager will now not stop when a key is canceled.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@45374 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_91",
        "file": [
            {
                "sha": "68dba63e9aacb8abd9e6e9f4a1db6c8da882db17",
                "filename": "modules/network/src/java/org/apache/geronimo/network/SelectorManager.java",
                "status": "modified",
                "additions": 51,
                "deletions": 37,
                "changes": 88,
                "blob_url": "https://github.com/apache/geronimo/blob/797d4cca2e578e07e23bb7a40e009d8ecf5e3b2e/modules/network/src/java/org/apache/geronimo/network/SelectorManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/797d4cca2e578e07e23bb7a40e009d8ecf5e3b2e/modules/network/src/java/org/apache/geronimo/network/SelectorManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/network/src/java/org/apache/geronimo/network/SelectorManager.java?ref=797d4cca2e578e07e23bb7a40e009d8ecf5e3b2e",
                "patch": "@@ -41,7 +41,7 @@\n  * The SelectorManager will manage one Selector and the thread that checks\n  * the selector.\n  *\n- * @version $Revision: 1.6 $ $Date: 2004/04/25 02:03:37 $\n+ * @version $Revision: 1.7 $ $Date: 2004/05/01 23:16:22 $\n  */\n public class SelectorManager implements Runnable, GBean {\n \n@@ -129,49 +129,52 @@ public void run() {\n             log.debug(\"Selector Work thread has started.\");\n             log.debug(\"Selector Manager timeout: \"+timeout);\n             while (running) {\n+                try {\n \n-                synchronized (guard) { /* do nothing */\n-                    log.trace(\"Waiting for selector to return.\");\n-                }\n-                \n-                if (selector.select(timeout) == 0) continue;\n-                \n-                // Get a java.util.Set containing the SelectionKey objects for\n-                // all channels that are ready for I/O.\n-                Set keys = selector.selectedKeys();\n-\n-                // Use a java.util.Iterator to loop through the selected keys\n-                for (Iterator i = keys.iterator(); i.hasNext();) {\n-                    final SelectionKey key = (SelectionKey) i.next();\n-\n-                    if (key.isReadable()) { \n-                        log.trace(\"-OP_READ \" + key);\n-                        key.interestOps(key.interestOps() & (~SelectionKey.OP_READ));\n-                    }\n-                    if (key.isWritable()) {\n-                        log.trace(\"-OP_WRITE \" + key);\n-                        key.interestOps(key.interestOps() & (~SelectionKey.OP_WRITE));\n-                    }\n-                    if (key.isAcceptable()) {\n-                        log.trace(\"-OP_ACCEPT \" + key);\n-                        key.interestOps(key.interestOps() & (~SelectionKey.OP_ACCEPT));\n+                    synchronized (guard) { /* do nothing */\n+                        log.trace(\"Waiting for selector to return.\");\n                     }\n \n-                    threadPool.getWorkManager().execute(new Runnable() {\n-                        public void run() {\n-                            try {\n-                                ((SelectionEventListner) key.attachment()).selectionEvent(key);\n-                            } catch (Throwable e) {\n-                                log.trace(\"Request Failed.\", e);\n-                            }\n+                    if (selector.select(timeout) == 0) continue;\n+\n+                    // Get a java.util.Set containing the SelectionKey objects for\n+                    // all channels that are ready for I/O.\n+                    Set keys = selector.selectedKeys();\n+\n+                    // Use a java.util.Iterator to loop through the selected keys\n+                    for (Iterator i = keys.iterator(); i.hasNext();) {\n+                        final SelectionKey key = (SelectionKey) i.next();\n+\n+                        if (key.isReadable()) {\n+                            log.trace(\"-OP_READ \" + key);\n+                            key.interestOps(key.interestOps() & (~SelectionKey.OP_READ));\n+                        }\n+                        if (key.isWritable()) {\n+                            log.trace(\"-OP_WRITE \" + key);\n+                            key.interestOps(key.interestOps() & (~SelectionKey.OP_WRITE));\n+                        }\n+                        if (key.isAcceptable()) {\n+                            log.trace(\"-OP_ACCEPT \" + key);\n+                            key.interestOps(key.interestOps() & (~SelectionKey.OP_ACCEPT));\n                         }\n-                    });\n \n-                    i.remove(); // Remove the key from the set of selected keys\n+                        threadPool.getWorkManager().execute(new Runnable() {\n+                            public void run() {\n+                                try {\n+                                    ((SelectionEventListner) key.attachment()).selectionEvent(key);\n+                                } catch (Throwable e) {\n+                                    log.trace(\"Request Failed.\", e);\n+                                }\n+                            }\n+                        });\n+\n+                        i.remove(); // Remove the key from the set of selected keys\n+                    }\n+                    \n+                } catch (CancelledKeyException e) {\n+                    log.debug(\"Key has Been Cancelled: \"+e);\n                 }\n             }\n-        } catch (CancelledKeyException e) {\n-            log.debug(\"Key has Been Cancelled: \"+e);\n         } catch (IOException e) {\n             log.warn(\"IOException occured.\", e);\n         } catch (InterruptedException e) {\n@@ -188,6 +191,13 @@ public SelectionKey register(SelectableChannel selectableChannel, int ops, Selec\n             return key;\n         }\n     }\n+    public void closeChannel(SelectableChannel selectableChannel) throws IOException {\n+        synchronized (guard) {\n+            selector.wakeup();\n+            selectableChannel.keyFor(selector).cancel();\n+            selectableChannel.close();\n+        }\n+    }\n \n     public void addInterestOps(SelectionKey selectorKey, int addOpts) {\n         synchronized (guard) {\n@@ -196,6 +206,10 @@ public void addInterestOps(SelectionKey selectorKey, int addOpts) {\n         }\n     }\n \n+    public void wakeup() {\n+        selector.wakeup();\n+    }\n+\n     public void setGBeanContext(GBeanContext context) {\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/1244d3711e746dc2153050a715f870fb60816fbc",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/f342db846120e6367c321ab9c630036216c40b69",
        "message": "GERONIMO-5887 NPE in WebBeansContext init process when starting geronimo jetty bulid\n\n---temp solution to force jetty to wire deployed web app with openwebbeans-impl so that it could search \"META-INF\\openwebbeans\\openwebbeans.properties\" to get securityService impl class\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1087627 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_92",
        "file": [
            {
                "sha": "ace1bd5bc6c0802c8da39ed33801090b25019fa3",
                "filename": "plugins/jetty8/jetty8-deployer/src/main/plan/plan.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/1244d3711e746dc2153050a715f870fb60816fbc/plugins/jetty8/jetty8-deployer/src/main/plan/plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/1244d3711e746dc2153050a715f870fb60816fbc/plugins/jetty8/jetty8-deployer/src/main/plan/plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/jetty8/jetty8-deployer/src/main/plan/plan.xml?ref=1244d3711e746dc2153050a715f870fb60816fbc",
                "patch": "@@ -922,6 +922,7 @@\n                         <type>car</type>\n                     </dependency>\n                 </dependencies>\n+                <import-package>org.apache.webbeans.config</import-package>                \n             </environment>\n         </xml-attribute>\n     </gbean>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/c5ebb5984e859401d2b12a6e0088c5ad9b8dce8a",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/a245a4a7a8431127b7399de77b98ce6605718be8",
        "message": "Lower TSSLink GBean's priority so that it starts after EjbModule GBean to avoid a NPE within org.apache.geronimo.corba.AdapterWrapper.start(ORB, POA, Policy) method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1086149 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_93",
        "file": [
            {
                "sha": "40f8d7e9fe2ab49b551639410605029b10b0a76b",
                "filename": "plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/TSSLinkGBean.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/c5ebb5984e859401d2b12a6e0088c5ad9b8dce8a/plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/TSSLinkGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/c5ebb5984e859401d2b12a6e0088c5ad9b8dce8a/plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/TSSLinkGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/corba/geronimo-corba/src/main/java/org/apache/geronimo/corba/TSSLinkGBean.java?ref=c5ebb5984e859401d2b12a6e0088c5ad9b8dce8a",
                "patch": "@@ -39,6 +39,7 @@\n         //this may not work properly due to variable j2eeType in ejbs.\n         infoBuilder.addReference(\"EJB\", EjbDeployment.class);\n         infoBuilder.setConstructor(new String[]{\"jndiNames\", \"TSSBean\", \"EJB\"});\n+        infoBuilder.setPriority(50);\n \n         GBEAN_INFO = infoBuilder.getBeanInfo();\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/ed280dbd2c255ed5441d4a1ad535d685846b1ac0",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/09e8a058ae5be8b1a869a7909ffa4c228c37e738",
        "message": "Fix NPE for createServlet method, we only record the servlet instance when web.xml processing is finished and security store is not null\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@1001395 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_94",
        "file": [
            {
                "sha": "7b433b0deffff62a543e52fb89fa3b6eb17bd204",
                "filename": "plugins/tomcat/geronimo-tomcat7/src/main/java/org/apache/geronimo/tomcat/core/GeronimoApplicationContext.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/ed280dbd2c255ed5441d4a1ad535d685846b1ac0/plugins/tomcat/geronimo-tomcat7/src/main/java/org/apache/geronimo/tomcat/core/GeronimoApplicationContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/ed280dbd2c255ed5441d4a1ad535d685846b1ac0/plugins/tomcat/geronimo-tomcat7/src/main/java/org/apache/geronimo/tomcat/core/GeronimoApplicationContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/tomcat/geronimo-tomcat7/src/main/java/org/apache/geronimo/tomcat/core/GeronimoApplicationContext.java?ref=ed280dbd2c255ed5441d4a1ad535d685846b1ac0",
                "patch": "@@ -78,7 +78,7 @@ public Dynamic addServlet(String servletName, String servletClass) throws Illega\n     @Override\n     public <T extends Servlet> T createServlet(Class<T> c) throws ServletException  {\n         T servlet = super.createServlet(c);\n-        if (!context.getConfigured() || webSecurityConstraintStore == null) {\n+        if (context.getConfigured() && webSecurityConstraintStore != null) {\n             webSecurityConstraintStore.addContainerCreatedDynamicServlet(servlet);\n         }\n         return servlet;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/bb71372cd964b9408bb859f815c0cb5e1a116fa2",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/a3cf25cd331457820c0ae3e826c86e444761caf6",
        "message": "GERONIMO-4931 Enable ActiveMQ plugin in the OSGI environment\nUpdate some import/export settings in felix-maven-plugin, also, add the geronimo-naming-builder as the required bundle of connector-deployer-1.6 to avoid the NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@833312 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_95",
        "file": [
            {
                "sha": "0a0065f83e0f4b093e9d7f71ca223acceebf7cb4",
                "filename": "plugins/activemq/geronimo-activemq/pom.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/geronimo/blob/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/activemq/geronimo-activemq/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/activemq/geronimo-activemq/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/activemq/geronimo-activemq/pom.xml?ref=bb71372cd964b9408bb859f815c0cb5e1a116fa2",
                "patch": "@@ -64,8 +64,9 @@\n         </dependency>\n \n         <dependency>\n-            <groupId>org.slf4j</groupId>\n-            <artifactId>jcl-over-slf4j</artifactId>\n+            <groupId>org.ops4j.pax.logging</groupId>\n+            <artifactId>pax-logging-api</artifactId>\n+            <version>1.4</version>\n         </dependency>\n \n         <dependency>"
            },
            {
                "sha": "fa549d33568989d1633bcfa610d8e78c03d47482",
                "filename": "plugins/connector-1_6/connector-deployer-1_6/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/connector-1_6/connector-deployer-1_6/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/connector-1_6/connector-deployer-1_6/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/connector-1_6/connector-deployer-1_6/pom.xml?ref=bb71372cd964b9408bb859f815c0cb5e1a116fa2",
                "patch": "@@ -118,7 +118,7 @@\n                     <instructions>\n                         <!--packages containing \"impl\" or \"internal\" are excluded by default -->\n                         <Import-Package>org.apache.xmlbeans.impl.schema;version=\"2.4\",org.apache.geronimo.deployment.xbeans.impl,org.apache.geronimo.deployment.javabean.xbeans.impl</Import-Package>\n-                        <Require-Bundle>org.apache.geronimo.framework.geronimo-service-builder</Require-Bundle>\n+                        <Require-Bundle>org.apache.geronimo.framework.geronimo-service-builder,org.apache.geronimo.modules.geronimo-naming-builder</Require-Bundle>\n                         <!--<_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>-->\n                     </instructions>\n                     <instance>"
            },
            {
                "sha": "09b3682b3f109040947e1832d5a64d319102582b",
                "filename": "plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/connector-1_6/geronimo-connector-builder-1_6/pom.xml?ref=bb71372cd964b9408bb859f815c0cb5e1a116fa2",
                "patch": "@@ -100,7 +100,7 @@\n                     <instructions>\n                         <!--packages containing \"impl\" or \"internal\" are excluded by default -->\n                         <Import-Package>org.apache.xmlbeans.impl.schema;version=\"2.4\",org.apache.geronimo.deployment.xbeans.impl,org.apache.geronimo.deployment.javabean.xbeans.impl,*</Import-Package>\n-                        <Require-Bundle>org.apache.geronimo.framework.geronimo-service-builder</Require-Bundle>\n+                        <Require-Bundle>org.apache.geronimo.framework.geronimo-service-builder,org.apache.geronimo.modules.geronimo-naming-builder</Require-Bundle>\n                         <!--<_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>-->\n                     </instructions>\n                 </configuration>"
            },
            {
                "sha": "a8dab4c14492b30c7bbcbf1ef66ffc3fc483cd18",
                "filename": "plugins/j2ee/geronimo-naming-builder/pom.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/j2ee/geronimo-naming-builder/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/bb71372cd964b9408bb859f815c0cb5e1a116fa2/plugins/j2ee/geronimo-naming-builder/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/plugins/j2ee/geronimo-naming-builder/pom.xml?ref=bb71372cd964b9408bb859f815c0cb5e1a116fa2",
                "patch": "@@ -73,8 +73,14 @@\n                 <artifactId>maven-bundle-plugin</artifactId>\n                 <configuration>\n                     <instructions>\n-                        <Import-Package>org.apache.xmlbeans.impl.schema;version=\"2.4\",*</Import-Package>\n                         <!--<_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>-->\n+                        <Import-Package>org.apache.xmlbeans.impl.schema,*</Import-Package>\n+                        <Export-Package>\n+                            schemaorg_apache_xmlbeans*,\n+                            org.apache.geronimo.xbeans.geronimo.naming*,\n+                            org.apache.geronimo.xbeans.geronimo.naming.impl,\n+                            org.apache.geronimo.naming.deployment*\n+                        </Export-Package>\n                     </instructions>\n                 </configuration>\n             </plugin>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/f6a099eda4a4b6ee4d371a02879f77b00d8ce996",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/7bc7f9515306b9de736dd79120be483f34cbcd8a",
        "message": "GERONIMO-3808 Fix shutdown NPE and provide better error when accessing java:comp env on a non-initialized thread. Port from 2.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@619158 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_96",
        "file": [
            {
                "sha": "109d92c39f90b01ea5b915c57a4b2ca0ba5a9abf",
                "filename": "framework/configs/rmi-naming/src/main/plan/plan.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/f6a099eda4a4b6ee4d371a02879f77b00d8ce996/framework/configs/rmi-naming/src/main/plan/plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/f6a099eda4a4b6ee4d371a02879f77b00d8ce996/framework/configs/rmi-naming/src/main/plan/plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/configs/rmi-naming/src/main/plan/plan.xml?ref=f6a099eda4a4b6ee4d371a02879f77b00d8ce996",
                "patch": "@@ -32,7 +32,9 @@\n \n     <gbean name=\"GlobalContext\" class=\"org.apache.geronimo.gjndi.GlobalContextGBean\"/>\n \n-    <gbean name=\"JavaCompContext\" class=\"org.apache.geronimo.gjndi.JavaCompContextGBean\"/>\n+    <gbean name=\"JavaCompContext\" class=\"org.apache.geronimo.gjndi.JavaCompContextGBean\">\n+        <dependency><name>GlobalContext</name></dependency>\n+    </gbean>\n \n     <gbean name=\"JavaContext\" class=\"org.apache.geronimo.gjndi.WritableContextGBean\">\n         <attribute name=\"nameInNamespace\">java:</attribute>"
            },
            {
                "sha": "1aa36af47464064ec827a50515c843c92b4056ce",
                "filename": "framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/JavaCompContextGBean.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/geronimo/blob/f6a099eda4a4b6ee4d371a02879f77b00d8ce996/framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/JavaCompContextGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/f6a099eda4a4b6ee4d371a02879f77b00d8ce996/framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/JavaCompContextGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/framework/modules/geronimo-naming/src/main/java/org/apache/geronimo/gjndi/JavaCompContextGBean.java?ref=f6a099eda4a4b6ee4d371a02879f77b00d8ce996",
                "patch": "@@ -29,7 +29,11 @@\n  */\n public class JavaCompContextGBean extends ContextFlyweight {\n     protected Context getContext() {\n-        return RootContext.getComponentContext();\n+        Context context = RootContext.getComponentContext();\n+        if (context == null) {\n+            throw new NullPointerException(\"You have accessed the java:comp jndi context on a thread that has not initialized it\");\n+        }\n+        return context;\n     }\n \n     public String getNameInNamespace() throws NamingException {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/d9799efa34ae730c0256e57088701b9a3dc1fa01",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/b46073d30b4b0e4208d158fab7b291a9227cbb31",
        "message": "It is only when the module is an EAR, that persistenceUnitBuilders should\nbe invoked. The previous code was causing a NPE when standalone modules\nwere built.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@515504 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_97",
        "file": [
            {
                "sha": "030982545c02b79c6f168227e24829acb289b311",
                "filename": "modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/d9799efa34ae730c0256e57088701b9a3dc1fa01/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d9799efa34ae730c0256e57088701b9a3dc1fa01/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-j2ee-builder/src/main/java/org/apache/geronimo/j2ee/deployment/EARConfigBuilder.java?ref=d9799efa34ae730c0256e57088701b9a3dc1fa01",
                "patch": "@@ -559,11 +559,11 @@ public DeploymentContext buildConfiguration(boolean inPlaceDeployment, Artifact\n                 serviceBuilders.build(geronimoApplication, earContext, earContext);\n             }\n             \n-            // process persistence unit in EAR library directory\n-            persistenceUnitBuilders.build(geronimoApplication, earContext, earContext);\n-            \n-            // Create the J2EEApplication managed object\n             if (ConfigurationModuleType.EAR == applicationType) {\n+                // process persistence unit in EAR library directory\n+                persistenceUnitBuilders.build(geronimoApplication, earContext, earContext);\n+                \n+                // Create the J2EEApplication managed object\n                 GBeanData gbeanData = new GBeanData(earContext.getModuleName(), J2EEApplicationImpl.GBEAN_INFO);\n                 try {\n                     String originalSpecDD = applicationInfo.getOriginalSpecDD();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/5910be328614934894b4aaf099e3cfd91ff470bc",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/d000a506db3a9d1891f89a01c236e28a34b4235d",
        "message": "GERONIMO-2551 Plugin hits NPE if maven-metadata listed artifact doesn't exist or JAR artifact maven-metadata doesn't exist\n  o Applied the patch provided by Donald Woods.  Thanks Donald!\n  o Check for null file handle, PluginMetadata and log appropriate messages.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@487158 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_98",
        "file": [
            {
                "sha": "26b5ccbc2b2b53edceb79b43d89471f8c43aab2d",
                "filename": "modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "status": "modified",
                "additions": 8,
                "deletions": 1,
                "changes": 9,
                "blob_url": "https://github.com/apache/geronimo/blob/5910be328614934894b4aaf099e3cfd91ff470bc/modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "raw_url": "https://github.com/apache/geronimo/raw/5910be328614934894b4aaf099e3cfd91ff470bc/modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-system/src/main/java/org/apache/geronimo/system/plugin/PluginInstallerGBean.java?ref=5910be328614934894b4aaf099e3cfd91ff470bc",
                "patch": "@@ -676,6 +676,10 @@ private void downloadArtifact(Artifact configID, Map metadata, URL[] repos, Stri\n             OpenResult result = openStream(configID, repos, username, password, monitor);\n             try {\n                 File tempFile = downloadFile(result, monitor);\n+                if (tempFile == null) {\n+                    log.error(\"Null filehandle was returned for \"+configID);\n+                    throw new IllegalArgumentException(\"Null filehandle was returned for \"+configID);\n+                }\n                 PluginMetadata pluginData = ((PluginMetadata) metadata.get(configID));\n                 // Only bother with the hash if we got it from a source other than the download file itself\n                 PluginMetadata.Hash hash = pluginData == null ? null : pluginData.getHash();\n@@ -702,7 +706,10 @@ private void downloadArtifact(Artifact configID, Map metadata, URL[] repos, Stri\n                     log.warn(\"Unable to delete temporary download file \"+tempFile.getAbsolutePath());\n                     tempFile.deleteOnExit();\n                 }\n-                installConfigXMLData(result.getConfigID(), pluginData);\n+                if (pluginData != null)\n+                    installConfigXMLData(result.getConfigID(), pluginData);\n+                else\n+                    log.debug(\"No config XML data to install.\");\n                 if(dependency) {\n                     monitor.getResults().addDependencyInstalled(configID);\n                     configID = result.getConfigID();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/8ca6246314388203ae80aff062f3ae4060b19836",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/257b3d1a2772cd56cf77dcf31c7b928124258ac8",
        "message": "Fix for corba NPE's when corba is configured. This places the corba-spec jar ahead of the j2ee spec jar in the classpath (i.e. it's a hack)\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@380975 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_99",
        "file": [
            {
                "sha": "b05dccade06ba41b9220f87662461ab51d698c09",
                "filename": "configs/rmi-naming/project.xml",
                "status": "modified",
                "additions": 10,
                "deletions": 0,
                "changes": 10,
                "blob_url": "https://github.com/apache/geronimo/blob/8ca6246314388203ae80aff062f3ae4060b19836/configs/rmi-naming/project.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/8ca6246314388203ae80aff062f3ae4060b19836/configs/rmi-naming/project.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/configs/rmi-naming/project.xml?ref=8ca6246314388203ae80aff062f3ae4060b19836",
                "patch": "@@ -59,6 +59,16 @@\n                  <geronimo.dependency>true</geronimo.dependency>\n              </properties>\n         </dependency>\n+\n+    <!-- corba spec is needed before spec-j2ee to pick up corba api that works with geronimo -->\n+        <dependency>\n+            <groupId>geronimo-spec</groupId>\n+            <artifactId>geronimo-spec-corba</artifactId>\n+            <version>${geronimo_spec_corba_version}</version>\n+            <properties>\n+                 <geronimo.dependency>true</geronimo.dependency>\n+             </properties>\n+        </dependency>\n         <dependency>\n             <groupId>org.apache.geronimo.specs</groupId>\n             <artifactId>geronimo-j2ee_1.4_spec</artifactId>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/0b06ee141f1fa2177bcb0d5a8564d09735e19b3c",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/8aa29bb04b3ec156240642234cfc126db4590539",
        "message": "GERONIMO-728 - Upgrade from Jetty 5.1.4rc0 to 5.1.4 to Fix NPE bug in Jetty when port is in use - a common problem users run into when they first try to run geronimo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@219660 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_100",
        "file": [
            {
                "sha": "058bb7ea8e5d26c176245aebba473739eb7fc4f9",
                "filename": "etc/project.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/0b06ee141f1fa2177bcb0d5a8564d09735e19b3c/etc/project.properties",
                "raw_url": "https://github.com/apache/geronimo/raw/0b06ee141f1fa2177bcb0d5a8564d09735e19b3c/etc/project.properties",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/etc/project.properties?ref=0b06ee141f1fa2177bcb0d5a8564d09735e19b3c",
                "patch": "@@ -142,7 +142,7 @@ javacc_version=2.1\n jaxb_ri_version=SNAPSHOT\n jdbm_version=0.20-dev\n jelly_velocity_tags_version=1.0\n-jetty_version=5.1.4rc0\n+jetty_version=5.1.4\n jmock_version=1.0.1\n jrms_version=1.1\n juddi_version=SNAPSHOT"
            }
        ]
    }
]
[
    {
        "commit": "https://github.com/apache/geronimo/commit/2832ada49e71bb3156e1a4aac47118395f45e115",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/6e3fa26cd899f97080e8fb44e9d49fcf7b52172c",
        "message": "there's a faint chance someone, sometime, somewhere will deploy a ws client with the wsdl pointing to the actual location of the ws, and no security required.  In this unlikely scenario, avoid an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@159341 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_101",
        "file": [
            {
                "sha": "05ec474fc9dada1023552f7602d7d92e78c842d7",
                "filename": "modules/axis-builder/src/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/2832ada49e71bb3156e1a4aac47118395f45e115/modules/axis-builder/src/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/2832ada49e71bb3156e1a4aac47118395f45e115/modules/axis-builder/src/java/org/apache/geronimo/axis/builder/AxisBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/axis-builder/src/java/org/apache/geronimo/axis/builder/AxisBuilder.java?ref=2832ada49e71bb3156e1a4aac47118395f45e115",
                "patch": "@@ -252,7 +252,7 @@ public void buildSEIFactoryMap(Class serviceInterface, Definition definition, Ma\n \n             ServiceEndpointInterfaceMappingType[] endpointMappings = mapping.getServiceEndpointInterfaceMappingArray();\n \n-            String credentialsName = (String) credentialsNameMap.get(port.getName());\n+            String credentialsName = credentialsNameMap == null? null: (String) credentialsNameMap.get(port.getName());\n \n             //port type corresponds to SEI\n             List operations = portType.getOperations();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/afe820227771b9b44e7ffbda239da4e6eaba70ac",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/46889e646949ddd6270b74c66047e736b011ddee",
        "message": "Move imported tx functionality towards TransactionContextManager.  Replace almost all uses of TransactionContext.get/setContext with methods on TransactionContextManager.  Prevent NPEs when there is no TransactionContext. This represents progress on GERONIMO-347 and GERONIMO-352\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/trunk@53780 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_102",
        "file": [
            {
                "sha": "6dbbf0b4229f7f0fd75b11755214d07b981f5898",
                "filename": "modules/assembly/src/plan/client-system-plan.xml",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/client-system-plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/client-system-plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/assembly/src/plan/client-system-plan.xml?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -74,4 +74,12 @@ specific services - those should be provided by children.\n         <attribute name=\"maxFileSize\" type=\"java.lang.String\">10MB</attribute>\n         <reference name=\"ServerInfo\">geronimo.client:role=ServerInfo</reference>\n     </gbean>\n+\n+    <!-- Naming properties -->\n+    <gbean name=\"geronimo.client:role=NamingProperties\" class=\"org.apache.geronimo.system.properties.NamingProperties\">\n+        <attribute name=\"namingFactoryInitial\" type=\"java.lang.String\">com.sun.jndi.rmi.registry.RegistryContextFactory</attribute>\n+        <attribute name=\"namingFactoryUrlPkgs\" type=\"java.lang.String\">org.apache.geronimo.naming</attribute>\n+        <attribute name=\"namingProviderUrl\" type=\"java.lang.String\">rmi://localhost:1099</attribute>\n+    </gbean>\n+\n </configuration>\n\\ No newline at end of file"
            },
            {
                "sha": "99acd2d1adf9df6fcb2ed9cb4f8bf7382bdde2f3",
                "filename": "modules/assembly/src/plan/default-database-plan.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/default-database-plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/default-database-plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/assembly/src/plan/default-database-plan.xml?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -80,6 +80,7 @@\n \n     <gbean name=\"geronimo.server:type=ThreadPooledTimer,name=JDBCNonTransactionalThreadPooledTimer\" class=\"org.apache.geronimo.timer.jdbc.JDBCStoreThreadPooledNonTransactionalTimer\">\n         <reference name=\"ManagedConnectionFactoryWrapper\">geronimo.server:J2EEServer=geronimo,j2eeType=JCAManagedConnectionFactory,name=DefaultDatasource</reference>\n+        <reference name=\"TransactionContextManager\">geronimo.server:type=TransactionContextManager</reference>\n         <reference name=\"ThreadPool\">geronimo.server:type=ThreadPool,name=DefaultThreadPool</reference>\n     </gbean>\n "
            },
            {
                "sha": "3eea9086438556579688d302bee18b0e1bb24fdd",
                "filename": "modules/assembly/src/plan/j2ee-client-plan.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/j2ee-client-plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/j2ee-client-plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/assembly/src/plan/j2ee-client-plan.xml?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -90,7 +90,7 @@ by the app client.\n         <attribute name=\"syncMaximumPoolSize\" type=\"int\">10</attribute>\n         <attribute name=\"startMaximumPoolSize\" type=\"int\">10</attribute>\n         <attribute name=\"scheduledMaximumPoolSize\" type=\"int\">10</attribute>\n-        <reference name=\"XAServices\">geronimo.client:type=TransactionManager</reference>\n+        <reference name=\"TransactionContextManager\">geronimo.client:type=TransactionContextManager</reference>\n     </gbean>\n \n     <gbean name=\"geronimo.client:type=TransactionManager\" class=\"org.apache.geronimo.transaction.GeronimoTransactionManager\">\n@@ -102,6 +102,8 @@ by the app client.\n \n     <gbean name=\"geronimo.client:type=TransactionContextManager\" class=\"org.apache.geronimo.transaction.context.TransactionContextManager\">\n         <reference name=\"TransactionManager\">geronimo.client:type=TransactionManager</reference>\n+        <reference name=\"XidImporter\">geronimo.client:type=TransactionManager</reference>\n+        <reference name=\"Recovery\">geronimo.client:type=TransactionManager</reference>\n     </gbean>\n \n </configuration>"
            },
            {
                "sha": "7fd66288008342238e2920d400cdc5b363a44fc7",
                "filename": "modules/assembly/src/plan/j2ee-server-plan.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/j2ee-server-plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/j2ee-server-plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/assembly/src/plan/j2ee-server-plan.xml?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -150,7 +150,7 @@ by the server.\n         <attribute name=\"syncMaximumPoolSize\" type=\"int\">10</attribute>\n         <attribute name=\"startMaximumPoolSize\" type=\"int\">10</attribute>\n         <attribute name=\"scheduledMaximumPoolSize\" type=\"int\">10</attribute>\n-        <reference name=\"XAServices\">geronimo.server:type=TransactionManager</reference>\n+        <reference name=\"TransactionContextManager\">geronimo.server:type=TransactionContextManager</reference>\n     </gbean>\n \n     <gbean name=\"geronimo.server:type=HOWLTransactionLog\" class=\"org.apache.geronimo.transaction.log.HOWLLog\">\n@@ -179,6 +179,8 @@ by the server.\n \n     <gbean name=\"geronimo.server:type=TransactionContextManager\" class=\"org.apache.geronimo.transaction.context.TransactionContextManager\">\n         <reference name=\"TransactionManager\">geronimo.server:type=TransactionManager</reference>\n+        <reference name=\"XidImporter\">geronimo.server:type=TransactionManager</reference>\n+        <reference name=\"Recovery\">geronimo.server:type=TransactionManager</reference>\n     </gbean>\n \n "
            },
            {
                "sha": "8148e17982cb5182e1812136037909eab6a048a4",
                "filename": "modules/assembly/src/plan/system-database-plan.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/system-database-plan.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/assembly/src/plan/system-database-plan.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/assembly/src/plan/system-database-plan.xml?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -78,6 +78,7 @@\n \r\n     <gbean name=\"geronimo.server:type=ThreadPooledTimer,name=JDBCNonTransactionalThreadPooledTimer\" class=\"org.apache.geronimo.timer.jdbc.JDBCStoreThreadPooledNonTransactionalTimer\">\r\n         <reference name=\"ManagedConnectionFactoryWrapper\">geronimo.server:J2EEServer=geronimo,j2eeType=JCAManagedConnectionFactory,name=DefaultDatasource</reference>\r\n+        <reference name=\"TransactionContextManager\">geronimo.server:type=TransactionContextManager</reference>\r\n         <reference name=\"ThreadPool\">geronimo.server:type=ThreadPool,name=DefaultThreadPool</reference>\r\n     </gbean>\r\n -->\r"
            },
            {
                "sha": "96bc46ff1c346f615665cd4c3c639e0b1139f2b8",
                "filename": "modules/client/project.xml",
                "status": "modified",
                "additions": 10,
                "deletions": 4,
                "changes": 14,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/client/project.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/client/project.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/client/project.xml?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -67,12 +67,18 @@\n         </dependency>\n \n         <dependency>\n-            <groupId>geronimo</groupId>\n-            <artifactId>geronimo-transaction</artifactId>\n-            <version>${pom.currentVersion}</version>\n+             <groupId>geronimo</groupId>\n+             <artifactId>geronimo-transaction</artifactId>\n+             <version>${pom.currentVersion}</version>\n+         </dependency>\n+\n+        <dependency>\n+            <groupId>geronimo-spec</groupId>\n+            <artifactId>geronimo-spec-jta</artifactId>\n+            <version>&geronimo-spec-jta-version;</version>\n         </dependency>\n \n-        <!-- Thirdparty -->\n+          <!-- Thirdparty -->\n \n         <dependency>\n             <groupId>cglib</groupId>"
            },
            {
                "sha": "64707070a3c1ead703ec5db94b026f93be48582e",
                "filename": "modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java",
                "status": "modified",
                "additions": 13,
                "deletions": 10,
                "changes": 23,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/client/src/java/org/apache/geronimo/client/AppClientContainer.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -23,7 +23,7 @@\n import org.apache.geronimo.gbean.GBeanInfo;\n import org.apache.geronimo.gbean.GBeanInfoFactory;\n import org.apache.geronimo.transaction.context.TransactionContext;\n-import org.apache.geronimo.transaction.context.UnspecifiedTransactionContext;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * @version $Rev: 46019 $ $Date: 2004-09-14 02:56:06 -0700 (Tue, 14 Sep 2004) $\n@@ -36,12 +36,14 @@\n     private final ObjectName appClientModuleName;\n     private final Method mainMethod;\n     private final ClassLoader classLoader;\n+    private final TransactionContextManager transactionContextManager;\n \n-    public AppClientContainer(String mainClassName, ObjectName appClientModuleName, AppClientPlugin jndiContext, ClassLoader classLoader) throws Exception {\n+    public AppClientContainer(String mainClassName, ObjectName appClientModuleName, ClassLoader classLoader, AppClientPlugin jndiContext, TransactionContextManager transactionContextManager) throws Exception {\n         this.mainClassName = mainClassName;\n-        this.jndiContext = jndiContext;\n         this.appClientModuleName = appClientModuleName;\n         this.classLoader = classLoader;\n+        this.jndiContext = jndiContext;\n+        this.transactionContextManager = transactionContextManager;\n \n         try {\n             Class mainClass = classLoader.loadClass(mainClassName);\n@@ -66,11 +68,11 @@ public void main(String[] args) throws Exception {\n \n         ClassLoader contextClassLoader = thread.getContextClassLoader();\n         thread.setContextClassLoader(classLoader);\n-        TransactionContext oldTransactionContext = TransactionContext.getContext();\n-\n+        TransactionContext oldTransactionContext = transactionContextManager.getContext();\n+        TransactionContext currentTransactionContext = null;\n         try {\n             jndiContext.startClient(appClientModuleName);\n-            TransactionContext.setContext(new UnspecifiedTransactionContext());\n+            currentTransactionContext = transactionContextManager.newUnspecifiedTransactionContext();\n             mainMethod.invoke(null, new Object[]{args});\n \n         } catch (InvocationTargetException e) {\n@@ -85,8 +87,8 @@ public void main(String[] args) throws Exception {\n             jndiContext.stopClient(appClientModuleName);\n \n             thread.setContextClassLoader(contextClassLoader);\n-            TransactionContext.setContext(oldTransactionContext);\n-\n+            transactionContextManager.setContext(oldTransactionContext);\n+            currentTransactionContext.commit();\n         }\n     }\n \n@@ -98,10 +100,11 @@ public void main(String[] args) throws Exception {\n         infoFactory.addOperation(\"main\", new Class[]{String[].class});\n         infoFactory.addAttribute(\"mainClassName\", String.class, true);\n         infoFactory.addAttribute(\"appClientModuleName\", ObjectName.class, true);\n-        infoFactory.addReference(\"JNDIContext\", AppClientPlugin.class);\n         infoFactory.addAttribute(\"classLoader\", ClassLoader.class, false);\n+        infoFactory.addReference(\"JNDIContext\", AppClientPlugin.class);\n+        infoFactory.addReference(\"TransactionContextManager\", TransactionContextManager.class);\n \n-        infoFactory.setConstructor(new String[]{\"mainClassName\", \"appClientModuleName\", \"JNDIContext\", \"classLoader\"});\n+        infoFactory.setConstructor(new String[]{\"mainClassName\", \"appClientModuleName\", \"classLoader\", \"JNDIContext\", \"TransactionContextManager\"});\n \n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }"
            },
            {
                "sha": "264557302aa90a35f56061f7a67d6614f97d07e5",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/deployment/ConnectorModuleBuilder.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -220,7 +220,7 @@ public void initContext(EARContext earContext, Module module, ClassLoader cl) th\n     }\n \n     public String addGBeans(EARContext earContext, Module module, ClassLoader cl) throws DeploymentException {\n-        ObjectName resourceAdapterModuleName = addResourceAdapterModuleGBean(earContext, module, cl);\n+        addResourceAdapterModuleGBean(earContext, module, cl);\n \n         GerConnectorType geronimoConnector = (GerConnectorType) module.getVendorDD();\n         XmlObject specDD = module.getSpecDD();\n@@ -626,6 +626,7 @@ private ObjectName configureConnectionManager(GerConnectiondefinitionInstanceTyp\n             if (connectionManager.getRealmBridge() != null) {\n                 connectionManagerGBean.setReferencePattern(\"RealmBridge\", ObjectName.getInstance(BASE_REALM_BRIDGE_NAME + connectionManager.getRealmBridge()));\n             }\n+            connectionManagerGBean.setReferencePattern(\"TransactionContextManager\", earContext.getTransactionContextManagerObjectName());\n         } catch (Exception e) {\n             throw new DeploymentException(\"Problem setting up ConnectionManager\", e);\n         }"
            },
            {
                "sha": "c6d65dd18f6caf0fb78d6dc496db094fd0cee244",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/GenericConnectionManager.java",
                "status": "modified",
                "additions": 19,
                "deletions": 17,
                "changes": 36,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/GenericConnectionManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/GenericConnectionManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/GenericConnectionManager.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -24,6 +24,7 @@\n import org.apache.geronimo.gbean.GBeanInfo;\n import org.apache.geronimo.gbean.GBeanInfoFactory;\n import org.apache.geronimo.security.bridge.RealmBridge;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * GenericConnectionManager sets up a connection manager stack according to the\n@@ -40,23 +41,30 @@\n     private PoolingSupport pooling;\n     //dependencies\n \n-    protected RealmBridge realmBridge;\n-    protected ConnectionTracker connectionTracker;\n+    private final RealmBridge realmBridge;\n+    private final ConnectionTracker connectionTracker;\n+    private final TransactionContextManager transactionContextManager;\n \n     //default constructor for use as endpoint\n     public GenericConnectionManager() {\n+        this.realmBridge = null;\n+        this.connectionTracker = null;\n+        this.transactionContextManager = null;\n     }\n \n     public GenericConnectionManager(TransactionSupport transactionSupport,\n-            PoolingSupport pooling,\n-            String objectName,\n-            RealmBridge realmBridge,\n-            ConnectionTracker connectionTracker) {\n+                                    PoolingSupport pooling,\n+                                    String objectName,\n+                                    RealmBridge realmBridge,\n+                                    ConnectionTracker connectionTracker,\n+                                    TransactionContextManager transactionContextManager) {\n         this.transactionSupport = transactionSupport;\n         this.pooling = pooling;\n         this.objectName = objectName;\n         this.realmBridge = realmBridge;\n         this.connectionTracker = connectionTracker;\n+        assert transactionContextManager != null;\n+        this.transactionContextManager = transactionContextManager;\n     }\n \n     /**\n@@ -88,7 +96,7 @@ public GenericConnectionManager(TransactionSupport transactionSupport,\n //        if (transactionSupport instanceof XATransactions && ((XATransactions)transactionSupport).isUseThreadCaching()) {\n //            stack = new ThreadLocalCachingConnectionInterceptor(stack, false);\n //        }\n-        stack = transactionSupport.addTransactionInterceptors(stack);\n+        stack = transactionSupport.addTransactionInterceptors(stack, transactionContextManager);\n \n         if (realmBridge != null) {\n             stack = new SubjectInterceptor(stack, realmBridge);\n@@ -103,7 +111,7 @@ public GenericConnectionManager(TransactionSupport transactionSupport,\n                     connectionTracker);\n         }\n         tail.setStack(stack);\n-        return new ConnectionInterceptor[] {stack, recoveryStack};\n+        return new ConnectionInterceptor[]{stack, recoveryStack};\n     }\n \n     public TransactionSupport getTransactionSupport() {\n@@ -126,18 +134,10 @@ public RealmBridge getRealmBridge() {\n         return realmBridge;\n     }\n \n-    public void setRealmBridge(RealmBridge realmBridge) {\n-        this.realmBridge = realmBridge;\n-    }\n-\n     public ConnectionTracker getConnectionTracker() {\n         return connectionTracker;\n     }\n \n-    public void setConnectionTracker(ConnectionTracker connectionTracker) {\n-        this.connectionTracker = connectionTracker;\n-    }\n-\n     public static final GBeanInfo GBEAN_INFO;\n \n     static {\n@@ -151,13 +151,15 @@ public void setConnectionTracker(ConnectionTracker connectionTracker) {\n \n         infoFactory.addReference(\"ConnectionTracker\", ConnectionTracker.class);\n         infoFactory.addReference(\"RealmBridge\", RealmBridge.class);\n+        infoFactory.addReference(\"TransactionContextManager\", TransactionContextManager.class);\n \n         infoFactory.setConstructor(new String[]{\n             \"transactionSupport\",\n             \"pooling\",\n             \"objectName\",\n             \"RealmBridge\",\n-            \"ConnectionTracker\"});\n+            \"ConnectionTracker\",\n+            \"TransactionContextManager\"});\n \n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }"
            },
            {
                "sha": "843102fe19faa5a9b712ae86c9955cb5f4268cda",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionCachingInterceptor.java",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionCachingInterceptor.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionCachingInterceptor.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionCachingInterceptor.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -26,6 +26,7 @@\n \n import org.apache.geronimo.transaction.ConnectionReleaser;\n import org.apache.geronimo.transaction.context.TransactionContext;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * TransactionCachingInterceptor.java\n@@ -50,13 +51,18 @@\n public class TransactionCachingInterceptor implements ConnectionInterceptor, ConnectionReleaser {\n \n     private final ConnectionInterceptor next;\n+    private final TransactionContextManager transactionContextManager;\n \n-    public TransactionCachingInterceptor(final ConnectionInterceptor next) {\n+    public TransactionCachingInterceptor(ConnectionInterceptor next, TransactionContextManager transactionContextManager) {\n         this.next = next;\n+        this.transactionContextManager = transactionContextManager;\n     }\n \n     public void getConnection(ConnectionInfo connectionInfo) throws ResourceException {\n-        TransactionContext transactionContext = TransactionContext.getContext();\n+        TransactionContext transactionContext = transactionContextManager.getContext();\n+        if (transactionContext == null) {\n+            next.getConnection(connectionInfo);\n+        } else {\n         ManagedConnectionInfos managedConnectionInfos = (ManagedConnectionInfos) transactionContext.getManagedConnectionInfo(this);\n         if (managedConnectionInfos == null) {\n             managedConnectionInfos = new ManagedConnectionInfos();\n@@ -77,6 +83,7 @@ public void getConnection(ConnectionInfo connectionInfo) throws ResourceExceptio\n                 managedConnectionInfos.setShared(connectionInfo.getManagedConnectionInfo());\n             }\n         }\n+        }\n     }\n \n     public void returnConnection(ConnectionInfo connectionInfo, ConnectionReturnAction connectionReturnAction) {\n@@ -86,8 +93,8 @@ public void returnConnection(ConnectionInfo connectionInfo, ConnectionReturnActi\n             return;\n         }\n \n-        TransactionContext transactionContext = TransactionContext.getContext();\n-        if (transactionContext.isActive()) {\n+        TransactionContext transactionContext = transactionContextManager.getContext();\n+        if (transactionContext != null && transactionContext.isActive()) {\n             return;\n         }\n         if (connectionInfo.getManagedConnectionInfo().hasConnectionHandles()) {"
            },
            {
                "sha": "609653457014ca2423b5e5b02c9bc47578aa72da",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptor.java",
                "status": "modified",
                "additions": 16,
                "deletions": 16,
                "changes": 32,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptor.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptor.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptor.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -23,60 +23,60 @@\n import javax.transaction.xa.XAResource;\n \n import org.apache.geronimo.transaction.context.TransactionContext;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * TransactionEnlistingInterceptor.java\n- *\n- *\n+ * <p/>\n+ * <p/>\n  * Created: Fri Sep 26 14:52:24 2003\n  *\n  * @version 1.0\n  */\n public class TransactionEnlistingInterceptor implements ConnectionInterceptor {\n \n     private final ConnectionInterceptor next;\n+    private final TransactionContextManager transactionContextManager;\n \n-    public TransactionEnlistingInterceptor(\n-            ConnectionInterceptor next\n-            ) {\n+    public TransactionEnlistingInterceptor(ConnectionInterceptor next, TransactionContextManager transactionContextManager) {\n         this.next = next;\n+        this.transactionContextManager = transactionContextManager;\n     }\n \n     public void getConnection(ConnectionInfo connectionInfo) throws ResourceException {\n         next.getConnection(connectionInfo);\n         try {\n             ManagedConnectionInfo mci = connectionInfo.getManagedConnectionInfo();\n-            TransactionContext transactionContext = TransactionContext.getContext();\n-            if (transactionContext.isActive()) {\n+            TransactionContext transactionContext = transactionContextManager.getContext();\n+            if (transactionContext != null && transactionContext.isActive()) {\n                 XAResource xares = mci.getXAResource();\n                 transactionContext.getTransaction().enlistResource(xares);\n             }\n \n         } catch (SystemException e) {\n             throw new ResourceException(\"Could not get transaction\", e);\n         } catch (RollbackException e) {\n-            throw new ResourceException(\n-                    \"Could not enlist resource in rolled back transaction\",\n+            throw new ResourceException(\"Could not enlist resource in rolled back transaction\",\n                     e);\n         }\n \n     }\n \n     /**\n      * The <code>returnConnection</code> method\n-     *\n+     * <p/>\n      * todo Probably the logic needs improvement if a connection\n      * error occurred and we are destroying the handle.\n-     * @param connectionInfo a <code>ConnectionInfo</code> value\n+     *\n+     * @param connectionInfo         a <code>ConnectionInfo</code> value\n      * @param connectionReturnAction a <code>ConnectionReturnAction</code> value\n      */\n-    public void returnConnection(\n-            ConnectionInfo connectionInfo,\n-            ConnectionReturnAction connectionReturnAction) {\n+    public void returnConnection(ConnectionInfo connectionInfo,\n+                                 ConnectionReturnAction connectionReturnAction) {\n         try {\n             ManagedConnectionInfo mci = connectionInfo.getManagedConnectionInfo();\n-            TransactionContext transactionContext = TransactionContext.getContext();\n-            if (transactionContext.isActive()) {\n+            TransactionContext transactionContext = transactionContextManager.getContext();\n+            if (transactionContext != null && transactionContext.isActive()) {\n                 XAResource xares = mci.getXAResource();\n                 transactionContext.getTransaction().delistResource(xares, XAResource.TMSUSPEND);\n             }"
            },
            {
                "sha": "5503ad2a21ba50af21413c4a031cdf35e1ac7c84",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/LocalTransactions.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/LocalTransactions.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/LocalTransactions.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/LocalTransactions.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -21,6 +21,7 @@\n import org.apache.geronimo.connector.outbound.LocalXAResourceInsertionInterceptor;\n import org.apache.geronimo.connector.outbound.TransactionCachingInterceptor;\n import org.apache.geronimo.connector.outbound.TransactionEnlistingInterceptor;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  *\n@@ -38,8 +39,8 @@ public ConnectionInterceptor addXAResourceInsertionInterceptor(ConnectionInterce\n         return new LocalXAResourceInsertionInterceptor(stack, name);\n     }\n \n-    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack) {\n-        stack = new TransactionEnlistingInterceptor(stack);\n-        return new TransactionCachingInterceptor(stack);\n+    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack, TransactionContextManager transactionContextManager) {\n+        stack = new TransactionEnlistingInterceptor(stack, transactionContextManager);\n+        return new TransactionCachingInterceptor(stack, transactionContextManager);\n     }\n }"
            },
            {
                "sha": "00d44365fec05cb84bc3a8910519ddbea64c0ee7",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/NoTransactions.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/NoTransactions.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/NoTransactions.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/NoTransactions.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -18,6 +18,7 @@\n package org.apache.geronimo.connector.outbound.connectionmanagerconfig;\n \n import org.apache.geronimo.connector.outbound.ConnectionInterceptor;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  *\n@@ -35,7 +36,7 @@ public ConnectionInterceptor addXAResourceInsertionInterceptor(ConnectionInterce\n         return stack;\n     }\n \n-    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack) {\n+    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack, TransactionContextManager transactionContextManager) {\n         return stack;\n     }\n }"
            },
            {
                "sha": "77ab4e828fa28e63af9e8d29e59e104d28748702",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionLog.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionLog.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionLog.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionLog.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -21,6 +21,7 @@\n import org.apache.geronimo.connector.outbound.TransactionCachingInterceptor;\n import org.apache.geronimo.connector.outbound.TransactionEnlistingInterceptor;\n import org.apache.geronimo.connector.outbound.transactionlog.LogXAResourceInsertionInterceptor;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  *\n@@ -39,8 +40,8 @@ public ConnectionInterceptor addXAResourceInsertionInterceptor(ConnectionInterce\n         return new LogXAResourceInsertionInterceptor(stack, name);\n     }\n \n-    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack) {\n-        stack = new TransactionEnlistingInterceptor(stack);\n-        return new TransactionCachingInterceptor(stack);\n+    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack, TransactionContextManager transactionContextManager) {\n+        stack = new TransactionEnlistingInterceptor(stack, transactionContextManager);\n+        return new TransactionCachingInterceptor(stack, transactionContextManager);\n     }\n }"
            },
            {
                "sha": "ea8cd0b57ba7f4a7328e095e045fc261e1efe379",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionSupport.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionSupport.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionSupport.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/TransactionSupport.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -20,6 +20,7 @@\n import java.io.Serializable;\n \n import org.apache.geronimo.connector.outbound.ConnectionInterceptor;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  *\n@@ -29,6 +30,6 @@\n  * */\n public abstract class TransactionSupport implements Serializable {\n     public abstract ConnectionInterceptor addXAResourceInsertionInterceptor(ConnectionInterceptor stack, String name);\n-    public abstract ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack);\n+    public abstract ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack, TransactionContextManager transactionContextManager);\n \n }"
            },
            {
                "sha": "7480b696e86d79c669b950356c824c4abaab34a8",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/XATransactions.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/XATransactions.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/XATransactions.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/outbound/connectionmanagerconfig/XATransactions.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.geronimo.connector.outbound.TransactionCachingInterceptor;\n import org.apache.geronimo.connector.outbound.TransactionEnlistingInterceptor;\n import org.apache.geronimo.connector.outbound.XAResourceInsertionInterceptor;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  *\n@@ -58,15 +59,15 @@ public ConnectionInterceptor addXAResourceInsertionInterceptor(ConnectionInterce\n         return new XAResourceInsertionInterceptor(stack, name);\n     }\n \n-    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack) {\n+    public ConnectionInterceptor addTransactionInterceptors(ConnectionInterceptor stack, TransactionContextManager transactionContextManager) {\n         //experimental thread local caching\n         if (isUseThreadCaching()) {\n             //useMatching should be configurable\n             stack = new ThreadLocalCachingConnectionInterceptor(stack, false);\n         }\n-        stack = new TransactionEnlistingInterceptor(stack);\n+        stack = new TransactionEnlistingInterceptor(stack, transactionContextManager);\n         if (isUseTransactionCaching()) {\n-            stack = new TransactionCachingInterceptor(stack);\n+            stack = new TransactionCachingInterceptor(stack, transactionContextManager);\n         }\n         return stack;\n     }"
            },
            {
                "sha": "94698c1303caaf367d8bf0def6f2d8d96e3072c4",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/work/GeronimoWorkManager.java",
                "status": "modified",
                "additions": 15,
                "deletions": 15,
                "changes": 30,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/work/GeronimoWorkManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/work/GeronimoWorkManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/work/GeronimoWorkManager.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -36,7 +36,7 @@\n import org.apache.geronimo.gbean.GBeanInfoFactory;\n import org.apache.geronimo.gbean.GBeanLifecycle;\n import org.apache.geronimo.gbean.WaitingException;\n-import org.apache.geronimo.transaction.XAServices;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * WorkManager implementation which uses under the cover three WorkExecutorPool\n@@ -70,7 +70,7 @@\n      */\n     private WorkExecutorPool scheduledWorkExecutorPool;\n \n-    private final XAServices xaServices;\n+    private final TransactionContextManager transactionContextManager;\n \n     private final WorkExecutor scheduleWorkExecutor = new ScheduleWorkExecutor();\n     private final WorkExecutor startWorkExecutor = new StartWorkExecutor();\n@@ -83,15 +83,15 @@ public GeronimoWorkManager() {\n         this(DEFAULT_POOL_SIZE, null);\n     }\n \n-    public GeronimoWorkManager(int size, XAServices xaServices) {\n-        this(size, size, size, xaServices);\n+    public GeronimoWorkManager(int size, TransactionContextManager transactionContextManager) {\n+        this(size, size, size, transactionContextManager);\n     }\n \n-    public GeronimoWorkManager(int syncSize, int startSize, int schedSize, XAServices xaServices) {\n+    public GeronimoWorkManager(int syncSize, int startSize, int schedSize, TransactionContextManager transactionContextManager) {\n         syncWorkExecutorPool = new NullWorkExecutorPool(syncSize);\n         startWorkExecutorPool = new NullWorkExecutorPool(startSize);\n         scheduledWorkExecutorPool = new NullWorkExecutorPool(schedSize);\n-        this.xaServices = xaServices;\n+        this.transactionContextManager = transactionContextManager;\n     }\n \n     public void doStart() throws WaitingException, Exception {\n@@ -115,7 +115,7 @@ public void doFail() {\n     }\n \n     public XATerminator getXATerminator() {\n-        return xaServices;\n+        return transactionContextManager;\n     }\n \n     public int getSyncThreadCount() {\n@@ -158,7 +158,7 @@ public void setScheduledMaximumPoolSize(int maxSize) {\n      * @see javax.resource.spi.work.WorkManager#doWork(javax.resource.spi.work.Work)\n      */\n     public void doWork(Work work) throws WorkException {\n-        executeWork(new WorkerContext(work), syncWorkExecutor, syncWorkExecutorPool);\n+        executeWork(new WorkerContext(work, transactionContextManager), syncWorkExecutor, syncWorkExecutorPool);\n     }\n \n     /* (non-Javadoc)\n@@ -171,7 +171,7 @@ public void doWork(\n             WorkListener workListener)\n             throws WorkException {\n         WorkerContext workWrapper =\n-                new WorkerContext(work, startTimeout, execContext, xaServices, workListener);\n+                new WorkerContext(work, startTimeout, execContext, transactionContextManager, workListener);\n         workWrapper.setThreadPriority(Thread.currentThread().getPriority());\n         executeWork(workWrapper, syncWorkExecutor, syncWorkExecutorPool);\n     }\n@@ -180,7 +180,7 @@ public void doWork(\n      * @see javax.resource.spi.work.WorkManager#startWork(javax.resource.spi.work.Work)\n      */\n     public long startWork(Work work) throws WorkException {\n-        WorkerContext workWrapper = new WorkerContext(work);\n+        WorkerContext workWrapper = new WorkerContext(work, transactionContextManager);\n         workWrapper.setThreadPriority(Thread.currentThread().getPriority());\n         executeWork(workWrapper, startWorkExecutor, startWorkExecutorPool);\n         return System.currentTimeMillis() - workWrapper.getAcceptedTime();\n@@ -196,7 +196,7 @@ public long startWork(\n             WorkListener workListener)\n             throws WorkException {\n         WorkerContext workWrapper =\n-                new WorkerContext(work, startTimeout, execContext, xaServices, workListener);\n+                new WorkerContext(work, startTimeout, execContext, transactionContextManager, workListener);\n         workWrapper.setThreadPriority(Thread.currentThread().getPriority());\n         executeWork(workWrapper, startWorkExecutor, startWorkExecutorPool);\n         return System.currentTimeMillis() - workWrapper.getAcceptedTime();\n@@ -206,7 +206,7 @@ public long startWork(\n      * @see javax.resource.spi.work.WorkManager#scheduleWork(javax.resource.spi.work.Work)\n      */\n     public void scheduleWork(Work work) throws WorkException {\n-        WorkerContext workWrapper = new WorkerContext(work);\n+        WorkerContext workWrapper = new WorkerContext(work, transactionContextManager);\n         workWrapper.setThreadPriority(Thread.currentThread().getPriority());\n         executeWork(workWrapper, scheduleWorkExecutor, scheduledWorkExecutorPool);\n     }\n@@ -221,7 +221,7 @@ public void scheduleWork(\n             WorkListener workListener)\n             throws WorkException {\n         WorkerContext workWrapper =\n-                new WorkerContext(work, startTimeout, execContext, xaServices, workListener);\n+                new WorkerContext(work, startTimeout, execContext, transactionContextManager, workListener);\n         workWrapper.setThreadPriority(Thread.currentThread().getPriority());\n         executeWork(workWrapper, scheduleWorkExecutor, scheduledWorkExecutorPool);\n     }\n@@ -262,13 +262,13 @@ private void executeWork(WorkerContext work, WorkExecutor workExecutor, Executor\n \n         infoFactory.addOperation(\"getXATerminator\");\n \n-        infoFactory.addReference(\"XAServices\", XAServices.class);\n+        infoFactory.addReference(\"TransactionContextManager\", TransactionContextManager.class);\n \n         infoFactory.setConstructor(new String[]{\n             \"syncMaximumPoolSize\",\n             \"startMaximumPoolSize\",\n             \"scheduledMaximumPoolSize\",\n-            \"XAServices\"});\n+            \"TransactionContextManager\"});\n \n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }"
            },
            {
                "sha": "679b63412c268dbb86260e52cbfc9cdc10d837af",
                "filename": "modules/connector/src/java/org/apache/geronimo/connector/work/WorkerContext.java",
                "status": "modified",
                "additions": 16,
                "deletions": 12,
                "changes": 28,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/work/WorkerContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/java/org/apache/geronimo/connector/work/WorkerContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/java/org/apache/geronimo/connector/work/WorkerContext.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -24,13 +24,13 @@\n import javax.resource.spi.work.WorkEvent;\n import javax.resource.spi.work.WorkException;\n import javax.resource.spi.work.WorkListener;\n-import javax.resource.spi.work.WorkRejectedException;\n import javax.resource.spi.work.WorkManager;\n+import javax.resource.spi.work.WorkRejectedException;\n \n import EDU.oswego.cs.dl.util.concurrent.Latch;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.geronimo.transaction.XAWork;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * Work wrapper providing an execution context to a Work instance.\n@@ -82,7 +82,7 @@\n      */\n     private final ExecutionContext executionContext;\n \n-    private final XAWork xaWork;\n+    private final TransactionContextManager transactionContextManager;\n \n     /**\n      * Listener to be notified during the life-cycle of the work treatment.\n@@ -107,12 +107,13 @@\n     /**\n      * Create a WorkWrapper.\n      *\n-     * @param aWork Work to be wrapped.\n+     * @param work Work to be wrapped.\n+     * @param transactionContextManager\n      */\n-    public WorkerContext(Work aWork) {\n-        adaptee = aWork;\n+    public WorkerContext(Work work, TransactionContextManager transactionContextManager) {\n+        adaptee = work;\n         executionContext = null;\n-        xaWork = null;\n+        this.transactionContextManager = transactionContextManager;\n     }\n \n     /**\n@@ -125,16 +126,15 @@ public WorkerContext(Work aWork) {\n      * the submitted Work instance must be executed.\n      * @param workListener an object which would be notified when the various\n      * Work processing events (work accepted, work rejected, work started,\n-     * work completed) occur.\n      */\n     public WorkerContext(Work aWork, long aStartTimeout,\n                          ExecutionContext execContext,\n-                         XAWork xaWork,\n+                         TransactionContextManager transactionContextManager,\n                          WorkListener workListener) {\n         adaptee = aWork;\n         startTimeOut = aStartTimeout;\n         executionContext = execContext;\n-        this.xaWork = xaWork;\n+        this.transactionContextManager = transactionContextManager;\n         if (null != workListener) {\n             this.workListener = workListener;\n         }\n@@ -271,15 +271,19 @@ public void run() {\n         workListener.workStarted(\n                 new WorkEvent(this, WorkEvent.WORK_STARTED, adaptee, null));\n         startLatch.release();\n+        //Implementation note: we assume this is being called without an interesting TransactionContext,\n+        //and ignore/replace whatever is associated with the current thread.\n         try {\n             if (executionContext == null || executionContext.getXid() == null) {\n+                transactionContextManager.newUnspecifiedTransactionContext();\n                 adaptee.run();\n+                //TODO should we commit the txContext to flush any leftover state???\n             } else {\n                 try {\n-                    xaWork.begin(executionContext.getXid(), executionContext.getTransactionTimeout());\n+                    transactionContextManager.begin(executionContext.getXid(), executionContext.getTransactionTimeout());\n                     adaptee.run();\n                 } finally {\n-                    xaWork.end(executionContext.getXid());\n+                    transactionContextManager.end(executionContext.getXid());\n                 }\n \n             }"
            },
            {
                "sha": "3716e812970062d7a322f87fbc6884ae3ed7eb85",
                "filename": "modules/connector/src/test-data/connector_1_5/geronimo-ra.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test-data/connector_1_5/geronimo-ra.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test-data/connector_1_5/geronimo-ra.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test-data/connector_1_5/geronimo-ra.xml?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -108,7 +108,7 @@\n         <attribute name=\"syncMaximumPoolSize\" type=\"int\">10</attribute>\n         <attribute name=\"startMaximumPoolSize\" type=\"int\">10</attribute>\n         <attribute name=\"scheduledMaximumPoolSize\" type=\"int\">10</attribute>\n-        <reference name=\"XAServices\">geronimo.server:type=TransactionManager</reference>\n+        <reference name=\"TransactionContextManager\">geronimo.server:type=TransactionContextManager</reference>\n     </gbean>\n \n     <gbean name=\"geronimo.server:type=TransactionManager\" class=\"org.apache.geronimo.transaction.GeronimoTransactionManager\">\n@@ -118,6 +118,12 @@\n         </references>\n     </gbean>\n \n+    <gbean name=\"geronimo.server:type=TransactionContextManager\" class=\"org.apache.geronimo.transaction.context.TransactionContextManager\">\n+        <reference name=\"TransactionManager\">geronimo.server:type=TransactionManager</reference>\n+        <reference name=\"XidImporter\">geronimo.server:type=TransactionManager</reference>\n+        <reference name=\"Recovery\">geronimo.server:type=TransactionManager</reference>\n+    </gbean>\n+\n     <gbean name=\"geronimo.security:service=RealmBridge,name=TargetRealm\" class=\"org.apache.geronimo.security.bridge.ConfiguredIdentityUserPasswordRealmBridge\">\n         <attribute name=\"targetRealm\" type=\"java.lang.String\">TargetRealm</attribute>\n         <attribute name=\"configuredUser\" type=\"java.lang.String\">testUser</attribute>"
            },
            {
                "sha": "417ae085087991312ca74e22e5cd1bb83de35880",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/BootstrapContextTest.java",
                "status": "modified",
                "additions": 6,
                "deletions": 7,
                "changes": 13,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/BootstrapContextTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/BootstrapContextTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/BootstrapContextTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -18,13 +18,12 @@\n package org.apache.geronimo.connector;\n \n import java.util.Timer;\n-\n import javax.resource.spi.XATerminator;\n import javax.resource.spi.work.WorkManager;\n \n import junit.framework.TestCase;\n import org.apache.geronimo.connector.work.GeronimoWorkManager;\n-import org.apache.geronimo.transaction.XAServices;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * Unit tests for {@link BootstrapContextImpl}\n@@ -36,8 +35,8 @@\n      * Tests get and set work manager\n      */\n     public void testGetSetWorkManager() {\n-        XAServices xaServices = new MockXATerminator(\"MockXATerminator\");\n-        GeronimoWorkManager manager = new GeronimoWorkManager(1, xaServices);\n+        TransactionContextManager transactionContextManager = new TransactionContextManager();\n+        GeronimoWorkManager manager = new GeronimoWorkManager(1, transactionContextManager);\n         BootstrapContextImpl context = new BootstrapContextImpl(manager);\n         WorkManager wm = context.getWorkManager();\n \n@@ -48,12 +47,12 @@ public void testGetSetWorkManager() {\n      * Tests get and set XATerminator\n      */\n     public void testGetSetXATerminator() {\n-        XAServices xaServices = new MockXATerminator(\"MockXATerminator\");\n-        GeronimoWorkManager manager = new GeronimoWorkManager(1, xaServices);\n+        TransactionContextManager transactionContextManager = new TransactionContextManager();\n+        GeronimoWorkManager manager = new GeronimoWorkManager(1, transactionContextManager);\n         BootstrapContextImpl context = new BootstrapContextImpl(manager);\n         XATerminator xat = context.getXATerminator();\n \n-        assertSame(\"Make sure it is the same object\", xaServices, xat);\n+        assertSame(\"Make sure it is the same object\", transactionContextManager, xat);\n     }\n \n     /**"
            },
            {
                "sha": "da8fd2e8929e34bca8c03d6c21a8aa710d5934e0",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/MockXATerminator.java",
                "status": "removed",
                "additions": 0,
                "deletions": 78,
                "changes": 78,
                "blob_url": "https://github.com/apache/geronimo/blob/46889e646949ddd6270b74c66047e736b011ddee/modules/connector/src/test/org/apache/geronimo/connector/MockXATerminator.java",
                "raw_url": "https://github.com/apache/geronimo/raw/46889e646949ddd6270b74c66047e736b011ddee/modules/connector/src/test/org/apache/geronimo/connector/MockXATerminator.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/MockXATerminator.java?ref=46889e646949ddd6270b74c66047e736b011ddee",
                "patch": "@@ -1,78 +0,0 @@\n-/**\n- *\n- * Copyright 2003-2004 The Apache Software Foundation\n- *\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- */\n-\n-package org.apache.geronimo.connector;\n-\n-import javax.resource.spi.XATerminator;\n-import javax.transaction.xa.XAException;\n-import javax.transaction.xa.Xid;\n-import javax.transaction.InvalidTransactionException;\n-import javax.transaction.SystemException;\n-\n-import org.apache.geronimo.transaction.XAServices;\n-\n-/**\n- * Dummy implementation of XATerminator interface for use in\n- * {@link BootstrapContextTest}\n- * @version $Rev$ $Date$\n- */\n-public class MockXATerminator implements XAServices {\n-\n-    private String id = null;\n-\n-    /** Creates a new instance of MockWorkManager */\n-    public MockXATerminator(String id) {\n-        this.id = id;\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public boolean equals(MockXATerminator xat) {\n-        if (!(xat instanceof MockXATerminator)) {\n-            return false;\n-        }\n-\n-        return ((MockXATerminator) xat).getId() != null &&\n-                ((MockXATerminator) xat).getId().equals(getId());\n-    }\n-\n-    public void commit(Xid xid, boolean onePhase) throws XAException {\n-    }\n-\n-    public void forget(Xid xid) throws XAException {\n-    }\n-\n-    public int prepare(Xid xid) throws XAException {\n-        return -1;\n-    }\n-\n-    public Xid[] recover(int flag) throws XAException {\n-        return null;\n-    }\n-\n-    public void rollback(Xid xid) throws XAException {\n-    }\n-\n-    public void begin(Xid xid, long txTimeout) throws XAException, InvalidTransactionException, SystemException {\n-    }\n-\n-    public void end(Xid xid) throws XAException, SystemException {\n-    }\n-\n-}"
            },
            {
                "sha": "65c06d59ded3762202ad2c03e57f4955c243f90f",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/outbound/ConnectionManagerTestUtils.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -20,7 +20,6 @@\n import java.util.HashSet;\n import java.util.Set;\n import javax.security.auth.Subject;\n-import javax.transaction.TransactionManager;\n \n import junit.framework.TestCase;\n import org.apache.geronimo.connector.mock.MockConnection;\n@@ -89,8 +88,8 @@ public Object invoke(InstanceContext newInstanceContext) throws Throwable {\n \n     protected void setUp() throws Exception {\n         connectionTrackingCoordinator = new ConnectionTrackingCoordinator();\n-        TransactionManager transactionManager = new TransactionManagerImpl();\n-        transactionContextManager = new TransactionContextManager(transactionManager);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl();\n+        transactionContextManager = new TransactionContextManager(transactionManager, transactionManager, null);\n         mockManagedConnectionFactory = new MockManagedConnectionFactory();\n         subject = new Subject();\n         ContextManager.setCurrentCaller(subject);\n@@ -99,11 +98,12 @@ protected void setUp() throws Exception {\n                 poolingSupport,\n                 name,\n                 realmBridge,\n-                connectionTrackingCoordinator);\n+                connectionTrackingCoordinator,\n+                transactionContextManager);\n         connectionManagerDeployment.doStart();\n         connectionFactory = (MockConnectionFactory) connectionManagerDeployment.createConnectionFactory(mockManagedConnectionFactory);\n         defaultComponentContext = new DefaultInstanceContext(unshareableResources, applicationManagedSecurityResources);\n-        defaultComponentInterceptor = new DefaultComponentInterceptor(this, connectionTrackingCoordinator);\n+        defaultComponentInterceptor = new DefaultComponentInterceptor(this, connectionTrackingCoordinator, transactionContextManager);\n     }\n \n     protected void tearDown() throws Exception {"
            },
            {
                "sha": "a53c2aa916e94b13ce784d6214f28386719692b4",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java",
                "status": "modified",
                "additions": 14,
                "deletions": 19,
                "changes": 33,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionCachingInterceptorTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -18,10 +18,10 @@\n package org.apache.geronimo.connector.outbound;\n \n import javax.resource.ResourceException;\n-import javax.transaction.TransactionManager;\n \n import org.apache.geronimo.transaction.context.ContainerTransactionContext;\n import org.apache.geronimo.transaction.context.TransactionContext;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.apache.geronimo.transaction.context.UnspecifiedTransactionContext;\n import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n \n@@ -33,25 +33,26 @@\n  * */\n public class TransactionCachingInterceptorTest extends ConnectionInterceptorTestUtils {\n \n-    private TransactionManager transactionManager;\n+    private TransactionManagerImpl transactionManager;\n+    private TransactionContextManager transactionContextManager;\n     private TransactionCachingInterceptor transactionCachingInterceptor;\n \n     protected void setUp() throws Exception {\n         super.setUp();\n         transactionManager = new TransactionManagerImpl();\n-        transactionCachingInterceptor = new TransactionCachingInterceptor(this);\n+        transactionContextManager = new TransactionContextManager(transactionManager, transactionManager, null);\n+        transactionCachingInterceptor = new TransactionCachingInterceptor(this, transactionContextManager);\n     }\n \n     protected void tearDown() throws Exception {\n         super.tearDown();\n         transactionManager = null;\n+        transactionContextManager = null;\n         transactionCachingInterceptor = null;\n     }\n \n     public void testGetConnectionInTransaction() throws Exception {\n-        ContainerTransactionContext transactionContext = new ContainerTransactionContext(transactionManager);\n-        TransactionContext.setContext(transactionContext);\n-        transactionContext.begin();\n+        ContainerTransactionContext transactionContext = transactionContextManager.newContainerTransactionContext();\n         ConnectionInfo connectionInfo1 = makeConnectionInfo();\n         transactionCachingInterceptor.getConnection(connectionInfo1);\n         assertTrue(\"Expected to get an initial connection\", obtainedConnectionInfo != null);\n@@ -78,9 +79,7 @@ public void testGetConnectionInTransaction() throws Exception {\n     }\n \n     public void testGetUnshareableConnectionsInTransaction() throws Exception {\n-        ContainerTransactionContext transactionContext = new ContainerTransactionContext(transactionManager);\n-        TransactionContext.setContext(transactionContext);\n-        transactionContext.begin();\n+        ContainerTransactionContext transactionContext = transactionContextManager.newContainerTransactionContext();\n         ConnectionInfo connectionInfo1 = makeConnectionInfo();\n         connectionInfo1.setUnshareable(true);\n         transactionCachingInterceptor.getConnection(connectionInfo1);\n@@ -129,7 +128,7 @@ public void testGetConnectionOutsideTransaction() throws Exception {\n         assertTrue(\"Expected to get an initial connection\", obtainedConnectionInfo != null);\n         assertTrue(\"Expected nothing returned yet\", returnedConnectionInfo == null);\n         assertTrue(\"Expected no ManagedConnectionInfo in the TransactionContext\",\n-                null == TransactionContext.getContext().getManagedConnectionInfo(transactionCachingInterceptor));\n+                null == transactionContextManager.getContext().getManagedConnectionInfo(transactionCachingInterceptor));\n         obtainedConnectionInfo = null;\n         ConnectionInfo connectionInfo2 = makeConnectionInfo();\n         transactionCachingInterceptor.getConnection(connectionInfo2);\n@@ -138,32 +137,28 @@ public void testGetConnectionOutsideTransaction() throws Exception {\n         assertTrue(\"Expected different ManagedConnectionInfo in both ConnectionInfos\",\n                 connectionInfo1.getManagedConnectionInfo() != connectionInfo2.getManagedConnectionInfo());\n         assertTrue(\"Expected no ManagedConnectionInfo in the TransactionContext\",\n-                null == TransactionContext.getContext().getManagedConnectionInfo(transactionCachingInterceptor));\n+                null == transactionContextManager.getContext().getManagedConnectionInfo(transactionCachingInterceptor));\n         //we didn't create any handles, so the \"ManagedConnection\" should be returned.\n-        assertTrue(\"Expected TransactionContext to report inactive\", !TransactionContext.getContext().isActive());\n+        assertTrue(\"Expected TransactionContext to report inactive\", !transactionContextManager.getContext().isActive());\n         transactionCachingInterceptor.returnConnection(connectionInfo1, ConnectionReturnAction.RETURN_HANDLE);\n         assertTrue(\"Expected connection to be returned\", returnedConnectionInfo != null);\n         returnedConnectionInfo = null;\n         transactionCachingInterceptor.returnConnection(connectionInfo2, ConnectionReturnAction.RETURN_HANDLE);\n         assertTrue(\"Expected connection to be returned\", returnedConnectionInfo != null);\n \n-        assertTrue(\"Expected TransactionContext to report inactive\", !TransactionContext.getContext().isActive());\n+        assertTrue(\"Expected TransactionContext to report inactive\", !transactionContextManager.getContext().isActive());\n \n     }\n \n     public void testTransactionIndependence() throws Exception {\n-        ContainerTransactionContext transactionContext1 = new ContainerTransactionContext(transactionManager);\n-        TransactionContext.setContext(transactionContext1);\n-        transactionContext1.begin();\n+        ContainerTransactionContext transactionContext1 = transactionContextManager.newContainerTransactionContext();\n         ConnectionInfo connectionInfo1 = makeConnectionInfo();\n         transactionCachingInterceptor.getConnection(connectionInfo1);\n         obtainedConnectionInfo = null;\n \n         //start a second transaction\n         transactionContext1.suspend();\n-        ContainerTransactionContext transactionContext2 = new ContainerTransactionContext(transactionManager);\n-        TransactionContext.setContext(transactionContext2);\n-        transactionContext2.begin();\n+        ContainerTransactionContext transactionContext2 = transactionContextManager.newContainerTransactionContext();\n         ConnectionInfo connectionInfo2 = makeConnectionInfo();\n         transactionCachingInterceptor.getConnection(connectionInfo2);\n         assertTrue(\"Expected to get a second connection\", obtainedConnectionInfo != null);"
            },
            {
                "sha": "a906139a654be30ccee3965980f5888c3260fc08",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java",
                "status": "modified",
                "additions": 11,
                "deletions": 16,
                "changes": 27,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/outbound/TransactionEnlistingInterceptorTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -18,16 +18,14 @@\n package org.apache.geronimo.connector.outbound;\n \n import javax.resource.ResourceException;\n-import javax.transaction.TransactionManager;\n import javax.transaction.xa.XAException;\n import javax.transaction.xa.XAResource;\n import javax.transaction.xa.Xid;\n \n import org.apache.geronimo.transaction.context.ContainerTransactionContext;\n-import org.apache.geronimo.transaction.context.TransactionContext;\n-import org.apache.geronimo.transaction.context.UnspecifiedTransactionContext;\n-import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.apache.geronimo.transaction.manager.NamedXAResource;\n+import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n \n /**\n  *\n@@ -43,10 +41,13 @@\n     private boolean ended;\n     private boolean returned;\n     private boolean committed;\n+    private TransactionContextManager transactionContextManager;\n \n     protected void setUp() throws Exception {\n         super.setUp();\n-        transactionEnlistingInterceptor = new TransactionEnlistingInterceptor(this);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl();\n+        transactionContextManager = new TransactionContextManager(transactionManager, transactionManager, null);\n+        transactionEnlistingInterceptor = new TransactionEnlistingInterceptor(this, transactionContextManager);\n     }\n \n     protected void tearDown() throws Exception {\n@@ -60,7 +61,7 @@ protected void tearDown() throws Exception {\n \n     public void testNoTransaction() throws Exception {\n         ConnectionInfo connectionInfo = makeConnectionInfo();\n-        TransactionContext.setContext(new UnspecifiedTransactionContext());\n+        transactionContextManager.newUnspecifiedTransactionContext();\n         transactionEnlistingInterceptor.getConnection(connectionInfo);\n         assertTrue(\"Expected not started\", !started);\n         assertTrue(\"Expected not ended\", !ended);\n@@ -70,10 +71,7 @@ public void testNoTransaction() throws Exception {\n     }\n \n     public void testTransactionShareableConnection() throws Exception {\n-        TransactionManager transactionManager = new TransactionManagerImpl();\n-        ContainerTransactionContext transactionContext = new ContainerTransactionContext(transactionManager);\n-        TransactionContext.setContext(transactionContext);\n-        transactionContext.begin();\n+        ContainerTransactionContext transactionContext = transactionContextManager.newContainerTransactionContext();\n         ConnectionInfo connectionInfo = makeConnectionInfo();\n         transactionEnlistingInterceptor.getConnection(connectionInfo);\n         assertTrue(\"Expected started\", started);\n@@ -83,15 +81,12 @@ public void testTransactionShareableConnection() throws Exception {\n         assertTrue(\"Expected not started\", !started);\n         assertTrue(\"Expected ended\", ended);\n         assertTrue(\"Expected returned\", returned);\n-        transactionManager.commit();\n+        transactionContext.commit();\n         assertTrue(\"Expected committed\", committed);\n     }\n \n     public void testTransactionUnshareableConnection() throws Exception {\n-        TransactionManager transactionManager = new TransactionManagerImpl();\n-        ContainerTransactionContext transactionContext = new ContainerTransactionContext(transactionManager);\n-        TransactionContext.setContext(transactionContext);\n-        transactionContext.begin();\n+        ContainerTransactionContext transactionContext = transactionContextManager.newContainerTransactionContext();\n         ConnectionInfo connectionInfo = makeConnectionInfo();\n         connectionInfo.setUnshareable(true);\n         transactionEnlistingInterceptor.getConnection(connectionInfo);\n@@ -102,7 +97,7 @@ public void testTransactionUnshareableConnection() throws Exception {\n         assertTrue(\"Expected not started\", !started);\n         assertTrue(\"Expected ended\", ended);\n         assertTrue(\"Expected returned\", returned);\n-        transactionManager.commit();\n+        transactionContext.commit();\n         assertTrue(\"Expected committed\", committed);\n     }\n "
            },
            {
                "sha": "7d96cd44eb0d59c80f829c68604dc987aefb9198",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/outbound/connectiontracking/DefaultComponentInterceptor.java",
                "status": "modified",
                "additions": 20,
                "deletions": 8,
                "changes": 28,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/connectiontracking/DefaultComponentInterceptor.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/outbound/connectiontracking/DefaultComponentInterceptor.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/outbound/connectiontracking/DefaultComponentInterceptor.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -21,34 +21,46 @@\n import org.apache.geronimo.transaction.TrackedConnectionAssociator;\n import org.apache.geronimo.transaction.context.TransactionContext;\n import org.apache.geronimo.transaction.context.UnspecifiedTransactionContext;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * Sample functionality for an interceptor that enables connection caching and obtaining\n  * connections outside a UserTransaction.\n  *\n  * @version $Rev$ $Date$\n- *\n- * */\n+ */\n public class DefaultComponentInterceptor implements DefaultInterceptor {\n \n     private final DefaultInterceptor next;\n     private final TrackedConnectionAssociator trackedConnectionAssociator;\n+    private final TransactionContextManager transactionContextManager;\n \n     public DefaultComponentInterceptor(DefaultInterceptor next,\n-            TrackedConnectionAssociator trackedConnectionAssociator) {\n+                                       TrackedConnectionAssociator trackedConnectionAssociator,\n+                                       TransactionContextManager transactionContextManager) {\n         this.next = next;\n         this.trackedConnectionAssociator = trackedConnectionAssociator;\n+        this.transactionContextManager = transactionContextManager;\n     }\n \n     public Object invoke(InstanceContext newInstanceContext) throws Throwable {\n-        if (TransactionContext.getContext() == null) {\n-            TransactionContext.setContext(new UnspecifiedTransactionContext());\n+        TransactionContext transactionContext = transactionContextManager.getContext();\n+        if (transactionContext == null) {\n+            transactionContextManager.newUnspecifiedTransactionContext();\n         }\n-        InstanceContext oldInstanceContext = trackedConnectionAssociator.enter(newInstanceContext);\n         try {\n-            return next.invoke(newInstanceContext);\n+            InstanceContext oldInstanceContext = trackedConnectionAssociator.enter(newInstanceContext);\n+            try {\n+                return next.invoke(newInstanceContext);\n+            } finally {\n+                trackedConnectionAssociator.exit(oldInstanceContext);\n+            }\n         } finally {\n-            trackedConnectionAssociator.exit(oldInstanceContext);\n+            if (transactionContext == null) {\n+                transactionContext = transactionContextManager.getContext();\n+                transactionContext.commit();\n+                transactionContextManager.setContext(null);\n+            }\n         }\n     }\n }"
            },
            {
                "sha": "32942c16a1eee24bf23cfa760292174986da74ac",
                "filename": "modules/connector/src/test/org/apache/geronimo/connector/work/PooledWorkManagerTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/work/PooledWorkManagerTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/connector/src/test/org/apache/geronimo/connector/work/PooledWorkManagerTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector/src/test/org/apache/geronimo/connector/work/PooledWorkManagerTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -25,6 +25,7 @@\n import javax.resource.spi.work.WorkListener;\n \n import junit.framework.TestCase;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  * Timing is crucial for this test case, which focuses on the synchronization\n@@ -37,7 +38,8 @@\n     private GeronimoWorkManager workManager;\n \n     protected void setUp() throws Exception {\n-        workManager = new GeronimoWorkManager(1, null);\n+        TransactionContextManager transactionContextManager = new TransactionContextManager();\n+        workManager = new GeronimoWorkManager(1, transactionContextManager);\n         workManager.doStart();\n     }\n "
            },
            {
                "sha": "b984ec2af373019769db27fd44a3e71be0663cfa",
                "filename": "modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java",
                "status": "modified",
                "additions": 78,
                "deletions": 35,
                "changes": 113,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/jetty/src/java/org/apache/geronimo/jetty/JettyWebAppContext.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -22,7 +22,6 @@\n import java.net.URI;\n import java.net.URL;\n import java.util.Set;\n-\n import javax.resource.ResourceException;\n \n import org.apache.commons.logging.Log;\n@@ -38,6 +37,7 @@\n import org.apache.geronimo.transaction.InstanceContext;\n import org.apache.geronimo.transaction.TrackedConnectionAssociator;\n import org.apache.geronimo.transaction.UserTransactionImpl;\n+import org.apache.geronimo.transaction.context.TransactionContext;\n import org.apache.geronimo.transaction.context.TransactionContextManager;\n import org.mortbay.http.HttpException;\n import org.mortbay.http.HttpRequest;\n@@ -161,16 +161,32 @@ public void handle(String pathInContext,\n             // Turn on the UserTransaction\n             userTransaction.setOnline(true);\n \n-            if (transactionContextManager.getContext() == null) {\n-                transactionContextManager.newUnspecifiedTransactionContext();\n+            TransactionContext transactionContext = transactionContextManager.getContext();\n+            if (transactionContext == null) {\n+                transactionContext = transactionContextManager.newUnspecifiedTransactionContext();\n+            } else {\n+                transactionContext = null;\n             }\n+\n             try {\n-                oldInstanceContext = associator.enter(new DefaultInstanceContext(unshareableResources, applicationManagedSecurityResources));\n-            } catch (ResourceException e) {\n-                throw new RuntimeException(e);\n-            }\n+                try {\n+                    oldInstanceContext = associator.enter(new DefaultInstanceContext(unshareableResources, applicationManagedSecurityResources));\n+                } catch (ResourceException e) {\n+                    throw new RuntimeException(e);\n+                }\n \n-            super.handle(pathInContext, pathParams, httpRequest, httpResponse);\n+                super.handle(pathInContext, pathParams, httpRequest, httpResponse);\n+            } finally {\n+                if (transactionContext != null) {\n+                    transactionContextManager.setContext(null);\n+                    try {\n+                        transactionContext.commit();\n+                    } catch (Exception e) {\n+                        //TODO this is undoubtedly the wrong error code!\n+                        throw (HttpException) new HttpException(500, \"Problem committing unspecified transaction context\").initCause(e);\n+                    }\n+                }\n+            }\n         } finally {\n             try {\n                 associator.exit(oldInstanceContext);\n@@ -187,12 +203,11 @@ public void handle(String pathInContext,\n     public void doStart() throws WaitingException, Exception {\n \n         // merge Geronimo and Jetty Lifecycles\n-        if (!isStarting())\n-        {\n+        if (!isStarting()) {\n             super.start();\n             return;\n         }\n-        \n+\n         if (uri.isAbsolute()) {\n             setWAR(uri.toString());\n         } else {\n@@ -212,18 +227,33 @@ public void doStart() throws WaitingException, Exception {\n                 // Turn on the UserTransaction\n                 userTransaction.setOnline(true);\n \n-                //TODO should this always create an unspecified context, or might this be executed in a tx?\n-                if (transactionContextManager.getContext() == null) {\n-                    transactionContextManager.newUnspecifiedTransactionContext();\n+                TransactionContext transactionContext = transactionContextManager.getContext();\n+                if (transactionContext == null) {\n+                    transactionContext = transactionContextManager.newUnspecifiedTransactionContext();\n+                } else {\n+                    transactionContext = null;\n                 }\n \n                 try {\n-                    oldInstanceContext = associator.enter(new DefaultInstanceContext(unshareableResources, applicationManagedSecurityResources));\n-                } catch (ResourceException e) {\n-                    throw new RuntimeException(e);\n-                }\n \n-                super.doStart();\n+                    try {\n+                        oldInstanceContext = associator.enter(new DefaultInstanceContext(unshareableResources, applicationManagedSecurityResources));\n+                    } catch (ResourceException e) {\n+                        throw new RuntimeException(e);\n+                    }\n+\n+                    super.doStart();\n+                } finally {\n+                    if (transactionContext != null) {\n+                        transactionContextManager.setContext(null);\n+                        try {\n+                            transactionContext.commit();\n+                        } catch (Exception e) {\n+                            //TODO this is undoubtedly the wrong error code!\n+                            throw (HttpException) new HttpException(500, \"Problem committing unspecified transaction context\").initCause(e);\n+                        }\n+                    }\n+                }\n             } finally {\n                 try {\n                     associator.exit(oldInstanceContext);\n@@ -245,12 +275,11 @@ public void doStart() throws WaitingException, Exception {\n     public void doStop() throws Exception {\n \n         // merge Geronimo and Jetty Lifecycles\n-        if (!isStopping())\n-        {\n+        if (!isStopping()) {\n             super.stop();\n             return;\n         }\n-        \n+\n         ClassLoader oldCL = Thread.currentThread().getContextClassLoader();\n         try {\n             Thread.currentThread().setContextClassLoader(classLoader);\n@@ -261,23 +290,37 @@ public void doStop() throws Exception {\n                 // Turn on the UserTransaction\n                 userTransaction.setOnline(true);\n \n-                //TODO should this always create an unspecified context, or might this be executed in a tx?\n-                if (transactionContextManager.getContext() == null) {\n-                    transactionContextManager.newUnspecifiedTransactionContext();\n+                TransactionContext transactionContext = transactionContextManager.getContext();\n+                if (transactionContext == null) {\n+                    transactionContext = transactionContextManager.newUnspecifiedTransactionContext();\n+                } else {\n+                    transactionContext = null;\n                 }\n-\n                 try {\n-                    oldInstanceContext = associator.enter(new DefaultInstanceContext(unshareableResources, applicationManagedSecurityResources));\n-                } catch (ResourceException e) {\n-                    throw new RuntimeException(e);\n-                }\n \n-                while (true) {\n                     try {\n-                        super.doStop();\n-                        break;\n-                    } catch (InterruptedException e) {\n-                        continue;\n+                        oldInstanceContext = associator.enter(new DefaultInstanceContext(unshareableResources, applicationManagedSecurityResources));\n+                    } catch (ResourceException e) {\n+                        throw new RuntimeException(e);\n+                    }\n+\n+                    while (true) {\n+                        try {\n+                            super.doStop();\n+                            break;\n+                        } catch (InterruptedException e) {\n+                            continue;\n+                        }\n+                    }\n+                } finally {\n+                    if (transactionContext != null) {\n+                        transactionContextManager.setContext(null);\n+                        try {\n+                            transactionContext.commit();\n+                        } catch (Exception e) {\n+                            //TODO this is undoubtedly the wrong error code!\n+                            throw (HttpException) new HttpException(500, \"Problem committing unspecified transaction context\").initCause(e);\n+                        }\n                     }\n                 }\n             } finally {"
            },
            {
                "sha": "5b2a5e6002909a1e1c0307344566217c1fc5f2e7",
                "filename": "modules/timer/src/java/org/apache/geronimo/timer/ThreadPooledTimer.java",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/ThreadPooledTimer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/ThreadPooledTimer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/java/org/apache/geronimo/timer/ThreadPooledTimer.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -37,6 +37,7 @@\n import org.apache.geronimo.gbean.GBeanLifecycle;\n import org.apache.geronimo.gbean.WaitingException;\n import org.apache.geronimo.transaction.context.TransactionContext;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  *\n@@ -49,20 +50,22 @@\n     private final ExecutorTaskFactory executorTaskFactory;\n     private final WorkerPersistence workerPersistence;\n     private final Executor executor;\n+    private final TransactionContextManager transactionContextManager;\n \n     private Timer delegate;\n \n     private final Map idToWorkInfoMap = Collections.synchronizedMap(new HashMap());\n \n     //default constructor for use as reference endpoint.\n     public ThreadPooledTimer() {\n-        this(null, null, null);\n+        this(null, null, null, null);\n     }\n \n-    public ThreadPooledTimer(ExecutorTaskFactory executorTaskFactory, WorkerPersistence workerPersistence, Executor executor) {\n+    public ThreadPooledTimer(ExecutorTaskFactory executorTaskFactory, WorkerPersistence workerPersistence, Executor executor, TransactionContextManager transactionContextManager) {\n         this.executorTaskFactory = executorTaskFactory;\n         this.workerPersistence = workerPersistence;\n         this.executor = executor;\n+        this.transactionContextManager = transactionContextManager;\n     }\n \n     public void doStart() throws WaitingException, Exception {\n@@ -194,8 +197,9 @@ private WorkInfo createWorker(String key, UserTaskFactory userTaskFactory, Execu\n     }\n \n     void registerSynchronization(Synchronization sync) throws RollbackException, SystemException {\n-        TransactionContext transactionContext = TransactionContext.getContext();\n-        Transaction transaction = transactionContext == null ? null : transactionContext.getTransaction();\n+        TransactionContext transactionContext = transactionContextManager.getContext();\n+        //TODO move the registerSynchronization to the TransactionContext\n+        Transaction transaction = transactionContext == null? null: transactionContext.getTransaction();\n         if (transaction == null) {\n             sync.beforeCompletion();\n             sync.afterCompletion(Status.STATUS_COMMITTED);"
            },
            {
                "sha": "911ad1de5ed09d68ae504877e13f851e16af0c09",
                "filename": "modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledNonTransactionalTimer.java",
                "status": "modified",
                "additions": 9,
                "deletions": 8,
                "changes": 17,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledNonTransactionalTimer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledNonTransactionalTimer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledNonTransactionalTimer.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -25,20 +25,19 @@\n import org.apache.geronimo.timer.NontransactionalExecutorTaskFactory;\n import org.apache.geronimo.timer.PersistentTimer;\n import org.apache.geronimo.timer.ThreadPooledTimer;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n- *\n- *\n  * @version $Rev$ $Date$\n- *\n- * */\n+ */\n public class JDBCStoreThreadPooledNonTransactionalTimer extends ThreadPooledTimer {\n \n     public JDBCStoreThreadPooledNonTransactionalTimer(ManagedConnectionFactoryWrapper managedConnectionFactoryWrapper,\n-            Executor threadPool,\n-            Kernel kernel) {\n+                                                      TransactionContextManager transactionContextManager,\n+                                                      Executor threadPool,\n+                                                      Kernel kernel) {\n         super(new NontransactionalExecutorTaskFactory(),\n-                new JDBCWorkerPersistence(kernel, managedConnectionFactoryWrapper), threadPool);\n+                new JDBCWorkerPersistence(kernel, managedConnectionFactoryWrapper), threadPool, transactionContextManager);\n     }\n \n \n@@ -50,9 +49,11 @@ public JDBCStoreThreadPooledNonTransactionalTimer(ManagedConnectionFactoryWrappe\n \n         infoFactory.addReference(\"ManagedConnectionFactoryWrapper\", ManagedConnectionFactoryWrapper.class);\n         infoFactory.addReference(\"ThreadPool\", Executor.class);\n+        infoFactory.addReference(\"TransactionContextManager\", TransactionContextManager.class);\n+\n         infoFactory.addAttribute(\"kernel\", Kernel.class, false);\n \n-        infoFactory.setConstructor(new String[] {\"ManagedConnectionFactoryWrapper\", \"ThreadPool\", \"kernel\"});\n+        infoFactory.setConstructor(new String[]{\"ManagedConnectionFactoryWrapper\", \"TransactionContextManager\", \"ThreadPool\", \"kernel\"});\n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }\n "
            },
            {
                "sha": "543e41b1f4163f33552318da0262910030a7f5d6",
                "filename": "modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledTransactionalTimer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledTransactionalTimer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledTransactionalTimer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/java/org/apache/geronimo/timer/jdbc/JDBCStoreThreadPooledTransactionalTimer.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -41,7 +41,7 @@ public JDBCStoreThreadPooledTransactionalTimer(int repeatCount,\n             Executor threadPool,\n             Kernel kernel) {\n         super(new TransactionalExecutorTaskFactory(transactionContextManager, repeatCount),\n-                new JDBCWorkerPersistence(kernel, managedConnectionFactoryWrapper), threadPool);\n+                new JDBCWorkerPersistence(kernel, managedConnectionFactoryWrapper), threadPool, transactionContextManager);\n     }\n \n "
            },
            {
                "sha": "749f1093681d3b24e23019aa743aee0a06ec7bba",
                "filename": "modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledNonTransactionalTimer.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledNonTransactionalTimer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledNonTransactionalTimer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledNonTransactionalTimer.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.geronimo.timer.NontransactionalExecutorTaskFactory;\n import org.apache.geronimo.timer.PersistentTimer;\n import org.apache.geronimo.timer.ThreadPooledTimer;\n+import org.apache.geronimo.transaction.context.TransactionContextManager;\n \n /**\n  *\n@@ -32,9 +33,9 @@\n  * */\n public class VMStoreThreadPooledNonTransactionalTimer extends ThreadPooledTimer {\n \n-    public VMStoreThreadPooledNonTransactionalTimer(Executor threadPool) {\n+    public VMStoreThreadPooledNonTransactionalTimer(TransactionContextManager transactionContextManager, Executor threadPool) {\n         super(new NontransactionalExecutorTaskFactory(),\n-                new VMWorkerPersistence(), threadPool);\n+                new VMWorkerPersistence(), threadPool, transactionContextManager);\n     }\n \n \n@@ -45,8 +46,9 @@ public VMStoreThreadPooledNonTransactionalTimer(Executor threadPool) {\n         infoFactory.addInterface(PersistentTimer.class);\n \n         infoFactory.addReference(\"ThreadPool\", Executor.class);\n+        infoFactory.addReference(\"TransactionContextManager\", TransactionContextManager.class);\n \n-        infoFactory.setConstructor(new String[] {\"ThreadPool\"});\n+        infoFactory.setConstructor(new String[] {\"TransactionContextManager\", \"ThreadPool\"});\n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }\n "
            },
            {
                "sha": "3ce52e74940a8de9fee2b2c5c4e64eab7dea3b05",
                "filename": "modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledTransactionalTimer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledTransactionalTimer.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledTransactionalTimer.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/java/org/apache/geronimo/timer/vm/VMStoreThreadPooledTransactionalTimer.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -37,7 +37,7 @@ public VMStoreThreadPooledTransactionalTimer(int repeatCount,\n             TransactionContextManager transactionContextManager,\n             Executor threadPool) {\n         super(new TransactionalExecutorTaskFactory(transactionContextManager, repeatCount),\n-                new VMWorkerPersistence(), threadPool);\n+                new VMWorkerPersistence(), threadPool, transactionContextManager);\n     }\n \n "
            },
            {
                "sha": "04f875abb5cd72aec2dfb367f02efd5963b75c4c",
                "filename": "modules/timer/src/test/org/apache/geronimo/timer/AbstractThreadPooledTimerTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/test/org/apache/geronimo/timer/AbstractThreadPooledTimerTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/test/org/apache/geronimo/timer/AbstractThreadPooledTimerTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/test/org/apache/geronimo/timer/AbstractThreadPooledTimerTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -61,7 +61,7 @@ protected void setUp() throws Exception {\n         threadPool.setPoolName(\"TestPool\");\n         threadPool.doStart();\n         WorkerPersistence workerPersistence = new VMWorkerPersistence();\n-        timer = new ThreadPooledTimer(executableWorkFactory, workerPersistence, threadPool);\n+        timer = new ThreadPooledTimer(executableWorkFactory, workerPersistence, threadPool, transactionContextManager);\n         timer.doStart();\n \n         counter.set(0);"
            },
            {
                "sha": "bbd22d1116fa3df2d04629d8fbd761e054c0ef14",
                "filename": "modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 7,
                "changes": 10,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/test/org/apache/geronimo/timer/NontransactionalThreadPooledTimerTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -17,12 +17,8 @@\n \n package org.apache.geronimo.timer;\n \n-import javax.transaction.TransactionManager;\n-\n-import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n import org.apache.geronimo.transaction.context.TransactionContextManager;\n-import org.apache.geronimo.timer.NontransactionalExecutorTaskFactory;\n-import org.apache.geronimo.timer.AbstractThreadPooledTimerTest;\n+import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n \n /**\n  *\n@@ -33,8 +29,8 @@\n public class NontransactionalThreadPooledTimerTest extends AbstractThreadPooledTimerTest {\n \n     protected void setUp() throws Exception {\n-        TransactionManager transactionManager = new TransactionManagerImpl();\n-        transactionContextManager = new TransactionContextManager(transactionManager);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl();\n+        transactionContextManager = new TransactionContextManager(transactionManager, transactionManager, null);\n         executableWorkFactory = new NontransactionalExecutorTaskFactory();\n         super.setUp();\n     }"
            },
            {
                "sha": "6757c15305e51be1fc840c9fe96159810df99c6b",
                "filename": "modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 7,
                "changes": 10,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/timer/src/test/org/apache/geronimo/timer/TransactionalThreadPooledTimerTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -17,12 +17,8 @@\n \n package org.apache.geronimo.timer;\n \n-import javax.transaction.TransactionManager;\n-\n-import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n import org.apache.geronimo.transaction.context.TransactionContextManager;\n-import org.apache.geronimo.timer.TransactionalExecutorTaskFactory;\n-import org.apache.geronimo.timer.AbstractThreadPooledTimerTest;\n+import org.apache.geronimo.transaction.manager.TransactionManagerImpl;\n \n /**\n  *\n@@ -33,8 +29,8 @@\n public class TransactionalThreadPooledTimerTest extends AbstractThreadPooledTimerTest {\n \n     protected void setUp() throws Exception {\n-        TransactionManager transactionManager = new TransactionManagerImpl();\n-        transactionContextManager = new TransactionContextManager(transactionManager);\n+        TransactionManagerImpl transactionManager = new TransactionManagerImpl();\n+        transactionContextManager = new TransactionContextManager(transactionManager, transactionManager, null);\n         executableWorkFactory = new TransactionalExecutorTaskFactory(transactionContextManager, 1);\n         super.setUp();\n     }"
            },
            {
                "sha": "b07eaec46b03d0749b54f62dc21269abee98ec02",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/TransactionManagerProxy.java",
                "status": "modified",
                "additions": 64,
                "deletions": 189,
                "changes": 253,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/TransactionManagerProxy.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/TransactionManagerProxy.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/TransactionManagerProxy.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -19,12 +19,10 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-\n-import javax.resource.spi.XATerminator;\n+import java.util.HashMap;\n import javax.transaction.HeuristicMixedException;\n import javax.transaction.HeuristicRollbackException;\n import javax.transaction.InvalidTransactionException;\n@@ -35,7 +33,6 @@\n import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n import javax.transaction.xa.XAException;\n-import javax.transaction.xa.XAResource;\n import javax.transaction.xa.Xid;\n \n import org.apache.commons.logging.Log;\n@@ -47,12 +44,12 @@\n import org.apache.geronimo.gbean.ReferenceCollectionEvent;\n import org.apache.geronimo.gbean.ReferenceCollectionListener;\n import org.apache.geronimo.gbean.WaitingException;\n+import org.apache.geronimo.transaction.context.TransactionContext;\n+import org.apache.geronimo.transaction.context.UnspecifiedTransactionContext;\n import org.apache.geronimo.transaction.manager.NamedXAResource;\n import org.apache.geronimo.transaction.manager.Recovery;\n import org.apache.geronimo.transaction.manager.ResourceManager;\n import org.apache.geronimo.transaction.manager.XidImporter;\n-import org.apache.geronimo.transaction.context.TransactionContext;\n-import org.apache.geronimo.transaction.context.UnspecifiedTransactionContext;\n \n /**\n  * A wrapper for a TransactionManager that wraps all Transactions in a TransactionProxy\n@@ -62,23 +59,19 @@\n  *\n  * @version $Rev$ $Date$\n  */\n-public class TransactionManagerProxy implements TransactionManager, XATerminator, XAWork, GBeanLifecycle {\n-    private static final boolean NOT_IN_RECOVERY = false;\n-    private static final boolean IN_RECOVERY = true;\n-\n+public class TransactionManagerProxy implements TransactionManager, XidImporter, Recovery, GBeanLifecycle {\n     private static final Log recoveryLog = LogFactory.getLog(\"RecoveryController\");\n \n     private final TransactionManager delegate;\n     private final XidImporter importer;\n     private final ThreadLocal threadTx = new ThreadLocal();\n-    private final Map importedTransactions = new HashMap();\n-    private boolean recoveryState = NOT_IN_RECOVERY;\n     private final Recovery recovery;\n     private final ReferenceCollection resourceManagers;\n     private List recoveryErrors = new ArrayList();\n \n     /**\n      * Constructor taking the TransactionManager to wrap.\n+     *\n      * @param delegate the TransactionManager that should be wrapped\n      */\n     public TransactionManagerProxy(TransactionManager delegate, XidImporter importer, Recovery recovery, Collection resourceManagers) {\n@@ -103,6 +96,7 @@ public TransactionManagerProxy(ConstructorParams params) {\n         this(params.delegate, params.xidImporter, params.recovery, params.resourceManagers);\n     }\n \n+    //TODO NOTE!!! this should be called in an unspecified transaction context, but we cannot enforce this restriction!\n     public void doStart() throws WaitingException, Exception {\n         recovery.recoverLog();\n         List copy = null;\n@@ -127,29 +121,23 @@ public void memberRemoved(ReferenceCollectionEvent event) {\n     }\n \n     private void recoverResourceManager(ResourceManager resourceManager) {\n-        TransactionContext oldTransactionContext = TransactionContext.getContext();\n+        NamedXAResource namedXAResource = null;\n         try {\n-            TransactionContext.setContext(new UnspecifiedTransactionContext());\n-            NamedXAResource namedXAResource = null;\n+            namedXAResource = resourceManager.getRecoveryXAResources();\n+        } catch (SystemException e) {\n+            recoveryLog.error(e);\n+            recoveryErrors.add(e);\n+            return;\n+        }\n+        if (namedXAResource != null) {\n             try {\n-                namedXAResource = resourceManager.getRecoveryXAResources();\n-            } catch (SystemException e) {\n+                recovery.recoverResourceManager(namedXAResource);\n+            } catch (XAException e) {\n                 recoveryLog.error(e);\n                 recoveryErrors.add(e);\n-                return;\n-            }\n-            if (namedXAResource != null) {\n-                try {\n-                    recovery.recoverResourceManager(namedXAResource);\n-                } catch (XAException e) {\n-                    recoveryLog.error(e);\n-                    recoveryErrors.add(e);\n-                } finally {\n-                    resourceManager.returnResource(namedXAResource);\n-                }\n+            } finally {\n+                resourceManager.returnResource(namedXAResource);\n             }\n-        } finally {\n-            TransactionContext.setContext(oldTransactionContext);\n         }\n     }\n \n@@ -225,187 +213,74 @@ public void setRollbackOnly() throws IllegalStateException, SystemException {\n         tx.setRollbackOnly();\n     }\n \n-    /**\n-     * @see javax.resource.spi.XATerminator#commit(javax.transaction.xa.Xid, boolean)\n-     */\n-    public void commit(Xid xid, boolean onePhase) throws XAException {\n-        ImportedTransactionInfo txInfo;\n-        synchronized (importedTransactions) {\n-            txInfo = (ImportedTransactionInfo) importedTransactions.remove(xid);\n-        }\n-        if (txInfo == null) {\n-            throw new XAException(\"No imported transaction for xid: \" + xid);\n-        }\n-        TransactionProxy tx = txInfo.getTransactionProxy();\n \n-        try {\n-            int status = tx.getStatus();\n-            assert status == Status.STATUS_ACTIVE || status == Status.STATUS_PREPARED;\n-        } catch (SystemException e) {\n-            throw new XAException();\n+    //XidImporter implementation. Wrap and unwrap TransactionProxy.\n+    public Transaction importXid(Xid xid) throws XAException, SystemException {\n+        if (threadTx.get() != null) {\n+            throw new IllegalStateException(\"Transaction already associated with current thread\");\n         }\n-        importer.commit(tx.getDelegate(), onePhase);\n+        TransactionProxy transactionProxy = new TransactionProxy(importer.importXid(xid));\n+        threadTx.set(transactionProxy);\n+        return transactionProxy;\n     }\n \n-    /**\n-     * @see javax.resource.spi.XATerminator#forget(javax.transaction.xa.Xid)\n-     */\n-    public void forget(Xid xid) throws XAException {\n-        ImportedTransactionInfo txInfo;\n-        synchronized (importedTransactions) {\n-            txInfo = (ImportedTransactionInfo) importedTransactions.remove(xid);\n-        }\n-        if (txInfo == null) {\n-            throw new XAException(\"No imported transaction for xid: \" + xid);\n-        }\n-        TransactionProxy tx = txInfo.getTransactionProxy();\n-        //todo is there a correct status test here?\n-//        try {\n-//            int status = tx.getStatus();\n-//            assert status == Status.STATUS_ACTIVE || status == Status.STATUS_PREPARED;\n-//        } catch (SystemException e) {\n-//            throw new XAException();\n-//        }\n-        importer.forget(tx.getDelegate());\n+    //TODO how do these relate to threadTx???? probably not at all...\n+    public void commit(Transaction tx, boolean onePhase) throws XAException {\n+        importer.commit(((TransactionProxy) tx).getDelegate(), onePhase);\n     }\n \n-    /**\n-     * @see javax.resource.spi.XATerminator#prepare(javax.transaction.xa.Xid)\n-     */\n-    public int prepare(Xid xid) throws XAException {\n-        ImportedTransactionInfo txInfo;\n-        synchronized (importedTransactions) {\n-            txInfo = (ImportedTransactionInfo) importedTransactions.get(xid);\n-        }\n-        if (txInfo == null) {\n-            throw new XAException(\"No imported transaction for xid: \" + xid);\n-        }\n-        TransactionProxy tx = txInfo.getTransactionProxy();\n-        try {\n-            int status = tx.getStatus();\n-            assert status == Status.STATUS_ACTIVE;\n-        } catch (SystemException e) {\n-            throw new XAException();\n-        }\n-        return importer.prepare(tx.getDelegate());\n+    public void forget(Transaction tx) throws XAException {\n+        importer.forget(((TransactionProxy) tx).getDelegate());\n     }\n \n-    /**\n-     * @see javax.resource.spi.XATerminator#recover(int)\n-     */\n-    public Xid[] recover(int flag) throws XAException {\n-        if (recoveryState == NOT_IN_RECOVERY) {\n-            if ((flag & XAResource.TMSTARTRSCAN) == 0) {\n-                throw new XAException(XAException.XAER_PROTO);\n-            }\n-            recoveryState = IN_RECOVERY;\n-        }\n-        if ((flag & XAResource.TMENDRSCAN) != 0) {\n-            recoveryState = NOT_IN_RECOVERY;\n-        }\n-        //we always return all xids in first call.\n-        //calling \"startrscan\" repeatedly starts at beginning of list again.\n-        if ((flag & XAResource.TMSTARTRSCAN) != 0) {\n-            Map recoveredXidMap = recovery.getExternalXids();\n-            Xid[] recoveredXids = new Xid[recoveredXidMap.size()];\n-            int i = 0;\n-            synchronized (importedTransactions) {\n-                for (Iterator iterator = recoveredXidMap.entrySet().iterator(); iterator.hasNext();) {\n-                    Map.Entry entry = (Map.Entry) iterator.next();\n-                    Xid xid = (Xid) entry.getKey();\n-                    recoveredXids[i++] = xid;\n-                    ImportedTransactionInfo txInfo = new ImportedTransactionInfo(new TransactionProxy((Transaction)entry.getValue()));\n-                    importedTransactions.put(xid, txInfo);\n-                }\n-            }\n-            return recoveredXids;\n-        } else {\n-            return new Xid[0];\n-        }\n+    public int prepare(Transaction tx) throws XAException {\n+        return importer.prepare(((TransactionProxy) tx).getDelegate());\n     }\n \n-    /**\n-     * @see javax.resource.spi.XATerminator#rollback(javax.transaction.xa.Xid)\n-     */\n-    public void rollback(Xid xid) throws XAException {\n-        ImportedTransactionInfo txInfo;\n-        synchronized (importedTransactions) {\n-            txInfo = (ImportedTransactionInfo) importedTransactions.remove(xid);\n-        }\n-        if (txInfo == null) {\n-            throw new XAException(\"No imported transaction for xid: \" + xid);\n-        }\n-        TransactionProxy tx = txInfo.getTransactionProxy();\n+    public void rollback(Transaction tx) throws XAException {\n+        importer.rollback(((TransactionProxy) tx).getDelegate());\n+    }\n \n-        try {\n-            int status = tx.getStatus();\n-            assert status == Status.STATUS_ACTIVE || status == Status.STATUS_PREPARED;\n-        } catch (SystemException e) {\n-            throw new XAException();\n-        }\n-        importer.rollback(tx.getDelegate());\n+    public void setTransactionTimeout(long milliseconds) {\n+        importer.setTransactionTimeout(milliseconds);\n     }\n \n-    public void begin(Xid xid, long txTimeoutMillis) throws XAException, InvalidTransactionException, SystemException {\n-        ImportedTransactionInfo txInfo;\n-        boolean old = true;\n-        synchronized (importedTransactions) {\n-             txInfo = (ImportedTransactionInfo) importedTransactions.get(xid);\n-            if (txInfo == null) {\n-                try {\n-                    txInfo = new ImportedTransactionInfo(new TransactionProxy(importer.importXid(xid)));\n-                    old = false;\n-                } catch (SystemException e) {\n-                    throw (XAException) new XAException(\"Could not import xid\").initCause(e);\n-                }\n-                importedTransactions.put(xid, txInfo);\n-            }\n-            if (txInfo.isActive()) {\n-                throw new XAException(\"Xid already active\");\n-            }\n-            txInfo.setActive(true);\n-        }\n-        threadTx.set(txInfo.getTransactionProxy());\n-        if (old) {\n-            delegate.resume(txInfo.getTransactionProxy().getDelegate());\n-        }\n-        importer.setTransactionTimeout(txTimeoutMillis);\n+    //Recovery implementation\n+    //TODO make an interface of only getExternalIds since other methods don't work.\n+    //Or, decide to expose the other methods.\n+    public void recoverLog() throws XAException {\n+        throw new IllegalStateException(\"Don't call this\");\n     }\n \n-    public void end(Xid xid) throws XAException, SystemException {\n-        synchronized (importedTransactions) {\n-            ImportedTransactionInfo txInfo = (ImportedTransactionInfo) importedTransactions.get(xid);\n-            if (txInfo == null) {\n-                throw new XAException(\"No imported transaction for xid: \" + xid);\n-            }\n-            if (!txInfo.isActive()) {\n-                throw new XAException(\"tx not active for xid: \" + xid);\n-            }\n-            txInfo.setActive(false);\n-        }\n-        threadTx.set(null);\n-        delegate.suspend();\n+    public void recoverResourceManager(NamedXAResource xaResource) throws XAException {\n+        throw new IllegalStateException(\"Don't call this\");\n     }\n \n-    private static class ImportedTransactionInfo {\n-        private final TransactionProxy transactionProxy;\n-        private boolean active;\n+    public boolean hasRecoveryErrors() {\n+        throw new IllegalStateException(\"Don't call this\");\n+    }\n \n-        public ImportedTransactionInfo(TransactionProxy transactionProxy) {\n-            this.transactionProxy = transactionProxy;\n-        }\n+    public List getRecoveryErrors() {\n+        throw new IllegalStateException(\"Don't call this\");\n+    }\n \n-        public TransactionProxy getTransactionProxy() {\n-            return transactionProxy;\n-        }\n+    public boolean localRecoveryComplete() {\n+        throw new IllegalStateException(\"Don't call this\");\n+    }\n \n-        public boolean isActive() {\n-            return active;\n-        }\n+    public int localUnrecoveredCount() {\n+        throw new IllegalStateException(\"Don't call this\");\n+    }\n \n-        public void setActive(boolean active) {\n-            this.active = active;\n+    public Map getExternalXids() {\n+        Map internal = recovery.getExternalXids();\n+        Map external = new HashMap(internal.size());\n+        for (Iterator iterator = internal.entrySet().iterator(); iterator.hasNext();) {\n+            Map.Entry entry = (Map.Entry) iterator.next();\n+            Transaction tx = (Transaction) entry.getValue();\n+            external.put(entry.getKey(), new TransactionProxy(tx));\n         }\n+        return external;\n     }\n \n     public static final GBeanInfo GBEAN_INFO;"
            },
            {
                "sha": "1a7a32788aacddd067ef0084b87301ce5d22509a",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/XAServices.java",
                "status": "removed",
                "additions": 0,
                "deletions": 13,
                "changes": 13,
                "blob_url": "https://github.com/apache/geronimo/blob/46889e646949ddd6270b74c66047e736b011ddee/modules/transaction/src/java/org/apache/geronimo/transaction/XAServices.java",
                "raw_url": "https://github.com/apache/geronimo/raw/46889e646949ddd6270b74c66047e736b011ddee/modules/transaction/src/java/org/apache/geronimo/transaction/XAServices.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/XAServices.java?ref=46889e646949ddd6270b74c66047e736b011ddee",
                "patch": "@@ -1,13 +0,0 @@\n-package org.apache.geronimo.transaction;\n-\n-import javax.transaction.TransactionManager;\n-import javax.resource.spi.XATerminator;\n-\n-/**\n- *\n- *\n- * @version $Rev$ $Date$\n- *\n- * */\n-public interface XAServices extends XATerminator, XAWork {\n-}"
            },
            {
                "sha": "3d35f76c3f0ec34c19ebc65607471f8f787d8727",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/context/ContainerTransactionContext.java",
                "status": "modified",
                "additions": 11,
                "deletions": 7,
                "changes": 18,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/context/ContainerTransactionContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/context/ContainerTransactionContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/context/ContainerTransactionContext.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -28,23 +28,23 @@\n import javax.transaction.TransactionManager;\n \n /**\n- *\n- *\n  * @version $Rev$ $Date$\n  */\n public class ContainerTransactionContext extends InheritableTransactionContext {\n     private final TransactionManager txnManager;\n     private Transaction transaction;\n \n-    public ContainerTransactionContext(TransactionManager txnManager) {\n+    public ContainerTransactionContext(TransactionManager txnManager) throws SystemException, NotSupportedException {\n         this.txnManager = txnManager;\n-    }\n-\n-    public void begin() throws SystemException, NotSupportedException {\n         txnManager.begin();\n         transaction = txnManager.getTransaction();\n     }\n \n+    public ContainerTransactionContext(TransactionManager txnManager, Transaction transaction) {\n+        this.txnManager = txnManager;\n+        this.transaction = transaction;\n+    }\n+\n     public void suspend() throws SystemException {\n         Transaction suspendedTransaction = txnManager.suspend();\n         assert (transaction == suspendedTransaction) : \"suspend did not return our transaction\";\n@@ -59,9 +59,13 @@ public void resume() throws SystemException, InvalidTransactionException {\n      * a successful commit...??\n      *\n      * @throws javax.transaction.HeuristicMixedException\n+     *\n      * @throws javax.transaction.HeuristicRollbackException\n+     *\n      * @throws javax.transaction.RollbackException\n+     *\n      * @throws javax.transaction.SystemException\n+     *\n      */\n     public void commit() throws HeuristicMixedException, HeuristicRollbackException, RollbackException, SystemException {\n         try {\n@@ -139,6 +143,6 @@ public boolean getRollbackOnly() throws SystemException {\n         int status = transaction.getStatus();\n         return (status == Status.STATUS_MARKED_ROLLBACK ||\n                 status == Status.STATUS_ROLLEDBACK ||\n-                status == Status.STATUS_ROLLING_BACK );\n+                status == Status.STATUS_ROLLING_BACK);\n     }\n }"
            },
            {
                "sha": "09095b0a29408353b96e824b66b5dda1e4a1495a",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContext.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContext.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContext.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContext.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -62,7 +62,7 @@ public static void setContext(TransactionContext context) {\n     private Map managedConnections;\n     private InTxCache inTxCache;\n \n-    public abstract void begin() throws SystemException, NotSupportedException;\n+//    public abstract void begin() throws SystemException, NotSupportedException;\n \n     public abstract void suspend() throws SystemException;\n "
            },
            {
                "sha": "fd5edf96df3a7dc9c1a60783b6e16f33297b2bec",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContextManager.java",
                "status": "modified",
                "additions": 217,
                "deletions": 5,
                "changes": 222,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContextManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContextManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/context/TransactionContextManager.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -17,30 +17,53 @@\n \n package org.apache.geronimo.transaction.context;\n \n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+import javax.resource.spi.XATerminator;\n+import javax.transaction.InvalidTransactionException;\n import javax.transaction.NotSupportedException;\n+import javax.transaction.Status;\n import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n+import javax.transaction.xa.XAException;\n+import javax.transaction.xa.XAResource;\n+import javax.transaction.xa.Xid;\n \n import org.apache.geronimo.gbean.GBeanInfo;\n import org.apache.geronimo.gbean.GBeanInfoFactory;\n+import org.apache.geronimo.transaction.XAWork;\n+import org.apache.geronimo.transaction.manager.Recovery;\n+import org.apache.geronimo.transaction.manager.XidImporter;\n \n /**\n  *\n  *\n  * @version $Rev$ $Date$\n  *\n  * */\n-public class TransactionContextManager {\n+public class TransactionContextManager implements XATerminator, XAWork {\n+    private static final boolean NOT_IN_RECOVERY = false;\n+    private static final boolean IN_RECOVERY = true;\n+\n \n     private final TransactionManager transactionManager;\n+    private final XidImporter importer;\n+    private final Recovery recovery;\n+    private final Map importedTransactions = new HashMap();\n+\n+    private boolean recoveryState = NOT_IN_RECOVERY;\n \n     //use as reference endpoint.\n     public TransactionContextManager() {\n-        transactionManager = null;\n+        this(null, null, null);\n     }\n \n-    public TransactionContextManager(TransactionManager transactionManager) {\n+    public TransactionContextManager(TransactionManager transactionManager, XidImporter importer, Recovery recovery) {\n         this.transactionManager = transactionManager;\n+        this.importer = importer;\n+        this.recovery = recovery;\n     }\n \n     public TransactionContext getContext() {\n@@ -54,7 +77,6 @@ public void setContext(TransactionContext transactionContext) {\n     public ContainerTransactionContext newContainerTransactionContext() throws NotSupportedException, SystemException {\n         ContainerTransactionContext transactionContext = new ContainerTransactionContext(transactionManager);\n         TransactionContext.setContext(transactionContext);\n-        transactionContext.begin();\n         return transactionContext;\n     }\n \n@@ -97,6 +119,194 @@ public void setTransactionTimeout(int seconds) throws SystemException {\n         transactionManager.setTransactionTimeout(seconds);\n     }\n \n+\n+    /**\n+     * TODO write and use ImportedTransactionContext for this!\n+      * @see javax.resource.spi.XATerminator#commit(javax.transaction.xa.Xid, boolean)\n+      */\n+     public void commit(Xid xid, boolean onePhase) throws XAException {\n+         ImportedTransactionInfo txInfo;\n+         synchronized (importedTransactions) {\n+             txInfo = (ImportedTransactionInfo) importedTransactions.remove(xid);\n+         }\n+         if (txInfo == null) {\n+             throw new XAException(\"No imported transaction for xid: \" + xid);\n+         }\n+         ContainerTransactionContext containerTransactionContext = txInfo.getContainerTransactionContext();\n+\n+         try {\n+             int status = containerTransactionContext.getTransaction().getStatus();\n+             assert status == Status.STATUS_ACTIVE || status == Status.STATUS_PREPARED;\n+         } catch (SystemException e) {\n+             throw new XAException();\n+         }\n+         importer.commit(containerTransactionContext.getTransaction(), onePhase);\n+     }\n+\n+     /**\n+      * @see javax.resource.spi.XATerminator#forget(javax.transaction.xa.Xid)\n+      */\n+     public void forget(Xid xid) throws XAException {\n+         ImportedTransactionInfo txInfo;\n+         synchronized (importedTransactions) {\n+             txInfo = (ImportedTransactionInfo) importedTransactions.remove(xid);\n+         }\n+         if (txInfo == null) {\n+             throw new XAException(\"No imported transaction for xid: \" + xid);\n+         }\n+         Transaction tx = txInfo.getContainerTransactionContext().getTransaction();\n+         //todo is there a correct status test here?\n+//        try {\n+//            int status = tx.getStatus();\n+//            assert status == Status.STATUS_ACTIVE || status == Status.STATUS_PREPARED;\n+//        } catch (SystemException e) {\n+//            throw new XAException();\n+//        }\n+         importer.forget(tx);\n+     }\n+\n+     /**\n+      * @see javax.resource.spi.XATerminator#prepare(javax.transaction.xa.Xid)\n+      */\n+     public int prepare(Xid xid) throws XAException {\n+         ImportedTransactionInfo txInfo;\n+         synchronized (importedTransactions) {\n+             txInfo = (ImportedTransactionInfo) importedTransactions.get(xid);\n+         }\n+         if (txInfo == null) {\n+             throw new XAException(\"No imported transaction for xid: \" + xid);\n+         }\n+         Transaction tx = txInfo.getContainerTransactionContext().getTransaction();\n+         try {\n+             int status = tx.getStatus();\n+             assert status == Status.STATUS_ACTIVE;\n+         } catch (SystemException e) {\n+             throw new XAException();\n+         }\n+         return importer.prepare(tx);\n+     }\n+\n+     /**\n+      * @see javax.resource.spi.XATerminator#recover(int)\n+      */\n+     public Xid[] recover(int flag) throws XAException {\n+         if (recoveryState == NOT_IN_RECOVERY) {\n+             if ((flag & XAResource.TMSTARTRSCAN) == 0) {\n+                 throw new XAException(XAException.XAER_PROTO);\n+             }\n+             recoveryState = IN_RECOVERY;\n+         }\n+         if ((flag & XAResource.TMENDRSCAN) != 0) {\n+             recoveryState = NOT_IN_RECOVERY;\n+         }\n+         //we always return all xids in first call.\n+         //calling \"startrscan\" repeatedly starts at beginning of list again.\n+         if ((flag & XAResource.TMSTARTRSCAN) != 0) {\n+             Map recoveredXidMap = recovery.getExternalXids();\n+             Xid[] recoveredXids = new Xid[recoveredXidMap.size()];\n+             int i = 0;\n+             synchronized (importedTransactions) {\n+                 for (Iterator iterator = recoveredXidMap.entrySet().iterator(); iterator.hasNext();) {\n+                     Map.Entry entry = (Map.Entry) iterator.next();\n+                     Xid xid = (Xid) entry.getKey();\n+                     recoveredXids[i++] = xid;\n+                     ImportedTransactionInfo txInfo = new ImportedTransactionInfo(new ContainerTransactionContext(transactionManager, (Transaction)entry.getValue()));\n+                     importedTransactions.put(xid, txInfo);\n+                 }\n+             }\n+             return recoveredXids;\n+         } else {\n+             return new Xid[0];\n+         }\n+     }\n+\n+     /**\n+      * @see javax.resource.spi.XATerminator#rollback(javax.transaction.xa.Xid)\n+      */\n+     public void rollback(Xid xid) throws XAException {\n+         ImportedTransactionInfo txInfo;\n+         synchronized (importedTransactions) {\n+             txInfo = (ImportedTransactionInfo) importedTransactions.remove(xid);\n+         }\n+         if (txInfo == null) {\n+             throw new XAException(\"No imported transaction for xid: \" + xid);\n+         }\n+         Transaction tx = txInfo.getContainerTransactionContext().getTransaction();\n+\n+         try {\n+             int status = tx.getStatus();\n+             assert status == Status.STATUS_ACTIVE || status == Status.STATUS_PREPARED;\n+         } catch (SystemException e) {\n+             throw new XAException();\n+         }\n+         importer.rollback(tx);\n+     }\n+\n+\n+    //XAWork implementation\n+    public void begin(Xid xid, long txTimeoutMillis) throws XAException, InvalidTransactionException, SystemException {\n+        ImportedTransactionInfo txInfo;\n+        boolean old = true;\n+        synchronized (importedTransactions) {\n+             txInfo = (ImportedTransactionInfo) importedTransactions.get(xid);\n+            if (txInfo == null) {\n+                try {\n+                    Transaction transaction = importer.importXid(xid);\n+                    ContainerTransactionContext containerTransactionContext = new ContainerTransactionContext(transactionManager, transaction);\n+                    txInfo = new ImportedTransactionInfo(containerTransactionContext);\n+                    old = false;\n+                } catch (SystemException e) {\n+                    throw (XAException) new XAException(\"Could not import xid\").initCause(e);\n+                }\n+                importedTransactions.put(xid, txInfo);\n+            }\n+            if (txInfo.isActive()) {\n+                throw new XAException(\"Xid already active\");\n+            }\n+            txInfo.setActive(true);\n+        }\n+        if (old) {\n+            txInfo.getContainerTransactionContext().resume();\n+        }\n+        importer.setTransactionTimeout(txTimeoutMillis);\n+    }\n+\n+    public void end(Xid xid) throws XAException, SystemException {\n+        synchronized (importedTransactions) {\n+            ImportedTransactionInfo txInfo = (ImportedTransactionInfo) importedTransactions.get(xid);\n+            if (txInfo == null) {\n+                throw new XAException(\"No imported transaction for xid: \" + xid);\n+            }\n+            if (!txInfo.isActive()) {\n+                throw new XAException(\"tx not active for xid: \" + xid);\n+            }\n+            txInfo.getContainerTransactionContext().suspend();\n+            txInfo.setActive(false);\n+        }\n+    }\n+\n+    //todo make an imported transaction context with this info.\n+    private static class ImportedTransactionInfo {\n+        private final ContainerTransactionContext containerTransactionContext;\n+        private boolean active;\n+\n+        public ImportedTransactionInfo(ContainerTransactionContext containerTransactionContext) {\n+            this.containerTransactionContext = containerTransactionContext;\n+        }\n+\n+        public ContainerTransactionContext getContainerTransactionContext() {\n+            return containerTransactionContext;\n+        }\n+\n+        public boolean isActive() {\n+            return active;\n+        }\n+\n+        public void setActive(boolean active) {\n+            this.active = active;\n+        }\n+    }\n+\n     public static final GBeanInfo GBEAN_INFO;\n \n     static {\n@@ -108,8 +318,10 @@ public void setTransactionTimeout(int seconds) throws SystemException {\n         infoFactory.addOperation(\"newUnspecifiedTransactionContext\");\n \n         infoFactory.addReference(\"TransactionManager\", TransactionManager.class);\n+        infoFactory.addReference(\"XidImporter\", XidImporter.class);\n+        infoFactory.addReference(\"Recovery\", Recovery.class);\n \n-        infoFactory.setConstructor(new String[] {\"TransactionManager\"});\n+        infoFactory.setConstructor(new String[] {\"TransactionManager\", \"XidImporter\", \"Recovery\"});\n         GBEAN_INFO = infoFactory.getBeanInfo();\n     }\n "
            },
            {
                "sha": "27c9be2b261724f80082f46898bde217279270ca",
                "filename": "modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionImpl.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionImpl.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/java/org/apache/geronimo/transaction/manager/TransactionImpl.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -88,6 +88,7 @@ public synchronized int getStatus() throws SystemException {\n     }\n \n     public synchronized void setRollbackOnly() throws IllegalStateException, SystemException {\n+        log.info(\"in setRollbackOnly, txImpl\", new Exception(\"stack trace\"));\n         switch (status) {\n             case Status.STATUS_ACTIVE:\n             case Status.STATUS_PREPARING:"
            },
            {
                "sha": "f9915e540eada923587100d42f7ed0e000b3ae93",
                "filename": "modules/transaction/src/test/org/apache/geronimo/transaction/TransactionManagerProxyTest.java",
                "status": "modified",
                "additions": 12,
                "deletions": 9,
                "changes": 21,
                "blob_url": "https://github.com/apache/geronimo/blob/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/test/org/apache/geronimo/transaction/TransactionManagerProxyTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/afe820227771b9b44e7ffbda239da4e6eaba70ac/modules/transaction/src/test/org/apache/geronimo/transaction/TransactionManagerProxyTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/transaction/src/test/org/apache/geronimo/transaction/TransactionManagerProxyTest.java?ref=afe820227771b9b44e7ffbda239da4e6eaba70ac",
                "patch": "@@ -18,6 +18,7 @@\n package org.apache.geronimo.transaction;\n \n import java.util.ArrayList;\n+import java.util.Map;\n \n import javax.transaction.RollbackException;\n import javax.transaction.Status;\n@@ -86,7 +87,7 @@ public void testNoResourcesMarkRollbackOnly() throws Exception {\n         assertEquals(Status.STATUS_MARKED_ROLLBACK, tm.getStatus());\n         try {\n             tm.commit();\n-            fail(\"tx should roll back\");\n+            fail(\"tx should not commit\");\n         } catch (RollbackException e) {\n             //expected\n         }\n@@ -100,7 +101,7 @@ public void testNoResourcesMarkRollbackOnly() throws Exception {\n         assertEquals(Status.STATUS_MARKED_ROLLBACK, tx.getStatus());\n         try {\n             tx.commit();\n-            fail(\"tx should roll back\");\n+            fail(\"tx should not commit\");\n         } catch (RollbackException e) {\n             //expected\n         }\n@@ -252,14 +253,15 @@ public void testFourResourceTwoRMCommit() throws Exception {\n     //BE VERY CAREFUL!! the ResourceManager only \"recovers\" the LAST resource it creates.\n     //This test depends on using the resource that will be recovered by the resource manager.\n     public void testSimpleRecovery() throws Exception {\n+        //create a transaction in our own transaction manager\n         Xid xid = xidFactory.createXid();\n-        tm.begin(xid, 1000);\n+        tm.importXid(xid);\n         Transaction tx = tm.getTransaction();\n         tx.enlistResource(r1_2);\n         tx.enlistResource(r2_2);\n         tx.delistResource(r1_2, XAResource.TMSUCCESS);\n         tx.delistResource(r2_2, XAResource.TMSUCCESS);\n-        tm.prepare(xid);\n+        tm.prepare(tx);\n         //recover\n         resourceManagers.add(rm1);\n         tm.doStart();\n@@ -271,15 +273,16 @@ public void testSimpleRecovery() throws Exception {\n     }\n \n     public void testImportedXidRecovery() throws Exception {\n+        //create a transaction from an external transaction manager.\n         XidFactory xidFactory2 = new XidFactoryImpl(\"tm2\".getBytes());\n         Xid xid = xidFactory2.createXid();\n-        tm.begin(xid, 1000);\n+        tm.importXid(xid);\n         Transaction tx = tm.getTransaction();\n         tx.enlistResource(r1_2);\n         tx.enlistResource(r2_2);\n         tx.delistResource(r1_2, XAResource.TMSUCCESS);\n         tx.delistResource(r2_2, XAResource.TMSUCCESS);\n-        tm.prepare(xid);\n+        tm.prepare(tx);\n         //recover\n         resourceManagers.add(rm1);\n         tm.doStart();\n@@ -289,9 +292,9 @@ public void testImportedXidRecovery() throws Exception {\n         assertTrue(!r2_2.isCommitted());\n         //there are no transactions started here, so local recovery is complete\n         assertTrue(recovery.localRecoveryComplete());\n-        Xid[] recovered = tm.recover(XAResource.TMSTARTRSCAN);\n-        assertEquals(1, recovered.length);\n-        assertEquals(xid, recovered[0]);\n+        Map recovered = tm.getExternalXids();\n+        assertEquals(1, recovered.size());\n+        assertEquals(xid, recovered.keySet().iterator().next());\n     }\n \n     public void testResourceManagerContract() throws Exception {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/1f1e0397e40d8eb193fedd565d1584540c6a1d10",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/d003bce6d1538b021d4af72a38d24398795c4aa2",
        "message": "Should have been ci as part of r519908.\n\n* Do not start jsr88-cli within the server. It defines a GBean implementing\nthe PluginInstaller type, GBean named ModuleConfigurerRegistry, which\nis not intended to be used within a server as the other GBeans of this \nmodule. This causes a NPE during the installation of plugins via the command\nline deployer: CommandInstallCAR tries to execute startInstall\nagainst all the GBeans implementing the PluginInstaller type and this\ninvokation fails with a NPE against ModuleConfigurerRegistry.\n\n* Push up the DeploymentFactoryImpl implementation to BaseDeploymentFactory,\nsuch that DeploymentFactoryWithKernel can extend it instead of \nDeploymentFactoryImpl. This refactoring is done to ensure that \nDeploymentFactoryWithKernel does not register a DeploymentFactoryImpl\ninstance with DeploymentFactoryManager (done via a static block).\n\nThis fixes GERONIMO-2983 Installation of plugins via the command line is \nbroken.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@519919 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_103",
        "file": [
            {
                "sha": "95bca793f451a9b0e179935a1af20b0d86c91f18",
                "filename": "applications/console/geronimo-console-standard/src/main/java/org/apache/geronimo/console/util/PortletManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/geronimo/blob/1f1e0397e40d8eb193fedd565d1584540c6a1d10/applications/console/geronimo-console-standard/src/main/java/org/apache/geronimo/console/util/PortletManager.java",
                "raw_url": "https://github.com/apache/geronimo/raw/1f1e0397e40d8eb193fedd565d1584540c6a1d10/applications/console/geronimo-console-standard/src/main/java/org/apache/geronimo/console/util/PortletManager.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/applications/console/geronimo-console-standard/src/main/java/org/apache/geronimo/console/util/PortletManager.java?ref=1f1e0397e40d8eb193fedd565d1584540c6a1d10",
                "patch": "@@ -22,6 +22,7 @@\n \n import javax.enterprise.deploy.spi.DeploymentManager;\n import javax.enterprise.deploy.spi.exceptions.DeploymentManagerCreationException;\n+import javax.enterprise.deploy.spi.factories.DeploymentFactory;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.portlet.PortletRequest;\n@@ -35,7 +36,6 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.geronimo.deployment.plugin.factories.DeploymentFactoryImpl;\n import org.apache.geronimo.deployment.plugin.factories.DeploymentFactoryWithKernel;\n import org.apache.geronimo.gbean.AbstractName;\n import org.apache.geronimo.gbean.GBeanData;\n@@ -99,7 +99,7 @@ private static Kernel getKernel() {\n \n     public static DeploymentManager getDeploymentManager(PortletRequest request) {\n         Kernel kernel = getKernel();\n-        DeploymentFactoryImpl factory = new DeploymentFactoryWithKernel(kernel);\n+        DeploymentFactory factory = new DeploymentFactoryWithKernel(kernel);\n         try {\n             return factory.getDeploymentManager(\"deployer:geronimo:inVM\", null, null);\n         } catch (DeploymentManagerCreationException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/d003bce6d1538b021d4af72a38d24398795c4aa2",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/8c3d9a3e31653502940b346c954db33b913557a6",
        "message": "* Do not start jsr88-cli within the server. It defines a GBean implementing\nthe PluginInstaller type, GBean named ModuleConfigurerRegistry, which\nis not intended to be used within a server as the other GBeans of this \nmodule. This causes a NPE during the installation of plugins via the command\nline deployer: CommandInstallCAR tries to execute startInstall\nagainst all the GBeans implementing the PluginInstaller type and this\ninvokation fails with a NPE against ModuleConfigurerRegistry.\n\n* Push up the DeploymentFactoryImpl implementation to BaseDeploymentFactory,\nsuch that DeploymentFactoryWithKernel can extend it instead of \nDeploymentFactoryImpl. This refactoring is done to ensure that \nDeploymentFactoryWithKernel does not register a DeploymentFactoryImpl\ninstance with DeploymentFactoryManager (done via a static block).\n\nThis fixes GERONIMO-2983 Installation of plugins via the command line is \nbroken.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@519908 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_104",
        "file": [
            {
                "sha": "9c588a8d4b69d1f4bfae882bfe4a1aef8d477aeb",
                "filename": "configs/jsr88-ear-configurer/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-ear-configurer/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-ear-configurer/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/configs/jsr88-ear-configurer/pom.xml?ref=d003bce6d1538b021d4af72a38d24398795c4aa2",
                "patch": "@@ -39,6 +39,7 @@\n             <groupId>org.apache.geronimo.configs</groupId>\n             <artifactId>jsr88-cli</artifactId>\n             <version>${version}</version>\n+            <scope>runtime</scope>\n             <type>car</type>\n         </dependency>\n "
            },
            {
                "sha": "8dd87d31d5dcf7c275ecbfc9920894f879b7c116",
                "filename": "configs/jsr88-jar-configurer/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-jar-configurer/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-jar-configurer/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/configs/jsr88-jar-configurer/pom.xml?ref=d003bce6d1538b021d4af72a38d24398795c4aa2",
                "patch": "@@ -39,6 +39,7 @@\n             <groupId>org.apache.geronimo.configs</groupId>\n             <artifactId>jsr88-cli</artifactId>\n             <version>${version}</version>\n+            <scope>runtime</scope>\n             <type>car</type>\n         </dependency>\n "
            },
            {
                "sha": "1fe4e68ebe40e7d4b16228826718ec2d4c024704",
                "filename": "configs/jsr88-rar-configurer/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-rar-configurer/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-rar-configurer/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/configs/jsr88-rar-configurer/pom.xml?ref=d003bce6d1538b021d4af72a38d24398795c4aa2",
                "patch": "@@ -39,6 +39,7 @@\n             <groupId>org.apache.geronimo.configs</groupId>\n             <artifactId>jsr88-cli</artifactId>\n             <version>${version}</version>\n+            <scope>runtime</scope>\n             <type>car</type>\n         </dependency>\n "
            },
            {
                "sha": "cb2f7872e84edbac2f8fa3b009c3e68a2a6cbd73",
                "filename": "configs/jsr88-war-configurer/pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/geronimo/blob/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-war-configurer/pom.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/d003bce6d1538b021d4af72a38d24398795c4aa2/configs/jsr88-war-configurer/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/configs/jsr88-war-configurer/pom.xml?ref=d003bce6d1538b021d4af72a38d24398795c4aa2",
                "patch": "@@ -39,6 +39,7 @@\n             <groupId>org.apache.geronimo.configs</groupId>\n             <artifactId>jsr88-cli</artifactId>\n             <version>${version}</version>\n+            <scope>runtime</scope>\n             <type>car</type>\n         </dependency>\n "
            },
            {
                "sha": "266cc4080619f019ac115042a00bfb8885cf7a95",
                "filename": "modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/BaseDeploymentFactory.java",
                "status": "added",
                "additions": 206,
                "deletions": 0,
                "changes": 206,
                "blob_url": "https://github.com/apache/geronimo/blob/d003bce6d1538b021d4af72a38d24398795c4aa2/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/BaseDeploymentFactory.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d003bce6d1538b021d4af72a38d24398795c4aa2/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/BaseDeploymentFactory.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/BaseDeploymentFactory.java?ref=d003bce6d1538b021d4af72a38d24398795c4aa2",
                "patch": "@@ -0,0 +1,206 @@\n+/**\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.geronimo.deployment.plugin.factories;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.enterprise.deploy.spi.DeploymentManager;\n+import javax.enterprise.deploy.spi.exceptions.DeploymentManagerCreationException;\n+import javax.enterprise.deploy.spi.factories.DeploymentFactory;\n+import javax.management.remote.JMXConnector;\n+import javax.management.remote.JMXConnectorFactory;\n+import javax.management.remote.JMXServiceURL;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.geronimo.deployment.ModuleConfigurer;\n+import org.apache.geronimo.deployment.plugin.DisconnectedDeploymentManager;\n+import org.apache.geronimo.deployment.plugin.jmx.LocalDeploymentManager;\n+import org.apache.geronimo.deployment.plugin.jmx.RemoteDeploymentManager;\n+import org.apache.geronimo.kernel.KernelRegistry;\n+\n+/**\n+ * Base implementation of JSR88 DeploymentFactory.\n+ *\n+ * This will create a DeploymentManager using a local Geronimo kernel\n+ * to contain the GBeans that are responsible for deploying each module\n+ * type.\n+ *\n+ * @version $Rev: 514067 $ $Date: 2007-03-03 15:17:02 +1100 (Sat, 03 Mar 2007) $\n+ */\n+public class BaseDeploymentFactory implements DeploymentFactory {\n+    private static final Log log = LogFactory.getLog(BaseDeploymentFactory.class);\n+\n+    public static final String URI_PREFIX = \"deployer:geronimo:\";\n+    private static final int DEFAULT_PORT = 1099;\n+\n+    public BaseDeploymentFactory() {\n+    }\n+\n+    public String getDisplayName() {\n+        return \"Apache Geronimo\";\n+    }\n+\n+    public String getProductVersion() {\n+        return \"1.0\";\n+    }\n+\n+    public boolean handlesURI(String uri) {\n+        return parseURI(uri) != null;\n+    }\n+\n+    private ConnectParams parseURI(String uri) {\n+        uri = uri.trim();\n+        if(!uri.startsWith(URI_PREFIX)) {\n+            return null;\n+        }\n+        uri = uri.substring(URI_PREFIX.length());\n+        int pos = uri.indexOf(\":\");\n+        String protocol = pos == -1 ? uri : uri.substring(0, pos);\n+        uri = pos == -1 ? \"\" : uri.substring(pos+1);\n+        if(protocol.equals(\"jmx\")) {\n+            if(!uri.startsWith(\"//\")) {\n+                return new ConnectParams(protocol, \"localhost\", DEFAULT_PORT);\n+            }\n+            uri = uri.substring(2);\n+            pos = uri.indexOf(':');\n+            if(pos == -1) {\n+                return new ConnectParams(protocol, uri.equals(\"\") ? \"localhost\" : uri, DEFAULT_PORT);\n+            }\n+            if(uri.indexOf('/', pos+1) > -1) {\n+                return null;\n+            }\n+            if(uri.indexOf(':', pos+1) > -1) {\n+                return null;\n+            }\n+            String host = uri.substring(0, pos);\n+            String port = uri.substring(pos+1);\n+            try {\n+                return new ConnectParams(protocol, host.equals(\"\") ? \"localhost\" : host, Integer.parseInt(port));\n+            } catch (NumberFormatException e) {\n+                return null;\n+            }\n+        } else if(protocol.equals(\"inVM\")) {\n+            if(uri.startsWith(\"//\")) {\n+                String kernel = uri.substring(2);\n+                return new ConnectParams(protocol, kernel, -1);\n+            } else {\n+                return new ConnectParams(protocol,\n+                        KernelRegistry.getSingleKernel() == null ? null : KernelRegistry.getSingleKernel().getKernelName(),\n+                        -1);\n+            }\n+        } else return null;\n+    }\n+\n+    public DeploymentManager getDisconnectedDeploymentManager(String uri) throws DeploymentManagerCreationException {\n+        if (!handlesURI(uri)) {\n+            return null;\n+        }\n+        \n+        Collection<ModuleConfigurer> moduleConfigurers = getModuleConfigurers();\n+        return new DisconnectedDeploymentManager(moduleConfigurers);\n+    }\n+\n+    public DeploymentManager getDeploymentManager(String uri, String username, String password) throws DeploymentManagerCreationException {\n+        ConnectParams params = parseURI(uri);\n+        if (params == null) {\n+            return null;\n+        }\n+\n+        try {\n+            if (params.getProtocol().equals(\"jmx\")) {\n+                return newRemoteDeploymentManager(username, password, params);\n+            } else if(params.getProtocol().equals(\"inVM\")) {\n+                return new LocalDeploymentManager(KernelRegistry.getKernel(params.getHost()));\n+            } else {\n+                throw new DeploymentManagerCreationException(\"Invalid URI: \" + uri);\n+            }\n+        } catch (RuntimeException e) {\n+            // some DeploymentManagerFactories suppress unchecked exceptions - log and rethrow\n+            log.error(e.getMessage(), e);\n+            throw e;\n+        } catch (Error e) {\n+            // some DeploymentManagerFactories suppress unchecked exceptions - log and rethrow\n+            log.error(e.getMessage(), e);\n+            throw e;\n+        }\n+    }\n+\n+    protected Collection<ModuleConfigurer> getModuleConfigurers() throws DeploymentManagerCreationException {\n+        return Collections.EMPTY_LIST;\n+    }\n+\n+    protected DeploymentManager newRemoteDeploymentManager(String username, String password, ConnectParams params) throws DeploymentManagerCreationException, AuthenticationFailedException {\n+        Map environment = new HashMap();\n+        String[] credentials = new String[]{username, password};\n+        environment.put(JMXConnector.CREDENTIALS, credentials);\n+        environment.put(JMXConnectorFactory.DEFAULT_CLASS_LOADER, BaseDeploymentFactory.class.getClassLoader());\n+        try {\n+            JMXServiceURL address = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://\"+params.getHost()+\":\"+params.getPort()+\"/JMXConnector\");\n+            JMXConnector jmxConnector = JMXConnectorFactory.connect(address, environment);\n+            RemoteDeploymentManager manager = getRemoteDeploymentManager();\n+            manager.init(jmxConnector, params.getHost());\n+            if(!manager.isSameMachine()) {\n+                manager.setAuthentication(username, password);\n+            }\n+            return manager;\n+        } catch (IOException e) {\n+            throw (DeploymentManagerCreationException)new DeploymentManagerCreationException(e.getMessage()).initCause(e);\n+        } catch (SecurityException e) {\n+            throw (AuthenticationFailedException) new AuthenticationFailedException(\"Invalid login.\").initCause(e);\n+        }\n+    }\n+\n+    protected RemoteDeploymentManager getRemoteDeploymentManager() throws DeploymentManagerCreationException {\n+        Collection<ModuleConfigurer> moduleConfigurers = getModuleConfigurers();\n+        return new RemoteDeploymentManager(moduleConfigurers);\n+    }\n+\n+    private final static class ConnectParams {\n+        private String protocol;\n+        private String host;\n+        private int port;\n+\n+        public ConnectParams(String protocol, String host, int port) {\n+            this.protocol = protocol;\n+            this.host = host;\n+            this.port = port;\n+        }\n+\n+        public String getProtocol() {\n+            return protocol;\n+        }\n+\n+        public String getHost() {\n+            return host;\n+        }\n+\n+        public int getPort() {\n+            return port;\n+        }\n+\n+        public String toString() {\n+            return protocol+\" / \"+host+\" / \"+port;\n+        }\n+    }\n+\n+}"
            },
            {
                "sha": "9e0be2c3eae0177c93a9c0f286612c418aad301c",
                "filename": "modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryImpl.java",
                "status": "modified",
                "additions": 1,
                "deletions": 174,
                "changes": 175,
                "blob_url": "https://github.com/apache/geronimo/blob/d003bce6d1538b021d4af72a38d24398795c4aa2/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryImpl.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d003bce6d1538b021d4af72a38d24398795c4aa2/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryImpl.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryImpl.java?ref=d003bce6d1538b021d4af72a38d24398795c4aa2",
                "patch": "@@ -17,27 +17,8 @@\n \n package org.apache.geronimo.deployment.plugin.factories;\n \n-import java.io.IOException;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Map;\n-\n import javax.enterprise.deploy.shared.factories.DeploymentFactoryManager;\n-import javax.enterprise.deploy.spi.DeploymentManager;\n-import javax.enterprise.deploy.spi.exceptions.DeploymentManagerCreationException;\n import javax.enterprise.deploy.spi.factories.DeploymentFactory;\n-import javax.management.remote.JMXConnector;\n-import javax.management.remote.JMXConnectorFactory;\n-import javax.management.remote.JMXServiceURL;\n-\n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n-import org.apache.geronimo.deployment.ModuleConfigurer;\n-import org.apache.geronimo.deployment.plugin.DisconnectedDeploymentManager;\n-import org.apache.geronimo.deployment.plugin.jmx.LocalDeploymentManager;\n-import org.apache.geronimo.deployment.plugin.jmx.RemoteDeploymentManager;\n-import org.apache.geronimo.kernel.KernelRegistry;\n \n /**\n  * Implementation of JSR88 DeploymentFactory.\n@@ -48,165 +29,11 @@\n  *\n  * @version $Rev$ $Date$\n  */\n-public class DeploymentFactoryImpl implements DeploymentFactory {\n-    private static final Log log = LogFactory.getLog(DeploymentFactoryImpl.class);\n-\n-    public static final String URI_PREFIX = \"deployer:geronimo:\";\n-    private static final int DEFAULT_PORT = 1099;\n-\n-    public DeploymentFactoryImpl() {\n-    }\n-\n-    public String getDisplayName() {\n-        return \"Apache Geronimo\";\n-    }\n-\n-    public String getProductVersion() {\n-        return \"1.0\";\n-    }\n-\n-    public boolean handlesURI(String uri) {\n-        return parseURI(uri) != null;\n-    }\n-\n-    private ConnectParams parseURI(String uri) {\n-        uri = uri.trim();\n-        if(!uri.startsWith(URI_PREFIX)) {\n-            return null;\n-        }\n-        uri = uri.substring(URI_PREFIX.length());\n-        int pos = uri.indexOf(\":\");\n-        String protocol = pos == -1 ? uri : uri.substring(0, pos);\n-        uri = pos == -1 ? \"\" : uri.substring(pos+1);\n-        if(protocol.equals(\"jmx\")) {\n-            if(!uri.startsWith(\"//\")) {\n-                return new ConnectParams(protocol, \"localhost\", DEFAULT_PORT);\n-            }\n-            uri = uri.substring(2);\n-            pos = uri.indexOf(':');\n-            if(pos == -1) {\n-                return new ConnectParams(protocol, uri.equals(\"\") ? \"localhost\" : uri, DEFAULT_PORT);\n-            }\n-            if(uri.indexOf('/', pos+1) > -1) {\n-                return null;\n-            }\n-            if(uri.indexOf(':', pos+1) > -1) {\n-                return null;\n-            }\n-            String host = uri.substring(0, pos);\n-            String port = uri.substring(pos+1);\n-            try {\n-                return new ConnectParams(protocol, host.equals(\"\") ? \"localhost\" : host, Integer.parseInt(port));\n-            } catch (NumberFormatException e) {\n-                return null;\n-            }\n-        } else if(protocol.equals(\"inVM\")) {\n-            if(uri.startsWith(\"//\")) {\n-                String kernel = uri.substring(2);\n-                return new ConnectParams(protocol, kernel, -1);\n-            } else {\n-                return new ConnectParams(protocol,\n-                        KernelRegistry.getSingleKernel() == null ? null : KernelRegistry.getSingleKernel().getKernelName(),\n-                        -1);\n-            }\n-        } else return null;\n-    }\n-\n-    public DeploymentManager getDisconnectedDeploymentManager(String uri) throws DeploymentManagerCreationException {\n-        if (!handlesURI(uri)) {\n-            return null;\n-        }\n-        \n-        Collection<ModuleConfigurer> moduleConfigurers = getModuleConfigurers();\n-        return new DisconnectedDeploymentManager(moduleConfigurers);\n-    }\n-\n-    public DeploymentManager getDeploymentManager(String uri, String username, String password) throws DeploymentManagerCreationException {\n-        ConnectParams params = parseURI(uri);\n-        if (params == null) {\n-            return null;\n-        }\n-\n-        try {\n-            if (params.getProtocol().equals(\"jmx\")) {\n-                return newRemoteDeploymentManager(username, password, params);\n-            } else if(params.getProtocol().equals(\"inVM\")) {\n-                return new LocalDeploymentManager(KernelRegistry.getKernel(params.getHost()));\n-            } else {\n-                throw new DeploymentManagerCreationException(\"Invalid URI: \" + uri);\n-            }\n-        } catch (RuntimeException e) {\n-            // some DeploymentManagerFactories suppress unchecked exceptions - log and rethrow\n-            log.error(e.getMessage(), e);\n-            throw e;\n-        } catch (Error e) {\n-            // some DeploymentManagerFactories suppress unchecked exceptions - log and rethrow\n-            log.error(e.getMessage(), e);\n-            throw e;\n-        }\n-    }\n-\n-    protected Collection<ModuleConfigurer> getModuleConfigurers() throws DeploymentManagerCreationException {\n-        return Collections.EMPTY_LIST;\n-    }\n-\n-    protected DeploymentManager newRemoteDeploymentManager(String username, String password, ConnectParams params) throws DeploymentManagerCreationException, AuthenticationFailedException {\n-        Map environment = new HashMap();\n-        String[] credentials = new String[]{username, password};\n-        environment.put(JMXConnector.CREDENTIALS, credentials);\n-        environment.put(JMXConnectorFactory.DEFAULT_CLASS_LOADER, DeploymentFactoryImpl.class.getClassLoader());\n-        try {\n-            JMXServiceURL address = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://\"+params.getHost()+\":\"+params.getPort()+\"/JMXConnector\");\n-            JMXConnector jmxConnector = JMXConnectorFactory.connect(address, environment);\n-            RemoteDeploymentManager manager = getRemoteDeploymentManager();\n-            manager.init(jmxConnector, params.getHost());\n-            if(!manager.isSameMachine()) {\n-                manager.setAuthentication(username, password);\n-            }\n-            return manager;\n-        } catch (IOException e) {\n-            throw (DeploymentManagerCreationException)new DeploymentManagerCreationException(e.getMessage()).initCause(e);\n-        } catch (SecurityException e) {\n-            throw (AuthenticationFailedException) new AuthenticationFailedException(\"Invalid login.\").initCause(e);\n-        }\n-    }\n-\n-    protected RemoteDeploymentManager getRemoteDeploymentManager() throws DeploymentManagerCreationException {\n-        Collection<ModuleConfigurer> moduleConfigurers = getModuleConfigurers();\n-        return new RemoteDeploymentManager(moduleConfigurers);\n-    }\n+public class DeploymentFactoryImpl extends BaseDeploymentFactory implements DeploymentFactory {\n \n     static {\n         DeploymentFactoryManager manager = DeploymentFactoryManager.getInstance();\n         manager.registerDeploymentFactory(new DeploymentFactoryImpl());\n     }\n \n-    private final static class ConnectParams {\n-        private String protocol;\n-        private String host;\n-        private int port;\n-\n-        public ConnectParams(String protocol, String host, int port) {\n-            this.protocol = protocol;\n-            this.host = host;\n-            this.port = port;\n-        }\n-\n-        public String getProtocol() {\n-            return protocol;\n-        }\n-\n-        public String getHost() {\n-            return host;\n-        }\n-\n-        public int getPort() {\n-            return port;\n-        }\n-\n-        public String toString() {\n-            return protocol+\" / \"+host+\" / \"+port;\n-        }\n-    }\n-\n }"
            },
            {
                "sha": "75696c77330c26c8bf75f52a9039b219f5b59938",
                "filename": "modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryWithKernel.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/geronimo/blob/d003bce6d1538b021d4af72a38d24398795c4aa2/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryWithKernel.java",
                "raw_url": "https://github.com/apache/geronimo/raw/d003bce6d1538b021d4af72a38d24398795c4aa2/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryWithKernel.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/geronimo-deploy-jsr88/src/main/java/org/apache/geronimo/deployment/plugin/factories/DeploymentFactoryWithKernel.java?ref=d003bce6d1538b021d4af72a38d24398795c4aa2",
                "patch": "@@ -37,7 +37,7 @@\n  *\n  * @version $Rev: 503905 $ $Date: 2007-02-06 09:20:49 +1100 (Tue, 06 Feb 2007) $\n  */\n-public class DeploymentFactoryWithKernel extends DeploymentFactoryImpl {\n+public class DeploymentFactoryWithKernel extends BaseDeploymentFactory {\n     private final Kernel kernel;\n     \n     public DeploymentFactoryWithKernel(Kernel kernel) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/8a2aac1bf4f41ac687ce33de1996a4f59334a2b0",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/eb5541b16867e4a65148459ecb357dd687b6ac7c",
        "message": "GERONIMO-2745 NPE at org.apache.geronimo.security.SubjectId.hashCode(SubjectId.java:79)\n  o The problem is due to the shell script geronimo.sh using colon as a path separator instead of semi-colon in ext and endorsed dirs when run under CYGWIN.\n  o Resolved by making the script use semi-colon as path separator when run under CYGWIN\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/server/trunk@497600 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_105",
        "file": [
            {
                "sha": "a853760f18e03f35007706d667abb786e4563e77",
                "filename": "assemblies/geronimo-boilerplate-minimal/src/main/resources/bin/geronimo.sh",
                "status": "modified",
                "additions": 13,
                "deletions": 8,
                "changes": 21,
                "blob_url": "https://github.com/apache/geronimo/blob/8a2aac1bf4f41ac687ce33de1996a4f59334a2b0/assemblies/geronimo-boilerplate-minimal/src/main/resources/bin/geronimo.sh",
                "raw_url": "https://github.com/apache/geronimo/raw/8a2aac1bf4f41ac687ce33de1996a4f59334a2b0/assemblies/geronimo-boilerplate-minimal/src/main/resources/bin/geronimo.sh",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/assemblies/geronimo-boilerplate-minimal/src/main/resources/bin/geronimo.sh?ref=8a2aac1bf4f41ac687ce33de1996a4f59334a2b0",
                "patch": "@@ -234,6 +234,11 @@ if $cygwin; then\n   GERONIMO_HOME=`cygpath --absolute --windows \"$GERONIMO_HOME\"`\n   GERONIMO_BASE=`cygpath --absolute --windows \"$GERONIMO_BASE\"`\n   GERONIMO_TMPDIR=`cygpath --absolute --windows \"$GERONIMO_TMPDIR\"`\n+  EXT_DIRS=\"$JRE_HOME/lib/ext;$GERONIMO_BASE/lib/ext\"\n+  ENDORSED_DIRS=\"$JRE_HOME/lib/endorsed;$GERONIMO_BASE/lib/endorsed\"\n+else\n+  EXT_DIRS=\"$JRE_HOME/lib/ext:$GERONIMO_BASE/lib/ext\"\n+  ENDORSED_DIRS=\"$JRE_HOME/lib/endorsed:$GERONIMO_BASE/lib/endorsed\"\n fi\n \n # ----- Execute The Requested Command -----------------------------------------\n@@ -289,8 +294,8 @@ if [ \"$1\" = \"debug\" ] ; then\n     shift\n     exec \"$_RUNJDB\" $JAVA_OPTS $GERONIMO_OPTS \\\n       -sourcepath \"$JDB_SRCPATH\" \\\n-      -Djava.endorsed.dirs=\"$JRE_HOME/lib/endorsed:$GERONIMO_BASE/lib/endorsed\" \\\n-      -Djava.ext.dirs=\"$JRE_HOME/lib/ext:$GERONIMO_BASE/lib/ext\" \\\n+      -Djava.endorsed.dirs=\"$ENDORSED_DIRS\" \\\n+      -Djava.ext.dirs=\"$EXT_DIRS\" \\\n       -Dorg.apache.geronimo.base.dir=\"$GERONIMO_BASE\" \\\n       -Djava.io.tmpdir=\"$GERONIMO_TMPDIR\" \\\n       -classpath \"$GERONIMO_HOME\"/bin/server.jar \\\n@@ -302,8 +307,8 @@ elif [ \"$1\" = \"run\" ]; then\n   shift\n   exec \"$_RUNJAVA\" $JAVA_OPTS $GERONIMO_OPTS \\\n     -Dorg.apache.geronimo.base.dir=\"$GERONIMO_BASE\" \\\n-    -Djava.endorsed.dirs=\"$JRE_HOME/lib/endorsed:$GERONIMO_BASE/lib/endorsed\" \\\n-    -Djava.ext.dirs=\"$JRE_HOME/lib/ext:$GERONIMO_BASE/lib/ext\" \\\n+    -Djava.endorsed.dirs=\"$ENDORSED_DIRS\" \\\n+    -Djava.ext.dirs=\"$EXT_DIRS\" \\\n     -Djava.io.tmpdir=\"$GERONIMO_TMPDIR\" \\\n     -jar \"$GERONIMO_HOME\"/bin/server.jar $LONG_OPT \"$@\"\n \n@@ -313,8 +318,8 @@ elif [ \"$1\" = \"start\" ] ; then\n   touch \"$GERONIMO_OUT\"\n   $START_OS_CMD \"$_RUNJAVA\" $JAVA_OPTS $GERONIMO_OPTS \\\n     -Dorg.apache.geronimo.base.dir=\"$GERONIMO_BASE\" \\\n-    -Djava.endorsed.dirs=\"$JRE_HOME/lib/endorsed:$GERONIMO_BASE/lib/endorsed\" \\\n-    -Djava.ext.dirs=\"$JRE_HOME/lib/ext:$GERONIMO_BASE/lib/ext\" \\\n+    -Djava.endorsed.dirs=\"$ENDORSED_DIRS\" \\\n+    -Djava.ext.dirs=\"$EXT_DIRS\" \\\n     -Djava.io.tmpdir=\"$GERONIMO_TMPDIR\" \\\n     -jar \"$GERONIMO_HOME\"/bin/server.jar $LONG_OPT \"$@\" \\\n     >> $GERONIMO_OUT 2>&1 &\n@@ -337,8 +342,8 @@ elif [ \"$1\" = \"stop\" ] ; then\n \n   \"$_RUNJAVA\" $JAVA_OPTS $GERONIMO_OPTS \\\n     -Dorg.apache.geronimo.base.dir=\"$GERONIMO_BASE\" \\\n-    -Djava.endorsed.dirs=\"$JRE_HOME/lib/endorsed:$GERONIMO_BASE/lib/endorsed\" \\\n-    -Djava.ext.dirs=\"$JRE_HOME/lib/ext:$GERONIMO_BASE/lib/ext\" \\\n+    -Djava.endorsed.dirs=\"$ENDORSED_DIRS\" \\\n+    -Djava.ext.dirs=\"$EXT_DIRS\" \\\n     -Djava.io.tmpdir=\"$GERONIMO_TMPDIR\" \\\n     -jar \"$GERONIMO_HOME\"/bin/shutdown.jar \"$@\"\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/geronimo/commit/7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
        "repo": "geronimo",
        "parent": "https://github.com/apache/geronimo/commit/78fdd819c9072f10e0a75d5c2a558270f2a593a1",
        "message": "Fixes to JSR-88 DConfigBeans for connectors (and thus DB pool portlet):\n - Don't write out config settings with a value of \"null\" (as opposed to\n   the current behavior of writing with \"nil=true\" which blows up)\n   GERONIMO-1382\n - Add test for this, which also involves being able to read a Geronimo\n   deployment plan into the DConfigBeans successfully (GERONIMO-1383)\n - Add some missing JavaDoc headers\nFix for DB pool portlet so that it doesn't NPE on user or password of null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/branches/1.0@357484 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "geronimo_106",
        "file": [
            {
                "sha": "d5a17a46ef586cfab26d4113dccd3a3e8e2d59e3",
                "filename": "modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConfigPropertySetting.java",
                "status": "modified",
                "additions": 11,
                "deletions": 7,
                "changes": 18,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConfigPropertySetting.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConfigPropertySetting.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConfigPropertySetting.java?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -36,9 +36,9 @@ public ConfigPropertySetting() {\n         super(null);\n     }\n \n-    public ConfigPropertySetting(DDBean configProperty, GerConfigPropertySettingType property) {\n+    public ConfigPropertySetting(DDBean configProperty, GerConfigPropertySettingType property, boolean setDefault) {\n         super(null);\n-        configure(configProperty, property);\n+        configure(configProperty, property, setDefault);\n     }\n \n     protected GerConfigPropertySettingType getPropertySetting() {\n@@ -49,14 +49,18 @@ DDBean getDDBean() {\n         return configProperty;\n     }\n \n-    void configure(DDBean configProperty, GerConfigPropertySettingType property) {\n+    void configure(DDBean configProperty, GerConfigPropertySettingType property, boolean setDefault) {\n         this.configProperty = configProperty;\n         setXmlObject(property);\n         final String name = configProperty.getText(\"config-property-name\")[0];\n         getPropertySetting().setName(name);\n-        String[] test = configProperty.getText(\"config-property-value\");\n-        if(test != null && test.length == 1) {\n-            getPropertySetting().setStringValue(test[0]);\n+        if(setDefault) {\n+            String[] test = configProperty.getText(\"config-property-value\");\n+            if(test != null && test.length == 1) {\n+                getPropertySetting().setStringValue(test[0]);\n+            } else {\n+                getPropertySetting().setStringValue(null);\n+            }\n         }\n     }\n \n@@ -74,7 +78,7 @@ void setName(String name) {\n     }\n \n     public String getValue() {\n-        return getPropertySetting().getStringValue();\n+        return getPropertySetting().isNil() ? null : getPropertySetting().getStringValue();\n     }\n \n     public void setValue(String value) {"
            },
            {
                "sha": "f2b4e86effdb0b404eb409e4a084344d44b26cca",
                "filename": "modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinition.java",
                "status": "modified",
                "additions": 25,
                "deletions": 1,
                "changes": 26,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinition.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinition.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinition.java?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -19,13 +19,22 @@\n import java.util.Set;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.Map;\n+import java.util.HashMap;\n import javax.enterprise.deploy.model.DDBean;\n import org.apache.geronimo.deployment.plugin.XmlBeanSupport;\n import org.apache.geronimo.xbeans.geronimo.GerConnectionDefinitionType;\n import org.apache.geronimo.xbeans.geronimo.GerConnectiondefinitionInstanceType;\n import org.apache.xmlbeans.SchemaTypeLoader;\n \n /**\n+ * Represents /connector/resourceadapter/outbound-resourceadapter/connection-definition\n+ * in the Geronimo Connector deployment plan.  A Geronimo connection definition\n+ * corresponds to a ra.xml connection definition (though there may be several\n+ * Geronimo CDs for each ra.xml CD so this cannot be a DConfigBean [which would\n+ * require a 1:1 mapping]).  Each Geronimo connection definition may have one\n+ * or more instances with different config property settings, etc.\n+ *\n  * @version $Rev$ $Date$\n  */\n public class ConnectionDefinition extends XmlBeanSupport {\n@@ -48,11 +57,26 @@ protected GerConnectionDefinitionType getConnectionDefinition() {\n     void configure(DDBean resourceAdapter, GerConnectionDefinitionType definition) {\n         this.resourceAdapter = resourceAdapter;\n         setXmlObject(definition);\n-        //todo: initialize connectiondefinition-instance from definition\n+        //todo: handle unmatched interfaces below\n+        instances = new ConnectionDefinitionInstance[definition.getConnectiondefinitionInstanceArray().length];\n+        DDBean[] beans = resourceAdapter.getChildBean(\"outbound-resourceadapter/connection-definition\");\n+        DDBean match = null;\n+        for (int i = 0; i < beans.length; i++) {\n+            DDBean bean = beans[i];\n+            if(bean.getText(\"connectionfactory-interface\")[0].equals(definition.getConnectionfactoryInterface())) {\n+                match = bean;\n+                break;\n+            }\n+        }\n+        for (int i = 0; i < instances.length; i++) {\n+            GerConnectiondefinitionInstanceType gerInstance = definition.getConnectiondefinitionInstanceArray()[i];\n+            instances[i] = new ConnectionDefinitionInstance(match, gerInstance);\n+        }\n     }\n \n     // ----------------------- JavaBean Properties for connection-definition ----------------------\n \n+    //todo: instead of String, make this an Enum type aware of the interfaces available in the J2EE DD\n     public String getConnectionFactoryInterface() {\n         return getConnectionDefinition().getConnectionfactoryInterface();\n     }"
            },
            {
                "sha": "14544998c118946295235b2efcae9a34afb86b33",
                "filename": "modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinitionInstance.java",
                "status": "modified",
                "additions": 32,
                "deletions": 5,
                "changes": 37,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinitionInstance.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinitionInstance.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectionDefinitionInstance.java?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -73,9 +73,33 @@ protected GerConnectiondefinitionInstanceType getConnectionInstance() {\n         return (GerConnectiondefinitionInstanceType) getXmlObject();\n     }\n \n+    void clearNullSettings() {\n+        List list = new ArrayList();\n+        for (int i = 0; i < settings.length; i++) {\n+            ConfigPropertySetting setting = settings[i];\n+            if(setting.getValue() != null) {\n+                list.add(setting);\n+            }\n+        }\n+        settings = (ConfigPropertySetting[]) list.toArray(new ConfigPropertySetting[list.size()]);\n+        GerConnectiondefinitionInstanceType instance = getConnectionInstance();\n+        for (int i = instance.getConfigPropertySettingArray().length-1; i>=0; --i) {\n+            GerConfigPropertySettingType type = instance.getConfigPropertySettingArray(i);\n+            if(type.isNil() || type.getStringValue() == null) {\n+                instance.removeConfigPropertySetting(i);\n+            }\n+        }\n+    }\n+\n+    void reconfigure() {\n+        configure(connectionDefinition, getConnectionInstance());\n+    }\n+\n     void configure(DDBean connectionDefinition, GerConnectiondefinitionInstanceType definition) {\n+        ConfigPropertySetting[] old = null;\n         if(this.connectionDefinition != null) {\n             this.connectionDefinition.removeXpathListener(\"config-property\", xpathListener);\n+            old = settings;\n         }\n         this.connectionDefinition = connectionDefinition;\n         setXmlObject(definition);\n@@ -93,7 +117,7 @@ void configure(DDBean connectionDefinition, GerConnectiondefinitionInstanceType\n             GerConfigPropertySettingType setting = previous[i];\n             DDBean ddBean = (DDBean) byName.remove(setting.getName());\n             if(ddBean != null) {\n-                list.add(new ConfigPropertySetting(ddBean, setting));\n+                list.add(new ConfigPropertySetting(ddBean, setting, false));\n             } else {\n                 System.out.println(\"Ignoring connectiondefinition-instance/config-setting \"+setting.getName()+\" (no matching config-property in J2EE DD)\");\n                 //todo: delete it from the XMLBeans tree\n@@ -102,16 +126,19 @@ void configure(DDBean connectionDefinition, GerConnectiondefinitionInstanceType\n         for (Iterator it = byName.keySet().iterator(); it.hasNext();) {\n             String name = (String) it.next();\n             DDBean bean = (DDBean) byName.get(name);\n-            list.add(new ConfigPropertySetting(bean, getConnectionInstance().addNewConfigPropertySetting()));\n+            list.add(new ConfigPropertySetting(bean, getConnectionInstance().addNewConfigPropertySetting(), true));\n         }\n         settings = (ConfigPropertySetting[]) list.toArray(new ConfigPropertySetting[list.size()]);\n+        if(old != null) {\n+            pcs.firePropertyChange(\"configPropertySetting\", old, settings);\n+        }\n         if(connectionDefinition != null) {\n             connectionDefinition.addXpathListener(\"config-property\", xpathListener);\n         }\n         if(connectionDefinition != null) {\n             DDBean parent = connectionDefinition.getChildBean(\"..\")[0];\n-            ConnectionManager old = manager;\n-            if(old == null) {\n+            ConnectionManager oldMgr = manager;\n+            if(oldMgr == null) {\n                 if(definition.getConnectionmanager() != null) {\n                     manager = new ConnectionManager(parent, definition.getConnectionmanager());\n                 } else {\n@@ -124,7 +151,7 @@ void configure(DDBean connectionDefinition, GerConnectiondefinitionInstanceType\n                     manager.configure(parent, definition.addNewConnectionmanager());\n                 }\n             }\n-            pcs.firePropertyChange(\"connectionManager\", old, manager);\n+            pcs.firePropertyChange(\"connectionManager\", oldMgr, manager);\n         }\n     }\n "
            },
            {
                "sha": "bc04759b8b33dc7a9032c9989a4f40130681b885",
                "filename": "modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBRoot.java",
                "status": "modified",
                "additions": 67,
                "deletions": 0,
                "changes": 67,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBRoot.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBRoot.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBRoot.java?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -18,16 +18,28 @@\n \n import java.io.InputStream;\n import java.io.IOException;\n+import java.io.OutputStream;\n+import java.util.Map;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.Arrays;\n import javax.enterprise.deploy.model.DDBeanRoot;\n import javax.enterprise.deploy.model.DDBean;\n import javax.enterprise.deploy.spi.DConfigBean;\n import javax.enterprise.deploy.spi.exceptions.ConfigurationException;\n import org.apache.geronimo.deployment.plugin.DConfigBeanRootSupport;\n import org.apache.geronimo.xbeans.geronimo.GerConnectorDocument;\n+import org.apache.geronimo.xbeans.geronimo.GerAdminobjectInstanceType;\n+import org.apache.geronimo.xbeans.geronimo.GerConnectiondefinitionInstanceType;\n+import org.apache.geronimo.xbeans.geronimo.GerResourceadapterInstanceType;\n+import org.apache.geronimo.xbeans.geronimo.GerConfigPropertySettingType;\n import org.apache.xmlbeans.XmlObject;\n import org.apache.xmlbeans.XmlException;\n import org.apache.xmlbeans.SchemaTypeLoader;\n import org.apache.xmlbeans.XmlBeans;\n+import org.apache.xmlbeans.XmlCursor;\n \n /**\n  * Represents \"/\" in a Geronimo Connector deployment plan (geronimo-ra.xml).\n@@ -96,4 +108,59 @@ public DConfigBean getDConfigBean(DDBean bean) throws ConfigurationException {\n     protected SchemaTypeLoader getSchemaTypeLoader() {\n         return SCHEMA_TYPE_LOADER;\n     }\n+\n+    /**\n+     * When loaded, reset the cached \"connector\" child\n+     */\n+    public void fromXML(InputStream inputStream) throws XmlException, IOException {\n+        DDBean ddb = connector.getDDBean();\n+        super.fromXML(inputStream);\n+        if(getConnectorDocument().getConnector() != null) {\n+            connector = new ConnectorDCB(ddb, getConnectorDocument().getConnector());\n+        } else {\n+            connector = new ConnectorDCB(ddb, getConnectorDocument().addNewConnector());\n+        }\n+        //todo: fire some kind of notification for the DDBeans to catch?\n+    }\n+\n+    /**\n+     * A little trickery -- on a save event, temporarily remove any config-property-setting\n+     * elements with a null value, and then immediately replace them again.  This is because\n+     * we don't want to write them out as null, but we also want to keep the objects in\n+     * sync 1:1 with the config params declared in the J2EE deployment descriptor.\n+     */\n+    public void toXML(OutputStream outputStream) throws IOException {\n+        List parents = new ArrayList();\n+        clearNulls(parents);\n+        try {\n+            super.toXML(outputStream);\n+        } finally {\n+            for (int i = 0; i < parents.size(); i++) {\n+                Object parent = parents.get(i);\n+                if(parent instanceof ConnectionDefinitionInstance) {\n+                    ConnectionDefinitionInstance instance = (ConnectionDefinitionInstance) parent;\n+                    instance.reconfigure();\n+                } //todo: else if instanceof ResourceAdapterInstance, else if instanceof AdminObjectInstance\n+            }\n+        }\n+    }\n+\n+    private void clearNulls(List parents) {\n+        ResourceAdapter[] adapters = connector.getResourceAdapter();\n+        for (int i = 0; i < adapters.length; i++) {\n+            ResourceAdapter adapter = adapters[i];\n+            // todo: check resource adapter instances\n+            ConnectionDefinition defs[] = adapter.getConnectionDefinition();\n+            for (int j = 0; j < defs.length; j++) {\n+                ConnectionDefinition def = defs[j];\n+                ConnectionDefinitionInstance instances[] = def.getConnectionInstances();\n+                for (int k = 0; k < instances.length; k++) {\n+                    ConnectionDefinitionInstance instance = instances[k];\n+                    parents.add(instance);\n+                    instance.clearNullSettings();\n+                }\n+            }\n+        }\n+        //todo: check admin object instances\n+    }\n }"
            },
            {
                "sha": "acebbfa7a67ce806d38fc7ef76f5a6ee907f6207",
                "filename": "modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectorDCB.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectorDCB.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectorDCB.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ConnectorDCB.java?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -47,7 +47,6 @@ public ConnectorDCB(DDBean connectorDDBean, final GerConnectorType connector) {\n         }\n         //todo: do something if resourceAdapterDDBean is null\n         loadExistingData(connector);\n-        //todo: load defaults from J2EE DD /connector/resourceadapter\n \n         // Make sure we're told if /connector/resourceadapter is replaced!\n         connectorDDBean.addXpathListener(\"resourceadapter\", new XpathListener() {\n@@ -257,6 +256,8 @@ public void setDependency(int index, Dependency dep) {\n \n     // ----------------------- End of JavaBean Properties ----------------------\n \n+    \n+\n     protected SchemaTypeLoader getSchemaTypeLoader() {\n         return Connector15DCBRoot.SCHEMA_TYPE_LOADER;\n     }"
            },
            {
                "sha": "ab1e65345f3555669923afff38bc0fa8423cf2fd",
                "filename": "modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ResourceAdapter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ResourceAdapter.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ResourceAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/java/org/apache/geronimo/connector/deployment/jsr88/ResourceAdapter.java?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -27,7 +27,9 @@\n import org.apache.xmlbeans.SchemaTypeLoader;\n \n /**\n- * Represents /connector/resourceadapter in the Geronimo Connector deployment plan\n+ * Represents /connector/resourceadapter in the Geronimo Connector deployment plan.\n+ * Note: is not a DConfigBean, because there may be more than one ResourceAdapter\n+ * in the Geronimo plan per ResourceAdapter in the J2EE deployment descriptor.\n  *\n  * @version $Rev$ $Date$\n  */\n@@ -51,7 +53,6 @@ protected GerResourceadapterType getResourceAdapter() {\n     void configure(DDBean resourceAdapter, GerResourceadapterType ra) {\n         this.resourceAdapter = resourceAdapter;\n         setXmlObject(ra);\n-        //todo: configure myself from the ra\n         if(ra.isSetOutboundResourceadapter()) {\n             DDBean[] test = resourceAdapter.getChildBean(\"outbound-resourceadapter\");\n             if(test != null && test.length > 0) {"
            },
            {
                "sha": "dd8bac283cbd2c635228347a8974f2b89c78ac64",
                "filename": "modules/connector-builder/src/test-resources/plan-with-nulls.xml",
                "status": "added",
                "additions": 32,
                "deletions": 0,
                "changes": 32,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/test-resources/plan-with-nulls.xml",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/test-resources/plan-with-nulls.xml",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/test-resources/plan-with-nulls.xml?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<connector configId=\"user/database-pool-TestPool/1/car\" xmlns=\"http://geronimo.apache.org/xml/ns/j2ee/connector-1.0\">\n+    <dep:dependency xmlns:dep=\"http://geronimo.apache.org/xml/ns/deployment-1.0\">\n+        <dep:uri>org.apache.derby/derbyclient/10.1.1.0/jar</dep:uri>\n+    </dep:dependency>\n+    <resourceadapter>\n+        <outbound-resourceadapter>\n+            <connection-definition>\n+                <connectionfactory-interface>javax.sql.DataSource</connectionfactory-interface>\n+                <connectiondefinition-instance>\n+                    <name>TestPool</name>\n+<!--\n+                    <config-property-setting name=\"Password\" xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\n+-->\n+                    <config-property-setting name=\"CommitBeforeAutocommit\">false</config-property-setting>\n+                    <config-property-setting name=\"Driver\">org.apache.derby.jdbc.EmbeddedDriver</config-property-setting>\n+                    <config-property-setting name=\"ExceptionSorterClass\">org.tranql.connector.AllExceptionsAreFatalSorter</config-property-setting>\n+<!--\n+                    <config-property-setting name=\"UserName\" xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\n+-->\n+                    <config-property-setting name=\"ConnectionURL\">jdbc:derby:TestDatabase;create=true</config-property-setting>\n+                    <connectionmanager>\n+                        <local-transaction/>\n+                        <single-pool>\n+                            <match-one/>\n+                        </single-pool>\n+                    </connectionmanager>\n+                </connectiondefinition-instance>\n+            </connection-definition>\n+        </outbound-resourceadapter>\n+    </resourceadapter>\n+</connector>"
            },
            {
                "sha": "3000c7fc24dae30bf51525215ae47ec1feda23bd",
                "filename": "modules/connector-builder/src/test/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBTest.java",
                "status": "modified",
                "additions": 126,
                "deletions": 11,
                "changes": 137,
                "blob_url": "https://github.com/apache/geronimo/blob/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/test/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBTest.java",
                "raw_url": "https://github.com/apache/geronimo/raw/7e50e74aa287b2eb6d27ed89d66ef84baed03f28/modules/connector-builder/src/test/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBTest.java",
                "contents_url": "https://api.github.com/repos/apache/geronimo/contents/modules/connector-builder/src/test/org/apache/geronimo/connector/deployment/jsr88/Connector15DCBTest.java?ref=7e50e74aa287b2eb6d27ed89d66ef84baed03f28",
                "patch": "@@ -16,14 +16,21 @@\n  */\n package org.apache.geronimo.connector.deployment.jsr88;\n \n-import java.net.URL;\n-import java.util.Set;\n-import java.util.HashSet;\n-import java.util.Collections;\n-import javax.enterprise.deploy.shared.ModuleType;\n-import javax.enterprise.deploy.model.DDBeanRoot;\n import junit.framework.TestCase;\n+import org.apache.geronimo.connector.deployment.RARConfiguration;\n import org.apache.geronimo.deployment.tools.loader.ConnectorDeployable;\n+import org.apache.geronimo.xbeans.geronimo.GerConnectorDocument;\n+import org.apache.geronimo.xbeans.geronimo.GerConfigPropertySettingType;\n+\n+import javax.enterprise.deploy.model.DDBeanRoot;\n+import javax.enterprise.deploy.shared.ModuleType;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n \n /**\n  * @version $Rev$ $Date$\n@@ -105,19 +112,19 @@ public void testCreateDatabase() throws Exception {\n         for (int i = 0; i < 6; i++) {\n             ConfigPropertySetting setting = instance.getConfigPropertySetting(i);\n             if(setting.getName().equals(\"Driver\")) {\n-                assertEquals(\"\", setting.getValue());\n+                assertNull(setting.getValue());\n                 setting.setValue(\"org.postgresql.Driver\");\n                 ++found;\n             } else if(setting.getName().equals(\"ConnectionURL\")) {\n-                assertEquals(\"\", setting.getValue());\n+                assertNull(setting.getValue());\n                 setting.setValue(\"jdbc:postgresql://localhost/TestDatabase\");\n                 ++found;\n             } else if(setting.getName().equals(\"UserName\")) {\n-                assertEquals(\"\", setting.getValue());\n+                assertNull(setting.getValue());\n                 setting.setValue(\"dbuser\");\n                 ++found;\n             } else if(setting.getName().equals(\"Password\")) {\n-                assertEquals(\"\", setting.getValue());\n+                assertNull(setting.getValue());\n                 setting.setValue(\"dbpass\");\n                 ++found;\n             } else {\n@@ -150,7 +157,115 @@ public void testCreateDatabase() throws Exception {\n         pool.setMaxSize(new Integer(30));\n         pool.setBlockingTimeoutMillis(new Integer(5000));\n         //todo: Look at the XmlBeans tree and make sure the right stuff is in there\n-        System.out.println(dcbRoot.getConnectorDocument());\n+//        System.out.println(dcbRoot.getConnectorDocument());\n+    }\n+\n+    public void testWriteWithNulls() throws Exception {\n+        InputStream in = classLoader.getResource(\"plan-with-nulls.xml\").openStream();\n+\n+        // Create and test the DDBeanRoot\n+        URL resource = classLoader.getResource(\"database.rar\");\n+        assertNotNull(resource);\n+        ConnectorDeployable deployable = new ConnectorDeployable(resource);\n+        assertEquals(ModuleType.RAR, deployable.getType());\n+        DDBeanRoot root = deployable.getDDBeanRoot();\n+        assertNotNull(root);\n+        assertEquals(ModuleType.RAR, root.getType());\n+        assertEquals(deployable, root.getDeployableObject());\n+        // Create the DConfigBeanRoot\n+        Connector15DCBRoot dcbRoot = new Connector15DCBRoot(root);\n+        RARConfiguration configuration = new RARConfiguration(deployable, dcbRoot);\n+        configuration.restore(in);\n+        // Try the /connector element\n+        ConnectorDCB connector = (ConnectorDCB) dcbRoot.getDConfigBean(root.getChildBean(dcbRoot.getXpaths()[0])[0]);\n+        assertNotNull(connector);\n+        // Try the /connector/resourceadapter element\n+        assertNotNull(connector.getResourceAdapter());\n+        assertEquals(1, connector.getResourceAdapter().length);\n+        ResourceAdapter adapter = connector.getResourceAdapter()[0];\n+        assertNotNull(adapter);\n+        // Try the /connector/resourceadapter/outbound-resourceadapter/connection-definition element\n+        assertNotNull(adapter.getConnectionDefinition());\n+        assertEquals(1, adapter.getConnectionDefinition().length);\n+        ConnectionDefinition definition = adapter.getConnectionDefinition(0);\n+        // Try the .../connection-definition/connectiondefinition-instance elements\n+        assertNotNull(definition.getConnectionInstances());\n+        assertEquals(1, definition.getConnectionInstances().length);\n+        ConnectionDefinitionInstance instance = definition.getConnectionInstances()[0];\n+        // Try the .../connection-definition/connectiondefinition-instance/config-property-setting elements\n+        assertNotNull(instance.getConfigPropertySetting());\n+        assertEquals(6, instance.getConfigPropertySetting().length);\n+        int nullCount = 0;\n+        for (int i = 0; i < 6; i++) {\n+            if(instance.getConfigPropertySetting(i).getValue() == null) {\n+                ++nullCount;\n+            } else if(instance.getConfigPropertySetting(i).getValue().equals(\"\")) {\n+                instance.getConfigPropertySetting()[i].setValue(null);\n+                ++nullCount;\n+            }\n+        }\n+        // Read the generated XML and count config property setting elements (should be 4)\n+        assertEquals(2, nullCount);\n+        ByteArrayOutputStream pout = new ByteArrayOutputStream();\n+        dcbRoot.toXML(pout);\n+        pout.close();\n+        ByteArrayInputStream pin = new ByteArrayInputStream(pout.toByteArray());\n+        GerConnectorDocument doc = GerConnectorDocument.Factory.parse(pin);\n+        pin.close();\n+        GerConfigPropertySettingType[] settings = doc.getConnector().getResourceadapterArray(0).\n+                getOutboundResourceadapter().getConnectionDefinitionArray(0).\n+                getConnectiondefinitionInstanceArray(0).getConfigPropertySettingArray();\n+        assertEquals(4, settings.length);\n+        for (int i = 0; i < settings.length; i++) {\n+            GerConfigPropertySettingType setting = settings[i];\n+            if(setting.getName().equals(\"CommitBeforeAutocommit\")) {\n+                assertEquals(\"false\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"Driver\")) {\n+                assertEquals(\"org.apache.derby.jdbc.EmbeddedDriver\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"ExceptionSorterClass\")) {\n+                assertEquals(\"org.tranql.connector.AllExceptionsAreFatalSorter\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"ConnectionURL\")) {\n+                assertEquals(\"jdbc:derby:TestDatabase;create=true\", setting.getStringValue());\n+            } else fail(\"Unknown connection setting '\"+setting.getName()+\"'\");\n+        }\n+        // Make sure the original objects didn't lose track of the null config settings\n+        assertEquals(6, instance.getConfigPropertySetting().length);\n+        // Now set them to blank\n+        nullCount = 0;\n+        for (int i = 0; i < 6; i++) {\n+            if(instance.getConfigPropertySetting()[i].getValue() == null) {\n+                instance.getConfigPropertySetting()[i].setValue(\"\");\n+                ++nullCount;\n+            }\n+        }\n+        assertEquals(2, nullCount);\n+        // Now make sure we write out with 6\n+        pout = new ByteArrayOutputStream();\n+        dcbRoot.toXML(pout);\n+        pout.close();\n+        pin = new ByteArrayInputStream(pout.toByteArray());\n+        doc = GerConnectorDocument.Factory.parse(pin);\n+        pin.close();\n+        settings = doc.getConnector().getResourceadapterArray(0).\n+                getOutboundResourceadapter().getConnectionDefinitionArray(0).\n+                getConnectiondefinitionInstanceArray(0).getConfigPropertySettingArray();\n+        assertEquals(6, settings.length);\n+        for (int i = 0; i < settings.length; i++) {\n+            GerConfigPropertySettingType setting = settings[i];\n+            if(setting.getName().equals(\"UserName\")) {\n+                assertEquals(\"\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"Password\")) {\n+                assertEquals(\"\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"CommitBeforeAutocommit\")) {\n+                assertEquals(\"false\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"Driver\")) {\n+                assertEquals(\"org.apache.derby.jdbc.EmbeddedDriver\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"ExceptionSorterClass\")) {\n+                assertEquals(\"org.tranql.connector.AllExceptionsAreFatalSorter\", setting.getStringValue());\n+            } else if(setting.getName().equals(\"ConnectionURL\")) {\n+                assertEquals(\"jdbc:derby:TestDatabase;create=true\", setting.getStringValue());\n+            } else fail(\"Unknown connection setting '\"+setting.getName()+\"'\");\n+        }\n     }\n \n     protected void setUp() throws Exception {"
            }
        ]
    }
]
