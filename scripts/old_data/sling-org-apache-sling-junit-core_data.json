[
    {
        "commit": "https://github.com/apache/sling-org-apache-sling-junit-core/commit/9257e46e8b5984d958a49f71a444da0d9957ee28",
        "repo": "sling-org-apache-sling-junit-core",
        "parent": "https://github.com/apache/sling-org-apache-sling-junit-core/commit/0acb54b738c9162e4f8fdc1e15fd1fcd37d0c31f",
        "message": "SLING-5794 Fix NPE in BundleTestProvider#getTestClasses() (Thanks Axel Hanikel!)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sling/trunk@1748852 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sling-org-apache-sling-junit-core_1",
        "file": [
            {
                "sha": "da5064b3be120704786ddef9ab58c78ff29f5d35",
                "filename": "src/main/java/org/apache/sling/junit/impl/BundleTestsProvider.java",
                "status": "modified",
                "additions": 12,
                "deletions": 11,
                "changes": 23,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-junit-core/blob/9257e46e8b5984d958a49f71a444da0d9957ee28/src/main/java/org/apache/sling/junit/impl/BundleTestsProvider.java",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-junit-core/raw/9257e46e8b5984d958a49f71a444da0d9957ee28/src/main/java/org/apache/sling/junit/impl/BundleTestsProvider.java",
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-junit-core/contents/src/main/java/org/apache/sling/junit/impl/BundleTestsProvider.java?ref=9257e46e8b5984d958a49f71a444da0d9957ee28",
                "patch": "@@ -145,19 +145,20 @@ private String getSlingTestRegexp(Bundle b) {\n     private List<String> getTestClasses(Bundle b) {\n         final List<String> result = new ArrayList<String>();\n         Pattern testClassRegexp = null;\n-        final String headerValue = getSlingTestRegexp(b); \n-        try {\n-            testClassRegexp = Pattern.compile(headerValue);\n-        } catch(PatternSyntaxException pse) {\n-            log.warn(\n-                    \"Invalid pattern '\" + headerValue \n-                    + \"' for bundle \" + b.getSymbolicName() + \", ignored\", \n-                    pse);\n+        final String headerValue = getSlingTestRegexp(b);\n+        if (headerValue != null) {\n+            try {\n+                testClassRegexp = Pattern.compile(headerValue);\n+            }\n+            catch (PatternSyntaxException pse) {\n+                log.warn(\"Invalid pattern '\" + headerValue + \"' for bundle \"\n+                                + b.getSymbolicName() + \", ignored\", pse);\n+            }\n         }\n         \n-        if(testClassRegexp == null) {\n+        if (testClassRegexp == null) {\n             log.info(\"Bundle {} does not have {} header, not looking for test classes\", SLING_TEST_REGEXP);\n-        } else if(Bundle.ACTIVE != b.getState()) {\n+        } else if (Bundle.ACTIVE != b.getState()) {\n             log.info(\"Bundle {} is not active, no test classes considered\", b.getSymbolicName());\n         } else {\n             @SuppressWarnings(\"unchecked\")\n@@ -231,4 +232,4 @@ public String getServicePid() {\n         }\n         return result;\n     }\n-}\n\\ No newline at end of file\n+}"
            }
        ]
    }
]
