[
    {
        "commit": "https://github.com/apache/incubator-taverna-server/commit/09e6efcbf4784037d1d5d162008d4545036e5a77",
        "repo": "incubator-taverna-server",
        "parent": "https://github.com/apache/incubator-taverna-server/commit/497739a4bf868778c9b110406c4a0c30318cdec8",
        "message": "Squelch NPE when clearing extraarg list.",
        "bug_id": "incubator-taverna-server_1",
        "file": [
            {
                "sha": "e0fcde42c92794f9272bb3f97ec0265fb386269e",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/admin/Admin.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/09e6efcbf4784037d1d5d162008d4545036e5a77/server-webapp/src/main/java/org/taverna/server/master/admin/Admin.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/09e6efcbf4784037d1d5d162008d4545036e5a77/server-webapp/src/main/java/org/taverna/server/master/admin/Admin.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/admin/Admin.java?ref=09e6efcbf4784037d1d5d162008d4545036e5a77",
                "patch": "@@ -683,7 +683,7 @@ public AdminDescription(UriInfo ui) {\n \t@XmlType(name = \"StringList\")\n \tpublic static class StringList {\n \t\t@XmlElement\n-\t\tpublic List<String> string;\n+\t\tpublic List<String> string = new ArrayList<String>();\n \t}\n \n \t/**"
            },
            {
                "sha": "04bfcd0ba4a88e8e1f6d2cee9a62e5a836caf9f8",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/admin/AdminBean.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/09e6efcbf4784037d1d5d162008d4545036e5a77/server-webapp/src/main/java/org/taverna/server/master/admin/AdminBean.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/09e6efcbf4784037d1d5d162008d4545036e5a77/server-webapp/src/main/java/org/taverna/server/master/admin/AdminBean.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/admin/AdminBean.java?ref=09e6efcbf4784037d1d5d162008d4545036e5a77",
                "patch": "@@ -279,8 +279,11 @@ public StringList getExtraArguments() {\n \t@RolesAllowed(ADMIN)\n \t@Override\n \tpublic StringList setExtraArguments(StringList newValue) {\n-\t\tfactory.setExtraArguments(newValue.string\n-\t\t\t\t.toArray(new String[newValue.string.size()]));\n+\t\tif (newValue == null || newValue.string == null)\n+\t\t\tfactory.setExtraArguments(new String[0]);\n+\t\telse\n+\t\t\tfactory.setExtraArguments(newValue.string\n+\t\t\t\t\t.toArray(new String[newValue.string.size()]));\n \t\tStringList result = new StringList();\n \t\tresult.string = asList(factory.getExtraArguments());\n \t\treturn result;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-taverna-server/commit/00bf420060bbaaa10214a1acdb58329a1126fc12",
        "repo": "incubator-taverna-server",
        "parent": "https://github.com/apache/incubator-taverna-server/commit/dd54ef0965d25063eff138f2fd47a8e95de97c42",
        "message": "Fix NPE, tune call time logger and make runtime tunable.",
        "bug_id": "incubator-taverna-server_2",
        "file": [
            {
                "sha": "9f0f39bdb14a89869f89f82db4f5d4e7738e57fe",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/localworker/LocalWorkerState.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/java/org/taverna/server/master/localworker/LocalWorkerState.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/java/org/taverna/server/master/localworker/LocalWorkerState.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/localworker/LocalWorkerState.java?ref=00bf420060bbaaa10214a1acdb58329a1126fc12",
                "patch": "@@ -426,9 +426,8 @@ public void store() {\n \t\tif (!isPersistent())\n \t\t\treturn;\n \t\tWorkerModel state = getById(KEY);\n-\t\tif (state == null) {\n+\t\tif (state == null)\n \t\t\tstate = persist(makeInstance());\n-\t\t}\n \n \t\tstate.setDefaultLifetime(defaultLifetime);\n \t\tstate.setExecuteWorkflowScript(executeWorkflowScript);\n@@ -447,7 +446,8 @@ public void store() {\n \t\tif (permittedWorkflows != null)\n \t\t\tstate.setPermittedWorkflowURIs(asList(permittedWorkflows));\n \t\tstate.setRegistryJar(registryJar);\n-\t\tstate.setGenerateProvenance(generateProvenance);\n+\t\tif (generateProvenance != null)\n+\t\t\tstate.setGenerateProvenance(generateProvenance);\n \n \t\tloadedState = true;\n \t}"
            },
            {
                "sha": "a1ac04ae444adeabd92e81cd50893d3068ea04f7",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/utils/CallTimeLogger.java",
                "status": "modified",
                "additions": 15,
                "deletions": 2,
                "changes": 17,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/java/org/taverna/server/master/utils/CallTimeLogger.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/java/org/taverna/server/master/utils/CallTimeLogger.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/utils/CallTimeLogger.java?ref=00bf420060bbaaa10214a1acdb58329a1126fc12",
                "patch": "@@ -10,6 +10,7 @@\n import static java.lang.annotation.ElementType.METHOD;\n import static java.lang.annotation.RetentionPolicy.RUNTIME;\n import static org.apache.commons.logging.LogFactory.getLog;\n+import static org.taverna.server.master.TavernaServer.JMX_ROOT;\n \n import java.lang.annotation.Documented;\n import java.lang.annotation.Retention;\n@@ -19,6 +20,9 @@\n import org.aspectj.lang.ProceedingJoinPoint;\n import org.aspectj.lang.annotation.Around;\n import org.aspectj.lang.annotation.Aspect;\n+import org.springframework.jmx.export.annotation.ManagedAttribute;\n+import org.springframework.jmx.export.annotation.ManagedResource;\n+import org.taverna.server.master.common.version.Version;\n \n /**\n  * This class is responsible for timing all invocations of publicly-exposed\n@@ -28,10 +32,19 @@\n  * @author Donal Fellows\n  */\n @Aspect\n+@ManagedResource(objectName = JMX_ROOT + \"PerformanceMonitor\", description = \"The performance monitor for Taverna Server \"\n+\t\t+ Version.JAVA\n+\t\t+ \". Writes to application log using the category 'Taverna.Server.Performance'.\")\n public class CallTimeLogger {\n-\tprivate long threshold = 2000000;\n+\tprivate long threshold = 4000000;\n \tprivate Log log = getLog(\"Taverna.Server.Performance\");\n \n+\t@ManagedAttribute(description = \"Threshold beneath which monitored call times are not logged. In nanoseconds.\")\n+\tpublic long getThreshold() {\n+\t\treturn threshold;\n+\t}\n+\n+\t@ManagedAttribute(description = \"Threshold beneath which monitored call times are not logged. In nanoseconds.\")\n \tpublic void setThreshold(long threshold) {\n \t\tthis.threshold = threshold;\n \t}\n@@ -57,7 +70,7 @@ public Object time(ProceedingJoinPoint call) throws Throwable {\n \t\t\tlong elapsed = aft - fore;\n \t\t\tif (elapsed > threshold)\n \t\t\t\tlog.info(format(\"call to %s took %.3fms\", call.toShortString(),\n-\t\t\t\t\t\telapsed/1000000.0));\n+\t\t\t\t\t\telapsed / 1000000.0));\n \t\t}\n \t}\n "
            },
            {
                "sha": "1b41ab7f915e915dfe685fce11b2565f21bc0e43",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/utils/DerbyUtils.java",
                "status": "modified",
                "additions": 35,
                "deletions": 29,
                "changes": 64,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/java/org/taverna/server/master/utils/DerbyUtils.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/java/org/taverna/server/master/utils/DerbyUtils.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/utils/DerbyUtils.java?ref=00bf420060bbaaa10214a1acdb58329a1126fc12",
                "patch": "@@ -9,41 +9,47 @@\n /**\n  * Utility class, used to make Derby less broken.\n  * \n- * @see http://stackoverflow.com/questions/1004327/getting-rid-of-derby-log\n- * @see http://stackoverflow.com/questions/3339736/set-system-property-with-spring-configuration-file\n+ * @see <a\n+ *      href=\"http://stackoverflow.com/questions/1004327/getting-rid-of-derby-log\">\n+ *      Getting rid of derby.log </a>\n+ * @see <a\n+ *      href=\"http://stackoverflow.com/questions/3339736/set-system-property-with-spring-configuration-file\">\n+ *      Set system property with Spring configuration file </a>\n  */\n public class DerbyUtils {\n \t/**\n \t * A writer that channels things on to the log.\n \t */\n-\tpublic static final Writer TO_LOG = new Writer() {\n-\t\tLog log = LogFactory.getLog(\"Taverna.Server.Database\");\n-\t\tStringBuilder sb = new StringBuilder();\n+\tpublic static final Writer TO_LOG = new DBLog();\n+\t// Hack\n+\tpublic static final Writer DEV_NULL = TO_LOG;\n+}\n \n-\t\t@Override\n-\t\tpublic void write(char[] cbuf, int off, int len) throws IOException {\n-\t\t\tif (!log.isInfoEnabled())\n-\t\t\t\treturn;\n-\t\t\tsb.append(cbuf, off, len);\n-\t\t\twhile (true) {\n-\t\t\t\tint idx = sb.indexOf(\"\\n\");\n-\t\t\t\tif (idx < 0)\n-\t\t\t\t\tbreak;\n-\t\t\t\tif (idx > 0 && sb.charAt(idx - 1) == '\\r')\n-\t\t\t\t\tidx--;\n-\t\t\t\tlog.info(sb.substring(0, idx));\n-\t\t\t\tsb.delete(0, idx + 1);\n-\t\t\t}\n-\t\t}\n+class DBLog extends Writer {\n+\tLog log = LogFactory.getLog(\"Taverna.Server.Database\");\n+\tStringBuilder sb = new StringBuilder();\n \n-\t\t@Override\n-\t\tpublic void flush() throws IOException {\n+\t@Override\n+\tpublic void write(char[] cbuf, int off, int len) throws IOException {\n+\t\tif (!log.isInfoEnabled())\n+\t\t\treturn;\n+\t\tsb.append(cbuf, off, len);\n+\t\twhile (true) {\n+\t\t\tint idx = sb.indexOf(\"\\n\");\n+\t\t\tif (idx < 0)\n+\t\t\t\tbreak;\n+\t\t\tif (idx > 0 && sb.charAt(idx - 1) == '\\r')\n+\t\t\t\tidx--;\n+\t\t\tlog.info(sb.substring(0, idx));\n+\t\t\tsb.delete(0, idx + 1);\n \t\t}\n+\t}\n \n-\t\t@Override\n-\t\tpublic void close() throws IOException {\n-\t\t}\n-\t};\n-\t// Hack\n-\tpublic static final Writer DEV_NULL = TO_LOG;\n-}\n+\t@Override\n+\tpublic void flush() throws IOException {\n+\t}\n+\n+\t@Override\n+\tpublic void close() throws IOException {\n+\t}\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "97d5ccc93867d9c44454c2ab28745b9b7bc20396",
                "filename": "server-webapp/src/main/webapp/WEB-INF/beans.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/webapp/WEB-INF/beans.xml",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/00bf420060bbaaa10214a1acdb58329a1126fc12/server-webapp/src/main/webapp/WEB-INF/beans.xml",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/webapp/WEB-INF/beans.xml?ref=00bf420060bbaaa10214a1acdb58329a1126fc12",
                "patch": "@@ -68,7 +68,7 @@\n \n \t<bean id=\"webapp.invocationCounter\" class=\"org.taverna.server.master.utils.InvocationCounter\" />\n \t<bean id=\"webapp.perfLogger\" class=\"org.taverna.server.master.utils.CallTimeLogger\">\n-\t\t<property name=\"threshold\" value=\"${calltime.logthreshold:2000000}\" />\n+\t\t<property name=\"threshold\" value=\"${calltime.logthreshold:4000000}\" />\n \t</bean>\n \n \t<bean id=\"run.coreView.prototype\" scope=\"prototype\""
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-taverna-server/commit/39f8ebdf682b80370bcdefb89cfe13b5a4406809",
        "repo": "incubator-taverna-server",
        "parent": "https://github.com/apache/incubator-taverna-server/commit/9628fa7b1236ef008bab70775904e37c30325387",
        "message": "Fix (paper over) NPE on Rob's machine.",
        "bug_id": "incubator-taverna-server_3",
        "file": [
            {
                "sha": "bc50c2ac8c51e573da4d5f1576077d51b3900470",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextDelegate.java",
                "status": "modified",
                "additions": 9,
                "deletions": 5,
                "changes": 14,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/39f8ebdf682b80370bcdefb89cfe13b5a4406809/server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextDelegate.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/39f8ebdf682b80370bcdefb89cfe13b5a4406809/server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextDelegate.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextDelegate.java?ref=39f8ebdf682b80370bcdefb89cfe13b5a4406809",
                "patch": "@@ -293,11 +293,15 @@ public final void conveySecurity() throws GeneralSecurityException,\n \n \t\t\tsynchronized (lock) {\n \t\t\t\ttry {\n-\t\t\t\t\tfor (Trust t : trusted)\n-\t\t\t\t\t\tfor (Certificate cert : t.loadedCertificates) {\n-\t\t\t\t\t\t\ttruststore.addCertificate(cert);\n-\t\t\t\t\t\t\ttrustedCount++;\n-\t\t\t\t\t\t}\n+\t\t\t\t\tfor (Trust t : trusted) {\n+\t\t\t\t\t\tif (t == null || t.loadedCertificates == null)\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\tfor (Certificate cert : t.loadedCertificates)\n+\t\t\t\t\t\t\tif (cert != null) {\n+\t\t\t\t\t\t\t\ttruststore.addCertificate(cert);\n+\t\t\t\t\t\t\t\ttrustedCount++;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t}\n \n \t\t\t\t\tthis.uriToAliasMap = uriToAliasMap;\n \t\t\t\t\tthis.keystore = keystore;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-taverna-server/commit/f3f80d2fded75a883d74ebab6ab9bc64939d4493",
        "repo": "incubator-taverna-server",
        "parent": "https://github.com/apache/incubator-taverna-server/commit/0a294ceccb599920dc6fdb1e7f451562ce1b1ef7",
        "message": "More robust handling of requests for the owner; no NPEs!",
        "bug_id": "incubator-taverna-server_4",
        "file": [
            {
                "sha": "63f24107b5b959fc3600063931a0f1201c7d738f",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java",
                "status": "modified",
                "additions": 13,
                "deletions": 2,
                "changes": 15,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/f3f80d2fded75a883d74ebab6ab9bc64939d4493/server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/f3f80d2fded75a883d74ebab6ab9bc64939d4493/server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java?ref=f3f80d2fded75a883d74ebab6ab9bc64939d4493",
                "patch": "@@ -71,6 +71,7 @@\n import org.taverna.server.master.interfaces.Policy;\n import org.taverna.server.master.interfaces.RunStore;\n import org.taverna.server.master.interfaces.TavernaRun;\n+import org.taverna.server.master.interfaces.TavernaSecurityContext;\n import org.taverna.server.master.rest.DirectoryContents;\n import org.taverna.server.master.rest.ListenerDefinition;\n import org.taverna.server.master.rest.MakeOrUpdateDirEntry;\n@@ -334,7 +335,12 @@ public Listeners getDescription(UriInfo ui) {\n \t\t\t@Override\n \t\t\tpublic String getOwner() {\n \t\t\t\tinvokes++;\n-\t\t\t\treturn run.getSecurityContext().getOwner().getName();\n+\t\t\t\t// TODO: Not yet really implemented\n+\t\t\t\tTavernaSecurityContext c = run.getSecurityContext();\n+\t\t\t\tif (c == null)\n+\t\t\t\t\treturn \"<NOBODY>\";\n+\t\t\t\tPrincipal owner = c.getOwner();\n+\t\t\t\treturn owner == null ? \"<NOBODY>\" : owner.getName();\n \t\t\t}\n \n \t\t\t@Override\n@@ -796,7 +802,12 @@ public void setRunStatus(String runName, Status s)\n \t@Override\n \tpublic String getRunOwner(String runName) throws UnknownRunException {\n \t\tinvokes++;\n-\t\treturn getRun(runName).getSecurityContext().getOwner().getName();\n+\t\t// TODO: Not yet really implemented\n+\t\tTavernaSecurityContext c = getRun(runName).getSecurityContext();\n+\t\tif (c == null)\n+\t\t\treturn \"<NOBODY>\";\n+\t\tPrincipal owner = c.getOwner();\n+\t\treturn owner == null ? \"<NOBODY>\" : owner.getName();\n \t}\n \n \t// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-taverna-server/commit/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
        "repo": "incubator-taverna-server",
        "parent": "https://github.com/apache/incubator-taverna-server/commit/6586c5c3ac26050ce7e2619e0eb398cdbb54e43a",
        "message": "Fix a NPE when fetching the root document on the REST side.\nRefactor the (correctly documented) service interface involved.",
        "bug_id": "incubator-taverna-server_5",
        "file": [
            {
                "sha": "a0fbb1db1dbc81391cd4fc4a4c3ab07164d72564",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/ContentsDescriptorBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 34,
                "changes": 35,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/ContentsDescriptorBuilder.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/ContentsDescriptorBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/ContentsDescriptorBuilder.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -14,7 +14,6 @@\n import static org.taverna.server.master.common.Uri.secure;\n \n import java.io.ByteArrayInputStream;\n-import java.net.URI;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashSet;\n@@ -36,6 +35,7 @@\n import org.taverna.server.master.interfaces.DirectoryEntry;\n import org.taverna.server.master.interfaces.File;\n import org.taverna.server.master.interfaces.TavernaRun;\n+import org.taverna.server.master.interfaces.UriBuilderFactory;\n import org.taverna.server.master.utils.FilenameUtils;\n import org.taverna.server.port_description.AbsentValue;\n import org.taverna.server.port_description.AbstractPortDescription;\n@@ -382,37 +382,4 @@ public InputDescription makeInputDescriptor(TavernaRun run, UriInfo ui) {\n \t\t}\n \t\treturn desc;\n \t}\n-\n-\t/**\n-\t * How to manufacture URIs to workflow runs.\n-\t * \n-\t * @author Donal Fellows\n-\t */\n-\tpublic interface UriBuilderFactory {\n-\t\t/**\n-\t\t * Given a run, get a factory for RESTful URIs to resources associated\n-\t\t * with it.\n-\t\t * \n-\t\t * @param run\n-\t\t *            The run in question.\n-\t\t * @return The {@link URI} factory.\n-\t\t */\n-\t\tUriBuilder getRunUriBuilder(TavernaRun run);\n-\n-\t\t/**\n-\t\t * @return a URI factory that is preconfigured to point to the base of\n-\t\t *         the webapp.\n-\t\t */\n-\t\tUriBuilder getBaseUriBuilder();\n-\n-\t\t/**\n-\t\t * Resolves a URI with respect to the base URI of the factory.\n-\t\t * \n-\t\t * @param uri\n-\t\t *            The URI to resolve, or <tt>null</tt>.\n-\t\t * @return The resolved URI, or <tt>null</tt> if <b>uri</b> is\n-\t\t *         <tt>null</tt>.\n-\t\t */\n-\t\tString resolve(String uri);\n-\t}\n }\n\\ No newline at end of file"
            },
            {
                "sha": "42df53183daa1c007537a09d4b815cdb25582993",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/TavernaServer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/TavernaServer.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/TavernaServer.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/TavernaServer.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -6,10 +6,10 @@\n package org.taverna.server.master;\n \n import org.springframework.beans.factory.annotation.Required;\n-import org.taverna.server.master.ContentsDescriptorBuilder.UriBuilderFactory;\n import org.taverna.server.master.interfaces.Policy;\n import org.taverna.server.master.interfaces.RunStore;\n import org.taverna.server.master.interfaces.TavernaSecurityContext;\n+import org.taverna.server.master.interfaces.UriBuilderFactory;\n import org.taverna.server.master.notification.NotificationEngine;\n import org.taverna.server.master.notification.atom.EventDAO;\n import org.taverna.server.master.rest.TavernaServerREST;"
            },
            {
                "sha": "aed57c9abbae52de7734c282722e1be5788b39b7",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java",
                "status": "modified",
                "additions": 15,
                "deletions": 3,
                "changes": 18,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/TavernaServerImpl.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -48,7 +48,6 @@\n import org.apache.cxf.annotations.WSDLDocumentation;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Required;\n-import org.springframework.beans.factory.annotation.Value;\n import org.taverna.server.master.TavernaServerImpl.SupportAware;\n import org.taverna.server.master.common.Credential;\n import org.taverna.server.master.common.InputDescription;\n@@ -96,6 +95,7 @@\n import org.taverna.server.master.utils.InvocationCounter.CallCounted;\n import org.taverna.server.port_description.OutputDescription;\n \n+import edu.umd.cs.findbugs.annotations.Nullable;\n import edu.umd.cs.findbugs.annotations.SuppressWarnings;\n \n /**\n@@ -197,7 +197,16 @@ public void setEventSource(EventDAO eventSource) {\n \t\tthis.eventSource = eventSource;\n \t}\n \n-\t@Value(\"${taverna.interaction.feed_path}\")\n+\t/**\n+\t * The location of a service-wide interaction feed, derived from a\n+\t * properties file. Expected to be <i>actually</i> not set (to a real\n+\t * value).\n+\t * \n+\t * @param interactionFeed\n+\t *            The URL, which will be resolved relative to the location of\n+\t *            the webapp, or the string \"<tt>none</tt>\" (which corresponds\n+\t *            to a <tt>null</tt>).\n+\t */\n \tpublic void setInteractionFeed(String interactionFeed) {\n \t\tif (\"none\".equals(interactionFeed))\n \t\t\tinteractionFeed = null;\n@@ -961,7 +970,10 @@ public UriBuilder getBaseUriBuilder() {\n \t}\n \n \t@Override\n-\tpublic String resolve(String uri) {\n+\t@Nullable\n+\tpublic String resolve(@Nullable String uri) {\n+\t\tif (uri == null)\n+\t\t\treturn null;\n \t\treturn getBaseUriBuilder().build().resolve(uri).toString();\n \t}\n "
            },
            {
                "sha": "312fa8cb343b2f99f69d43fc81e2cedb0a5034b7",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/interaction/InteractionFeedSupport.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/interaction/InteractionFeedSupport.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/interaction/InteractionFeedSupport.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/interaction/InteractionFeedSupport.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -19,7 +19,6 @@\n import org.apache.abdera.model.Entry;\n import org.apache.abdera.model.Feed;\n import org.springframework.beans.factory.annotation.Required;\n-import org.taverna.server.master.ContentsDescriptorBuilder.UriBuilderFactory;\n import org.taverna.server.master.TavernaServerSupport;\n import org.taverna.server.master.exceptions.FilesystemAccessException;\n import org.taverna.server.master.exceptions.NoDirectoryEntryException;\n@@ -28,6 +27,7 @@\n import org.taverna.server.master.interfaces.DirectoryEntry;\n import org.taverna.server.master.interfaces.File;\n import org.taverna.server.master.interfaces.TavernaRun;\n+import org.taverna.server.master.interfaces.UriBuilderFactory;\n import org.taverna.server.master.utils.FilenameUtils;\n \n /**"
            },
            {
                "sha": "e5cd02c723ee84fa59cfd1046721d2ee7f9c0ba5",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/interfaces/UriBuilderFactory.java",
                "status": "added",
                "additions": 43,
                "deletions": 0,
                "changes": 43,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/interfaces/UriBuilderFactory.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/interfaces/UriBuilderFactory.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/interfaces/UriBuilderFactory.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (C) 2010-2013 The University of Manchester\n+ * \n+ * See the file \"LICENSE\" for license terms.\n+ */\n+package org.taverna.server.master.interfaces;\n+\n+import java.net.URI;\n+\n+import javax.ws.rs.core.UriBuilder;\n+\n+/**\n+ * How to manufacture URIs to workflow runs.\n+ * \n+ * @author Donal Fellows\n+ */\n+public interface UriBuilderFactory {\n+\t/**\n+\t * Given a run, get a factory for RESTful URIs to resources associated\n+\t * with it.\n+\t * \n+\t * @param run\n+\t *            The run in question.\n+\t * @return The {@link URI} factory.\n+\t */\n+\tUriBuilder getRunUriBuilder(TavernaRun run);\n+\n+\t/**\n+\t * @return a URI factory that is preconfigured to point to the base of\n+\t *         the webapp.\n+\t */\n+\tUriBuilder getBaseUriBuilder();\n+\n+\t/**\n+\t * Resolves a URI with respect to the base URI of the factory.\n+\t * \n+\t * @param uri\n+\t *            The URI to resolve, or <tt>null</tt>.\n+\t * @return The resolved URI, or <tt>null</tt> if <b>uri</b> is\n+\t *         <tt>null</tt>.\n+\t */\n+\tString resolve(String uri);\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "f67bdadc0217ecb7d9cf15e192621874a0fb4997",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/localworker/AbstractRemoteRunFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/localworker/AbstractRemoteRunFactory.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/localworker/AbstractRemoteRunFactory.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/localworker/AbstractRemoteRunFactory.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -45,7 +45,6 @@\n import org.taverna.server.localworker.remote.RemoteRunFactory;\n import org.taverna.server.localworker.remote.RemoteSingleRun;\n import org.taverna.server.localworker.server.UsageRecordReceiver;\n-import org.taverna.server.master.ContentsDescriptorBuilder.UriBuilderFactory;\n import org.taverna.server.master.common.Workflow;\n import org.taverna.server.master.exceptions.NoCreateException;\n import org.taverna.server.master.exceptions.NoListenerException;\n@@ -56,6 +55,7 @@\n import org.taverna.server.master.interfaces.Listener;\n import org.taverna.server.master.interfaces.SecurityContextFactory;\n import org.taverna.server.master.interfaces.TavernaRun;\n+import org.taverna.server.master.interfaces.UriBuilderFactory;\n import org.taverna.server.master.notification.atom.EventDAO;\n import org.taverna.server.master.usage.UsageRecordRecorder;\n import org.taverna.server.master.utils.UsernamePrincipal;"
            },
            {
                "sha": "37c2251f99bc8083e01f75ff9301a8c47727dcbf",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/notification/atom/AtomFeed.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/notification/atom/AtomFeed.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/notification/atom/AtomFeed.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/notification/atom/AtomFeed.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -17,8 +17,8 @@\n \n import org.springframework.web.context.ServletContextAware;\n import org.taverna.server.master.TavernaServerSupport;\n-import org.taverna.server.master.ContentsDescriptorBuilder.UriBuilderFactory;\n import org.taverna.server.master.interfaces.TavernaRun;\n+import org.taverna.server.master.interfaces.UriBuilderFactory;\n import org.taverna.server.master.rest.TavernaServerREST.EventFeed;\n import org.taverna.server.master.rest.TavernaServerREST.Events;\n import org.taverna.server.master.utils.UsernamePrincipal;\n@@ -118,6 +118,8 @@ public UriBuilder getBaseUriBuilder() {\n \n \t@Override\n \tpublic String resolve(String uri) {\n+\t\tif (uri == null)\n+\t\t\treturn null;\n \t\treturn baseURI.resolve(uri).toString();\n \t}\n "
            },
            {
                "sha": "23654323538813769682e82cbb4664c84168bf73",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/notification/atom/EventDAO.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/notification/atom/EventDAO.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/notification/atom/EventDAO.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/notification/atom/EventDAO.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -17,9 +17,9 @@\n import org.apache.commons.logging.LogFactory;\n import org.joda.time.DateTime;\n import org.springframework.beans.factory.annotation.Required;\n-import org.taverna.server.master.ContentsDescriptorBuilder.UriBuilderFactory;\n import org.taverna.server.master.interfaces.MessageDispatcher;\n import org.taverna.server.master.interfaces.TavernaRun;\n+import org.taverna.server.master.interfaces.UriBuilderFactory;\n import org.taverna.server.master.utils.JDOSupport;\n import org.taverna.server.master.utils.UsernamePrincipal;\n "
            },
            {
                "sha": "5f9d520030e8be814ee1becd031086eb476a7ca7",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/rest/TavernaServerREST.java",
                "status": "modified",
                "additions": 0,
                "deletions": 8,
                "changes": 8,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/rest/TavernaServerREST.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/rest/TavernaServerREST.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/rest/TavernaServerREST.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -190,12 +190,6 @@ TavernaServerRunREST getRunResource(\n \t\t * Reference to the interaction feed for this server.\n \t\t */\n \t\tpublic Uri interactionFeed;\n-\t\t/**\n-\t\t * Where to go to make queries on the provenance database. Not yet\n-\t\t * supported, so not handled by JAXB.\n-\t\t */\n-\t\t@XmlTransient\n-\t\tpublic Uri database;\n \n \t\t/** Make a blank server description. */\n \t\tpublic ServerDescription() {\n@@ -217,8 +211,6 @@ public ServerDescription(UriInfo ui, String interactionFeed) {\n \t\t\tif (interactionFeed != null && !interactionFeed.isEmpty())\n \t\t\t\tthis.interactionFeed = new Uri(\n \t\t\t\t\t\tjava.net.URI.create(interactionFeed));\n-\t\t\t// database = new Uri(ui, \"database\");\n-\t\t\t// TODO TAVSERV-69: Make the database point to something real\n \t\t}\n \t}\n "
            },
            {
                "sha": "a01b3b2a53ebdeaa5cfdad2476740a2fe2f3b14d",
                "filename": "server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextFactory.java",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextFactory.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/java/org/taverna/server/master/worker/SecurityContextFactory.java?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -20,8 +20,8 @@\n import org.bouncycastle.jce.provider.BouncyCastleProvider;\n import org.springframework.beans.factory.annotation.Required;\n import org.springframework.beans.factory.annotation.Value;\n-import org.taverna.server.master.ContentsDescriptorBuilder.UriBuilderFactory;\n import org.taverna.server.master.interfaces.TavernaRun;\n+import org.taverna.server.master.interfaces.UriBuilderFactory;\n import org.taverna.server.master.utils.FilenameUtils;\n import org.taverna.server.master.utils.UsernamePrincipal;\n import org.taverna.server.master.utils.X500Utils;"
            },
            {
                "sha": "f7c0bc21ea2af756d7dcd0447d89faedb255de9e",
                "filename": "server-webapp/src/main/webapp/WEB-INF/beans.xml",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/incubator-taverna-server/blob/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/webapp/WEB-INF/beans.xml",
                "raw_url": "https://github.com/apache/incubator-taverna-server/raw/209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d/server-webapp/src/main/webapp/WEB-INF/beans.xml",
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-server/contents/server-webapp/src/main/webapp/WEB-INF/beans.xml?ref=209c80e7fe33e9c48e8ec4ee463d10d0a260aa3d",
                "patch": "@@ -10,14 +10,16 @@\n \t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd\n \t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\">\n \n-\t<bean id=\"webapp\" class=\"org.taverna.server.master.TavernaServerImpl\">\n+\t<bean id=\"webapp\"\n+\t\tclass=\"org.taverna.server.master.TavernaServerImpl\">\n \t\t<property name=\"policy\" ref=\"worker.policy\" />\n \t\t<property name=\"runStore\" ref=\"worker.rundb\" />\n \t\t<property name=\"fileUtils\" ref=\"fileUtils\" />\n \t\t<property name=\"contentsDescriptorBuilder\" ref=\"contentsDescriptorBuilder\" />\n \t\t<property name=\"notificationEngine\" ref=\"notificationFabric\" />\n \t\t<property name=\"support\" ref=\"webapp.support\" />\n \t\t<property name=\"eventSource\" ref=\"dispatch.atom\" />\n+\t\t<property name=\"interactionFeed\" value=\"${taverna.interaction.feed_path}\" />\n \t\t<lookup-method name=\"makeRunInterface\" bean=\"run.coreView.prototype\" />\n \t\t<lookup-method name=\"getPolicyDescription\" bean=\"webapp.policyView\" />\n \t</bean>"
            }
        ]
    }
]
