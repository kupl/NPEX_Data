[
    {
        "commit": "https://github.com/apache/opennlp-sandbox/commit/eddbf23426f234f68f798f15bae1285aefd77935",
        "repo": "opennlp-sandbox",
        "parent": "https://github.com/apache/opennlp-sandbox/commit/f962a4977f44edb9717cf5299cab0271b930e3c1",
        "message": "OPENNLP-462 Fixed NPE when no exclusion types are specified.",
        "bug_id": "opennlp-sandbox_1",
        "file": [
            {
                "sha": "ea36f7468ede690c1f934e7a463531a5daf8268f",
                "filename": "caseditor-opennlp-plugin/src/main/java/org/apache/opennlp/caseditor/sentdetect/SentenceContentProvider.java",
                "status": "modified",
                "additions": 9,
                "deletions": 7,
                "changes": 16,
                "blob_url": "https://github.com/apache/opennlp-sandbox/blob/eddbf23426f234f68f798f15bae1285aefd77935/caseditor-opennlp-plugin/src/main/java/org/apache/opennlp/caseditor/sentdetect/SentenceContentProvider.java",
                "raw_url": "https://github.com/apache/opennlp-sandbox/raw/eddbf23426f234f68f798f15bae1285aefd77935/caseditor-opennlp-plugin/src/main/java/org/apache/opennlp/caseditor/sentdetect/SentenceContentProvider.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp-sandbox/contents/caseditor-opennlp-plugin/src/main/java/org/apache/opennlp/caseditor/sentdetect/SentenceContentProvider.java?ref=eddbf23426f234f68f798f15bae1285aefd77935",
                "patch": "@@ -235,6 +235,10 @@ void triggerSentenceDetector() {\n     String exclusionSpanTypeNames = store.getString(OpenNLPPreferenceConstants.SENT_EXCLUSION_TYPE);\n     \n     Type exclusionSpanTypes[] = UIMAUtil.splitTypes(exclusionSpanTypeNames, ',', cas.getTypeSystem());\n+\n+    if (exclusionSpanTypes == null) {\n+      exclusionSpanTypes = new Type[0];\n+    }\n     \n     if (Arrays.binarySearch(exclusionSpanTypes, sentenceType) == -1) {\n       exclusionSpanTypes = Arrays.copyOf(exclusionSpanTypes, exclusionSpanTypes.length + 1);\n@@ -243,13 +247,11 @@ void triggerSentenceDetector() {\n     \n     List<Span> exclusionSpans = new ArrayList<Span>();\n     \n-    if (exclusionSpanTypes != null) {\n-      for (Iterator<AnnotationFS> exclusionAnnIterator = UIMAUtil.createMultiTypeIterator(cas, exclusionSpanTypes);\n-          exclusionAnnIterator.hasNext();) {\n-        \n-        AnnotationFS exclusionAnnotation = exclusionAnnIterator.next();\n-        exclusionSpans.add(new Span(exclusionAnnotation.getBegin(), exclusionAnnotation.getEnd()));\n-      }\n+    for (Iterator<AnnotationFS> exclusionAnnIterator = UIMAUtil.createMultiTypeIterator(cas, exclusionSpanTypes);\n+        exclusionAnnIterator.hasNext();) {\n+      \n+      AnnotationFS exclusionAnnotation = exclusionAnnIterator.next();\n+      exclusionSpans.add(new Span(exclusionAnnotation.getBegin(), exclusionAnnotation.getEnd()));\n     }\n     \n     sentenceDetector.setExclusionSpans(exclusionSpans);"
            }
        ]
    }
]
