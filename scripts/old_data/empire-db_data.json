[
    {
        "commit": "https://github.com/apache/empire-db/commit/5e59fb62aba68c3bd151f4a3d63af692a8dae0cb",
        "repo": "empire-db",
        "parent": "https://github.com/apache/empire-db/commit/4b016750f502358bb5bd7760e7573483026c128e",
        "message": "EMPIREDB-141\ncheck connection parameter to avoid NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/empire-db/trunk@1360566 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "empire-db_1",
        "file": [
            {
                "sha": "9b218ef1d542d3ef08d349317f2e2216cf6b51bc",
                "filename": "empire-db/src/main/java/org/apache/empire/db/DBDatabase.java",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/apache/empire-db/blob/5e59fb62aba68c3bd151f4a3d63af692a8dae0cb/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java",
                "raw_url": "https://github.com/apache/empire-db/raw/5e59fb62aba68c3bd151f4a3d63af692a8dae0cb/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java",
                "contents_url": "https://api.github.com/repos/apache/empire-db/contents/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java?ref=5e59fb62aba68c3bd151f4a3d63af692a8dae0cb",
                "patch": "@@ -1146,7 +1146,10 @@ public int executeSQL(String sqlCmd, Object[] sqlParams, Connection conn, DBData\n     {\n         checkOpen();\n         try \n-        {   // Debug\n+        {   // Check argument\n+            if (conn==null)\n+                throw new InvalidArgumentException(\"conn\", conn);\n+            // Debug\n             if (log.isInfoEnabled())\n                 log.info(\"Executing: \" + sqlCmd);\n             // execute SQL\n@@ -1200,7 +1203,10 @@ public ResultSet executeQuery(String sqlCmd, Object[] sqlParams, boolean scrolla\n     {\n         checkOpen();\n         try\n-        {   // Debug\n+        {   // Check argument\n+            if (conn==null)\n+                throw new InvalidArgumentException(\"conn\", conn);\n+            // Debug\n             if (log.isDebugEnabled())\n     \t        log.debug(\"Executing: \" + sqlCmd);\n             // Execute the Statement"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/empire-db/commit/5686cd1430007df9bfe83305f8de14289464d6e8",
        "repo": "empire-db",
        "parent": "https://github.com/apache/empire-db/commit/05b3749bd203bee8d2ef9f7f4a195f7abeaf3e9a",
        "message": "EMPIREDB-126\nLog NullPointerException from BeanUtils.setProperty\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/empire-db/trunk@1242014 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "empire-db_2",
        "file": [
            {
                "sha": "35dcca10b13dcef7467ec1e99758344a65f2f3d6",
                "filename": "empire-db/src/main/java/org/apache/empire/db/DBRecordData.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/empire-db/blob/5686cd1430007df9bfe83305f8de14289464d6e8/empire-db/src/main/java/org/apache/empire/db/DBRecordData.java",
                "raw_url": "https://github.com/apache/empire-db/raw/5686cd1430007df9bfe83305f8de14289464d6e8/empire-db/src/main/java/org/apache/empire/db/DBRecordData.java",
                "contents_url": "https://api.github.com/repos/apache/empire-db/contents/empire-db/src/main/java/org/apache/empire/db/DBRecordData.java?ref=5686cd1430007df9bfe83305f8de14289464d6e8",
                "patch": "@@ -316,6 +316,9 @@ protected void getBeanProperty(Object bean, String property, Object value)\n             throw new BeanPropertySetException(bean, property, e);\n           // NoSuchMethodException   \n         } catch (NoSuchMethodException e)\n+        {   log.error(bean.getClass().getName() + \": unable to set property '\" + property + \"'\");\n+            throw new BeanPropertySetException(bean, property, e);\n+        } catch (NullPointerException e)\n         {   log.error(bean.getClass().getName() + \": unable to set property '\" + property + \"'\");\n             throw new BeanPropertySetException(bean, property, e);\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/empire-db/commit/7bca1cac66236d47b429ed273296656f0eb4978f",
        "repo": "empire-db",
        "parent": "https://github.com/apache/empire-db/commit/71c32617df2c76556e1005d6fd560f63392c1c90",
        "message": "EMPIREDB-126\nthrow a DBDatabaseNotOpenException rather than a NullPointerException in DBColumn when database is not open.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/empire-db/trunk@1231016 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "empire-db_3",
        "file": [
            {
                "sha": "97421ceb0d6625d273945133c1f467bf554664c5",
                "filename": "empire-db/src/main/java/org/apache/empire/db/DBColumn.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/empire-db/blob/7bca1cac66236d47b429ed273296656f0eb4978f/empire-db/src/main/java/org/apache/empire/db/DBColumn.java",
                "raw_url": "https://github.com/apache/empire-db/raw/7bca1cac66236d47b429ed273296656f0eb4978f/empire-db/src/main/java/org/apache/empire/db/DBColumn.java",
                "contents_url": "https://api.github.com/repos/apache/empire-db/contents/empire-db/src/main/java/org/apache/empire/db/DBColumn.java?ref=7bca1cac66236d47b429ed273296656f0eb4978f",
                "patch": "@@ -19,13 +19,14 @@\n package org.apache.empire.db;\n \n // Java\n+import java.util.Set;\n+\n import org.apache.empire.commons.Options;\n import org.apache.empire.data.Column;\n+import org.apache.empire.db.exceptions.DatabaseNotOpenException;\n import org.apache.empire.db.expr.set.DBSetExpr;\n import org.w3c.dom.Element;\n \n-import java.util.Set;\n-\n \n /**\n  * This is the base class for all database columns that have a physical representation.\n@@ -155,6 +156,8 @@ public void addSQL(StringBuilder buf, long context)\n         }\n         // Append the name\n         DBDatabaseDriver driver = getDatabase().getDriver();\n+        if (driver==null)\n+        \tthrow new DatabaseNotOpenException(getDatabase());\n         if (quoteName==null)\n             quoteName = driver.detectQuoteName(name);\n         // Append the name"
            }
        ]
    }
]
