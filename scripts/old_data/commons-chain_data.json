[
    {
        "commit": "https://github.com/apache/commons-chain/commit/eddf67d8f952c958a0cf52013d09dd6b5988bfab",
        "repo": "commons-chain",
        "parent": "https://github.com/apache/commons-chain/commit/7e3f90120094d356b8c2c0fd063cd4f7df213343",
        "message": "Avoid potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/chain/trunk@1471597 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "commons-chain_1",
        "file": [
            {
                "sha": "19b9a6a01cea719baf20208783f198414c79cf2d",
                "filename": "web/src/main/java/org/apache/commons/chain2/web/ChainListener.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/commons-chain/blob/eddf67d8f952c958a0cf52013d09dd6b5988bfab/web/src/main/java/org/apache/commons/chain2/web/ChainListener.java",
                "raw_url": "https://github.com/apache/commons-chain/raw/eddf67d8f952c958a0cf52013d09dd6b5988bfab/web/src/main/java/org/apache/commons/chain2/web/ChainListener.java",
                "contents_url": "https://api.github.com/repos/apache/commons-chain/contents/web/src/main/java/org/apache/commons/chain2/web/ChainListener.java?ref=eddf67d8f952c958a0cf52013d09dd6b5988bfab",
                "patch": "@@ -258,9 +258,13 @@ private void parseJarResources(ServletContext context,\n                 }\n                 parser.parse(resourceURL);\n             } catch (Exception e) {\n+                String externalURL = \"null\";\n+                if (resourceURL != null) {\n+                    externalURL = resourceURL.toExternalForm();\n+                }\n                 throw new RuntimeException\n                         (\"Exception parsing chain config resource '\"\n-                                + resourceURL.toExternalForm() + \"': \"\n+                                + externalURL + \"': \"\n                                 + e.getMessage());\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/commons-chain/commit/df502f5c53dfe18db6ec76140843c2f7aab34a4a",
        "repo": "commons-chain",
        "parent": "https://github.com/apache/commons-chain/commit/28f63a9ce77787f9abf09c534f5d19cd6f607aba",
        "message": "[CHAIN-80] NPE when submitting null commands map to CatalogBase - patch submitted by Steve Westwood\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/chain/trunk@1461601 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "commons-chain_2",
        "file": [
            {
                "sha": "af449ae7abccf21e4da3e25f740da50a63135fe3",
                "filename": "core/src/main/java/org/apache/commons/chain2/impl/CatalogBase.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/apache/commons-chain/blob/df502f5c53dfe18db6ec76140843c2f7aab34a4a/core/src/main/java/org/apache/commons/chain2/impl/CatalogBase.java",
                "raw_url": "https://github.com/apache/commons-chain/raw/df502f5c53dfe18db6ec76140843c2f7aab34a4a/core/src/main/java/org/apache/commons/chain2/impl/CatalogBase.java",
                "contents_url": "https://api.github.com/repos/apache/commons-chain/contents/core/src/main/java/org/apache/commons/chain2/impl/CatalogBase.java?ref=df502f5c53dfe18db6ec76140843c2f7aab34a4a",
                "patch": "@@ -58,10 +58,16 @@ public CatalogBase() { }\n      * All Map keys should be <code>String</code> and all values should be <code>Command</code>.</p>\n      *\n      * @param commands Map of Commands.\n+     * \n+     * @exception IllegalArgumentException if <code>commands</code> \n+     * is <code>null</code>\n      *\n      * @since Chain 1.1\n      */\n-    public CatalogBase(Map<String, Command<K, V, C>> commands ) {\n+    public CatalogBase(Map<String, Command<K, V, C>> commands) {\n+        if (commands == null) {\n+            throw new IllegalArgumentException(\"'commands' parameter must be not null\");\n+        }\n         this.commands.putAll( commands );\n     }\n "
            },
            {
                "sha": "7922222fe425d25a7d51b1780e4afc4cc9067a44",
                "filename": "core/src/test/java/org/apache/commons/chain2/impl/CatalogBaseTestCase.java",
                "status": "modified",
                "additions": 26,
                "deletions": 1,
                "changes": 27,
                "blob_url": "https://github.com/apache/commons-chain/blob/df502f5c53dfe18db6ec76140843c2f7aab34a4a/core/src/test/java/org/apache/commons/chain2/impl/CatalogBaseTestCase.java",
                "raw_url": "https://github.com/apache/commons-chain/raw/df502f5c53dfe18db6ec76140843c2f7aab34a4a/core/src/test/java/org/apache/commons/chain2/impl/CatalogBaseTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/commons-chain/contents/core/src/test/java/org/apache/commons/chain2/impl/CatalogBaseTestCase.java?ref=df502f5c53dfe18db6ec76140843c2f7aab34a4a",
                "patch": "@@ -19,9 +19,10 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n \n import java.util.Iterator;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import org.apache.commons.chain2.Catalog;\n import org.apache.commons.chain2.Command;\n@@ -145,7 +146,31 @@ public void testPristine() {\n         assertNull(catalog.getCommand(\"ChainBase\"));\n     }\n \n+    // Test construction with commands collection\n+    @Test\n+    public void testInstantiationWithMapOfCommands() {\n+        @SuppressWarnings(\"serial\")\n+        Map<String, Command<String, Object, Context<String, Object>>> \n+            commands = new ConcurrentHashMap<String, Command<String, Object, Context<String, Object>>>() {\n+            {\n+                put(\"AddingCommand\", new AddingCommand(\"\", null));\n+            }\n+        };\n+\n+        CatalogBase<String, Object, Context<String, Object>> \n+            catalog = new CatalogBase<String, Object, Context<String, Object>>(commands);\n+\n+        assertEquals(\"Correct command count\", 1, catalog.getCommands().size());\n+    }\n \n+    // Examine construction with null commands collection\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testInstantiationWithNullMapOfCommands() {\n+        Map<String, Command<String, Object, Context<String, Object>>> commands = null;\n+        @SuppressWarnings(\"unused\")\n+        CatalogBase<String, Object, Context<String, Object>> \n+            catalog = new CatalogBase<String, Object, Context<String, Object>>(commands);\n+    }\n \n \n     // -------------------------------------------------------- Support Methods"
            }
        ]
    }
]
