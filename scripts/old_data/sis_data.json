[
    {
        "commit": "https://github.com/apache/sis/commit/fe2cbc1694d4c531c87b6cd11b135d598e122a82",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/7663ff9dc4f92ea4ca56477e8cfe037248a20371",
        "message": "Throws an exception on attempt to use a closed StorageConnector.\nThis is necessary for avoiding NullPointerException later.",
        "bug_id": "sis_1",
        "file": [
            {
                "sha": "c062fab357a104d8668cf5cc812cb083aa387679",
                "filename": "storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.java",
                "raw_url": "https://github.com/apache/sis/raw/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.java?ref=fe2cbc1694d4c531c87b6cd11b135d598e122a82",
                "patch": "@@ -121,6 +121,11 @@ private Keys() {\n          */\n         public static final short ClosedReader_1 = 4;\n \n+        /**\n+         * This storage connector is closed.\n+         */\n+        public static final short ClosedStorageConnector = 56;\n+\n         /**\n          * This {0} writer is closed.\n          */"
            },
            {
                "sha": "39a707a3189a531742b55dff36324713c8f439aa",
                "filename": "storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/sis/blob/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.properties",
                "raw_url": "https://github.com/apache/sis/raw/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.properties",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources.properties?ref=fe2cbc1694d4c531c87b6cd11b135d598e122a82",
                "patch": "@@ -30,6 +30,7 @@ CanNotReadFile_3                  = Can not read line {2} of \\u201c{1}\\u201d as\n CanNotReadFile_4                  = Can not read after column {3} of line {2} of \\u201c{1}\\u201d as part of a file in the {0} format.\n CanNotRemoveResource_2            = Can not remove resource \\u201c{1}\\u201d from aggregate \\u201c{0}\\u201d.\n CanNotStoreResourceType_2         = Can not save resources of type \\u2018{1}\\u2019 in a \\u201c{0}\\u201d store.\n+ClosedStorageConnector            = This storage connector is closed.\n ClosedReader_1                    = This {0} reader is closed.\n ClosedWriter_1                    = This {0} writer is closed.\n ConcurrentRead_1                  = One or more read operations are in progress in the \\u201c{0}\\u201d data store."
            },
            {
                "sha": "029493885788dc29ad41c0ede26bd5666f2aabc5",
                "filename": "storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources_fr.properties",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/sis/blob/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources_fr.properties",
                "raw_url": "https://github.com/apache/sis/raw/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources_fr.properties",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/Resources_fr.properties?ref=fe2cbc1694d4c531c87b6cd11b135d598e122a82",
                "patch": "@@ -35,6 +35,7 @@ CanNotReadFile_3                  = Ne peut pas lire la ligne {2} de \\u00ab\\u202\n CanNotReadFile_4                  = Ne peut pas lire apr\\u00e8s la colonne {3} de la ligne {2} de \\u00ab\\u202f{1}\\u202f\\u00bb comme une partie d\\u2019un fichier au format {0}.\n CanNotRemoveResource_2            = Ne peut pas supprimer la ressource \\u00ab\\u202f{1}\\u202f\\u00bb de l\\u2019agr\\u00e9gat \\u00ab\\u202f{0}\\u202f\\u00bb.\n CanNotStoreResourceType_2         = Ne peut pas enregistrer des ressources de type \\u2018{1}\\u2019 dans un entrep\\u00f4t de donn\\u00e9es \\u00ab\\u202f{0}\\u202f\\u00bb.\n+ClosedStorageConnector            = Ce connecteur est ferm\\u00e9.\n ClosedReader_1                    = Ce lecteur {0} est ferm\\u00e9.\n ClosedWriter_1                    = Cet encodeur {0} est ferm\\u00e9.\n ConcurrentRead_1                  = Une ou plusieurs op\\u00e9rations de lecture sont en cours sur les donn\\u00e9es de \\u00ab\\u202f{0}\\u202f\\u00bb."
            },
            {
                "sha": "8f0521c20169686c28a64c65cf3d076f83ee314c",
                "filename": "storage/sis-storage/src/main/java/org/apache/sis/storage/StorageConnector.java",
                "status": "modified",
                "additions": 9,
                "deletions": 2,
                "changes": 11,
                "blob_url": "https://github.com/apache/sis/blob/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/storage/StorageConnector.java",
                "raw_url": "https://github.com/apache/sis/raw/fe2cbc1694d4c531c87b6cd11b135d598e122a82/storage/sis-storage/src/main/java/org/apache/sis/storage/StorageConnector.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-storage/src/main/java/org/apache/sis/storage/StorageConnector.java?ref=fe2cbc1694d4c531c87b6cd11b135d598e122a82",
                "patch": "@@ -86,7 +86,7 @@\n  * is serializable.</p>\n  *\n  * @author  Martin Desruisseaux (Geomatys)\n- * @version 0.8\n+ * @version 1.0\n  * @since   0.3\n  * @module\n  */\n@@ -225,8 +225,9 @@\n     private Map<OptionKey<?>, Object> options;\n \n     /**\n-     * Views of {@link #storage} as instances of different types than the type of the object given to the constructor.\n+     * Views of {@link #storage} as instances of types different than the type of the object given to the constructor.\n      * The {@code null}\u00a0reference can appear in various places:\n+     *\n      * <ul>\n      *   <li>A non-existent entry (equivalent to an entry associated to the {@code null} value) means that the value\n      *       has not yet been computed.</li>\n@@ -236,6 +237,8 @@\n      *   <li>By convention, the {@code null} key is associated to the {@link #storage} value.</li>\n      * </ul>\n      *\n+     * An empty map means that this {@code StorageConnector} has been closed.\n+     *\n      * @see #addView(Class, Object, Class, byte)\n      * @see #getView(Class)\n      * @see #getStorageAs(Class)\n@@ -757,13 +760,17 @@ public String getFileExtension() {\n      *         types listed in javadoc but no view can be created for the source given at construction time.\n      * @throws IllegalArgumentException if the given {@code type} argument is not one of the supported types\n      *         listed in this javadoc or in subclass javadoc.\n+     * @throws IllegalStateException if this {@code StorageConnector} has been {@linkplain #closeAllExcept closed}.\n      * @throws DataStoreException if an error occurred while opening a stream or database connection.\n      *\n      * @see #getStorage()\n      * @see #closeAllExcept(Object)\n      */\n     public <T> T getStorageAs(final Class<T> type) throws IllegalArgumentException, DataStoreException {\n         ArgumentChecks.ensureNonNull(\"type\", type);\n+        if (views != null && views.isEmpty()) {\n+            throw new IllegalStateException(Resources.format(Resources.Keys.ClosedStorageConnector));\n+        }\n         /*\n          * Verify if the cache contains an instance created by a previous invocation of this method.\n          * Note that InputStream may need to be reseted if it has been used indirectly by other kind"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/4d20d15147908f733b169441822319f915bfe4ac",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/25af314460466159a8d6a41a1b5d4450b70fe5b3",
        "message": "Avoid a NullPointerException which may happen with non-standard logging configuration.\nThe null logging Level has been observed when using HSQL.",
        "bug_id": "sis_2",
        "file": [
            {
                "sha": "4ec110c30089c2081c430c3c8e3f97d278bae2c8",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/setup/About.java",
                "status": "modified",
                "additions": 13,
                "deletions": 8,
                "changes": 21,
                "blob_url": "https://github.com/apache/sis/blob/4d20d15147908f733b169441822319f915bfe4ac/core/sis-utility/src/main/java/org/apache/sis/setup/About.java",
                "raw_url": "https://github.com/apache/sis/raw/4d20d15147908f733b169441822319f915bfe4ac/core/sis-utility/src/main/java/org/apache/sis/setup/About.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/setup/About.java?ref=4d20d15147908f733b169441822319f915bfe4ac",
                "patch": "@@ -349,14 +349,19 @@ public static TreeTable configuration(final Set<About> sections, Locale locale,\n                     if (sections.contains(LOGGING)) {\n                         nameKey = Vocabulary.Keys.Level;\n                         final Level level = Logging.getLogger(\"\").getLevel();   // Root logger level.\n-                        value = level.getLocalizedName();\n-                        final Map<String,Level> levels = Loggers.getEffectiveLevels();\n-                        if (levels.size() != 1 || !level.equals(levels.get(Loggers.ROOT))) {\n-                            int j = 0;\n-                            children = new String[levels.size() * 2];\n-                            for (final Map.Entry<String,Level> entry : levels.entrySet()) {\n-                                children[j++] = entry.getKey();\n-                                children[j++] = entry.getValue().getLocalizedName();\n+                        if (level == null) {\n+                            // May happen when some code outside Apache SIS define their own loggers.\n+                            value = resources.getString(Vocabulary.Keys.Unknown);\n+                        } else {\n+                            value = level.getLocalizedName();\n+                            final Map<String,Level> levels = Loggers.getEffectiveLevels();\n+                            if (levels.size() != 1 || !level.equals(levels.get(Loggers.ROOT))) {\n+                                int j = 0;\n+                                children = new String[levels.size() * 2];\n+                                for (final Map.Entry<String,Level> entry : levels.entrySet()) {\n+                                    children[j++] = entry.getKey();\n+                                    children[j++] = entry.getValue().getLocalizedName();\n+                                }\n                             }\n                         }\n                     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/77172edd504c18ee22fefcf93550112193151e2a",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/2572a480a1ba3705df24c73c5b3068de9c430485",
        "message": "Fix a NullPointerException when the envelope do not contains an horizontal component.",
        "bug_id": "sis_3",
        "file": [
            {
                "sha": "71a4530364eec246cee5b1458a203aa93315d707",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/geometry/Envelopes.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/77172edd504c18ee22fefcf93550112193151e2a/core/sis-referencing/src/main/java/org/apache/sis/geometry/Envelopes.java",
                "raw_url": "https://github.com/apache/sis/raw/77172edd504c18ee22fefcf93550112193151e2a/core/sis-referencing/src/main/java/org/apache/sis/geometry/Envelopes.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/geometry/Envelopes.java?ref=77172edd504c18ee22fefcf93550112193151e2a",
                "patch": "@@ -225,7 +225,7 @@ public static CoordinateOperation findOperation(final Envelope source, final Env\n                     targetAOI      = converter.setBounds(target, null, \"findOperation\");\n                     if (areaOfInterest == null) {\n                         areaOfInterest = targetAOI;\n-                    } else {\n+                    } else if (targetAOI != null) {\n                         areaOfInterest.add(targetAOI);\n                     }\n                 } catch (TransformException e) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/fcb4b8484f580f579c29fba300ff5d481edf6ff6",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/e59aac9daa9de8d5ec1c62048b4846f35185a37a",
        "message": "Fix a NullPointerException occurring during execution of Convention.isApplicableTo(Decoder).",
        "bug_id": "sis_4",
        "file": [
            {
                "sha": "631636c0cdc5191ac06456e37334278d0fd5c229",
                "filename": "storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Convention.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/fcb4b8484f580f579c29fba300ff5d481edf6ff6/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Convention.java",
                "raw_url": "https://github.com/apache/sis/raw/fcb4b8484f580f579c29fba300ff5d481edf6ff6/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Convention.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Convention.java?ref=fcb4b8484f580f579c29fba300ff5d481edf6ff6",
                "patch": "@@ -63,7 +63,7 @@\n     /**\n      * The convention to use when no specific conventions were found.\n      */\n-    private static final Convention DEFAULT = new Convention();\n+    static final Convention DEFAULT = new Convention();\n \n     /**\n      * Names of groups where to search for metadata, in precedence order."
            },
            {
                "sha": "ffc448026e96824d3c26ac4e3e68fa76d11370ae",
                "filename": "storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Decoder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/sis/blob/fcb4b8484f580f579c29fba300ff5d481edf6ff6/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Decoder.java",
                "raw_url": "https://github.com/apache/sis/raw/fcb4b8484f580f579c29fba300ff5d481edf6ff6/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Decoder.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/Decoder.java?ref=fcb4b8484f580f579c29fba300ff5d481edf6ff6",
                "patch": "@@ -131,7 +131,8 @@ protected final void initialize() {\n      * @return conventions to apply.\n      */\n     public final Convention convention() {\n-        return convention;\n+        // Convention are still null if this method is invoked from Convention.isApplicableTo(Decoder).\n+        return (convention != null) ? convention : Convention.DEFAULT;\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/23333e6ed31aeda18ac3d939bc8e81ee8b7d6c36",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/825bb78f00575c8b2b71d557f6855f45f66c8fe3",
        "message": "Fix a NullPointerException when a netCDF file contains no global attribute.",
        "bug_id": "sis_5",
        "file": [
            {
                "sha": "e9fa786b32898ee4961ec4e577321f075342045d",
                "filename": "storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java",
                "status": "modified",
                "additions": 8,
                "deletions": 3,
                "changes": 11,
                "blob_url": "https://github.com/apache/sis/blob/23333e6ed31aeda18ac3d939bc8e81ee8b7d6c36/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java",
                "raw_url": "https://github.com/apache/sis/raw/23333e6ed31aeda18ac3d939bc8e81ee8b7d6c36/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java?ref=23333e6ed31aeda18ac3d939bc8e81ee8b7d6c36",
                "patch": "@@ -255,7 +255,7 @@ public ChannelDecoder(final ChannelDataInput input, final Charset encoding, fina\n          */\n         DimensionInfo[]    dimensions = null;\n         VariableInfo[]     variables  = null;\n-        Map<String,Object> attributes = null;\n+        Map<String,Object> attributes = Collections.emptyMap();\n         for (int i=0; i<3; i++) {\n             final long tn = input.readLong();                   // Combination of tag and nelems\n             if (tn != 0) {\n@@ -275,8 +275,13 @@ public ChannelDecoder(final ChannelDataInput input, final Charset encoding, fina\n             }\n         }\n         this.attributeMap = attributes;\n-        this.variables    = variables;\n-        this.variableMap  = toCaseInsensitiveNameMap(variables);\n+        if (variables != null) {\n+            this.variables   = variables;\n+            this.variableMap = toCaseInsensitiveNameMap(variables);\n+        } else {\n+            this.variables   = new VariableInfo[0];\n+            this.variableMap = Collections.emptyMap();\n+        }\n         initialize();\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/b68592ec612ae6ec74d35159dbe904b8cdecc76a",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/2535fd14d0d8fe24f20bd9a70d9ed9fc75202696",
        "message": "Fix an erroneous assertion and a NullPointerException.",
        "bug_id": "sis_6",
        "file": [
            {
                "sha": "19fca257419b6df7b15dfe0d8fdd7ef6e0129f8d",
                "filename": "core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/b68592ec612ae6ec74d35159dbe904b8cdecc76a/core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java",
                "raw_url": "https://github.com/apache/sis/raw/b68592ec612ae6ec74d35159dbe904b8cdecc76a/core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java?ref=b68592ec612ae6ec74d35159dbe904b8cdecc76a",
                "patch": "@@ -184,8 +184,8 @@ private ColorModelFactory(final Map<? extends NumberRange<?>, ? extends Color[]>\n         }\n         this.minimum     = (float) minimum;\n         this.maximum     = (float) maximum;\n-        this.pieceStarts = starts;\n-        this.ARGB        = codes;\n+        this.pieceStarts = ArraysExt.resize(starts, count + 1);\n+        this.ARGB        = ArraysExt.resize(codes,  count);\n     }\n \n     /**\n@@ -394,10 +394,10 @@ public static int getTransferType(final int mapSize) {\n      * @return the number of bits to use.\n      */\n     public static int getBitCount(final int mapSize) {\n-        final int count = Math.max(1, Integer.SIZE - Integer.numberOfLeadingZeros(mapSize - 1));\n+        final int count = Integer.SIZE - Integer.numberOfLeadingZeros(mapSize - 1);\n         assert (1 << count) >= mapSize : mapSize;\n         assert (1 << (count-1)) < mapSize : mapSize;\n-        return count;\n+        return Math.max(1, count);\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/e59aac9daa9de8d5ec1c62048b4846f35185a37a",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/a9bf411bafb3d2a3aaef5c253f4d83a757181668",
        "message": "Fix a NullPointerException when sample values have integers greater than 65535.",
        "bug_id": "sis_7",
        "file": [
            {
                "sha": "c3928315c71331b2f74c824ff087203810d4f795",
                "filename": "core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/sis/blob/e59aac9daa9de8d5ec1c62048b4846f35185a37a/core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java",
                "raw_url": "https://github.com/apache/sis/raw/e59aac9daa9de8d5ec1c62048b4846f35185a37a/core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-raster/src/main/java/org/apache/sis/internal/raster/ColorModelFactory.java?ref=e59aac9daa9de8d5ec1c62048b4846f35185a37a",
                "patch": "@@ -42,6 +42,7 @@\n  * A factory for {@link ColorModel} objects built from a sequence of colors.\n  *\n  * @author  Martin Desruisseaux (IRD, Geomatys)\n+ * @author  Johann Sorel (Geomatys)\n  * @version 1.0\n  * @since   1.0\n  * @module\n@@ -155,9 +156,10 @@ private ColorModelFactory(final Map<? extends NumberRange<?>, ? extends Color[]>\n             final int lower = Math.round((float) min);\n             final int upper = Math.round((float) max);\n             if (lower < upper) {\n-                if (lower < 0 || upper > 0xFFFF) {\n+                if (lower < 0 || upper > 0x10000) {\n                     starts = ArraysExt.EMPTY_SHORT;\n                     codes  = null;\n+                    count  = 0;\n                 } else if (codes != null) {\n                     if (count != 0) {\n                         final int before = Short.toUnsignedInt(starts[count]);\n@@ -182,9 +184,12 @@ private ColorModelFactory(final Map<? extends NumberRange<?>, ? extends Color[]>\n             minimum = 0;\n             maximum = 1;\n         }\n+        if (starts.length != 0) {\n+            starts = ArraysExt.resize(starts, count + 1);\n+        }\n         this.minimum     = (float) minimum;\n         this.maximum     = (float) maximum;\n-        this.pieceStarts = ArraysExt.resize(starts, count + 1);\n+        this.pieceStarts = starts;\n         this.ARGB        = ArraysExt.resize(codes,  count);\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/43ee5f7c2488d4d3133e26cf5a72f03305609183",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/32dcf7684414da00cc26d50136bbc29bb8285edc",
        "message": "Documentation updates, replace StringBuffer by StringBuilder and fix a NullPointerException.",
        "bug_id": "sis_8",
        "file": [
            {
                "sha": "24173c0dd2421c102ebdd05bed726ca59b51c7d2",
                "filename": "application/sis-openoffice/src/main/java/org/apache/sis/openoffice/Registration.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/sis/blob/43ee5f7c2488d4d3133e26cf5a72f03305609183/application/sis-openoffice/src/main/java/org/apache/sis/openoffice/Registration.java",
                "raw_url": "https://github.com/apache/sis/raw/43ee5f7c2488d4d3133e26cf5a72f03305609183/application/sis-openoffice/src/main/java/org/apache/sis/openoffice/Registration.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/application/sis-openoffice/src/main/java/org/apache/sis/openoffice/Registration.java?ref=43ee5f7c2488d4d3133e26cf5a72f03305609183",
                "patch": "@@ -65,9 +65,11 @@\n      * Whether to force EPSG database startup early, for example in order to force database creation from SQL scripts.\n      * The SQL scripts may be used if this module depends on {@code sis-epsg} module, or if {@code SIS_DATA} directory\n      * contains a {@code \"Databases/ExternalSources\"} sub-directory. When such database creation is necessary, it may\n-     * be less surprising for users to perform this lengthly task at add-in installation time instead than when the\n+     * be less surprising for users to perform this lengthy task at add-in installation time instead than when the\n      * formulas are first used. However if the add-in depend on {@code sis-embedded-data} instead, then early startup\n      * is less useful since there is no database to create.\n+     *\n+     * @deprecated See <a href=\"https://issues.apache.org/jira/browse/SIS-430\">SIS-430</a>\n      */\n     private static final boolean FORCE_EPSG_STARTUP = false;\n "
            },
            {
                "sha": "878f6447ec9e08177d18f00624fa902eb3dc0ab2",
                "filename": "core/sis-raster/src/main/java/org/apache/sis/coverage/grid/GridGeometry.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/43ee5f7c2488d4d3133e26cf5a72f03305609183/core/sis-raster/src/main/java/org/apache/sis/coverage/grid/GridGeometry.java",
                "raw_url": "https://github.com/apache/sis/raw/43ee5f7c2488d4d3133e26cf5a72f03305609183/core/sis-raster/src/main/java/org/apache/sis/coverage/grid/GridGeometry.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-raster/src/main/java/org/apache/sis/coverage/grid/GridGeometry.java?ref=43ee5f7c2488d4d3133e26cf5a72f03305609183",
                "patch": "@@ -791,7 +791,7 @@ public String toString(final int bitmask) {\n             appendLabel(buffer, \"Resolution\", visible);\n             if (resolution == null) {\n                 buffer.append(\"unspecified\");\n-            } for (int i=0; i<resolution.length; i++) {\n+            } else for (int i=0; i<resolution.length; i++) {\n                 if (i != 0) buffer.append(\" \u00d7 \");\n                 buffer.append((float) resolution[i]);\n                 if (cs != null) {"
            },
            {
                "sha": "b925fc5115cc1a16ff63b1757413096b6ad6ad16",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/factory/sql/package-info.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/43ee5f7c2488d4d3133e26cf5a72f03305609183/core/sis-referencing/src/main/java/org/apache/sis/referencing/factory/sql/package-info.java",
                "raw_url": "https://github.com/apache/sis/raw/43ee5f7c2488d4d3133e26cf5a72f03305609183/core/sis-referencing/src/main/java/org/apache/sis/referencing/factory/sql/package-info.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/factory/sql/package-info.java?ref=43ee5f7c2488d4d3133e26cf5a72f03305609183",
                "patch": "@@ -82,7 +82,7 @@\n  * @author  Jody Garnett (Refractions)\n  * @author  Didier Richard (IGN)\n  * @author  John Grange\n- * @version 0.8\n+ * @version 1.0\n  *\n  * @see org.apache.sis.metadata.sql\n  *"
            },
            {
                "sha": "4bed64cc7e59cf2612da485c8dafbcc89cdc0093",
                "filename": "storage/sis-storage/src/main/java/org/apache/sis/index/tree/QuadTreeWriter.java",
                "status": "modified",
                "additions": 8,
                "deletions": 9,
                "changes": 17,
                "blob_url": "https://github.com/apache/sis/blob/43ee5f7c2488d4d3133e26cf5a72f03305609183/storage/sis-storage/src/main/java/org/apache/sis/index/tree/QuadTreeWriter.java",
                "raw_url": "https://github.com/apache/sis/raw/43ee5f7c2488d4d3133e26cf5a72f03305609183/storage/sis-storage/src/main/java/org/apache/sis/index/tree/QuadTreeWriter.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-storage/src/main/java/org/apache/sis/index/tree/QuadTreeWriter.java?ref=43ee5f7c2488d4d3133e26cf5a72f03305609183",
                "patch": "@@ -41,7 +41,7 @@ private QuadTreeWriter() {\n      * @param directory\n      *            the directory where the index file is located\n      */\n-    public static void writeTreeToFile(QuadTree tree, String directory) throws IOException{\n+    public static void writeTreeToFile(QuadTree tree, String directory) throws IOException {\n         createIdxDir(directory);\n         writeTreeConfigsToFile(tree, directory);\n         writeNodeToFile(tree.getRoot(), directory);\n@@ -62,15 +62,15 @@ private static void createIdxDir(String directory) {\n     }\n \n     /**\n-     * Write quad tree configerations to file.\n+     * Write quad tree configurations to file.\n      *\n      * @param tree\n      *            the quad tree\n      * @param directory\n-     *            the directory where the configerations file is located\n+     *            the directory where the configurations file is located\n      */\n-    private static void writeTreeConfigsToFile(QuadTree tree, String directory) throws IOException{\n-        try (BufferedWriter writer = new BufferedWriter(new FileWriter(directory + \"tree_config.txt\"))){\n+    private static void writeTreeConfigsToFile(QuadTree tree, String directory) throws IOException {\n+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(directory + \"tree_config.txt\"))) {\n             writer.write(\"capacity;\" + tree.getCapacity() + \";depth;\" + tree.getDepth());\n             writer.newLine();\n             writer.close();\n@@ -91,9 +91,8 @@ private static void writeTreeConfigsToFile(QuadTree tree, String directory) thro\n      * @param checkIfParent\n      *            if true, checks if the node's child is not null and is a parent\n      *            if false, only checks if the node's child is not null\n-     * @return quad tree data string\n      */\n-    private static void writeChildrenToFile(QuadTreeNode node, Quadrant quadrant, BufferedWriter writer, String directory, boolean checkIfParent) throws IOException{\n+    private static void writeChildrenToFile(QuadTreeNode node, Quadrant quadrant, BufferedWriter writer, String directory, boolean checkIfParent) throws IOException {\n         if (checkIfParent){\n             if (node.getChild(quadrant) != null && node.getChild(quadrant).getNodeType() == NodeType.GRAY) {\n                 writeNodeToFile(node.getChild(quadrant), directory);\n@@ -114,7 +113,7 @@ private static void writeChildrenToFile(QuadTreeNode node, Quadrant quadrant, Bu\n      * @param directory\n      *            the directory where the index file is located\n      */\n-    private static void writeNodeToFile(QuadTreeNode node, String directory) throws IOException{\n+    private static void writeNodeToFile(QuadTreeNode node, String directory) throws IOException {\n         try (BufferedWriter writer = new BufferedWriter(new FileWriter(directory + \"node_\" + node.getId() + \".txt\"))){\n             if (node.getNodeType() == NodeType.GRAY) {\n                 writeChildrenToFile(node, Quadrant.NW, writer, directory, false);\n@@ -141,7 +140,7 @@ private static void writeNodeToFile(QuadTreeNode node, String directory) throws\n      * @return quad tree data string\n      */\n     private static String getQuadTreeDataString(Quadrant quadrant, final QuadTreeNode node) {\n-        StringBuffer str = new StringBuffer();\n+        StringBuilder str = new StringBuilder();\n         str.append(quadrant.index());\n         str.append(':');\n         str.append(node.getNodeType().toString());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/8aa6eeefc2b7358d1341438ac1b21325d486304b",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/420564d81320b746053a67f352b276bd1bbec31e",
        "message": "Fix a NullPointerException in call to setIdentifier(Identifier) by MetadataVisitor.",
        "bug_id": "sis_9",
        "file": [
            {
                "sha": "24f1af462f5adc68950b22a5b982742e896ac4d5",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/internal/jaxb/NonMarshalledAuthority.java",
                "status": "modified",
                "additions": 11,
                "deletions": 5,
                "changes": 16,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/internal/jaxb/NonMarshalledAuthority.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/internal/jaxb/NonMarshalledAuthority.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/internal/jaxb/NonMarshalledAuthority.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -61,7 +61,7 @@\n  * }\n  *\n  * @author  Martin Desruisseaux (Geomatys)\n- * @version 0.7\n+ * @version 1.0\n  *\n  * @param <T>  the type of object used as identifier values.\n  *\n@@ -138,13 +138,18 @@ public NonMarshalledAuthority(final String attribute, final byte ordinal) {\n      * <p>This method is used for implementation of {@code setIdentifier(Identifier)} methods\n      * in public metadata objects.</p>\n      *\n-     * @param <T>          the type of object used as identifier values.\n-     * @param identifiers  the collection in which to add the identifier.\n-     * @param newValue     the identifier to add, or {@code null}.\n+     * @param  <T>          the type of object used as identifier values.\n+     * @param  identifiers  the collection in which to add the identifier.\n+     * @param  newValue     the identifier to add, or {@code null}.\n+     * @return the given collection, or a new collection if the given collection was {@code null}.\n      *\n      * @see #setMarshallables(Collection, Collection)\n      */\n-    public static <T extends Identifier> void setMarshallable(final Collection<T> identifiers, final T newValue) {\n+    public static <T extends Identifier> Collection<T> setMarshallable(final Collection<T> identifiers, final T newValue) {\n+        if (identifiers == null) {\n+            // This may happen during MetadataVisitor execution.\n+            return CollectionsExt.singletonOrEmpty(newValue);\n+        }\n         final Iterator<T> it = identifiers.iterator();\n         while (it.hasNext()) {\n             final T old = it.next();\n@@ -156,6 +161,7 @@ public NonMarshalledAuthority(final String attribute, final byte ordinal) {\n         if (newValue != null) {\n             identifiers.add(newValue);\n         }\n+        return identifiers;\n     }\n \n     /**"
            },
            {
                "sha": "75a18f70264729aaf1c3eb5fbb8e1e5ad59288ef",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/DefaultMetadata.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/DefaultMetadata.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/DefaultMetadata.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/DefaultMetadata.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -429,9 +429,7 @@ public Identifier getMetadataIdentifier() {\n      * @since 0.5\n      */\n     public void setMetadataIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            },
            {
                "sha": "da471395ddf13cb69b03f747f72b963e42fa9048",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/ISOMetadata.java",
                "status": "modified",
                "additions": 19,
                "deletions": 0,
                "changes": 19,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/ISOMetadata.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/ISOMetadata.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/ISOMetadata.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.sis.metadata.ModifiableMetadata;\n import org.apache.sis.internal.jaxb.IdentifierMapAdapter;\n import org.apache.sis.internal.jaxb.ModifiableIdentifierMap;\n+import org.apache.sis.internal.jaxb.NonMarshalledAuthority;\n import org.apache.sis.internal.metadata.MetadataUtilities;\n import org.apache.sis.internal.util.CollectionsExt;\n import org.apache.sis.internal.system.Modules;\n@@ -164,6 +165,24 @@ public IdentifierMap getIdentifierMap() {\n                                               : new IdentifierMapAdapter(identifiers);\n     }\n \n+    /**\n+     * Sets the identifier for metadata objects that are expected to contain at most one ISO 19115-1 identifier.\n+     * This convenience method is used for implementation of public {@link setIdentifier(Identifier)} methods in\n+     * subclasses having a [0 \u2026 1] cardinality for the {@code identifier} property.\n+     *\n+     * <p>The default implementation removes all identifiers that are not ISO 19115-3 identifiers before to add\n+     * the given one in the {@link #identifiers} collection.</p>\n+     *\n+     * @param  newValue  the new identifier value, or {@code null}\u00a0for removing the ISO 19115-1 identifier.\n+     *\n+     * @since 1.0\n+     */\n+    protected void setIdentifier(final Identifier newValue) {\n+        checkWritePermission();\n+        identifiers = nonNullCollection(identifiers, Identifier.class);\n+        identifiers = writeCollection(NonMarshalledAuthority.setMarshallable(identifiers, newValue), identifiers, Identifier.class);\n+    }\n+\n     // --------------------------------------------------------------------------------------\n     // End of identifier methods.\n     // --------------------------------------------------------------------------------------"
            },
            {
                "sha": "39f3e275e16f159f8bfdbf86f91f380fa075f5ca",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultEvent.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultEvent.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultEvent.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultEvent.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -185,10 +185,9 @@ public Identifier getIdentifier() {\n      *\n      * @param  newValue  the event identifier value.\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            },
            {
                "sha": "c254041e03b03f52e0b336934ce6002263592554",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultInstrument.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultInstrument.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultInstrument.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultInstrument.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -174,10 +174,9 @@ public Identifier getIdentifier() {\n      *\n      * @param  newValue  the new identifier value.\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            },
            {
                "sha": "78f790afc18ad59aba8eab71bd8ef1769da37646",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultOperation.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultOperation.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultOperation.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultOperation.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -246,10 +246,9 @@ public Identifier getIdentifier() {\n      *\n      * @param  newValue  the new identifier value.\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            },
            {
                "sha": "fe4451ad58ffae95fccf0976d154f8c0367b23d9",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatform.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatform.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatform.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatform.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -179,10 +179,9 @@ public Identifier getIdentifier() {\n      *\n      * @param  newValue  the new identifier value.\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            },
            {
                "sha": "e26f716d0b53dcbe8c501f24db5a386c675115df",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatformPass.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatformPass.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatformPass.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultPlatformPass.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -138,10 +138,9 @@ public Identifier getIdentifier() {\n      *\n      * @param  newValue  the new identifier value.\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            },
            {
                "sha": "a3886d686cbd7ba6bd9a3aeb29c838d0bc747ff1",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultRequirement.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultRequirement.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultRequirement.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/acquisition/DefaultRequirement.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -214,10 +214,9 @@ public Identifier getIdentifier() {\n      *\n      * @param  newValue  the new identifier value.\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            },
            {
                "sha": "31c06916de80341728b17ccbf5b24b886c1803a7",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/distribution/DefaultMedium.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/distribution/DefaultMedium.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/distribution/DefaultMedium.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/distribution/DefaultMedium.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -386,9 +386,8 @@ public Identifier getIdentifier() {\n      *\n      * @since 0.5\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n }"
            },
            {
                "sha": "c892b85a3896a28accf14f79a48ca47d22d13b42",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultCoupledResource.java",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultCoupledResource.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultCoupledResource.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultCoupledResource.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -287,8 +287,7 @@ private void setOperationName(final String name) {\n \n     /**\n      * Returns the resource identifier, which is assumed to be the name as a string.\n-     * Used in legacy ISO 19139:2007 documents. There is no setter method; we expect\n-     * the XML to declare {@code <srv:operationName>} instead.\n+     * Used in legacy ISO 19139:2007 documents.\n      */\n     @XmlElement(name = \"identifier\", namespace = LegacyNamespaces.SRV)\n     private String getIdentifier() {\n@@ -301,6 +300,13 @@ private String getIdentifier() {\n         return null;\n     }\n \n+    /**\n+     * Handled as a synonymous of {@code <srv:operationName>}.\n+     */\n+    private void setIdentifier(final String identifier) {\n+        setOperationName(identifier);\n+    }\n+\n     /**\n      * Returns the {@code <gco:ScopedName>} element to marshal in legacy ISO 19139:2007 element.\n      * The {@code <srv:scopedName>} element wrapper (note the lower-case \"s\") was missing in that"
            },
            {
                "sha": "c9896fcbc702f60d2c2dc92b28c9cb51fed192e2",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/lineage/DefaultProcessing.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/lineage/DefaultProcessing.java",
                "raw_url": "https://github.com/apache/sis/raw/8aa6eeefc2b7358d1341438ac1b21325d486304b/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/lineage/DefaultProcessing.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/lineage/DefaultProcessing.java?ref=8aa6eeefc2b7358d1341438ac1b21325d486304b",
                "patch": "@@ -162,10 +162,9 @@ public Identifier getIdentifier() {\n      *\n      * @param  newValue  the new identifier value.\n      */\n+    @Override\n     public void setIdentifier(final Identifier newValue) {\n-        checkWritePermission();\n-        identifiers = nonNullCollection(identifiers, Identifier.class);\n-        NonMarshalledAuthority.setMarshallable(identifiers, newValue);\n+        super.setIdentifier(newValue);\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/57d0bed1d9545a305393db0367d1d54cfd27165d",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/8f78c8cfa592b03ea3da583379ab5329d21289dc",
        "message": "Fix a NullPointerException when a netCDF variable has no attribute.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1810579 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_10",
        "file": [
            {
                "sha": "cf9de67666798b3c80d3416e81513dd4ce8ee7de",
                "filename": "storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/57d0bed1d9545a305393db0367d1d54cfd27165d/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java",
                "raw_url": "https://github.com/apache/sis/raw/57d0bed1d9545a305393db0367d1d54cfd27165d/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/ChannelDecoder.java?ref=57d0bed1d9545a305393db0367d1d54cfd27165d",
                "patch": "@@ -555,7 +555,7 @@ private Object readValues(final DataType type, final int length) throws IOExcept\n              * Following block is almost a copy-and-paste of similar block in the contructor,\n              * but with less cases in the \"switch\" statements.\n              */\n-            Map<String,Object> attributes = null;\n+            Map<String,Object> attributes = Collections.emptyMap();\n             final long tn = input.readLong();\n             if (tn != 0) {\n                 final int tag = (int) (tn >>> Integer.SIZE);"
            },
            {
                "sha": "b5dabebb5458b73219f4c5af1a74434c5872b6c8",
                "filename": "storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/VariableInfo.java",
                "status": "modified",
                "additions": 9,
                "deletions": 5,
                "changes": 14,
                "blob_url": "https://github.com/apache/sis/blob/57d0bed1d9545a305393db0367d1d54cfd27165d/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/VariableInfo.java",
                "raw_url": "https://github.com/apache/sis/raw/57d0bed1d9545a305393db0367d1d54cfd27165d/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/VariableInfo.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-netcdf/src/main/java/org/apache/sis/internal/netcdf/impl/VariableInfo.java?ref=57d0bed1d9545a305393db0367d1d54cfd27165d",
                "patch": "@@ -196,12 +196,16 @@\n          * Verify if this variable is an enumeration. If yes, we remove the attributes that define the\n          * enumeration since those attributes may be verbose and \"pollute\" the variable definition.\n          */\n-        String[] meanings = stringValues(attributes.remove(AttributeNames.FLAG_MEANINGS));\n-        switch (meanings.length) {\n-            case 0: meanings = null; break;\n-            case 1: meanings = (String[]) CharSequences.split(meanings[0], ' '); break;\n+        if (!attributes.isEmpty()) {    // For avoiding UnsupportedOperationException if unmodifiable map.\n+            String[] meanings = stringValues(attributes.remove(AttributeNames.FLAG_MEANINGS));\n+            switch (meanings.length) {\n+                case 0: meanings = null; break;\n+                case 1: meanings = (String[]) CharSequences.split(meanings[0], ' '); break;\n+            }\n+            this.meanings = meanings;\n+        } else {\n+            meanings = null;\n         }\n-        this.meanings = meanings;\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/b97f38f48dbc35e30501bbfba650a2cff0cf03d1",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/fea8f7b23d485508aef5e88eee6f0805db90031e",
        "message": "Fix a NullPointerException and a PropertyNotFoundException in FeatureFormat.format(...).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1762429 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_11",
        "file": [
            {
                "sha": "af2977adcf74a2bef407ec4b1cc5bbc59e343cdb",
                "filename": "core/sis-feature/src/main/java/org/apache/sis/feature/DefaultFeatureType.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/b97f38f48dbc35e30501bbfba650a2cff0cf03d1/core/sis-feature/src/main/java/org/apache/sis/feature/DefaultFeatureType.java",
                "raw_url": "https://github.com/apache/sis/raw/b97f38f48dbc35e30501bbfba650a2cff0cf03d1/core/sis-feature/src/main/java/org/apache/sis/feature/DefaultFeatureType.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-feature/src/main/java/org/apache/sis/feature/DefaultFeatureType.java?ref=b97f38f48dbc35e30501bbfba650a2cff0cf03d1",
                "patch": "@@ -584,7 +584,7 @@ private boolean resolve(final FeatureType feature, final Collection<? extends Pr\n      *\n      * @see #OPERATION_INDEX\n      */\n-    private static boolean isParameterlessOperation(final PropertyType type) {\n+    static boolean isParameterlessOperation(final PropertyType type) {\n         if (type instanceof Operation) {\n             final ParameterDescriptorGroup parameters = ((Operation) type).getParameters();\n             return ((parameters == null) || parameters.descriptors().isEmpty())"
            },
            {
                "sha": "1943ceb4fe31592882f68d0e784996f3d40745f7",
                "filename": "core/sis-feature/src/main/java/org/apache/sis/feature/FeatureFormat.java",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/apache/sis/blob/b97f38f48dbc35e30501bbfba650a2cff0cf03d1/core/sis-feature/src/main/java/org/apache/sis/feature/FeatureFormat.java",
                "raw_url": "https://github.com/apache/sis/raw/b97f38f48dbc35e30501bbfba650a2cff0cf03d1/core/sis-feature/src/main/java/org/apache/sis/feature/FeatureFormat.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-feature/src/main/java/org/apache/sis/feature/FeatureFormat.java?ref=b97f38f48dbc35e30501bbfba650a2cff0cf03d1",
                "patch": "@@ -253,6 +253,12 @@ public void format(final Object object, final Appendable toAppendTo) throws IOEx\n         for (final PropertyType propertyType : featureType.getProperties(true)) {\n             Object value = null;\n             if (feature != null) {\n+                if (!(propertyType instanceof AttributeType<?>) &&\n+                    !(propertyType instanceof FeatureAssociationRole) &&\n+                    !DefaultFeatureType.isParameterlessOperation(propertyType))\n+                {\n+                    continue;\n+                }\n                 value = feature.getPropertyValue(propertyType.getName().toString());\n                 if (value == null) {\n                     if (propertyType instanceof AttributeType &&\n@@ -295,7 +301,7 @@ public void format(final Object object, final Appendable toAppendTo) throws IOEx\n             final int minimumOccurs, maximumOccurs;         // Negative values mean no cardinality.\n             final IdentifiedType resultType;                // Result of operation if applicable.\n             if (propertyType instanceof Operation) {\n-                resultType = ((Operation) propertyType).getResult();\n+                resultType = ((Operation) propertyType).getResult();                // May be null\n             } else {\n                 resultType = propertyType;\n             }\n@@ -313,7 +319,7 @@ public void format(final Object object, final Appendable toAppendTo) throws IOEx\n                 valueType     = toString(DefaultAssociationRole.getValueTypeName(pt));\n                 valueClass    = Feature.class;\n             } else {\n-                valueType  = toString(resultType.getName());\n+                valueType  = (resultType != null) ? toString(resultType.getName()) : \"\";\n                 valueClass = null;\n                 minimumOccurs = -1;\n                 maximumOccurs = -1;"
            },
            {
                "sha": "cb2c334521b9fddc4958daf7d987a6ebc6f5c3e3",
                "filename": "core/sis-feature/src/main/java/org/apache/sis/feature/StringJoinOperation.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/sis/blob/b97f38f48dbc35e30501bbfba650a2cff0cf03d1/core/sis-feature/src/main/java/org/apache/sis/feature/StringJoinOperation.java",
                "raw_url": "https://github.com/apache/sis/raw/b97f38f48dbc35e30501bbfba650a2cff0cf03d1/core/sis-feature/src/main/java/org/apache/sis/feature/StringJoinOperation.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-feature/src/main/java/org/apache/sis/feature/StringJoinOperation.java?ref=b97f38f48dbc35e30501bbfba650a2cff0cf03d1",
                "patch": "@@ -146,9 +146,9 @@\n                 attributeType = ((Operation) attributeType).getResult();\n             }\n             if (!(attributeType instanceof AttributeType)) {\n+                final Class<?>[] inf = Classes.getLeafInterfaces(Classes.getClass(attributeType), PropertyType.class);\n                 throw new IllegalArgumentException(Errors.getResources(identification)\n-                        .getString(Errors.Keys.IllegalPropertyType_2, name,\n-                        Classes.getLeafInterfaces(attributeType.getClass(), PropertyType.class)[0]));\n+                        .getString(Errors.Keys.IllegalPropertyType_2, name, (inf.length != 0) ? inf[0] : null));\n             }\n             if (((AttributeType<?>) attributeType).getMaximumOccurs() > 1) {\n                 throw new IllegalArgumentException(Errors.getResources(identification)"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/1e7632fbe3b70ef62b31ba89e020c30cf4e45474",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/e322a4ce9bbb2d154947403290f1eb615f45b05f",
        "message": "Fix corner cases (NullPointerException, etc.).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1755608 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_12",
        "file": [
            {
                "sha": "b18bebd59934ba1e94ca06ac99ebd4b31b6d110b",
                "filename": "core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java",
                "raw_url": "https://github.com/apache/sis/raw/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java?ref=1e7632fbe3b70ef62b31ba89e020c30cf4e45474",
                "patch": "@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Locale;\n+import java.util.Set;\n import org.opengis.util.GenericName;\n import org.opengis.util.NameFactory;\n import org.opengis.util.FactoryException;\n@@ -37,7 +38,6 @@\n \n // Branch-dependent imports\n import java.util.Objects;\n-import java.util.Set;\n import org.opengis.feature.AttributeType;\n import org.opengis.feature.Feature;\n import org.opengis.feature.FeatureType;"
            },
            {
                "sha": "1cd4de23bacb1781d2846a89768667fd86f3d449",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/math/ArrayVector.java",
                "status": "modified",
                "additions": 146,
                "deletions": 14,
                "changes": 160,
                "blob_url": "https://github.com/apache/sis/blob/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/main/java/org/apache/sis/math/ArrayVector.java",
                "raw_url": "https://github.com/apache/sis/raw/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/main/java/org/apache/sis/math/ArrayVector.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/math/ArrayVector.java?ref=1e7632fbe3b70ef62b31ba89e020c30cf4e45474",
                "patch": "@@ -44,6 +44,55 @@\n     ArrayVector() {\n     }\n \n+    /**\n+     * Creates a new instance.\n+     *\n+     * @throws IllegalArgumentException if the type of the given object is not recognized by the method.\n+     */\n+    static Vector newInstance(final Object array, final boolean isUnsigned) throws IllegalArgumentException {\n+        if (array instanceof double[]) {\n+            return new ArrayVector.Double((double[]) array);\n+        }\n+        if (array instanceof float[]) {\n+            return new ArrayVector.Float((float[]) array);\n+        }\n+        if (array instanceof long[]) {\n+            if (isUnsigned) {\n+                return new ArrayVector.UnsignedLong((long[]) array);\n+            } else {\n+                return new ArrayVector.Long((long[]) array);\n+            }\n+        }\n+        if (array instanceof int[]) {\n+            if (isUnsigned) {\n+                return new ArrayVector.UnsignedInteger((int[]) array);\n+            } else {\n+                return new ArrayVector.Integer((int[]) array);\n+            }\n+        }\n+        if (array instanceof short[]) {\n+            if (isUnsigned) {\n+                return new ArrayVector.UnsignedShort((short[]) array);\n+            } else {\n+                return new ArrayVector.Short((short[]) array);\n+            }\n+        }\n+        if (array instanceof byte[]) {\n+            if (isUnsigned) {\n+                return new ArrayVector.UnsignedByte((byte[]) array);\n+            } else {\n+                return new ArrayVector.Byte((byte[]) array);\n+            }\n+        }\n+        if (array instanceof Number[]) {\n+            return new ArrayVector.Raw((Number[]) array);\n+        }\n+        if (array instanceof String[]) {\n+            return new ArrayVector.ASCII((String[]) array);\n+        }\n+        throw new IllegalArgumentException(Errors.format(Errors.Keys.IllegalParameterType_2, \"array\", array.getClass()));\n+    }\n+\n     /**\n      * Default implementation for the convenience of direct sub-types.\n      */\n@@ -75,7 +124,7 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n     /**\n      * A vector backed by an array of type {@code double[]}.\n      */\n-    static final class Double extends ArrayVector<java.lang.Double> {\n+    private static final class Double extends ArrayVector<java.lang.Double> {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = -2900375382498345812L;\n \n@@ -130,14 +179,15 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n         @Override public Number set(final int index, final Number value) {\n             final double old = array[index];\n             array[index] = value.doubleValue();\n+            modCount++;\n             return old;\n         }\n     }\n \n     /**\n      * A vector backed by an array of type {@code float[]}.\n      */\n-    static class Float extends ArrayVector<java.lang.Float> {\n+    private static class Float extends ArrayVector<java.lang.Float> {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = 5395284704294981455L;\n \n@@ -178,6 +228,7 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n         @Override public final Number set(final int index, final Number value) {\n             final float old = array[index];\n             array[index] = value.floatValue();\n+            modCount++;\n             return old;\n         }\n     }\n@@ -205,7 +256,7 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n     /**\n      * A vector backed by an array of type {@code long[]}.\n      */\n-    static class Long extends ArrayVector<java.lang.Long> {\n+    private static class Long extends ArrayVector<java.lang.Long> {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = 338413429037224587L;\n \n@@ -236,14 +287,15 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n             verifyType(value.getClass(), Numbers.LONG);\n             final long old = array[index];\n             array[index] = value.longValue();\n+            modCount++;\n             return old;\n         }\n     }\n \n     /**\n      * A vector backed by an array of type {@code int[]}.\n      */\n-    static class Integer extends ArrayVector<java.lang.Integer> {\n+    private static class Integer extends ArrayVector<java.lang.Integer> {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = -1292641147544275801L;\n \n@@ -275,14 +327,15 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n             verifyType(value.getClass(), Numbers.INTEGER);\n             final int old = array[index];\n             array[index] = value.intValue();\n+            modCount++;\n             return old;\n         }\n     }\n \n     /**\n      * A vector backed by an array of type {@code short[]}.\n      */\n-    static class Short extends ArrayVector<java.lang.Short> {\n+    private static class Short extends ArrayVector<java.lang.Short> {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = -126825963332296000L;\n \n@@ -315,14 +368,15 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n             verifyType(value.getClass(), Numbers.SHORT);\n             final short old = array[index];\n             array[index] = value.shortValue();\n+            modCount++;\n             return old;\n         }\n     }\n \n     /**\n      * A vector backed by an array of type {@code byte[]}.\n      */\n-    static class Byte extends ArrayVector<java.lang.Byte> {\n+    private static class Byte extends ArrayVector<java.lang.Byte> {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = 7933568876180528548L;\n \n@@ -356,14 +410,15 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n             verifyType(value.getClass(), Numbers.BYTE);\n             final byte old = array[index];\n             array[index] = value.byteValue();\n+            modCount++;\n             return old;\n         }\n     }\n \n     /**\n      * A vector backed by an array of type {@code long[]} to be interpreted as unsigned values.\n      */\n-    static final class UnsignedLong extends Long {\n+    private static final class UnsignedLong extends Long {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = 712968674526282882L;\n \n@@ -401,7 +456,7 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n     /**\n      * A vector backed by an array of type {@code int[]} to be interpreted as unsigned values.\n      */\n-    static final class UnsignedInteger extends Integer {\n+    private static final class UnsignedInteger extends Integer {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = 8420585724189054050L;\n \n@@ -430,14 +485,16 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n     /**\n      * A vector backed by an array of type {@code short[]} to be interpreted as unsigned values.\n      */\n-    static final class UnsignedShort extends Short {\n+    private static final class UnsignedShort extends Short {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = 8219060080494444776L;\n \n+        /** Creates a new vector for the given array. */\n         UnsignedShort(final short[] array) {\n             super(array);\n         }\n \n+        /** Declares this vector as unsigned. */\n         @Override public boolean isUnsigned()          {return true;}\n         @Override public double doubleValue(int index) {return intValue(index);}\n         @Override public float   floatValue(int index) {return intValue(index);}\n@@ -458,14 +515,16 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n     /**\n      * A vector backed by an array of type {@code byte[]} to be interpreted as unsigned values.\n      */\n-    static final class UnsignedByte extends Byte {\n+    private static final class UnsignedByte extends Byte {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = -2150064612523948331L;\n \n+        /** Creates a new vector for the given array. */\n         UnsignedByte(final byte[] array) {\n             super(array);\n         }\n \n+        /** Declares this vector as unsigned. */\n         @Override public boolean isUnsigned()          {return true;}\n         @Override public double doubleValue(int index) {return intValue(index);}\n         @Override public float   floatValue(int index) {return intValue(index);}\n@@ -488,7 +547,7 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n      * A vector backed by an array of type {@code String[]}.\n      * This is not recommended, but happen for example in GDAL extensions for GeoTIFF files.\n      */\n-    static class ASCII extends ArrayVector<java.lang.Double> {\n+    private static final class ASCII extends ArrayVector<java.lang.Double> {\n         /** For cross-version compatibility. */\n         private static final long serialVersionUID = 2801615620517491573L;\n \n@@ -505,18 +564,91 @@ final void verifyType(final Class<? extends Number> type, final byte expected) {\n             return java.lang.Double.class;\n         }\n \n-        @Override public final int     size()          {return array.length;}\n+        /** Returns {@code true} if the element at the given index is null or NaN. */\n+        @Override public boolean isNaN(final int index) {\n+            String value = array[index];\n+            if (value == null) return true;\n+            if (value.contains(\"NaN\")) {\n+                value = value.trim();\n+                switch (value.length()) {\n+                    case 3: return true;\n+                    case 4: final char c = value.charAt(0);\n+                            return (c == '+') || (c == '-');\n+                }\n+            }\n+            return false;\n+        }\n+\n+        @Override public int           size()          {return array.length;}\n         @Override public String stringValue(int index) {return array[index];}\n         @Override public double doubleValue(int index) {return java.lang.Double .parseDouble(array[index]);}\n         @Override public float   floatValue(int index) {return java.lang.Float  .parseFloat (array[index]);}\n         @Override public long     longValue(int index) {return java.lang.Long   .parseLong  (array[index]);}\n         @Override public int       intValue(int index) {return java.lang.Integer.parseInt   (array[index]);}\n         @Override public short   shortValue(int index) {return java.lang.Short  .parseShort (array[index]);}\n         @Override public byte     byteValue(int index) {return java.lang.Byte   .parseByte  (array[index]);}\n-        @Override public final Number   get(int index) {return doubleValue(index);}\n-        @Override public final Number   set(int index, final Number value) {\n+        @Override public Number         get(int index) {\n+            final String value = array[index];\n+            return (value != null) ? java.lang.Double.parseDouble(value) : null;\n+        }\n+\n+        /** Stores the given value in this vector and returns the previous value. */\n+        @Override public final Number set(final int index, final Number value) {\n             final Number old = get(index);\n             array[index] = value.toString();\n+            modCount++;\n+            return old;\n+        }\n+    }\n+\n+    /**\n+     * A vector backed by an array of type {@code Number[]}.\n+     */\n+    private static final class Raw extends ArrayVector<Number> {\n+        /** For cross-version compatibility. */\n+        private static final long serialVersionUID = 5444263017359778157L;\n+\n+        /** The backing array. */\n+        private final Number[] array;\n+\n+        /** Creates a new vector for the given array. */\n+        Raw(final Number[] array) {\n+            this.array = array;\n+        }\n+\n+        /** Returns the type of elements in the backing array. */\n+        @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+        @Override public final Class getElementType() {\n+            return array.getClass().getComponentType();\n+        }\n+\n+        /** Returns {@code true} if the element at the given index is null or NaN. */\n+        @Override public boolean isNaN(final int index) {\n+            Number value = array[index];\n+            if (value == null) return true;\n+            if (value instanceof java.lang.Float)  return ((java.lang.Float)  value).isNaN();\n+            if (value instanceof java.lang.Double) return ((java.lang.Double) value).isNaN();\n+            return false;\n+        }\n+\n+        @Override public int           size()          {return array.length;}\n+        @Override public Number         get(int index) {return array[index];}\n+        @Override public double doubleValue(int index) {return array[index].doubleValue();}\n+        @Override public float   floatValue(int index) {return array[index].floatValue();}\n+        @Override public long     longValue(int index) {return array[index].longValue();}\n+        @Override public int       intValue(int index) {return array[index].intValue();}\n+        @Override public short   shortValue(int index) {return array[index].shortValue();}\n+        @Override public byte     byteValue(int index) {return array[index].byteValue();}\n+        @Override public String stringValue(int index) {\n+            final Number value = array[index];\n+            return (value != null) ? value.toString() : null;\n+        }\n+\n+        /** Stores the given value in this vector and returns the previous value. */\n+        @Override public final Number set(final int index, final Number value) {\n+            final Number old = array[index];\n+            array[index] = value;\n+            modCount++;\n             return old;\n         }\n     }"
            },
            {
                "sha": "a35ae2bf911ff9f25f64361792a1f7333c851902",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/math/ConcatenatedVector.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/sis/blob/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/main/java/org/apache/sis/math/ConcatenatedVector.java",
                "raw_url": "https://github.com/apache/sis/raw/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/main/java/org/apache/sis/math/ConcatenatedVector.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/math/ConcatenatedVector.java?ref=1e7632fbe3b70ef62b31ba89e020c30cf4e45474",
                "patch": "@@ -229,7 +229,9 @@ public Number set(int index, final Number value) {\n             v = second;\n             index -= limit;\n         }\n-        return v.set(index, value);\n+        final Number old = v.set(index, value);\n+        modCount++;\n+        return old;\n     }\n \n     /**"
            },
            {
                "sha": "70783a589f5abd58ab2c3dc8dea46118f3938bf1",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/math/Vector.java",
                "status": "modified",
                "additions": 29,
                "deletions": 42,
                "changes": 71,
                "blob_url": "https://github.com/apache/sis/blob/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/main/java/org/apache/sis/math/Vector.java",
                "raw_url": "https://github.com/apache/sis/raw/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/main/java/org/apache/sis/math/Vector.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/math/Vector.java?ref=1e7632fbe3b70ef62b31ba89e020c30cf4e45474",
                "patch": "@@ -87,6 +87,7 @@\n      *\n      * <ul>\n      *   <li>An array of a primitive type, like {@code float[]}.</li>\n+     *   <li>A {@code Number[]} array.</li>\n      *   <li>A {@code String[]} array (not recommended, but happen with some file formats).</li>\n      *   <li>A {@code Vector}, in which case it is returned unchanged.</li>\n      *   <li>The {@code null} value, in which case {@code null} is returned.</li>\n@@ -109,44 +110,13 @@\n      * @throws IllegalArgumentException if the type of the given object is not recognized by the method.\n      */\n     public static Vector create(final Object array, final boolean isUnsigned) throws IllegalArgumentException {\n-        if (array instanceof double[]) {\n-            return new ArrayVector.Double((double[]) array);\n+        if (array == null) {\n+            return null;\n         }\n-        if (array instanceof float[]) {\n-            return new ArrayVector.Float((float[]) array);\n+        if (array.getClass().isArray()) {\n+            return ArrayVector.newInstance(array, isUnsigned);\n         }\n-        if (array instanceof long[]) {\n-            if (isUnsigned) {\n-                return new ArrayVector.UnsignedLong((long[]) array);\n-            } else {\n-                return new ArrayVector.Long((long[]) array);\n-            }\n-        }\n-        if (array instanceof int[]) {\n-            if (isUnsigned) {\n-                return new ArrayVector.UnsignedInteger((int[]) array);\n-            } else {\n-                return new ArrayVector.Integer((int[]) array);\n-            }\n-        }\n-        if (array instanceof short[]) {\n-            if (isUnsigned) {\n-                return new ArrayVector.UnsignedShort((short[]) array);\n-            } else {\n-                return new ArrayVector.Short((short[]) array);\n-            }\n-        }\n-        if (array instanceof byte[]) {\n-            if (isUnsigned) {\n-                return new ArrayVector.UnsignedByte((byte[]) array);\n-            } else {\n-                return new ArrayVector.Byte((byte[]) array);\n-            }\n-        }\n-        if (array instanceof String[]) {\n-            return new ArrayVector.ASCII((String[]) array);\n-        }\n-        if (array == null || array instanceof Vector) {\n+        if (array instanceof Vector) {\n             return (Vector) array;\n         }\n         throw new IllegalArgumentException(Errors.format(Errors.Keys.IllegalParameterType_2, \"array\", array.getClass()));\n@@ -236,7 +206,7 @@ protected Vector() {\n     public abstract int size();\n \n     /**\n-     * Returns {@code true} if the value at the given index is {@code NaN}.\n+     * Returns {@code true} if the value at the given index is {@code null} or {@code NaN}.\n      *\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n      * @return {@code true} if the value at the given index is {@code NaN}.\n@@ -252,6 +222,7 @@ protected Vector() {\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n      * @return the value at the given index.\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n+     * @throws NullPointerException if the value is {@code null} (never happen if this vector wraps an array of primitive type).\n      * @throws NumberFormatException if the value is stored as a {@code String} and can not be parsed.\n      */\n     public abstract double doubleValue(int index);\n@@ -264,6 +235,7 @@ protected Vector() {\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n      * @return the value at the given index.\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n+     * @throws NullPointerException if the value is {@code null} (never happen if this vector wraps an array of primitive type).\n      * @throws NumberFormatException if the value is stored as a {@code String} and can not be parsed.\n      */\n     public abstract float floatValue(int index);\n@@ -279,6 +251,7 @@ protected Vector() {\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n      * @return the value at the given index.\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n+     * @throws NullPointerException if the value is {@code null} (never happen if this vector wraps an array of primitive type).\n      * @throws NumberFormatException if the value is stored as a {@code String} and can not be parsed.\n      * @throws ArithmeticException if the value is too large for the capacity of the {@code long} type.\n      */\n@@ -302,6 +275,7 @@ public long longValue(final int index) {\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n      * @return the value at the given index.\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n+     * @throws NullPointerException if the value is {@code null} (never happen if this vector wraps an array of primitive type).\n      * @throws NumberFormatException if the value is stored as a {@code String} and can not be parsed.\n      * @throws ArithmeticException if the value is too large for the capacity of the {@code int} type.\n      */\n@@ -324,6 +298,7 @@ public int intValue(final int index) {\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n      * @return the value at the given index.\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n+     * @throws NullPointerException if the value is {@code null} (never happen if this vector wraps an array of primitive type).\n      * @throws NumberFormatException if the value is stored as a {@code String} and can not be parsed.\n      * @throws ArithmeticException if the value is too large for the capacity of the {@code short} type.\n      */\n@@ -346,6 +321,7 @@ public short shortValue(final int index) {\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n      * @return the value at the given index.\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n+     * @throws NullPointerException if the value is {@code null} (never happen if this vector wraps an array of primitive type).\n      * @throws NumberFormatException if the value is stored as a {@code String} and can not be parsed.\n      * @throws ArithmeticException if the value is too large for the capacity of the {@code byte} type.\n      */\n@@ -372,7 +348,7 @@ private ArithmeticException canNotConvert(final int index, final Class<?> target\n      * except if the values are {@linkplain #isUnsigned() unsigned integers}.\n      *\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n-     * @return a string representation of the value at the given index.\n+     * @return a string representation of the value at the given index (may be {@code null}).\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n      */\n     public abstract String stringValue(int index);\n@@ -383,7 +359,7 @@ private ArithmeticException canNotConvert(final int index, final Class<?> target\n      * of the class returned by {@link #getElementType()} or a sub-class.\n      *\n      * @param  index  the index in the [0 \u2026 {@linkplain #size() size}-1] range.\n-     * @return the value at the given index.\n+     * @return the value at the given index (may be {@code null}).\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n      * @throws NumberFormatException if the value is stored as a {@code String} and can not be parsed.\n      */\n@@ -398,8 +374,9 @@ private ArithmeticException canNotConvert(final int index, final Class<?> target\n      * @param  value  the value to set at the given index.\n      * @return the value previously stored at the given index.\n      * @throws IndexOutOfBoundsException if the given index is out of bounds.\n-     * @throws ClassCastException if the given value can not be stored in this vector.\n      * @throws NumberFormatException if the previous value was stored as a {@code String} and can not be parsed.\n+     * @throws ClassCastException if the given value can not be converted to the type expected by this vector.\n+     * @throws ArrayStoreException if the given value can not be stored in this vector.\n      */\n     @Override\n     public abstract Number set(int index, Number value);\n@@ -522,7 +499,12 @@ private int toBacking(final int index) {\n         @Override public byte    byteValue  (int index)     {return Vector.this.byteValue  (toBacking(index));}\n         @Override public String  stringValue(int index)     {return Vector.this.stringValue(toBacking(index));}\n         @Override public Number  get        (int index)     {return Vector.this.get        (toBacking(index));}\n-        @Override public Number  set(int index, Number v)   {return Vector.this.set        (toBacking(index), v);}\n+\n+        @Override public Number set(final int index, final Number v) {\n+            final Number old = Vector.this.set(toBacking(index), v);\n+            modCount++;\n+            return old;\n+        }\n \n         /** Delegates to the enclosing vector. */\n         @Override Vector createSubSampling(int first, int step, final int length) {\n@@ -666,7 +648,12 @@ public Vector pick(int... indices) {\n         @Override public byte     byteValue  (int i)    {return Vector.this.byteValue  (indices[i]);}\n         @Override public String   stringValue(int i)    {return Vector.this.stringValue(indices[i]);}\n         @Override public Number   get        (int i)    {return Vector.this.get        (indices[i]);}\n-        @Override public Number   set(int i, Number v)  {return Vector.this.set        (indices[i], v);}\n+\n+        @Override public Number set(final int i, final Number v) {\n+            final Number old = Vector.this.set(indices[i], v);\n+            modCount++;\n+            return old;\n+        }\n \n         /** Delegates to the enclosing vector. */\n         @Override Vector createSubSampling(int first, final int step, final int length) {"
            },
            {
                "sha": "019f69dde766713c561bd6a85363cf74f28373ce",
                "filename": "core/sis-utility/src/test/java/org/apache/sis/math/VectorTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/sis/blob/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/test/java/org/apache/sis/math/VectorTest.java",
                "raw_url": "https://github.com/apache/sis/raw/1e7632fbe3b70ef62b31ba89e020c30cf4e45474/core/sis-utility/src/test/java/org/apache/sis/math/VectorTest.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/test/java/org/apache/sis/math/VectorTest.java?ref=1e7632fbe3b70ef62b31ba89e020c30cf4e45474",
                "patch": "@@ -134,7 +134,7 @@ public void testFloatArray() {\n             array[i] = (i + 100) * 10;\n         }\n         vector = Vector.create(array, false);\n-        assertTrue(vector instanceof ArrayVector.Float);\n+        assertEquals(\"Float\", vector.getClass().getSimpleName());\n         assertSame(vector, Vector.create(vector, false));\n         assertEquals(array.length, vector.size());\n         assertEquals(Float.class, vector.getElementType());\n@@ -157,7 +157,7 @@ public void testDoubleArray() {\n             array[i] = (i + 100) * 10;\n         }\n         vector = Vector.create(array, false);\n-        assertTrue(vector instanceof ArrayVector.Double);\n+        assertEquals(\"Double\", vector.getClass().getSimpleName());\n         assertSame(vector, Vector.create(vector, false));\n         assertEquals(array.length, vector.size());\n         assertEquals(Double.class, vector.getElementType());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/a201992b85eee4cf696a3c4d883a70e3b9f88670",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/cb0004410e9b73430255f7bc95bdb32aa39711ae",
        "message": "Fix a NullPointerException when creating the metadata schema on a PostgreSQL database.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1785298 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_13",
        "file": [
            {
                "sha": "2b8181d7af597d57aaab43813913ba2e104cd1d9",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/sql/ScriptRunner.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/sis/blob/a201992b85eee4cf696a3c4d883a70e3b9f88670/core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/sql/ScriptRunner.java",
                "raw_url": "https://github.com/apache/sis/raw/a201992b85eee4cf696a3c4d883a70e3b9f88670/core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/sql/ScriptRunner.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/sql/ScriptRunner.java?ref=a201992b85eee4cf696a3c4d883a70e3b9f88670",
                "patch": "@@ -242,6 +242,7 @@\n     /**\n      * The regular expression to use for building {@link #statementsToSkip}.\n      * At most one of {@code regexOfStmtToSkip} and {@code statementsToSkip} shall be non-null.\n+     * Both fields may be null if there is no statement to skip.\n      */\n     private StringBuilder regexOfStmtToSkip;\n \n@@ -658,13 +659,15 @@ protected void editText(final StringBuilder sql, final int lower, final int uppe\n      * @return whether the given SQL statement is supported by the database engine.\n      */\n     protected boolean isSupported(final CharSequence sql) {\n-        if (regexOfStmtToSkip == null) {\n+        if (statementsToSkip != null) {\n             return !statementsToSkip.reset(sql).matches();\n-        } else {\n+        } else if (regexOfStmtToSkip != null) {\n             // We do not use Pattern.CASE_INSENTITIVE for performance reasons.\n             statementsToSkip = Pattern.compile(regexOfStmtToSkip.toString(), Pattern.DOTALL).matcher(sql);\n             regexOfStmtToSkip = null;\n             return !statementsToSkip.matches();\n+        } else {\n+            return true;\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/c6ebd87e55d84c949b73f88306f81d07b4acf06a",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/0bb8ebc73f3ea1d817e55f54c81c0c1c5276d3ce",
        "message": "Fix a NullPointerException (found during execution of Geotk tests).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1727213 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_14",
        "file": [
            {
                "sha": "b051937e68f73ee751a80eb053f7a9d515cfe967",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/internal/util/LazySet.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/c6ebd87e55d84c949b73f88306f81d07b4acf06a/core/sis-utility/src/main/java/org/apache/sis/internal/util/LazySet.java",
                "raw_url": "https://github.com/apache/sis/raw/c6ebd87e55d84c949b73f88306f81d07b4acf06a/core/sis-utility/src/main/java/org/apache/sis/internal/util/LazySet.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/internal/util/LazySet.java?ref=c6ebd87e55d84c949b73f88306f81d07b4acf06a",
                "patch": "@@ -96,7 +96,7 @@ public LazySet(final Iterable<? extends E> source) {\n      * @param iterator The iterator to use for filling this set.\n      */\n     public LazySet(final Iterator<? extends E> iterator) {\n-        Objects.requireNonNull(sourceIterator);\n+        Objects.requireNonNull(iterator);\n         sourceIterator = iterator;\n         source = null;\n         createCache();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/e7e9bb4eba6a55da8c889e3e9f4a8450ab87f0a3",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/8c1d29f4daa8f1eff161301b52697ecb3d735bec",
        "message": "Merge NullPointerException fix from the JDK8 branch.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1723785 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_15",
        "file": [
            {
                "sha": "59e305de57579bbf274852205aa252f83765284a",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/sis/blob/e7e9bb4eba6a55da8c889e3e9f4a8450ab87f0a3/core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java",
                "raw_url": "https://github.com/apache/sis/raw/e7e9bb4eba6a55da8c889e3e9f4a8450ab87f0a3/core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java?ref=e7e9bb4eba6a55da8c889e3e9f4a8450ab87f0a3",
                "patch": "@@ -159,9 +159,9 @@ public static boolean getSingleComponents(final Iterable<? extends CoordinateRef\n     }\n \n     /**\n-     * Returns the ellipsoid used by the specified coordinate reference system, providing that\n-     * the two first dimensions use an instance of {@link GeographicCRS}. Otherwise (i.e. if the\n-     * two first dimensions are not geographic), returns {@code null}.\n+     * Returns the ellipsoid used by the specified coordinate reference system, provided that the two first dimensions\n+     * use an instance of {@link GeographicCRS}. Otherwise (i.e. if the two first dimensions are not geographic),\n+     * returns {@code null}.\n      *\n      * <p>This method excludes geocentric CRS on intend. Some callers needs this exclusion as a way to identify\n      * which CRS in a Geographic/Geocentric conversion is the geographic one. An other point of view is to said"
            },
            {
                "sha": "0efc1f13c915184aea350de4755a3cd5019ec49e",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/sis/blob/e7e9bb4eba6a55da8c889e3e9f4a8450ab87f0a3/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java",
                "raw_url": "https://github.com/apache/sis/raw/e7e9bb4eba6a55da8c889e3e9f4a8450ab87f0a3/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java?ref=e7e9bb4eba6a55da8c889e3e9f4a8450ab87f0a3",
                "patch": "@@ -256,7 +256,11 @@ public DefaultConversion(final Map<String,?>       properties,\n                  */\n                 final DefaultMathTransformFactory.Context context = new DefaultMathTransformFactory.Context();\n                 context.setSource(source);\n-                context.setTarget(target.getCoordinateSystem());\n+                if (target instanceof GeneralDerivedCRS) {\n+                    context.setTarget(target.getCoordinateSystem());    // Using 'target' would be unsafe here.\n+                } else {\n+                    context.setTarget(target);\n+                }\n                 transform = ((DefaultMathTransformFactory) factory).createParameterizedTransform(parameters, context);\n                 parameters = Parameters.unmodifiable(context.getCompletedParameters());\n             } else {\n@@ -275,12 +279,10 @@ public DefaultConversion(final Map<String,?>       properties,\n              * ProjectedCRS), then DefaultMathTransformFactory has a specialized createBaseToDerived(\u2026)\n              * method for this job.\n              */\n-            final CoordinateReferenceSystem sourceCRS = super.getSourceCRS();\n-            final CoordinateReferenceSystem targetCRS = super.getTargetCRS();\n             if (sourceCRS == null && targetCRS == null && factory instanceof DefaultMathTransformFactory) {\n                 final DefaultMathTransformFactory.Context context = new DefaultMathTransformFactory.Context();\n-                context.setSource(source);\n-                context.setTarget(target);\n+                context.setSource(source.getCoordinateSystem());\n+                context.setTarget(target.getCoordinateSystem());    // See comment on the other setTarget(\u2026) call.\n                 transform = ((DefaultMathTransformFactory) factory).swapAndScaleAxes(transform, context);\n             } else {\n                 /*"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/c23536b7895c4eaedb7ae2830823b3a0373f00c5",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/f80aadad9d51d797e53ea77cfe77ad727e0b25d3",
        "message": "Fixed NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1492765 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_16",
        "file": [
            {
                "sha": "d6b07296a33d8cc50a306432370803f5346bc127",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/util/logging/MonolineFormatter.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/sis/blob/c23536b7895c4eaedb7ae2830823b3a0373f00c5/core/sis-utility/src/main/java/org/apache/sis/util/logging/MonolineFormatter.java",
                "raw_url": "https://github.com/apache/sis/raw/c23536b7895c4eaedb7ae2830823b3a0373f00c5/core/sis-utility/src/main/java/org/apache/sis/util/logging/MonolineFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/util/logging/MonolineFormatter.java?ref=c23536b7895c4eaedb7ae2830823b3a0373f00c5",
                "patch": "@@ -425,6 +425,7 @@ public synchronized void setSourceFormat(final String format) throws IllegalArgu\n     private void sourceFormat(String format) throws IllegalArgumentException {\n         if (format == null) {\n             sourceFormat = NO_SOURCE;\n+            return;\n         }\n         format = CharSequences.trimWhitespaces(format).toLowerCase(Locale.US);\n         for (int i=0; i<FORMAT_LABELS.length; i++) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/6de3f1424994f078a398f3bb8a38b14c47e7b074",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/1d6c9e6d34fb58df3502867420466cc25156f29f",
        "message": "Fix a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1706793 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_17",
        "file": [
            {
                "sha": "4cfd321e65716cca0d590c31805a008fa10abe72",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/util/collection/TreeNodeList.java",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "blob_url": "https://github.com/apache/sis/blob/6de3f1424994f078a398f3bb8a38b14c47e7b074/core/sis-utility/src/main/java/org/apache/sis/util/collection/TreeNodeList.java",
                "raw_url": "https://github.com/apache/sis/raw/6de3f1424994f078a398f3bb8a38b14c47e7b074/core/sis-utility/src/main/java/org/apache/sis/util/collection/TreeNodeList.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/util/collection/TreeNodeList.java?ref=6de3f1424994f078a398f3bb8a38b14c47e7b074",
                "patch": "@@ -261,6 +261,7 @@ private void ensureNotPresent(final TreeTable.Node node) throws IllegalArgumentE\n      */\n     @Override\n     protected void removeRange(final int lower, final int upper) throws IllegalArgumentException {\n+        ArgumentChecks.ensureValidIndexRange(size, lower, upper);\n         int i = upper;\n         try {\n             while (i != lower) {\n@@ -269,8 +270,10 @@ protected void removeRange(final int lower, final int upper) throws IllegalArgum\n             }\n         } finally {\n             modCount++;\n-            System.arraycopy(children, upper, children, i, size - upper);\n-            Arrays.fill(children, upper, size, null);\n+            if (children != null) {\n+                System.arraycopy(children, upper, children, i, size - upper);\n+                Arrays.fill(children, upper, size, null);\n+            }\n             size -= (upper - i);\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/ef629d6247dfada8692e0ca427d7d649befa91a4",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/dc6dd960bd86e6eae307c0bf681362cd113005f5",
        "message": "Safety checks against some NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1701294 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_18",
        "file": [
            {
                "sha": "af20c5620ca5b3e4fcccdb44ce0907cdbe01aff4",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralOperationParameter.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralOperationParameter.java",
                "raw_url": "https://github.com/apache/sis/raw/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralOperationParameter.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralOperationParameter.java?ref=ef629d6247dfada8692e0ca427d7d649befa91a4",
                "patch": "@@ -155,6 +155,14 @@ public void setElement(final AbstractParameterDescriptor parameter) {\n         metadata = parameter;\n     }\n \n+    /**\n+     * Verifies that the given descriptor is non-null and contains at least a name.\n+     * This method is used after unmarshalling.\n+     */\n+    static boolean isValid(final GeneralParameterDescriptor descriptor) {\n+        return descriptor != null && descriptor.getName() != null;\n+    }\n+\n     /**\n      * Returns a descriptor with the same properties than the {@code provided} one, but completed with information\n      * not found in GML. Those missing information are given by the {@code complete} descriptor, which may come from"
            },
            {
                "sha": "9ff11468191bf3fda52840ed1c7ad9994d8f1952",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralParameterValue.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralParameterValue.java",
                "raw_url": "https://github.com/apache/sis/raw/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralParameterValue.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_GeneralParameterValue.java?ref=ef629d6247dfada8692e0ca427d7d649befa91a4",
                "patch": "@@ -24,6 +24,7 @@\n import org.apache.sis.parameter.DefaultParameterValue;\n import org.apache.sis.parameter.DefaultParameterValueGroup;\n import org.apache.sis.internal.jaxb.gco.PropertyType;\n+import org.apache.sis.util.resources.Errors;\n \n \n /**\n@@ -109,6 +110,13 @@ public GeneralParameterValue getElement() {\n      * @param parameter The unmarshalled element.\n      */\n     public void setElement(final GeneralParameterValue parameter) {\n+        if (!CC_GeneralOperationParameter.isValid(parameter.getDescriptor())) {\n+            /*\n+             * Descriptors are mandatory and SIS classes need them. Provide an error message\n+             * here instead than waiting for a NullPointerException in some arbitrary place.\n+             */\n+            throw new IllegalArgumentException(Errors.format(Errors.Keys.MissingValueForProperty_1, \"operationParameter\"));\n+        }\n         metadata = parameter;\n     }\n }"
            },
            {
                "sha": "9904b09be459a3e3174886a6c17baf7c142b7b23",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_OperationMethod.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_OperationMethod.java",
                "raw_url": "https://github.com/apache/sis/raw/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_OperationMethod.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/internal/jaxb/referencing/CC_OperationMethod.java?ref=ef629d6247dfada8692e0ca427d7d649befa91a4",
                "patch": "@@ -40,6 +40,7 @@\n import org.apache.sis.parameter.DefaultParameterDescriptorGroup;\n import org.apache.sis.referencing.operation.DefaultOperationMethod;\n import org.apache.sis.referencing.IdentifiedObjects;\n+import org.apache.sis.util.resources.Errors;\n import org.apache.sis.util.ArraysExt;\n \n \n@@ -108,6 +109,13 @@ public DefaultOperationMethod getElement() {\n      * @param method The unmarshalled element.\n      */\n     public void setElement(final DefaultOperationMethod method) {\n+        if (!CC_GeneralOperationParameter.isValid(method.getParameters())) {\n+            /*\n+             * Parameters are mandatory and SIS classes need them. Provide an error message\n+             * here instead than waiting for a NullPointerException in some arbitrary place.\n+             */\n+            throw new IllegalArgumentException(Errors.format(Errors.Keys.MissingValueForProperty_1, \"parameters\"));\n+        }\n         metadata = method;\n     }\n "
            },
            {
                "sha": "bdde13f655e9ae1d6d243f3dff2c1daf250993c7",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/crs/SC_GeographicCRS.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/sis/blob/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/referencing/crs/SC_GeographicCRS.java",
                "raw_url": "https://github.com/apache/sis/raw/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/referencing/crs/SC_GeographicCRS.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/crs/SC_GeographicCRS.java?ref=ef629d6247dfada8692e0ca427d7d649befa91a4",
                "patch": "@@ -16,8 +16,8 @@\n  */\n package org.apache.sis.referencing.crs;\n \n-import org.opengis.referencing.crs.GeographicCRS;\n import javax.xml.bind.annotation.XmlElement;\n+import org.opengis.referencing.crs.GeographicCRS;\n import org.apache.sis.internal.jaxb.gco.PropertyType;\n \n "
            },
            {
                "sha": "414499b034ada9d23e055bc998723ab7197b00f7",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultOperationMethod.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/sis/blob/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultOperationMethod.java",
                "raw_url": "https://github.com/apache/sis/raw/ef629d6247dfada8692e0ca427d7d649befa91a4/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultOperationMethod.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultOperationMethod.java?ref=ef629d6247dfada8692e0ca427d7d649befa91a4",
                "patch": "@@ -798,6 +798,13 @@ private void setFormulaDescription(final String description) {\n      * But we would need to make sure that {@link AbstractSingleOperation#getParameters()} is consistent\n      * with the decision taken by this method.</div>\n      *\n+     * <p><b>Historical note:</b> older, deprecated, names for the parameters were:\n+     * <ul>\n+     *   <li>{@code includesParameter}</li>\n+     *   <li>{@code generalOperationParameter} - note that this name was used by the EPSG registry</li>\n+     *   <li>{@code usesParameter}</li>\n+     * </ul>\n+     *\n      * @see #getParameters()\n      * @see AbstractSingleOperation#getParameters()\n      */"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/2d48ee67067ba705b845a26b4d7e38516a04c484",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/97c4dc9f345df9912747af5d0ee70f146f55085f",
        "message": "Fix a NullPointerException that occurred when constructing a DerivedCRS from a MathTransform.\nThe NullPointerException occurred when asking for the targetCRS.getDatum() because the targetCRS\nconstruction is not yet completed at DefaultConversion construction time (cyclic references).\nThe fix is to use only the CoordinateSystem and ignore the datum, which is not needed anyway\nwhen the MathTransform is already available.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1723784 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_19",
        "file": [
            {
                "sha": "59e305de57579bbf274852205aa252f83765284a",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/sis/blob/2d48ee67067ba705b845a26b4d7e38516a04c484/core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java",
                "raw_url": "https://github.com/apache/sis/raw/2d48ee67067ba705b845a26b4d7e38516a04c484/core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/internal/referencing/ReferencingUtilities.java?ref=2d48ee67067ba705b845a26b4d7e38516a04c484",
                "patch": "@@ -159,9 +159,9 @@ public static boolean getSingleComponents(final Iterable<? extends CoordinateRef\n     }\n \n     /**\n-     * Returns the ellipsoid used by the specified coordinate reference system, providing that\n-     * the two first dimensions use an instance of {@link GeographicCRS}. Otherwise (i.e. if the\n-     * two first dimensions are not geographic), returns {@code null}.\n+     * Returns the ellipsoid used by the specified coordinate reference system, provided that the two first dimensions\n+     * use an instance of {@link GeographicCRS}. Otherwise (i.e. if the two first dimensions are not geographic),\n+     * returns {@code null}.\n      *\n      * <p>This method excludes geocentric CRS on intend. Some callers needs this exclusion as a way to identify\n      * which CRS in a Geographic/Geocentric conversion is the geographic one. An other point of view is to said"
            },
            {
                "sha": "0efc1f13c915184aea350de4755a3cd5019ec49e",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/apache/sis/blob/2d48ee67067ba705b845a26b4d7e38516a04c484/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java",
                "raw_url": "https://github.com/apache/sis/raw/2d48ee67067ba705b845a26b4d7e38516a04c484/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/operation/DefaultConversion.java?ref=2d48ee67067ba705b845a26b4d7e38516a04c484",
                "patch": "@@ -256,7 +256,11 @@ public DefaultConversion(final Map<String,?>       properties,\n                  */\n                 final DefaultMathTransformFactory.Context context = new DefaultMathTransformFactory.Context();\n                 context.setSource(source);\n-                context.setTarget(target.getCoordinateSystem());\n+                if (target instanceof GeneralDerivedCRS) {\n+                    context.setTarget(target.getCoordinateSystem());    // Using 'target' would be unsafe here.\n+                } else {\n+                    context.setTarget(target);\n+                }\n                 transform = ((DefaultMathTransformFactory) factory).createParameterizedTransform(parameters, context);\n                 parameters = Parameters.unmodifiable(context.getCompletedParameters());\n             } else {\n@@ -275,12 +279,10 @@ public DefaultConversion(final Map<String,?>       properties,\n              * ProjectedCRS), then DefaultMathTransformFactory has a specialized createBaseToDerived(\u2026)\n              * method for this job.\n              */\n-            final CoordinateReferenceSystem sourceCRS = super.getSourceCRS();\n-            final CoordinateReferenceSystem targetCRS = super.getTargetCRS();\n             if (sourceCRS == null && targetCRS == null && factory instanceof DefaultMathTransformFactory) {\n                 final DefaultMathTransformFactory.Context context = new DefaultMathTransformFactory.Context();\n-                context.setSource(source);\n-                context.setTarget(target);\n+                context.setSource(source.getCoordinateSystem());\n+                context.setTarget(target.getCoordinateSystem());    // See comment on the other setTarget(\u2026) call.\n                 transform = ((DefaultMathTransformFactory) factory).swapAndScaleAxes(transform, context);\n             } else {\n                 /*"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/ab750b8775ee63e0605a685d7ef7a4bdaef3ff03",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/4e1007f1810f9fff4d5fae61e6f221242e77f5e6",
        "message": "Fix a NullPointerException when building a FeatureType where the first attribute is a property named \"@geometry\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1754409 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_20",
        "file": [
            {
                "sha": "4508150c9ccc70fdbc463009d5426dd71e840fa8",
                "filename": "core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java",
                "status": "modified",
                "additions": 10,
                "deletions": 11,
                "changes": 21,
                "blob_url": "https://github.com/apache/sis/blob/ab750b8775ee63e0605a685d7ef7a4bdaef3ff03/core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java",
                "raw_url": "https://github.com/apache/sis/raw/ab750b8775ee63e0605a685d7ef7a4bdaef3ff03/core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-feature/src/main/java/org/apache/sis/feature/builder/FeatureTypeBuilder.java?ref=ab750b8775ee63e0605a685d7ef7a4bdaef3ff03",
                "patch": "@@ -614,9 +614,10 @@ public FeatureType build() throws IllegalStateException {\n                 identifierTypes = new PropertyType[identifierCount];\n             }\n             if (defaultGeometry != null) {\n-                envelopeIndex = numSynthetic;\n-                geometryIndex = numSynthetic + 1;\n-                numSynthetic += 2;\n+                envelopeIndex = numSynthetic++;\n+                if (!AttributeConvention.GEOMETRY_PROPERTY.equals(defaultGeometry.getName())) {\n+                    geometryIndex = numSynthetic++;\n+                }\n             }\n             final PropertyType[] propertyTypes = new PropertyType[numSynthetic + numSpecified];\n             int propertyCursor = numSynthetic;\n@@ -638,18 +639,12 @@ public FeatureType build() throws IllegalStateException {\n                  * It may happen that the property created by the user is already named \"@geometry\",\n                  * in which case we will avoid to duplicate the property.\n                  */\n-                if (builder == defaultGeometry) {\n+                if (builder == defaultGeometry && geometryIndex >= 0) {\n                     if (propertyTypes[geometryIndex] != null) {\n                         // Assuming that there is no bug in our implementation, this error could happen if the user\n                         // has modified this FeatureTypeBuilder in another thread during this build() execution.\n                         throw new CorruptedObjectException();\n                     }\n-                    if (AttributeConvention.GEOMETRY_PROPERTY.equals(instance.getName())) {\n-                        System.arraycopy(propertyTypes, geometryIndex, propertyTypes, geometryIndex-1, (numSynthetic - geometryIndex) + i);\n-                        geometryIndex = -1;\n-                        numSynthetic--;\n-                        continue;           // Skip the increment of propertyCursor.\n-                    }\n                     propertyTypes[geometryIndex] = FeatureOperations.link(name(AttributeConvention.GEOMETRY_PROPERTY), instance);\n                 }\n                 propertyCursor++;\n@@ -675,7 +670,11 @@ public FeatureType build() throws IllegalStateException {\n                     // has modified this FeatureTypeBuilder in another thread during this build() execution.\n                     throw new CorruptedObjectException();\n                 }\n-                if (identifierCursor == 1 && AttributeConvention.IDENTIFIER_PROPERTY.equals(identifierTypes[0].getName())) {\n+                if (AttributeConvention.IDENTIFIER_PROPERTY.equals(identifierTypes[0].getName())) {\n+                    if (identifierCursor > 1) {\n+                        throw new IllegalStateException(Errors.format(Errors.Keys.PropertyAlreadyExists_2,\n+                                getDisplayName(), AttributeConvention.IDENTIFIER_PROPERTY));\n+                    }\n                     System.arraycopy(propertyTypes, 1, propertyTypes, 0, --propertyCursor);\n                 } else {\n                     propertyTypes[0] = FeatureOperations.compound(name(AttributeConvention.IDENTIFIER_PROPERTY),"
            },
            {
                "sha": "4343a81c90487aeeb8a4e99bb07f4de5be914b3c",
                "filename": "core/sis-feature/src/test/java/org/apache/sis/feature/builder/FeatureTypeBuilderTest.java",
                "status": "modified",
                "additions": 62,
                "deletions": 26,
                "changes": 88,
                "blob_url": "https://github.com/apache/sis/blob/ab750b8775ee63e0605a685d7ef7a4bdaef3ff03/core/sis-feature/src/test/java/org/apache/sis/feature/builder/FeatureTypeBuilderTest.java",
                "raw_url": "https://github.com/apache/sis/raw/ab750b8775ee63e0605a685d7ef7a4bdaef3ff03/core/sis-feature/src/test/java/org/apache/sis/feature/builder/FeatureTypeBuilderTest.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-feature/src/test/java/org/apache/sis/feature/builder/FeatureTypeBuilderTest.java?ref=ab750b8775ee63e0605a685d7ef7a4bdaef3ff03",
                "patch": "@@ -46,10 +46,10 @@\n  */\n public final strictfp class FeatureTypeBuilderTest extends TestCase {\n     /**\n-     * Tests a {@code FeatureTypeBuilder.Property} with the minimum number of parameters.\n+     * Tests a {@code AttributeTypeBuilder} with the minimum number of parameters.\n      */\n     @Test\n-    public void testEmptyProperty() {\n+    public void testAttributeTypeBuilderInitialization() {\n         final AttributeTypeBuilder<String> builder = new FeatureTypeBuilder().addAttribute(String.class);\n         assertEquals(\"default name\", \"string\", builder.getName().toString());\n \n@@ -70,8 +70,8 @@ public void testEmptyProperty() {\n      * Tests a {@code FeatureTypeBuilder} with the minimum number of parameters (no property and no super type).\n      */\n     @Test\n-    @DependsOnMethod(\"testEmptyProperty\")\n-    public void testEmptyFeature() {\n+    @DependsOnMethod(\"testAttributeTypeBuilderInitialization\")\n+    public void testFeatureTypeBuilderInitialization() {\n         final FeatureTypeBuilder builder = new FeatureTypeBuilder();\n         try {\n             builder.build();\n@@ -80,13 +80,6 @@ public void testEmptyFeature() {\n             final String message = ex.getMessage();\n             assertTrue(message, message.contains(\"name\"));\n         }\n-        testEmptyFeature(builder);\n-    }\n-\n-    /**\n-     * Implementation of {@link #testEmptyFeature()} using the given pre-existing builder.\n-     */\n-    private static void testEmptyFeature(final FeatureTypeBuilder builder) {\n         builder.setName(\"scope\", \"test\");\n         final FeatureType type = builder.build();\n \n@@ -97,11 +90,11 @@ private static void testEmptyFeature(final FeatureTypeBuilder builder) {\n     }\n \n     /**\n-     * Test creation of a single property.\n+     * Test creation of a single attribute.\n      */\n     @Test\n-    @DependsOnMethod(\"testEmptyProperty\")\n-    public void testPropertyBuild() {\n+    @DependsOnMethod(\"testAttributeTypeBuilderInitialization\")\n+    public void testAttributeTypeBuilder() {\n         final AttributeTypeBuilder<String> builder = new FeatureTypeBuilder().addAttribute(String.class);\n         builder.setName        (\"myScope\", \"myName\");\n         builder.setDefinition  (\"test definition\");\n@@ -129,15 +122,9 @@ public void testPropertyBuild() {\n      * Tests {@link FeatureTypeBuilder#addAttribute(Class)}.\n      */\n     @Test\n-    @DependsOnMethod(\"testEmptyFeature\")\n-    public void testAddProperties() {\n-        testAddProperties(new FeatureTypeBuilder());\n-    }\n-\n-    /**\n-     * Implementation of {@link #testAddProperties()} using the given pre-existing builder.\n-     */\n-    private static void testAddProperties(final FeatureTypeBuilder builder) {\n+    @DependsOnMethod(\"testAttributeTypeBuilder\")\n+    public void testAddAttribute() {\n+        final FeatureTypeBuilder builder = new FeatureTypeBuilder();\n         builder.setName(\"myScope\", \"myName\");\n         builder.setDefinition (\"test definition\");\n         builder.setDesignation(\"test designation\");\n@@ -194,11 +181,12 @@ private static void testAddProperties(final FeatureTypeBuilder builder) {\n     }\n \n     /**\n-     * Tests {@link FeatureTypeBuilder#addIdentifier(Class)}.\n+     * Tests {@link FeatureTypeBuilder#addAttribute(Class)} where one property is an identifier\n+     * and another property is the geometry.\n      */\n     @Test\n-    @DependsOnMethod(\"testAddProperties\")\n-    public void testAddIdentifier() {\n+    @DependsOnMethod(\"testAddAttribute\")\n+    public void testAddIdentifierAndGeometry() {\n         final FeatureTypeBuilder builder = new FeatureTypeBuilder();\n         builder.setName(\"scope\", \"test\");\n         builder.setIdentifierDelimiters(\"-\", \"pref.\", null);\n@@ -227,6 +215,54 @@ public void testAddIdentifier() {\n         assertEquals(\"name\", \"shape\",                                 a4.getName().toString());\n     }\n \n+    /**\n+     * Tests {@link FeatureTypeBuilder#addAttribute(Class)} where one attribute is an identifier that already has\n+     * the {@code \"@identifier\"} name. This is called \"anonymous\" because identifiers with an explicit name in the\n+     * data file should use that name instead in the feature type.\n+     */\n+    @Test\n+    @DependsOnMethod(\"testAddIdentifierAndGeometry\")\n+    public void testAddAnonymousIdentifier() {\n+        final FeatureTypeBuilder builder = new FeatureTypeBuilder();\n+        builder.setName(\"City\");\n+        builder.addAttribute(String.class).setName(AttributeConvention.IDENTIFIER_PROPERTY).addRole(AttributeRole.IDENTIFIER_COMPONENT);\n+        builder.addAttribute(Integer.class).setName(\"population\");\n+        final FeatureType type = builder.build();\n+        final Iterator<? extends PropertyType> it = type.getProperties(true).iterator();\n+        final PropertyType a0 = it.next();\n+        final PropertyType a1 = it.next();\n+        assertFalse(\"properties count\", it.hasNext());\n+        assertEquals(\"name\", AttributeConvention.IDENTIFIER_PROPERTY, a0.getName());\n+        assertEquals(\"type\", String.class,  ((AttributeType<?>) a0).getValueClass());\n+        assertEquals(\"name\", \"population\", a1.getName().toString());\n+        assertEquals(\"type\", Integer.class, ((AttributeType<?>) a1).getValueClass());\n+    }\n+\n+    /**\n+     * Tests {@link FeatureTypeBuilder#addAttribute(Class)} where one attribute is a geometry that already has\n+     * the {@code \"@geometry\"} name. This is called \"anonymous\" because geometries with an explicit name in the\n+     * data file should use that name instead in the feature type.\n+     */\n+    @Test\n+    @DependsOnMethod(\"testAddIdentifierAndGeometry\")\n+    public void testAddAnonymousGeometry() {\n+        final FeatureTypeBuilder builder = new FeatureTypeBuilder();\n+        builder.setName(\"City\");\n+        builder.addAttribute(Point.class).setName(AttributeConvention.GEOMETRY_PROPERTY).addRole(AttributeRole.DEFAULT_GEOMETRY);\n+        builder.addAttribute(Integer.class).setName(\"population\");\n+        final FeatureType type = builder.build();\n+        final Iterator<? extends PropertyType> it = type.getProperties(true).iterator();\n+        final PropertyType a0 = it.next();\n+        final PropertyType a1 = it.next();\n+        final PropertyType a2 = it.next();\n+        assertFalse(\"properties count\", it.hasNext());\n+        assertEquals(\"name\", AttributeConvention.ENVELOPE_PROPERTY, a0.getName());\n+        assertEquals(\"name\", AttributeConvention.GEOMETRY_PROPERTY, a1.getName());\n+        assertEquals(\"type\", Point.class,   ((AttributeType<?>) a1).getValueClass());\n+        assertEquals(\"name\", \"population\", a2.getName().toString());\n+        assertEquals(\"type\", Integer.class, ((AttributeType<?>) a2).getValueClass());\n+    }\n+\n     /**\n      * Tests creation of a builder from an existing feature type.\n      * This method also acts as a test of {@code FeatureTypeBuilder} getter methods."
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/97f9135c6618f9db359ae00568156a0e7a165810",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/21226614537645c274725262eb805cb2b642effd",
        "message": "Merge the NullPointerException fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1627537 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_21",
        "file": [
            {
                "sha": "2c07f69bab929a6beb75eb8d080effe4d7f18ef2",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/sis/blob/97f9135c6618f9db359ae00568156a0e7a165810/core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java",
                "raw_url": "https://github.com/apache/sis/raw/97f9135c6618f9db359ae00568156a0e7a165810/core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java?ref=97f9135c6618f9db359ae00568156a0e7a165810",
                "patch": "@@ -408,6 +408,9 @@ private void removeAt(final int lower, final int upper) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     private boolean isSorted() {\n+        if (array == null) {\n+            return true;\n+        }\n         final boolean strict = isMinIncluded | isMaxIncluded;\n         switch (elementCode) {\n             case DOUBLE:    return ArraysExt.isSorted((double[]) array, strict);\n@@ -665,7 +668,7 @@ public boolean remove(final E minValue, final E maxValue) throws IllegalArgument\n                 removeAt(i0, i1);\n             } else {\n                 /*\n-                 * i0 is pair and i1 is odd.\n+                 * i0 is even and i1 is odd.\n                  * Case where minValue is outside any existing range and maxValue is inside a specific range.\n                  *\n                  *   index :      A0    B0       A1       B1        An      Bn     A(n+1)   B(n+1)\n@@ -681,13 +684,13 @@ public boolean remove(final E minValue, final E maxValue) throws IllegalArgument\n                  * index :      A0    B0       i1  Bn     A(n+1)   B(n+1)\n                  * range :      \u2588\u2588\u2588\u2588\u2588\u2588\u2588        \u2588\u2588\u2588\u2588\u2588      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u25fe\u25fe\u25fe\n                  */\n-                removeAt(i0, i1 & ~1); // i1 - 1\n+                removeAt(i0, i1 & ~1); // equivalent to (i0, i1 - 1)\n                 Array.set(array, i0, maxValue);\n             }\n         } else {\n             if ((i1 & 1) == 0) {\n                 /*\n-                 * i0 is odd and i1 is pair.\n+                 * i0 is odd and i1 is even.\n                  * Case where minValue is inside a specific range and maxValue is outside any range.\n                  *\n                  *  index :      A0    B0     A1       B1        An      Bn        A(n+1)   B(n+1)\n@@ -744,7 +747,7 @@ public boolean remove(final E minValue, final E maxValue) throws IllegalArgument\n                     final int di = i1 - i0;\n                     assert di >= 2 : di;\n                     if (di > 2) {\n-                        removeAt(i0 + 1, i1 & ~1); // i0 + 1, i1 - 1\n+                        removeAt(i0 + 1, i1 & ~1); // equivalent to (i0 + 1, i1 - 1)\n                     }\n                     Array.set(array, i0,     minValue);\n                     Array.set(array, i0 + 1, maxValue);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/f351b627ff70cee9e1d0c80d6c4c3e121dd35c68",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/9e80452101325df0c13d4b81d59d406aeda29573",
        "message": "Fix a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1627536 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_22",
        "file": [
            {
                "sha": "2c07f69bab929a6beb75eb8d080effe4d7f18ef2",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/sis/blob/f351b627ff70cee9e1d0c80d6c4c3e121dd35c68/core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java",
                "raw_url": "https://github.com/apache/sis/raw/f351b627ff70cee9e1d0c80d6c4c3e121dd35c68/core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/util/collection/RangeSet.java?ref=f351b627ff70cee9e1d0c80d6c4c3e121dd35c68",
                "patch": "@@ -408,6 +408,9 @@ private void removeAt(final int lower, final int upper) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     private boolean isSorted() {\n+        if (array == null) {\n+            return true;\n+        }\n         final boolean strict = isMinIncluded | isMaxIncluded;\n         switch (elementCode) {\n             case DOUBLE:    return ArraysExt.isSorted((double[]) array, strict);\n@@ -665,7 +668,7 @@ public boolean remove(final E minValue, final E maxValue) throws IllegalArgument\n                 removeAt(i0, i1);\n             } else {\n                 /*\n-                 * i0 is pair and i1 is odd.\n+                 * i0 is even and i1 is odd.\n                  * Case where minValue is outside any existing range and maxValue is inside a specific range.\n                  *\n                  *   index :      A0    B0       A1       B1        An      Bn     A(n+1)   B(n+1)\n@@ -681,13 +684,13 @@ public boolean remove(final E minValue, final E maxValue) throws IllegalArgument\n                  * index :      A0    B0       i1  Bn     A(n+1)   B(n+1)\n                  * range :      \u2588\u2588\u2588\u2588\u2588\u2588\u2588        \u2588\u2588\u2588\u2588\u2588      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u25fe\u25fe\u25fe\n                  */\n-                removeAt(i0, i1 & ~1); // i1 - 1\n+                removeAt(i0, i1 & ~1); // equivalent to (i0, i1 - 1)\n                 Array.set(array, i0, maxValue);\n             }\n         } else {\n             if ((i1 & 1) == 0) {\n                 /*\n-                 * i0 is odd and i1 is pair.\n+                 * i0 is odd and i1 is even.\n                  * Case where minValue is inside a specific range and maxValue is outside any range.\n                  *\n                  *  index :      A0    B0     A1       B1        An      Bn        A(n+1)   B(n+1)\n@@ -744,7 +747,7 @@ public boolean remove(final E minValue, final E maxValue) throws IllegalArgument\n                     final int di = i1 - i0;\n                     assert di >= 2 : di;\n                     if (di > 2) {\n-                        removeAt(i0 + 1, i1 & ~1); // i0 + 1, i1 - 1\n+                        removeAt(i0 + 1, i1 & ~1); // equivalent to (i0 + 1, i1 - 1)\n                     }\n                     Array.set(array, i0,     minValue);\n                     Array.set(array, i0 + 1, maxValue);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/ba6c97b1bda773bf8e28d9bc7b1c483efd7c4756",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/7654823b773114eff4167ed0c92ac825956c6d20",
        "message": "Merged the NullPointerException fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1620290 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_23",
        "file": [
            {
                "sha": "7241f4d69ea5105e48f0e9f9fd6f63bcb1d552e5",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/ba6c97b1bda773bf8e28d9bc7b1c483efd7c4756/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java",
                "raw_url": "https://github.com/apache/sis/raw/ba6c97b1bda773bf8e28d9bc7b1c483efd7c4756/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java?ref=ba6c97b1bda773bf8e28d9bc7b1c483efd7c4756",
                "patch": "@@ -21,7 +21,6 @@\n import org.opengis.metadata.citation.Telephone;\n import org.opengis.metadata.citation.TelephoneType;\n import org.apache.sis.internal.metadata.LegacyPropertyAdapter;\n-import org.apache.sis.util.ArgumentChecks;\n \n \n /**\n@@ -99,7 +98,9 @@ protected boolean update(final Telephone container, final String value) {\n      */\n     @Override\n     public boolean add(final String value) {\n-        ArgumentChecks.ensureNonNull(\"value\", value);\n+        if (value == null || value.isEmpty()) { // Null value happen with empty XML elements like <gco:CharacterString/>\n+            return false;\n+        }\n         final Iterator<Telephone> it = elements.iterator();\n         if (it.hasNext()) {\n             final Telephone telephone = it.next();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/b37374a04a5293d34e97dc6624b82f49ef72eeb0",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/01b2ff563f47984d1bc1bf3f044b6ddce7f9e2cb",
        "message": "Fixed a NullPointerException at unmarshalling time.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1620289 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_24",
        "file": [
            {
                "sha": "7241f4d69ea5105e48f0e9f9fd6f63bcb1d552e5",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/b37374a04a5293d34e97dc6624b82f49ef72eeb0/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java",
                "raw_url": "https://github.com/apache/sis/raw/b37374a04a5293d34e97dc6624b82f49ef72eeb0/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/LegacyTelephones.java?ref=b37374a04a5293d34e97dc6624b82f49ef72eeb0",
                "patch": "@@ -21,7 +21,6 @@\n import org.opengis.metadata.citation.Telephone;\n import org.opengis.metadata.citation.TelephoneType;\n import org.apache.sis.internal.metadata.LegacyPropertyAdapter;\n-import org.apache.sis.util.ArgumentChecks;\n \n \n /**\n@@ -99,7 +98,9 @@ protected boolean update(final Telephone container, final String value) {\n      */\n     @Override\n     public boolean add(final String value) {\n-        ArgumentChecks.ensureNonNull(\"value\", value);\n+        if (value == null || value.isEmpty()) { // Null value happen with empty XML elements like <gco:CharacterString/>\n+            return false;\n+        }\n         final Iterator<Telephone> it = elements.iterator();\n         if (it.hasNext()) {\n             final Telephone telephone = it.next();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/011aaa767428e8772ac50900529669d6923b7978",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/8174b983e1d1e6e06e58f953b681703d2f2594f7",
        "message": "Fixed a NullPointerException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1615131 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_25",
        "file": [
            {
                "sha": "0213b3c44ced15b8b41a2127ddcc962e6851f24a",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultAggregateInformation.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/sis/blob/011aaa767428e8772ac50900529669d6923b7978/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultAggregateInformation.java",
                "raw_url": "https://github.com/apache/sis/raw/011aaa767428e8772ac50900529669d6923b7978/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultAggregateInformation.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/identification/DefaultAggregateInformation.java?ref=011aaa767428e8772ac50900529669d6923b7978",
                "patch": "@@ -18,6 +18,7 @@\n \n import java.util.Iterator;\n import java.util.ArrayList;\n+import java.util.Collection;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -157,9 +158,12 @@ public Identifier getAggregateDataSetIdentifier() {\n      */\n     static Identifier getAggregateDataSetIdentifier(final Citation name) {\n         if (name != null) {\n-            final Iterator<? extends Identifier> it = name.getIdentifiers().iterator();\n-            if (it.hasNext()) {\n-                return it.next();\n+            final Collection<? extends Identifier> names = name.getIdentifiers();\n+            if (names != null) { // May be null on XML marshalling.\n+                final Iterator<? extends Identifier> it = names.iterator();\n+                if (it.hasNext()) {\n+                    return it.next();\n+                }\n             }\n         }\n         return null;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/aa4b221dc0e7f9dbf66500318bc94d6fff2f5dae",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/969c7c5dd27e814f3a6feadd7ba0309b5707f5d9",
        "message": "Merged the NullPointerException fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1605686 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_26",
        "file": [
            {
                "sha": "3ac68baec8587df9b92767e25a439b6f262be59d",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java",
                "status": "modified",
                "additions": 10,
                "deletions": 2,
                "changes": 12,
                "blob_url": "https://github.com/apache/sis/blob/aa4b221dc0e7f9dbf66500318bc94d6fff2f5dae/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java",
                "raw_url": "https://github.com/apache/sis/raw/aa4b221dc0e7f9dbf66500318bc94d6fff2f5dae/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java?ref=aa4b221dc0e7f9dbf66500318bc94d6fff2f5dae",
                "patch": "@@ -316,7 +316,11 @@ public void setMaintenanceScopes(final Collection<? extends Scope> newValues) {\n     @Deprecated\n     @XmlElement(name = \"updateScope\")\n     public Collection<ScopeCode> getUpdateScopes() {\n-        return new LegacyProperties<ScopeCode,Scope>(getMaintenanceScopes()) {\n+        final Collection<Scope> scopes = getMaintenanceScopes();\n+        if (scopes == null) {\n+            return null; // May happen at marshalling time.\n+        }\n+        return new LegacyProperties<ScopeCode,Scope>(scopes) {\n             @Override protected Scope wrap(final ScopeCode code) {\n                 return new DefaultScope(code);\n             }\n@@ -368,7 +372,11 @@ public void setUpdateScopes(Collection<? extends ScopeCode> newValues) {\n     @Deprecated\n     @XmlElement(name = \"updateScopeDescription\")\n     public Collection<ScopeDescription> getUpdateScopeDescriptions() {\n-        return new LegacyProperties<ScopeDescription,Scope>(getMaintenanceScopes()) {\n+        final Collection<Scope> scopes = getMaintenanceScopes();\n+        if (scopes == null) {\n+            return null; // May happen at marshalling time.\n+        }\n+        return new LegacyProperties<ScopeDescription,Scope>(scopes) {\n             private boolean warningOccurred;\n \n             @Override protected Scope wrap(final ScopeDescription code) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/1bce0c4febc31ef4b4da599570f8c1d5078c9e63",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/dac4b239b0096503523fc4c0818144f214d3ad6d",
        "message": "Fixed a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1605685 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_27",
        "file": [
            {
                "sha": "3ac68baec8587df9b92767e25a439b6f262be59d",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java",
                "status": "modified",
                "additions": 10,
                "deletions": 2,
                "changes": 12,
                "blob_url": "https://github.com/apache/sis/blob/1bce0c4febc31ef4b4da599570f8c1d5078c9e63/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java",
                "raw_url": "https://github.com/apache/sis/raw/1bce0c4febc31ef4b4da599570f8c1d5078c9e63/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/maintenance/DefaultMaintenanceInformation.java?ref=1bce0c4febc31ef4b4da599570f8c1d5078c9e63",
                "patch": "@@ -316,7 +316,11 @@ public void setMaintenanceScopes(final Collection<? extends Scope> newValues) {\n     @Deprecated\n     @XmlElement(name = \"updateScope\")\n     public Collection<ScopeCode> getUpdateScopes() {\n-        return new LegacyProperties<ScopeCode,Scope>(getMaintenanceScopes()) {\n+        final Collection<Scope> scopes = getMaintenanceScopes();\n+        if (scopes == null) {\n+            return null; // May happen at marshalling time.\n+        }\n+        return new LegacyProperties<ScopeCode,Scope>(scopes) {\n             @Override protected Scope wrap(final ScopeCode code) {\n                 return new DefaultScope(code);\n             }\n@@ -368,7 +372,11 @@ public void setUpdateScopes(Collection<? extends ScopeCode> newValues) {\n     @Deprecated\n     @XmlElement(name = \"updateScopeDescription\")\n     public Collection<ScopeDescription> getUpdateScopeDescriptions() {\n-        return new LegacyProperties<ScopeDescription,Scope>(getMaintenanceScopes()) {\n+        final Collection<Scope> scopes = getMaintenanceScopes();\n+        if (scopes == null) {\n+            return null; // May happen at marshalling time.\n+        }\n+        return new LegacyProperties<ScopeDescription,Scope>(scopes) {\n             private boolean warningOccurred;\n \n             @Override protected Scope wrap(final ScopeDescription code) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/ddc91127f21d309392b74113cd29c6845c0df1d9",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/74b4ffb474edb87623749a3f17a5b6d83d586e1c",
        "message": "Added tests and fixed a NullPointerException identified by those tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1518142 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_28",
        "file": [
            {
                "sha": "aa15f0ca7ef1093fefb66133632c81ff215f337e",
                "filename": "application/sis-console/pom.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/sis/blob/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/pom.xml",
                "raw_url": "https://github.com/apache/sis/raw/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/application/sis-console/pom.xml?ref=ddc91127f21d309392b74113cd29c6845c0df1d9",
                "patch": "@@ -120,6 +120,13 @@ Console application.\n       <type>test-jar</type>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.sis.core</groupId>\n+      <artifactId>sis-metadata</artifactId>\n+      <version>${project.version}</version>\n+      <type>test-jar</type>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n \n </project>"
            },
            {
                "sha": "f5bf262248d05dc360f2582e261da201383dc7fa",
                "filename": "application/sis-console/src/main/java/org/apache/sis/console/MimeTypeSC.java",
                "status": "modified",
                "additions": 53,
                "deletions": 24,
                "changes": 77,
                "blob_url": "https://github.com/apache/sis/blob/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/src/main/java/org/apache/sis/console/MimeTypeSC.java",
                "raw_url": "https://github.com/apache/sis/raw/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/src/main/java/org/apache/sis/console/MimeTypeSC.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/application/sis-console/src/main/java/org/apache/sis/console/MimeTypeSC.java?ref=ddc91127f21d309392b74113cd29c6845c0df1d9",
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.sis.storage.DataStores;\n import org.apache.sis.storage.DataStoreException;\n import org.apache.sis.util.resources.Errors;\n+import org.apache.sis.util.CharSequences;\n \n // Related to JDK7.\n import java.nio.file.Files;\n@@ -33,6 +34,12 @@\n \n /**\n  * The \"mime-type\" subcommand.\n+ * This sub-command reproduces the functionality of the following Unix command,\n+ * except that {@code MimeTypeSC} uses the SIS detection mechanism instead than the OS one.\n+ *\n+ * {@preformat shell\n+ *   file --mime-type <files>\n+ * }\n  *\n  * @author  Martin Desruisseaux (Geomatys)\n  * @since   0.4\n@@ -57,33 +64,55 @@\n      */\n     @Override\n     public int run() throws InvalidOptionException, IOException, DataStoreException, URISyntaxException {\n-        if (hasUnexpectedFileCount(1, 1)) {\n+        if (hasUnexpectedFileCount(1, Integer.MAX_VALUE)) {\n             return Command.INVALID_ARGUMENT_EXIT_CODE;\n         }\n-        final String file = files.get(0);\n-        final URI uri;\n-        try {\n-            uri = new URI(file);\n-        } catch (URISyntaxException e) {\n-            canNotOpen(0, e);\n-            return Command.IO_EXCEPTION_EXIT_CODE;\n-        }\n-        String type;\n-        if (!uri.isAbsolute()) {\n-            // If the URI is not absolute, we will not be able to convert to Path.\n-            // Open as a String, leaving the conversion to DataStore implementations.\n-            type = DataStores.probeContentType(file);\n-        } else try {\n-            type = Files.probeContentType(Paths.get(uri));\n-        } catch (IllegalArgumentException | FileSystemNotFoundException e) {\n-            type = DataStores.probeContentType(uri);\n-        } catch (NoSuchFileException e) {\n-            error(Errors.format(Errors.Keys.CanNotOpen_1, uri), e);\n-            return Command.IO_EXCEPTION_EXIT_CODE;\n+        /*\n+         * Computes the width of the first column, which will contain file names.\n+         */\n+        int width = 0;\n+        for (final String file : files) {\n+            final int length = file.length() + 1;\n+            if (length > width) {\n+                width = length;\n+            }\n         }\n-        if (type != null) {\n-            out.println(type);\n-            out.flush();\n+        /*\n+         * Now detect and print MIME type.\n+         */\n+        for (final String file : files) {\n+            final URI uri;\n+            try {\n+                uri = new URI(file);\n+            } catch (URISyntaxException e) {\n+                canNotOpen(0, e);\n+                return Command.IO_EXCEPTION_EXIT_CODE;\n+            }\n+            String type;\n+            if (!uri.isAbsolute()) {\n+                // If the URI is not absolute, we will not be able to convert to Path.\n+                // Open as a String, leaving the conversion to DataStore implementations.\n+                type = DataStores.probeContentType(file);\n+            } else try {\n+                type = Files.probeContentType(Paths.get(uri));\n+            } catch (IllegalArgumentException | FileSystemNotFoundException e) {\n+                type = DataStores.probeContentType(uri);\n+            } catch (NoSuchFileException e) {\n+                error(Errors.format(Errors.Keys.CanNotOpen_1, uri), e);\n+                return Command.IO_EXCEPTION_EXIT_CODE;\n+            }\n+            /*\n+             * Output of Unix \"file --mime-type\" Unix command is of the form:\n+             *\n+             *   file: type\n+             */\n+            if (type != null) {\n+                out.print(file);\n+                out.print(':');\n+                out.print(CharSequences.spaces(width - file.length()));\n+                out.println(type);\n+                out.flush();\n+            }\n         }\n         return 0;\n     }"
            },
            {
                "sha": "38d2858bd28fc4b0a88bd4689a91f27046e25717",
                "filename": "application/sis-console/src/test/java/org/apache/sis/console/MimeTypeSCTest.java",
                "status": "added",
                "additions": 52,
                "deletions": 0,
                "changes": 52,
                "blob_url": "https://github.com/apache/sis/blob/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/src/test/java/org/apache/sis/console/MimeTypeSCTest.java",
                "raw_url": "https://github.com/apache/sis/raw/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/src/test/java/org/apache/sis/console/MimeTypeSCTest.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/application/sis-console/src/test/java/org/apache/sis/console/MimeTypeSCTest.java?ref=ddc91127f21d309392b74113cd29c6845c0df1d9",
                "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.sis.console;\n+\n+import java.net.URL;\n+import org.apache.sis.xml.MetadataMarshallingTest;\n+import org.apache.sis.test.DependsOn;\n+import org.apache.sis.test.TestCase;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+\n+/**\n+ * Tests the {@link MimeTypeSC} sub-command.\n+ *\n+ * @author  Martin Desruisseaux (Geomatys)\n+ * @since   0.4\n+ * @version 0.4\n+ * @module\n+ */\n+@DependsOn(SubCommandTest.class)\n+public final strictfp class MimeTypeSCTest extends TestCase {\n+    /**\n+     * Tests the sub-command on a metadata file.\n+     *\n+     * @throws Exception Should never happen.\n+     */\n+    @Test\n+    public void testWithMetadataXML() throws Exception {\n+        final URL url = MetadataMarshallingTest.class.getResource(\"Extent.xml\");\n+        assertNotNull(\"Extent.xml\", url);\n+        final MimeTypeSC test = new MimeTypeSC(0, SubCommand.TEST, url.toString());\n+        test.run();\n+        final String output = test.outputBuffer.toString().trim();\n+        assertTrue(output, output.endsWith(\"org/apache/sis/xml/Extent.xml: application/vnd.iso.19139+xml\"));\n+    }\n+}"
            },
            {
                "sha": "ddb0af33f61f2d4b65e599050d1ae44bcbbc7ac1",
                "filename": "application/sis-console/src/test/java/org/apache/sis/test/suite/ConsoleTestSuite.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/sis/blob/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/src/test/java/org/apache/sis/test/suite/ConsoleTestSuite.java",
                "raw_url": "https://github.com/apache/sis/raw/ddc91127f21d309392b74113cd29c6845c0df1d9/application/sis-console/src/test/java/org/apache/sis/test/suite/ConsoleTestSuite.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/application/sis-console/src/test/java/org/apache/sis/test/suite/ConsoleTestSuite.java?ref=ddc91127f21d309392b74113cd29c6845c0df1d9",
                "patch": "@@ -26,13 +26,14 @@\n  *\n  * @author  Martin Desruisseaux (Geomatys)\n  * @since   0.3\n- * @version 0.3\n+ * @version 0.4\n  * @module\n  */\n @Suite.SuiteClasses({\n     org.apache.sis.console.SubCommandTest.class,\n     org.apache.sis.console.HelpSCTest.class,\n     org.apache.sis.console.AboutSCTest.class,\n+    org.apache.sis.console.MimeTypeSCTest.class,\n     org.apache.sis.console.MetadataSCTest.class\n })\n public final strictfp class ConsoleTestSuite extends TestSuite {"
            },
            {
                "sha": "712b17dfa034e2af3424b3d97ab63832cbd9265d",
                "filename": "storage/sis-netcdf/src/main/java/org/apache/sis/storage/netcdf/NetcdfStoreProvider.java",
                "status": "modified",
                "additions": 15,
                "deletions": 0,
                "changes": 15,
                "blob_url": "https://github.com/apache/sis/blob/ddc91127f21d309392b74113cd29c6845c0df1d9/storage/sis-netcdf/src/main/java/org/apache/sis/storage/netcdf/NetcdfStoreProvider.java",
                "raw_url": "https://github.com/apache/sis/raw/ddc91127f21d309392b74113cd29c6845c0df1d9/storage/sis-netcdf/src/main/java/org/apache/sis/storage/netcdf/NetcdfStoreProvider.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-netcdf/src/main/java/org/apache/sis/storage/netcdf/NetcdfStoreProvider.java?ref=ddc91127f21d309392b74113cd29c6845c0df1d9",
                "patch": "@@ -16,6 +16,7 @@\n  */\n package org.apache.sis.storage.netcdf;\n \n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.lang.reflect.Method;\n@@ -34,6 +35,7 @@\n import org.apache.sis.storage.DataStoreException;\n import org.apache.sis.storage.ProbeResult;\n import org.apache.sis.util.logging.WarningListeners;\n+import org.apache.sis.util.logging.Logging;\n import org.apache.sis.util.ThreadSafe;\n import org.apache.sis.util.Version;\n \n@@ -139,6 +141,9 @@ public ProbeResult probeContent(StorageConnector storage) throws DataStoreExcept\n          * The UCAR library is an optional dependency. If that library is present and the\n          * input is a String, then the following code may trigs a large amount of classes\n          * loading.\n+         *\n+         * Note that the UCAR library expects a String argument, not a File, because it\n+         * has special cases for \"file:\", \"http:\", \"nodods:\" and \"slurp:\" protocols.\n          */\n         if (!isSupported) {\n             final String path = storage.getStorageAs(String.class);\n@@ -155,6 +160,16 @@ public ProbeResult probeContent(StorageConnector storage) throws DataStoreExcept\n                     if (cause instanceof DataStoreException) throw (DataStoreException) cause;\n                     if (cause instanceof RuntimeException)   throw (RuntimeException)   cause;\n                     if (cause instanceof Error)              throw (Error)              cause;\n+                    if (cause instanceof FileNotFoundException) {\n+                        /*\n+                         * Happen if the String argument uses any protocol not recognized by the UCAR library,\n+                         * in which case UCAR tries to open it as a file even if it is not a file. For example\n+                         * we get this exception for \"jar:file:/file.jar!/entry.nc\".\n+                         */\n+                        Logging.recoverableException(\n+                                Logging.getLogger(\"org.apache.sis.storage\"), netcdfFileClass, \"canOpen\", cause);\n+                        return ProbeResult.UNSUPPORTED_STORAGE;\n+                    }\n                     throw new DataStoreException(e); // The cause may be IOException.\n                 }\n             } else {"
            },
            {
                "sha": "01d4876be987229a65aef62b6624324f87dc3307",
                "filename": "storage/sis-storage/src/main/java/org/apache/sis/internal/storage/IOUtilities.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/sis/blob/ddc91127f21d309392b74113cd29c6845c0df1d9/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/IOUtilities.java",
                "raw_url": "https://github.com/apache/sis/raw/ddc91127f21d309392b74113cd29c6845c0df1d9/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/IOUtilities.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-storage/src/main/java/org/apache/sis/internal/storage/IOUtilities.java?ref=ddc91127f21d309392b74113cd29c6845c0df1d9",
                "patch": "@@ -119,7 +119,8 @@ private static String part(final Object path, final boolean extension) {\n             if (path instanceof URL) {\n                 name = ((URL) path).getPath();\n             } else if (path instanceof URI) {\n-                name = ((URI) path).getPath();\n+                final URI uri = (URI) path;\n+                name = uri.isOpaque() ? uri.getSchemeSpecificPart() : uri.getPath();\n             } else if (path instanceof CharSequence) {\n                 name = path.toString();\n                 separator = File.separatorChar;"
            },
            {
                "sha": "40be7c5921575ee00e39ddb4c66af61a1a1885c6",
                "filename": "storage/sis-storage/src/test/java/org/apache/sis/internal/storage/IOUtilitiesTest.java",
                "status": "modified",
                "additions": 21,
                "deletions": 1,
                "changes": 22,
                "blob_url": "https://github.com/apache/sis/blob/ddc91127f21d309392b74113cd29c6845c0df1d9/storage/sis-storage/src/test/java/org/apache/sis/internal/storage/IOUtilitiesTest.java",
                "raw_url": "https://github.com/apache/sis/raw/ddc91127f21d309392b74113cd29c6845c0df1d9/storage/sis-storage/src/test/java/org/apache/sis/internal/storage/IOUtilitiesTest.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/storage/sis-storage/src/test/java/org/apache/sis/internal/storage/IOUtilitiesTest.java?ref=ddc91127f21d309392b74113cd29c6845c0df1d9",
                "patch": "@@ -35,7 +35,7 @@\n  * @author  Martin Desruisseaux (Geomatys)\n  * @author  Johann Sorel (Geomatys)\n  * @since   0.3 (derived from geotk-3.00)\n- * @version 0.3\n+ * @version 0.4\n  * @module\n  */\n public final strictfp class IOUtilitiesTest extends TestCase {\n@@ -74,6 +74,26 @@ public void testExtension() throws URISyntaxException, MalformedURLException {\n         assertNull(IOUtilities.extension(null));\n     }\n \n+    /**\n+     * Tests again {@link IOUtilities#filename(Object)} and {@link IOUtilities#extension(Object)}, but with a URI\n+     * that point to a JAR entry. Such URI are opaque, in which case {@link URI#getPath()} returns {@code null}.\n+     *\n+     * @throws URISyntaxException Should never happen.\n+     * @throws MalformedURLException Should never happen.\n+     */\n+    @Test\n+    @DependsOnMethod({\"testFilename\", \"testExtension\"})\n+    public void testWithOpaqueURI() throws URISyntaxException, MalformedURLException {\n+        final URI uri = new URI(\"jar:file:/sis-storage-tests.jar!/org/apache/sis/Any.xml\");\n+        assertTrue(uri.isOpaque()); // This test would be useless if this condition is false.\n+        assertEquals(\"Any.xml\", IOUtilities.filename (uri));\n+        assertEquals(    \"xml\", IOUtilities.extension(uri));\n+\n+        final URL url = new URL(\"jar:file:/sis-storage-tests.jar!/org/apache/sis/Any.xml\");\n+        assertEquals(\"Any.xml\", IOUtilities.filename (url));\n+        assertEquals(    \"xml\", IOUtilities.extension(url));\n+    }\n+\n     /**\n      * Tests {@link IOUtilities#toString(Object)}.\n      *"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/c8c737fce9f22001227d27d27043304781972f83",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/2ff7cf628a52278075ba01cde2bdc81cb6405d36",
        "message": "Avoir a NullPointerException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/Android@1480699 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_29",
        "file": [
            {
                "sha": "e898e957ac9a6b9c621408d56bc005aed668df94",
                "filename": "core/sis-build-helper/src/main/java/org/apache/sis/util/resources/ResourceCompilerMojo.java",
                "status": "modified",
                "additions": 11,
                "deletions": 8,
                "changes": 19,
                "blob_url": "https://github.com/apache/sis/blob/c8c737fce9f22001227d27d27043304781972f83/core/sis-build-helper/src/main/java/org/apache/sis/util/resources/ResourceCompilerMojo.java",
                "raw_url": "https://github.com/apache/sis/raw/c8c737fce9f22001227d27d27043304781972f83/core/sis-build-helper/src/main/java/org/apache/sis/util/resources/ResourceCompilerMojo.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-build-helper/src/main/java/org/apache/sis/util/resources/ResourceCompilerMojo.java?ref=c8c737fce9f22001227d27d27043304781972f83",
                "patch": "@@ -92,15 +92,18 @@ public void execute() throws MojoExecutionException {\n      */\n     private int processAllResourceDirectories(final File directory) throws ResourceCompilerException {\n         int errors = 0;\n-        for (final File subdir : directory.listFiles()) {\n-            if (subdir.isDirectory()) {\n-                if (subdir.getName().equals(\"resources\")) {\n-                    final File[] resourcesToProcess = subdir.listFiles(this);\n-                    if (resourcesToProcess != null && resourcesToProcess.length != 0) {\n-                        errors += new Compiler(resourcesToProcess).run();\n+        final File[] subdirs = directory.listFiles();\n+        if (subdirs != null) { // Appears to be sometime null with auto-generated sub-directories.\n+            for (final File subdir : subdirs) {\n+                if (subdir.isDirectory()) {\n+                    if (subdir.getName().equals(\"resources\")) {\n+                        final File[] resourcesToProcess = subdir.listFiles(this);\n+                        if (resourcesToProcess != null && resourcesToProcess.length != 0) {\n+                            errors += new Compiler(resourcesToProcess).run();\n+                        }\n+                    } else {\n+                        errors += processAllResourceDirectories(subdir);\n                     }\n-                } else {\n-                    errors += processAllResourceDirectories(subdir);\n                 }\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/ca1a2536613a683aadd6dcfb3e3797a20c3004e7",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/eaad20614dcbb28dbdcf12a3fbd0241e5c3a6b0b",
        "message": "Fixed a NullPointerException when viewing a RecordType which has been read from a GML document.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1707462 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_30",
        "file": [
            {
                "sha": "162dca44bbf665676748abb9f2299b80632ee962",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/util/iso/RecordDefinition.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/sis/blob/ca1a2536613a683aadd6dcfb3e3797a20c3004e7/core/sis-utility/src/main/java/org/apache/sis/util/iso/RecordDefinition.java",
                "raw_url": "https://github.com/apache/sis/raw/ca1a2536613a683aadd6dcfb3e3797a20c3004e7/core/sis-utility/src/main/java/org/apache/sis/util/iso/RecordDefinition.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/util/iso/RecordDefinition.java?ref=ca1a2536613a683aadd6dcfb3e3797a20c3004e7",
                "patch": "@@ -184,6 +184,7 @@ RecordType getRecordType() {\n     /**\n      * Read-only access to the map of member indices.\n      */\n+    @SuppressWarnings(\"ReturnOfCollectionOrArrayField\")\n     final Map<MemberName,Integer> memberIndices() {\n         return memberIndices;\n     }\n@@ -192,7 +193,8 @@ RecordType getRecordType() {\n      * Returns the number of elements in records.\n      */\n     final int size() {\n-        return members.length;\n+        // 'members' should not be null, but let be safe.\n+        return (members != null) ? members.length : 0;\n     }\n \n     /**\n@@ -238,7 +240,7 @@ public String toString() {\n     final String toString(final String head, final Object values) {\n         final StringBuilder buffer = new StringBuilder(250);\n         final String lineSeparator = System.lineSeparator();\n-        final String[] names = new String[members.length];\n+        final String[] names = new String[size()];\n         int width = 0;\n         buffer.append(head).append(\"[\u201c\").append(getRecordType().getTypeName()).append(\"\u201d] {\").append(lineSeparator);\n         for (int i=0; i<names.length; i++) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/e4e29d2ef3c8c05a2920a71436c55314463c23ee",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/07d526a01abcfaac55ce8073fab179b62a320fee",
        "message": "Fixed a NullPointerException when a citation constant is built during XML serialization.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK8@1683707 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_31",
        "file": [
            {
                "sha": "1d2687b18bc17b5ca3b1ba735fffaea138d543ad",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/ServicesForUtility.java",
                "status": "modified",
                "additions": 19,
                "deletions": 4,
                "changes": 23,
                "blob_url": "https://github.com/apache/sis/blob/e4e29d2ef3c8c05a2920a71436c55314463c23ee/core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/ServicesForUtility.java",
                "raw_url": "https://github.com/apache/sis/raw/e4e29d2ef3c8c05a2920a71436c55314463c23ee/core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/ServicesForUtility.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/internal/metadata/ServicesForUtility.java?ref=e4e29d2ef3c8c05a2920a71436c55314463c23ee",
                "patch": "@@ -16,9 +16,11 @@\n  */\n package org.apache.sis.internal.metadata;\n \n+import java.util.Collection;\n import org.opengis.metadata.citation.Role;\n import org.opengis.metadata.citation.Citation;\n import org.opengis.metadata.citation.PresentationForm;\n+import org.opengis.metadata.citation.Responsibility;\n import org.apache.sis.internal.simple.SimpleCitation;\n import org.apache.sis.internal.util.Constants;\n import org.apache.sis.internal.util.MetadataServices;\n@@ -29,6 +31,8 @@\n import org.apache.sis.metadata.iso.citation.DefaultResponsibility;\n import org.apache.sis.util.iso.Types;\n \n+import static java.util.Collections.singleton;\n+\n \n /**\n  * Implements the metadata services needed by the {@code \"sis-utility\"} module.\n@@ -150,16 +154,27 @@ public Citation createCitation(final String key) {\n             }\n             default: return super.createCitation(key);\n         }\n+        /*\n+         * Do not use the 'c.getFoo().add(foo)' pattern below. Use the 'c.setFoo(singleton(foo))' pattern instead.\n+         * This is because this method may be invoked during XML serialization, in which case some getter methods\n+         * may return null (for preventing JAXB to marshal some empty elements).\n+         */\n         final DefaultCitation c = new DefaultCitation(title);\n-        if (alternateTitle        != null) c.getAlternateTitles().add(Types.toInternationalString(alternateTitle));\n+        if (alternateTitle        != null) c.setAlternateTitles(singleton(Types.toInternationalString(alternateTitle)));\n         if (edition               != null) c.setEdition(Types.toInternationalString(edition));\n-        if (code                  != null) c.getIdentifiers().add(new ImmutableIdentifier(null, codeSpace, code, version, null));\n+        if (code                  != null) c.setIdentifiers(singleton(new ImmutableIdentifier(null, codeSpace, code, version, null)));\n         if (copyFrom              != null) c.setCitedResponsibleParties(copyFrom.getCitedResponsibleParties());\n-        if (presentationForm      != null) c.getPresentationForms().add(presentationForm);\n+        if (presentationForm      != null) c.setPresentationForms(singleton(presentationForm));\n         if (citedResponsibleParty != null) {\n             final DefaultOrganisation organisation = new DefaultOrganisation();\n             organisation.setName(Types.toInternationalString(citedResponsibleParty));\n-            c.getCitedResponsibleParties().add(new DefaultResponsibility(Role.PRINCIPAL_INVESTIGATOR, null, organisation));\n+            final DefaultResponsibility r = new DefaultResponsibility(Role.PRINCIPAL_INVESTIGATOR, null, organisation);\n+            final Collection<Responsibility> parties = c.getCitedResponsibleParties();\n+            if (parties != null) {\n+                parties.add(r);\n+            } else {\n+                c.setCitedResponsibleParties(singleton(r));\n+            }\n         }\n         c.freeze();\n         return c;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/9f1be8598c5c9631f1d5a0909476630376fc3d6c",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/0a3596cd5be8497a48873b12bac5af44bfd794f8",
        "message": "Brings more consistency in property lists.\nContains also an opportunist NullPointerException fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1541637 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_32",
        "file": [
            {
                "sha": "982a7eb851c60ee9a40110feab5747956b829e05",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractIdentifiedObject.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractIdentifiedObject.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractIdentifiedObject.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractIdentifiedObject.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -170,7 +170,7 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n@@ -195,17 +195,17 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      * </table>"
            },
            {
                "sha": "c44cfdfc04067b70d3f0c0826d89d5ab42c592c5",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractReferenceSystem.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractReferenceSystem.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractReferenceSystem.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/AbstractReferenceSystem.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -115,26 +115,26 @@ public AbstractReferenceSystem(final ReferenceSystem object) {\n      *     <td>{@link #getScope}</td>\n      *   </tr>\n      *   <tr>\n-     *     <th colspan=\"3\">Defined in parent class (reminder)</th>\n+     *     <th colspan=\"3\" class=\"hsep\">Defined in parent class (reminder)</th>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      * </table>"
            },
            {
                "sha": "9e2533f83f091073b9d546016854147b19ecd30f",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/AbstractDatum.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/AbstractDatum.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/AbstractDatum.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/AbstractDatum.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -131,26 +131,26 @@\n      *     <td>{@link #getScope()}</td>\n      *   </tr>\n      *   <tr>\n-     *     <th colspan=\"3\">Defined in parent class (reminder)</th>\n+     *     <th colspan=\"3\" class=\"hsep\">Defined in parent class (reminder)</th>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      * </table>"
            },
            {
                "sha": "1a5531eaea555da5475beff57cc34e360df6f37d",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEllipsoid.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEllipsoid.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEllipsoid.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEllipsoid.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -193,22 +193,22 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      * </table>"
            },
            {
                "sha": "0a4aaf6817336e281edd3841ca908c614d5c6a95",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEngineeringDatum.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEngineeringDatum.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEngineeringDatum.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultEngineeringDatum.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -61,22 +61,22 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      *   <tr>"
            },
            {
                "sha": "218de560b839ea72b91a379b2614030652cce210",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultGeodeticDatum.java",
                "status": "modified",
                "additions": 13,
                "deletions": 11,
                "changes": 24,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultGeodeticDatum.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultGeodeticDatum.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultGeodeticDatum.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -172,26 +172,26 @@\n      *     <td>{@link #getBursaWolfParameters()}</td>\n      *   </tr>\n      *   <tr>\n-     *     <th colspan=\"3\">Defined in parent classes (reminder)</th>\n+     *     <th colspan=\"3\" class=\"hsep\">Defined in parent classes (reminder)</th>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      *   <tr>\n@@ -231,12 +231,14 @@ public DefaultGeodeticDatum(final Map<String,?> properties,\n         this.primeMeridian = primeMeridian;\n         bursaWolf = CollectionsExt.nonEmpty(CollectionsExt.nonNullArraySet(\n                 BURSA_WOLF_KEY, properties.get(BURSA_WOLF_KEY), EMPTY_ARRAY));\n-        for (int i=0; i<bursaWolf.length; i++) {\n-            BursaWolfParameters param = bursaWolf[i];\n-            ensureNonNullElement(\"bursaWolf\", i, param);\n-            param = param.clone();\n-            param.verify();\n-            bursaWolf[i] = param;\n+        if (bursaWolf != null) {\n+            for (int i=0; i<bursaWolf.length; i++) {\n+                BursaWolfParameters param = bursaWolf[i];\n+                ensureNonNullElement(\"bursaWolf\", i, param);\n+                param = param.clone();\n+                param.verify();\n+                bursaWolf[i] = param;\n+            }\n         }\n     }\n "
            },
            {
                "sha": "854eda2c4f2d055af1f6b8ca963b086dc4136e05",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultImageDatum.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultImageDatum.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultImageDatum.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultImageDatum.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -71,22 +71,22 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      *   <tr>"
            },
            {
                "sha": "0f04de5b35b3cdf20e4f64819a60ebc1b69ff5f8",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultPrimeMeridian.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultPrimeMeridian.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultPrimeMeridian.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultPrimeMeridian.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -111,22 +111,22 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      * </table>"
            },
            {
                "sha": "a5bd7b267f8263ee0f69eee86e220217a65423dd",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultTemporalDatum.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultTemporalDatum.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultTemporalDatum.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultTemporalDatum.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -94,22 +94,22 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      *   <tr>"
            },
            {
                "sha": "8abaaf0c53e9bcd1e3f6e208d1d4a146437a871b",
                "filename": "core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultVerticalDatum.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/sis/blob/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultVerticalDatum.java",
                "raw_url": "https://github.com/apache/sis/raw/9f1be8598c5c9631f1d5a0909476630376fc3d6c/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultVerticalDatum.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-referencing/src/main/java/org/apache/sis/referencing/datum/DefaultVerticalDatum.java?ref=9f1be8598c5c9631f1d5a0909476630376fc3d6c",
                "patch": "@@ -102,22 +102,22 @@\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#NAME_KEY}</td>\n-     *     <td>{@link String} or {@link ReferenceIdentifier}</td>\n+     *     <td>{@link ReferenceIdentifier} or {@link String}</td>\n      *     <td>{@link #getName()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#ALIAS_KEY}</td>\n-     *     <td>{@link CharSequence}, {@link GenericName} or an array of those</td>\n+     *     <td>{@link GenericName} or {@link CharSequence} (optionally as array)</td>\n      *     <td>{@link #getAlias()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#IDENTIFIERS_KEY}</td>\n-     *     <td>{@link ReferenceIdentifier} or <code>{@linkplain ReferenceIdentifier}[]</code></td>\n+     *     <td>{@link ReferenceIdentifier} (optionally as array)</td>\n      *     <td>{@link #getIdentifiers()}</td>\n      *   </tr>\n      *   <tr>\n      *     <td>{@value org.opengis.referencing.IdentifiedObject#REMARKS_KEY}</td>\n-     *     <td>{@link String} or {@link InternationalString}</td>\n+     *     <td>{@link InternationalString} or {@link String}</td>\n      *     <td>{@link #getRemarks()}</td>\n      *   </tr>\n      *   <tr>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/e4f99c973c15f41162816ddaffe3b04a93a65c1a",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/b4c6ddcc606994a6767e1172cd053e91df632966",
        "message": "Fixed a NullPointerException during unmarshalling of an empty collection (SIS-139).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1528101 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_33",
        "file": [
            {
                "sha": "cb0c2c1d81469050e6610ea33ead2308bd406852",
                "filename": "core/sis-metadata/src/test/java/org/apache/sis/xml/MetadataMarshallingTest.java",
                "status": "modified",
                "additions": 21,
                "deletions": 0,
                "changes": 21,
                "blob_url": "https://github.com/apache/sis/blob/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-metadata/src/test/java/org/apache/sis/xml/MetadataMarshallingTest.java",
                "raw_url": "https://github.com/apache/sis/raw/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-metadata/src/test/java/org/apache/sis/xml/MetadataMarshallingTest.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/test/java/org/apache/sis/xml/MetadataMarshallingTest.java?ref=e4f99c973c15f41162816ddaffe3b04a93a65c1a",
                "patch": "@@ -26,6 +26,7 @@\n import javax.xml.bind.JAXBException;\n import org.opengis.util.InternationalString;\n import org.apache.sis.util.iso.SimpleInternationalString;\n+import org.apache.sis.metadata.iso.DefaultMetadata;\n import org.apache.sis.metadata.iso.extent.DefaultExtent;\n import org.apache.sis.metadata.iso.extent.DefaultTemporalExtent;\n import org.apache.sis.metadata.iso.extent.DefaultGeographicBoundingBox;\n@@ -99,6 +100,26 @@ private URL getResource(final String filename) {\n         return resource;\n     }\n \n+    /**\n+     * Tests a collection that contains no element.\n+     * This was used to cause a {@code NullPointerException} prior SIS-139 fix.\n+     *\n+     * @throws JAXBException If an error occurred during the during unmarshalling processes.\n+     *\n+     * @since 0.4\n+     *\n+     * @see <a href=\"https://issues.apache.org/jira/browse/SIS-139\">SIS-139</a>\n+     */\n+    @Test\n+    public void testEmptyCollection() throws JAXBException {\n+        final String xml =\n+                \"<gmd:MD_Metadata xmlns:gmd=\\\"\" + Namespaces.GMD + \"\\\">\\n\" +\n+                \"  <gmd:contact/>\\n\" +\n+                \"</gmd:MD_Metadata>\";\n+        final DefaultMetadata metadata = (DefaultMetadata) XML.unmarshal(xml);\n+        assertTrue(metadata.getContacts().isEmpty());\n+    }\n+\n     /**\n      * Tests the (un)marshalling of a text group with a default {@code <gco:CharacterString>} element.\n      * This test is somewhat a duplicate of {@link FreeTextMarshallingTest}, but the context is more"
            },
            {
                "sha": "9787321dbfd5532fbffbb29bb1ef695e4b84efab",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedArrayList.java",
                "status": "modified",
                "additions": 83,
                "deletions": 19,
                "changes": 102,
                "blob_url": "https://github.com/apache/sis/blob/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedArrayList.java",
                "raw_url": "https://github.com/apache/sis/raw/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedArrayList.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedArrayList.java?ref=e4f99c973c15f41162816ddaffe3b04a93a65c1a",
                "patch": "@@ -17,9 +17,14 @@\n package org.apache.sis.internal.util;\n \n import java.util.List;\n+import java.util.AbstractList;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+import org.apache.sis.internal.jaxb.Context;\n+import org.apache.sis.util.ArraysExt;\n import org.apache.sis.util.resources.Errors;\n import org.apache.sis.util.collection.CheckedContainer;\n \n@@ -42,7 +47,7 @@\n  *\n  * @author  Martin Desruisseaux (Geomatys)\n  * @since   0.3 (derived from geotk-2.1)\n- * @version 0.3\n+ * @version 0.4\n  * @module\n  *\n  * @see Collections#checkedList(List, Class)\n@@ -89,31 +94,87 @@ public CheckedArrayList(final Class<E> type, final int capacity) {\n         return type;\n     }\n \n+    /**\n+     * Returns {@code true} if a unmarshalling process is under way.\n+     * In the later case, logs a warning for non-null element of the wrong type.\n+     *\n+     * @see <a href=\"https://issues.apache.org/jira/browse/SIS-139\">SIS-139</a>\n+     */\n+    static boolean warning(final Collection<?> source, final Object element, final Class<?> type) {\n+        final Context context = Context.current();\n+        if (context == null) {\n+            return false;\n+        }\n+        if (element != null) {\n+            final LogRecord record = Errors.getResources(context.getLocale()).getLogRecord(Level.WARNING,\n+                    Errors.Keys.IllegalArgumentClass_3, \"element\", type, element.getClass());\n+            record.setSourceClassName(source.getClass().getName());\n+            record.setSourceMethodName(\"add\");\n+            Context.warningOccured(context, source, record);\n+        }\n+        return true;\n+    }\n+\n     /**\n      * Ensures that the given element is non-null and assignable to the type\n      * specified at construction time.\n      *\n      * @param  element the object to check, or {@code null}.\n+     * @return {@code true} if the instance is valid, {@code false} if it shall be ignored.\n      * @throws IllegalArgumentException if the specified element can not be added to this list.\n      */\n-    private void ensureValid(final E element) throws IllegalArgumentException {\n-        if (!type.isInstance(element)) {\n-            ensureNonNull(\"element\", element);\n-            throw new IllegalArgumentException(Errors.format(\n-                    Errors.Keys.IllegalArgumentClass_3, \"element\", type, element.getClass()));\n+    private boolean ensureValid(final E element) throws IllegalArgumentException {\n+        if (type.isInstance(element)) {\n+            return true;\n+        }\n+        if (warning(this, element, type)) {\n+            /*\n+             * If a unmarshalling process is under way, silently discard null element.\n+             * This case happen when a XML element for a collection contains no child.\n+             * See https://issues.apache.org/jira/browse/SIS-139\n+             */\n+            return false;\n         }\n+        ensureNonNull(\"element\", element);\n+        throw new IllegalArgumentException(Errors.format(\n+                Errors.Keys.IllegalArgumentClass_3, \"element\", type, element.getClass()));\n     }\n \n     /**\n      * Ensures that all elements of the given collection can be added to this list.\n      *\n      * @param  collection the collection to check, or {@code null}.\n+     * @return The potentially filtered collection of elements to add.\n      * @throws IllegalArgumentException if at least one element can not be added to this list.\n      */\n-    private void ensureValidCollection(final Collection<? extends E> collection) throws IllegalArgumentException {\n-        for (final E element : collection) {\n-            ensureValid(element);\n+    @SuppressWarnings(\"unchecked\")\n+    private List<E> ensureValidCollection(final Collection<? extends E> collection) throws IllegalArgumentException {\n+        int count = 0;\n+        final Object[] array = collection.toArray();\n+        for (int i=0; i<array.length; i++) {\n+            final Object element = array[i];\n+            if (ensureValid((E) element)) {\n+                array[count++] = element;\n+            }\n         }\n+        // Not-so-unsafe cast: we verified in the above loop that all elements are instance of E.\n+        // The array itself may not be an instance of E[], but this is not important for Mediator.\n+        return new Mediator<>(ArraysExt.resize((E[]) array, count));\n+    }\n+\n+    /**\n+     * A wrapper around the given array for use by {@link #addAll(Collection)} only.  This wrapper violates\n+     * some {@link List} method contracts, so it must really be used only as a temporary object for passing\n+     * the array to {@code AbstractList.addAll(\u2026)} implementation. In particular {@link #toArray()} returns\n+     * directly the internal array, because this is the method to be invoked by {@code addAll(\u2026)}  (this is\n+     * actually the only important method for this wrapper).\n+     */\n+    private static final class Mediator<E> extends AbstractList<E> {\n+        private final E[] array;\n+        Mediator(final E[] array)           {this.array = array;}\n+        @Override public int size()         {return array.length;}\n+        @Override public E   get(int index) {return array[index];}\n+        @Override public E[] toArray()      {return array;} // See class javadoc.\n     }\n \n     /**\n@@ -127,8 +188,10 @@ private void ensureValidCollection(final Collection<? extends E> collection) thr\n      */\n     @Override\n     public E set(final int index, final E element) throws IllegalArgumentException {\n-        ensureValid(element);\n-        return super.set(index, element);\n+        if (ensureValid(element)) {\n+            return super.set(index, element);\n+        }\n+        return get(index);\n     }\n \n     /**\n@@ -140,8 +203,10 @@ public E set(final int index, final E element) throws IllegalArgumentException {\n      */\n     @Override\n     public boolean add(final E element) throws IllegalArgumentException {\n-        ensureValid(element);\n-        return super.add(element);\n+        if (ensureValid(element)) {\n+            return super.add(element);\n+        }\n+        return false;\n     }\n \n     /**\n@@ -154,8 +219,9 @@ public boolean add(final E element) throws IllegalArgumentException {\n      */\n     @Override\n     public void add(final int index, final E element) throws IllegalArgumentException {\n-        ensureValid(element);\n-        super.add(index, element);\n+        if (ensureValid(element)) {\n+            super.add(index, element);\n+        }\n     }\n \n     /**\n@@ -168,8 +234,7 @@ public void add(final int index, final E element) throws IllegalArgumentExceptio\n      */\n     @Override\n     public boolean addAll(final Collection<? extends E> collection) throws IllegalArgumentException {\n-        ensureValidCollection(collection);\n-        return super.addAll(collection);\n+        return super.addAll(ensureValidCollection(collection));\n     }\n \n     /**\n@@ -183,7 +248,6 @@ public boolean addAll(final Collection<? extends E> collection) throws IllegalAr\n      */\n     @Override\n     public boolean addAll(final int index, final Collection<? extends E> collection) throws IllegalArgumentException {\n-        ensureValidCollection(collection);\n-        return super.addAll(index, collection);\n+        return super.addAll(index, ensureValidCollection(collection));\n     }\n }"
            },
            {
                "sha": "0c7853b29e3da9a30a09237b8c020485ace5ca65",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedHashSet.java",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/apache/sis/blob/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedHashSet.java",
                "raw_url": "https://github.com/apache/sis/raw/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedHashSet.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/internal/util/CheckedHashSet.java?ref=e4f99c973c15f41162816ddaffe3b04a93a65c1a",
                "patch": "@@ -41,7 +41,7 @@\n  *\n  * @author  Martin Desruisseaux (Geomatys)\n  * @since   0.3 (derived from geotk-2.1)\n- * @version 0.3\n+ * @version 0.4\n  * @module\n  *\n  * @see Collections#checkedSet(Set, Class)\n@@ -98,6 +98,14 @@ public CheckedHashSet(final Class<E> type, final int capacity) {\n     @Override\n     public boolean add(final E element) throws IllegalArgumentException {\n         if (!type.isInstance(element)) {\n+            if (CheckedArrayList.warning(this, element, type)) {\n+                /*\n+                 * If a unmarshalling process is under way, silently discard null element.\n+                 * This case happen when a XML element for a collection contains no child.\n+                 * See https://issues.apache.org/jira/browse/SIS-139\n+                 */\n+                return false;\n+            }\n             ensureNonNull(\"element\", element);\n             throw new IllegalArgumentException(Errors.format(\n                     Errors.Keys.IllegalArgumentClass_3, \"element\", type, element.getClass()));"
            },
            {
                "sha": "ee223c3617557ca30358e9475b0309491a7cdf53",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/internal/util/UnmodifiableArrayList.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/sis/blob/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/main/java/org/apache/sis/internal/util/UnmodifiableArrayList.java",
                "raw_url": "https://github.com/apache/sis/raw/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/main/java/org/apache/sis/internal/util/UnmodifiableArrayList.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/internal/util/UnmodifiableArrayList.java?ref=e4f99c973c15f41162816ddaffe3b04a93a65c1a",
                "patch": "@@ -357,6 +357,15 @@ public E get(final int index) {\n         }\n     }\n \n+    /**\n+     * Returns a copy of the backing array. Note that the array type is {@code E[]} rather than {@code Object[]}.\n+     * This is not what {@code ArrayList} does, but is not forbidden by {@link List#toArray()} javadoc neither.\n+     */\n+    @Override\n+    public E[] toArray() {\n+        return array.clone();\n+    }\n+\n     /**\n      * Compares this list with the given object for equality.\n      *"
            },
            {
                "sha": "b45254abc28274432257457ab9bde06ae807a471",
                "filename": "core/sis-utility/src/test/java/org/apache/sis/internal/util/CheckedArrayListTest.java",
                "status": "added",
                "additions": 105,
                "deletions": 0,
                "changes": 105,
                "blob_url": "https://github.com/apache/sis/blob/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/test/java/org/apache/sis/internal/util/CheckedArrayListTest.java",
                "raw_url": "https://github.com/apache/sis/raw/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/test/java/org/apache/sis/internal/util/CheckedArrayListTest.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/test/java/org/apache/sis/internal/util/CheckedArrayListTest.java?ref=e4f99c973c15f41162816ddaffe3b04a93a65c1a",
                "patch": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.sis.internal.util;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import org.apache.sis.util.NullArgumentException;\n+import org.apache.sis.test.TestCase;\n+import org.junit.Test;\n+\n+import static org.apache.sis.test.Assert.*;\n+\n+\n+/**\n+ * Tests the {@link CheckedArrayList} class.\n+ *\n+ * @author  Martin Desruisseaux (Geomatys)\n+ * @since   0.4\n+ * @version 0.4\n+ * @module\n+ */\n+public final strictfp class CheckedArrayListTest extends TestCase {\n+    /**\n+     * Tests {@link CheckedArrayList#add(Object)}.\n+     */\n+    @Test\n+    public void testAdd() {\n+        final CheckedArrayList<String> list = new CheckedArrayList<>(String.class);\n+        assertTrue(list.add(\"One\"));\n+        assertTrue(list.add(\"Two\"));\n+        assertTrue(list.add(\"Three\"));\n+        assertEquals(Arrays.asList(\"One\", \"Two\", \"Three\"), list);\n+    }\n+\n+    /**\n+     * Tests {@link CheckedArrayList#addAll(Collection)}.\n+     */\n+    @Test\n+    public void testAddAll() {\n+        final CheckedArrayList<String> list = new CheckedArrayList<>(String.class);\n+        assertTrue(list.add(\"One\"));\n+        assertTrue(list.addAll(Arrays.asList(\"Two\", \"Three\")));\n+        assertEquals(Arrays.asList(\"One\", \"Two\", \"Three\"), list);\n+    }\n+\n+    /**\n+     * Ensures that we can not add null elements.\n+     */\n+    @Test\n+    public void testAddNull() {\n+        final CheckedArrayList<String> list = new CheckedArrayList<>(String.class);\n+        try {\n+            list.add(null);\n+        } catch (NullArgumentException e) {\n+            final String message = e.getMessage();\n+            assertTrue(\"element\", message.contains(\"element\"));\n+        }\n+    }\n+\n+    /**\n+     * Ensures that we can not add null elements.\n+     */\n+    @Test\n+    public void testAddAllNull() {\n+        final CheckedArrayList<String> list = new CheckedArrayList<>(String.class);\n+        final Collection<String> toAdd = Arrays.asList(\"One\", null, \"Three\");\n+        try {\n+            list.addAll(toAdd);\n+        } catch (NullArgumentException e) {\n+            final String message = e.getMessage();\n+            assertTrue(\"element\", message.contains(\"element\"));\n+        }\n+    }\n+\n+    /**\n+     * Ensures that we can not element of the wrong type.\n+     */\n+    @Test\n+    @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n+    public void testAddWrongType() {\n+        final CheckedArrayList list = new CheckedArrayList<>(String.class);\n+        try {\n+            list.add(Integer.valueOf(4));\n+        } catch (IllegalArgumentException e) {\n+            final String message = e.getMessage();\n+            assertTrue(\"element\", message.contains(\"element\"));\n+            assertTrue(\"Integer\", message.contains(\"Integer\"));\n+            assertTrue(\"String\",  message.contains(\"String\"));\n+        }\n+    }\n+}"
            },
            {
                "sha": "814dadde36eabc41e39bb98ad9faeed75cfd1f4d",
                "filename": "core/sis-utility/src/test/java/org/apache/sis/test/suite/UtilityTestSuite.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/sis/blob/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/test/java/org/apache/sis/test/suite/UtilityTestSuite.java",
                "raw_url": "https://github.com/apache/sis/raw/e4f99c973c15f41162816ddaffe3b04a93a65c1a/core/sis-utility/src/test/java/org/apache/sis/test/suite/UtilityTestSuite.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/test/java/org/apache/sis/test/suite/UtilityTestSuite.java?ref=e4f99c973c15f41162816ddaffe3b04a93a65c1a",
                "patch": "@@ -62,6 +62,7 @@\n     org.apache.sis.internal.jdk8.JDK8Test.class,\n \n     // Collections.\n+    org.apache.sis.internal.util.CheckedArrayListTest.class,\n     org.apache.sis.internal.system.ReferenceQueueConsumerTest.class,\n     org.apache.sis.util.collection.WeakHashSetTest.class,\n     org.apache.sis.util.collection.WeakValueHashMapTest.class,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/sis/commit/50821f9f72756d52f9bc3d2748a700ec9e3cdb55",
        "repo": "sis",
        "parent": "https://github.com/apache/sis/commit/ed0a06defbbcf36365b38ec9cd5e8bb2e6d87c73",
        "message": "Skip commit 8388392013a65b73231ee8f05a0fe43d89c48b4d (add developer credit in .pom files) because it was already\ndone in commits 8cc5640e8bd6b353de1a7afda0f2e2281cd68b53 and 82b9d2ea025647a26df33c2c0feced75928e0317.\n\nSkip commit 86f6aca4769007079143d9274760441ff355a5ae (update documentation to reflect test implementation)\nsince it applies to the \"ApacheSIS_19115-3_Changes.html\" file, which has not yet been ported.\nThis file will be ported after we finished revisiting the upgrade work.\n\nSkip commit da587381dbd8f9559586e055502285b36c7202b6 (Update version in POM files to be '0.8-jdk8-19115-3').\nWe do not change the version number, which stay '1.0-jdk8-SNAPSHOT' for the target of this branch.\n\nSkip commit d0a2f8d260173d2de1cd62853df81f2602f320b8 (improve loading of ElementNamespaceMap.txt in FilteredStreamReader)\nsince we use a different file format with a different loading mechanism.\n\nSkip commit eaf7e686309f0fb0f43d423589775ce3ab3c78b4 (FilteredStreamReader now calls intern() on all Strings before returning them to the JAXB unmarshaller).\nThis was already done in the different loading mechanism ported to SIS, and we don't want to call 'String.intern()' at (un)marshalling time for performance reasons.\n\nSkip commit 49156b876da1a57076a456c909eb3cd972cc9ffc (ISOTestUtils now extends Static as it should) since we replaced\nISOTestUtils by a different approach (upgrade the XML test strings in the code rather than convert them at runtime).\n\nSkip commit d14414b7ce276572b6ddbb7970569f526a9a780e (add backup POM files to gitignore)\nsince we skipped the commit that modify the version numbers in pom.xml files.\n\nSkip commit 10b29b551d7e76629d036ef9d617afc531b25c2e (Fixed NullPointerException in FilteredStreamReader\ncaused by interning returned Strings) since we skipped the commit which was internining strings.\n\nSkip commit 01bb6c81403599ad9fc1ea67eb85c3e289ff5bf5 (add AllReferenceResolver to resolve all external references to metadata)\nInstead, open a separated JIRA task https://issues.apache.org/jira/browse/SIS-387 for handling this improvement after the merge.\n\nSkip commit 1cb23d79bba8ad43fc6a8c639f4db36187e24d64 (fixed broken tests in sis-netcdf) for now.\nWe will do it last, because remaining work on ISO 19115-3 upgrade may change element order.\n\nSkip commit eaccd01f09713c0a7e74bb50f80ba2809853a8d6 (minor change to behavior of AllReferenceResolver).\nUpdated https://issues.apache.org/jira/browse/SIS-387 instead.\n\nAdaptation of commit 56632bac9f08983b2ee2ed408185b4948b74c5a8 from Image Matter\n(Fixed a bug where incorrect parent element would sometimes be detected in FilteredStreamReader)\nReplaced DefaultOnlineResourceTest by an integration with the XML file used for testing Citation,\nfor easier validation against ISO schemas. This cause a temporary test failure with legacy XML tests;\nthis will be fixed after we revisited FilteredStreamResolver.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/sis/branches/ISO-19115-3@1821923 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "sis_34",
        "file": [
            {
                "sha": "fca68e9ea99872a62a526ce66f9cc6f78e668493",
                "filename": "core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/package-info.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/sis/blob/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/package-info.java",
                "raw_url": "https://github.com/apache/sis/raw/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/package-info.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/main/java/org/apache/sis/metadata/iso/citation/package-info.java?ref=50821f9f72756d52f9bc3d2748a700ec9e3cdb55",
                "patch": "@@ -118,7 +118,7 @@\n     @XmlJavaTypeAdapter(MD_Identifier.class),\n \n     // Java types, primitive types and basic OGC types handling\n-    @XmlJavaTypeAdapter(GO_URL.class),\n+    @XmlJavaTypeAdapter(URIAdapter.class),\n     @XmlJavaTypeAdapter(GO_DateTime.class),\n     @XmlJavaTypeAdapter(StringAdapter.class),\n     @XmlJavaTypeAdapter(InternationalStringAdapter.class)\n@@ -136,6 +136,5 @@\n import org.apache.sis.internal.jaxb.LegacyNamespaces;\n import org.apache.sis.internal.jaxb.Schemas;\n import org.apache.sis.internal.jaxb.gco.*;\n-import org.apache.sis.internal.jaxb.gmd.*;\n import org.apache.sis.internal.jaxb.code.*;\n import org.apache.sis.internal.jaxb.metadata.*;"
            },
            {
                "sha": "f50229b7e8510083557ec700fa990702000a1a4a",
                "filename": "core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/citation/DefaultCitationTest.java",
                "status": "modified",
                "additions": 11,
                "deletions": 2,
                "changes": 13,
                "blob_url": "https://github.com/apache/sis/blob/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/citation/DefaultCitationTest.java",
                "raw_url": "https://github.com/apache/sis/raw/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/citation/DefaultCitationTest.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/citation/DefaultCitationTest.java?ref=50821f9f72756d52f9bc3d2748a700ec9e3cdb55",
                "patch": "@@ -16,6 +16,7 @@\n  */\n package org.apache.sis.metadata.iso.citation;\n \n+import java.net.URI;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n@@ -29,6 +30,7 @@\n import org.opengis.metadata.citation.Party;\n import org.opengis.metadata.citation.Role;\n import org.opengis.metadata.citation.Responsibility;\n+import org.opengis.metadata.citation.OnLineFunction;\n import org.opengis.metadata.citation.PresentationForm;\n import org.apache.sis.internal.util.CollectionsExt;\n import org.apache.sis.internal.jaxb.LegacyNamespaces;\n@@ -216,7 +218,12 @@ public void testMarshallingLegacy() throws JAXBException {\n      * @param  version  the metadata version to marshal.\n      */\n     private void testMarshalling(final String file, final Version version) throws JAXBException {\n-        final DefaultContact contact = new DefaultContact();\n+        final DefaultOnlineResource rs = new DefaultOnlineResource(URI.create(\"https://tools.ietf.org/html/rfc1149\"));\n+        rs.setName(new SimpleInternationalString(\"IP over Avian Carriers\"));\n+        rs.setDescription(new SimpleInternationalString(\"High delay, low throughput, and low altitude service.\"));\n+        rs.setFunction(OnLineFunction.OFFLINE_ACCESS);\n+\n+        final DefaultContact contact = new DefaultContact(rs);\n         contact.setContactInstructions(new SimpleInternationalString(\"Send carrier pigeon.\"));\n         contact.getIdentifierMap().putSpecialized(IdentifierSpace.ID, \"ip-protocol\");\n         final DefaultCitation c = new DefaultCitation(\"Fight against poverty\");\n@@ -226,7 +233,9 @@ private void testMarshalling(final String file, final Version version) throws JA\n         ));\n         c.getDates().add(new DefaultCitationDate(TestUtilities.date(\"2015-10-17 00:00:00\"), DateType.ADOPTED));\n         c.getPresentationForms().add(PresentationForm.PHYSICAL_OBJECT);\n-        // Check that XML file built by the marshaller is the same as the example file.\n+        /*\n+         * Check that XML file built by the marshaller is the same as the example file.\n+         */\n         assertMarshalEqualsFile(file, c, version, \"xlmns:*\", \"xsi:schemaLocation\");\n     }\n "
            },
            {
                "sha": "165fa66b9922c90e7126c9ccd0e14c6a34276658",
                "filename": "core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation (legacy).xml",
                "status": "modified",
                "additions": 17,
                "deletions": 0,
                "changes": 17,
                "blob_url": "https://github.com/apache/sis/blob/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation%20(legacy).xml",
                "raw_url": "https://github.com/apache/sis/raw/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation%20(legacy).xml",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation%20(legacy).xml?ref=50821f9f72756d52f9bc3d2748a700ec9e3cdb55",
                "patch": "@@ -47,6 +47,23 @@\n       </gmd:individualName>\n       <gmd:contactInfo>\n         <gmd:CI_Contact id=\"ip-protocol\">\n+          <gmd:onlineResource>\n+            <gmd:CI_OnlineResource>\n+              <gmd:linkage>\n+                <gmd:URL>https://tools.ietf.org/html/rfc1149</gmd:URL>\n+              </gmd:linkage>\n+              <gmd:name>\n+                <gco:CharacterString>IP over Avian Carriers</gco:CharacterString>\n+              </gmd:name>\n+              <gmd:description>\n+                <gco:CharacterString>High delay, low throughput, and low altitude service.</gco:CharacterString>\n+              </gmd:description>\n+              <gmd:function>\n+                <gmd:CI_OnLineFunctionCode codeList=\"http://schemas.opengis.net/iso/19139/20070417/resources/Codelist/gmxCodelists.xml#CI_OnLineFunctionCode\"\n+                                           codeListValue=\"offlineAccess\">Offline access</gmd:CI_OnLineFunctionCode>\n+              </gmd:function>\n+            </gmd:CI_OnlineResource>\n+          </gmd:onlineResource>\n           <gmd:contactInstructions>\n             <gco:CharacterString>Send carrier pigeon.</gco:CharacterString>\n           </gmd:contactInstructions>"
            },
            {
                "sha": "72051a86c39b639d4c0abc193e720bbf707b44ef",
                "filename": "core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation.xml",
                "status": "modified",
                "additions": 20,
                "deletions": 2,
                "changes": 22,
                "blob_url": "https://github.com/apache/sis/blob/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation.xml",
                "raw_url": "https://github.com/apache/sis/raw/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation.xml",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-metadata/src/test/resources/org/apache/sis/metadata/iso/citation/Citation.xml?ref=50821f9f72756d52f9bc3d2748a700ec9e3cdb55",
                "patch": "@@ -21,10 +21,11 @@\n <cit:CI_Citation\n     xmlns:cit=\"http://standards.iso.org/iso/19115/-3/cit/1.0\"\n     xmlns:gco=\"http://standards.iso.org/iso/19115/-3/gco/1.0\"\n+    xmlns:gcx=\"http://standards.iso.org/iso/19115/-3/gcx/1.0\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n-    xsi:schemaLocation = \"http://standards.iso.org/iso/19115/-3/cit/1.0\n-                          http://standards.iso.org/iso/19115/-3/cit/1.0/cit.xsd\">\n+    xsi:schemaLocation = \"http://standards.iso.org/iso/19115/-3/cit/1.0 http://standards.iso.org/iso/19115/-3/cit/1.0/cit.xsd\n+                          http://standards.iso.org/iso/19115/-3/gcx/1.0 http://standards.iso.org/iso/19115/-3/gcx/1.0/gcx.xsd\">\n \n   <cit:title>\n     <gco:CharacterString>Fight against poverty</gco:CharacterString>\n@@ -54,6 +55,23 @@\n           </cit:name>\n           <cit:contactInfo>\n             <cit:CI_Contact id=\"ip-protocol\">\n+              <cit:onlineResource>\n+                <cit:CI_OnlineResource>\n+                  <cit:linkage>\n+                    <gcx:FileName src=\"https://tools.ietf.org/html/rfc1149\">rfc1149</gcx:FileName>\n+                  </cit:linkage>\n+                  <cit:name>\n+                    <gco:CharacterString>IP over Avian Carriers</gco:CharacterString>\n+                  </cit:name>\n+                  <cit:description>\n+                    <gco:CharacterString>High delay, low throughput, and low altitude service.</gco:CharacterString>\n+                  </cit:description>\n+                  <cit:function>\n+                    <cit:CI_OnLineFunctionCode codeList=\"http://standards.iso.org/iso/19115/resources/Codelist/cat/codelists.xml#CI_OnLineFunctionCode\"\n+                                               codeListValue=\"offlineAccess\">Offline access</cit:CI_OnLineFunctionCode>\n+                  </cit:function>\n+                </cit:CI_OnlineResource>\n+              </cit:onlineResource>\n               <cit:contactInstructions>\n                 <gco:CharacterString>Send carrier pigeon.</gco:CharacterString>\n               </cit:contactInstructions>"
            },
            {
                "sha": "1581ae95ddbdd0305e6d300e60a2181daef55176",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gco/URIAdapter.java",
                "status": "modified",
                "additions": 1,
                "deletions": 4,
                "changes": 5,
                "blob_url": "https://github.com/apache/sis/blob/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gco/URIAdapter.java",
                "raw_url": "https://github.com/apache/sis/raw/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gco/URIAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gco/URIAdapter.java?ref=50821f9f72756d52f9bc3d2748a700ec9e3cdb55",
                "patch": "@@ -28,10 +28,7 @@\n  * @author  C\u00e9dric Brian\u00e7on (Geomatys)\n  * @author  Martin Desruisseaux (Geomatys)\n  * @version 0.4\n- *\n- * @see org.apache.sis.internal.jaxb.gmd.GO_URL\n- *\n- * @since 0.3\n+ * @since   0.3\n  * @module\n  */\n public final class URIAdapter extends XmlAdapter<GO_CharacterString, URI> {"
            },
            {
                "sha": "db97aaf97b6cc706b97851eb355186d6212791b9",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gmd/GO_URL.java",
                "status": "removed",
                "additions": 0,
                "deletions": 89,
                "changes": 89,
                "blob_url": "https://github.com/apache/sis/blob/ed0a06defbbcf36365b38ec9cd5e8bb2e6d87c73/core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gmd/GO_URL.java",
                "raw_url": "https://github.com/apache/sis/raw/ed0a06defbbcf36365b38ec9cd5e8bb2e6d87c73/core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gmd/GO_URL.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/internal/jaxb/gmd/GO_URL.java?ref=ed0a06defbbcf36365b38ec9cd5e8bb2e6d87c73",
                "patch": "@@ -1,89 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.sis.internal.jaxb.gmd;\n-\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.adapters.XmlAdapter;\n-import org.apache.sis.internal.jaxb.Context;\n-\n-\n-/**\n- * JAXB adapter wrapping a URI in a {@code <gmd:URL>} element, for ISO 19139:2007 compliance.\n- * Note that while this object is called {@code \"URL\"}, we actually use the {@link URI} Java object.\n- *\n- * @author  C\u00e9dric Brian\u00e7on (Geomatys)\n- * @version 0.3\n- *\n- * @see org.apache.sis.internal.jaxb.gco.URIAdapter\n- *\n- * @since 0.3\n- * @module\n- */\n-public final class GO_URL extends XmlAdapter<GO_URL, URI> {\n-    /**\n-     * The URI as a string. We uses a string in order to allow the user\n-     * to catch potential error at unmarshalling time.\n-     */\n-    @XmlElement(name = \"URL\")\n-    private String uri;\n-\n-    /**\n-     * Empty constructor for JAXB only.\n-     */\n-    public GO_URL() {\n-    }\n-\n-    /**\n-     * Builds an adapter for the given URI.\n-     *\n-     * @param  value  the URI to marshal.\n-     */\n-    private GO_URL(final URI value) {\n-        uri = value.toString();\n-    }\n-\n-    /**\n-     * Converts a URI read from a XML stream to the object which will contains\n-     * the value. JAXB calls automatically this method at unmarshalling time.\n-     *\n-     * @param  value  the adapter for this metadata value.\n-     * @return a {@link URI} which represents the metadata value.\n-     * @throws URISyntaxException if the given value contains an invalid URI.\n-     */\n-    @Override\n-    public URI unmarshal(final GO_URL value) throws URISyntaxException {\n-        if (value != null) {\n-            final Context context = Context.current();\n-            return Context.converter(context).toURI(context, value.uri);\n-        }\n-        return null;\n-    }\n-\n-    /**\n-     * Converts a {@link URI} to the object to be marshalled in a XML file\n-     * or stream. JAXB calls automatically this method at marshalling time.\n-     *\n-     * @param  value  the URI value.\n-     * @return the adapter for this URI.\n-     */\n-    @Override\n-    public GO_URL marshal(final URI value) {\n-        return (value != null) ? new GO_URL(value) : null;\n-    }\n-}"
            },
            {
                "sha": "e9d33b5a0eb8dc79b6f0f9fc3c3bf54ea444fea0",
                "filename": "core/sis-utility/src/main/java/org/apache/sis/xml/ReferenceResolver.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/sis/blob/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-utility/src/main/java/org/apache/sis/xml/ReferenceResolver.java",
                "raw_url": "https://github.com/apache/sis/raw/50821f9f72756d52f9bc3d2748a700ec9e3cdb55/core/sis-utility/src/main/java/org/apache/sis/xml/ReferenceResolver.java",
                "contents_url": "https://api.github.com/repos/apache/sis/contents/core/sis-utility/src/main/java/org/apache/sis/xml/ReferenceResolver.java?ref=50821f9f72756d52f9bc3d2748a700ec9e3cdb55",
                "patch": "@@ -100,7 +100,6 @@ protected ReferenceResolver() {\n      * @param  uuid     the {@code uuid} attributes.\n      * @return an object of the given type for the given {@code uuid} attribute, or {@code null} if none.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public <T> T resolve(final MarshalContext context, final Class<T> type, final UUID uuid) {\n         ensureNonNull(\"type\", type);\n         ensureNonNull(\"uuid\", uuid);"
            }
        ]
    }
]
