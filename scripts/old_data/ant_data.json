[
    {
        "commit": "https://github.com/apache/ant/commit/0949736bd21582723ba0b5fc3e374d0c76057b7d",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ecae55dab487ded3877c5cad07d2cf0ffee19a8f",
        "message": "potential NPE",
        "bug_id": "ant_1",
        "file": [
            {
                "sha": "b34129166e8ec9f53187e53acb5856efa1a2ffb4",
                "filename": "src/main/org/apache/tools/ant/types/resources/Files.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/0949736bd21582723ba0b5fc3e374d0c76057b7d/src/main/org/apache/tools/ant/types/resources/Files.java",
                "raw_url": "https://github.com/apache/ant/raw/0949736bd21582723ba0b5fc3e374d0c76057b7d/src/main/org/apache/tools/ant/types/resources/Files.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/resources/Files.java?ref=0949736bd21582723ba0b5fc3e374d0c76057b7d",
                "patch": "@@ -497,7 +497,7 @@ private boolean hasPatterns(PatternSet ps) {\n         String[] includePatterns = ps.getIncludePatterns(getProject());\n         String[] excludePatterns = ps.getExcludePatterns(getProject());\n         return (includePatterns != null && includePatterns.length > 0)\n-            || (includePatterns != null && excludePatterns.length > 0);\n+            || (excludePatterns != null && excludePatterns.length > 0);\n     }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d92e553d801f3fab01a7ad1cc7745ddff1088ae7",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/5566a8e5eeb252e43f4b38ed556d2e2e6d4f0777",
        "message": "Potential NPE",
        "bug_id": "ant_2",
        "file": [
            {
                "sha": "cce9049828464a4a655a7dd9d2fa4bc50cd531aa",
                "filename": "src/main/org/apache/tools/ant/types/resources/Files.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/d92e553d801f3fab01a7ad1cc7745ddff1088ae7/src/main/org/apache/tools/ant/types/resources/Files.java",
                "raw_url": "https://github.com/apache/ant/raw/d92e553d801f3fab01a7ad1cc7745ddff1088ae7/src/main/org/apache/tools/ant/types/resources/Files.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/resources/Files.java?ref=d92e553d801f3fab01a7ad1cc7745ddff1088ae7",
                "patch": "@@ -481,7 +481,7 @@ private boolean hasPatterns(PatternSet ps) {\n         String[] includePatterns = ps.getIncludePatterns(getProject());\n         String[] excludePatterns = ps.getExcludePatterns(getProject());\n         return (includePatterns != null && includePatterns.length > 0)\n-            || (includePatterns != null && excludePatterns.length > 0);\n+            || (excludePatterns != null && excludePatterns.length > 0);\n     }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/64d1056c41516ea0a35e8b7c9d9efaab4153027a",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/eaf3af0aea8b14c4a5d8d63bc4cb22f88dbb19a4",
        "message": "uncover hidden NullPointerException",
        "bug_id": "ant_3",
        "file": [
            {
                "sha": "330b5dd7df77765024bee1752c0ea8f01e67394b",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/64d1056c41516ea0a35e8b7c9d9efaab4153027a/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "raw_url": "https://github.com/apache/ant/raw/64d1056c41516ea0a35e8b7c9d9efaab4153027a/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Jar.java?ref=64d1056c41516ea0a35e8b7c9d9efaab4153027a",
                "patch": "@@ -413,7 +413,7 @@ private boolean jarHasIndex(File jarFile) throws IOException {\n      */\n     public void setFilesetmanifest(FilesetManifestConfig config) {\n         filesetManifestConfig = config;\n-        mergeManifestsMain = \"merge\".equals(config.getValue());\n+        mergeManifestsMain = config != null && \"merge\".equals(config.getValue());\n \n         if (filesetManifestConfig != null\n             && !filesetManifestConfig.getValue().equals(\"skip\")) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/98e4b51aa88be2de4e74172a0f4aec153da1ebd7",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/f20b41c9b6b27871eacb1fafcd00242ae6285dee",
        "message": "bz-62086 Fix NPE in ChainedMapper.\n\nThis closes #59 pull request at github/apache/ant repo\n\nThis NPE happens whenever any of the sub mappers returns `null`, which may\nhappen eg. with `GlobPatternMapper`.",
        "bug_id": "ant_4",
        "file": [
            {
                "sha": "8b3e32f7668299d659df1f3b05bbf4ebb291659a",
                "filename": "src/main/org/apache/tools/ant/util/ChainedMapper.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/main/org/apache/tools/ant/util/ChainedMapper.java",
                "raw_url": "https://github.com/apache/ant/raw/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/main/org/apache/tools/ant/util/ChainedMapper.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ChainedMapper.java?ref=98e4b51aa88be2de4e74172a0f4aec153da1ebd7",
                "patch": "@@ -18,6 +18,7 @@\n \n package org.apache.tools.ant.util;\n \n+import java.util.Objects;\n import java.util.stream.Stream;\n \n /**\n@@ -33,7 +34,7 @@\n     public String[] mapFileName(String sourceFileName) {\n         String[] result = getMappers().stream()\n             .reduce(new String[] { sourceFileName }, (i, m) -> Stream.of(i)\n-                .map(m::mapFileName).flatMap(Stream::of).toArray(String[]::new),\n+                .map(m::mapFileName).filter(Objects::nonNull).flatMap(Stream::of).toArray(String[]::new),\n                 (i, o) -> o);\n         return result == null || result.length == 0 ? null : result;\n     }"
            },
            {
                "sha": "77c181107e16be18213b60d6ba84e70a05c1fb0e",
                "filename": "src/tests/junit/org/apache/tools/ant/types/MapperTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/tests/junit/org/apache/tools/ant/types/MapperTest.java",
                "raw_url": "https://github.com/apache/ant/raw/98e4b51aa88be2de4e74172a0f4aec153da1ebd7/src/tests/junit/org/apache/tools/ant/types/MapperTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/types/MapperTest.java?ref=98e4b51aa88be2de4e74172a0f4aec153da1ebd7",
                "patch": "@@ -35,6 +35,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n@@ -224,6 +225,9 @@ public void testChained() {\n         List list = Arrays.asList(targets);\n         assertTrue(\"cannot find expected target \\\"def\\\"\", list.contains(\"def\"));\n         assertTrue(\"cannot find expected target \\\"ghi\\\"\", list.contains(\"ghi\"));\n+\n+        targets = fileNameMapper.mapFileName(\"z\");\n+        assertNull(targets);\n     }\n \n     @Test"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/6f3185926cb4b1fa7f76c0541f2cba0eb5085c79",
        "message": "NullPointerException in ResourceUtils.copyUsingFileChannels\n\nBugzilla Report 57533",
        "bug_id": "ant_5",
        "file": [
            {
                "sha": "f53145f77d8e58ac5870201dc69d67c3df18c5ae",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c",
                "patch": "@@ -64,6 +64,12 @@ Fixed bugs:\n    archive failed.\n    Port of https://issues.apache.org/jira/browse/COMPRESS-297\n \n+ * FileUtils.rename which is used by several tasks can throw a\n+   NullPointerException if the \"normal\" renameTo operation fails and\n+   an exception occurs while rename falls back to copying and deleting\n+   the file.\n+   Bugzilla Report 57533\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "6397f714b9facbb0ba526f823a1d4a3b7fac795b",
                "filename": "src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "status": "modified",
                "additions": 16,
                "deletions": 7,
                "changes": 23,
                "blob_url": "https://github.com/apache/ant/blob/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "raw_url": "https://github.com/apache/ant/raw/dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ResourceUtils.java?ref=dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c",
                "patch": "@@ -435,11 +435,15 @@ public static void copyResource(final Resource source, final Resource dest,\n                     copyUsingFileChannels(sourceFile, destFile);\n                     copied = true;\n                 } catch (final IOException ex) {\n-                    project.log(\"Attempt to copy \" + sourceFile\n-                                + \" to \" + destFile + \" using NIO Channels\"\n-                                + \" failed due to '\" + ex.getMessage()\n-                                + \"'.  Falling back to streams.\",\n-                                Project.MSG_WARN);\n+                    String msg = \"Attempt to copy \" + sourceFile\n+                        + \" to \" + destFile + \" using NIO Channels\"\n+                        + \" failed due to '\" + ex.getMessage()\n+                        + \"'.  Falling back to streams.\";\n+                    if (project != null) {\n+                        project.log(msg, Project.MSG_WARN);\n+                    } else {\n+                        System.err.println(msg);\n+                    }\n                 }\n             }\n             if (!copied) {\n@@ -828,8 +832,13 @@ private static OutputStream getOutputStream(final Resource resource, final boole\n             if (a != null) {\n                 return a.getAppendOutputStream();\n             }\n-            project.log(\"Appendable OutputStream not available for non-appendable resource \"\n-                    + resource + \"; using plain OutputStream\", Project.MSG_VERBOSE);\n+            String msg = \"Appendable OutputStream not available for non-appendable resource \"\n+                + resource + \"; using plain OutputStream\";\n+            if (project != null) {\n+                project.log(msg, Project.MSG_VERBOSE);\n+            } else {\n+                System.out.println(msg);\n+            }\n         }\n         return resource.getOutputStream();\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/a6429c6aa1a713c98528da55059afe9efc2ada59",
        "message": "bz-62076 Make IdentityMapper follow the \"mapFileName\" API contract to avoid NPE when it deals with a non-matching source file name",
        "bug_id": "ant_6",
        "file": [
            {
                "sha": "2d4b6f11d994a21ee2b1642eb31d8f34fa6ef9ca",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "patch": "@@ -1,6 +1,13 @@\n Changes from Ant 1.9.10 TO Ant 1.9.11\n =====================================\n \n+Fixed bugs:\n+-----------\n+\n+ * Fixed NullPointerException when a mappedresource is used in pathconvert\n+   Bugzilla Report 62076\n+\n+\n Changes from Ant 1.9.9 TO Ant 1.9.10\n ====================================\n "
            },
            {
                "sha": "5a1cdf74b39ef192349e7e14f29b7f00e7334e6a",
                "filename": "src/etc/testcases/taskdefs/pathconvert.xml",
                "status": "modified",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/etc/testcases/taskdefs/pathconvert.xml",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/etc/testcases/taskdefs/pathconvert.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/pathconvert.xml?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "patch": "@@ -17,6 +17,8 @@\n -->\n <project name=\"pathconvert\">\n \n+    <import file=\"../buildfiletest-base.xml\"/>\n+\n     <path id=\"testpath\">\n         <pathelement path=\"${ant.file}\" />\n     </path>\n@@ -39,4 +41,20 @@\n         <pathconvert property=\"result\" refid=\"testpath\" />\n     </target>\n \n+    <target name=\"test-nonmatching-mapper\" description=\"test for bug fix bz-62076\">\n+        <mkdir dir=\"${output}/mapper-source-dir\"/>\n+        <!-- create 2 files, one of which will be matched/included by the globmapper\n+        later in this target -->\n+        <touch file=\"${output}/mapper-source-dir/file1.txt\"/>\n+        <touch file=\"${output}/mapper-source-dir/file2.log\"/>\n+\n+        <pathconvert property=\"pc\">\n+            <mappedresources>\n+                <fileset dir=\"${output}/mapper-source-dir\"/>\n+                <!-- we intentionally exclude one of the files -->\n+                <globmapper from=\"*.log\" to=\"*.txt\"/>\n+            </mappedresources>\n+        </pathconvert>\n+    </target>\n+\n </project>"
            },
            {
                "sha": "18a31e5168e50683a3f82421f3c937ceb7f8c115",
                "filename": "src/main/org/apache/tools/ant/util/IdentityMapper.java",
                "status": "modified",
                "additions": 10,
                "deletions": 1,
                "changes": 11,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/main/org/apache/tools/ant/util/IdentityMapper.java",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/main/org/apache/tools/ant/util/IdentityMapper.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/IdentityMapper.java?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "patch": "@@ -46,7 +46,16 @@ public void setTo(String to) {\n      * @param sourceFileName the name to map.\n      * @return the source filename in a one-element array.\n      */\n-    public String[] mapFileName(String sourceFileName) {\n+    @Override\n+    public String[] mapFileName(final String sourceFileName) {\n+        if (sourceFileName == null) {\n+            // The FileNameMapper#mapFileName contract states that:\n+            // \"if the given rule doesn't apply to the source file,\n+            //  implementation must return null\"\n+            // we consider a null source file name as non-matching and\n+            // hence return null\n+            return null;\n+        }\n         return new String[] {sourceFileName};\n     }\n }"
            },
            {
                "sha": "f29dc12b954f8829e1205fa5d1d4af29ff9a308f",
                "filename": "src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java",
                "status": "modified",
                "additions": 11,
                "deletions": 0,
                "changes": 11,
                "blob_url": "https://github.com/apache/ant/blob/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java",
                "raw_url": "https://github.com/apache/ant/raw/e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda/src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/taskdefs/PathConvertTest.java?ref=e3f5250916dc0d9493b45b2d8fc6efe3a0fd9fda",
                "patch": "@@ -57,6 +57,17 @@ public void testNoTargetOs() {\n         buildRule.executeTarget(\"testnotargetos\");\n     }\n \n+    /**\n+     * Tests that if a {@code mappedresource}, that excludes certain resources, is used in a {@code pathconvert},\n+     * then it doesn't lead to a {@link NullPointerException}.\n+     *\n+     * @see <a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=62076\">bz-62076</a> for more details\n+     */\n+    @Test\n+    public void testNonMatchingMapper() {\n+        buildRule.executeTarget(\"test-nonmatching-mapper\");\n+    }\n+\n     private void test(String target) {\n         buildRule.executeTarget(target);\n         assertEquals(\"test#\" + BUILD_FILENAME, buildRule.getProject().getProperty(\"result\"));"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/02e32f76ca0730eb46649d4e0c59c1945355221f",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/14bd7590fbc50f5b3146288584f9116e37ee38c1",
        "message": "Use equals method of a string literal to prevent NPE and isEmpty() method instead of comparing a String object with an empty string.",
        "bug_id": "ant_7",
        "file": [
            {
                "sha": "61a696cab9d26d42c8ea9bb8562f61e8b2cc9c2a",
                "filename": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java",
                "status": "modified",
                "additions": 22,
                "deletions": 22,
                "changes": 44,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelper2.java",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelper2.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/helper/ProjectHelper2.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "patch": "@@ -667,8 +667,8 @@ public void endPrefixMapping(String prefix) {\n         @Override\n         public AntHandler onStartChild(String uri, String name, String qname, Attributes attrs,\n                                        AntXMLContext context) throws SAXParseException {\n-            if (name.equals(\"project\")\n-                && (uri.equals(\"\") || uri.equals(ANT_CORE_URI))) {\n+            if (\"project\".equals(name)\n+                && (uri.isEmpty() || uri.equals(ANT_CORE_URI))) {\n                 return ProjectHelper2.projectHandler;\n             }\n             if (name.equals(qname)) {\n@@ -727,19 +727,19 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n \n             for (int i = 0; i < attrs.getLength(); i++) {\n                 String attrUri = attrs.getURI(i);\n-                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {\n+                if (attrUri != null && !attrUri.isEmpty() && !attrUri.equals(uri)) {\n                     continue; // Ignore attributes from unknown uris\n                 }\n                 String key = attrs.getLocalName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"default\")) {\n-                    if (value != null && !value.equals(\"\")) {\n+                if (\"default\".equals(key)) {\n+                    if (value != null && !value.isEmpty()) {\n                         if (!context.isIgnoringProjectTag()) {\n                             project.setDefault(value);\n                         }\n                     }\n-                } else if (key.equals(\"name\")) {\n+                } else if (\"name\".equals(key)) {\n                     if (value != null) {\n                         context.setCurrentProjectName(value);\n                         nameAttributeSet = true;\n@@ -754,14 +754,14 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n                             }\n                         }\n                     }\n-                } else if (key.equals(\"id\")) {\n+                } else if (\"id\".equals(key)) {\n                     if (value != null) {\n                         // What's the difference between id and name ?\n                         if (!context.isIgnoringProjectTag()) {\n                             project.addReference(value, project);\n                         }\n                     }\n-                } else if (key.equals(\"basedir\")) {\n+                } else if (\"basedir\".equals(key)) {\n                     if (!context.isIgnoringProjectTag()) {\n                         baseDir = value;\n                     }\n@@ -864,8 +864,8 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n         @Override\n         public AntHandler onStartChild(String uri, String name, String qname, Attributes attrs,\n                                        AntXMLContext context) throws SAXParseException {\n-            return (name.equals(\"target\") || name.equals(\"extension-point\"))\n-                && (uri.equals(\"\") || uri.equals(ANT_CORE_URI))\n+            return (\"target\".equals(name) || \"extension-point\".equals(name))\n+                && (uri.isEmpty() || uri.equals(ANT_CORE_URI))\n                 ? ProjectHelper2.targetHandler : ProjectHelper2.elementHandler;\n         }\n     }\n@@ -912,32 +912,32 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n \n             for (int i = 0; i < attrs.getLength(); i++) {\n                 String attrUri = attrs.getURI(i);\n-                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {\n+                if (attrUri != null && !attrUri.isEmpty() && !attrUri.equals(uri)) {\n                     continue; // Ignore attributes from unknown uris\n                 }\n                 String key = attrs.getLocalName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"name\")) {\n+                if (\"name\".equals(key)) {\n                     name = value;\n-                    if (\"\".equals(name)) {\n+                    if (name.isEmpty()) {\n                         throw new BuildException(\"name attribute must \" + \"not be empty\");\n                     }\n-                } else if (key.equals(\"depends\")) {\n+                } else if (\"depends\".equals(key)) {\n                     depends = value;\n-                } else if (key.equals(\"if\")) {\n+                } else if (\"if\".equals(key)) {\n                     target.setIf(value);\n-                } else if (key.equals(\"unless\")) {\n+                } else if (\"unless\".equals(key)) {\n                     target.setUnless(value);\n-                } else if (key.equals(\"id\")) {\n-                    if (value != null && !value.equals(\"\")) {\n+                } else if (\"id\".equals(key)) {\n+                    if (value != null && !value.isEmpty()) {\n                         context.getProject().addReference(value, target);\n                     }\n-                } else if (key.equals(\"description\")) {\n+                } else if (\"description\".equals(key)) {\n                     target.setDescription(value);\n-                } else if (key.equals(\"extensionOf\")) {\n+                } else if (\"extensionOf\".equals(key)) {\n                     extensionPoint = value;\n-                } else if (key.equals(\"onMissingExtensionPoint\")) {\n+                } else if (\"onMissingExtensionPoint\".equals(key)) {\n                     try {\n                         extensionPointMissing = OnMissingExtensionPoint.valueOf(value);\n                     } catch (IllegalArgumentException e) {\n@@ -1167,7 +1167,7 @@ public void onStartElement(String uri, String tag, String qname, Attributes attr\n             for (int i = 0; i < attrs.getLength(); i++) {\n                 String name = attrs.getLocalName(i);\n                 String attrUri = attrs.getURI(i);\n-                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {\n+                if (attrUri != null && !attrUri.isEmpty() && !attrUri.equals(uri)) {\n                     name = attrUri + \":\" + attrs.getQName(i);\n                 }\n                 String value = attrs.getValue(i);"
            },
            {
                "sha": "4b824babdf318b47ab0219908d31730518808479",
                "filename": "src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java",
                "status": "modified",
                "additions": 16,
                "deletions": 16,
                "changes": 32,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "patch": "@@ -328,7 +328,7 @@ public InputSource resolveEntity(String publicId, String systemId) {\n          *                              <code>\"project\"</code>\n          */\n         public void startElement(String tag, AttributeList attrs) throws SAXParseException {\n-            if (tag.equals(\"project\")) {\n+            if (\"project\".equals(tag)) {\n                 new ProjectHandler(helperImpl, this).init(tag, attrs);\n             } else {\n                 throw new SAXParseException(\"Config file is not of expected \" + \"XML type\",\n@@ -389,13 +389,13 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n                 String key = attrs.getName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"default\")) {\n+                if (\"default\".equals(key)) {\n                     def = value;\n-                } else if (key.equals(\"name\")) {\n+                } else if (\"name\".equals(key)) {\n                     name = value;\n-                } else if (key.equals(\"id\")) {\n+                } else if (\"id\".equals(key)) {\n                     id = value;\n-                } else if (key.equals(\"basedir\")) {\n+                } else if (\"basedir\".equals(key)) {\n                     baseDir = value;\n                 } else {\n                     throw new SAXParseException(\n@@ -404,7 +404,7 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n                 }\n             }\n \n-            if (def != null && !def.equals(\"\")) {\n+            if (def != null && !def.isEmpty()) {\n                 helperImpl.project.setDefault(def);\n             } else {\n                 throw new BuildException(\"The default attribute is required\");\n@@ -455,7 +455,7 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n          *            or a data type definition\n          */\n         public void startElement(String name, AttributeList attrs) throws SAXParseException {\n-            if (name.equals(\"target\")) {\n+            if (\"target\".equals(name)) {\n                 handleTarget(name, attrs);\n             } else {\n                 handleElement(helperImpl, this, helperImpl.implicitTarget, name, attrs);\n@@ -525,21 +525,21 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n                 String key = attrs.getName(i);\n                 String value = attrs.getValue(i);\n \n-                if (key.equals(\"name\")) {\n+                if (\"name\".equals(key)) {\n                     name = value;\n-                    if (name.equals(\"\")) {\n+                    if (name.isEmpty()) {\n                         throw new BuildException(\"name attribute must not\" + \" be empty\",\n                                 new Location(helperImpl.locator));\n                     }\n-                } else if (key.equals(\"depends\")) {\n+                } else if (\"depends\".equals(key)) {\n                     depends = value;\n-                } else if (key.equals(\"if\")) {\n+                } else if (\"if\".equals(key)) {\n                     ifCond = value;\n-                } else if (key.equals(\"unless\")) {\n+                } else if (\"unless\".equals(key)) {\n                     unlessCond = value;\n-                } else if (key.equals(\"id\")) {\n+                } else if (\"id\".equals(key)) {\n                     id = value;\n-                } else if (key.equals(\"description\")) {\n+                } else if (\"description\".equals(key)) {\n                     description = value;\n                 } else {\n                     throw new SAXParseException(\"Unexpected attribute \\\"\" + key + \"\\\"\",\n@@ -563,7 +563,7 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n             target.setDescription(description);\n             helperImpl.project.addTarget(name, target);\n \n-            if (id != null && !id.equals(\"\")) {\n+            if (id != null && !id.isEmpty()) {\n                 helperImpl.project.addReference(id, target);\n             }\n \n@@ -600,7 +600,7 @@ public void startElement(String name, AttributeList attrs) throws SAXParseExcept\n      */\n     private static void handleElement(ProjectHelperImpl helperImpl, DocumentHandler parent,\n             Target target, String elementName, AttributeList attrs) throws SAXParseException {\n-        if (elementName.equals(\"description\")) {\n+        if (\"description\".equals(elementName)) {\n             // created for side effect\n             new DescriptionHandler(helperImpl, parent); //NOSONAR\n         } else if (helperImpl.project.getDataTypeDefinitions().get(elementName) != null) {"
            },
            {
                "sha": "4f983796c360e86fbbb0cfe1a6879e7f649de286",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "patch": "@@ -615,13 +615,13 @@ private void addGenICGeneratedFiles(\n         }\n \n         // javacopts\n-        if (javacopts != null && !javacopts.equals(\"\")) {\n+        if (javacopts != null && !javacopts.isEmpty()) {\n             genicTask.createArg().setValue(\"-javacopts\");\n             genicTask.createArg().setLine(javacopts);\n         }\n \n         // rmicopts\n-        if (rmicopts != null && !rmicopts.equals(\"\")) {\n+        if (rmicopts != null && !rmicopts.isEmpty()) {\n             genicTask.createArg().setValue(\"-rmicopts\");\n             genicTask.createArg().setLine(rmicopts);\n         }"
            },
            {
                "sha": "9aa1b491be11e275a4de22664a323e010eb2ffbf",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "raw_url": "https://github.com/apache/ant/raw/02e32f76ca0730eb46649d4e0c59c1945355221f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java?ref=02e32f76ca0730eb46649d4e0c59c1945355221f",
                "patch": "@@ -506,7 +506,7 @@ protected void scandir(String dir, String vpath, boolean fast) {\n                     return;\n                 }\n                 String completePath = null;\n-                if (!vpath.equals(\"\")) {\n+                if (!vpath.isEmpty()) {\n                     completePath = rootPath + remoteFileSep\n                         + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                 } else {\n@@ -521,8 +521,8 @@ protected void scandir(String dir, String vpath, boolean fast) {\n                 for (int i = 0; i < newfiles.length; i++) {\n                     FTPFile file = newfiles[i];\n                     if (file != null\n-                        && !file.getName().equals(\".\")\n-                        && !file.getName().equals(\"..\")) {\n+                        && !\".\".equals(file.getName())\n+                        && !\"..\".equals(file.getName())) {\n                         String name = vpath + file.getName();\n                         scannedDirs.put(name, new FTPFileProxy(file));\n                         if (isFunctioningAsDirectory(ftp, dir, file)) {\n@@ -1536,7 +1536,7 @@ public void setRecentDateFormatConfig(String recentDateFormat) {\n      * @see org.apache.commons.net.ftp.FTPClientConfig\n      */\n     public void setServerLanguageCodeConfig(LanguageCode serverLanguageCode) {\n-        if (serverLanguageCode != null && !serverLanguageCode.getValue().equals(\"\")) {\n+        if (serverLanguageCode != null && !serverLanguageCode.getValue().isEmpty()) {\n             this.serverLanguageCodeConfig = serverLanguageCode;\n             configurationHasBeenSet();\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/fba969ee60878fd293c47a921d9d19b4f463a61a",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/99deebc03041567403d275478094bb188ebe657d",
        "message": "avoid NPE",
        "bug_id": "ant_8",
        "file": [
            {
                "sha": "f2ad6861818aaa9767e3402c4dc88a45bac63a25",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/fba969ee60878fd293c47a921d9d19b4f463a61a/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java",
                "raw_url": "https://github.com/apache/ant/raw/fba969ee60878fd293c47a921d9d19b4f463a61a/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java?ref=fba969ee60878fd293c47a921d9d19b4f463a61a",
                "patch": "@@ -135,7 +135,9 @@ private void play(Project project, File file, int loops, Long duration) {\n                 }\n                 audioClip.drain();\n             } finally {\n-                audioClip.close();\n+                if (audioClip != null) {\n+                    audioClip.close();\n+                }\n             }\n         } else {\n             project.log(\"Can't get data from file \" + file.getName());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/cb933030d23b7027246d01dd4d2c863ef2c82369",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/1f045ecb31fc97340e7dce1c70e133a62e1e4271",
        "message": "avoid NPE",
        "bug_id": "ant_9",
        "file": [
            {
                "sha": "f2ad6861818aaa9767e3402c4dc88a45bac63a25",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/cb933030d23b7027246d01dd4d2c863ef2c82369/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java",
                "raw_url": "https://github.com/apache/ant/raw/cb933030d23b7027246d01dd4d2c863ef2c82369/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java?ref=cb933030d23b7027246d01dd4d2c863ef2c82369",
                "patch": "@@ -135,7 +135,9 @@ private void play(Project project, File file, int loops, Long duration) {\n                 }\n                 audioClip.drain();\n             } finally {\n-                audioClip.close();\n+                if (audioClip != null) {\n+                    audioClip.close();\n+                }\n             }\n         } else {\n             project.log(\"Can't get data from file \" + file.getName());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/7451a066cb3c801bbb62d05de03619c153161c80",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/99684cfd77a3851d098824e9eb871cd6c087934f",
        "message": "tests that show gunzip for non-file resources is broken\n\nhttp://stackoverflow.com/questions/32500937/nullpointerexception-using-on-the-fly-version-of-gunzip-ant-task",
        "bug_id": "ant_10",
        "file": [
            {
                "sha": "5c6f82ca21dc724d988eb370af801c3dae3a90f5",
                "filename": "src/tests/antunit/taskdefs/gunzip-test.xml",
                "status": "added",
                "additions": 62,
                "deletions": 0,
                "changes": 62,
                "blob_url": "https://github.com/apache/ant/blob/7451a066cb3c801bbb62d05de03619c153161c80/src/tests/antunit/taskdefs/gunzip-test.xml",
                "raw_url": "https://github.com/apache/ant/raw/7451a066cb3c801bbb62d05de03619c153161c80/src/tests/antunit/taskdefs/gunzip-test.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/gunzip-test.xml?ref=7451a066cb3c801bbb62d05de03619c153161c80",
                "patch": "@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project default=\"antunit\" xmlns:au=\"antlib:org.apache.ant.antunit\">\n+  <import file=\"../antunit-base.xml\" />\n+\n+  <target name=\"setup\">\n+    <mkdir dir=\"${output}\"/>\n+  </target>\n+  \n+  <target name=\"testWithFileResourceToFile\" depends=\"setup\">\n+    <gunzip dest=\"${output}/asf-logo.gif\">\n+      <file file=\"../../../etc/testcases/taskdefs/expected/asf-logo.gif.gz\"/>\n+    </gunzip>\n+    <au:assertFilesMatch expected=\"../../../etc/testcases/asf-logo.gif\"\n+                         actual=\"${output}/asf-logo.gif\"/>\n+  </target>\n+\n+  <target name=\"testWithFileResourceToDirectory\" depends=\"setup\">\n+    <gunzip dest=\"${output}\">\n+      <file file=\"../../../etc/testcases/taskdefs/expected/asf-logo.gif.gz\"/>\n+    </gunzip>\n+    <au:assertFilesMatch expected=\"../../../etc/testcases/asf-logo.gif\"\n+                         actual=\"${output}/asf-logo.gif\"/>\n+  </target>\n+\n+  <target name=\"XtestWithNonFileResourceToFile\" depends=\"setup\">\n+    <gunzip dest=\"${output}/greeting.txt\">\n+      <url url=\"http://ant.apache.org/webtest/gunzip/greeting.txt.gz\"/>\n+    </gunzip>\n+    <get src=\"http://ant.apache.org/webtest/gunzip/greeting.txt\"\n+         dest=\"${output}/orig.greeting.txt\"/>\n+    <au:assertFilesMatch expected=\"${output}/orig.greeting.txt\"\n+                         actual=\"${output}/greeting.txt\"/>\n+  </target>\n+\n+  <target name=\"XtestWithNonFileResourceToDir\" depends=\"setup\">\n+    <gunzip dest=\"${output}\">\n+      <url url=\"http://ant.apache.org/webtest/gunzip/greeting.txt.gz\"/>\n+    </gunzip>\n+    <get src=\"http://ant.apache.org/webtest/gunzip/greeting.txt\"\n+         dest=\"${output}/orig.greeting.txt\"/>\n+    <au:assertFilesMatch expected=\"${output}/orig.greeting.txt\"\n+                         actual=\"${output}/greeting.txt\"/>\n+  </target>\n+\n+</project>\n+"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/8a9e8a9034cc1ef7699d76a297ac0194a594d215",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/08ece01ed6dd8c26f47fd82f990a183bbc373f5d",
        "message": "-sorry prevent NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@518897 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_11",
        "file": [
            {
                "sha": "39a1e77cd795cefaff3f197dfb20c46f6f738a1d",
                "filename": "src/main/org/apache/tools/ant/util/FileUtils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/8a9e8a9034cc1ef7699d76a297ac0194a594d215/src/main/org/apache/tools/ant/util/FileUtils.java",
                "raw_url": "https://github.com/apache/ant/raw/8a9e8a9034cc1ef7699d76a297ac0194a594d215/src/main/org/apache/tools/ant/util/FileUtils.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/FileUtils.java?ref=8a9e8a9034cc1ef7699d76a297ac0194a594d215",
                "patch": "@@ -1303,6 +1303,9 @@ public boolean isUpToDate(long sourceTime, long destTime) {\n \n     \n     private static void closeQuietly(Object o) {\n+        if (null == o) {\n+            return;\n+        }\n         try {\n             if(ReflectUtil.respondsTo(o, \"close\")) {\n                 ReflectUtil.invoke(o, \"close\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/07cf1f95cc63b07870fbff54191a6fdfab28e998",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/9642cc73f82be129345cd846dbe7083a123b2fde",
        "message": "ant -Debug would cause a NullPointerException\n\nPR: 22065\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275022 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_12",
        "file": [
            {
                "sha": "9334dab5a4d1d69647d72e21435e14426b5dfd11",
                "filename": "src/main/org/apache/tools/ant/Main.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/07cf1f95cc63b07870fbff54191a6fdfab28e998/src/main/org/apache/tools/ant/Main.java",
                "raw_url": "https://github.com/apache/ant/raw/07cf1f95cc63b07870fbff54191a6fdfab28e998/src/main/org/apache/tools/ant/Main.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Main.java?ref=07cf1f95cc63b07870fbff54191a6fdfab28e998",
                "patch": "@@ -378,6 +378,9 @@ private void processArgs(String[] args) {\n                     name = name.substring(0, posEq);\n                 } else if (i < args.length - 1) {\n                     value = args[++i];\n+                } else {\n+                    throw new BuildException(\"Missing value for property \"\n+                                             + name);\n                 }\n \n                 definedProps.put(name, value);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d2eddd7e4d3a7509fbebf87e11c1186073316be6",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/c007edc9da8892674744c1142401c5db41dd655f",
        "message": "Avoid NullPointerException in JDK 1.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268370 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_13",
        "file": [
            {
                "sha": "f543df55f4fd0f79097d5e70b5872fcbab091a74",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/d2eddd7e4d3a7509fbebf87e11c1186073316be6/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "raw_url": "https://github.com/apache/ant/raw/d2eddd7e4d3a7509fbebf87e11c1186073316be6/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=d2eddd7e4d3a7509fbebf87e11c1186073316be6",
                "patch": "@@ -23,7 +23,7 @@\n  *    Alternately, this acknowlegement may appear in the software itself,\n  *    if and wherever such third-party acknowlegements normally appear.\n  *\n- * 4. The names \"The Jakarta Project\", \"Tomcat\", and \"Apache Software\n+ * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *    from this software without prior written permission. For written \n  *    permission, please contact apache@apache.org.\n@@ -486,7 +486,12 @@ protected void addParentDirs(File baseDir, String entry,\n \n         while (!directories.isEmpty()) {\n             String dir = (String) directories.pop();\n-            File f = new File(baseDir, dir);\n+            File f = null;\n+            if (baseDir != null) {\n+                f = new File(baseDir, dir);\n+            } else {\n+                f = new File(dir);\n+            }\n             zipDir(f, zOut, prefix+dir);\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/e2a75898e88825b87310be19070b68f967ae000c",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/a252eb85435070911a166bc108952067a9a2d061",
        "message": "avoid NullPointerException in DirectoryScanner.scandir.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267914 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_14",
        "file": [
            {
                "sha": "cc506b983f86a0ba87e970cdb2935bb8d1543d1b",
                "filename": "src/main/org/apache/tools/ant/DirectoryScanner.java",
                "status": "modified",
                "additions": 13,
                "deletions": 0,
                "changes": 13,
                "blob_url": "https://github.com/apache/ant/blob/e2a75898e88825b87310be19070b68f967ae000c/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "raw_url": "https://github.com/apache/ant/raw/e2a75898e88825b87310be19070b68f967ae000c/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/DirectoryScanner.java?ref=e2a75898e88825b87310be19070b68f967ae000c",
                "patch": "@@ -727,6 +727,19 @@ private void slowScan() {\n      */\n     private void scandir(File dir, String vpath, boolean fast) {\n         String[] newfiles = dir.list();\n+\n+        if (newfiles == null) {\n+            /*\n+             * two reasons are mentioned in the API docs for File.list\n+             * (1) dir is not a directory. This is impossible as\n+             *     we wouldn't get here in this case.\n+             * (2) an IO error occurred (why doesn't it throw an exception \n+             *     then???)\n+             */\n+            throw new BuildException(\"IO error scanning directory\"\n+                                     + dir.getAbsolutePath());\n+        }\n+\n         for (int i = 0; i < newfiles.length; i++) {\n             String name = vpath+newfiles[i];\n             File   file = new File(dir,newfiles[i]);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ad72b9a92036b02e00cf28740c27322a93256328",
        "message": "PR 56973 getLastModified in URLResource throws NPE for FTP URLs",
        "bug_id": "ant_15",
        "file": [
            {
                "sha": "0f052c90b21ed4dc845b4ff88f75f7958a2fbf09",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b",
                "patch": "@@ -27,6 +27,11 @@ Fixed bugs:\n    cannot determine the local hostname.\n    Bugzilla Report 56593\n \n+ * URLResource#getLastModified tried to access the connection to the\n+   URL without making sure it was established, potentially leading to\n+   a NullPointerException when using FTP.\n+   Bugzilla Report 56873\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "70d6c9baae62d1ab8063dbe96d3d1873e56dd123",
                "filename": "src/main/org/apache/tools/ant/types/resources/URLResource.java",
                "status": "modified",
                "additions": 30,
                "deletions": 10,
                "changes": 40,
                "blob_url": "https://github.com/apache/ant/blob/c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b/src/main/org/apache/tools/ant/types/resources/URLResource.java",
                "raw_url": "https://github.com/apache/ant/raw/c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b/src/main/org/apache/tools/ant/types/resources/URLResource.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/resources/URLResource.java?ref=c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b",
                "patch": "@@ -265,8 +265,11 @@ public synchronized long getLastModified() {\n         if (!isExists(false)) {\n             return UNKNOWN_DATETIME;\n         }\n-        // isExists has already opened the connection\n-        return conn.getLastModified();\n+        return withConnection(new ConnectionUser() {\n+                public long useConnection(URLConnection c) {\n+                    return conn.getLastModified();\n+                }\n+            }, UNKNOWN_DATETIME);\n     }\n \n     /**\n@@ -291,14 +294,11 @@ public synchronized long getSize() {\n         if (!isExists(false)) {\n             return 0L;\n         }\n-        try {\n-            connect();\n-            long contentlength = conn.getContentLength();\n-            close();\n-            return contentlength;\n-        } catch (IOException e) {\n-            return UNKNOWN_SIZE;\n-        }\n+        return withConnection(new ConnectionUser() {\n+                public long useConnection(URLConnection c) {\n+                    return conn.getContentLength();\n+                }\n+            }, UNKNOWN_SIZE);\n     }\n \n     /**\n@@ -431,4 +431,24 @@ private static URL newURL(String u) {\n         }\n     }\n \n+    private interface ConnectionUser {\n+        long useConnection(URLConnection c);\n+    }\n+\n+    private long withConnection(ConnectionUser u, long defaultValue) {\n+        try {\n+            if (conn != null) {\n+                return u.useConnection(conn);\n+            } else {\n+                try {\n+                    connect();\n+                    return u.useConnection(conn);\n+                } finally {\n+                    close();\n+                }\n+            }\n+        } catch (IOException ex) {\n+            return defaultValue;\n+        }\n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/19434df75b86fd14fb9d12302e8f37f4d16738c4",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/7eff21c38b119354f8e4f658c8cfd25fe39812af",
        "message": "Fix potential NPE in mailers, remove root cause of NPE reported in PR 44009.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@704496 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_16",
        "file": [
            {
                "sha": "c7ae7198899cb653ec50302f4fa79d6a7b3effce",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/19434df75b86fd14fb9d12302e8f37f4d16738c4/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/19434df75b86fd14fb9d12302e8f37f4d16738c4/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=19434df75b86fd14fb9d12302e8f37f4d16738c4",
                "patch": "@@ -244,6 +244,9 @@ Fixed bugs:\n    worked if JavaMail was available.\n    Bugzilla Report 42389.\n \n+ * MailLogger could cause a NullPointerException.\n+   Bugzilla Report 44009.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "b43b58f289c8efd631fe84c76a15c56f26389dd6",
                "filename": "src/main/org/apache/tools/ant/listener/MailLogger.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/19434df75b86fd14fb9d12302e8f37f4d16738c4/src/main/org/apache/tools/ant/listener/MailLogger.java",
                "raw_url": "https://github.com/apache/ant/raw/19434df75b86fd14fb9d12302e8f37f4d16738c4/src/main/org/apache/tools/ant/listener/MailLogger.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/listener/MailLogger.java?ref=19434df75b86fd14fb9d12302e8f37f4d16738c4",
                "patch": "@@ -355,6 +355,7 @@ private void sendMimeMail(Project project, Values values, String message) {\n         mailer.setBccList(new Vector());\n         mailer.setFiles(new Vector());\n         mailer.setSubject(values.subject());\n+        mailer.setHeaders(new Vector());\n         mailer.send();\n     }\n     private Vector vectorizeEmailAddresses(String listString) {"
            },
            {
                "sha": "501004845a8d06615f38aa7f38456e3201de7ef0",
                "filename": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/19434df75b86fd14fb9d12302e8f37f4d16738c4/src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java",
                "raw_url": "https://github.com/apache/ant/raw/19434df75b86fd14fb9d12302e8f37f4d16738c4/src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java?ref=19434df75b86fd14fb9d12302e8f37f4d16738c4",
                "patch": "@@ -202,10 +202,12 @@ public void send() {\n             }\n             msg.addHeader(\"Date\", getDate());\n \n+            if (headers != null) {\n             for (Iterator iter = headers.iterator(); iter.hasNext();) {\n                 Header h = (Header) iter.next();\n                 msg.addHeader(h.getName(), h.getValue());\n             }\n+            }\n             PrintStream out = new PrintStream(sds.getOutputStream());\n             message.print(out);\n             out.close();"
            },
            {
                "sha": "307ccd20ade22a2c8bcf5dac93ddba411ca1b075",
                "filename": "src/main/org/apache/tools/ant/taskdefs/email/PlainMailer.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/19434df75b86fd14fb9d12302e8f37f4d16738c4/src/main/org/apache/tools/ant/taskdefs/email/PlainMailer.java",
                "raw_url": "https://github.com/apache/ant/raw/19434df75b86fd14fb9d12302e8f37f4d16738c4/src/main/org/apache/tools/ant/taskdefs/email/PlainMailer.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/email/PlainMailer.java?ref=19434df75b86fd14fb9d12302e8f37f4d16738c4",
                "patch": "@@ -71,11 +71,13 @@ public void send() {\n             } else {\n                 mailMessage.setHeader(\"Content-Type\", message.getMimeType());\n             }\n+            if (headers != null) {\n             e = headers.elements();\n             while (e.hasMoreElements()) {\n                 Header h = (Header) e.nextElement();\n                 mailMessage.setHeader(h.getName(), h.getValue());\n             }\n+            }\n             PrintStream out = mailMessage.getPrintStream();\n             message.print(out);\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/a6b49f948ddad457bee248c1efea1ab08d249ba5",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ca34ebdbd1bedbca42b277d34f19db01697dbbb5",
        "message": "PR 56593 XMLJUnitResultFormatter may throw NPE when Java cannot\ndetermine hostname.  Submitted by Joel Tucci.",
        "bug_id": "ant_17",
        "file": [
            {
                "sha": "4a10c42b4c762b63a2b70d59f964babe01a0de49",
                "filename": "CONTRIBUTORS",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/a6b49f948ddad457bee248c1efea1ab08d249ba5/CONTRIBUTORS",
                "raw_url": "https://github.com/apache/ant/raw/a6b49f948ddad457bee248c1efea1ab08d249ba5/CONTRIBUTORS",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/CONTRIBUTORS?ref=a6b49f948ddad457bee248c1efea1ab08d249ba5",
                "patch": "@@ -182,6 +182,7 @@ Jesse Glick\n Jesse Stockall\n Jim Allers\n Joerg Wassmer\n+Joel Tucci\n Joey Richey\n Johann Herunter\n John Elion"
            },
            {
                "sha": "6ebed1ecaee10f0c73100681562bf602c30ebcb8",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/a6b49f948ddad457bee248c1efea1ab08d249ba5/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/a6b49f948ddad457bee248c1efea1ab08d249ba5/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=a6b49f948ddad457bee248c1efea1ab08d249ba5",
                "patch": "@@ -14,6 +14,9 @@ Fixed bugs:\n  * TarArchiveInputStream could throw IOException when reading PAX\n    headers from a \"slow\" InputStream.\n \n+ * XMLJunitResultFormatter could throw NullPointerException if Java\n+   cannot determine the local hostname.\n+   Bugzilla Report 56593\n \n Other changes:\n --------------"
            },
            {
                "sha": "a86950aff583469560b667505018e37fb4ff041a",
                "filename": "contributors.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/a6b49f948ddad457bee248c1efea1ab08d249ba5/contributors.xml",
                "raw_url": "https://github.com/apache/ant/raw/a6b49f948ddad457bee248c1efea1ab08d249ba5/contributors.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/contributors.xml?ref=a6b49f948ddad457bee248c1efea1ab08d249ba5",
                "patch": "@@ -751,6 +751,10 @@\n     <first>Joerg</first>\n     <last>Wassmer</last>\n   </name>\n+  <name>\n+    <first>Joel</first>\n+    <last>Tucci</last>\n+  </name>\n   <name>\n     <first>Joey</first>\n     <last>Richey</last>"
            },
            {
                "sha": "7f064f963bbec1be06462e4ebcb84c60489e9acb",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/a6b49f948ddad457bee248c1efea1ab08d249ba5/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java",
                "raw_url": "https://github.com/apache/ant/raw/a6b49f948ddad457bee248c1efea1ab08d249ba5/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java?ref=a6b49f948ddad457bee248c1efea1ab08d249ba5",
                "patch": "@@ -161,11 +161,15 @@ public void startTestSuite(JUnitTest suite) {\n      * @return the name of the local host, or \"localhost\" if we cannot work it out\n      */\n     private String getHostname()  {\n+        String hostname = \"localhost\";\n         try {\n-            return InetAddress.getLocalHost().getHostName();\n+            InetAddress localHost = InetAddress.getLocalHost();\n+            if (localHost != null) {\n+                hostname = localHost.getHostName();\n+            }\n         } catch (UnknownHostException e) {\n-            return \"localhost\";\n         }\n+        return hostname;\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/a3bbe9f596f9a8e29f8971b7276a4f4f2d2d037b",
        "message": "PR 54026 Zip task on <mappedresources> that excludes certain files by way of the mapper results in a NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1429613 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_18",
        "file": [
            {
                "sha": "c209a5810b677f6e9c8d90f273974351bd05e81c",
                "filename": "CONTRIBUTORS",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/CONTRIBUTORS",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/CONTRIBUTORS",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/CONTRIBUTORS?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "patch": "@@ -74,6 +74,7 @@ Dan Armbrust\n Daniel Henrique\n Daniel Ribagnac\n Daniel Spilker\n+Daniel Trebbien\n Danno Ferrin\n Danny Yates\n Dante Briones"
            },
            {
                "sha": "09905e746b36e14be95724f67da2dc862f0cd02e",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "patch": "@@ -62,6 +62,10 @@ Fixed bugs:\n  * ssh tasks prompt for kerberos username/password under Java 7\n    Bugzilla Report 53437.\n \n+ * Zip task on <mappedresources> that excludes certain files by way of the mapper resulted in a NullPointerException\n+   Bugzilla Report 54026\n+\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "f726989c6f0622eb4160c35c26cdbbfd3b1ff5b7",
                "filename": "contributors.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/contributors.xml",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/contributors.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/contributors.xml?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "patch": "@@ -319,6 +319,10 @@\n     <first>Daniel</first>\n     <last>Spilker</last>\n   </name>\n+  <name>\n+    <first>Daniel</first>\n+    <last>Trebbien</last>\n+  </name>\n   <name>\n     <first>Danno</first>\n     <last>Ferrin</last>"
            },
            {
                "sha": "a58ac1bf50490aa9e22417b83291768144b8a2d9",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "status": "modified",
                "additions": 12,
                "deletions": 7,
                "changes": 19,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "patch": "@@ -1068,22 +1068,27 @@ protected final void addResources(ResourceCollection rc,\n             return;\n         }\n         for (int i = 0; i < resources.length; i++) {\n-            String name = resources[i].getName().replace(File.separatorChar,\n-                                                         '/');\n+            final Resource resource = resources[i];\n+            String name = resource.getName();\n+            if (name == null) {\n+                continue;\n+            }\n+            name = name.replace(File.separatorChar, '/');\n+\n             if (\"\".equals(name)) {\n                 continue;\n             }\n-            if (resources[i].isDirectory() && doFilesonly) {\n+            if (resource.isDirectory() && doFilesonly) {\n                 continue;\n             }\n             File base = null;\n-            FileProvider fp = resources[i].as(FileProvider.class);\n+            FileProvider fp = resource.as(FileProvider.class);\n             if (fp != null) {\n                 base = ResourceUtils.asFileResource(fp).getBaseDir();\n             }\n \n-            if (resources[i].isDirectory()) {\n-                addDirectoryResource(resources[i], name, \"\", base, zOut,\n+            if (resource.isDirectory()) {\n+                addDirectoryResource(resource, name, \"\", base, zOut,\n                                      ArchiveFileSet.DEFAULT_DIR_MODE,\n                                      ArchiveFileSet.DEFAULT_DIR_MODE);\n \n@@ -1095,7 +1100,7 @@ protected final void addResources(ResourceCollection rc,\n                     File f = (fp).getFile();\n                     zipFile(f, zOut, name, ArchiveFileSet.DEFAULT_FILE_MODE);\n                 } else {\n-                    addResource(resources[i], name, \"\", zOut,\n+                    addResource(resource, name, \"\", zOut,\n                                 ArchiveFileSet.DEFAULT_FILE_MODE,\n                                 null, null);\n                 }"
            },
            {
                "sha": "682ac95f8a95a56b2b946baba2a288d9031faa7c",
                "filename": "src/tests/antunit/taskdefs/zip-test.xml",
                "status": "modified",
                "additions": 15,
                "deletions": 0,
                "changes": 15,
                "blob_url": "https://github.com/apache/ant/blob/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/tests/antunit/taskdefs/zip-test.xml",
                "raw_url": "https://github.com/apache/ant/raw/0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5/src/tests/antunit/taskdefs/zip-test.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/zip-test.xml?ref=0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5",
                "patch": "@@ -45,6 +45,21 @@\n                          actual=\"${output}/out/bar.txt\"/>\n   </target>\n \n+  <target name=\"test-54026\">\n+    <mkdir dir=\"${input}\"/>\n+    <touch file=\"${input}/test1\"/>\n+    <mkdir dir=\"${input}/subdir\"/>\n+    <touch file=\"${input}/subdir/test2\"/>\n+    <zip destfile=\"${output}/br54026-destzip.zip\">\n+      <mappedresources>\n+        <fileset dir=\"${input}\"/>\n+        <globmapper from=\"subdir/*\" to=\"subdir.orig/*\"/>\n+      </mappedresources>\n+    </zip>\n+\n+    <au:assertFileExists file=\"${output}/br54026-destzip.zip\"/>\n+  </target>\n+\n   <target name=\"testMappedClasspath\">\n     <mkdir dir=\"${input}\"/>\n     <mkdir dir=\"${output}/out\"/>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/29866fce1d825832107184311f0a764b10efea07",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/7f44f839eb6961e0ce01e6813d36f674804df1fb",
        "message": "Pr: 41284 dependset throws NullPointerException. Sort is not suitable to sort items in an order that might change during sorting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@500692 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_19",
        "file": [
            {
                "sha": "424fc622e31e50f013a0c0b17efca2dbc9f0900a",
                "filename": "src/main/org/apache/tools/ant/taskdefs/DependSet.java",
                "status": "modified",
                "additions": 28,
                "deletions": 18,
                "changes": 46,
                "blob_url": "https://github.com/apache/ant/blob/29866fce1d825832107184311f0a764b10efea07/src/main/org/apache/tools/ant/taskdefs/DependSet.java",
                "raw_url": "https://github.com/apache/ant/raw/29866fce1d825832107184311f0a764b10efea07/src/main/org/apache/tools/ant/taskdefs/DependSet.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/DependSet.java?ref=29866fce1d825832107184311f0a764b10efea07",
                "patch": "@@ -94,22 +94,7 @@ private NonExistent(ResourceCollection rc) {\n             super.add(NOT_EXISTS);\n         }\n     }\n-    private static class Xest extends Sort {\n-        private Xest(ResourceCollection rc, ResourceComparator c) {\n-            super.add(c);\n-            super.add(rc);\n-        }\n-    }\n-    private static class Oldest extends Xest {\n-        private Oldest(ResourceCollection rc) {\n-            super(rc, DATE_ASC);\n-        }\n-    }\n-    private static class Newest extends Xest {\n-        private Newest(ResourceCollection rc) {\n-            super(rc, DATE_DESC);\n-        }\n-    }\n+\n     private static class HideMissingBasedir implements ResourceCollection {\n         private FileSet fs;\n \n@@ -220,7 +205,7 @@ private boolean uptodate(ResourceCollection src, ResourceCollection target) {\n             log(neTargets + \" nonexistent targets\", Project.MSG_VERBOSE);\n             return false;\n         }\n-        FileResource oldestTarget = (FileResource) (new Oldest(targets).iterator().next());\n+        FileResource oldestTarget = (FileResource) getOldest(targets);\n         log(oldestTarget + \" is oldest target file\", Project.MSG_VERBOSE);\n \n         logFuture(sources, datesel);\n@@ -230,7 +215,7 @@ private boolean uptodate(ResourceCollection src, ResourceCollection target) {\n             log(neSources + \" nonexistent sources\", Project.MSG_VERBOSE);\n             return false;\n         }\n-        Resource newestSource = (Resource) (new Newest(sources).iterator().next());\n+        Resource newestSource = (Resource) getNewest(sources);\n         log(newestSource.toLongString() + \" is newest source\", Project.MSG_VERBOSE);\n         return oldestTarget.getLastModified() >= newestSource.getLastModified();\n     }\n@@ -243,4 +228,29 @@ private void logFuture(ResourceCollection rc, ResourceSelector rsel) {\n             log(\"Warning: \" + i.next() + \" modified in the future.\", Project.MSG_WARN);\n         }\n     }\n+\n+    private Resource getXest(ResourceCollection rc, ResourceComparator c) {\n+        Iterator i = rc.iterator();\n+        if (!i.hasNext()) {\n+            return null;\n+\n+        }\n+        Resource xest = (Resource) i.next();\n+        while (i.hasNext()) {\n+            Resource next = (Resource) i.next();\n+            if (c.compare(xest, next) < 0) {\n+                xest = next;\n+            }\n+        }\n+        return xest;\n+    }\n+\n+    private Resource getOldest(ResourceCollection rc) {\n+        return getXest(rc, DATE_ASC);\n+    }\n+\n+    private Resource getNewest(ResourceCollection rc) {\n+        return getXest(rc, DATE_DESC);\n+    }\n+\n }"
            },
            {
                "sha": "593f24f9f0d502cb30ef660e211b1ceb2fa1d7ba",
                "filename": "src/main/org/apache/tools/ant/types/resources/Sort.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/29866fce1d825832107184311f0a764b10efea07/src/main/org/apache/tools/ant/types/resources/Sort.java",
                "raw_url": "https://github.com/apache/ant/raw/29866fce1d825832107184311f0a764b10efea07/src/main/org/apache/tools/ant/types/resources/Sort.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/resources/Sort.java?ref=29866fce1d825832107184311f0a764b10efea07",
                "patch": "@@ -35,6 +35,10 @@\n \n /**\n  * ResourceCollection that sorts another ResourceCollection.\n+ *\n+ * Note that Sort must not be used in cases where the ordering of the objects\n+ * being sorted might change during the sorting process.\n+ *\n  * @since Ant 1.7\n  */\n public class Sort extends BaseResourceCollectionWrapper {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/0f9a9661e2b2022dddde5c64679653f2c572e2dd",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/29866fce1d825832107184311f0a764b10efea07",
        "message": "Pr: 41284 dependset throws NullPointerException. Sort is not suitable to sort items in an order that might change during sorting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@500694 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_20",
        "file": [
            {
                "sha": "3650f43eb7f6639551a1aac4a362ff56812d943b",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/0f9a9661e2b2022dddde5c64679653f2c572e2dd/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/0f9a9661e2b2022dddde5c64679653f2c572e2dd/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=0f9a9661e2b2022dddde5c64679653f2c572e2dd",
                "patch": "@@ -6,6 +6,10 @@ Changes that could break older environments:\n \n Fixed bugs:\n -----------\n+* Dependset crashes ant when timestamp on files change during Dependset\n+  execution.\n+  Bugzilla report 41284\n+\n * Bug in org.apache.tools.ant.types.resources.comparators.Date\n   Bugzilla report 41411\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/44b170125dfa5ee3189c220a433f2c48a4338727",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/91dfa2e783567b2801a535355397c0e3e671fef6",
        "message": "Fix for #6288\nNullPointerException if no environment variables found\n\nPatch supplied by jimbuuck@netscape.net\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@271191 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_21",
        "file": [
            {
                "sha": "50f32ffe68a590f52d0e93bdcd1957f3f0759294",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/44b170125dfa5ee3189c220a433f2c48a4338727/src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "raw_url": "https://github.com/apache/ant/raw/44b170125dfa5ee3189c220a433f2c48a4338727/src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Execute.java?ref=44b170125dfa5ee3189c220a433f2c48a4338727",
                "patch": "@@ -209,7 +209,9 @@ public static synchronized Vector getProcEnvironment() {\n                 }\n             }\n             // Since we \"look ahead\" before adding, there's one last env var.\n-            procEnvironment.addElement(var);\n+            if (var != null) {\n+                procEnvironment.addElement(var);\n+            }\n         }\n         catch (java.io.IOException exc) {\n             exc.printStackTrace();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/3eebdfd1c883c345077e0bfbc8142d0065170af7",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/2295e485c44b8e984eb77f353a888ccffa1ed1df",
        "message": "Fixed NullPointerException in <copy> when <mapper> and overwrite have\nbeen used at the same time.\n\nReported by:\tRaphael PIERQUIN <pierquin@agisphere.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268329 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_22",
        "file": [
            {
                "sha": "951a49d88bc5da637455e6e53e34d510aeeb75e7",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Copy.java",
                "status": "modified",
                "additions": 8,
                "deletions": 1,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/3eebdfd1c883c345077e0bfbc8142d0065170af7/src/main/org/apache/tools/ant/taskdefs/Copy.java",
                "raw_url": "https://github.com/apache/ant/raw/3eebdfd1c883c345077e0bfbc8142d0065170af7/src/main/org/apache/tools/ant/taskdefs/Copy.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Copy.java?ref=3eebdfd1c883c345077e0bfbc8142d0065170af7",
                "patch": "@@ -281,7 +281,14 @@ protected void buildMap(File fromDir, File toDir, String[] names,\n \n         String[] toCopy = null;\n         if (forceOverwrite) {\n-            toCopy = names;\n+            Vector v = new Vector();\n+            for (int i=0; i<names.length; i++) {\n+                if (mapper.mapFileName(names[i]) != null) {\n+                    v.addElement(names[i]);\n+                }\n+            }\n+            toCopy = new String[v.size()];\n+            v.copyInto(toCopy);\n         } else {\n             SourceFileScanner ds = new SourceFileScanner(this);\n             toCopy = ds.restrict(names, fromDir, toDir, mapper);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/de3b5b85205a94af26eafbbd493e4b1d99e4c16f",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/f929d4bc2b1e1934ab40357541f885969957d50e",
        "message": "Work around a problem with a NullPointerException on IBM JDK\n1.3/Linux.\n\nbuildFile.getParent() returns null if buildFile is not absolute.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267924 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_23",
        "file": [
            {
                "sha": "0f462f4714e59bc9880e9eacc503ea7c85ebfdb4",
                "filename": "src/main/org/apache/tools/ant/ProjectHelper.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/de3b5b85205a94af26eafbbd493e4b1d99e4c16f/src/main/org/apache/tools/ant/ProjectHelper.java",
                "raw_url": "https://github.com/apache/ant/raw/de3b5b85205a94af26eafbbd493e4b1d99e4c16f/src/main/org/apache/tools/ant/ProjectHelper.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/ProjectHelper.java?ref=de3b5b85205a94af26eafbbd493e4b1d99e4c16f",
                "patch": "@@ -233,10 +233,11 @@ public void init(String tag, AttributeList attrs) throws SAXParseException {\n             if (project.getProperty(\"basedir\") != null) {\n                 project.setBasedir(project.getProperty(\"basedir\"));\n             } else {\n+                String buildFileParent = (new File(buildFile.getAbsolutePath())).getParent();\n                 if (baseDir == null) {\n-                    project.setBasedir((new File(buildFile.getParent())).getAbsolutePath());\n+                    project.setBasedir((new File(buildFileParent)).getAbsolutePath());\n                 } else {\n-                    project.setBasedir((new File(buildFile.getParent(), baseDir)).getAbsolutePath());\n+                    project.setBasedir((new File(buildFileParent, baseDir)).getAbsolutePath());\n                 }\n             }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/7db902758895c1c83c8d48efbd4c9780f15e9e17",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/e2a75898e88825b87310be19070b68f967ae000c",
        "message": "Avoid NullPointerException in FileSet.\nSubmitted by:\tJeff Martin <jeff.martin@synamic.co.uk>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267915 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_24",
        "file": [
            {
                "sha": "a1c610cb657ab1590a43a25745a0a35e04b4a425",
                "filename": "src/main/org/apache/tools/ant/types/FileSet.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/main/org/apache/tools/ant/types/FileSet.java",
                "raw_url": "https://github.com/apache/ant/raw/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/main/org/apache/tools/ant/types/FileSet.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/FileSet.java?ref=7db902758895c1c83c8d48efbd4c9780f15e9e17",
                "patch": "@@ -182,6 +182,10 @@ public void setDefaultexcludes(boolean useDefaultExcludes) {\n      * Returns the directory scanner needed to access the files to process.\n      */\n     public DirectoryScanner getDirectoryScanner(Project p) {\n+        if (dir == null) {\n+            throw new BuildException(\"No directory specified for fileset.\");\n+        }\n+\n         /*\n          * XXX remove the check here and enable the one in setDir as soon\n          *     as we configure tasks at execution time."
            },
            {
                "sha": "d4a5ed9eab1060f601866f931132fe5434a44553",
                "filename": "src/testcases/org/apache/tools/ant/types/CommandlineTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/testcases/org/apache/tools/ant/types/CommandlineTest.java",
                "raw_url": "https://github.com/apache/ant/raw/7db902758895c1c83c8d48efbd4c9780f15e9e17/src/testcases/org/apache/tools/ant/types/CommandlineTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/types/CommandlineTest.java?ref=7db902758895c1c83c8d48efbd4c9780f15e9e17",
                "patch": "@@ -115,9 +115,8 @@ public void testTokenizer() {\n         // what the Unix sh does but causes a lot of problems on DOS\n         // based platforms otherwise\n         s = Commandline.translateCommandline(\"1 2\\\\ 3 4\");\n-        assertEquals(\"case with quotes whitespace\", 4, s.length);\n-        assertEquals(\"Single quotes stripped, double quote included\", \"2\\\\\",\n-                     s[1]);\n+        assertEquals(\"case with quoted whitespace\", 4, s.length);\n+        assertEquals(\"backslash included\", \"2\\\\\", s[1]);\n \n \n         // now to the expected failures"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/5a75c735358493a5eba4c56fcd696dfeda47e8df",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/4f10a1e3b23a3eca01801f07d95b6a320e163a33",
        "message": "Removed possible NullPointerException in <vssget>. Cleaned up JDK\nversion detection in Project.\nSubmitted by:\tJeff Martin <jeff.martin@synamic.co.uk>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267887 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_25",
        "file": [
            {
                "sha": "083ea4a0beae9319b4bd4ff395c401f90066c6e5",
                "filename": "src/main/org/apache/tools/ant/Project.java",
                "status": "modified",
                "additions": 25,
                "deletions": 22,
                "changes": 47,
                "blob_url": "https://github.com/apache/ant/blob/5a75c735358493a5eba4c56fcd696dfeda47e8df/src/main/org/apache/tools/ant/Project.java",
                "raw_url": "https://github.com/apache/ant/raw/5a75c735358493a5eba4c56fcd696dfeda47e8df/src/main/org/apache/tools/ant/Project.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Project.java?ref=5a75c735358493a5eba4c56fcd696dfeda47e8df",
                "patch": "@@ -105,6 +105,28 @@\n \n     private Vector listeners = new Vector();\n \n+    static {\n+\n+        // Determine the Java version by looking at available classes\n+        // java.lang.StrictMath was introduced in JDK 1.3\n+        // java.lang.ThreadLocal was introduced in JDK 1.2\n+        // java.lang.Void was introduced in JDK 1.1\n+        // Count up version until a NoClassDefFoundError ends the try\n+\n+        try {\n+            javaVersion = JAVA_1_0;\n+            Class.forName(\"java.lang.Void\");\n+            javaVersion = JAVA_1_1;\n+            Class.forName(\"java.lang.ThreadLocal\");\n+            javaVersion = JAVA_1_2;\n+            Class.forName(\"java.lang.StrictMath\");\n+            javaVersion = JAVA_1_3;\n+        } catch (ClassNotFoundException cnfe) {\n+            // swallow as we've hit the max class version that\n+            // we have\n+        }\n+    }\n+\n     public Project() {\n     }\n \n@@ -115,8 +137,8 @@ public Project() {\n      * system properties.\n      */\n     public void init() throws BuildException {\n-        detectJavaVersion();\n-\n+        setJavaVersionProperty();\n+        \n         String defs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n \n         try {\n@@ -281,26 +303,7 @@ public static String getJavaVersion() {\n         return javaVersion;\n     }\n \n-    public void detectJavaVersion() {\n-\n-        // Determine the Java version by looking at available classes\n-        // java.lang.StrictMath was introduced in JDK 1.3\n-        // java.lang.ThreadLocal was introduced in JDK 1.2\n-        // java.lang.Void was introduced in JDK 1.1\n-        // Count up version until a NoClassDefFoundError ends the try\n-\n-        try {\n-            javaVersion = JAVA_1_0;\n-            Class.forName(\"java.lang.Void\");\n-            javaVersion = JAVA_1_1;\n-            Class.forName(\"java.lang.ThreadLocal\");\n-            javaVersion = JAVA_1_2;\n-            Class.forName(\"java.lang.StrictMath\");\n-            javaVersion = JAVA_1_3;\n-        } catch (ClassNotFoundException cnfe) {\n-            // swallow as we've hit the max class version that\n-            // we have\n-        }\n+    public void setJavaVersionProperty() {\n         setProperty(\"ant.java.version\", javaVersion);\n \n         // sanity check"
            },
            {
                "sha": "7f312c52463406b3e33249776e71df22c6246ad1",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/5a75c735358493a5eba4c56fcd696dfeda47e8df/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "raw_url": "https://github.com/apache/ant/raw/5a75c735358493a5eba4c56fcd696dfeda47e8df/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=5a75c735358493a5eba4c56fcd696dfeda47e8df",
                "patch": "@@ -89,7 +89,7 @@\n \n     public void init() {\n         p1 = new Project();\n-        p1.detectJavaVersion();\n+        p1.setJavaVersionProperty();\n         p1.addTaskDefinition(\"property\", \n                              (Class)project.getTaskDefinitions().get(\"property\"));\n     }"
            },
            {
                "sha": "b11985ed3009499f641fc93bfc52ae86093c9c18",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/5a75c735358493a5eba4c56fcd696dfeda47e8df/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java",
                "raw_url": "https://github.com/apache/ant/raw/5a75c735358493a5eba4c56fcd696dfeda47e8df/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java?ref=5a75c735358493a5eba4c56fcd696dfeda47e8df",
                "patch": "@@ -146,7 +146,7 @@ public final void setVsspath(String vssPath) {\n      * @return m_vssPath\n      */\n     public String getVsspath() {\n-        return new String(m_vssPath);\n+        return m_vssPath;\n     }\n \n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/813dfa5f81b17b9e33aa7992c65b941f1bac8d15",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/cf07b113a08332dc4a79528f75c570ee96d89bc7",
        "message": "Nested <src> element of <javac> would cause a NullPointerException.\nReported by:\tPaul A Bemowski <pbemowski@z-tel.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267869 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_26",
        "file": [
            {
                "sha": "0a5c877dfd8f6fd6f84e873431d0d527ced0e3f7",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Javac.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/813dfa5f81b17b9e33aa7992c65b941f1bac8d15/src/main/org/apache/tools/ant/taskdefs/Javac.java",
                "raw_url": "https://github.com/apache/ant/raw/813dfa5f81b17b9e33aa7992c65b941f1bac8d15/src/main/org/apache/tools/ant/taskdefs/Javac.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Javac.java?ref=813dfa5f81b17b9e33aa7992c65b941f1bac8d15",
                "patch": "@@ -117,7 +117,7 @@\n      * @return a nexted src element.\n      */\n     public Path createSrc() {\n-        if (src != null) {\n+        if (src == null) {\n             src = new Path(project);\n         }\n         return src;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/4290fbcebd30e74f23b80bba986857b7b35d6035",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/0de273b25b82765ed102c1efbfc06553c3a2736d",
        "message": "fixed NullPointerException in <sql>\nSubmitted by:\tJeff Martin <jeff.martin@synamic.co.uk>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267867 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_27",
        "file": [
            {
                "sha": "fef51c666ad542f540097dfbae5167e80a9ee426",
                "filename": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/4290fbcebd30e74f23b80bba986857b7b35d6035/src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "raw_url": "https://github.com/apache/ant/raw/4290fbcebd30e74f23b80bba986857b7b35d6035/src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/SQLExec.java?ref=4290fbcebd30e74f23b80bba986857b7b35d6035",
                "patch": "@@ -219,14 +219,14 @@ public void execute() throws BuildException {\n             }\n             \n         } catch(IOException e){\n-            if (!autocommit) {\n+            if (!autocommit && conn != null) {\n                 try {\n                     conn.rollback();\n                 } catch (SQLException ex) {}\n             }\n             throw new BuildException(e, location);\n         } catch(SQLException e){\n-            if (!autocommit) {\n+            if (!autocommit && conn != null) {\n                 try {\n                     conn.rollback();\n                 } catch (SQLException ex) {}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d24621d411a4747336fc76f8dcd2910b43b888ca",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/104de0d7d21754b2d49321690b46762b699bdd61",
        "message": "potential NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@793516 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_28",
        "file": [
            {
                "sha": "e7b7a076d00f1fe83ffa9b1e325171006850e59d",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java",
                "raw_url": "https://github.com/apache/ant/raw/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java?ref=d24621d411a4747336fc76f8dcd2910b43b888ca",
                "patch": "@@ -253,7 +253,7 @@ protected synchronized void formatError(String type, Test test,\n         try {\n             resultWriter.write(formatTest(test) + type);\n             resultWriter.newLine();\n-            resultWriter.write(error.getMessage());\n+            resultWriter.write(String.valueOf(error.getMessage()));\n             resultWriter.newLine();\n             String strace = JUnitTestRunner.getFilteredTrace(error);\n             resultWriter.write(strace);"
            },
            {
                "sha": "07c7b7983f7073896cd8b3ac0b5ee3de61f7edb0",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "raw_url": "https://github.com/apache/ant/raw/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java?ref=d24621d411a4747336fc76f8dcd2910b43b888ca",
                "patch": "@@ -1969,13 +1969,13 @@ private static JUnitTest createDummyTestForBatchTest(JUnitTest test) {\n \n     private static void printDual(BufferedWriter w, PrintStream s, String text)\n         throws IOException {\n-        w.write(text);\n+        w.write(String.valueOf(text));\n         s.print(text);\n     }\n \n     private static void printlnDual(BufferedWriter w, PrintStream s, String text)\n         throws IOException {\n-        w.write(text);\n+        w.write(String.valueOf(text));\n         w.newLine();\n         s.println(text);\n     }"
            },
            {
                "sha": "6adae95e81511b9c7691f6289d127ade36236949",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "raw_url": "https://github.com/apache/ant/raw/d24621d411a4747336fc76f8dcd2910b43b888ca/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java?ref=d24621d411a4747336fc76f8dcd2910b43b888ca",
                "patch": "@@ -247,7 +247,7 @@ private void formatError(String type, Test test, Throwable t) {\n             try {\n                 wri.write(type);\n                 wri.newLine();\n-                wri.write(t.getMessage());\n+                wri.write(String.valueOf(t.getMessage()));\n                 wri.newLine();\n                 String strace = JUnitTestRunner.getFilteredTrace(t);\n                 wri.write(strace);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/382f81dea5a40904c564cb5c898bb0248f4aad1f",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/d6cbd609c263fb8872f067d35925e6d4ab167aa9",
        "message": "Avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@534433 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_29",
        "file": [
            {
                "sha": "4ee0af85f6548f20fa49aa3c926aa1b1e1f38a1c",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/382f81dea5a40904c564cb5c898bb0248f4aad1f/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java",
                "raw_url": "https://github.com/apache/ant/raw/382f81dea5a40904c564cb5c898bb0248f4aad1f/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java?ref=382f81dea5a40904c564cb5c898bb0248f4aad1f",
                "patch": "@@ -286,7 +286,8 @@ protected void execP4Command(String command, P4Handler handler) throws BuildExce\n                 try {\n                     handler.stop();\n                 } catch (Exception e) {\n-                    log(e.toString(), Project.MSG_ERR);\n+                    log(\"Error stopping execution framework: \" + e.toString(),\n+                        Project.MSG_ERR);\n                 }\n             }\n "
            },
            {
                "sha": "dd152571e7b98c5534ec610fb51ef4fc95b4f684",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4HandlerAdapter.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/382f81dea5a40904c564cb5c898bb0248f4aad1f/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4HandlerAdapter.java",
                "raw_url": "https://github.com/apache/ant/raw/382f81dea5a40904c564cb5c898bb0248f4aad1f/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4HandlerAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4HandlerAdapter.java?ref=382f81dea5a40904c564cb5c898bb0248f4aad1f",
                "patch": "@@ -73,7 +73,11 @@ public void start() throws BuildException {\n      * @see P4Base#execP4Command(String, P4Handler)\n      */\n     public void stop() {\n+        if (myHandler != null) {\n+            // might never have been started, forfor example ifif p4\n+            // is not on the PATH\n         myHandler.stop();\n+        }\n     }\n \n     // CheckStyle:VisibilityModifier OFF - bc"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/535fd73ec6c7c178a1b25f9d8dedefe10bad4b36",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/991d9d68708265b3c6981411ddf4bdc2682d858d",
        "message": "fix NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273503 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_30",
        "file": [
            {
                "sha": "4835eaf10cee06a61d4a6a07a8cf5236487abe56",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/535fd73ec6c7c178a1b25f9d8dedefe10bad4b36/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "raw_url": "https://github.com/apache/ant/raw/535fd73ec6c7c178a1b25f9d8dedefe10bad4b36/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java?ref=535fd73ec6c7c178a1b25f9d8dedefe10bad4b36",
                "patch": "@@ -682,7 +682,7 @@ private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog)\n         } catch (IOException e) {\n             throw new BuildException(\"Process fork failed.\", e, getLocation());\n         } finally {\n-            if (watchdog.killedProcess()) {\n+            if (watchdog != null && watchdog.killedProcess()) {\n                 logTimeout(feArray, test);\n             }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d2405f4003191f71936d22f956496e8f28035cfa",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/4f98ab89b6dbdd6bb5d3d38d7a3c751282dc2dea",
        "message": "fix NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@270142 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_31",
        "file": [
            {
                "sha": "eea2966741a37ffaab63bdb2d72f2298654d61d8",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Manifest.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/d2405f4003191f71936d22f956496e8f28035cfa/src/main/org/apache/tools/ant/taskdefs/Manifest.java",
                "raw_url": "https://github.com/apache/ant/raw/d2405f4003191f71936d22f956496e8f28035cfa/src/main/org/apache/tools/ant/taskdefs/Manifest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Manifest.java?ref=d2405f4003191f71936d22f956496e8f28035cfa",
                "patch": "@@ -707,7 +707,11 @@ public boolean equals(Object rhs) {\n         }\n \n         Manifest rhsManifest = (Manifest)rhs;\n-        if (!manifestVersion.equals(rhsManifest.manifestVersion)) {\n+        if (manifestVersion == null) {\n+            if (rhsManifest.manifestVersion != null) {\n+                return false;\n+            }\n+        } else if (!manifestVersion.equals(rhsManifest.manifestVersion)) {\n             return false;\n         }\n         if (sections.size() != rhsManifest.sections.size()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/5bc13a2c00b301001776689e9cb443a04bf5bdf8",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/b61c80746dd5df73899390826e197d2656784f91",
        "message": "Prevent on cleanup NPE when test skipped\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588622 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_32",
        "file": [
            {
                "sha": "e36d6838b6eb15e2d7e753b900bd6311c4345a95",
                "filename": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/5bc13a2c00b301001776689e9cb443a04bf5bdf8/src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "raw_url": "https://github.com/apache/ant/raw/5bc13a2c00b301001776689e9cb443a04bf5bdf8/src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java?ref=5bc13a2c00b301001776689e9cb443a04bf5bdf8",
                "patch": "@@ -289,7 +289,9 @@ public void testSymbolicLinkUtilsMethods() throws Exception {\n \n     @After\n     public void tearDown() {\n-        buildRule.executeTarget(\"tearDown\");\n+        if (buildRule.getProject() != null) {\n+            buildRule.executeTarget(\"tearDown\");\n+        }\n     }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/39734fdcece949c4acffdb69416c2407b959ffaf",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/562c27936519fa3bb1636c91f874de5808d5b290",
        "message": "NPE in javadoc when no destdir is specified.  PR 55949\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1555019 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_33",
        "file": [
            {
                "sha": "1acdb84e737295c53f5075bee450c89afec37b19",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/39734fdcece949c4acffdb69416c2407b959ffaf/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/39734fdcece949c4acffdb69416c2407b959ffaf/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=39734fdcece949c4acffdb69416c2407b959ffaf",
                "patch": "@@ -53,6 +53,9 @@ Fixed bugs:\n    exception.\n    Bugzilla Report 53964\n \n+ * <javadoc> caused a NullPointerException when no destdir was set.\n+   Bugzilla Report 55949\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "572720448968a391c7874dad90d52a5070f829c7",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/39734fdcece949c4acffdb69416c2407b959ffaf/src/main/org/apache/tools/ant/taskdefs/Javadoc.java",
                "raw_url": "https://github.com/apache/ant/raw/39734fdcece949c4acffdb69416c2407b959ffaf/src/main/org/apache/tools/ant/taskdefs/Javadoc.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Javadoc.java?ref=39734fdcece949c4acffdb69416c2407b959ffaf",
                "patch": "@@ -2447,7 +2447,7 @@ private void postProcessGeneratedJavadocs() throws IOException {\n         if (!postProcessGeneratedJavadocs) {\n             return;\n         }\n-        if (!destDir.isDirectory()) {\n+        if (destDir != null && !destDir.isDirectory()) {\n             log(\"No javadoc created, no need to post-process anything\",\n                 Project.MSG_VERBOSE);\n             return;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/b8c35567eee957064ae29052eae63ee1b4f9c7aa",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/439545ad279327179a54ef755850acbf0a33e648",
        "message": "NPE in ExpandProperties when input is empty.  PR 53626\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1372266 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_34",
        "file": [
            {
                "sha": "eded0c2bf21ce63737050ea360765b295bf160e3",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/b8c35567eee957064ae29052eae63ee1b4f9c7aa/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/b8c35567eee957064ae29052eae63ee1b4f9c7aa/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=b8c35567eee957064ae29052eae63ee1b4f9c7aa",
                "patch": "@@ -50,6 +50,10 @@ Fixed bugs:\n    handledirsep=\"true\".\n    Bugzilla Report 53399.\n \n+ * <expandproperties> filter caused a NullPointerExcpetion when input\n+   was empty.\n+   Bugzilla Report 53626.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "524a799b1d2fe034a600ee8579e2219066c6c630",
                "filename": "src/main/org/apache/tools/ant/filters/ExpandProperties.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/ant/blob/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/main/org/apache/tools/ant/filters/ExpandProperties.java",
                "raw_url": "https://github.com/apache/ant/raw/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/main/org/apache/tools/ant/filters/ExpandProperties.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/filters/ExpandProperties.java?ref=b8c35567eee957064ae29052eae63ee1b4f9c7aa",
                "patch": "@@ -107,9 +107,13 @@ public Object getProperty(String name) {\n                         }\n                     };\n                 }\n-                buffer = new ParseProperties(project, PropertyHelper.getPropertyHelper(project)\n-                        .getExpanders(), getProperty).parseProperties(data).toString()\n-                        .toCharArray();\n+                Object expanded = new ParseProperties(project, PropertyHelper\n+                                                      .getPropertyHelper(project)\n+                                                      .getExpanders(),\n+                                                      getProperty)\n+                    .parseProperties(data);\n+                buffer = expanded == null ? new char[0]\n+                    : expanded.toString().toCharArray();\n             }\n             if (index < buffer.length) {\n                 return buffer[index++];"
            },
            {
                "sha": "5dff8320c6aa7abf9a2142e3af85b76608b844a6",
                "filename": "src/tests/antunit/filters/expandproperties-test.xml",
                "status": "modified",
                "additions": 15,
                "deletions": 0,
                "changes": 15,
                "blob_url": "https://github.com/apache/ant/blob/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/tests/antunit/filters/expandproperties-test.xml",
                "raw_url": "https://github.com/apache/ant/raw/b8c35567eee957064ae29052eae63ee1b4f9c7aa/src/tests/antunit/filters/expandproperties-test.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/filters/expandproperties-test.xml?ref=b8c35567eee957064ae29052eae63ee1b4f9c7aa",
                "patch": "@@ -74,4 +74,19 @@\n     </au:assertTrue>\n   </target>\n \n+  <target name=\"testEmptyResource\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=53626\">\n+    <au:assertTrue>\n+      <resourcesmatch>\n+        <string value=\"\" />\n+        <concat>\n+          <string value=\"\" />\n+          <filterchain>\n+            <expandproperties />\n+          </filterchain>\n+        </concat>\n+      </resourcesmatch>\n+    </au:assertTrue>\n+  </target>\n+\n </project>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d605afdd5122d55bb5f39829944acbc2271f8474",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/538257ea859749802694e257143fce9d6efbd1b4",
        "message": "RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1297161 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_35",
        "file": [
            {
                "sha": "2061e5f17d46546beab8403eb5f745bc596871ae",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Available.java",
                "status": "modified",
                "additions": 7,
                "deletions": 11,
                "changes": 18,
                "blob_url": "https://github.com/apache/ant/blob/d605afdd5122d55bb5f39829944acbc2271f8474/src/main/org/apache/tools/ant/taskdefs/Available.java",
                "raw_url": "https://github.com/apache/ant/raw/d605afdd5122d55bb5f39829944acbc2271f8474/src/main/org/apache/tools/ant/taskdefs/Available.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Available.java?ref=d605afdd5122d55bb5f39829944acbc2271f8474",
                "patch": "@@ -442,17 +442,13 @@ private boolean checkClass(String classname) {\n                 loader = getProject().createClassLoader(classpath);\n                 loader.setParentFirst(false);\n                 loader.addJavaLibraries();\n-                if (loader != null) {\n-                    try {\n-                        loader.findClass(classname);\n-                    } catch (SecurityException se) {\n-                        // class found but restricted name; this is\n-                        // actually the case we're looking for in JDK 1.3+,\n-                        // so catch the exception and return\n-                        return true;\n-                    }\n-                } else {\n-                    return false;\n+                try {\n+                    loader.findClass(classname);\n+                } catch (SecurityException se) {\n+                    // class found but restricted name; this is\n+                    // actually the case we're looking for in JDK 1.3+,\n+                    // so catch the exception and return\n+                    return true;\n                 }\n             } else if (loader != null) {\n                 loader.loadClass(classname);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/ce81059049a47a2d9da23d84245af9763114cd3f",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/8e1d92a9a014ff290213883c678b2d01bfab9c2c",
        "message": "fix for bug 50217, NPE in ftp chmod\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1032188 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_36",
        "file": [
            {
                "sha": "bd35ada85ffba0d178b51b500661c19aa8533173",
                "filename": "CONTRIBUTORS",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/CONTRIBUTORS",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/CONTRIBUTORS",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/CONTRIBUTORS?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "patch": "@@ -269,6 +269,7 @@ Philip Hourihane\n Phillip Wells\n Pierre Delisle\n Pierre Dittgen\n+riasol\n R Handerson\n Rami Ojares\n Randy Watler"
            },
            {
                "sha": "88f656d0524bef86860d714bd678648f1965bcc2",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "patch": "@@ -192,6 +192,9 @@ Fixed bugs:\n    provided using non-fileset resource collections.\n    Bugzilla Issue 50115.\n \n+*  ftp chmod could throw a NPE.\n+   Bugzilla report 50217.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "8f8879a07563fe7be6ce5611a612b533ce7c0053",
                "filename": "contributors.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/contributors.xml",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/contributors.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/contributors.xml?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "patch": "@@ -1468,4 +1468,8 @@\n     <first>Zdenek</first>\n     <last>Wagner</last>\n   </name>\n+  <name>\n+    <first/>\n+    <last>riasol</last>\n+  </name>\n </contributors>"
            },
            {
                "sha": "405bfa539a3f6b858dd98372e670fb7b08769c6d",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/ce81059049a47a2d9da23d84245af9763114cd3f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "raw_url": "https://github.com/apache/ant/raw/ce81059049a47a2d9da23d84245af9763114cd3f/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java?ref=ce81059049a47a2d9da23d84245af9763114cd3f",
                "patch": "@@ -2102,7 +2102,7 @@ protected void doSiteCommand(FTPClient ftp, String theCMD)\n             myReply = ftp.getReplyStrings();\n \n             for (int x = 0; x < myReply.length; x++) {\n-                if (myReply[x].indexOf(\"200\") == -1) {\n+                if (myReply[x] != null && myReply[x].indexOf(\"200\") == -1) {\n                     log(myReply[x], Project.MSG_WARN);\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/b0d9f8aa0137890a06875525db92bf44decfa512",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/7119b3f030ddaa3e88117fa37aeb17b65cdab485",
        "message": "NPE in Project.setDefault.  PR 49803\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@988095 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_37",
        "file": [
            {
                "sha": "d865037bfc2936c42fcf87ec34418284160d0f48",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/b0d9f8aa0137890a06875525db92bf44decfa512/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/b0d9f8aa0137890a06875525db92bf44decfa512/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=b0d9f8aa0137890a06875525db92bf44decfa512",
                "patch": "@@ -138,6 +138,10 @@ Fixed bugs:\n    from a resource or string explicitly.\n    Bugzilla Report 49587.\n \n+ * Project#setDefault threw an excpetion when null was passed in as\n+   argument, even though the javadoc says, null is a valid value.\n+   Bugzilla Report 49803.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "27f5f3289a2da06653cdc4a2e4e174cb8033c296",
                "filename": "src/main/org/apache/tools/ant/Project.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/b0d9f8aa0137890a06875525db92bf44decfa512/src/main/org/apache/tools/ant/Project.java",
                "raw_url": "https://github.com/apache/ant/raw/b0d9f8aa0137890a06875525db92bf44decfa512/src/main/org/apache/tools/ant/Project.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Project.java?ref=b0d9f8aa0137890a06875525db92bf44decfa512",
                "patch": "@@ -729,7 +729,9 @@ public String getDefaultTarget() {\n      *                      no default target.\n      */\n     public void setDefault(String defaultTarget) {\n-        setUserProperty(MagicNames.PROJECT_DEFAULT_TARGET, defaultTarget);\n+        if (defaultTarget != null) {\n+            setUserProperty(MagicNames.PROJECT_DEFAULT_TARGET, defaultTarget);\n+        }\n         this.defaultTarget = defaultTarget;\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/f8e0dcd65a5263ffe666a7446763c5caa8aa009b",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/94099ccb050ba2897ddef01062ad223120c629f4",
        "message": "Bug 48833 -  NPE in <get>\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@917574 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_38",
        "file": [
            {
                "sha": "1886d2210ec449112972f5a079fddfd2aa4423f6",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=f8e0dcd65a5263ffe666a7446763c5caa8aa009b",
                "patch": "@@ -44,6 +44,9 @@ Fixed bugs:\n *  If <concat>'s first resourcecollection child is a <resources>,\n    any subsequently added child resourcecollection joins the first.\n    Bugzilla Report 48816.        \n+   \n+*  <get> with an invalid URL could trigger an NPE in some JVMs.\n+   Bugzilla Report 48833 \n \n Other changes:\n --------------"
            },
            {
                "sha": "3906e88df826635f254f5de0e29f093ff043b2d0",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Get.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/ant/blob/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/src/main/org/apache/tools/ant/taskdefs/Get.java",
                "raw_url": "https://github.com/apache/ant/raw/f8e0dcd65a5263ffe666a7446763c5caa8aa009b/src/main/org/apache/tools/ant/taskdefs/Get.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Get.java?ref=f8e0dcd65a5263ffe666a7446763c5caa8aa009b",
                "patch": "@@ -658,7 +658,12 @@ private URLConnection openConnection(URL aSource) throws IOException {\n                         .setUseCaches(httpUseCaches);\n             }\n             // connect to the remote site (may take some time)\n-            connection.connect();\n+            try {\n+                connection.connect();\n+            } catch (NullPointerException e) {\n+                //bad URLs can trigger NPEs in some JVMs\n+                throw new BuildException(\"Failed to parse \" + source.toString(), e);\n+            }\n \n             // First check on a 301 / 302 (moved) response (HTTP only)\n             if (connection instanceof HttpURLConnection) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/f00dea8ea73472d2a123aba0bce7b7886462775d",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/37d7a6b6798a55e87f08273bb3b451939bb0dcb1",
        "message": "fix NPE when logging an exception without message.  PR 47623.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@800678 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_39",
        "file": [
            {
                "sha": "d0b4d3bda310a2e6a5b903cd3d302a08d0a95e07",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/f00dea8ea73472d2a123aba0bce7b7886462775d/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/f00dea8ea73472d2a123aba0bce7b7886462775d/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=f00dea8ea73472d2a123aba0bce7b7886462775d",
                "patch": "@@ -420,6 +420,10 @@ Fixed bugs:\n    failed to load.\n    Bugzilla Report 44103.\n \n+ * Logging exceptions without a message would cause a\n+   NullPointerException.\n+   Bugzilla Report 47623.\n+\n Other changes:\n --------------\n  * The get task now also follows redirects from http to https"
            },
            {
                "sha": "8487dbc0a2e29aab9cac6266ee6c5c7ecbdb8aea",
                "filename": "src/main/org/apache/tools/ant/Project.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/f00dea8ea73472d2a123aba0bce7b7886462775d/src/main/org/apache/tools/ant/Project.java",
                "raw_url": "https://github.com/apache/ant/raw/f00dea8ea73472d2a123aba0bce7b7886462775d/src/main/org/apache/tools/ant/Project.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Project.java?ref=f00dea8ea73472d2a123aba0bce7b7886462775d",
                "patch": "@@ -2171,6 +2171,9 @@ protected void fireTaskFinished(Task task, Throwable exception) {\n     private void fireMessageLoggedEvent(BuildEvent event, String message,\n                                         int priority) {\n \n+        if (message == null) {\n+            message = String.valueOf(message);\n+        }\n         if (message.endsWith(StringUtils.LINE_SEP)) {\n             int endIndex = message.length() - StringUtils.LINE_SEP.length();\n             event.setMessage(message.substring(0, endIndex), priority);"
            },
            {
                "sha": "fd4cff15da1a28f188a0b1ce49032b5577433d72",
                "filename": "src/tests/junit/org/apache/tools/ant/ProjectTest.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/f00dea8ea73472d2a123aba0bce7b7886462775d/src/tests/junit/org/apache/tools/ant/ProjectTest.java",
                "raw_url": "https://github.com/apache/ant/raw/f00dea8ea73472d2a123aba0bce7b7886462775d/src/tests/junit/org/apache/tools/ant/ProjectTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/ProjectTest.java?ref=f00dea8ea73472d2a123aba0bce7b7886462775d",
                "patch": "@@ -276,6 +276,14 @@ public void run() {\n         assertTrue(\"Expected logging thread to finish successfully\", done[0]);\n     }\n \n+    /**\n+     * @see https://issues.apache.org/bugzilla/show_bug.cgi?id=47623\n+     */\n+    public void testNullThrowableMessageLog() {\n+        p.log(new Task() {}, null, new Throwable(), Project.MSG_ERR);\n+        // be content if no exception has been thrown\n+    }\n+\n     private class DummyTaskPrivate extends Task {\n         public DummyTaskPrivate() {}\n         public void execute() {}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/9c88ea5b4b3f3e81ca963bc1fe18a5719d1532bd",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/d534f1e1a13cf5182820202aae65688e01aa6182",
        "message": "Original toString would always throw a NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@739577 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_40",
        "file": [
            {
                "sha": "067aa9f161c54e1a1b58af8bb6528edb443119ad",
                "filename": "src/main/org/apache/tools/ant/property/NullReturn.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/9c88ea5b4b3f3e81ca963bc1fe18a5719d1532bd/src/main/org/apache/tools/ant/property/NullReturn.java",
                "raw_url": "https://github.com/apache/ant/raw/9c88ea5b4b3f3e81ca963bc1fe18a5719d1532bd/src/main/org/apache/tools/ant/property/NullReturn.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/property/NullReturn.java?ref=9c88ea5b4b3f3e81ca963bc1fe18a5719d1532bd",
                "patch": "@@ -33,6 +33,6 @@ private NullReturn() {\n      * {@inheritDoc}\n      */\n     public String toString() {\n-        return String.valueOf(null);\n+        return \"null\";\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d6bde1c2c9fe3780f28877f4b772542d63bf07fe",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/543148ca1d5e89008f16eb7de0cfc67f23bddc05",
        "message": "Avoid NPE if database doesn't match expected vendor\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@675911 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_41",
        "file": [
            {
                "sha": "87f4893c6d1a757f261a714eae2d951906492f29",
                "filename": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/d6bde1c2c9fe3780f28877f4b772542d63bf07fe/src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "raw_url": "https://github.com/apache/ant/raw/d6bde1c2c9fe3780f28877f4b772542d63bf07fe/src/main/org/apache/tools/ant/taskdefs/SQLExec.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/SQLExec.java?ref=d6bde1c2c9fe3780f28877f4b772542d63bf07fe",
                "patch": "@@ -436,6 +436,11 @@ public void execute() throws BuildException {\n             t.setSrc(srcFile);\n             t.addText(sqlCommand);\n \n+            if (getConnection() == null) {\n+                // not a valid rdbms\n+                return;\n+            }\n+\n             try {\n                 PrintStream out = System.out;\n                 try {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/14b1d186211e884453211229f2d46fc34d9be0ac",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/771dd677203f6aea1bd040f604f3dac9e90a198b",
        "message": "oops; introduced NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@592514 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_42",
        "file": [
            {
                "sha": "90f32c188581dc6e1c03930b0181d524d246a215",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Touch.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/14b1d186211e884453211229f2d46fc34d9be0ac/src/main/org/apache/tools/ant/taskdefs/Touch.java",
                "raw_url": "https://github.com/apache/ant/raw/14b1d186211e884453211229f2d46fc34d9be0ac/src/main/org/apache/tools/ant/taskdefs/Touch.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Touch.java?ref=14b1d186211e884453211229f2d46fc34d9be0ac",
                "patch": "@@ -291,6 +291,9 @@ protected void touch() throws BuildException {\n             touch(new FileResource(file.getParentFile(), file.getName()),\n                   defaultTimestamp);\n         }\n+        if (resources == null) {\n+            return;\n+        }\n         // deal with the resource collections\n         Iterator iter = resources.iterator();\n         while (iter.hasNext()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/08413ada31e6a9e9dbed3073158d17123d5028e0",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/656c4b15dca26d52034f075bf077fd8c72896a1f",
        "message": "Fix Bug 42397: NPE in <path><files refid>\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@540055 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_43",
        "file": [
            {
                "sha": "394f5debd4040edf15d9d2f812b565c68ec82dcd",
                "filename": "src/main/org/apache/tools/ant/types/resources/Files.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/08413ada31e6a9e9dbed3073158d17123d5028e0/src/main/org/apache/tools/ant/types/resources/Files.java",
                "raw_url": "https://github.com/apache/ant/raw/08413ada31e6a9e9dbed3073158d17123d5028e0/src/main/org/apache/tools/ant/types/resources/Files.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/resources/Files.java?ref=08413ada31e6a9e9dbed3073158d17123d5028e0",
                "patch": "@@ -497,8 +497,10 @@ private synchronized void ensureDirectoryScannerSetup() {\n     }\n \n     private boolean hasPatterns(PatternSet ps) {\n-        return ps.getIncludePatterns(getProject()).length > 0\n-            || ps.getExcludePatterns(getProject()).length > 0;\n+        String[] includePatterns = ps.getIncludePatterns(getProject());\n+        String[] excludePatterns = ps.getExcludePatterns(getProject());\n+        return (includePatterns != null && includePatterns.length > 0)\n+            || (includePatterns != null && excludePatterns.length > 0);\n     }\n \n }"
            },
            {
                "sha": "3107f038474139cc6168faa34563f7e0bcdb9c06",
                "filename": "src/tests/antunit/types/path-test.xml",
                "status": "added",
                "additions": 25,
                "deletions": 0,
                "changes": 25,
                "blob_url": "https://github.com/apache/ant/blob/08413ada31e6a9e9dbed3073158d17123d5028e0/src/tests/antunit/types/path-test.xml",
                "raw_url": "https://github.com/apache/ant/raw/08413ada31e6a9e9dbed3073158d17123d5028e0/src/tests/antunit/types/path-test.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/types/path-test.xml?ref=08413ada31e6a9e9dbed3073158d17123d5028e0",
                "patch": "@@ -0,0 +1,25 @@\n+<project xmlns:au=\"antlib:org.apache.ant.antunit\" default=\"antunit\">\r\n+\r\n+  <import file=\"../antunit-base.xml\" />\r\n+\r\n+  <property name=\"existingFile\" value=\"${basedir}/build.xml\" />\r\n+\r\n+  <files id=\"files\">\r\n+    <include name=\"${existingFile}\" />\r\n+  </files>\r\n+    \r\n+  <target name=\"test-directUse\" description=\"Bug 42397 - works fine\">\r\n+    <path id=\"path\">\r\n+      <files>\r\n+        <include name=\"${existingFile}\" />\r\n+      </files>\r\n+    </path>\r\n+  </target>\r\n+\r\n+  <target name=\"test-refid\" description=\"Bug 42397\">\r\n+    <path id=\"path\">\r\n+      <files refid=\"files\" />\r\n+    </path>\r\n+  </target>\r\n+\r\n+</project>\r"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/e5e76b0db4c2b11d19b976eda4fcca9215e2e6d6",
        "message": "fix NPE in recursive filtering. BZ 41086.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@481041 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_44",
        "file": [
            {
                "sha": "acc8fe6f4994fa702968ea500f2f1f16e56614e3",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
                "patch": "@@ -28,6 +28,9 @@ Fixed bugs:\n * dependset failed if the basedir of a target fileset did not exist.\n   Bugzilla 40916.\n \n+* Recursive filtering encountered NullPointerExceptions under certain\n+  circumstances.  Bugzilla 41086.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "35a2142ef53aa2795b11e18fff93b45adf8b9828",
                "filename": "src/main/org/apache/tools/ant/types/FilterSet.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/main/org/apache/tools/ant/types/FilterSet.java",
                "raw_url": "https://github.com/apache/ant/raw/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/main/org/apache/tools/ant/types/FilterSet.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/FilterSet.java?ref=f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
                "patch": "@@ -581,8 +581,8 @@ private synchronized String replaceTokens(String line, String parent)\n         }\n         passedTokens.addElement(parent);\n         String value = iReplaceTokens(line);\n-        if (value.indexOf(beginToken) == -1 && !duplicateToken) {\n-            duplicateToken = false;\n+        if (value.indexOf(beginToken) == -1 && !duplicateToken\n+                && recurseDepth == 1) {\n             passedTokens = null;\n         } else if (duplicateToken) {\n             // should always be the case..."
            },
            {
                "sha": "23e122377dc6949a1f7a04808d2af6f4d8fc375b",
                "filename": "src/tests/antunit/types/filterset-test.xml",
                "status": "added",
                "additions": 28,
                "deletions": 0,
                "changes": 28,
                "blob_url": "https://github.com/apache/ant/blob/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/tests/antunit/types/filterset-test.xml",
                "raw_url": "https://github.com/apache/ant/raw/f001fcba2bf7e0f1dc60dfc575b10ca8861482c3/src/tests/antunit/types/filterset-test.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/types/filterset-test.xml?ref=f001fcba2bf7e0f1dc60dfc575b10ca8861482c3",
                "patch": "@@ -0,0 +1,28 @@\n+<project xmlns:au=\"antlib:org.apache.ant.antunit\">\n+\n+  <property name=\"br\" value=\"${line.separator}\" />\n+\n+  <target name=\"testRecursionRegression\">\n+    <copy todir=\"${basedir}\">\n+      <string value=\"@a@${br}@b@${br}@c@${br}\" />\n+      <mergemapper to=\"filterset-output.txt\" />\n+      <filterset>\n+        <filter token=\"a\" value=\"aaa\" />\n+        <filter token=\"b\" value=\"bbb\" />\n+        <filter token=\"c\" value=\"@a@:@b@\" />\n+      </filterset>\n+    </copy>\n+\n+    <au:assertTrue>\n+      <resourcesmatch astext=\"true\">\n+        <file file=\"filterset-output.txt\" />\n+        <string value=\"aaa${br}bbb${br}aaa:bbb${br}\" />\n+      </resourcesmatch>\n+    </au:assertTrue>\n+  </target>\n+\n+  <target name=\"tearDown\">\n+    <delete file=\"filterset-output.txt\" />\n+  </target>\n+\n+</project>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/75e6e7f764495e29e7d15f0c40c125f7654616ee",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/91a92f10340b639878efaee4d24776f277f9ac1d",
        "message": "Bugzilla 40847: possible NPE in Jar.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@474481 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_45",
        "file": [
            {
                "sha": "90f80f17375e622a7e513ba53cc2e2d648e73a68",
                "filename": "CONTRIBUTORS",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/CONTRIBUTORS",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/CONTRIBUTORS",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/CONTRIBUTORS?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "patch": "@@ -6,6 +6,7 @@ Alexey Solofnenko\n Andreas Ames\n Andreas Mross\n Andrew Everitt\n+Andrey Urazov\n Anil K. Vijendran\n Anli Shundi\n Anthony Goubard"
            },
            {
                "sha": "3111ea6d8136bf7e3e67b8ce72f1d770f5a48846",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "patch": "@@ -17,6 +17,9 @@ Fixed bugs:\n   take comparison with another CompressedResouce into account.\n   Bugzilla 40949.\n \n+* possible NPE in Jar.java.\n+  Bugzilla 40847\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "f65dc24d05cf6c1cf95c1458a3ca6d07a110b93e",
                "filename": "contributors.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/contributors.xml",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/contributors.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/contributors.xml?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "patch": "@@ -34,6 +34,10 @@\n     <first>Andrew</first>\n     <last>Everitt</last>\n   </name>\n+  <name>\n+    <first>Andrey</first>\n+    <last>Urazov</last>\n+  </name>\n   <name>\n     <first>Anil</first>\n     <middle>K.</middle>"
            },
            {
                "sha": "f58788634185c5eeaffb0136197ce627110a8084",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/75e6e7f764495e29e7d15f0c40c125f7654616ee/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "raw_url": "https://github.com/apache/ant/raw/75e6e7f764495e29e7d15f0c40c125f7654616ee/src/main/org/apache/tools/ant/taskdefs/Jar.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Jar.java?ref=75e6e7f764495e29e7d15f0c40c125f7654616ee",
                "patch": "@@ -526,7 +526,7 @@ private void createIndexList(ZipOutputStream zOut) throws IOException {\n             Manifest.Attribute classpath =\n                 mf.getMainSection().getAttribute(Manifest.ATTRIBUTE_CLASSPATH);\n             String[] cpEntries = null;\n-            if (classpath != null) {\n+            if (classpath != null && classpath.getValue() != null) {\n                 StringTokenizer tok = new StringTokenizer(classpath.getValue(),\n                                                           \" \");\n                 cpEntries = new String[tok.countTokens()];"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/ac78dc16022004312e74b42fbe14b9936341855e",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/873b850f39a26e4911d612c157622751ac9582f9",
        "message": "Bugzilla 36733, NPE when failure in creating parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@469303 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_46",
        "file": [
            {
                "sha": "1ee9995b343642248ca385d34705b4397a2e088c",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/ac78dc16022004312e74b42fbe14b9936341855e/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/ac78dc16022004312e74b42fbe14b9936341855e/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=ac78dc16022004312e74b42fbe14b9936341855e",
                "patch": "@@ -18,6 +18,9 @@ Fixed bugs:\n \n * <javac> fails with NPE when compiling with eclipse ecj 3.1.x.\n   Bugzilla 40839.\n+\n+* JUnitTestRunner had a NPE when unable to create parser, the exception\n+  containing the error did not get reported. Bugzilla 36733.\n   \n Other changes:\n --------------"
            },
            {
                "sha": "51d2f671b6cfc7dacdaa762cb183518ba0c995e9",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/ac78dc16022004312e74b42fbe14b9936341855e/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java",
                "raw_url": "https://github.com/apache/ant/raw/ac78dc16022004312e74b42fbe14b9936341855e/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java?ref=ac78dc16022004312e74b42fbe14b9936341855e",
                "patch": "@@ -288,6 +288,7 @@ public void write(int b) {}\n \n         Test suite = null;\n         Throwable exception = null;\n+        boolean startTestSuiteSuccess = false;\n \n         try {\n \n@@ -368,6 +369,7 @@ public void write(int b) {}\n             long start = System.currentTimeMillis();\n \n             fireStartTestSuite();\n+            startTestSuiteSuccess = true;        \n             if (exception != null) { // had an exception constructing suite\n                 for (int i = 0; i < formatters.size(); i++) {\n                     ((TestListener) formatters.elementAt(i))\n@@ -405,8 +407,10 @@ public void write(int b) {}\n             systemError = null;\n             systemOut.close();\n             systemOut = null;\n-            sendOutAndErr(new String(outStrm.toByteArray()),\n-                          new String(errStrm.toByteArray()));\n+            if (startTestSuiteSuccess) {\n+                sendOutAndErr(new String(outStrm.toByteArray()),\n+                              new String(errStrm.toByteArray()));\n+            }\n         }\n         fireEndTestSuite();\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/da87b9ec602883b50c49714cfd1536507bd257a8",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/a6e993b7aa5d03adba27db8b0dadb9f4356789ae",
        "message": "bugzilla: 40334 possible NPE in TarInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@440461 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_47",
        "file": [
            {
                "sha": "9b120ce9d23269100e71f078c724c18e88f80ea1",
                "filename": "src/main/org/apache/tools/tar/TarInputStream.java",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/da87b9ec602883b50c49714cfd1536507bd257a8/src/main/org/apache/tools/tar/TarInputStream.java",
                "raw_url": "https://github.com/apache/ant/raw/da87b9ec602883b50c49714cfd1536507bd257a8/src/main/org/apache/tools/tar/TarInputStream.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/tar/TarInputStream.java?ref=da87b9ec602883b50c49714cfd1536507bd257a8",
                "patch": "@@ -258,7 +258,11 @@ public TarEntry getNextEntry() throws IOException {\n                 longName.append(new String(buf, 0, length));\n             }\n             getNextEntry();\n-\n+            if (this.currEntry == null) {\n+                // Bugzilla: 40334\n+                // Malformed tar file - long entry name not followed by entry\n+                return null;\n+            }\n             // remove trailing null terminator\n             if (longName.length() > 0\n                 && longName.charAt(longName.length() - 1) == 0) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/8a7b803fb148a2d92f0074479739534a58acc565",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/9d42b05f174699cda1de0ea34f0ddbce6dee3a37",
        "message": "avoid NPE in border-cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@426648 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_48",
        "file": [
            {
                "sha": "36e8c1971a28824f2effe8637bb094071a5ef7bc",
                "filename": "src/main/org/apache/tools/ant/types/PropertySet.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/8a7b803fb148a2d92f0074479739534a58acc565/src/main/org/apache/tools/ant/types/PropertySet.java",
                "raw_url": "https://github.com/apache/ant/raw/8a7b803fb148a2d92f0074479739534a58acc565/src/main/org/apache/tools/ant/types/PropertySet.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/PropertySet.java?ref=8a7b803fb148a2d92f0074479739534a58acc565",
                "patch": "@@ -320,6 +320,9 @@ public Properties getProperties() {\n         for (Iterator iter = names.iterator(); iter.hasNext();) {\n             String name = (String) iter.next();\n             String value = (String) props.get(name);\n+            if (value != null) {\n+                // may be null if a system property has been added\n+                // after the project instance has been initialized\n             if (m != null) {\n                 //map the names\n                 String[] newname = m.mapFileName(name);\n@@ -328,6 +331,7 @@ public Properties getProperties() {\n                 }\n             }\n             properties.setProperty(name, value);\n+            }\n         }\n         return properties;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/0ee5d2c875deac7cabf8056e86c92113d6cb1bf4",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/5d82bbf9a1bea70097a5e70074d36cd37e1979c8",
        "message": "guard against NPE, bugzilla 39648\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@409022 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_49",
        "file": [
            {
                "sha": "3a0f7de3d8e9972d953128ca026ba3af55f783eb",
                "filename": "src/main/org/apache/tools/ant/types/resources/Resources.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/0ee5d2c875deac7cabf8056e86c92113d6cb1bf4/src/main/org/apache/tools/ant/types/resources/Resources.java",
                "raw_url": "https://github.com/apache/ant/raw/0ee5d2c875deac7cabf8056e86c92113d6cb1bf4/src/main/org/apache/tools/ant/types/resources/Resources.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/resources/Resources.java?ref=0ee5d2c875deac7cabf8056e86c92113d6cb1bf4",
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2005 The Apache Software Foundation\n+ * Copyright 2005-2006 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n@@ -207,7 +207,7 @@ public synchronized String toString() {\n         if (isReference()) {\n             return getCheckedRef().toString();\n         }\n-        if (coll.size() == 0) {\n+        if (coll == null || coll.isEmpty()) {\n             return \"\";\n         }\n         StringBuffer sb = new StringBuffer();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/7917d875217ffc9017d54968397a03be5b06a45b",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/5dfc9fa6524211f32349464146215cc6451d415a",
        "message": "#38056: NPE when using presetdef under obscure circumstances.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@359329 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_50",
        "file": [
            {
                "sha": "0d621a252c1c48c0ace5d6e46b6a21057ba5ee22",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "patch": "@@ -67,7 +67,8 @@ Changes that could break older environments:\n \n Fixed bugs:\n -----------\n-* Some potential NullPointerExceptions, Bugzilla Report 37765\n+\n+* Some potential NullPointerExceptions, Bugzilla Reports 37765 and 38056\n \n * Problem when adding multiple filter files, Bugzilla Report 37341\n "
            },
            {
                "sha": "32f77216719d9e89d9923ca9ae3a396bccde0f66",
                "filename": "src/etc/testcases/taskdefs/presetdef.xml",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/src/etc/testcases/taskdefs/presetdef.xml",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/src/etc/testcases/taskdefs/presetdef.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/presetdef.xml?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "patch": "@@ -118,4 +118,13 @@\n     </javac>\n   </target>\n \n+    <target name=\"presetdef-with-nested-element-twice\">\n+        <copy todir=\".\">\n+            <fileset dir=\".\" includes=\"nonexistent\"/>\n+        </copy>\n+        <presetdef name=\"copy\">\n+            <copy verbose=\"true\"/>\n+        </presetdef>\n+    </target>\n+\n </project>"
            },
            {
                "sha": "d5b680d8c7b5b028c0d5152cae364e171cf022e9",
                "filename": "src/main/org/apache/tools/ant/UnknownElement.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/src/main/org/apache/tools/ant/UnknownElement.java",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/src/main/org/apache/tools/ant/UnknownElement.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/UnknownElement.java?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "patch": "@@ -41,7 +41,7 @@\n     /**\n      * Holds the namespace of the element.\n      */\n-    private String namespace;\n+    private String namespace = \"\";\n \n     /**\n      * Holds the namespace qname of the element.\n@@ -111,7 +111,7 @@ public void setNamespace(String namespace) {\n                 getProject());\n             namespace = helper.getCurrentAntlibUri();\n         }\n-        this.namespace = namespace;\n+        this.namespace = namespace == null ? \"\" : namespace;\n     }\n \n     /** Return the qname of the XML element associated with this component."
            },
            {
                "sha": "ca82f7860ec793b93f74817c359302bac7e36384",
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/7917d875217ffc9017d54968397a03be5b06a45b/src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java",
                "raw_url": "https://github.com/apache/ant/raw/7917d875217ffc9017d54968397a03be5b06a45b/src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/PreSetDefTest.java?ref=7917d875217ffc9017d54968397a03be5b06a45b",
                "patch": "@@ -80,6 +80,10 @@ public void testCorrectTaskNameBadEl() {\n             \"correct_taskname_badel\", \"element message\", \"javac doesn't support the\");\n     }\n     \n+    public void testPresetdefWithNestedElementTwice() { // #38056\n+        executeTarget(\"presetdef-with-nested-element-twice\");\n+        executeTarget(\"presetdef-with-nested-element-twice\");\n+    }\n     \n     /**\n      * A test class to check default properties"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/635c23a098a8c7c21b1598dc3be2f5be089b260e",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/74e4c0c477fd3dae50efd43f587d64c148469391",
        "message": "PR 37765: Fixing NPE, defect discovered by Dave Brosius\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@354100 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_51",
        "file": [
            {
                "sha": "f202aa4b4081b76ee33e845f9cc5ee4f020f6e49",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java",
                "status": "modified",
                "additions": 2,
                "deletions": 6,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/635c23a098a8c7c21b1598dc3be2f5be089b260e/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java",
                "raw_url": "https://github.com/apache/ant/raw/635c23a098a8c7c21b1598dc3be2f5be089b260e/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java?ref=635c23a098a8c7c21b1598dc3be2f5be089b260e",
                "patch": "@@ -27,6 +27,7 @@\n import org.apache.tools.ant.taskdefs.LogStreamHandler;\n import org.apache.tools.ant.types.FileSet;\n import org.apache.tools.ant.types.Path;\n+import org.apache.tools.ant.util.FileUtils;\n \n /**\n  * Invokes the Metamata Audit/ Webgain Quality Analyzer on a set of Java files.\n@@ -298,12 +299,7 @@ protected ExecuteStreamHandler createStreamHandler() throws BuildException {\n         } catch (IOException e) {\n             throw new BuildException(e);\n         } finally {\n-            if (out == null) {\n-                try {\n-                    out.close();\n-                } catch (IOException e) {\n-                }\n-            }\n+            FileUtils.close(out);\n         }\n         return handler;\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/74e4c0c477fd3dae50efd43f587d64c148469391",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/54be7a626d4bc7f577c57455b634a6b61da8f352",
        "message": "PR 37765: Fixing NPE thanks to Dave Brosius\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@354099 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_52",
        "file": [
            {
                "sha": "e97f2fd51c3e3e3ee7957c75726687c9b2c62194",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Reopen.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/74e4c0c477fd3dae50efd43f587d64c148469391/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Reopen.java",
                "raw_url": "https://github.com/apache/ant/raw/74e4c0c477fd3dae50efd43f587d64c148469391/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Reopen.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Reopen.java?ref=74e4c0c477fd3dae50efd43f587d64c148469391",
                "patch": "@@ -39,7 +39,7 @@\n      * @throws BuildException if the change parameter is null or empty\n      */\n     public void setToChange(String toChange) throws BuildException {\n-        if (toChange == null && !toChange.equals(\"\")) {\n+        if (toChange == null || toChange.equals(\"\")) {\n             throw new BuildException(\"P4Reopen: tochange cannot be null or empty\");\n         }\n "
            },
            {
                "sha": "e0c24f88e82c6c15cbb0aaa0abe61df599e48b37",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Revert.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/74e4c0c477fd3dae50efd43f587d64c148469391/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Revert.java",
                "raw_url": "https://github.com/apache/ant/raw/74e4c0c477fd3dae50efd43f587d64c148469391/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Revert.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Revert.java?ref=74e4c0c477fd3dae50efd43f587d64c148469391",
                "patch": "@@ -40,7 +40,7 @@\n      * @throws BuildException if the change list is null or empty string\n      */\n     public void setChange(String revertChange) throws BuildException {\n-        if (revertChange == null && !revertChange.equals(\"\")) {\n+        if (revertChange == null || revertChange.equals(\"\")) {\n             throw new BuildException(\"P4Revert: change cannot be null or empty\");\n         }\n "
            },
            {
                "sha": "77dab052cea9b49719c09c670a88e70ecdc5e030",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Sync.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/74e4c0c477fd3dae50efd43f587d64c148469391/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Sync.java",
                "raw_url": "https://github.com/apache/ant/raw/74e4c0c477fd3dae50efd43f587d64c148469391/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Sync.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Sync.java?ref=74e4c0c477fd3dae50efd43f587d64c148469391",
                "patch": "@@ -58,7 +58,7 @@\n      * @throws BuildException if label is null or empty string\n      */\n     public void setLabel(String label) throws BuildException {\n-        if (label == null && !label.equals(\"\")) {\n+        if (label == null || label.equals(\"\")) {\n             throw new BuildException(\"P4Sync: Labels cannot be Null or Empty\");\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/0900e997608a89f3e5937aab0e3f831dc7d8ed35",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/231d01856902f3729b8a0891fe3b124976012328",
        "message": "PR: 35544\n\nAvoid getting NPE on calling close() twice.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278444 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_53",
        "file": [
            {
                "sha": "6a4f0e9de3255d17b1b8af21935c0f8ec0ad9552",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/0900e997608a89f3e5937aab0e3f831dc7d8ed35/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/0900e997608a89f3e5937aab0e3f831dc7d8ed35/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=0900e997608a89f3e5937aab0e3f831dc7d8ed35",
                "patch": "@@ -60,6 +60,9 @@ Changes that could break older environments:\n Fixed bugs:\n -----------\n \n+* Calling close twice on ReaderInputStream gave a nullpointer exception.\n+  Bugzilla Report 35544.\n+\n * Memory leak from IntrospectionHelper.getHelper(Class) in embedded\n   environments. Bugzilla Report 30162.\n "
            },
            {
                "sha": "04f3df7b56354fdb5ef16e5a81dec8ee3cb4e44f",
                "filename": "src/main/org/apache/tools/ant/util/ReaderInputStream.java",
                "status": "modified",
                "additions": 6,
                "deletions": 4,
                "changes": 10,
                "blob_url": "https://github.com/apache/ant/blob/0900e997608a89f3e5937aab0e3f831dc7d8ed35/src/main/org/apache/tools/ant/util/ReaderInputStream.java",
                "raw_url": "https://github.com/apache/ant/raw/0900e997608a89f3e5937aab0e3f831dc7d8ed35/src/main/org/apache/tools/ant/util/ReaderInputStream.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ReaderInputStream.java?ref=0900e997608a89f3e5937aab0e3f831dc7d8ed35",
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2004 The Apache Software Foundation.\n+ * Copyright 2004-2005 The Apache Software Foundation.\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n@@ -196,8 +196,10 @@ public synchronized void reset() throws IOException {\n      * @exception IOException if the original StringReader fails to be closed\n      */\n     public synchronized void close() throws IOException {\n-        in.close();\n-        slack = null;\n-        in = null;\n+        if (in != null) {\n+            in.close();\n+            slack = null;\n+            in = null;\n+        }\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/c09b4ad628172a350f73fe99bdc56f33e4008d59",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/3d0a16ece7d56d550d94048a2e7e1986c064e3a7",
        "message": "propertyset threw NPE with nested, mapped propertysets.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278290 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_54",
        "file": [
            {
                "sha": "517d8cec96d1db0ff7eccb9b43ed88a944a21ad3",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "patch": "@@ -234,6 +234,8 @@ Fixed bugs:\n * <unzip> and <untar> could leave file handles open on invalid\n   archives.  Bugzilla report 34893.\n \n+* propertyset threw NPE with nested, mapped propertysets.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "3c2d2d8e35de40b321acdfd21cbb2e0493339cb5",
                "filename": "src/etc/testcases/types/propertyset.xml",
                "status": "modified",
                "additions": 39,
                "deletions": 0,
                "changes": 39,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/etc/testcases/types/propertyset.xml",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/etc/testcases/types/propertyset.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/types/propertyset.xml?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "patch": "@@ -52,4 +52,43 @@\n       exp=\"barB=BarB, fooA=FooA\"\n       got=\"${toString:my-set}\"/>\n   </target>\n+\n+  <target name=\"nested-mapped\">\n+    <propertyset id=\"nested-mapped\">\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-foo\"/>\n+        <globmapper from=\"foo*\" to=\"boo*\" />\n+      </propertyset>\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-bar\"/>\n+        <globmapper from=\"bar*\" to=\"far*\" />\n+      </propertyset>\n+    </propertyset>\n+    <expect.equals\n+      test=\"nested mapped propertysets\"\n+      exp=\"booA=FooA, farB=BarB\"\n+      got=\"${toString:nested-mapped}\"/>\n+  </target>\n+\n+  <target name=\"nested-mapped-mapped\">\n+    <propertyset id=\"nested-mapped-mapped\">\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-foo\"/>\n+        <globmapper from=\"foo*\" to=\"boo*\" />\n+      </propertyset>\n+      <propertyset>\n+        <propertyset refid=\"properties-starting-with-bar\"/>\n+        <globmapper from=\"bar*\" to=\"far*\" />\n+      </propertyset>\n+      <mapper>\n+        <globmapper from=\"boo*\" to=\"hoo*\" />\n+        <globmapper from=\"far*\" to=\"near*\" />\n+      </mapper>\n+    </propertyset>\n+    <expect.equals\n+      test=\"nested mapped propertysets\"\n+      exp=\"hooA=FooA, nearB=BarB\"\n+      got=\"${toString:nested-mapped-mapped}\"/>\n+  </target>\n+\n </project>"
            },
            {
                "sha": "4b6f19a366c3d9a11feffbe6970a3df6e684b16a",
                "filename": "src/main/org/apache/tools/ant/types/PropertySet.java",
                "status": "modified",
                "additions": 8,
                "deletions": 14,
                "changes": 22,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/main/org/apache/tools/ant/types/PropertySet.java",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/main/org/apache/tools/ant/types/PropertySet.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/PropertySet.java?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "patch": "@@ -282,6 +282,12 @@ public Properties getProperties() {\n         Hashtable props =\n             prj == null ? getAllSystemProperties() : prj.getProperties();\n \n+        //quick & dirty, to make nested mapped p-sets work:\n+        for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {\n+            PropertySet set = (PropertySet) e.nextElement();\n+            props.putAll(set.getProperties());\n+        }\n+\n         if (getDynamic() || cachedNames == null) {\n             names = new HashSet();\n             addPropertyNames(names, props);\n@@ -382,20 +388,7 @@ private void addPropertyNames(Set names, Hashtable properties) {\n      * @return the referenced PropertySet.\n      */\n     protected PropertySet getRef() {\n-        if (!isChecked()) {\n-            Stack stk = new Stack();\n-            stk.push(this);\n-            dieOnCircularReference(stk, getProject());\n-        }\n-\n-        Object o = getRefid().getReferencedObject(getProject());\n-        if (!(o instanceof PropertySet)) {\n-            String msg = getRefid().getRefId()\n-                + \" doesn\\'t denote a propertyset\";\n-            throw new BuildException(msg);\n-        } else {\n-            return (PropertySet) o;\n-        }\n+        return (PropertySet) getCheckedRef(PropertySet.class, \"propertyset\");\n     }\n \n     /**\n@@ -469,4 +462,5 @@ public String toString() {\n         }\n         return b.toString();\n     }\n+\n }"
            },
            {
                "sha": "28164e7c4fa9bcc0cdaa219971a3661fd9be46ba",
                "filename": "src/testcases/org/apache/tools/ant/types/PropertySetTest.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/testcases/org/apache/tools/ant/types/PropertySetTest.java",
                "raw_url": "https://github.com/apache/ant/raw/c09b4ad628172a350f73fe99bdc56f33e4008d59/src/testcases/org/apache/tools/ant/types/PropertySetTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/types/PropertySetTest.java?ref=c09b4ad628172a350f73fe99bdc56f33e4008d59",
                "patch": "@@ -36,4 +36,12 @@ public void setUp() {\n     public void testReferenceToTwoReferences() {\n         executeTarget(\"reference-to-two-references\");\n     }\n+\n+    public void testNestedMapped() {\n+        executeTarget(\"nested-mapped\");\n+    }\n+\n+    public void testNestedMappedMapped() {\n+        executeTarget(\"nested-mapped-mapped\");\n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/8522387c40027238decd43f7e5028cca491bf26c",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/fddcc94a0c3e2f1687b492627dc5c2e0b6e747c0",
        "message": "fix NPE reported by Curt Arnold\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278239 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_55",
        "file": [
            {
                "sha": "d7b21180425ba1e9055e89404b21f7bf08e7deb5",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/8522387c40027238decd43f7e5028cca491bf26c/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/8522387c40027238decd43f7e5028cca491bf26c/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=8522387c40027238decd43f7e5028cca491bf26c",
                "patch": "@@ -204,6 +204,9 @@ Fixed bugs:\n \n * DirectoryScanner.slowScan() was broken. Bugzilla report 34722.\n \n+* DirectoryScanner.scan() could throw a NullPointerException on\n+  case-insensitive filesystems (read Windows or MacOS X).\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "0bf8267adec2a21ea0930d966a4ec3d3009525e0",
                "filename": "src/main/org/apache/tools/ant/DirectoryScanner.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/8522387c40027238decd43f7e5028cca491bf26c/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "raw_url": "https://github.com/apache/ant/raw/8522387c40027238decd43f7e5028cca491bf26c/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/DirectoryScanner.java?ref=8522387c40027238decd43f7e5028cca491bf26c",
                "patch": "@@ -872,7 +872,7 @@ private void checkIncludePatterns() {\n                 }\n                 if ((myfile == null || !myfile.exists()) && !isCaseSensitive()) {\n                     File f = findFile(basedir, currentelement, false);\n-                    if (f.exists()) {\n+                    if (f != null && f.exists()) {\n                         // adapt currentelement to the case we've\n                         // actually found\n                         currentelement = FILE_UTILS.removeLeadingPath(basedir,"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/9238ee886509e3ab375a3880a0b64f912ff3b4ea",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/d761a89b623f3f8665a5f60679bb10f45ab23e45",
        "message": "NPE in cleanup on Windows (all non-Unix?).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276626 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_56",
        "file": [
            {
                "sha": "57d7ae8d9972865530b5fdb60806c3d05a5163a1",
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/9238ee886509e3ab375a3880a0b64f912ff3b4ea/src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "raw_url": "https://github.com/apache/ant/raw/9238ee886509e3ab375a3880a0b64f912ff3b4ea/src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java?ref=9238ee886509e3ab375a3880a0b64f912ff3b4ea",
                "patch": "@@ -182,7 +182,9 @@ public void testRecreate() {\n     }\n \n     public void tearDown() {\n-        executeTarget(\"teardown\");\n+        if (supportsSymlinks) {\n+            executeTarget(\"teardown\");\n+        }\n     }\n \n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/a679a5bbce605a1e4326d56030baeecb3a1bf4b7",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/3838c6ba287baf4bb3566ed47b0c99840b7ebba8",
        "message": "Prevent NPE in method CheckRemoteSensitivity\nPR: 24440\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275615 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_57",
        "file": [
            {
                "sha": "2781499f82b8504cd66d102b5d609e674910b70f",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/a679a5bbce605a1e4326d56030baeecb3a1bf4b7/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "raw_url": "https://github.com/apache/ant/raw/a679a5bbce605a1e4326d56030baeecb3a1bf4b7/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java?ref=a679a5bbce605a1e4326d56030baeecb3a1bf4b7",
                "patch": "@@ -561,6 +561,9 @@ private void clearCaches() {\n             return listFiles(directory, true);\n         }\n         private void checkRemoteSensitivity(FTPFile[] array, String directory) {\n+            if (array == null) {\n+                return;\n+            }\n             boolean candidateFound = false;\n             String target = null;\n             for (int icounter = 0; icounter < array.length; icounter++) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/eba9a3c2d98d12180af9eca571480f1d58af6361",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/e532d834451124dce54c907ce17725b02ae981e4",
        "message": "Fix NPE, PR: 24344\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275602 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_58",
        "file": [
            {
                "sha": "88ecba0858addc5672af3ef0b87892c08240348e",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/eba9a3c2d98d12180af9eca571480f1d58af6361/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java",
                "raw_url": "https://github.com/apache/ant/raw/eba9a3c2d98d12180af9eca571480f1d58af6361/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java?ref=eba9a3c2d98d12180af9eca571480f1d58af6361",
                "patch": "@@ -559,6 +559,7 @@ public int executeAsForked(CommandlineJava commandline,\n             // we have to find a cleaner way to put this output\n         }\n \n+        if (getSourcespath() != null) {\n         // This is deprecated - use classespath in the future\n         String[] sourcesPath = getSourcespath().list();\n         for (int i = 0; i < sourcesPath.length; i++) {\n@@ -571,7 +572,9 @@ public int executeAsForked(CommandlineJava commandline,\n             }\n             commandline.createArgument().setValue(f.getPath());\n         }\n+        }\n \n+        if (getClassespath() != null) {\n         // This is the new way - use classespath - code is the same for now\n         String[] classesPath = getClassespath().list();\n         for (int i = 0; i < classesPath.length; i++) {\n@@ -583,6 +586,7 @@ public int executeAsForked(CommandlineJava commandline,\n             }\n             commandline.createArgument().setValue(f.getPath());\n         }\n+        }\n \n         Execute execute = new Execute(new LogStreamHandler(this,\n             Project.MSG_INFO, Project.MSG_WARN), watchdog);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/dc8100463d3c5fbbab209d02d927d1da512ba796",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/b66c87eff7277caeedb01e50a986b70a0d0687aa",
        "message": "Fix potential NPEs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274920 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_59",
        "file": [
            {
                "sha": "1b5fbc2d93365066bb858638f9c02d5b14c813e7",
                "filename": "src/main/org/apache/tools/ant/taskdefs/KeySubst.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/taskdefs/KeySubst.java",
                "raw_url": "https://github.com/apache/ant/raw/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/taskdefs/KeySubst.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/KeySubst.java?ref=dc8100463d3c5fbbab209d02d927d1da512ba796",
                "patch": "@@ -1,7 +1,7 @@\n /*\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2000,2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2000,2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -123,7 +123,7 @@ public void execute() throws BuildException {\n                     // ignore\n                 }\n             }\n-            if (bw != null) {\n+            if (br != null) {\n                 try {\n                     br.close();\n                 } catch (IOException e) {"
            },
            {
                "sha": "79b807bde06a87d118eb0c31ff35551f248f0b0b",
                "filename": "src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/ant/blob/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java?ref=dc8100463d3c5fbbab209d02d927d1da512ba796",
                "patch": "@@ -172,10 +172,13 @@ public boolean isSelected(File basedir, String filename, File file) {\n         } catch (IOException ioe) {\n             throw new BuildException(\"Could not read file \" + filename);\n         } finally {\n-            try {\n-                in.close();\n-            } catch (Exception e) {\n-                throw new BuildException(\"Could not close file \" + filename);\n+            if (in != null) {\n+                try {\n+                    in.close();\n+                } catch (Exception e) {\n+                    throw new BuildException(\"Could not close file \" \n+                                             + filename);\n+                }\n             }\n         }\n     }"
            },
            {
                "sha": "1b12b5ffd902c3840ecdf3e8fb16da94173cb71d",
                "filename": "src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/ant/blob/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/dc8100463d3c5fbbab209d02d927d1da512ba796/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java?ref=dc8100463d3c5fbbab209d02d927d1da512ba796",
                "patch": "@@ -214,10 +214,13 @@ public boolean isSelected(File basedir, String filename, File file) {\n         } catch (IOException ioe) {\n             throw new BuildException(\"Could not read file \" + filename);\n         } finally {\n-            try {\n-                in.close();\n-            } catch (Exception e) {\n-                throw new BuildException(\"Could not close file \" + filename);\n+            if (in != null) {\n+                try {\n+                    in.close();\n+                } catch (Exception e) {\n+                    throw new BuildException(\"Could not close file \" \n+                                             + filename);\n+                }\n             }\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/bb1f1c678b69a5a0df6c94889146a0f1b95bfca0",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/6528412d219b05ca763dc198bd3e7d75754e57c5",
        "message": "Avoid NPE if input failed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274178 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_60",
        "file": [
            {
                "sha": "752b3d7cf97497e210b0b4cba1c5bfc0a074d58c",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Input.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/bb1f1c678b69a5a0df6c94889146a0f1b95bfca0/src/main/org/apache/tools/ant/taskdefs/Input.java",
                "raw_url": "https://github.com/apache/ant/raw/bb1f1c678b69a5a0df6c94889146a0f1b95bfca0/src/main/org/apache/tools/ant/taskdefs/Input.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Input.java?ref=bb1f1c678b69a5a0df6c94889146a0f1b95bfca0",
                "patch": "@@ -133,7 +133,7 @@ public Input () {\n     }\n \n     /**\n-     * Actual test method executed by jakarta-ant.\n+     * Actual method executed by jakarta-ant.\n      * @exception BuildException\n      */\n     public void execute () throws BuildException {\n@@ -152,7 +152,7 @@ public void execute () throws BuildException {\n             && defaultvalue != null) {\n             value = defaultvalue;\n         }\n-        if (addproperty != null) {\n+        if (addproperty != null && value != null) {\n             getProject().setNewProperty(addproperty, value);\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/abd749ac59547f30196666617311f6737bf4369d",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/1967c958ff5363f25742a8b7687a0c9dddcfa38a",
        "message": "Fix NPE in <concat>.\n\nPR: 14310\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273518 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_61",
        "file": [
            {
                "sha": "045628d35f9716a2d0a2e978fdb0002bc36c255c",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=abd749ac59547f30196666617311f6737bf4369d",
                "patch": "@@ -42,6 +42,9 @@ Fixed bugs:\n * <replace> would count some internal character replacements when\n   reporting the number of replaced tokens.\n \n+* <concat> would cause an exception if a <filelist> pointed to files\n+  that do not exist.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "a38ae899b6aa6b1749758c53d39a2cbf5d5e83c7",
                "filename": "src/etc/testcases/taskdefs/concat.xml",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/src/etc/testcases/taskdefs/concat.xml",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/src/etc/testcases/taskdefs/concat.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/concat.xml?ref=abd749ac59547f30196666617311f6737bf4369d",
                "patch": "@@ -31,4 +31,10 @@\n     <concat>Hello, ${world}!</concat>\n   </target>\n \n+  <target name=\"test6\">\n+    <concat destfile=\"TESTDEST\" append=\"true\">\n+      <filelist dir=\"${basedir}\" files=\"thisfiledoesnotexist\"/>\n+    </concat>\n+  </target>\n+\n </project>"
            },
            {
                "sha": "fcf90b23d1b39fc94fca689f75d047a0940ffddb",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Concat.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/src/main/org/apache/tools/ant/taskdefs/Concat.java",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/src/main/org/apache/tools/ant/taskdefs/Concat.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Concat.java?ref=abd749ac59547f30196666617311f6737bf4369d",
                "patch": "@@ -298,9 +298,8 @@ public void reset() {\n     private void catFiles(File base, String[] files) {\n \n         // First, create a list of absolute paths for the input files.\n-        final int len = files.length;\n-        String[] input = new String[len];\n-        for (int i = 0; i < len; i++) {\n+        Vector inputFileNames = new Vector();\n+        for (int i = 0; i < files.length; i++) {\n \n             File current = new File(base, files[i]);\n \n@@ -314,9 +313,13 @@ private void catFiles(File base, String[] files) {\n                 continue;\n             }\n \n-            input[i] = current.getAbsolutePath();\n+            inputFileNames.addElement(current.getAbsolutePath());\n         }\n \n+        final int len = inputFileNames.size();\n+        String[] input = new String[len];\n+        inputFileNames.copyInto(input);\n+\n         // Next, perform the concatenation.\n         if (encoding == null) {\n             OutputStream os = null;"
            },
            {
                "sha": "3f107036e37a5783f6323ca6c64dca2e521d68de",
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/abd749ac59547f30196666617311f6737bf4369d/src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java",
                "raw_url": "https://github.com/apache/ant/raw/abd749ac59547f30196666617311f6737bf4369d/src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java?ref=abd749ac59547f30196666617311f6737bf4369d",
                "patch": "@@ -161,4 +161,9 @@ public void test5() {\n         expectLog(\"test5\", \"Hello, World!\");\n     }\n \n+    public void test6() {\n+        expectLogContaining(\"test6\", \n+                            \"src/etc/testcases/taskdefs/thisfiledoesnotexist does not exist.\");\n+    }\n+\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/f37911b4e528ec77ebc06cd815da76bae5442858",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/55adbd06c9bd8887455a28f102e14797756bd9d8",
        "message": "fix possible (but unlikely) NPE in <antcall>, add some docs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272333 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_62",
        "file": [
            {
                "sha": "74aecedafce9f205e99382e78e7d21c0d0c68a56",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "raw_url": "https://github.com/apache/ant/raw/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=f37911b4e528ec77ebc06cd815da76bae5442858",
                "patch": "@@ -157,7 +157,7 @@ public void init() {\n     }\n \n     /**\n-     * Called in execute or createProperty of newProject is null.\n+     * Called in execute or createProperty if newProject is null.\n      *\n      * <p>This can happen if the same instance of this task is run\n      * twice as newProject is set to null at the end of execute (to"
            },
            {
                "sha": "56310db825e2067a89b2b53439b71c0aca10d17a",
                "filename": "src/main/org/apache/tools/ant/taskdefs/CallTarget.java",
                "status": "modified",
                "additions": 33,
                "deletions": 9,
                "changes": 42,
                "blob_url": "https://github.com/apache/ant/blob/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/CallTarget.java",
                "raw_url": "https://github.com/apache/ant/raw/f37911b4e528ec77ebc06cd815da76bae5442858/src/main/org/apache/tools/ant/taskdefs/CallTarget.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/CallTarget.java?ref=f37911b4e528ec77ebc06cd815da76bae5442858",
                "patch": "@@ -85,8 +85,9 @@\n \n     private Ant callee;\n     private String subTarget;\n-    private boolean initialized = false;\n+    // must match the default value of Ant#inheritAll\n     private boolean inheritAll = true;\n+    // must match the default value of Ant#inheritRefs\n     private boolean inheritRefs = false;\n \n     /**\n@@ -96,7 +97,7 @@\n      **/\n     public void setInheritAll(boolean inherit) {\n        inheritAll = inherit;\n-    } //-- setInheritAll\n+    }\n \n     /**\n      * set the inherit refs flag\n@@ -111,12 +112,11 @@ public void setInheritRefs(boolean inheritRefs) {\n      * configuring it's by calling its own init method.\n      */\n     public void init() {\n-        callee = (Ant) project.createTask(\"ant\");\n-        callee.setOwningTarget(target);\n+        callee = (Ant) getProject().createTask(\"ant\");\n+        callee.setOwningTarget(getOwningTarget());\n         callee.setTaskName(getTaskName());\n-        callee.setLocation(location);\n+        callee.setLocation(getLocation());\n         callee.init();\n-        initialized = true;\n     }\n \n     /**\n@@ -125,7 +125,7 @@ public void init() {\n      * execute\n      */\n     public void execute() throws BuildException {\n-        if (!initialized) {\n+        if (callee == null) {\n             init();\n         }\n         \n@@ -134,30 +134,49 @@ public void execute() throws BuildException {\n                                      location);\n         }\n         \n-        callee.setDir(project.getBaseDir());\n-        callee.setAntfile(project.getProperty(\"ant.file\"));\n+        callee.setDir(getProject().getBaseDir());\n+        callee.setAntfile(getProject().getProperty(\"ant.file\"));\n         callee.setTarget(subTarget);\n         callee.setInheritAll(inheritAll);\n         callee.setInheritRefs(inheritRefs);\n         callee.execute();\n     }\n \n+    /**\n+     * Create a nested param element.\n+     */\n     public Property createParam() {\n+        if (callee == null) {\n+            init();\n+        }\n         return callee.createProperty();\n     }\n \n     /** \n      * create a reference element that identifies a data type that\n      * should be carried over to the new project.\n+     *\n+     * @since Ant 1.5\n      */\n     public void addReference(Ant.Reference r) {\n+        if (callee == null) {\n+            init();\n+        }\n         callee.addReference(r);\n     }\n \n+    /**\n+     * Sets the target attribute, required.\n+     */\n     public void setTarget(String target) {\n         subTarget = target;\n     }\n \n+    /**\n+     * Pass output sent to System.out to the new project.\n+     *\n+     * @since Ant 1.5\n+     */\n     protected void handleOutput(String line) {\n         if (callee != null) {\n             callee.handleOutput(line);\n@@ -167,6 +186,11 @@ protected void handleOutput(String line) {\n         }\n     }\n     \n+    /**\n+     * Pass output sent to System.err to the new project.\n+     *\n+     * @since Ant 1.5\n+     */\n     protected void handleErrorOutput(String line) {\n         if (callee != null) {\n             callee.handleErrorOutput(line);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/25ee1c57c04791c959aeabae79472400f3db1390",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/73b65edb324b4fe827964111e838002ca8d6d5d5",
        "message": "Fix NPE when Jar does not contain a typelib descriptor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@271092 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_63",
        "file": [
            {
                "sha": "2f7bce309867e5dfae91d187b79f133903a3d482",
                "filename": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/25ee1c57c04791c959aeabae79472400f3db1390/proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java",
                "raw_url": "https://github.com/apache/ant/raw/25ee1c57c04791c959aeabae79472400f3db1390/proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java?ref=25ee1c57c04791c959aeabae79472400f3db1390",
                "patch": "@@ -124,6 +124,7 @@ public void loadDescriptors( URL jarUrl )\n             {\n                 // Ignore - this happens when jarUrl != null and the Jar does\n                 // not contain a type descriptor\n+                continue;\n             }\n \n             descriptors.add( handler.getConfiguration() );"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/198880a644437e0cfb31cb65ee56c3d2d1b2d858",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/5f35fa88d364a6a96e0b8fe16a291a3c56924812",
        "message": "Avoid NPE's - seen when running JUnit on Win2K\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269443 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_64",
        "file": [
            {
                "sha": "4129ce25d3a220035f93d0dd60075d98b1b4036c",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/198880a644437e0cfb31cb65ee56c3d2d1b2d858/src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "raw_url": "https://github.com/apache/ant/raw/198880a644437e0cfb31cb65ee56c3d2d1b2d858/src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Execute.java?ref=198880a644437e0cfb31cb65ee56c3d2d1b2d858",
                "patch": "@@ -627,7 +627,7 @@ public Process exec(Project project, String[] cmd, String[] env) throws IOExcept\n         public Process exec(Project project, String[] cmd, String[] env, File workingDir) throws IOException\n         {\n             File commandDir = workingDir;\n-            if ( workingDir == null ) {\n+            if ( workingDir == null && project != null ) {\n                 commandDir = project.getBaseDir();\n             }\n \n@@ -712,7 +712,7 @@ public Process exec(Project project, String[] cmd, String[] env, File workingDir\n \n             // Build the command\n             File commandDir = workingDir;\n-            if ( workingDir == null ) {\n+            if ( workingDir == null && project != null ) {\n                 commandDir = project.getBaseDir();\n             }\n "
            },
            {
                "sha": "cb8ccf503fe9593bb2123254c1776ef574392df3",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/198880a644437e0cfb31cb65ee56c3d2d1b2d858/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "raw_url": "https://github.com/apache/ant/raw/198880a644437e0cfb31cb65ee56c3d2d1b2d858/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java?ref=198880a644437e0cfb31cb65ee56c3d2d1b2d858",
                "patch": "@@ -488,9 +488,9 @@ private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog) throws Bui\n \n         Execute execute = new Execute(new LogStreamHandler(this, Project.MSG_INFO, Project.MSG_WARN), watchdog);\n         execute.setCommandline(cmd.getCommandline());\n+        execute.setAntRun(project);\n         if (dir != null) {\n             execute.setWorkingDirectory(dir);\n-            execute.setAntRun(project);\n         }\n \n         log(\"Executing: \"+cmd.toString(), Project.MSG_VERBOSE);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/3193a54aacba612c7df0c0b1d9d2466e113e8556",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/d040818b19cded24629e8f5cf6af6c2621ab4916",
        "message": "Fix stupid NPE introduced with my ZIP changes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268961 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_65",
        "file": [
            {
                "sha": "2d245dbad656f161365509e1b3b4392dd2ad6541",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/3193a54aacba612c7df0c0b1d9d2466e113e8556/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "raw_url": "https://github.com/apache/ant/raw/3193a54aacba612c7df0c0b1d9d2466e113e8556/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=3193a54aacba612c7df0c0b1d9d2466e113e8556",
                "patch": "@@ -278,11 +278,13 @@ protected void addZipEntries(ZipFileSet fs, DirectoryScanner ds,\n         File zipSrc = fs.getSrc();\n \n         ZipEntry entry;\n+        java.util.zip.ZipEntry origEntry;\n         ZipInputStream in = null;\n         try {\n             in = new ZipInputStream(new FileInputStream(zipSrc));\n \n-            while ((entry = new ZipEntry(in.getNextEntry())) != null) {\n+            while ((origEntry = in.getNextEntry()) != null) {\n+                entry = new ZipEntry(origEntry);\n                 String vPath = entry.getName();\n                 if (zipScanner.match(vPath)) {\n                     addParentDirs(null, vPath, zOut, prefix);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/bc27fce2a42366b92093ad1f276b04d13bf9c372",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/7fc63c89ac9ecc5e05dfc1240646e96d056e3b1c",
        "message": "Fix for NPE when getClasspath is called before setRmic\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268855 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_66",
        "file": [
            {
                "sha": "2759e2aeb8f9893b04a0736709834fa45da6acbd",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Rmic.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/bc27fce2a42366b92093ad1f276b04d13bf9c372/src/main/org/apache/tools/ant/taskdefs/Rmic.java",
                "raw_url": "https://github.com/apache/ant/raw/bc27fce2a42366b92093ad1f276b04d13bf9c372/src/main/org/apache/tools/ant/taskdefs/Rmic.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Rmic.java?ref=bc27fce2a42366b92093ad1f276b04d13bf9c372",
                "patch": "@@ -366,6 +366,9 @@ public void execute() throws BuildException {\n \n         String compiler = project.getProperty(\"build.rmic\");\n         RmicAdapter adapter = RmicAdapterFactory.getRmic(compiler, this );\n+            \n+        // now we need to populate the compiler adapter\n+        adapter.setRmic( this );\n \n         Path classpath = adapter.getClasspath();\n         loader = new AntClassLoader(project, classpath);\n@@ -388,9 +391,6 @@ public void execute() throws BuildException {\n             log(\"RMI Compiling \" + fileCount +\n                 \" class\"+ (fileCount > 1 ? \"es\" : \"\")+\" to \" + baseDir, \n                 Project.MSG_INFO);\n-            \n-            // now we need to populate the compiler adapter\n-            adapter.setRmic( this );\n \n             // finally, lets execute the compiler!!\n             if (!adapter.execute()) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/14440efdc9c9554d9aa53d6d08e78ea80d799215",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/3a3312cb529e779a359bffef7180f3334daa418d",
        "message": "added patch by mariusz to fix NPE in UpToDate task\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268373 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_67",
        "file": [
            {
                "sha": "9574c9abbe9685823826cd30ca8e21468f7f9c2b",
                "filename": "src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/14440efdc9c9554d9aa53d6d08e78ea80d799215/src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "raw_url": "https://github.com/apache/ant/raw/14440efdc9c9554d9aa53d6d08e78ea80d799215/src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/UpToDate.java?ref=14440efdc9c9554d9aa53d6d08e78ea80d799215",
                "patch": "@@ -162,10 +162,10 @@ protected boolean scanDir(File srcDir, String files[]) {\n         if (mapperElement == null) {\n             MergingMapper mm = new MergingMapper();\n             mm.setTo(_targetFile.getAbsolutePath());\n+            mapper = mm;\n         } else {\n             mapper = mapperElement.getImplementation();\n         }\n-        \n         return sfs.restrict(files, srcDir, null, mapper).length == 0;\n     }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/89d6f7f40776a7b0115479f821b685810ab6beb6",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/aa9e0c2342b992df94941da524d8b8f13a1df840",
        "message": "Fixed some typos, avoid NullPointerException when dependency cache and\nactually existing class files have run out of sync (would try to\naccess information about a non-existent class file).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268391 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_68",
        "file": [
            {
                "sha": "abde8a150c941b9b3d5111170e3130f1395aba3b",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/ant/blob/89d6f7f40776a7b0115479f821b685810ab6beb6/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java",
                "raw_url": "https://github.com/apache/ant/raw/89d6f7f40776a7b0115479f821b685810ab6beb6/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java?ref=89d6f7f40776a7b0115479f821b685810ab6beb6",
                "patch": "@@ -168,7 +168,7 @@ private void determineDependencies() throws IOException {\n                 File depFile = new File(cache, info.relativeName + \".dep\");\n                 if (depFile.exists() && depFile.lastModified() > info.absoluteFile.lastModified()) {\n                     // depFile exists and is newer than the class file\n-                    // need to read dependency list from tyhe file.\n+                    // need to read dependency list from the file.\n                     dependencyList = readDependencyList(depFile);\n                 }\n             }\n@@ -235,7 +235,7 @@ private void deleteAffectedFiles(String className) {\n                         deleteAffectedFiles(affectedClassName);\n                     }\n                     else {\n-                        // without closer we may delete an inner class but not the\n+                        // without closure we may delete an inner class but not the\n                         // top level class which will not trigger a recompile.\n                            \n                         if (affectedClassName.indexOf(\"$\") != -1) {\n@@ -245,7 +245,8 @@ private void deleteAffectedFiles(String className) {\n                             log(\"Top level class = \" + topLevelClassName, Project.MSG_INFO);\n                             ClassFileInfo topLevelClassInfo \n                                 = (ClassFileInfo)classFileInfoMap.get(topLevelClassName);\n-                            if (topLevelClassInfo.absoluteFile.exists()) {\n+                            if (topLevelClassInfo != null &&\n+                                topLevelClassInfo.absoluteFile.exists()) {\n                                 log(\"Deleting file \" + topLevelClassInfo.absoluteFile.getPath() + \" since \" + \n                                     \"one of its inner classes was removed\", Project.MSG_VERBOSE);\n                                 topLevelClassInfo.absoluteFile.delete();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/3a3312cb529e779a359bffef7180f3334daa418d",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/34c0080c09ba7c72241296abc4eb83e2ed9fd569",
        "message": "Avoid NullPointerException in <delete> if the current user is not\nallowed to list the contents of a directory.\n\nReported by:\t\"NIkhil R. Deshpande\" <nikhild@flashmail.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268372 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_69",
        "file": [
            {
                "sha": "68e82efa7bec069ad150ec7c8907860c9150033c",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/3a3312cb529e779a359bffef7180f3334daa418d/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "raw_url": "https://github.com/apache/ant/raw/3a3312cb529e779a359bffef7180f3334daa418d/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Delete.java?ref=3a3312cb529e779a359bffef7180f3334daa418d",
                "patch": "@@ -270,6 +270,7 @@ public void execute() throws BuildException {\n \n     protected void removeDir(File d) {\n         String[] list = d.list();\n+        if (list == null) list = new String[0];\n         for (int i = 0; i < list.length; i++) {\n             String s = list[i];\n             File f = new File(d, s);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/4f8bb2ee77ac387500caffe5b3b830547b465bd2",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/3a94f3d9dc3e5086b874a4f1f363b3c1adba644a",
        "message": "Better reporting of errors when JAXP not present.\n\nCatch NoClassDefFoundError as well as NullPointerException and\nemit a more meaningful error message.\n\nChange BuildException to accept Errors as well as Exceptions\nas cause.\n\nSubmitted by:\tStefan Bodewig <bodewig@bost.de>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@267682 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_70",
        "file": [
            {
                "sha": "ee74c0d0b820fdb8978a3350c7d3c86341d15f8c",
                "filename": "src/main/org/apache/tools/ant/BuildException.java",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/apache/ant/blob/4f8bb2ee77ac387500caffe5b3b830547b465bd2/src/main/org/apache/tools/ant/BuildException.java",
                "raw_url": "https://github.com/apache/ant/raw/4f8bb2ee77ac387500caffe5b3b830547b465bd2/src/main/org/apache/tools/ant/BuildException.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/BuildException.java?ref=4f8bb2ee77ac387500caffe5b3b830547b465bd2",
                "patch": "@@ -63,7 +63,7 @@\n public class BuildException extends RuntimeException {\n \n     /** Exception that might have caused this one. */\n-    private Exception cause;\n+    private Throwable cause;\n \n     /** Location in the build file where the exception occured */\n     private Location location = Location.UNKNOWN_LOCATION;\n@@ -89,10 +89,10 @@ public BuildException(String msg) {\n      * Constructs an exception with the given message and exception as\n      * a root cause.\n      * @param msg Description of or information about the exception.\n-     * @param cause Exception that might have cause this one.\n+     * @param cause Throwable that might have cause this one.\n      */\n \n-    public BuildException(String msg, Exception cause) {\n+    public BuildException(String msg, Throwable cause) {\n \tsuper(msg);\n \tthis.cause = cause;\n     }\n@@ -105,7 +105,7 @@ public BuildException(String msg, Exception cause) {\n      * @param location Location in the project file where the error occured.\n      */\n \n-    public BuildException(String msg, Exception cause, Location location) {\n+    public BuildException(String msg, Throwable cause, Location location) {\n         this(msg, cause);\n \tthis.location = location;\n     }\n@@ -115,7 +115,7 @@ public BuildException(String msg, Exception cause, Location location) {\n      * @param cause Exception that might have caused this one.\n      */\n \n-    public BuildException(Exception cause) {\n+    public BuildException(Throwable cause) {\n \tsuper(cause.toString());\n \tthis.cause = cause;\n     }\n@@ -135,7 +135,7 @@ public BuildException(String msg, Location location) {\n     /**\n      * Returns the nested exception.\n      */\n-    public Exception getException() {\n+    public Throwable getException() {\n         return cause;\n     }\n "
            },
            {
                "sha": "b8b8621edebffcaf30c9b0e3d7adce60ce3fc46b",
                "filename": "src/main/org/apache/tools/ant/Main.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/4f8bb2ee77ac387500caffe5b3b830547b465bd2/src/main/org/apache/tools/ant/Main.java",
                "raw_url": "https://github.com/apache/ant/raw/4f8bb2ee77ac387500caffe5b3b830547b465bd2/src/main/org/apache/tools/ant/Main.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Main.java?ref=4f8bb2ee77ac387500caffe5b3b830547b465bd2",
                "patch": "@@ -222,12 +222,17 @@ private static void runBuild() {\n         try {\n             try {\n                 Class.forName(\"javax.xml.parsers.SAXParserFactory\");\n+                ProjectHelper.configureProject(project, buildFile);\n+            } catch (NoClassDefFoundError ncdfe) {\n+                throw new BuildException(\"No JAXP compliant XML parser found. See http://java.sun.com/xml for the\\nreference implementation.\", ncdfe);\n             } catch (ClassNotFoundException cnfe) {\n-                throw new BuildException(cnfe);\n+                throw new BuildException(\"No JAXP compliant XML parser found. See http://java.sun.com/xml for the\\nreference implementation.\", cnfe);\n+            } catch (NullPointerException npe) {\n+                throw new BuildException(\"No JAXP compliant XML parser found. See http://java.sun.com/xml for the\\nreference implementation.\", npe);\n             }\n-            ProjectHelper.configureProject(project, buildFile);\n         } catch (BuildException be) {\n             System.out.println(\"\\nBUILD CONFIG ERROR\\n\");\n+            System.out.println(be.getMessage());\n             if (be.getException() == null) {\n                 System.out.println(be.toString());\n             } else {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d2c225e3700130775183d20109426819f2b989ce",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/90933557a169db41cbbc635d29d5d68f4a95d94a",
        "message": "* Added new task <ant-call> to core, which can execute a named target\n  in the current project, or any referenced project.\n* <ant1.ant> now works by executing AntTask.\n* Fixed minor bug in DefaultClassloaderManager which was causing NPEs\n  in URLClassLoader.\n* DefaultTaskContext now removes properties when they are set to null.\n  (rather than throwing a NPE inside HashMap).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272067 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_71",
        "file": [
            {
                "sha": "3d625bfb448459d3ba8e2106491d1c5f4f5eed25",
                "filename": "proposal/myrmidon/ant1compat.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/ant1compat.xml",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/ant1compat.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/ant1compat.xml?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -63,6 +63,8 @@\n           <exclude name=\"${ant1.package}/ant/Main.class\"/>\n           <exclude name=\"${ant1.package}/ant/Task.class\"/>\n           <exclude name=\"${ant1.package}/ant/BuildException.class\"/>\n+          <exclude name=\"${ant1.package}/ant/taskdefs/Ant.class\"/>\n+          <exclude name=\"${ant1.package}/ant/taskdefs/CallTarget.class\"/>\n           <exclude name=\"${ant1.package}/ant/types/Path.class\"/>\n         </patternset>\n "
            },
            {
                "sha": "76b5fd7fa755c659ca307547970dc2589a82a322",
                "filename": "proposal/myrmidon/src/ant1compat/ant-descriptor.xml",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/ant-descriptor.xml",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/ant-descriptor.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/ant1compat/ant-descriptor.xml?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -12,13 +12,15 @@\n         <!-- TaskAdapter tasks -->\n         <task name=\"ant1.condition\"\n             classname=\"org.apache.tools.ant.Ant1CompatTaskAdapter\" />\n+            \n+        <!-- Tasks specialised for myrmidon -->\n+        <task name=\"ant1.ant\"\n+              classname=\"org.apache.tools.ant.taskdefs.Ant\" />\n \n         <!-- Tasks not currently supported.\n \n                 <task name=\"ant1.antcall\"\n                     classname=\"org.apache.tools.ant.taskdefs.CallTarget\" />\n-                <task name=\"ant1.ant\"\n-                    classname=\"org.apache.tools.ant.taskdefs.Ant\" />\n         -->\n \n         <!-- standard ant tasks -->"
            },
            {
                "sha": "216db6f390439f48ac35bf690ef62dcc738eec07",
                "filename": "proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java",
                "status": "added",
                "additions": 300,
                "deletions": 0,
                "changes": 300,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -0,0 +1,300 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2000-2002 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.tools.ant.taskdefs;\n+\n+import org.apache.tools.ant.Task;\n+import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.util.FileUtils;\n+import org.apache.avalon.framework.configuration.DefaultConfiguration;\n+import org.apache.avalon.framework.configuration.Configuration;\n+import org.apache.myrmidon.interfaces.executor.Executor;\n+import org.apache.myrmidon.interfaces.executor.ExecutionFrame;\n+import org.apache.myrmidon.api.TaskException;\n+import java.io.File;\n+import java.util.Vector;\n+import java.util.Iterator;\n+\n+/**\n+ * Call Ant in a sub-project.\n+ *\n+ *  <pre>\n+ *  &lt;target name=&quot;foo&quot; depends=&quot;init&quot;&gt;\n+ *    &lt;ant antfile=&quot;build.xml&quot; target=&quot;bar&quot; &gt;\n+ *      &lt;property name=&quot;property1&quot; value=&quot;aaaaa&quot; /&gt;\n+ *      &lt;property name=&quot;foo&quot; value=&quot;baz&quot; /&gt;\n+ *    &lt;/ant&gt;</SPAN>\n+ *  &lt;/target&gt;</SPAN>\n+ *\n+ *  &lt;target name=&quot;bar&quot; depends=&quot;init&quot;&gt;\n+ *    &lt;echo message=&quot;prop is ${property1} ${foo}&quot; /&gt;\n+ *  &lt;/target&gt;\n+ * </pre>\n+ *\n+ *\n+ * @author costin@dnt.ro\n+ * @author <a href=\"mailto:darrell@apache.org\">Darrell DeBoer</a>\n+ */\n+public class Ant extends Task {\n+\n+    /** the basedir where is executed the build file */\n+    private File dir = null;\n+    \n+    /** the build.xml file (can be absolute) in this case dir will be ignored */\n+    private String antFile = null;\n+    \n+    /** the target to call if any */\n+    private String target = null;\n+    \n+    /** the output */\n+    private String output = null;\n+    \n+    /** should we inherit properties from the parent ? */\n+    private boolean inheritAll = true;\n+    \n+    /** should we inherit references from the parent ? */\n+    private boolean inheritRefs = false;\n+    \n+    /** the properties to pass to the new project */\n+    private Vector properties = new Vector();\n+    \n+    /** the references to pass to the new project */\n+    private Vector references = new Vector();\n+\n+    /**\n+     * If true, inherit all properties from parent Project\n+     * If false, inherit only userProperties and those defined\n+     * inside the ant call itself\n+     */\n+    public void setInheritAll(boolean value) {\n+       inheritAll = value;\n+    }\n+\n+    /**\n+     * If true, inherit all references from parent Project\n+     * If false, inherit only those defined\n+     * inside the ant call itself\n+     */\n+    public void setInheritRefs(boolean value) {\n+        inheritRefs = value;\n+    }\n+\n+    /**\n+     * ...\n+     */\n+    public void setDir(File d) {\n+        this.dir = d;\n+    }\n+\n+    /**\n+     * set the build file, it can be either absolute or relative.\n+     * If it is absolute, <tt>dir</tt> will be ignored, if it is\n+     * relative it will be resolved relative to <tt>dir</tt>.\n+     */\n+    public void setAntfile(String s) {\n+        // @note: it is a string and not a file to handle relative/absolute\n+        // otherwise a relative file will be resolved based on the current\n+        // basedir.\n+        this.antFile = s;\n+    }\n+\n+    /**\n+     * set the target to execute. If none is defined it will\n+     * execute the default target of the build file\n+     */\n+    public void setTarget(String s) {\n+        this.target = s;\n+    }\n+\n+    public void setOutput(String s) {\n+        this.output = s;\n+    }\n+\n+    /** create a property to pass to the new project as a 'user property' */\n+    public Property createProperty() {\n+        Property p = new Property(true);\n+        properties.addElement( p );\n+        return p;\n+    }\n+\n+    /** \n+     * create a reference element that identifies a data type that\n+     * should be carried over to the new project.\n+     */\n+    public void addReference(Reference r) {\n+        references.addElement(r);\n+    }\n+\n+    /**\n+     * Helper class that implements the nested &lt;reference&gt;\n+     * element of &lt;ant&gt; and &lt;antcall&gt;.\n+     */\n+    public static class Reference \n+        extends org.apache.tools.ant.types.Reference {\n+\n+        public Reference() {super();}\n+        \n+        private String targetid=null;\n+        public void setToRefid(String targetid) { this.targetid=targetid; }\n+        public String getToRefid() { return targetid; }\n+    }\n+\n+    /**\n+     * Called by the project to let the task do its work. This method may be\n+     * called more than once, if the task is invoked more than once.\n+     * For example,\n+     * if target1 and target2 both depend on target3, then running\n+     * \"ant target1 target2\" will run all tasks in target3 twice.\n+     *\n+     * @exception BuildException if something goes wrong with the build\n+     */\n+    public void execute() throws BuildException\n+    {\n+        Object ant1project = unsetProject();\n+\n+        try\n+        {\n+            Configuration antConfig = buildAntTaskConfiguration();\n+\n+            executeTask( antConfig );\n+        }\n+        finally\n+        {\n+            resetProject( ant1project );\n+        }\n+    }\n+\n+    private void executeTask( Configuration antConfig )\n+    {\n+        try\n+        {\n+            Executor executor = (Executor) m_context.getService( Executor.class );\n+            ExecutionFrame frame =\n+                (ExecutionFrame) m_context.getService( ExecutionFrame.class );\n+            executor.execute( antConfig, frame );\n+        }\n+        catch( TaskException e )\n+        {\n+            throw new BuildException( e );\n+        }\n+    }\n+\n+    private Configuration buildAntTaskConfiguration()\n+    {\n+        DefaultConfiguration antConfig = new DefaultConfiguration( \"ant\", \"\" );\n+\n+        antConfig.setAttribute( \"inherit-all\", String.valueOf( inheritAll ) );\n+\n+        // Ignore inheritRefs for now ( inheritAll == inheritRefs )\n+\n+        if ( target != null )\n+        {\n+            antConfig.setAttribute( \"target\", target );\n+        }\n+\n+        // Get the \"file\" value.\n+        if (antFile == null) {\n+            antFile = \"build.xml\";\n+        }\n+\n+        if ( dir == null )\n+        {\n+            dir = project.getBaseDir();\n+        }\n+\n+        File file = FileUtils.newFileUtils().resolveFile(dir, antFile);\n+        antFile = file.getAbsolutePath();\n+\n+        antConfig.setAttribute( \"file\", antFile );\n+\n+        // Add all of the properties.\n+        Iterator iter = properties.iterator();\n+        while( iter.hasNext() )\n+        {\n+            DefaultConfiguration param = new DefaultConfiguration( \"param\", \"\" );\n+            Property property = (Property)iter.next();\n+            param.setAttribute( \"name\", property.getName() );\n+            param.setAttribute( \"value\", property.getValue() );\n+            antConfig.addChild( param );\n+        }\n+        return antConfig;\n+    }\n+\n+    private void resetProject( Object ant1project ) throws BuildException\n+    {\n+        try\n+        {\n+            m_context.setProperty( \"ant1.project\", ant1project );\n+        }\n+        catch( TaskException e )\n+        {\n+            throw new BuildException( e );\n+        }\n+    }\n+\n+    private Object unsetProject() throws BuildException\n+    {\n+        Object ant1project = null;\n+        try\n+        {\n+            ant1project = m_context.getProperty( \"ant1.project\" );\n+            m_context.setProperty( \"ant1.project\", null );\n+        }\n+        catch( TaskException e )\n+        {\n+            throw new BuildException( e );\n+        }\n+        return ant1project;\n+    }\n+}"
            },
            {
                "sha": "a9910dbf829f890ae93f3f31b73f81a49caf024c",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java",
                "status": "added",
                "additions": 179,
                "deletions": 0,
                "changes": 179,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -0,0 +1,179 @@\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included  with this distribution in\n+ * the LICENSE.txt file.\n+ */\n+package org.apache.antlib.core;\n+\n+import org.apache.myrmidon.api.AbstractTask;\n+import org.apache.myrmidon.api.TaskException;\n+import org.apache.myrmidon.interfaces.model.Project;\n+import org.apache.myrmidon.interfaces.workspace.Workspace;\n+import org.apache.myrmidon.interfaces.embeddor.Embeddor;\n+import org.apache.avalon.framework.parameters.Parameters;\n+import java.util.Map;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n+\n+/**\n+ * Abstract base class for Tasks which execute targets.\n+ *\n+ * @author <a href=\"mailto:peter@apache.org\">Peter Donald</a>\n+ * @author <a href=\"mailto:darrell@apache.org\">Darrell DeBoer</a>\n+ * @version $Revision$ $Date$\n+ */\n+public abstract class AbstractAntTask extends AbstractTask\n+{\n+    /**\n+     * If true, inherit all properties from parent Project\n+     * If false, inherit only userProperties and those defined\n+     * inside the ant call itself\n+     */\n+    private boolean m_inheritAll;\n+    /**\n+     * The target to process in build file. If not specified\n+     * will use default in specified build file.\n+     */\n+    private String m_target;\n+    private final ArrayList m_parameters = new ArrayList();\n+\n+    /**\n+     * Specify whether should inherit properties in sub-build.\n+     *\n+     * @param inheritAll true to inherit else false\n+     */\n+    public void setInheritAll( final boolean inheritAll )\n+    {\n+        m_inheritAll = inheritAll;\n+    }\n+\n+    /**\n+     * set the target to process. If none is defined it will\n+     * execute the default target of the build file\n+     */\n+    public void setTarget( final String target )\n+    {\n+        m_target = target;\n+    }\n+\n+    /**\n+     * Add a parameter to processing of build file.\n+     *\n+     * @param param the parameter\n+     */\n+    public void addParam( final AntParam param )\n+    {\n+        m_parameters.add( param );\n+    }\n+\n+    /**\n+     * Execute the specified build, with specified parameters.\n+     *\n+     * @throws TaskException if an error occurs.\n+     */\n+    public void execute()\n+        throws TaskException\n+    {\n+        try\n+        {\n+            Project project = getProject();\n+\n+            Embeddor embeddor = getEmbeddor();\n+\n+            final Workspace workspace =\n+                embeddor.createWorkspace( buildParameters() );\n+\n+            workspace.addProjectListener( embeddor.createListener(\"default\"));\n+\n+            if( null == m_target )\n+            {\n+                m_target = project.getDefaultTargetName();\n+            }\n+\n+            workspace.executeProject( project, m_target );\n+        }\n+        catch( final Exception e )\n+        {\n+            throw new TaskException( e.toString(), e );\n+        }\n+    }\n+\n+    /**\n+     * A convenience method for obtaining the Embeddor from the\n+     * TaskContext.\n+     * @return The Embeddor contained in the TaskContext\n+     * @throws TaskException if the Embeddor could not be obtained.\n+     */\n+    protected Embeddor getEmbeddor() throws TaskException\n+    {\n+        final Embeddor embeddor =\n+            (Embeddor)getContext().getService( Embeddor.class );\n+        return embeddor;\n+    }\n+\n+    /**\n+     * Get/create/build the project containing the target to be executed.\n+     * Subclasses will override this method to provide different means\n+     * of obtaining a project to execute.\n+     * @return The project containing the target to execute.\n+     * @throws Exception If a problem occurred building the project.\n+     */\n+    protected abstract Project getProject() throws Exception;\n+\n+    /**\n+     * Build the parameters to pass to sub-project.\n+     * These include the current tasks properties\n+     * (if inheritall=true) and any supplied by the user.\n+     *\n+     * @return the created parameters\n+     */\n+    private Parameters buildParameters()\n+        throws TaskException\n+    {\n+        final Parameters parameters = new Parameters();\n+\n+        if( m_inheritAll )\n+        {\n+            final Map properties = getContext().getProperties();\n+            final Iterator keys = properties.keySet().iterator();\n+            while( keys.hasNext() )\n+            {\n+                final String key = (String)keys.next();\n+                final Object value = properties.get( key );\n+                setProperty( parameters, key, value );\n+            }\n+        }\n+\n+        final int size = m_parameters.size();\n+        for( int i = 0; i < size; i++ )\n+        {\n+            final AntParam param = (AntParam)m_parameters.get( i );\n+            param.validate();\n+            final String name = param.getName();\n+            final String value = param.getValue().toString();\n+            setProperty( parameters, name, value );\n+        }\n+\n+        return parameters;\n+    }\n+\n+    /**\n+     * Utility method to add the property into parameters object.\n+     *\n+     * @param parameters where to put property\n+     * @param name the property\n+     * @param value the value of property\n+     * @todo allow non-string params to be passed down\n+     */\n+    private void setProperty( final Parameters parameters,\n+                              final String name,\n+                              final Object value )\n+    {\n+        if( !name.startsWith( \"myrmidon.\" ) )\n+        {\n+            parameters.setParameter( name, value.toString() );\n+        }\n+    }\n+}"
            },
            {
                "sha": "8acbff796f1ec5ddfd0158bf8530c30b6f6e2921",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java",
                "status": "added",
                "additions": 68,
                "deletions": 0,
                "changes": 68,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/AntCallTask.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included  with this distribution in\n+ * the LICENSE.txt file.\n+ */\n+package org.apache.antlib.core;\n+\n+import org.apache.avalon.excalibur.i18n.ResourceManager;\n+import org.apache.avalon.excalibur.i18n.Resources;\n+import org.apache.myrmidon.api.TaskException;\n+import org.apache.myrmidon.interfaces.model.Project;\n+\n+/**\n+ * A task which executes a target in the current project,\n+ * or a referenced project.\n+ *\n+ * @author <a href=\"mailto:darrell@apache.org\">Darrell DeBoer</a>\n+ * @version $Revision$ $Date$\n+ * @ant.task name=\"ant-call\"\n+ */\n+public class AntCallTask extends AbstractAntTask\n+{\n+    private final static Resources REZ =\n+        ResourceManager.getPackageResources( AntCallTask.class );\n+\n+    private String m_project;\n+\n+    /**\n+     * Specifies the project to execute. If not specified, the current\n+     * project is used.\n+     * @param project the name of the Project to execute.\n+     */\n+    public void setProject( String project )\n+    {\n+        m_project = project;\n+    }\n+\n+    /**\n+     * Get/create/build the project which will be executed.\n+     * Subclasses will override this method to provide different means\n+     * of obtaining a project to execute.\n+     * @return The project containing the target to execute.\n+     * @throws Exception If a problem occurred building the project.\n+     */\n+    protected Project getProject() throws Exception\n+    {\n+        Project currentProject =\n+            (Project)getContext().getService( Project.class );\n+\n+        // By default, use the current project.\n+        Project referencedProject = currentProject;\n+\n+        if( m_project != null )\n+        {\n+            referencedProject = currentProject.getProject( m_project );\n+            if( referencedProject == null )\n+            {\n+                final String message =\n+                    REZ.getString( \"antcall.invalid-project.error\" );\n+                throw new TaskException( message );\n+            }\n+        }\n+\n+        return referencedProject;\n+    }\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "ad9b9a426701dd56f19e8a8be220663dc2edf7be",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java",
                "status": "modified",
                "additions": 11,
                "deletions": 135,
                "changes": 146,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/AntTask.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -8,66 +8,35 @@\n package org.apache.antlib.core;\n \n import java.io.File;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.Map;\n import org.apache.avalon.framework.parameters.Parameters;\n-import org.apache.myrmidon.api.AbstractTask;\n-import org.apache.myrmidon.api.TaskException;\n-import org.apache.myrmidon.interfaces.embeddor.Embeddor;\n import org.apache.myrmidon.interfaces.model.Project;\n-import org.apache.myrmidon.interfaces.workspace.Workspace;\n \n /**\n- * Create a new Workspace and process a build in\n- * that new workspace.\n+ * Executes a target in a named build file.\n  *\n  * @author <a href=\"mailto:peter@apache.org\">Peter Donald</a>\n  * @ant.task name=\"ant\"\n  */\n public class AntTask\n-    extends AbstractTask\n+\n+    extends AbstractAntTask\n {\n     /**\n      * Default build file.\n      */\n     private static final String DEFAULT_BUILD_FILE = \"build.ant\";\n \n-    /**\n-     * If true, inherit all properties from parent Project\n-     * If false, inherit only userProperties and those defined\n-     * inside the ant call itself\n-     */\n-    private boolean m_inheritAll;\n-\n     /**\n      * The build file which to execute. If not set defaults to\n      * using \"build.ant\" in the basedir of current project.\n      */\n     private File m_file;\n \n-    /**\n-     * The target to process in build file. If not specified\n-     * will use default in specified build file.\n-     */\n-    private String m_target;\n-\n     /**\n      * The \"type\" of the build file. By default this is null which\n      * means the type will be determined by the build file extension.\n      */\n     private String m_type;\n-    private final ArrayList m_parameters = new ArrayList();\n-\n-    /**\n-     * Specify whether should inherit properties in sub-build.\n-     *\n-     * @param inheritAll true to inherit else false\n-     */\n-    public void setInheritAll( final boolean inheritAll )\n-    {\n-        m_inheritAll = inheritAll;\n-    }\n \n     /**\n      * set the build file to process.\n@@ -90,114 +59,21 @@ public void setType( final String type )\n     }\n \n     /**\n-     * set the target to process. If none is defined it will\n-     * execute the default target of the build file\n+     * @return The project containing the target to execute.\n+     * @throws Exception If a problem occurred building the project.\n      */\n-    public void setTarget( final String target )\n-    {\n-        m_target = target;\n-    }\n-\n-    /**\n-     * Add a parameter to processing of build file.\n-     *\n-     * @param param the parameter\n-     */\n-    public void addParam( final AntParam param )\n-    {\n-        m_parameters.add( param );\n-    }\n-\n-    /**\n-     * Execute the specified build, with specified parameters.\n-     *\n-     * @throws TaskException if an error occurs.\n-     */\n-    public void execute()\n-        throws TaskException\n+    protected Project getProject() throws Exception\n     {\n         if( null == m_file )\n         {\n             m_file = getContext().resolveFile( DEFAULT_BUILD_FILE );\n         }\n \n-        final Embeddor embeddor =\n-            (Embeddor)getContext().getService( Embeddor.class );\n-\n-        try\n-        {\n-            final Project project =\n-                embeddor.createProject( m_file.toString(),\n-                                        m_type,\n-                                        new Parameters() );\n-            final Workspace workspace =\n-                embeddor.createWorkspace( buildParameters() );\n-\n-            if( null == m_target )\n-            {\n-                m_target = project.getDefaultTargetName();\n-            }\n-\n-            workspace.executeProject( project, m_target );\n-        }\n-        catch( final Exception e )\n-        {\n-            throw new TaskException( e.toString(), e );\n-        }\n-    }\n-\n-    /**\n-     * Build the parameters to pass to sub-project.\n-     * These include the current tasks properties\n-     * (if inheritall=true) and any supplied by the user.\n-     *\n-     * @return the created parameters\n-     */\n-    private Parameters buildParameters()\n-        throws TaskException\n-    {\n-        final Parameters parameters = new Parameters();\n-\n-        if( m_inheritAll )\n-        {\n-            final Map properties = getContext().getProperties();\n-            final Iterator keys = properties.keySet().iterator();\n-            while( keys.hasNext() )\n-            {\n-                final String key = (String)keys.next();\n-                final Object value = properties.get( key );\n-                setProperty( parameters, key, value );\n-            }\n-        }\n-\n-        final int size = m_parameters.size();\n-        for( int i = 0; i < size; i++ )\n-        {\n-            final AntParam param = (AntParam)m_parameters.get( i );\n-            param.validate();\n-            final String name = param.getName();\n-            final String value = param.getValue().toString();\n-            setProperty( parameters, name, value );\n-        }\n-\n-        return parameters;\n+        final Project project =\n+            getEmbeddor().createProject( m_file.toString(),\n+                                         m_type,\n+                                         new Parameters() );\n+        return project;\n     }\n \n-    /**\n-     * Utility method to add the property into parameters object.\n-     *\n-     * @param parameters where to put property\n-     * @param name the property\n-     * @param value the value of property\n-     * @todo allow non-string params to be passed down\n-     */\n-    private void setProperty( final Parameters parameters,\n-                              final String name,\n-                              final Object value )\n-    {\n-        if( !name.startsWith( \"myrmidon.\" ) )\n-        {\n-            parameters.setParameter( name, value.toString() );\n-        }\n-    }\n }"
            },
            {
                "sha": "757580ed6723440c683bff486fa07b3c76bedf71",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/core/Resources.properties?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -34,4 +34,6 @@ filetokenset.not-a-file.error=File {0} does not exist, or is not a file.\n filetokenset.read-tokens.error=Could not read tokens from {0}.\n \n param.noname.error=Missing name from parameter.\n-param.novalue.error=Missing value from parameter \"{0}\".\n\\ No newline at end of file\n+param.novalue.error=Missing value from parameter \"{0}\".\n+\n+antcall.invalid-project.error=Project-reference \"{0}\" not found.\n\\ No newline at end of file"
            },
            {
                "sha": "24ee439c963e29347ef5c2355f0fd3baecef1f11",
                "filename": "proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -155,7 +155,7 @@ private ClassLoader buildClassLoader( final ArrayList files )\n     private URL[] buildClasspath( final ArrayList files )\n         throws MalformedURLException\n     {\n-        final URL[] urls = new URL[ files.size() + 1 ];\n+        final URL[] urls = new URL[ files.size() ];\n         final int count = files.size();\n         for( int i = 0; i < count; i++ )\n         {"
            },
            {
                "sha": "bfc80b82a3655288a14f03275181be20636c3c0f",
                "filename": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -214,7 +214,15 @@ public void setProperty( final String name, final Object value )\n     {\n         checkPropertyName( name );\n         checkPropertyValid( name, value );\n-        m_contextData.put( name, value );\n+\n+        if ( value == null )\n+        {\n+            m_contextData.remove( name );\n+        }\n+        else\n+        {\n+            m_contextData.put( name, value );\n+        }\n     }\n \n     /**"
            },
            {
                "sha": "43fc34434126450c8e63a1e9b2aa74a615635118",
                "filename": "proposal/myrmidon/src/make/sample.ant",
                "status": "modified",
                "additions": 26,
                "deletions": 0,
                "changes": 26,
                "blob_url": "https://github.com/apache/ant/blob/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/make/sample.ant",
                "raw_url": "https://github.com/apache/ant/raw/d2c225e3700130775183d20109426819f2b989ce/proposal/myrmidon/src/make/sample.ant",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/make/sample.ant?ref=d2c225e3700130775183d20109426819f2b989ce",
                "patch": "@@ -279,6 +279,32 @@ Legal:\n         <ant/>\n     </target>\n \n+    <target name=\"antcall-test\">\n+        <log message=\"Testing antcall task...\"/>\n+        <ant-call target=\"if-test\"/>\n+\n+        <log message=\"Using params...\"/>\n+        <ant-call target=\"prop-print\">\n+            <param name=\"meep.meep\" value=\"Meep!\"/>\n+        </ant-call>\n+\n+        <log message=\"Using params value-ref...\"/>\n+        <pattern id=\"meep.data\" name=\"*.java\" if=\"...\" />\n+        <ant-call target=\"prop-print\">\n+            <param name=\"meep.meep\" value-ref=\"meep.data\"/>\n+        </ant-call>\n+\n+        <log message=\"Using inheritall...\"/>\n+        <pattern id=\"meep.meep\" name=\"*.java\" if=\"...\" />\n+        <ant-call target=\"prop-print\" inherit-all=\"true\"/>\n+\n+        <log message=\"Calling referenced project, default target...\"/>\n+        <ant-call project=\"prim\"/>\n+\n+        <log message=\"Calling referenced project, named target...\"/>\n+        <ant-call project=\"prim\" target=\"extensions-test\"/>\n+    </target>\n+\n     <target name=\"prop-print\">\n         <log message=\"Give me a property ... ${meep.meep}\"/>\n     </target>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/3cc14f2d54dac0920ad891aed71fef8e0b4e8da8",
        "message": "Avoid NPE in createTempFile if no prfix has been specified.  PR 49755\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@986226 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_72",
        "file": [
            {
                "sha": "e4e82b44599fe29656260b773faac6a8c84b9725",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
                "patch": "@@ -119,6 +119,10 @@ Fixed bugs:\n    <zipfileset>s that used the prefix or fullpath attributes.\n    Bugzilla Report 49605.\n \n+ * <tempfile createfile=\"true\"> would cause an error unless the prefix\n+   attribute has been specified.\n+   Bugzilla Report 49755.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "38b82f9dcb592729f76a9672e878ab3a52be711f",
                "filename": "src/main/org/apache/tools/ant/util/FileUtils.java",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/main/org/apache/tools/ant/util/FileUtils.java",
                "raw_url": "https://github.com/apache/ant/raw/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/main/org/apache/tools/ant/util/FileUtils.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/FileUtils.java?ref=0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
                "patch": "@@ -898,6 +898,8 @@ public File createTempFile(String prefix, String suffix, File parentDir) {\n         return createTempFile(prefix, suffix, parentDir, false, false);\n     }\n \n+    private static final String NULL_PLACEHOLDER = \"null\";\n+\n     /**\n      * Create a temporary file in a given directory.\n      *\n@@ -925,6 +927,12 @@ public File createTempFile(String prefix, String suffix, File parentDir,\n         String parent = (parentDir == null)\n                 ? System.getProperty(\"java.io.tmpdir\")\n                 : parentDir.getPath();\n+        if (prefix == null) {\n+            prefix = NULL_PLACEHOLDER;\n+        }\n+        if (suffix == null) {\n+            suffix = NULL_PLACEHOLDER;\n+        }\n \n         if (createFile) {\n             try {"
            },
            {
                "sha": "2749216dca0578f7334aaa23409eb899550f66d5",
                "filename": "src/tests/antunit/taskdefs/tempfile-test.xml",
                "status": "added",
                "additions": 26,
                "deletions": 0,
                "changes": 26,
                "blob_url": "https://github.com/apache/ant/blob/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/tests/antunit/taskdefs/tempfile-test.xml",
                "raw_url": "https://github.com/apache/ant/raw/0c08ce1f0e9880b5f3a6c3c37008acccd5f97392/src/tests/antunit/taskdefs/tempfile-test.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/tempfile-test.xml?ref=0c08ce1f0e9880b5f3a6c3c37008acccd5f97392",
                "patch": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project default=\"antunit\" xmlns:au=\"antlib:org.apache.ant.antunit\">\n+  <import file=\"../antunit-base.xml\" />\n+\n+  <target name=\"testCreateWithoutPrefix\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=49755\">\n+    <tempfile property=\"tmp\" createfile=\"true\"/>\n+    <au:assertFileExists file=\"${tmp}\"/>\n+  </target>\n+</project>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/a2ab860629780bad667de39114aa335ffdc3d323",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/f70ce7b08a54dc6fea51c96a3ee883164e60d47c",
        "message": "isSymbolicLink throws a NPE if invoked for the file system root\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@935069 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_73",
        "file": [
            {
                "sha": "83fc0ee79b07654c993e8388d90d0a479264c6d2",
                "filename": "src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/a2ab860629780bad667de39114aa335ffdc3d323/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java",
                "raw_url": "https://github.com/apache/ant/raw/a2ab860629780bad667de39114aa335ffdc3d323/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java?ref=a2ab860629780bad667de39114aa335ffdc3d323",
                "patch": "@@ -64,7 +64,7 @@ protected SymbolicLinkUtils() {\n      * canonical and absolute paths of the file are identical--this\n      * may lead to false positives on some platforms.</p>\n      *\n-     * @param file the file to test.\n+     * @param file the file to test.  Must not be null.\n      *\n      * @return true if the file is a symbolic link.\n      * @throws IOException on error.\n@@ -104,7 +104,9 @@ public boolean isSymbolicLink(String name) throws IOException {\n      */\n     public boolean isSymbolicLink(File parent, String name)\n         throws IOException {\n-        File toTest = new File(parent.getCanonicalPath(), name);\n+        File toTest = parent != null\n+            ? new File(parent.getCanonicalPath(), name)\n+            : new File(name);\n         return !toTest.getAbsolutePath().equals(toTest.getCanonicalPath());\n     }\n "
            },
            {
                "sha": "85c12baf4ef430064b0f2d77ecd9ad1b19adf626",
                "filename": "src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java",
                "status": "added",
                "additions": 33,
                "deletions": 0,
                "changes": 33,
                "blob_url": "https://github.com/apache/ant/blob/a2ab860629780bad667de39114aa335ffdc3d323/src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java",
                "raw_url": "https://github.com/apache/ant/raw/a2ab860629780bad667de39114aa335ffdc3d323/src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/junit/org/apache/tools/ant/util/SymlinkUtilsTest.java?ref=a2ab860629780bad667de39114aa335ffdc3d323",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.apache.tools.ant.util;\n+\n+import java.io.IOException;\n+import junit.framework.TestCase;\n+\n+public class SymlinkUtilsTest extends TestCase {\n+\n+    private static final SymbolicLinkUtils SYMLINK_UTILS =\n+        SymbolicLinkUtils.getSymbolicLinkUtils();\n+\n+    public void testRootIsNoSymlink() throws IOException {\n+        assertFalse(SYMLINK_UTILS.isSymbolicLink(\"/\"));\n+    }\n+\n+}"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/c1091535ba59978083a7fb825bf18854b71547db",
        "message": "filesmatch throws NPE when comparing texts and the second one has fewer lines.  PR 48715\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@908356 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_74",
        "file": [
            {
                "sha": "8b787bafa21c91f78e6cbf7a01bacd2938217fa1",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
                "patch": "@@ -13,6 +13,11 @@ Fixed bugs:\n    maps.\n    Bugzilla Report 48310.\n \n+ * The filesmatch condition threw a NullPointerException when\n+   comparing text files and the second file contained fewer lines than\n+   the first one.\n+   Bugzilla Report 48715.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "d269ad4cbf9cb68cdefbce2fce88d48d7e43d643",
                "filename": "src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "raw_url": "https://github.com/apache/ant/raw/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ResourceUtils.java?ref=6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
                "patch": "@@ -666,6 +666,9 @@ private static int textCompare(Resource r1, Resource r2) throws IOException {\n             while (expected != null) {\n                 String actual = in2.readLine();\n                 if (!expected.equals(actual)) {\n+                    if (actual == null) {\n+                        return 1;\n+                    }\n                     return expected.compareTo(actual);\n                 }\n                 expected = in1.readLine();"
            },
            {
                "sha": "67e7c00f6a79f9e0104e2d31569c9662f0d7c745",
                "filename": "src/tests/antunit/taskdefs/condition/filesmatch-test.xml",
                "status": "added",
                "additions": 57,
                "deletions": 0,
                "changes": 57,
                "blob_url": "https://github.com/apache/ant/blob/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/tests/antunit/taskdefs/condition/filesmatch-test.xml",
                "raw_url": "https://github.com/apache/ant/raw/6d13fceec8ddb1813346fcf4e3f95b9083e4fd77/src/tests/antunit/taskdefs/condition/filesmatch-test.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/tests/antunit/taskdefs/condition/filesmatch-test.xml?ref=6d13fceec8ddb1813346fcf4e3f95b9083e4fd77",
                "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project default=\"antunit\" xmlns:au=\"antlib:org.apache.ant.antunit\">\n+  <import file=\"../../antunit-base.xml\" />\n+\n+  <target name=\"setUp\">\n+    <mkdir dir=\"${input}\"/>\n+  </target>\n+\n+  <target name=\"testMatchWithSmallerFile2\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=48715\"\n+          depends=\"setUp\">\n+    <property name=\"file1\" location=\"${input}/LS.properties\"/>\n+    <property name=\"file2\" location=\"${input}/LS.properties.old\"/>\n+    <echo file=\"${file1}\"><![CDATA[foo=foo\n+bar=bar\n+\n+]]></echo>\n+    <echo file=\"${file2}\"><![CDATA[foo=foo\n+]]></echo>\n+    <au:assertFalse>\n+      <filesmatch file1=\"${file1}\" file2=\"${file2}\" textfile=\"true\"/>\n+    </au:assertFalse>\n+  </target>\n+\n+  <target name=\"testBinaryMatchWithSmallerFile2\"\n+          description=\"https://issues.apache.org/bugzilla/show_bug.cgi?id=48715\"\n+          depends=\"setUp\">\n+    <property name=\"file1\" location=\"${input}/LS.properties\"/>\n+    <property name=\"file2\" location=\"${input}/LS.properties.old\"/>\n+    <echo file=\"${file1}\"><![CDATA[foo=foo\n+bar=bar\n+\n+]]></echo>\n+    <echo file=\"${file2}\"><![CDATA[foo=foo\n+]]></echo>\n+    <au:assertFalse>\n+      <filesmatch file1=\"${file1}\" file2=\"${file2}\" textfile=\"false\"/>\n+    </au:assertFalse>\n+  </target>\n+\n+</project>"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/545ff63ab763c8bb5b4a1b2f0aa98e8526518a07",
        "message": "sync can cause NPE whith broken symlinks.  PR 46747.  Submitted by skoppehel at intersoft dot de\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@747004 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_75",
        "file": [
            {
                "sha": "210efd83f982174be5a0a13a0ff9d8dc27ff4f15",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a",
                "patch": "@@ -356,6 +356,10 @@ Fixed bugs:\n    when writing zips or jars.\n    Bugzilla Report 45548\n \n+ * <sync> could into a NullPointerException when faced with broken\n+   symbolic links.\n+   Bugzilla Report 46747.\n+\n Other changes:\n --------------\n  * A HostInfo task was added performing information on hosts, including info on "
            },
            {
                "sha": "7111dd622401baac6abef9d56e0127b75077dcda",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Sync.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/src/main/org/apache/tools/ant/taskdefs/Sync.java",
                "raw_url": "https://github.com/apache/ant/raw/1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a/src/main/org/apache/tools/ant/taskdefs/Sync.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Sync.java?ref=1113e19f88b9d6340a8b6bb9c238d35ea6b86d6a",
                "patch": "@@ -235,7 +235,8 @@ private void logRemovedCount(int count, String prefix,\n         // delete them.\n         for (int i = dirs.length - 1; i >= 0; --i) {\n             File f = new File(toDir, dirs[i]);\n-            if (f.list().length < 1) {\n+            String[] children = f.list();\n+            if (children == null || children.length < 1) {\n                 log(\"Removing orphan directory: \" + f, Project.MSG_DEBUG);\n                 f.delete();\n                 ++removedCount[0];"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/983f0dbc16a4c8b93fae21bfc480b03138104a7a",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/d8ae5c5bdd298b9b99b5f9d6f82c4255c01036d2",
        "message": "fix NPE when running inside a container that puts non-String values inside the system properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@671018 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_76",
        "file": [
            {
                "sha": "f76fae1ebac50a158f959d4ccf6d1e24e344f959",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/983f0dbc16a4c8b93fae21bfc480b03138104a7a/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/983f0dbc16a4c8b93fae21bfc480b03138104a7a/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=983f0dbc16a4c8b93fae21bfc480b03138104a7a",
                "patch": "@@ -73,6 +73,9 @@ Fixed bugs:\n    within messageLogged while a different thread also accessed one.\n    Bugzilla report 45194\n \n+ * Handle null result of system getProperty() in CommandlineJava.\n+   Similar to Bugzilla report 42334.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "921eebd817db11873c59d64bbca67cde74381f13",
                "filename": "src/main/org/apache/tools/ant/types/CommandlineJava.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/983f0dbc16a4c8b93fae21bfc480b03138104a7a/src/main/org/apache/tools/ant/types/CommandlineJava.java",
                "raw_url": "https://github.com/apache/ant/raw/983f0dbc16a4c8b93fae21bfc480b03138104a7a/src/main/org/apache/tools/ant/types/CommandlineJava.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/CommandlineJava.java?ref=983f0dbc16a4c8b93fae21bfc480b03138104a7a",
                "patch": "@@ -140,7 +140,10 @@ public void setSystem() throws BuildException {\n                 Properties p = new Properties();\n                 for (Enumeration e = sys.propertyNames(); e.hasMoreElements();) {\n                     String name = (String) e.nextElement();\n-                    p.put(name, sys.getProperty(name));\n+                    String value = sys.getProperty(name);\n+                    if (name != null && value != null) {\n+                        p.put(name, value);\n+                    }\n                 }\n                 p.putAll(mergePropertySets());\n                 for (Enumeration e = variables.elements(); e.hasMoreElements();) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/561706f38cb5df71cf79785f4c6e5607de4dafa7",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/811a4f50d8fdff2d5813df05c284404aca263654",
        "message": "Bugzilla 44689: NPE with multiple targets and id's in task\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@641903 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_77",
        "file": [
            {
                "sha": "6aa9eb41c7a778c254d5c275cea36d88768e7e5d",
                "filename": "src/main/org/apache/tools/ant/UnknownElement.java",
                "status": "modified",
                "additions": 6,
                "deletions": 3,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/561706f38cb5df71cf79785f4c6e5607de4dafa7/src/main/org/apache/tools/ant/UnknownElement.java",
                "raw_url": "https://github.com/apache/ant/raw/561706f38cb5df71cf79785f4c6e5607de4dafa7/src/main/org/apache/tools/ant/UnknownElement.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/UnknownElement.java?ref=561706f38cb5df71cf79785f4c6e5607de4dafa7",
                "patch": "@@ -288,11 +288,14 @@ public void execute() {\n                 ((Task) realThing).execute();\n             }\n         } finally {\n-            // Finished executing the task, null it to allow\n+            // Finished executing the task\n+            // null it (unless it has an ID) to allow\n             // GC do its job\n             // If this UE is used again, a new \"realthing\" will be made\n-            realThing = null;\n-            getWrapper().setProxy(null);\n+            if (getWrapper().getId() == null) {\n+                realThing = null;\n+                getWrapper().setProxy(null);\n+            }\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/a9592b869e5648b3508ecd855bddf1dc182cb8f6",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/709b55e997f18733d16471926b27d2776cd27402",
        "message": "Bugzilla 43292: filtermapper could throw an NPE. - change FileUtils to return an empty string rather than null for zero-length files\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@572302 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_78",
        "file": [
            {
                "sha": "f5c34f1343865ddfd0fe84c4bf03ed2f5b9170a7",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/a9592b869e5648b3508ecd855bddf1dc182cb8f6/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/a9592b869e5648b3508ecd855bddf1dc182cb8f6/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=a9592b869e5648b3508ecd855bddf1dc182cb8f6",
                "patch": "@@ -154,6 +154,9 @@ Fixed bugs:\n * War task failed with \"No WEB-INF/web.xml file was added\" when called\n   a second time. Bugzilla 43121.\n \n+* FilterMapper could throw an NPE.\n+  Bugzilla 43292.\n+\n Other changes:\n --------------\n * <script> now has basic support for JavaFX scripts"
            },
            {
                "sha": "95e463972848cf99649feaf92122ef089a4a5dff",
                "filename": "src/main/org/apache/tools/ant/util/FileUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/a9592b869e5648b3508ecd855bddf1dc182cb8f6/src/main/org/apache/tools/ant/util/FileUtils.java",
                "raw_url": "https://github.com/apache/ant/raw/a9592b869e5648b3508ecd855bddf1dc182cb8f6/src/main/org/apache/tools/ant/util/FileUtils.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/FileUtils.java?ref=a9592b869e5648b3508ecd855bddf1dc182cb8f6",
                "patch": "@@ -930,7 +930,7 @@ public static String readFully(Reader rdr, int bufferSize)\n                 textBuffer.append(new String(buffer, 0, bufferLength));\n             }\n         }\n-        return (textBuffer == null) ? null : textBuffer.toString();\n+        return (textBuffer == null) ? \"\" : textBuffer.toString();\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/051ba1279d96c822e7708a348a4d7bc0393b89f9",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ee2779b5b94b830a888590c16076952941290922",
        "message": "pr 42179: Delete cannot handle (NPE) fileset without file or directory specified.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@531575 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_79",
        "file": [
            {
                "sha": "c439d3e351e615e8a93b40abddf6a97f9aa1a19f",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "status": "modified",
                "additions": 7,
                "deletions": 3,
                "changes": 10,
                "blob_url": "https://github.com/apache/ant/blob/051ba1279d96c822e7708a348a4d7bc0393b89f9/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "raw_url": "https://github.com/apache/ant/raw/051ba1279d96c822e7708a348a4d7bc0393b89f9/src/main/org/apache/tools/ant/taskdefs/Delete.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Delete.java?ref=051ba1279d96c822e7708a348a4d7bc0393b89f9",
                "patch": "@@ -562,12 +562,16 @@ regular logging (backwards as that sounds).  In that\n                 fs = (FileSet) fs.clone();\n                 fs.setProject(getProject());\n             }\n-            if (!fs.getDir().isDirectory()) {\n-                handle(\"Directory does not exist:\" + fs.getDir());\n+            File fsDir = fs.getDir();\n+            if (fsDir == null) {\n+                throw new BuildException(\n+                        \"File or Resource without directory or file specified\");\n+            } else if (!fsDir.isDirectory()) {\n+                handle(\"Directory does not exist:\" + fsDir);\n             } else {\n                 resourcesToDelete.add(fs);\n                 if (includeEmpty) {\n-                    filesetDirs.add(new ReverseDirs(fs.getDir(), fs\n+                    filesetDirs.add(new ReverseDirs(fsDir, fs\n                             .getDirectoryScanner().getIncludedDirectories()));\n                 }\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/1af32c7d515fe9f14a34c9a69ac963a71e6407e4",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/d121889dca687fc281d6a24e90be4cf8a438d459",
        "message": "project cannot be null, few lines bewore and next line would throw NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@526485 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_80",
        "file": [
            {
                "sha": "a83996c3a56058547b094856a8f24ebc7e732d11",
                "filename": "src/main/org/apache/tools/ant/Main.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/1af32c7d515fe9f14a34c9a69ac963a71e6407e4/src/main/org/apache/tools/ant/Main.java",
                "raw_url": "https://github.com/apache/ant/raw/1af32c7d515fe9f14a34c9a69ac963a71e6407e4/src/main/org/apache/tools/ant/Main.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Main.java?ref=1af32c7d515fe9f14a34c9a69ac963a71e6407e4",
                "patch": "@@ -799,9 +799,8 @@ protected void addBuildListeners(Project project) {\n             BuildListener listener =\n                     (BuildListener) ClasspathUtils.newInstance(className,\n                             Main.class.getClassLoader(), BuildListener.class);\n-            if (project != null) {\n-                project.setProjectReference(listener);\n-            }\n+            project.setProjectReference(listener);\n+\n             project.addBuildListener(listener);\n         }\n     }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/e15b1d67a0dc5a117442c1df6e5044d199059907",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/bddca28a0f8834581c589bf2d8e6c9a0232a7488",
        "message": "#41422: <junit> in Ant 1.7.0 could throw NPE if no <classpath> was defined.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@498519 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_81",
        "file": [
            {
                "sha": "629d42eb8802612cd7389188c54d30f3878abd91",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/e15b1d67a0dc5a117442c1df6e5044d199059907/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/e15b1d67a0dc5a117442c1df6e5044d199059907/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=e15b1d67a0dc5a117442c1df6e5044d199059907",
                "patch": "@@ -7,6 +7,9 @@ Changes that could break older environments:\n Fixed bugs:\n -----------\n \n+* <junit> in Ant 1.7.0 could throw NPE if no <classpath> was defined.\n+  Bugzilla report 41422.\n+\n * In Ant 1.7.0, <fileset> in <javadoc> does not by default include only\n   **/*.java as the documentation claims and earlier revisions did.\n   Bugzilla report 41264."
            },
            {
                "sha": "541a08e506be7c48f74de34f722261105cae89af",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/e15b1d67a0dc5a117442c1df6e5044d199059907/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "raw_url": "https://github.com/apache/ant/raw/e15b1d67a0dc5a117442c1df6e5044d199059907/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java?ref=e15b1d67a0dc5a117442c1df6e5044d199059907",
                "patch": "@@ -756,7 +756,10 @@ public void execute() throws BuildException {\n         if (splitJunit) {\n             Path path = new Path(getProject());\n             path.add(antRuntimeClasses);\n-            path.add(getCommandline().getClasspath());\n+            Path extra = getCommandline().getClasspath();\n+            if (extra != null) {\n+                path.add(extra);\n+            }\n             mirrorLoader = new SplitLoader(myLoader, path);\n         } else {\n             mirrorLoader = myLoader;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/bc28d31407036126e05e4d64f2b138af69603c7a",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/efa433f65ff68b646d9b7232f0968a9b697c5cc2",
        "message": "last minute; avoid NPE when attempting to map no-name resource. Bugzilla 39960.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@484850 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_82",
        "file": [
            {
                "sha": "9b681a596ed6b8a1b613223b1540af0918aba006",
                "filename": "src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/apache/ant/blob/bc28d31407036126e05e4d64f2b138af69603c7a/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "raw_url": "https://github.com/apache/ant/raw/bc28d31407036126e05e4d64f2b138af69603c7a/src/main/org/apache/tools/ant/util/ResourceUtils.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ResourceUtils.java?ref=bc28d31407036126e05e4d64f2b138af69603c7a",
                "patch": "@@ -155,12 +155,19 @@ public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,\n         Union result = new Union();\n         for (Iterator iter = source.iterator(); iter.hasNext();) {\n             Resource sr = (Resource) iter.next();\n-            String[] targetnames = mapper.mapFileName(\n-                sr.getName().replace('/', File.separatorChar));\n+            String srName = sr.getName();\n+            srName = srName == null\n+                ? srName : srName.replace('/', File.separatorChar);\n \n+            String[] targetnames = null;\n+            try {\n+                targetnames = mapper.mapFileName(srName);\n+            } catch (Exception e) {\n+\t\tlogTo.log(\"Caught \" + e + \" mapping resource \" + sr,\n+                    Project.MSG_VERBOSE);\n+            }\n             if (targetnames == null || targetnames.length == 0) {\n-                logTo.log(sr.getName()\n-                      + \" skipped - don\\'t know how to handle it\",\n+                logTo.log(sr + \" skipped - don\\'t know how to handle it\",\n                       Project.MSG_VERBOSE);\n                 continue;\n             }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/5a4fe63383258162c3374aebd048dee87efb4fd6",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/aa83249a9156ead7ae2c5a7c591fd3e90ebf5d00",
        "message": "Fix comparison w/ exposed NPE\nPR: 36093\nObtained from: Dave Brosius\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278513 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_83",
        "file": [
            {
                "sha": "220aed6b167e310e3632d80f898568e09e3bbdde",
                "filename": "src/main/org/apache/tools/ant/taskdefs/SignJar.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/5a4fe63383258162c3374aebd048dee87efb4fd6/src/main/org/apache/tools/ant/taskdefs/SignJar.java",
                "raw_url": "https://github.com/apache/ant/raw/5a4fe63383258162c3374aebd048dee87efb4fd6/src/main/org/apache/tools/ant/taskdefs/SignJar.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/SignJar.java?ref=5a4fe63383258162c3374aebd048dee87efb4fd6",
                "patch": "@@ -447,7 +447,7 @@ private void addTimestampAuthorityCommands(final ExecTask cmd) {\n      * @return true if the signedjarFile is considered up to date\n      */\n     protected boolean isUpToDate(File jarFile, File signedjarFile) {\n-        if (null == jarFile && !jarFile.exists()) {\n+        if (null == jarFile || !jarFile.exists()) {\n             //these are pathological cases, but retained in case somebody\n             //subclassed us.\n             return false;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/8b432916d58da1e110988661c8febfde91d523a7",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/47b6202445e14bb51602a411a77b778e9aafa750",
        "message": "Fix reversed ?: consequences; avoid NPE.\nPR: 36094\nObtained from: Dave Brosius\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278509 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_84",
        "file": [
            {
                "sha": "eccbdc22cafa145779c357d3d2a3a8de51e8f769",
                "filename": "src/main/org/apache/tools/ant/types/Resource.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/8b432916d58da1e110988661c8febfde91d523a7/src/main/org/apache/tools/ant/types/Resource.java",
                "raw_url": "https://github.com/apache/ant/raw/8b432916d58da1e110988661c8febfde91d523a7/src/main/org/apache/tools/ant/types/Resource.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/Resource.java?ref=8b432916d58da1e110988661c8febfde91d523a7",
                "patch": "@@ -294,7 +294,7 @@ public int hashCode() {\n             return getCheckedRef().hashCode();\n         }\n         String name = getName();\n-        return MAGIC * (name == null ? name.hashCode() : NULL_NAME);\n+        return MAGIC * (name == null ? NULL_NAME : name.hashCode());\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/529deb1cfd477b2c9b84923dd573c0191ad900c4",
        "message": "Not 100% sure this fixes the entire bug, but it eliminates NPEs for me.\nPR: 34722\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278219 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_85",
        "file": [
            {
                "sha": "a2534a1bbbc821e36ea75fe9bdb45a822188c6fb",
                "filename": "src/main/org/apache/tools/ant/DirectoryScanner.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "raw_url": "https://github.com/apache/ant/raw/2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/DirectoryScanner.java?ref=2fbb2e62ab0d3d323a75c6baf00a2e675c7fd6f5",
                "patch": "@@ -956,6 +956,12 @@ protected void slowScan() {\n         try {\n             synchronized (this) {\n \n+                // set in/excludes to reasonable defaults if needed:\n+                boolean nullIncludes = (includes == null);\n+                includes = nullIncludes ? new String[] {\"**\"} : includes;\n+                boolean nullExcludes = (excludes == null);\n+                excludes = nullExcludes ? new String[0] : excludes;\n+\n                 String[] excl = new String[dirsExcluded.size()];\n                 dirsExcluded.copyInto(excl);\n         \n@@ -974,6 +980,9 @@ protected void slowScan() {\n                                 notIncl[i] + File.separator, false);\n                     }\n                 }\n+                clearCaches();\n+                includes = nullIncludes ? null : includes;\n+                excludes = nullExcludes ? null : excludes;\n             }\n         } finally {\n             synchronized (slowScanLock) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/0777fa853af3a619d777adaead96e9c0d1aff291",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/c5fc0e2e08e3567841368f443e1f5b5d1912f8c8",
        "message": "Eliminate possible NPE; note that previous change\naddressed bug 33118 at least partially.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277786 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_86",
        "file": [
            {
                "sha": "e68859492e2006558dc3af9a5d8497cf2205637e",
                "filename": "src/main/org/apache/tools/ant/DirectoryScanner.java",
                "status": "modified",
                "additions": 9,
                "deletions": 8,
                "changes": 17,
                "blob_url": "https://github.com/apache/ant/blob/0777fa853af3a619d777adaead96e9c0d1aff291/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "raw_url": "https://github.com/apache/ant/raw/0777fa853af3a619d777adaead96e9c0d1aff291/src/main/org/apache/tools/ant/DirectoryScanner.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/DirectoryScanner.java?ref=0777fa853af3a619d777adaead96e9c0d1aff291",
                "patch": "@@ -773,14 +773,15 @@ public void scan() throws IllegalStateException {\n \n                 if (basedir == null) {\n                     illegal = new IllegalStateException(\"No basedir set\");\n-                }\n-                if (!basedir.exists()) {\n-                    illegal = new IllegalStateException(\"basedir \" + basedir\n-                                                    + \" does not exist\");\n-                }\n-                if (!basedir.isDirectory()) {\n-                    illegal = new IllegalStateException(\"basedir \" + basedir\n-                                                    + \" is not a directory\");\n+                } else {\n+                    if (!basedir.exists()) {\n+                        illegal = new IllegalStateException(\"basedir \" + basedir\n+                                                        + \" does not exist\");\n+                    }\n+                    if (!basedir.isDirectory()) {\n+                        illegal = new IllegalStateException(\"basedir \" + basedir\n+                                                        + \" is not a directory\");\n+                    }\n                 }\n                 if (illegal != null) {\n                     throw illegal;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/ab3f805895e7c27ca8a724d94c34fabbc9cf3233",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/756f96fdf3b1e01b2a0ddd5d1051770dec2540f2",
        "message": "NPE when adding comment to zip file that is not there\nPR: 33779\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277746 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_87",
        "file": [
            {
                "sha": "739dc3379ee1defd3dde49789df5c5f36c312056",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/ab3f805895e7c27ca8a724d94c34fabbc9cf3233/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "raw_url": "https://github.com/apache/ant/raw/ab3f805895e7c27ca8a724d94c34fabbc9cf3233/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=ab3f805895e7c27ca8a724d94c34fabbc9cf3233",
                "patch": "@@ -553,7 +553,9 @@ public void executeMain() throws BuildException {\n                     }\n                     addResources(oldFiles, r, zOut);\n                 }\n-                zOut.setComment(comment);\n+                if (zOut != null) {\n+                    zOut.setComment(comment);\n+                }\n                 finalizeZipOutputStream(zOut);\n \n                 // If we've been successful on an update, delete the"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/83c26f549b5ef21e9956ff3e88ccb18fc7d96065",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/18994a02c97de68fbcae9b887df71671491157c1",
        "message": " NPE when when <presetdef> tries to configure a task that\n  cannot be instantiated.\nPR:  33689\nReported by: Steve Loughran\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277704 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_88",
        "file": [
            {
                "sha": "f0af8797ed6e6ef7d134c0eb57c8232995856e77",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/83c26f549b5ef21e9956ff3e88ccb18fc7d96065/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/83c26f549b5ef21e9956ff3e88ccb18fc7d96065/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=83c26f549b5ef21e9956ff3e88ccb18fc7d96065",
                "patch": "@@ -328,6 +328,9 @@ Fixed bugs:\n * <zip> couldn't store files with size between 2GB and 4GB (the\n   upper limit set by the ZIP format itself).  Bugzilla Report 33310.\n \n+* NPE when when <presetdef> tries to configure a task that\n+  cannot be instantiated. Bugzilla Report 33689.\n+\n Changes from Ant 1.6.1 to Ant 1.6.2\n ===================================\n "
            },
            {
                "sha": "fd888f42e58fb6f52aba7b7c09a844f7e669cc9e",
                "filename": "src/main/org/apache/tools/ant/UnknownElement.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/83c26f549b5ef21e9956ff3e88ccb18fc7d96065/src/main/org/apache/tools/ant/UnknownElement.java",
                "raw_url": "https://github.com/apache/ant/raw/83c26f549b5ef21e9956ff3e88ccb18fc7d96065/src/main/org/apache/tools/ant/UnknownElement.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/UnknownElement.java?ref=83c26f549b5ef21e9956ff3e88ccb18fc7d96065",
                "patch": "@@ -404,6 +404,11 @@ protected Object makeObject(UnknownElement ue, RuntimeConfigurable w) {\n         if (o instanceof PreSetDef.PreSetDefinition) {\n             PreSetDef.PreSetDefinition def = (PreSetDef.PreSetDefinition) o;\n             o = def.createObject(ue.getProject());\n+            if (o == null) {\n+                throw getNotFoundException(\n+                    \"preset \" + name,\n+                    def.getPreSets().getComponentName());\n+            }\n             ue.applyPreSet(def.getPreSets());\n             if (o instanceof Task) {\n                 Task task = (Task) o;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d798ef13277930790f7122fbeb40ae6ba7ca6c9c",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/333d594f5ec3ad9addb62a8b9dd806b3fc0196e0",
        "message": "Document description NPE; move FileUtils.createNewFile(2 param) to 1.6 branch;\ncorrect libraries from getlibraries.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277477 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_89",
        "file": [
            {
                "sha": "88bb3d9b71f076e9a5cd7b2c29ee35fadaf82edb",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/apache/ant/blob/d798ef13277930790f7122fbeb40ae6ba7ca6c9c/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/d798ef13277930790f7122fbeb40ae6ba7ca6c9c/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=d798ef13277930790f7122fbeb40ae6ba7ca6c9c",
                "patch": "@@ -89,7 +89,7 @@ Other changes:\n * Added a new \"failall\" value for the onerror attribute of <typedef>.\n   Bugzilla report 31685.\n \n-* New task <getlibraries> can retrieve library files from a maven repository.\n+* New task <libraries> can retrieve library files from a maven repository.\n \n * unzip/unwar/unjar/untar now supports a nested mapper, which lets you unzip\n   in useful ways.\n@@ -108,9 +108,6 @@ Other changes:\n \n * Added isfileselected condition.\n \n-* Overloaded FileUtils.createNewFile with a boolean mkdirs attribute\n-  to create nonexistent parent directories.\n-\n * Added support to the touch task for a mkdirs attribute to create\n   nonexistent parent directories before touching new files.\n \n@@ -191,6 +188,9 @@ Other changes:\n * Made the dest attribute of the apply task optional; mapped target\n   filenames will be interpreted as absolute pathnames when dest is omitted.\n \n+* Overloaded FileUtils.createNewFile with a boolean mkdirs attribute\n+  to create nonexistent parent directories.\n+\n Fixed bugs:\n -----------\n \n@@ -269,6 +269,9 @@ Fixed bugs:\n \n * propertyset references did not handle nested propertyset references.\n \n+* oata.types.Description.getDescription(Project) would throw a\n+  NullPointerException when the \"ant.targets\" reference was unset.\n+\n Changes from Ant 1.6.1 to Ant 1.6.2\n ===================================\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/3d867eee2e54bed60ba1ef28af554501622d6c5b",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/d81308747b0601b3f82c5621b6cc218135243028",
        "message": "Avoid NPE thrown when using oata.helper.ProjectHelperImpl .\nReported by: Mark D. Hansen\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277282 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_90",
        "file": [
            {
                "sha": "b9a6d292054bcfd2a7ad209f57943f8ca0872528",
                "filename": "src/main/org/apache/tools/ant/types/Description.java",
                "status": "modified",
                "additions": 6,
                "deletions": 3,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/3d867eee2e54bed60ba1ef28af554501622d6c5b/src/main/org/apache/tools/ant/types/Description.java",
                "raw_url": "https://github.com/apache/ant/raw/3d867eee2e54bed60ba1ef28af554501622d6c5b/src/main/org/apache/tools/ant/types/Description.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/Description.java?ref=3d867eee2e54bed60ba1ef28af554501622d6c5b",
                "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright  2001-2004 The Apache Software Foundation\n+ * Copyright  2001-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n@@ -65,16 +65,19 @@ public void addText(String text) {\n     }\n \n     /**\n-     * return the descriptions from all the targets of\n+     * Return the descriptions from all the targets of\n      * a project.\n      *\n      * @param project the project to get the descriptions for.\n      * @return a string containing the concatenated descriptions of\n      *         the targets.\n      */\n     public static String getDescription(Project project) {\n-        StringBuffer description = new StringBuffer();\n         Vector targets = (Vector) project.getReference(\"ant.targets\");\n+        if (targets == null) {\n+            return null;\n+        }\n+        StringBuffer description = new StringBuffer();\n         for (int i = 0; i < targets.size(); i++) {\n             Target t = (Target) targets.elementAt(i);\n             concatDescriptions(project, t, description);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/509ae3e1f5c437d38231e2d2b84b5aad0d52e5f7",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/3f8c6d6ac425fa9d493d0eae88d3baf8e422d694",
        "message": "Fix a NPE that occurred apparently because Folder.list() can return null\nThanks to Bob Evans\nPR: 31965\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277017 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_91",
        "file": [
            {
                "sha": "462d959122fb7a3d9b843bb91b30c2643d179c5c",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/509ae3e1f5c437d38231e2d2b84b5aad0d52e5f7/src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java",
                "raw_url": "https://github.com/apache/ant/raw/509ae3e1f5c437d38231e2d2b84b5aad0d52e5f7/src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java?ref=509ae3e1f5c437d38231e2d2b84b5aad0d52e5f7",
                "patch": "@@ -580,7 +580,10 @@ UnmatchedFileMap init(java.io.File localFolder, Folder remoteFolder) {\n             }\n \n             String[] localFiles = localFolder.list();\n-\n+            // PR 31965 says that it can return null\n+            if (localFiles == null){\n+                return this;\n+            }\n             for (int i = 0; i < localFiles.length; i++) {\n                 java.io.File localFile =\n                     new java.io.File(localFolder, localFiles[i]).getAbsoluteFile();"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/1b60864bf1589c54f8ee5d72effc9edd7aced4e0",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/4f1313504aa0fb3f719893e4a178c144bcbcd2c1",
        "message": "Fix npe if <include> does not have a \"name\" attribute\nPR: 25982\nObtained from: Dawid Weiss\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275875 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_92",
        "file": [
            {
                "sha": "6e75aef795ca29262257babd972f883a039321db",
                "filename": "src/main/org/apache/tools/ant/types/PatternSet.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/1b60864bf1589c54f8ee5d72effc9edd7aced4e0/src/main/org/apache/tools/ant/types/PatternSet.java",
                "raw_url": "https://github.com/apache/ant/raw/1b60864bf1589c54f8ee5d72effc9edd7aced4e0/src/main/org/apache/tools/ant/types/PatternSet.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/PatternSet.java?ref=1b60864bf1589c54f8ee5d72effc9edd7aced4e0",
                "patch": "@@ -123,7 +123,7 @@ private boolean valid(Project p) {\n         }\n \n         public String toString() {\n-            StringBuffer buf = new StringBuffer(name);\n+            StringBuffer buf = new StringBuffer(name != null ? name : \"\");\n             if ((ifCond != null) || (unlessCond != null)) {\n                 buf.append(\":\");\n                 String connector = \"\";"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/efef302a3da9a9e063da729c92f6f2b997884a9a",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/c977aacfc4fa74e97980255432216d87bf617018",
        "message": "Allow references and properties to be null without causing NPE in BSF\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275699 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_93",
        "file": [
            {
                "sha": "7e876c5c306e473099ade987aab160ac852b6141",
                "filename": "src/main/org/apache/tools/ant/util/ScriptRunner.java",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/apache/ant/blob/efef302a3da9a9e063da729c92f6f2b997884a9a/src/main/org/apache/tools/ant/util/ScriptRunner.java",
                "raw_url": "https://github.com/apache/ant/raw/efef302a3da9a9e063da729c92f6f2b997884a9a/src/main/org/apache/tools/ant/util/ScriptRunner.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/util/ScriptRunner.java?ref=efef302a3da9a9e063da729c92f6f2b997884a9a",
                "patch": "@@ -139,7 +139,15 @@ public void executeScript(String execName) throws BuildException {\n             for (Iterator i = beans.keySet().iterator(); i.hasNext();) {\n                 String key = (String) i.next();\n                 Object value = beans.get(key);\n-                manager.declareBean(key, value, value.getClass());\n+                if (value != null) {\n+                    manager.declareBean(key, value, value.getClass());\n+                } else {\n+                    // BSF uses a hashtable to store values\n+                    // so cannot declareBean with a null value\n+                    // So need to remove any bean of this name as\n+                    // that bean should not be visible\n+                    manager.undeclareBean(key);\n+                }\n             }\n \n             // execute the script"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/7b90e493e8f5388bf88f0d951880d6667f9a8016",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/da7ebd07b866580dae3c60cd4c7e3aefd0f335f0",
        "message": "It is legal to omit the target attribute in <ant>, don't die with a NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275211 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_94",
        "file": [
            {
                "sha": "bb631c0759d517f59ee167d7bbe1dfa785dffb70",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "status": "modified",
                "additions": 17,
                "deletions": 10,
                "changes": 27,
                "blob_url": "https://github.com/apache/ant/blob/7b90e493e8f5388bf88f0d951880d6667f9a8016/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "raw_url": "https://github.com/apache/ant/raw/7b90e493e8f5388bf88f0d951880d6667f9a8016/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=7b90e493e8f5388bf88f0d951880d6667f9a8016",
                "patch": "@@ -365,9 +365,7 @@ public void execute() throws BuildException {\n                 .equals(getProject().getProperty(\"ant.file\"))\n                 && getOwningTarget() != null) {\n \n-                String owningTargetName = getOwningTarget().getName();\n-\n-                if (owningTargetName.equals(\"\")) {\n+                if (getOwningTarget().getName().equals(\"\")) {\n                     if (getTaskName().equals(\"antcall\")) {\n                         throw new BuildException(\"antcall must not be used at\"\n                                                  + \" the top level.\");\n@@ -376,7 +374,22 @@ public void execute() throws BuildException {\n                                                  + \" top level must not invoke\"\n                                                  + \" its own build file.\");\n                     }\n-                } else if (owningTargetName.equals(target)) {\n+                }\n+            }\n+\n+            ProjectHelper.configureProject(newProject, new File(antFile));\n+\n+            if (target == null) {\n+                target = newProject.getDefaultTarget();\n+            }\n+\n+            if (newProject.getProperty(\"ant.file\")\n+                .equals(getProject().getProperty(\"ant.file\"))\n+                && getOwningTarget() != null) {\n+\n+                String owningTargetName = getOwningTarget().getName();\n+\n+                if (owningTargetName.equals(target)) {\n                     throw new BuildException(getTaskName() + \" task calling \"\n                                              + \"its own parent target.\");\n                 } else {\n@@ -393,12 +406,6 @@ public void execute() throws BuildException {\n                 }\n             }\n \n-            ProjectHelper.configureProject(newProject, new File(antFile));\n-\n-            if (target == null) {\n-                target = newProject.getDefaultTarget();\n-            }\n-\n             addReferences();\n \n             if (target != null) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/a511fb22e7f6ac3b905cd1d4aa17a6445e715e42",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/62329a45776aa25e6dae15e1b751417fed05d7bb",
        "message": "Throw a BuildException if the root directory does not exist, instead of letting IndexGen NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274540 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_95",
        "file": [
            {
                "sha": "ff03ad41707a0057c5538d168f96aa5b9173fb78",
                "filename": "proposal/xdocs/src/org/apache/ant/xdoclet/IndexGen.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/a511fb22e7f6ac3b905cd1d4aa17a6445e715e42/proposal/xdocs/src/org/apache/ant/xdoclet/IndexGen.java",
                "raw_url": "https://github.com/apache/ant/raw/a511fb22e7f6ac3b905cd1d4aa17a6445e715e42/proposal/xdocs/src/org/apache/ant/xdoclet/IndexGen.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/xdocs/src/org/apache/ant/xdoclet/IndexGen.java?ref=a511fb22e7f6ac3b905cd1d4aa17a6445e715e42",
                "patch": "@@ -81,6 +81,10 @@ public void execute() throws BuildException {\n \n         String[] categories = rootDir.list();\n \n+        if (categories == null) {\n+            throw new BuildException(\"Root directory \\\"\" + rootDir.getPath() + \"\\\" does not exist!\", getLocation());\n+        }\n+\n         StringBuffer sb = new StringBuffer();\n         sb.append(\"<html><head><title>xdocs index</title></head>\");\n         sb.append(\"<body>\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/6528412d219b05ca763dc198bd3e7d75754e57c5",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ef23aba6648165c7037d828b8addb77e7da9be49",
        "message": "Avoid NPE in <zip> and friends for empty <fileset>s.\n\nSubmitted by:\tNico Seessle <nico at apache dot org>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274176 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_96",
        "file": [
            {
                "sha": "9b94dea98e3747db1917ab7656503bdcc1a20d40",
                "filename": "src/etc/testcases/taskdefs/jar.xml",
                "status": "modified",
                "additions": 21,
                "deletions": 0,
                "changes": 21,
                "blob_url": "https://github.com/apache/ant/blob/6528412d219b05ca763dc198bd3e7d75754e57c5/src/etc/testcases/taskdefs/jar.xml",
                "raw_url": "https://github.com/apache/ant/raw/6528412d219b05ca763dc198bd3e7d75754e57c5/src/etc/testcases/taskdefs/jar.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/jar.xml?ref=6528412d219b05ca763dc198bd3e7d75754e57c5",
                "patch": "@@ -5,6 +5,8 @@\n   <property name=\"tmp.jar\" location=\"tmp.jar\"/>\n   <property name=\"tmp.dir\" location=\"jartmp\"/>\n   <property name=\"tmp.zip\" location=\"tmp.zip\"/>\n+  <property name=\"tmp1.dir\" location=\"jartmp1\"/>\n+  <property name=\"tmp2.dir\" location=\"jartmp2\"/>\n \n   <target name=\"test1\">\n     <jar/>\n@@ -166,6 +168,25 @@\n     <delete file=\"${tmp.jar}\" />\n     <delete dir=\"${tmp.dir}\"/>\n     <delete file=\"${tmp.zip}\" />\n+    <delete dir=\"${tmp1.dir}\"/>\n+    <delete dir=\"${tmp2.dir}\"/>\n+  </target>\n+\n+  <target name=\"testCreateWithEmptyFilesetSetUp\">\n+    <mkdir dir=\"${tmp1.dir}\"/>\n+    <mkdir dir=\"${tmp2.dir}\"/>\n+    <echo file=\"${tmp2.dir}/foo.txt\" message=\"foo\"/>\n+  </target>\n+\n+  <target name=\"testCreateWithEmptyFileset\">\n+    <jar destfile=\"${tmp.jar}\">\n+      <fileset dir=\"${tmp1.dir}\">\n+        <include name=\"**/*.doesNotExist\"/>\n+      </fileset>\n+      <fileset dir=\"${tmp2.dir}\">\n+        <include name=\"**/foo.txt\"/>\n+      </fileset>\n+    </jar>\n   </target>\n \n </project>"
            },
            {
                "sha": "4e696fa72a2a42f6d2c0c661c86584a8570c2b76",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/6528412d219b05ca763dc198bd3e7d75754e57c5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "raw_url": "https://github.com/apache/ant/raw/6528412d219b05ca763dc198bd3e7d75754e57c5/src/main/org/apache/tools/ant/taskdefs/Zip.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Zip.java?ref=6528412d219b05ca763dc198bd3e7d75754e57c5",
                "patch": "@@ -750,6 +750,7 @@ private synchronized ZipScanner getZipScanner() {\n \n         for (int i = 0; i < filesets.length; i++) {\n             if (initialResources[i].length == 0) {\n+                newerResources[i] = new Resource[] {};\n                 continue;\n             }\n             "
            },
            {
                "sha": "492146399c3d0cfabcb5516e461ea005e33b0a56",
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/JarTest.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/apache/ant/blob/6528412d219b05ca763dc198bd3e7d75754e57c5/src/testcases/org/apache/tools/ant/taskdefs/JarTest.java",
                "raw_url": "https://github.com/apache/ant/raw/6528412d219b05ca763dc198bd3e7d75754e57c5/src/testcases/org/apache/tools/ant/taskdefs/JarTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/JarTest.java?ref=6528412d219b05ca763dc198bd3e7d75754e57c5",
                "patch": "@@ -214,4 +214,9 @@ public void testRecreateZipfilesetWithUpdateNewerFile() {\n                      \"testRecreateZipfilesetWithUpdateNewerFile\");\n     }\n \n+    public void testCreateWithEmptyFileset() {\n+        executeTarget(\"testCreateWithEmptyFilesetSetUp\");\n+        executeTarget(\"testCreateWithEmptyFileset\");\n+        executeTarget(\"testCreateWithEmptyFileset\");\n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/60528537f237073bd8f93a2489d0ebff3e4197f4",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/1bd67b5b831c3c66b293536e349e9b33b5e48970",
        "message": "\"plain\" result formatter could throw NPE if an exception occured in\nthe test's setUp method.\n\nPR: 13465\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273422 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_97",
        "file": [
            {
                "sha": "5d9a32755792a966d793f8ff169d4c345f75f75e",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/60528537f237073bd8f93a2489d0ebff3e4197f4/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/60528537f237073bd8f93a2489d0ebff3e4197f4/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=60528537f237073bd8f93a2489d0ebff3e4197f4",
                "patch": "@@ -25,6 +25,9 @@ Fixed bugs:\n * ant.bat now supports the ANT_ARGS environment variable again (like\n   Ant 1.5 did).\n \n+* The \"plain\" <junit> <formatter> could throw a NullPointerException\n+  if an error occured in setUp.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "c9688be265328ea7c8e81e2fdd8c0cc047240f56",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/apache/ant/blob/60528537f237073bd8f93a2489d0ebff3e4197f4/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "raw_url": "https://github.com/apache/ant/raw/60528537f237073bd8f93a2489d0ebff3e4197f4/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java?ref=60528537f237073bd8f93a2489d0ebff3e4197f4",
                "patch": "@@ -203,10 +203,14 @@ public void endTest(Test test) {\n                 return;\n             }\n             Long l = (Long) testStarts.get(test);\n-            wri.println(\" took \" \n-                        + nf.format((System.currentTimeMillis() - l.longValue())\n-                                    / 1000.0)\n-                        + \" sec\");\n+            double seconds = 0;\n+            // can be null if an error occured in setUp\n+            if (l != null) {\n+                seconds = \n+                    (System.currentTimeMillis() - l.longValue()) / 1000.0;\n+            }\n+            \n+            wri.println(\" took \" + nf.format(seconds) + \" sec\");\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/337ae879772b1fb950f851b7bafbc89b6293cc85",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/67581ea0d7e52dfe48094df3de94b36d715d2071",
        "message": "Avoid getting an NPE by making sure the property attr is set.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272810 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_98",
        "file": [
            {
                "sha": "0afd8186049c804a25d9bc83ba01f0ef86263234",
                "filename": "src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/337ae879772b1fb950f851b7bafbc89b6293cc85/src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "raw_url": "https://github.com/apache/ant/raw/337ae879772b1fb950f851b7bafbc89b6293cc85/src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/UpToDate.java?ref=337ae879772b1fb950f851b7bafbc89b6293cc85",
                "patch": "@@ -223,6 +223,10 @@ public boolean eval() {\n      * than (each of) the corresponding source file(s).\n      */\n     public void execute() throws BuildException {\n+        if (_property == null) {\n+            throw new BuildException(\"property attribute is required.\", \n+                                     location);\n+        }\n         boolean upToDate = eval();\n         if (upToDate) {\n             this.project.setNewProperty(_property, getValue());"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/d1503ea657ceb138b9453ec8f8d1cd5d929fbbde",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ab37fb7c6e7430d4135c3937b39ed6ec0b937ea7",
        "message": "fix nasty NPE in <junit> when the user doesn't specify a nested <classpath>.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272471 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_99",
        "file": [
            {
                "sha": "f36dc8958f3af3238090bf9aea0ecea342fca3ab",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "status": "modified",
                "additions": 13,
                "deletions": 8,
                "changes": 21,
                "blob_url": "https://github.com/apache/ant/blob/d1503ea657ceb138b9453ec8f8d1cd5d929fbbde/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "raw_url": "https://github.com/apache/ant/raw/d1503ea657ceb138b9453ec8f8d1cd5d929fbbde/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java?ref=d1503ea657ceb138b9453ec8f8d1cd5d929fbbde",
                "patch": "@@ -722,14 +722,17 @@ private int executeInVM(JUnitTest arg) throws BuildException {\n         try {\n             log(\"Using System properties \" + System.getProperties(), \n                 Project.MSG_VERBOSE);\n-            Path classpath = (Path) commandline.getClasspath().clone();\n-            if (includeAntRuntime) {\n-                log(\"Implicitly adding \" + antRuntimeClasses + \" to CLASSPATH\", \n-                    Project.MSG_VERBOSE);\n-                classpath.append(antRuntimeClasses);\n-            }\n-\n+            Path userClasspath = commandline.getClasspath();\n+            Path classpath = userClasspath == null \n+                                              ? null \n+                                              : (Path) userClasspath.clone();\n             if (classpath != null) {\n+                if (includeAntRuntime) {\n+                    log(\"Implicitly adding \" + antRuntimeClasses \n+                        + \" to CLASSPATH\", Project.MSG_VERBOSE);\n+                    classpath.append(antRuntimeClasses);\n+                }\n+\n                 cl = new AntClassLoader(null, project, classpath, false);\n                 log(\"Using CLASSPATH \" + cl.getClasspath(),\n                     Project.MSG_VERBOSE);\n@@ -772,7 +775,9 @@ private int executeInVM(JUnitTest arg) throws BuildException {\n             if (sysProperties != null) {\n                 sysProperties.restoreSystem();\n             }\n-            cl.resetThreadContextLoader();\n+            if (cl != null) {\n+                cl.resetThreadContextLoader();\n+            }\n         }\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/434ef8d60826411a8c025af4724097bd33f28747",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/b165169549c4f199906968196ce55274405767d9",
        "message": "Fix for Bug 5637\nNPE in JUnit XMLJunitResultFormatter if setUp() in TestSetup throws AssertionFailedError\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@270512 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_100",
        "file": [
            {
                "sha": "84757cd0a62ab36531d89450c1ff0aaae2e99398",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/434ef8d60826411a8c025af4724097bd33f28747/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java",
                "raw_url": "https://github.com/apache/ant/raw/434ef8d60826411a8c025af4724097bd33f28747/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java?ref=434ef8d60826411a8c025af4724097bd33f28747",
                "patch": "@@ -207,6 +207,15 @@ public void startTest(Test t) {\n      */\n     public void endTest(Test test) {\n         Element currentTest = (Element) testElements.get(test);\n+        \n+        // Fix for bug #5637 - if a junit.extensions.TestSetup is\n+        // used and throws an exception during setUp then startTest\n+        // would never have been called\n+        if (currentTest == null) {\n+            startTest(test);\n+            currentTest = (Element) testElements.get(test);\n+        }\n+        \n         Long l = (Long) testStarts.get(test);\n         currentTest.setAttribute(ATTR_TIME,\n                                  \"\"+((System.currentTimeMillis()-l.longValue())"
            }
        ]
    }
]
[
    {
        "commit": "https://github.com/apache/ant/commit/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/aaed8c297a69c306987d364d432adcd83e2398c0",
        "message": "spread the project instance a little further (this accounts for a\nnumber of NPEs when using <taskdef> that have been reported).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269854 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_101",
        "file": [
            {
                "sha": "61ffddce17240245b5692e37a5acf7e6496079e8",
                "filename": "src/main/org/apache/tools/ant/IntrospectionHelper.java",
                "status": "modified",
                "additions": 4,
                "deletions": 5,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/IntrospectionHelper.java",
                "raw_url": "https://github.com/apache/ant/raw/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/IntrospectionHelper.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/IntrospectionHelper.java?ref=31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
                "patch": "@@ -55,7 +55,6 @@\n package org.apache.tools.ant;\n \n import org.apache.tools.ant.types.Path;\n-import org.apache.tools.ant.types.DataType;\n import org.apache.tools.ant.types.EnumeratedAttribute;\n \n import java.lang.reflect.Method;\n@@ -328,8 +327,8 @@ public Object createElement(Project project, Object element, String elementName)\n         }\n         try {\n             Object nestedElement = nc.create(element);\n-            if (nestedElement instanceof DataType) {\n-                ((DataType)nestedElement).setProject(project);\n+            if (nestedElement instanceof ProjectComponent) {\n+                ((ProjectComponent) nestedElement).setProject(project);\n             }\n             return nestedElement;\n         } catch (IllegalAccessException ie) {\n@@ -575,8 +574,8 @@ public void set(Project p, Object parent,\n                             throws InvocationTargetException, IllegalAccessException, BuildException {\n                             try {\n                                 Object attribute = c.newInstance(new String[] {value});\n-                                if (attribute instanceof DataType) {\n-                                    ((DataType)attribute).setProject(p);\n+                                if (attribute instanceof ProjectComponent) {\n+                                    ((ProjectComponent) attribute).setProject(p);\n                                 }\n                                 m.invoke(parent, new Object[] {attribute});\n                             } catch (InstantiationException ie) {"
            },
            {
                "sha": "c0e55cc67e653e885e8bd9b7d924294ca47c9831",
                "filename": "src/main/org/apache/tools/ant/ProjectHelper.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/ProjectHelper.java",
                "raw_url": "https://github.com/apache/ant/raw/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/ProjectHelper.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/ProjectHelper.java?ref=31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
                "patch": "@@ -561,8 +561,10 @@ public void init(String propType, AttributeList attrs) throws SAXParseException\n             try {\n                 String elementName = propType.toLowerCase(Locale.US);\n                 if (parent instanceof UnknownElement) {\n-                    child = new UnknownElement(elementName);\n-                    ((UnknownElement) parent).addChild((UnknownElement) child);\n+                    UnknownElement uc = new UnknownElement(elementName);\n+                    uc.setProject(project);\n+                    ((UnknownElement) parent).addChild(uc);\n+                    child = uc;\n                 } else {\n                     child = ih.createElement(project, parent, elementName);\n                 }"
            },
            {
                "sha": "c0b2729936fc7139b8f64b9248c6c7fb48b4bd4a",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "raw_url": "https://github.com/apache/ant/raw/31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=31d76fc5d0b52ebf0153a4eac5df668b6b0c90d2",
                "patch": "@@ -260,6 +260,7 @@ public void execute() throws BuildException {\n             Enumeration e = properties.elements();\n             while (e.hasMoreElements()) {\n                 Property p=(Property) e.nextElement();\n+                p.setProject(newProject);\n                 p.execute();\n             }\n             "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/873b850f39a26e4911d612c157622751ac9582f9",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/de36c747cb45e86fb2d6a49bd9185f8d8b173ec1",
        "message": "fix for \n<javac> fails with NPE when compiling with eclipse ecj 3.1.x\nBugzilla 40839.\nroot cause of the problem was in org.eclipse.jdt.core.JDTCompiler\nmethod addExtDirs. A FileSet was created without the Project attribute set,\nthen added to a Path.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@469050 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_102",
        "file": [
            {
                "sha": "b73511beee2ac4abe14390927a89ffd11f79b117",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/873b850f39a26e4911d612c157622751ac9582f9/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/873b850f39a26e4911d612c157622751ac9582f9/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=873b850f39a26e4911d612c157622751ac9582f9",
                "patch": "@@ -16,6 +16,9 @@ Fixed bugs:\n * behavior change of DirectoryScanner/AbstractFileset when conditional include\n   patterns are used. Bugzilla 40722.\n \n+* <javac> fails with NPE when compiling with eclipse ecj 3.1.x.\n+  Bugzilla 40839.\n+  \n Other changes:\n --------------\n "
            },
            {
                "sha": "b5cc076d8468c5e2c35b05830238e3a5eb85dfd2",
                "filename": "src/main/org/apache/tools/ant/types/Path.java",
                "status": "modified",
                "additions": 12,
                "deletions": 0,
                "changes": 12,
                "blob_url": "https://github.com/apache/ant/blob/873b850f39a26e4911d612c157622751ac9582f9/src/main/org/apache/tools/ant/types/Path.java",
                "raw_url": "https://github.com/apache/ant/raw/873b850f39a26e4911d612c157622751ac9582f9/src/main/org/apache/tools/ant/types/Path.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/types/Path.java?ref=873b850f39a26e4911d612c157622751ac9582f9",
                "patch": "@@ -201,6 +201,9 @@ public PathElement createPathElement() throws BuildException {\n      * @throws BuildException on error\n      */\n     public void addFileset(FileSet fs) throws BuildException {\n+        if (fs.getProject() == null) {\n+            fs.setProject(getProject());\n+        }\n         add(fs);\n     }\n \n@@ -210,6 +213,9 @@ public void addFileset(FileSet fs) throws BuildException {\n      * @throws BuildException on error\n      */\n     public void addFilelist(FileList fl) throws BuildException {\n+        if (fl.getProject() == null) {\n+            fl.setProject(getProject());\n+        }\n         add(fl);\n     }\n \n@@ -219,6 +225,9 @@ public void addFilelist(FileList fl) throws BuildException {\n      * @throws BuildException on error\n      */\n     public void addDirset(DirSet dset) throws BuildException {\n+        if (dset.getProject() == null) {\n+            dset.setProject(getProject());\n+        }\n         add(dset);\n     }\n \n@@ -229,6 +238,9 @@ public void addDirset(DirSet dset) throws BuildException {\n      * @since Ant 1.6\n      */\n     public void add(Path path) throws BuildException {\n+        if (path.getProject() == null) {\n+            path.setProject(getProject());\n+        }\n         add((ResourceCollection) path);\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/65154027217934ed9b35aaeb8a765b763b4c77c3",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/39404a01944f1f80a52e8318e75b0dfc84e08894",
        "message": "NPE using XmlLogger and antlib\ncheck if the value of the name attribute is not null\nset the taskname of the antlib task\nPR: 31840\nObtained from: Mariano Benitez\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276965 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_103",
        "file": [
            {
                "sha": "cda6efca192902720e03d7bce06cfaddad83c167",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/65154027217934ed9b35aaeb8a765b763b4c77c3/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/65154027217934ed9b35aaeb8a765b763b4c77c3/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=65154027217934ed9b35aaeb8a765b763b4c77c3",
                "patch": "@@ -132,6 +132,9 @@ Fixed bugs:\n * Concat task instance could not be run twice.\n   Bugzilla report 31814.\n \n+* NPE using XmlLogger and antlib.\n+  Bugzilla report 31840.\n+\n Changes from Ant 1.6.1 to Ant 1.6.2\n ===================================\n "
            },
            {
                "sha": "892c02d21dfed77b45c24a278d0397defff3b666",
                "filename": "src/main/org/apache/tools/ant/XmlLogger.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/XmlLogger.java",
                "raw_url": "https://github.com/apache/ant/raw/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/XmlLogger.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/XmlLogger.java?ref=65154027217934ed9b35aaeb8a765b763b4c77c3",
                "patch": "@@ -291,6 +291,9 @@ public void taskStarted(BuildEvent event) {\n \n         Task task = event.getTask();\n         String name = event.getTask().getTaskName();\n+        if (name == null) {\n+            name = \"\";\n+        }\n         taskElement.element.setAttribute(NAME_ATTR, name);\n         taskElement.element.setAttribute(LOCATION_ATTR,\n                 event.getTask().getLocation().toString());"
            },
            {
                "sha": "f0b3a4bde3664239403573775d6880f0640e3279",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Antlib.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/taskdefs/Antlib.java",
                "raw_url": "https://github.com/apache/ant/raw/65154027217934ed9b35aaeb8a765b763b4c77c3/src/main/org/apache/tools/ant/taskdefs/Antlib.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Antlib.java?ref=65154027217934ed9b35aaeb8a765b763b4c77c3",
                "patch": "@@ -82,6 +82,7 @@ public static Antlib createAntlib(Project project, URL antlibUrl,\n             Antlib antlib = new Antlib();\n             antlib.setProject(project);\n             antlib.setLocation(ue.getLocation());\n+            antlib.setTaskName(\"antlib\");\n             antlib.init();\n             ue.configure(antlib);\n             return antlib;"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/fa7d0ce02c707462773336c0743dca2dbff04db1",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/edc2de39292cfb5b94b3dc7563df9f71ad4f1006",
        "message": "typedef: check for recursive loading of xml files/resources (aka antlibs)\ntypedef: do not throw an NPE if attempting to load a file that does not exist\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276492 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_104",
        "file": [
            {
                "sha": "8b92b4c62e9f635fadef2ff117fe2e50fdc9f8c6",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Definer.java",
                "status": "modified",
                "additions": 26,
                "deletions": 1,
                "changes": 27,
                "blob_url": "https://github.com/apache/ant/blob/fa7d0ce02c707462773336c0743dca2dbff04db1/src/main/org/apache/tools/ant/taskdefs/Definer.java",
                "raw_url": "https://github.com/apache/ant/raw/fa7d0ce02c707462773336c0743dca2dbff04db1/src/main/org/apache/tools/ant/taskdefs/Definer.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Definer.java?ref=fa7d0ce02c707462773336c0743dca2dbff04db1",
                "patch": "@@ -21,7 +21,9 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n+import java.util.ArrayList;\n import java.util.Enumeration;\n+import java.util.List;\n import java.util.Locale;\n import java.util.NoSuchElementException;\n import java.util.Properties;\n@@ -41,6 +43,15 @@\n  * @since Ant 1.4\n  */\n public abstract class Definer extends DefBase {\n+    private static class ResourceStack extends ThreadLocal {\n+        public Object initialValue() {\n+            return new ArrayList();\n+        }\n+        List getStack() {\n+            return (List) get();\n+        }\n+    }\n+    private static ResourceStack resourceStack = new ResourceStack();\n     private String name;\n     private String classname;\n     private File file;\n@@ -179,6 +190,9 @@ public void execute() throws BuildException {\n             Enumeration/*<URL>*/ urls = null;\n             if (file != null) {\n                 final URL url = fileToURL();\n+                if (url == null) {\n+                    return;\n+                }\n                 urls = new Enumeration() {\n                     private boolean more = true;\n                     public boolean hasMoreElements() {\n@@ -209,7 +223,18 @@ public Object nextElement() throws NoSuchElementException {\n                     loadProperties(al, url);\n                     break;\n                 } else {\n-                    loadAntlib(al, url);\n+                    if (resourceStack.getStack().contains(url)) {\n+                        log(\"Warning: Attempting to recursively load \" + url\n+                            + \" at \" + getLocation(),\n+                            Project.MSG_WARN);\n+                    } else {\n+                        try {\n+                            resourceStack.getStack().add(url);\n+                            loadAntlib(al, url);\n+                        } finally {\n+                            resourceStack.getStack().remove(url);\n+                        }\n+                    }\n                 }\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/89ab1168c984084b8d804744ea8a74f268cb1fe5",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/e33f1d105f6988df483bc075a630c6aa7a3b536a",
        "message": "Don't die if the ant.file property hasn't been set.\n\nJelly's Ant tag library currently doesn't set this property and each\n<ant> task used in Jelly will result in an NPE otherwise.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276290 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_105",
        "file": [
            {
                "sha": "4d49898ebf51cee84a9cc93d2093cdd7d900ffae",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "status": "modified",
                "additions": 5,
                "deletions": 3,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/89ab1168c984084b8d804744ea8a74f268cb1fe5/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "raw_url": "https://github.com/apache/ant/raw/89ab1168c984084b8d804744ea8a74f268cb1fe5/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=89ab1168c984084b8d804744ea8a74f268cb1fe5",
                "patch": "@@ -321,11 +321,13 @@ public void execute() throws BuildException {\n                     + \" in build file \" +  antFile, Project.MSG_VERBOSE);\n             newProject.setUserProperty(\"ant.file\" , antFile);\n \n+            String thisAntFile = getProject().getProperty(\"ant.file\");\n             // Are we trying to call the target in which we are defined (or\n             // the build file if this is a top level task)?\n-            if (newProject.resolveFile(newProject.getProperty(\"ant.file\"))\n-                .equals(getProject().resolveFile(getProject()\n-                .getProperty(\"ant.file\"))) && getOwningTarget() != null) {\n+            if (thisAntFile != null\n+                && newProject.resolveFile(newProject.getProperty(\"ant.file\"))\n+                .equals(getProject().resolveFile(thisAntFile)) \n+                && getOwningTarget() != null) {\n \n                 if (getOwningTarget().getName().equals(\"\")) {\n                     if (getTaskName().equals(\"antcall\")) {"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/facb8658b28232d1d70fdf09e707efbe8cae920e",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/4a1ac5da9c318dd850dad723601f1d586b022b1f",
        "message": "Fix for NPE reported by Nick Chalko.\nWhen overriding a definition the code did not\ncheck if the old (or new) definitions classes existed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274876 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_106",
        "file": [
            {
                "sha": "39635f8767b5c092ee6a5dba68aea1e833bbb46c",
                "filename": "src/etc/testcases/taskdefs/typedef.xml",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/ant/blob/facb8658b28232d1d70fdf09e707efbe8cae920e/src/etc/testcases/taskdefs/typedef.xml",
                "raw_url": "https://github.com/apache/ant/raw/facb8658b28232d1d70fdf09e707efbe8cae920e/src/etc/testcases/taskdefs/typedef.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/typedef.xml?ref=facb8658b28232d1d70fdf09e707efbe8cae920e",
                "patch": "@@ -46,4 +46,11 @@\n     <local id=\"local\" />\n   </target>\n \n+  <target name=\"double-notpresent\">\n+    <typedef name=\"mytask\" classname=\"notpresent\" onerror=\"ignore\"/>\n+    <typedef name=\"mytask\" classname=\"notpresent\" onerror=\"ignore\"/>\n+    <typedef name=\"mytask\" classname=\"org.apache.tools.ant.taskdefs.Echo\"\n+             onerror=\"ignore\"/>\n+    <mytask>hi</mytask>\n+  </target>\n </project>\n\\ No newline at end of file"
            },
            {
                "sha": "a8032e1a24ffe11db1b2708ca7b90f3af6e63364",
                "filename": "src/main/org/apache/tools/ant/ComponentHelper.java",
                "status": "modified",
                "additions": 28,
                "deletions": 2,
                "changes": 30,
                "blob_url": "https://github.com/apache/ant/blob/facb8658b28232d1d70fdf09e707efbe8cae920e/src/main/org/apache/tools/ant/ComponentHelper.java",
                "raw_url": "https://github.com/apache/ant/raw/facb8658b28232d1d70fdf09e707efbe8cae920e/src/main/org/apache/tools/ant/ComponentHelper.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/ComponentHelper.java?ref=facb8658b28232d1d70fdf09e707efbe8cae920e",
                "patch": "@@ -587,9 +587,33 @@ public String getElementName(Object element) {\n     }\n \n \n-    /** return true if the two definitions are the same */\n+    /**\n+     * check if definition is a valid definition - it\n+     * may be a definition of an optional task that\n+     * does not exist\n+     * @param def the definition to test\n+     * @return true if exposed type of definition is present\n+     */\n+    private boolean validDefinition(AntTypeDefinition def) {\n+        if (def.getTypeClass(project) == null\n+            || def.getExposedClass(project) == null) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    /**\n+     * check if two definitions are the same\n+     * @param def  the new definition\n+     * @param old the old definition\n+     * @return true if the two definitions are the same\n+     */\n     private boolean sameDefinition(\n         AntTypeDefinition def, AntTypeDefinition old) {\n+        if (!validDefinition(def) || !validDefinition(old)) {\n+            return validDefinition(def) == validDefinition(old);\n+        }\n+\n         if (!(old.getTypeClass(project).equals(def.getTypeClass(project)))) {\n             return false;\n         }\n@@ -600,9 +624,11 @@ private boolean sameDefinition(\n         return true;\n     }\n \n+\n     /**\n      * update the component definition table with a new or\n      * modified definition.\n+     * @param def the definition to update or insert\n      */\n     private void updateDataTypeDefinition(AntTypeDefinition def) {\n         String name = def.getName();\n@@ -615,7 +641,7 @@ private void updateDataTypeDefinition(AntTypeDefinition def) {\n                     return;\n                 }\n                 Class oldClass = antTypeTable.getExposedClass(name);\n-                if (Task.class.isAssignableFrom(oldClass)) {\n+                if (oldClass != null && Task.class.isAssignableFrom(oldClass)) {\n                     int logLevel = Project.MSG_WARN;\n                     if (def.getClassName().equals(old.getClassName())\n                         && def.getClassLoader() == old.getClassLoader()) {"
            },
            {
                "sha": "22f3b04a07bfcddcc544d4ac9558b3680e732e2d",
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/apache/ant/blob/facb8658b28232d1d70fdf09e707efbe8cae920e/src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java",
                "raw_url": "https://github.com/apache/ant/raw/facb8658b28232d1d70fdf09e707efbe8cae920e/src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/TypedefTest.java?ref=facb8658b28232d1d70fdf09e707efbe8cae920e",
                "patch": "@@ -104,4 +104,11 @@ public void testLocal() {\n                      ref.getClass().getName());\n     }\n \n+    /**\n+     * test to make sure that one can define a not present\n+     * optional type twice and then have a valid definition.\n+     */\n+    public void testDoubleNotPresent() {\n+        expectLogContaining(\"double-notpresent\", \"hi\");\n+    }\n }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/709b693771f50ba0f6b2fd65b30819454bed676c",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/a15bea0557d6296ba6e378f069d84a4da5bfe417",
        "message": "fixes NPE on iterator causing JXPath to fail with exception if expression returns no results\nPR: 20272\nSubmitted by: Nick Chalko (nick at chalko dot com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274648 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_107",
        "file": [
            {
                "sha": "631ccccff356249f66591c059b6c241a97923a09",
                "filename": "proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/JXPath.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/709b693771f50ba0f6b2fd65b30819454bed676c/proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/JXPath.java",
                "raw_url": "https://github.com/apache/ant/raw/709b693771f50ba0f6b2fd65b30819454bed676c/proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/JXPath.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/JXPath.java?ref=709b693771f50ba0f6b2fd65b30819454bed676c",
                "patch": "@@ -129,7 +129,7 @@ public Object getPropertyHook( String ns, String name , boolean user) {\n \n             Iterator iter = jxpathCtx.iterate(name);\n \n-            if(iter==null){\n+            if(iter==null||!iter.hasNext()){\n                 return \"null\";\n             }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/4d141cebd39e710404f2f786452120e004ddb05d",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/8031b5383949411e6f07a300834a9febf9ee1a1a",
        "message": "Extra check for null.\n\nInput is calling setNewProperty - but if defaultValue and value are null\nwe'll get NPE\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273732 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_108",
        "file": [
            {
                "sha": "c5feac93b443ae67a15e39617ab043979b6f68aa",
                "filename": "src/main/org/apache/tools/ant/PropertyHelper.java",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/4d141cebd39e710404f2f786452120e004ddb05d/src/main/org/apache/tools/ant/PropertyHelper.java",
                "raw_url": "https://github.com/apache/ant/raw/4d141cebd39e710404f2f786452120e004ddb05d/src/main/org/apache/tools/ant/PropertyHelper.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/PropertyHelper.java?ref=4d141cebd39e710404f2f786452120e004ddb05d",
                "patch": "@@ -369,7 +369,9 @@ public synchronized void setNewProperty(String ns, String name,\n \n         project.log(\"Setting project property: \" + name + \" -> \" +\n                 value, Project.MSG_DEBUG);\n-        properties.put(name, value);\n+        if( name!= null && value!=null ) {\n+            properties.put(name, value);\n+        }\n     }\n \n     /**"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/8031b5383949411e6f07a300834a9febf9ee1a1a",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/f4c8d96068a4cc2e0d1ef67dff8a628089f452ca",
        "message": "Weird. UE didn't seem to call setProject on the task. That seems to be\nthe cause of the NPE.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273731 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_109",
        "file": [
            {
                "sha": "8a099d708bb28e387ffa5b45a5c96d44d2b0a76d",
                "filename": "src/main/org/apache/tools/ant/UnknownElement.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/8031b5383949411e6f07a300834a9febf9ee1a1a/src/main/org/apache/tools/ant/UnknownElement.java",
                "raw_url": "https://github.com/apache/ant/raw/8031b5383949411e6f07a300834a9febf9ee1a1a/src/main/org/apache/tools/ant/UnknownElement.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/UnknownElement.java?ref=8031b5383949411e6f07a300834a9febf9ee1a1a",
                "patch": "@@ -126,6 +126,7 @@ public void maybeConfigure() throws BuildException {\n         if (realThing instanceof Task) {\n             Task task=(Task)realThing;\n \n+            task.setProject(project);\n             task.setRuntimeConfigurableWrapper(getWrapper());\n             task.setLocation(this.getLocation());\n             // UnknownElement always has an associated target"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/74b6597e3a4c61f84321f72eb1f5be186f2a6e51",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/acb441fdfacde4a4b0acb64fba5fb9eb4222a4fd",
        "message": "Fixed NPEs that could have been flying if ant.home was not defined\nPR: 14232\nReported by: darin_swanson@oti.com (Darin Swanson)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273483 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_110",
        "file": [
            {
                "sha": "4a332b5444a2ad2e208ac4e90050e6d32e7a501e",
                "filename": "src/main/org/apache/tools/ant/Diagnostics.java",
                "status": "modified",
                "additions": 15,
                "deletions": 4,
                "changes": 19,
                "blob_url": "https://github.com/apache/ant/blob/74b6597e3a4c61f84321f72eb1f5be186f2a6e51/src/main/org/apache/tools/ant/Diagnostics.java",
                "raw_url": "https://github.com/apache/ant/raw/74b6597e3a4c61f84321f72eb1f5be186f2a6e51/src/main/org/apache/tools/ant/Diagnostics.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/Diagnostics.java?ref=74b6597e3a4c61f84321f72eb1f5be186f2a6e51",
                "patch": "@@ -55,13 +55,13 @@\n \n import java.io.File;\n import java.io.FilenameFilter;\n-import java.io.IOException;\n-import java.io.InputStream;\n import java.io.PrintStream;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n+import java.io.InputStream;\n+import java.io.IOException;\n import java.util.Enumeration;\n import java.util.Properties;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.InvocationTargetException;\n \n /**\n  * A little diagnostic helper that output some information that may help\n@@ -120,6 +120,9 @@ public static void validateVersion() throws BuildException {\n      */\n     public static File[] listLibraries() {\n         String home = System.getProperty(\"ant.home\");\n+        if (home == null) {\n+            return null;\n+        }\n         File libDir = new File(home, \"lib\");\n         FilenameFilter filter = new FilenameFilter() {\n             public boolean accept(File dir, String name) {\n@@ -128,6 +131,9 @@ public boolean accept(File dir, String name) {\n         };\n         // listFiles is JDK 1.2+ method...\n         String[] filenames = libDir.list(filter);\n+        if (filenames == null) {\n+            return null;\n+        }\n         File[] files = new File[filenames.length];\n         for (int i = 0; i < filenames.length; i++){\n             files[i] = new File(libDir, filenames[i]);\n@@ -235,7 +241,12 @@ private static void doReportSystemProperties(PrintStream out){\n      * @param out the stream to print the content to\n      */\n     private static void doReportLibraries(PrintStream out){\n+        out.println(\"ant.home: \" + System.getProperty(\"ant.home\"));\n         File[] libs = listLibraries();\n+        if (libs == null) {\n+            out.println(\"Unable to list libraries.\");\n+            return;\n+        }\n         for (int i = 0; i < libs.length; i++){\n             out.println(libs[i].getName()\n                     + \" (\" + libs[i].length() + \" bytes)\");"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/94182a1dfa6d104e3b48d12a651dffd53f089e85",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ae4f3c881ded67b92902d8a1d7816dd3a4ed0170",
        "message": "this patch does not fix the failing of jspc test, it fixes two other bugs in bugzilla -NPE on inclusion of non jsp file, and webapp attr broken.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273214 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_111",
        "file": [
            {
                "sha": "64429dc15fc835f37c4974d6843b429caece299f",
                "filename": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java",
                "status": "modified",
                "additions": 34,
                "deletions": 19,
                "changes": 53,
                "blob_url": "https://github.com/apache/ant/blob/94182a1dfa6d104e3b48d12a651dffd53f089e85/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java",
                "raw_url": "https://github.com/apache/ant/raw/94182a1dfa6d104e3b48d12a651dffd53f089e85/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java?ref=94182a1dfa6d104e3b48d12a651dffd53f089e85",
                "patch": "@@ -228,7 +228,12 @@ public String getIeplugin() {\n     public void setIeplugin(String iepluginid_) {\n         iepluginid = iepluginid_;\n     }\n-    /* ------------------------------------------------------------ */\n+\n+    /**\n+     * If true, generate separate write() calls for each HTML line\n+     * in the JSP.\n+     * @return mapping status\n+     */\n     public boolean isMapped() {\n         return mapped;\n     }\n@@ -270,7 +275,6 @@ public File getUriroot() {\n     }\n \n \n-    /* ------------------------------------------------------------ */\n     /**\n      * Set the classpath to be used for this compilation.\n      */\n@@ -302,7 +306,6 @@ public Path getClasspath(){\n         return classpath;\n     }\n \n-    /* ------------------------------------------------------------ */\n     /**\n      * Set the classpath to be used to find this compiler adapter\n      */\n@@ -340,6 +343,10 @@ public void setWebxml(File webxml) {\n         this.webxml = webxml;\n     }\n \n+    /**\n+     * Filename for web.xml.\n+     * @return\n+     */\n     public File getWebxml() {\n         return this.webxml;\n     }\n@@ -396,17 +403,6 @@ public Vector getCompileList(){\n      */\n     public void execute()\n         throws BuildException {\n-        // first off, make sure that we've got a srcdir\n-        if (src == null) {\n-            throw new BuildException(\"srcdir attribute must be set!\",\n-                                     getLocation());\n-        }\n-        String [] list = src.list();\n-        if (list.length == 0) {\n-            throw new BuildException(\"srcdir attribute must be set!\",\n-                                     getLocation());\n-        }\n-\n         if (destDir != null && !destDir.isDirectory()) {\n             throw new\n                 BuildException(\"destination directory \\\"\" + destDir +\n@@ -421,6 +417,24 @@ public void execute()\n             JspCompilerAdapterFactory.getCompiler(compilerName, this,\n                new AntClassLoader(getProject(), compilerClasspath));\n \n+        //if we are a webapp, hand off to the compiler, which had better handle it\n+        if(webApp!=null) {\n+            doCompilation(compiler);\n+            return;\n+        }\n+            \n+        // make sure that we've got a srcdir \n+        if (src == null) {\n+            throw new BuildException(\"srcdir attribute must be set!\",\n+                                     location);\n+        } \n+        String [] list = src.list();\n+        if (list.length == 0) {\n+            throw new BuildException(\"srcdir attribute must be set!\",\n+                                     location);\n+        }\n+\n+\n         // if the compiler does its own dependency stuff, we just call it right now\n         if (compiler.implementsOwnDependencyChecking()) {\n             doCompilation(compiler);\n@@ -501,15 +515,13 @@ private void doCompilation(JspCompilerAdapter compiler)\n         }\n     }\n \n-    /* ------------------------------------------------------------ */\n     /**\n      * Clear the list of files to be compiled and copied..\n      */\n     protected void resetFileLists() {\n         compileList.removeAllElements();\n     }\n \n-    /* ------------------------------------------------------------ */\n     /**\n      * Scans the directory looking for source files to be compiled.\n      * The results are returned in the class variable compileList\n@@ -522,6 +534,9 @@ protected void scanDir(File srcDir, File dest, JspMangler mangler, String files[\n             String filename = files[i];\n             File srcFile = new File(srcDir, filename);\n             File javaFile = mapToJavaFile(mangler, srcFile, srcDir, dest);\n+            if(javaFile==null) {\n+                continue;\n+            }\n \n             if (srcFile.lastModified() > now) {\n                 log(\"Warning: file modified in the future: \" + filename,\n@@ -628,9 +643,9 @@ public File getDirectory() {\n             return directory;\n         }\n \n-    /**\n-     * set directory; alternate syntax\n-     */\n+        /**\n+         * set directory; alternate syntax\n+         */\n         public void setBaseDir(File directory) {\n             this.directory = directory;\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/44883768689d7ba8cbd178b973313c6cf2b28754",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/3432c43ba0170b4e4a0e34bc748fdc7e3b6b1302",
        "message": "Add testcase for <ant>'s logfile placement, fix NPE in <ant>.\n\nIf <ant> should ignore the dir attribute, we only have to change the\nlocations of test3.log and test4.log.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272171 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_112",
        "file": [
            {
                "sha": "4024bc3d2f82ed12fe29cf4b6d670088991b1635",
                "filename": "src/etc/testcases/taskdefs/ant.xml",
                "status": "modified",
                "additions": 16,
                "deletions": 0,
                "changes": 16,
                "blob_url": "https://github.com/apache/ant/blob/44883768689d7ba8cbd178b973313c6cf2b28754/src/etc/testcases/taskdefs/ant.xml",
                "raw_url": "https://github.com/apache/ant/raw/44883768689d7ba8cbd178b973313c6cf2b28754/src/etc/testcases/taskdefs/ant.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/etc/testcases/taskdefs/ant.xml?ref=44883768689d7ba8cbd178b973313c6cf2b28754",
                "patch": "@@ -2,6 +2,13 @@\n \n <project name=\"ant-test\" basedir=\".\" default=\"test1\">\n \n+  <target name=\"cleanup\">\n+    <delete file=\"test1.log\" />\n+    <delete file=\"test2.log\" />\n+    <delete file=\"ant/test3.log\" />\n+    <delete file=\"ant/test4.log\" />\n+  </target>\n+\n   <target name=\"all\" depends=\"test1,test2,test3,test4\"/>\n \n   <target name=\"test1\">\n@@ -67,4 +74,13 @@\n     </ant>\n   </target>\n \n+  <target name=\"testLogfilePlacement\">\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test1.log\"\n+         inheritall=\"false\" />\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test2.log\" />\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test3.log\"\n+         inheritall=\"false\" dir=\"ant\" />\n+    <ant antfile=\"ant.xml\" target=\"dummy\" output=\"test4.log\" \n+         dir=\"ant\" />\n+  </target>\n </project>"
            },
            {
                "sha": "748f571057e67034f729f6a3492e12a670832312",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/apache/ant/blob/44883768689d7ba8cbd178b973313c6cf2b28754/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "raw_url": "https://github.com/apache/ant/raw/44883768689d7ba8cbd178b973313c6cf2b28754/src/main/org/apache/tools/ant/taskdefs/Ant.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Ant.java?ref=44883768689d7ba8cbd178b973313c6cf2b28754",
                "patch": "@@ -105,7 +105,6 @@\n     \n     /** the output */\n     private String output  = null;\n-    private String outfile = null;\n     \n     /** should we inherit properties from the parent ? */\n     private boolean inheritAll = true;\n@@ -175,9 +174,11 @@ private void initializeProject() {\n         }\n \n         if (output != null) {\n+            File outfile = null;\n             if (dir != null) {\n-                File file = FileUtils.newFileUtils().resolveFile(dir, output);\n-                outfile = file.getAbsolutePath();\n+                outfile = FileUtils.newFileUtils().resolveFile(dir, output);\n+            } else {\n+                outfile = getProject().resolveFile(output);\n             }\n             try {\n                 PrintStream out = new PrintStream(new FileOutputStream(outfile));"
            },
            {
                "sha": "97ffc5c73819e42a25c966116d6e7636a01f482a",
                "filename": "src/testcases/org/apache/tools/ant/taskdefs/AntTest.java",
                "status": "modified",
                "additions": 32,
                "deletions": 3,
                "changes": 35,
                "blob_url": "https://github.com/apache/ant/blob/44883768689d7ba8cbd178b973313c6cf2b28754/src/testcases/org/apache/tools/ant/taskdefs/AntTest.java",
                "raw_url": "https://github.com/apache/ant/raw/44883768689d7ba8cbd178b973313c6cf2b28754/src/testcases/org/apache/tools/ant/taskdefs/AntTest.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/testcases/org/apache/tools/ant/taskdefs/AntTest.java?ref=44883768689d7ba8cbd178b973313c6cf2b28754",
                "patch": "@@ -1,7 +1,7 @@\n /*\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2000-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2000-2002 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -78,6 +78,10 @@ public void setUp() {\n         configureProject(\"src/etc/testcases/taskdefs/ant.xml\");\n     }\n     \n+    public void tearDown() {\n+        executeTarget(\"cleanup\");\n+    }\n+\n     public void test1() { \n         expectBuildException(\"test1\", \"recursive call\");\n     }\n@@ -213,6 +217,26 @@ protected void testReference(String target, String[] keys,\n         project.removeBuildListener(rc);\n     }\n \n+    public void testLogfilePlacement() {\n+        File[] logFiles = new File[] {\n+            getProject().resolveFile(\"test1.log\"),\n+            getProject().resolveFile(\"test2.log\"),\n+            getProject().resolveFile(\"ant/test3.log\"),\n+            getProject().resolveFile(\"ant/test3.log\")\n+        };\n+        for (int i=0; i<logFiles.length; i++) {\n+            assertTrue(logFiles[i].getName()+\" doesn\\'t exist\",\n+                       !logFiles[i].exists());\n+        }\n+        \n+        executeTarget(\"testLogfilePlacement\");\n+\n+        for (int i=0; i<logFiles.length; i++) {\n+            assertTrue(logFiles[i].getName()+\" exists\",\n+                       logFiles[i].exists());\n+        }\n+    }\n+\n     private class BasedirChecker implements BuildListener {\n         private String[] expectedBasedirs;\n         private int calls = 0;\n@@ -232,8 +256,13 @@ public void messageLogged(BuildEvent event) {}\n         public void targetStarted(BuildEvent event) {\n             if (error == null) {\n                 try {\n-                    assertEquals(expectedBasedirs[calls++],\n-                                 event.getProject().getBaseDir().getAbsolutePath());\n+                    if (calls == expectedBasedirs.length) {\n+                        assertEquals(\"cleanup\",\n+                                     event.getTarget().getName());\n+                    } else {\n+                        assertEquals(expectedBasedirs[calls++],\n+                                     event.getProject().getBaseDir().getAbsolutePath());\n+                    }\n                 } catch (AssertionFailedError e) {\n                     error = e;\n                 }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/05a7fe852f774ed56eba0631c453e1688913dd51",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/90c469486c78ffa5f2664784699488d076d512f0",
        "message": "Added a 'srcfile' attribute (PR 1681).\n(But also found a NPE bug in the mapper stuff :( -- will try\nto fix in a separate change.)\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272126 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_113",
        "file": [
            {
                "sha": "d7ecd188a2f311d3ae4aaa8b2d68813d72a67dec",
                "filename": "docs/manual/CoreTasks/uptodate.html",
                "status": "modified",
                "additions": 66,
                "deletions": 26,
                "changes": 92,
                "blob_url": "https://github.com/apache/ant/blob/05a7fe852f774ed56eba0631c453e1688913dd51/docs/manual/CoreTasks/uptodate.html",
                "raw_url": "https://github.com/apache/ant/raw/05a7fe852f774ed56eba0631c453e1688913dd51/docs/manual/CoreTasks/uptodate.html",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/docs/manual/CoreTasks/uptodate.html?ref=05a7fe852f774ed56eba0631c453e1688913dd51",
                "patch": "@@ -9,19 +9,24 @@\n \n <h2><a name=\"uptodate\">Uptodate</a></h2>\n <h3>Description</h3>\n-<p>Sets a property if a target files are more up to date than a set of\n-Source files. Source files are specified by nested &lt;srcfiles&gt;\n-elements, these are <a href=\"../CoreTypes/fileset.html\">FileSet</a>s, while target\n-files are specified using a nested <a href=\"../CoreTypes/mapper.html\">mapper</a>\n-element.</p>\n-<p>The value part of the property being set is <i>true</i> if the\n-timestamp of the target files is more recent than the timestamp of\n-every corresponding source file.</p>\n-<p>The default behavior is to use a <a href=\"../CoreTypes/mapper.html#merge-mapper\">merge\n-mapper</a> with the <code>to</code> attribute set to the value of the\n-targetfile attribute.</p>\n-<p>Normally, this task is used to set properties that are useful to avoid target\n-execution depending on the relative age of the specified files.</p>\n+<p>Sets a property if a target file or set of target files is more up-to-date\n+than a source file or set of source files. A single source file is specified\n+using the <code>srcfile</code> attribute. A set of source files is specified\n+using the nested <code>&lt;srcfiles&gt;</code>\n+elements. These are <a href=\"../CoreTypes/fileset.html\">FileSet</a>s,\n+whereas multiple target files are specified using a nested\n+<a href=\"../CoreTypes/mapper.html\"><code>&lt;mapper&gt;</code></a> element.</p>\n+<p>By default, the value of the property is set to <code>true</code> if\n+the timestamp of the target file(s) is more recent than the timestamp of\n+the corresponding source file(s). You can set the value to something other\n+than the default by specifying the <code>value</code> attribute.</p>\n+<p>If a <code>&lt;srcfiles&gt;</code> element is used, without also specifying\n+a <code>&lt;mapper&gt;</code> element, the default behavior is to use a\n+<a href=\"../CoreTypes/mapper.html#merge-mapper\">merge mapper</a>, with the\n+<code>to</code> attribute set to the value of the\n+<code>targetfile</code> attribute.</p>\n+<p>Normally, this task is used to set properties that are useful to avoid\n+target execution depending on the relative age of the specified files.</p>\n <h3>Parameters</h3>\n <table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n   <tr>\n@@ -31,36 +36,71 @@ <h3>Parameters</h3>\n   </tr>\n   <tr>\n     <td valign=\"top\">property</td>\n-    <td valign=\"top\">the name of the property to set.</td>\n+    <td valign=\"top\">The name of the property to set.</td>\n     <td valign=\"top\" align=\"center\">Yes</td>\n   </tr>\n   <tr>\n     <td valign=\"top\">value</td>\n-    <td valign=\"top\">the value to set the property to. Defaults to &quot;true&quot;.</td>\n-    <td valign=\"top\" align=\"center\">No</td>\n+    <td valign=\"top\">The value to set the property to.</td>\n+    <td valign=\"top\" align=\"center\">No; defaults to <code>true</code>.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">srcfile</td>\n+    <td valign=\"top\">The file to check against the target file.</td>\n+    <td valign=\"top\" align=\"center\">Yes, unless a nested\n+      <code>&lt;srcfiles&gt;</code> element is present.</td>\n   </tr>\n   <tr>\n     <td valign=\"top\">targetfile</td>\n-    <td valign=\"top\">the file for which we want to determine the status.</td>\n-    <td valign=\"top\" align=\"center\">Yes, unless a nested mapper element is \n-      present.</td>\n+    <td valign=\"top\">The file for which we want to determine the status.</td>\n+    <td valign=\"top\" align=\"center\">Yes, unless a nested\n+      <code>&lt;mapper&gt;</code> element is present.</td>\n   </tr>\n </table>\n+\n+<h3>Parameters specified as nested elements</h3>\n+<h4><a name=\"srcfiles\">srcfiles</a></h4>\n+<p>The nested <code>&lt;srcfiles&gt;</code> element allows you to specify a\n+set of files to check against the target file(s).</p>\n+\n+<p><strong>Note:</strong> You can specify either the <code>srcfile</code>\n+attribute or nested <code>&lt;srcfiles&gt;</code> elements, but not both.\n+\n+<h4><a name=\"mapper\">mapper</a></h4>\n+<p>The nested <code>&lt;mapper&gt;</code> element allows you to specify\n+a set of target files to check for being up-to-date with respect to a\n+set of source files.</p>\n+\n+<p><strong>Note:</strong> The nested <code>&lt;mapper&gt;</code> element is\n+only valid when used with the <code>&lt;srcfiles&gt;</code> element.\n+\n <h3>Examples</h3>\n <pre>  &lt;uptodate property=&quot;xmlBuild.notRequired&quot; targetfile=&quot;${deploy}\\xmlClasses.jar&quot; &gt;\n     &lt;srcfiles dir= &quot;${src}/xml&quot; includes=&quot;**/*.dtd&quot;/&gt;\n   &lt;/uptodate&gt;</pre>\n-<p>sets the property <code><i>xmlBuild.notRequired</i></code> to the value &quot;true&quot;\n-if the <i>${deploy}/xmlClasses.jar</i> is more up to date than any of the DTD files in the <i>${src}/xml</i> directory.</p>\n-<p>This can be written as</p>\n-<pre>  &lt;uptodate property=&quot;xmlBuild.notRequired&quot;  &gt;\n+<p>sets the property <code>xmlBuild.notRequired</code> to <code>true</code>\n+if the <code>${deploy}/xmlClasses.jar</code> file is more up-to-date than\n+any of the DTD files in the <code>${src}/xml</code> directory.</p>\n+<p>This can be written as:</p>\n+<pre>  &lt;uptodate property=&quot;xmlBuild.notRequired&quot;&gt;\n     &lt;srcfiles dir= &quot;${src}/xml&quot; includes=&quot;**/*.dtd&quot;/&gt;\n     &lt;mapper type=&quot;merge&quot; to=&quot;${deploy}\\xmlClasses.jar&quot;/&gt;\n   &lt;/uptodate&gt;</pre>\n-<p>as well.</p>\n+as well.\n+</p>\n+\n+<pre>  &lt;uptodate property=&quot;isUpToDate&quot;\n+            srcfile=&quot;/usr/local/bin/testit&quot;\n+            targetfile=&quot;${build}/.flagfile&quot;/&gt;\n+</pre>\n+<p>sets the property <code>isUpToDate</code> to <code>true</code>\n+if <code>/usr/local/bin/testit</code> is newer than\n+<code>${build}/.flagfile</code>.</p>\n+</p>\n+\n <hr>\n-<p align=\"center\">Copyright &copy; 2001 Apache Software Foundation. All rights\n-Reserved.</p>\n+<p align=\"center\">Copyright &copy; 2001,2002 Apache Software Foundation.\n+All rights Reserved.</p>\n \n </body>\n </html>"
            },
            {
                "sha": "86985a0f58c6690df61233e24bb9a42d4b6a380c",
                "filename": "src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "status": "modified",
                "additions": 49,
                "deletions": 19,
                "changes": 68,
                "blob_url": "https://github.com/apache/ant/blob/05a7fe852f774ed56eba0631c453e1688913dd51/src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "raw_url": "https://github.com/apache/ant/raw/05a7fe852f774ed56eba0631c453e1688913dd51/src/main/org/apache/tools/ant/taskdefs/UpToDate.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/UpToDate.java?ref=05a7fe852f774ed56eba0631c453e1688913dd51",
                "patch": "@@ -83,26 +83,27 @@\n \n     private String _property;\n     private String _value;\n+    private File _sourceFile;\n     private File _targetFile;\n     private Vector sourceFileSets = new Vector();\n \n     protected Mapper mapperElement = null;\n \n     /**\n-     * The property to set if the target file is more up to date than each of\n-     * the source files.\n+     * The property to set if the target file is more up-to-date than\n+     * (each of) the source file(s).\n      *\n-     * @param property the name of the property to set if Target is up to date.\n+     * @param property the name of the property to set if Target is up-to-date.\n      */\n     public void setProperty(String property) {\n         _property = property;\n     }\n \n     /**\n-     * The value to set the named property to if the target file is more up to\n-     * date than each of the source files. Defaults to 'true'.\n+     * The value to set the named property to if the target file is more\n+     * up-to-date than (each of) the source file(s). Defaults to 'true'.\n      *\n-     * @param value the value to set the property to if Target is up to date\n+     * @param value the value to set the property to if Target is up-to-date\n      */\n     public void setValue(String value) {\n         _value = value;\n@@ -116,15 +117,25 @@ private String getValue() {\n     } \n \n     /**\n-     * The file which must be more up to date than each of the source files\n+     * The file which must be more up-to-date than (each of) the source file(s)\n      * if the property is to be set.\n      *\n-     * @param file the file which we are checking against.\n+     * @param file the file we are checking against.\n      */\n     public void setTargetFile(File file) {\n         _targetFile = file;\n     }\n \n+    /**\n+     * The file that must be older than the target file\n+     * if the property is to be set.\n+     *\n+     * @param file the file we are checking against the target file.\n+     */\n+    public void setSrcfile(File file) {\n+        _sourceFile = file;\n+    }\n+\n     /**\n      * Nested &lt;srcfiles&gt; element.\n      */\n@@ -145,47 +156,66 @@ public Mapper createMapper() throws BuildException {\n     }\n \n     /**\n-     * Evaluate all target and source files, see if the targets are up-to-date.\n+     * Evaluate (all) target and source file(s) to\n+     * see if the target(s) is/are up-to-date.\n      */\n     public boolean eval() {\n-        if (sourceFileSets.size() == 0) {\n-          throw new BuildException(\"At least one <srcfiles> element must be set\");\n+        if (sourceFileSets.size() == 0 && _sourceFile == null) {\n+          throw new BuildException(\"At least one srcfile or a nested <srcfiles> element must be set.\");\n+        }\n+\n+        if (sourceFileSets.size() > 0 && _sourceFile != null) {\n+          throw new BuildException(\"Cannot specify both the srcfile attribute and a nested <srcfiles> element.\");\n         }\n \n         if (_targetFile == null && mapperElement == null) {\n-          throw new BuildException(\"The targetfile attribute or a nested mapper element must be set\");\n+          throw new BuildException(\"The targetfile attribute or a nested mapper element must be set.\");\n+        }\n+\n+        if (_sourceFile != null && mapperElement != null) {\n+          throw new BuildException(\"Cannot specify both the srcfile attribute and a nested mapper element.\");\n         }\n \n-        // if not there then it can't be up to date\n+        // if the target file is not there, then it can't be up-to-date\n         if (_targetFile != null && !_targetFile.exists()) {\n           return false;\n         } \n \n+        // if the source file isn't there, throw an exception\n+        if (_sourceFile != null && !_sourceFile.exists()) {\n+          throw new BuildException(_sourceFile.getAbsolutePath() + \" not found.\");\n+        } \n+\n         Enumeration enum = sourceFileSets.elements();\n         boolean upToDate = true;\n         while (upToDate && enum.hasMoreElements()) {\n             FileSet fs = (FileSet) enum.nextElement();\n             DirectoryScanner ds = fs.getDirectoryScanner(project);\n-            upToDate = upToDate && scanDir(fs.getDir(project), \n-                                           ds.getIncludedFiles());\n+                upToDate = upToDate && scanDir(fs.getDir(project), \n+                                               ds.getIncludedFiles());\n+        }\n+        if (_sourceFile != null) {\n+            File srcfile = new File(_sourceFile.getAbsolutePath());\n+            File tgtfile = new File(_targetFile.getAbsolutePath());\n+            upToDate = (tgtfile.lastModified() > srcfile.lastModified());\n         }\n         return upToDate;\n     }\n \n \n     /**\n-     * Sets property to true if target files have a more recent timestamp than\n-     * each of the corresponding source files.\n+     * Sets property to true if target file(s) have a more recent timestamp\n+     * than (each of) the corresponding source file(s).\n      */\n     public void execute() throws BuildException {\n         boolean upToDate = eval();\n         if (upToDate) {\n             this.project.setProperty(_property, this.getValue());\n             if (mapperElement == null) {\n-                log(\"File \\\"\" + _targetFile.getAbsolutePath() + \"\\\" is up to date.\",\n+                log(\"File \\\"\" + _targetFile.getAbsolutePath() + \"\\\" is up-to-date.\",\n                     Project.MSG_VERBOSE);\n             } else {\n-                log(\"All target files have been up to date.\",\n+                log(\"All target files are up-to-date.\",\n                     Project.MSG_VERBOSE);\n             }\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/cc0e324731a891e92e312509632da25581d89782",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ad5e0dc61cb1a2855be8ae6ec6f3e1dd76d1824b",
        "message": "Instantiate the document in the constructor so that\nan event other than build started does not initiate a NPE.\nPR: 5538\nReported by: sh@blsun.com (Scott Halstead)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@270272 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_114",
        "file": [
            {
                "sha": "8069926ffd26bde10eba0cbec4c58cee45435fdc",
                "filename": "src/main/org/apache/tools/ant/XmlLogger.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/cc0e324731a891e92e312509632da25581d89782/src/main/org/apache/tools/ant/XmlLogger.java",
                "raw_url": "https://github.com/apache/ant/raw/cc0e324731a891e92e312509632da25581d89782/src/main/org/apache/tools/ant/XmlLogger.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/XmlLogger.java?ref=cc0e324731a891e92e312509632da25581d89782",
                "patch": "@@ -101,7 +101,7 @@ private static DocumentBuilder getDocumentBuilder() {\n     private final static String ERROR_ATTR = \"error\";\n     private final static String STACKTRACE_TAG = \"stacktrace\";\n \n-    private Document doc;\n+    private Document doc = builder.newDocument();\n     private Hashtable tasks = new Hashtable();\n     private Hashtable targets = new Hashtable();\n     private Hashtable threadStacks = new Hashtable();\n@@ -121,8 +121,6 @@ public XmlLogger() {\n     public void buildStarted(BuildEvent event) {\n         buildElement = new TimedElement();\n         buildElement.startTime = System.currentTimeMillis();\n-\n-        doc = builder.newDocument();\n         buildElement.element = doc.createElement(BUILD_TAG);\n     }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/480e64cc185a50f0038220a063ee2807efc5f7eb",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/ce8272e144b8168b864015d2dd304410ebb236fc",
        "message": "property environment=.. failed under JDK 1.2 with a NPE because WinNTCommandLauncher.exec() got a null working directory and a null Project -  reported by <Aimee.Ukasick@med.ge.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269505 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_115",
        "file": [
            {
                "sha": "81b9ce08858101d8a4e5adcbcfa2c6c45eb92ba1",
                "filename": "src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/apache/ant/blob/480e64cc185a50f0038220a063ee2807efc5f7eb/src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "raw_url": "https://github.com/apache/ant/raw/480e64cc185a50f0038220a063ee2807efc5f7eb/src/main/org/apache/tools/ant/taskdefs/Execute.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/taskdefs/Execute.java?ref=480e64cc185a50f0038220a063ee2807efc5f7eb",
                "patch": "@@ -627,8 +627,12 @@ public Process exec(Project project, String[] cmd, String[] env) throws IOExcept\n         public Process exec(Project project, String[] cmd, String[] env, File workingDir) throws IOException\n         {\n             File commandDir = workingDir;\n-            if ( workingDir == null && project != null ) {\n-                commandDir = project.getBaseDir();\n+            if ( workingDir == null ) {\n+                if ( project != null ) {\n+                    commandDir = project.getBaseDir();\n+                } else {\n+                    return exec(project, cmd, env);\n+                }\n             }\n \n             // Use cmd.exe to change to the specified directory before running"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/e11e04dc6e6d6dcabe531346f60b597a8a58c453",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/fabddf48aa9d39fce88c9221b1b54d09717ee010",
        "message": "Fix for the NPE that makes the Cactus build fail.\n\nActually test6 of taskdef.xml failed as well, I just didnd't run it\nafter my last changes as it is not part of the testsuite - argh.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269402 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_116",
        "file": [
            {
                "sha": "c4d9386108f78e77824c2ce34ccadedd6dbc8643",
                "filename": "src/main/org/apache/tools/ant/UnknownElement.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/e11e04dc6e6d6dcabe531346f60b597a8a58c453/src/main/org/apache/tools/ant/UnknownElement.java",
                "raw_url": "https://github.com/apache/ant/raw/e11e04dc6e6d6dcabe531346f60b597a8a58c453/src/main/org/apache/tools/ant/UnknownElement.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/UnknownElement.java?ref=e11e04dc6e6d6dcabe531346f60b597a8a58c453",
                "patch": "@@ -127,7 +127,7 @@ protected void handleChildren(Object parent,\n                 realChild = makeTask(child, childWrapper);\n                 ((TaskContainer) parent).addTask((Task) realChild);\n             } else {\n-                ih.createElement(project, parent, child.getTag());\n+                realChild = ih.createElement(project, parent, child.getTag());\n             }\n \n             childWrapper.setProxy(realChild);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/2d3188c5d2663c29f46ad7e0d865b185263a7ff5",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/996e16066a9450f18df34582a163957d365bcee1",
        "message": "NPE while useing -listener for commons logger.\nThere is a difference between using a -logger and -listener.\nThe former may use a log file and the latter does not get this set.\nThe commons logger code assumes that it is passed the log stream in\nboth cases.\nThe fix is just to initialize the out and err streams in the commons\nlogger class.\nPR: 27373\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276225 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_117",
        "file": [
            {
                "sha": "5cf33cacec83889ab4c39133d012c0395dbf63de",
                "filename": "WHATSNEW",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/2d3188c5d2663c29f46ad7e0d865b185263a7ff5/WHATSNEW",
                "raw_url": "https://github.com/apache/ant/raw/2d3188c5d2663c29f46ad7e0d865b185263a7ff5/WHATSNEW",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/WHATSNEW?ref=2d3188c5d2663c29f46ad7e0d865b185263a7ff5",
                "patch": "@@ -82,6 +82,8 @@ Fixed bugs:\n * regression from ant 1.5, exec task outputted two redundant trailing newlines.\n   Bugzilla Report 27546.\n \n+* NPE when running commons listener. Bugzilla Report 27373.\n+\n Other changes:\n --------------\n "
            },
            {
                "sha": "6e6b33f71729be4f0bb9c4c5ba98680a6548ad1c",
                "filename": "src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/ant/blob/2d3188c5d2663c29f46ad7e0d865b185263a7ff5/src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java",
                "raw_url": "https://github.com/apache/ant/raw/2d3188c5d2663c29f46ad7e0d865b185263a7ff5/src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java?ref=2d3188c5d2663c29f46ad7e0d865b185263a7ff5",
                "patch": "@@ -279,8 +279,8 @@ private void realLog(Log log, String message, int priority, Throwable t) {\n         System.setErr(tmpErr);\n     }\n \n-    PrintStream out;\n-    PrintStream err;\n+    PrintStream out = System.out;\n+    PrintStream err = System.err;\n \n     public void setMessageOutputLevel(int level) {\n         // Use the logger config"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/ant/commit/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
        "repo": "ant",
        "parent": "https://github.com/apache/ant/commit/6ab3e313864e62f2c77a52d8c636daa20a7dfcb8",
        "message": "Added Condition <-> File Selector adaptors:\n\n* Added <condition> file selector, which allows a set of nested conditions to\n  be used to select files.\n\n* Added <file-test> condition, which evaluates a set of nested selectors against\n  a file.\n\n* FileSelector doesn't extend DataType any more.\n\n* Got rid of the @ant:data-type tags from the file selectors, cause they ain't.\n\n* Renamed <condition> nested element in <filtered-path> -> <filter>.\n\n* Renamed <is-empty> selector -> <is-empty-folder>\n\n* Fixed NPE using <name> selector in a path.\n\n* Fixed error messages.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@271684 13f79535-47bb-0310-9956-ffa450edef68",
        "bug_id": "ant_118",
        "file": [
            {
                "sha": "71c743c89239e702c8d058e29d44a9621d926960",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/FileSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/FileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/FileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/FileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -21,7 +21,6 @@\n  * @ant:role shorthand=\"v-file-selector\"\n  */\n public interface FileSelector\n-    extends DataType\n {\n     /**\n      * Accepts a file."
            },
            {
                "sha": "36e82ad8420a0fda809b071df0efd3535ee74c39",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/FilteredFileList.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/FilteredFileList.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/FilteredFileList.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/FilteredFileList.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -31,7 +31,7 @@\n     /**\n      * Sets the selector to use to filter with.\n      */\n-    public void setCondition( final AndFileSelector selector )\n+    public void setFilter( final AndFileSelector selector )\n     {\n         m_selector = selector;\n     }"
            },
            {
                "sha": "2f0741bb0c861259c2766aa17599eae11b221aa3",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/Resources.properties",
                "status": "modified",
                "additions": 0,
                "deletions": 6,
                "changes": 6,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/Resources.properties",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/Resources.properties",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/Resources.properties?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -8,10 +8,4 @@ copyfilestask.no-destination.error=No destination file or directory specified fo\n copyfilestask.no-destination.error=No destination directory specified for {0} task.\n copyfilestask.copy-file.error=Could not copy \"{0}\" to \"{1}\".\n \n-nameselector.too-many-patterns.error=Too many name patterns specified.\n-nameselector.no-pattern.error=No name pattern specified.\n-nameselector.bad-pattern.error=Invalid name pattern \"{0}\".\n-\n filteredfilelist.no-selector.error=No filter criteria specified.\n-\n-notfileselector.no-selector.error=No selector specified."
            },
            {
                "sha": "d1589203420ce34ff7df5fa6215b60f5ffc9a7cf",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AbstractNameFileSelector.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AbstractNameFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AbstractNameFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AbstractNameFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -133,5 +133,6 @@ protected Pattern createRegexpPattern( final String pattern )\n      * Returns the name to match against.\n      */\n     protected abstract String getNameForMatch( final String path,\n-                                               final FileObject file );\n+                                               final FileObject file )\n+        throws TaskException;\n }"
            },
            {
                "sha": "56a4d22f532ecd0255169aca047d3832830f0c58",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AndFileSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AndFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AndFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AndFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -20,7 +20,6 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"and-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"and\"\n  */\n public class AndFileSelector"
            },
            {
                "sha": "0b62bb9f3252eddde6ff2e17db5c3f6ba2b87173",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/BaseNameFileSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/BaseNameFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/BaseNameFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/BaseNameFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -15,7 +15,6 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"basename-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"basename\"\n  */\n public class BaseNameFileSelector"
            },
            {
                "sha": "8c013ce4e714d58e1f28132725d1d93caad8bb33",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ConditionSelector.java",
                "status": "added",
                "additions": 48,
                "deletions": 0,
                "changes": 48,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ConditionSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ConditionSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ConditionSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included  with this distribution in\n+ * the LICENSE.txt file.\n+ */\n+package org.apache.antlib.vfile.selectors;\n+\n+import org.apache.myrmidon.framework.Condition;\n+import org.apache.myrmidon.framework.conditions.AndCondition;\n+import org.apache.myrmidon.api.TaskContext;\n+import org.apache.myrmidon.api.TaskException;\n+import org.apache.antlib.vfile.FileSelector;\n+import org.apache.aut.vfs.FileObject;\n+\n+/**\n+ * A file selector that evaluates a set of nested {@link Condition} elements.\n+ *\n+ * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n+ * @version $Revision$ $Date$\n+ *\n+ * @ant:type type=\"v-file-selector\" name=\"condition\"\n+ */\n+public class ConditionSelector\n+    implements FileSelector\n+{\n+    private AndCondition m_condition = new AndCondition();\n+\n+    /**\n+     * Adds a condition.\n+     */\n+    public void add( final Condition condition )\n+    {\n+        m_condition.add( condition );\n+    }\n+\n+    /**\n+     * Accepts a file.\n+     */\n+    public boolean accept( final FileObject file,\n+                           final String path,\n+                           final TaskContext context )\n+        throws TaskException\n+    {\n+        return m_condition.evaluate( context );\n+    }\n+}"
            },
            {
                "sha": "21424888f1996f0c50d526eb259478fa16736752",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ExistenceFileSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ExistenceFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ExistenceFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/ExistenceFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -19,7 +19,6 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"exists-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"exists\"\n  */\n public class ExistenceFileSelector"
            },
            {
                "sha": "17e801be8bc2bd05edfef0c4eb1a140e97b4fe27",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/FileTestCondition.java",
                "status": "added",
                "additions": 64,
                "deletions": 0,
                "changes": 64,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/FileTestCondition.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/FileTestCondition.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/FileTestCondition.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included  with this distribution in\n+ * the LICENSE.txt file.\n+ */\n+package org.apache.antlib.vfile.selectors;\n+\n+import org.apache.myrmidon.framework.Condition;\n+import org.apache.myrmidon.api.TaskContext;\n+import org.apache.myrmidon.api.TaskException;\n+import org.apache.aut.vfs.FileObject;\n+import org.apache.antlib.vfile.FileSelector;\n+import org.apache.avalon.excalibur.i18n.ResourceManager;\n+import org.apache.avalon.excalibur.i18n.Resources;\n+\n+/**\n+ * A condition that applies a set of file selectors to a file.\n+ *\n+ * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n+ * @version $Revision$ $Date$\n+ *\n+ * @ant:type type=\"condition\" name=\"file-test\"\n+ */\n+public class FileTestCondition\n+    implements Condition\n+{\n+    private final static Resources REZ\n+        = ResourceManager.getPackageResources( FileTestCondition.class );\n+\n+    private FileObject m_file;\n+    private AndFileSelector m_selector = new AndFileSelector();\n+\n+    /**\n+     * Sets the file to test.\n+     */\n+    public void setFile( final FileObject file )\n+    {\n+        m_file = file;\n+    }\n+\n+    /**\n+     * Adds a selector.\n+     */\n+    public void add( final FileSelector selector )\n+    {\n+        m_selector.add( selector );\n+    }\n+\n+    /**\n+     * Evaluates this condition.\n+     */\n+    public boolean evaluate( final TaskContext context )\n+        throws TaskException\n+    {\n+        if( m_file == null )\n+        {\n+            final String message = REZ.getString( \"filetestcondition.no-file.error\" );\n+            throw new TaskException( message );\n+        }\n+        return m_selector.accept( m_file, null, context );\n+    }\n+}"
            },
            {
                "sha": "8522533fa9bd55e61c7160bd3f12767b39bd8060",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsEmptyFolderSelector.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsEmptyFolderSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsEmptyFolderSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsEmptyFolderSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -20,8 +20,7 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"is-empty-folder-selector\"\n- * @ant:type type=\"v-file-selector\" name=\"is-empty\"\n+ * @ant:type type=\"v-file-selector\" name=\"is-empty-folder\"\n  */\n public class IsEmptyFolderSelector\n     implements FileSelector"
            },
            {
                "sha": "9022dbcb54bb763e21ebc5f588f96b657b4b771f",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFileSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -20,7 +20,6 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"is-file-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"is-file\"\n  */\n public class IsFileSelector"
            },
            {
                "sha": "abb01348ac90bd7808abf868f8fd320a59fe28ea",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFolderSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFolderSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFolderSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/IsFolderSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -20,7 +20,6 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"is-folder-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"is-folder\"\n  */\n public class IsFolderSelector"
            },
            {
                "sha": "d6958c354d952141f2b5d299caeb4b80e5c22c2a",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NameFileSelector.java",
                "status": "modified",
                "additions": 12,
                "deletions": 1,
                "changes": 13,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NameFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NameFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NameFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -8,25 +8,36 @@\n package org.apache.antlib.vfile.selectors;\n \n import org.apache.aut.vfs.FileObject;\n+import org.apache.myrmidon.api.TaskException;\n+import org.apache.avalon.excalibur.i18n.ResourceManager;\n+import org.apache.avalon.excalibur.i18n.Resources;\n \n /**\n  * A file selector that selects files based on their name.\n  *\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"name-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"name\"\n  */\n public class NameFileSelector\n     extends AbstractNameFileSelector\n {\n+    private final static Resources REZ\n+        = ResourceManager.getPackageResources( NameFileSelector.class );\n+\n     /**\n      * Returns the name to match against.\n      */\n     protected String getNameForMatch( final String path,\n                                       final FileObject file )\n+        throws TaskException\n     {\n+        if( path == null )\n+        {\n+            final String message = REZ.getString( \"namefileselector.no-path.error\" );\n+            throw new TaskException( message );\n+        }\n         return path;\n     }\n }"
            },
            {
                "sha": "d367fa01cc35573aed7d475eca4a5286691c1acd",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NotFileSelector.java",
                "status": "modified",
                "additions": 7,
                "deletions": 2,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NotFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NotFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NotFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -11,19 +11,23 @@\n import org.apache.aut.vfs.FileObject;\n import org.apache.myrmidon.api.TaskContext;\n import org.apache.myrmidon.api.TaskException;\n+import org.apache.avalon.excalibur.i18n.ResourceManager;\n+import org.apache.avalon.excalibur.i18n.Resources;\n \n /**\n  * A file selector that negates a nested file selector.\n  *\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"not-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"not\"\n  */\n public class NotFileSelector\n     implements FileSelector\n {\n+    private final static Resources REZ\n+        = ResourceManager.getPackageResources( NotFileSelector.class );\n+\n     private FileSelector m_selector;\n \n     /**\n@@ -44,7 +48,8 @@ public boolean accept( final FileObject file,\n     {\n         if( m_selector == null )\n         {\n-            throw new TaskException( \"notfileselector.no-selector.error\" );\n+            final String message = REZ.getString( \"notfileselector.no-selector.error\" );\n+            throw new TaskException( message );\n         }\n         return !m_selector.accept( file, path, context );\n     }"
            },
            {
                "sha": "4b3373e220ce01f71b846f7b5c94b84d96bbeda9",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/OrFileSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/OrFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/OrFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/OrFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -20,7 +20,6 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"or-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"or\"\n  */\n public class OrFileSelector"
            },
            {
                "sha": "55e91a60fc7572c7d50453342d58f0e405178849",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/Resources.properties",
                "status": "added",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/Resources.properties",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/Resources.properties",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/Resources.properties?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -0,0 +1,9 @@\n+nameselector.too-many-patterns.error=Too many name patterns specified.\n+nameselector.no-pattern.error=No name pattern specified.\n+nameselector.bad-pattern.error=Invalid name pattern \"{0}\".\n+\n+notfileselector.no-selector.error=No selector specified.\n+\n+namefileselector.no-path.error=Cannot use the <name> file selector here.\n+\n+filetestcondition.no-file.error=No file specified."
            },
            {
                "sha": "ccd900b6aa5fb3f849c8058bacd9ec8b87ac04a4",
                "filename": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/UrlFileSelector.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/UrlFileSelector.java",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/UrlFileSelector.java",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/UrlFileSelector.java?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -15,7 +15,6 @@\n  * @author <a href=\"mailto:adammurdoch@apache.org\">Adam Murdoch</a>\n  * @version $Revision$ $Date$\n  *\n- * @ant:data-type name=\"url-selector\"\n  * @ant:type type=\"v-file-selector\" name=\"url\"\n  */\n public class UrlFileSelector"
            },
            {
                "sha": "50fc5ca70531214b7f2bb47dd600865fcf12570b",
                "filename": "proposal/myrmidon/src/xdocs/vfs.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/ant/blob/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/xdocs/vfs.xml",
                "raw_url": "https://github.com/apache/ant/raw/bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e/proposal/myrmidon/src/xdocs/vfs.xml",
                "contents_url": "https://api.github.com/repos/apache/ant/contents/proposal/myrmidon/src/xdocs/vfs.xml?ref=bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e",
                "patch": "@@ -167,7 +167,7 @@\n \n                 <p>Selects files that exist.</p>\n \n-                <h3><code>&lt;is-empty&gt;</code></h3>\n+                <h3><code>&lt;is-empty-folder&gt;</code></h3>\n \n                 <p>Selects empty folders, that is, folders that have no children.</p>\n "
            }
        ]
    }
]
