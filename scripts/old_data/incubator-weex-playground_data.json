[
    {
        "commit": "https://github.com/apache/incubator-weex-playground/commit/21079e09a2b5b97ce89309e26259f82cec1798af",
        "repo": "incubator-weex-playground",
        "parent": "https://github.com/apache/incubator-weex-playground/commit/e616af742deec7a9917bcdfcc856bc572f7becb7",
        "message": "* [iOS] fix deprecated method about UIKit\n\n[WEEX-130][android] High Performance Binary Wson Supported\n\n[WEEX-197][android]WXScroller Add Child NullPointerException\nclose #986",
        "bug_id": "incubator-weex-playground_1",
        "file": [
            {
                "sha": "09b41056fdfec6fdec7c4b129a7675490b9b8569",
                "filename": "WeexDemo/UIViewController+WXDemoNaviBar.m",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/21079e09a2b5b97ce89309e26259f82cec1798af/WeexDemo/UIViewController+WXDemoNaviBar.m",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/21079e09a2b5b97ce89309e26259f82cec1798af/WeexDemo/UIViewController+WXDemoNaviBar.m",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/WeexDemo/UIViewController+WXDemoNaviBar.m?ref=21079e09a2b5b97ce89309e26259f82cec1798af",
                "patch": "@@ -51,14 +51,14 @@ - (void)setupNaviBar\n     }\n     if ([self isKindOfClass:[WXScannerVC class]]) {\n         UIBarButtonItem *historyItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@\"scan_history\"]\n-                                                          style:UIBarButtonItemStyleBordered\n+                                                          style:UIBarButtonItemStylePlain\n                                                          target:self\n                                                          action:@selector(historyButtonClicked:)];\n         self.navigationItem.rightBarButtonItems = @[historyItem];\n     }\n     if([self isKindOfClass:[WXScannerHistoryVC class]]) {\n         UIBarButtonItem *historyItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@\"delete\"]\n-                                                                        style:UIBarButtonItemStyleBordered\n+                                                                        style:UIBarButtonItemStylePlain\n                                                                        target:self\n                                                                        action:@selector(clearScannerHistory:)];\n         self.navigationItem.rightBarButtonItems = @[historyItem];\n@@ -89,7 +89,7 @@ - (UIBarButtonItem *)leftBarButtonItem\n     if (!leftItem) {\n         leftItem = [[UIBarButtonItem alloc]\n                     initWithImage:[UIImage imageNamed:@\"scan\"]\n-                     style:UIBarButtonItemStyleBordered\n+                     style:UIBarButtonItemStylePlain\n                     target:self\n                     action:@selector(scanQR:)];\n         leftItem.accessibilityHint = @\"click to scan qr code\";\n@@ -104,7 +104,7 @@ - (UIBarButtonItem *)backButtonItem\n     UIBarButtonItem *backButtonItem = objc_getAssociatedObject(self, _cmd);\n     if (!backButtonItem) {\n         backButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@\"back\"]\n-                                                          style:UIBarButtonItemStyleBordered\n+                                                          style:UIBarButtonItemStylePlain\n                                                          target:self\n                                                          action:@selector(backButtonClicked:)];\n         objc_setAssociatedObject(self, _cmd, backButtonItem, OBJC_ASSOCIATION_RETAIN_NONATOMIC);"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-weex-playground/commit/5849d5fe027acb7882133dc1d792ca83315da477",
        "repo": "incubator-weex-playground",
        "parent": "https://github.com/apache/incubator-weex-playground/commit/cf7a4f162b099744b514f07152637bdfce10ca33",
        "message": "* [test] fixed ui testcase NPE bug",
        "bug_id": "incubator-weex-playground_2",
        "file": [
            {
                "sha": "c0119551b5a10e8ba8a5068e2a94a47b95cdf925",
                "filename": "src/androidTest/java/com/alibaba/weex/uitest/TC_Input/WeexUiTestCaseTcInputEvent.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/5849d5fe027acb7882133dc1d792ca83315da477/src/androidTest/java/com/alibaba/weex/uitest/TC_Input/WeexUiTestCaseTcInputEvent.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/5849d5fe027acb7882133dc1d792ca83315da477/src/androidTest/java/com/alibaba/weex/uitest/TC_Input/WeexUiTestCaseTcInputEvent.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/androidTest/java/com/alibaba/weex/uitest/TC_Input/WeexUiTestCaseTcInputEvent.java?ref=5849d5fe027acb7882133dc1d792ca83315da477",
                "patch": "@@ -150,9 +150,9 @@ public void run() {\n                if(listEventView.size()!=0){\n \n                    for(View view :listEventView){\n-                       if (view instanceof WXTextView && null != view){\n-                           Log.e(TAG, \"WXTextView get = \" + ((WXTextView) view).getText().toString());\n-                       }\n+//                       if (view instanceof WXTextView && null != view){\n+//                           Log.e(TAG, \"WXTextView get = \" + ((WXTextView) view).getText().toString());\n+//                       }\n \n                        String hintText = \"\";\n "
            },
            {
                "sha": "8b0a9d5e18a5e5d9974a737858ab06f635616716",
                "filename": "src/androidTest/java/com/alibaba/weex/util/ViewUtil.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/5849d5fe027acb7882133dc1d792ca83315da477/src/androidTest/java/com/alibaba/weex/util/ViewUtil.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/5849d5fe027acb7882133dc1d792ca83315da477/src/androidTest/java/com/alibaba/weex/util/ViewUtil.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/androidTest/java/com/alibaba/weex/util/ViewUtil.java?ref=5849d5fe027acb7882133dc1d792ca83315da477",
                "patch": "@@ -5,6 +5,7 @@\n import android.support.v7.widget.RecyclerView;\n import android.test.InstrumentationTestCase;\n import android.test.TouchUtils;\n+import android.text.TextUtils;\n import android.util.Log;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -23,7 +24,7 @@\n \n     public static ArrayList<View> findViewWithText(ViewGroup vg, String text){\n         ArrayList<View> out = new ArrayList<View>();\n-        if(null != vg){\n+        if(null != vg && !TextUtils.isEmpty(text)){\n             vg.findViewsWithText(out, text, View.FIND_VIEWS_WITH_TEXT);\n         }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-weex-playground/commit/79ab380d940cfa650a529da5c0f3280d0fb05096",
        "repo": "incubator-weex-playground",
        "parent": "https://github.com/apache/incubator-weex-playground/commit/06a301a9fcff4821373146f6df4e5ac42d2ef6c1",
        "message": "* [android] Fix devtool crash & support resetBridge (#1548)\n\n* Default progress\r\n\r\n* Fix dispatchMessage parmas\r\n\r\n* Fix top crash\r\n\r\n* [core] Android\u901a\u8fc7\u7f16\u8bd1,\u589e\u52a0testCase\r\n\r\n* [Core] Refactor. Dom module should call weex core.\r\n\r\n* [core] \u4fee\u590dAST parse\u5bf9double\u7684\u89e3\u6790\u95ee\u9898\r\n\r\n* [core]  fixed call expression and member expression\r\n\r\n* [core] fixed build error\r\n\r\n* [core] add array.slice function\r\n\r\n* Set new thread status\r\n\r\n* singleprogress only\r\n\r\n* [core] fixed callee expression\r\n\r\n* [core] fix new thread status\r\n\r\n* [core] fixed call expression\r\n\r\n* [core] \u4fee\u590d\u5404\u7c7bArray\u5bfc\u81f4\u7684\u5185\u7f6e\u51fd\u6570\u95ee\u9898, jsonok\r\n\r\n* load libweexjss.so failed,error=dlopen failed: library \"libJavaScriptCore.so\" not found if libweexjss.so and libJavascript.so are not in the same dir\r\n\r\n* Clear _fixedComponents when unload. Clear weex core objects when dom module's destroy instance is called.\r\n\r\n* Try fix libJavaScriptCore.so not found crash\r\n\r\n* Try fix libJavaScriptCore.so not found crash\r\n\r\n* [core] fixed ref and childrens call\r\n\r\n* [core] rax js running and debug fixed\r\n\r\n* [core] only left one question to call body, other fixing\r\n\r\n* [core] running rax ok and bugfix\r\n\r\n* [core] add comment for span add string children\r\n\r\n* [android] \u8fd8\u539f\u6253\u5305\u811a\u672c\u7684release\u914d\u7f6e\r\n\r\n* Trace libjavascriptso not found\r\n\r\n* Update so link path\r\n\r\n* remove LOGE, some condition use LOGD\r\n\r\n* multi progress\r\n\r\n* [core] Fixed Build OK\r\n\r\n* [core] fixed build link error\r\n\r\n* MultiProgress gray\r\n\r\n* Update so\r\n\r\n* [Core] Refactor. Fix JSDebug with devtool.\r\n\r\n* [Core] Refactor. Add data render files.\r\n\r\n* [core] fixed build ios link error\r\n\r\n* Fix native npe and add all link library path\r\n\r\n* Update gcc jsc\r\n\r\n* [core] fixed ios build error\r\n\r\n* Update so\r\n\r\n* [ios] change scheme release to debug\r\n\r\n* Init sender and script_side_functions_ = null\r\n\r\n* Update so fix npe\r\n\r\n* Do not dlclose handle if dlopen failed\r\n\r\n* fix crash file log name lost error\r\n\r\n* Fix light app dispatch and onmessage data length loss\r\n\r\n* Remove log\r\n\r\n* Add log\r\n\r\n* Update so\r\n\r\n* Update so\r\n\r\n* Update so\r\n\r\n* Update so\r\n\r\n* Update so\r\n\r\n* Update so\r\n\r\n* Update so\r\n\r\n* Update so\r\n\r\n* Update so fix lightapp bugs\r\n\r\n* [Core] Refactor. Fix function declaration.\r\n\r\n* [core] fixed crash and merge member call op code,  opt render manager\r\n\r\n* Remove log\r\n\r\n* Update so to gray\r\n\r\n* Fix npe\r\n\r\n* [iOS] When print WXSDKInstance, do not use %@ which may cause thread freeze due to thread issue.\r\n\r\n* [core] fixed UC json case can't show, control bug fixed and merge bug fixed\r\n\r\n* Close database should be threadSafe as ensuredatabase function\r\n\r\n* [core] fixed rax root node to showing\r\n\r\n* [iOS] Protect flexCssNode variable.\r\n\r\n* [iOS] Avoid use ivar in block which makes compiler unhappy.\r\n\r\n* [Core] Refactor. Fix subclass of WXScrollerComponent cannot scroll because of _contentSize not set.\r\n\r\n* [core]fix the error of use delete memory\r\n\r\n* [core] add for each imp\r\n\r\n* [Core] Refactor. Avoid unnecessary layout.\r\n\r\n* use std::unique_ptr to avoid memory leak\r\n\r\n* Update so\r\n\r\n* [core] supporting for in, indexOf, break, continue, value ref, opt and bugfix\r\n\r\n* [core] add OP_OR, supporting undefine and null as nil\r\n\r\n* [core] bugfix and function name standard\r\n\r\n* native timer support lightApp\r\n\r\n* [core] rm unuse file\r\n\r\n* native timer support lightApp\r\n\r\n* Update so to support light app setTimeout\r\n\r\n* Fix npe\r\n\r\n* use jsc's path if getLdLibraryPath return null\r\n\r\n* [core] stop jni call when js framwork init faild\r\n\r\n* [Core] Refactor. Fix waterfall header component layout.\r\n\r\n* [Core] Refactor. Fix cell layout in list.\r\n\r\n* do not update libld path if it is null\r\n\r\n* [core] fixed json, read var outsize and declaration var rename again\r\n\r\n* avoid null ptr\r\n\r\n* [core] fix stringstream overflow\r\n\r\n* [Android] rm prepareJsc method\r\n\r\n* [core] fixed member acess left value call\r\n\r\n* [core] fix scoped_jstring NPE\r\n\r\n* [core] fix vsnprintf crash\r\n\r\n* [core] update so\r\n\r\n* support gcanvas link\r\n\r\n* support gcanvas link\r\n\r\n* [core] rax running bugfix\r\n\r\n* [core] fixed call order error\r\n\r\n* [core] add  JSON.stringify function\r\n\r\n* [Android] fix WXHeader sticky problem\r\n\r\n* [core] fix string add sequence problem\r\n\r\n* [core] miss file in cmakelist\r\n\r\n* [core] fix JNI pinned array reference table overflow\r\n\r\n* [core] update so\r\n\r\n* [core] fix data render ref problem\r\n\r\n* [core] add string compare with seq\r\n\r\n* [core] fixed function call after the register  var ref reset to clear\r\n\r\n* feat:  Reduce WXParams obj time of Serializable\r\n\r\n* [core] fixed jsx node running error, arrow function default return jsxnode ptr\r\n\r\n* Update so to gray\r\n\r\n* Update so to gray\r\n\r\n* [core] add OP_NOT, NEQ, NSEQ\r\n\r\n* [Core] Data render. Add files to iOS project.\r\n\r\n* [iOS] add WXDispalyLinkManager object to manager displaylink\r\n\r\n* [core] fixed log crash\r\n\r\n* [core] fixed build error\r\n\r\n* [iOS] add WXDisplayLinkManager.h and WXDisplayLinkManager.m\r\n\r\n* [iOS] add WXDisplayLinkManager.h\r\n\r\n* Support dev tool\r\n\r\n* [core] add value ref for memory opt\r\n\r\n* * [android] Support NetworkHandler for image/stream/font\r\n\r\n* [core] fix OP_NEW modify error, add string trim\r\n\r\n* [core] add encodeURIComponent\r\n\r\n* fixed android and ios image diff\r\n\r\n* [core] add android eof error\r\n\r\n* [core] merge OP_NEW, new expression\r\n\r\n* [core] fix random jsx compile error\uff0c remember bool class member default value must be set\uff01\r\n\r\n* [Core] Update project for deleted files.\r\n\r\n* [Core] Update project for deleted files.\r\n\r\n* [core] update cmakelist for delete file\r\n\r\n* [core] fix cmakelist error\r\n\r\n* [iOS] Turn off clang_warn_comma.\r\n\r\n* Update libweexcore.so\r\n\r\n* [core] support data and props in component parse, support vcomponent\r\n\r\n* [core] fix ios compile error\r\n\r\n* [Core] Refactor. Remove pixel value rounding on iOS.\r\n\r\n* [Core] Refactor. Remove pixel value rounding on iOS. Using MACRO.\r\n\r\n* [Core] Refactor. Remove subcomponents from _indexDict and unbind them on removeComponent action.\r\n\r\n* Fix light app lose double data\r\n\r\n* [iOS] Do not print _rootView.frame in description which may cause deadlock.\r\n\r\n* [WEEX-606][Android]fix monitor data (#1497)\r\n\r\n* [Android] writescreen check stage limimt\r\n* [Android] add writescreen swtich\r\n* [Android] monitor download failed\r\n* [Android] when download success,report download stage\r\n\r\n* [iOS] Optimize scroller paging effect.\r\n\r\n* [ios] fix page cant show error\r\n\r\n* * [Android] ADD wxBodyRatio\r\n\r\n* [Core] Refactor. Fix layout.\r\n\r\n* * [android] Fix image network handler\r\n\r\n* [WEEX-607][iOS] [weex monitor improvement\r\n\r\n* * [iOS] edit img size monitor\r\n\r\n* [core] unordered_map insert do not cover exsited key\r\n\r\n* [core] add utf16 to utf8 util\r\n\r\n* [Core] Refactor. Fix refreshInstance method. WHY change 'data' to '[WXUtility JSONString:data]' without any code review!\r\n\r\n* [Core] Build issues.\r\n\r\n* [ios] fix data render refreshInstance\r\n\r\n* [Core] Refactor. NSNull pass to weexcore.\r\n\r\n* [Core] Refactor. Add safeContainerStyleWidth.\r\n\r\n* [android] fix buile compile error\r\n\r\n* * [android] weexcore jsfunction bugfix : devtool\r\n\r\n* [Core] Refactor. Fix waterfall cell layout.\r\n\r\n* Update so fix component method unwork\r\n\r\n* [iOS][BugFix] Fix the UICollectionView Bad Access Crash under system 10.0.\r\n\r\n* [iOS][CodeStyle]Code style format\r\n\r\n* * [android] Update jsfuntion\r\n\r\n* [Core] Refactor. Adapt for a speical layout case. Multiple vertical flex lists inside a horizontal scroller.\r\n\r\n* [Core] Refactor. Protect for nullptr to std::string cast.\r\n\r\n* [Core] Refactor. Cannot add invalid component to list.\r\n\r\n* [Core] Refactor. Fix appbar render bug on iOS.\r\n\r\n* [WEEX-609][iOS]apm monitor logic modify (#1505)\r\n\r\n* [iOS] interactionTime should not calculate rootcomponent\r\n\r\n*[iOS] only js create finish ,then check if add view and report\r\n\r\n* [iOS] add instance id info when exec in globalContext\r\n\r\n* [Core] Refactor. Handle \"margin/padding/borderWidth\" beforehand.\r\n\r\n* Support page_zise\r\n\r\n* * [android] Error code classification.\r\n\r\n* * [Android] Add contentMD5Match back.\r\n\r\nhttps://github.com/apache/incubator-weex/pull/989/files\r\n\r\n* [Core] Refactor. Vsync should be retriggered on iOS.\r\n\r\n* Support scroller pageEnable and pageSize attr\r\n\r\n* Fix java.util.ConcurrentModificationException\r\n\r\n* [iOS] Fix crash WXRecycleSliderScrollView.delegate may not responds to @selector(wx_component)\r\n\r\n* [iOS] Fix crash WXRecycleSliderScrollView.delegate may not responds to @selector(wx_component)\r\n\r\n* Fix regist too many Broadcast Receivers\r\n\r\n* fix light app postmessage error\r\n\r\n* Fix java.lang.ArrayIndexOutOfBoundsException\r\n\r\n* Use arraylist\r\n\r\n* * [android] Add resetBridge\r\n\r\n* [Core] Refactor. Delete unused files.\r\n\r\n* * [android] Fix WX_RENDER_ERR_COMPONENT_NOT_REGISTER and WX_RENDER_ERR_BRIDGE_ARG_NULL to Native_ERROR\r\n\r\n* * [android] Make devtool callNativeModule return object.\r\n\r\n* * [android] Rename to WXDebugJsBridge\r\n\r\n* * [android] refector devtool jsfunction\r\n\r\n* * [android] Update connect with devtool\r\n\r\n* * [android] Remove IDebugProxy\r\n\r\n* * [android] Remove IWXDebugJsBridge\r\n\r\n* * [android] DebugServerProxy Decoupled.",
        "bug_id": "incubator-weex-playground_3",
        "file": [
            {
                "sha": "2e13921f9b60bb58fc249d3d31ef4e777111bb9b",
                "filename": "src/main/java/com/alibaba/weex/WXPageActivity.java",
                "status": "modified",
                "additions": 4,
                "deletions": 8,
                "changes": 12,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/79ab380d940cfa650a529da5c0f3280d0fb05096/src/main/java/com/alibaba/weex/WXPageActivity.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/79ab380d940cfa650a529da5c0f3280d0fb05096/src/main/java/com/alibaba/weex/WXPageActivity.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/WXPageActivity.java?ref=79ab380d940cfa650a529da5c0f3280d0fb05096",
                "patch": "@@ -54,18 +54,14 @@\n import com.alibaba.weex.https.WXRequestListener;\n import com.taobao.weex.IWXRenderListener;\n import com.taobao.weex.RenderContainer;\n-import com.taobao.weex.WXEnvironment;\n import com.taobao.weex.WXSDKEngine;\n import com.taobao.weex.WXSDKInstance;\n import com.taobao.weex.appfram.navigator.IActivityNavBarSetter;\n-import com.taobao.weex.bridge.WXBridgeManager;\n-import com.taobao.weex.common.IWXDebugProxy;\n import com.taobao.weex.common.WXRenderStrategy;\n import com.taobao.weex.ui.component.NestedContainer;\n import com.taobao.weex.ui.component.WXComponent;\n import com.taobao.weex.ui.component.WXVContainer;\n import com.taobao.weex.utils.WXFileUtils;\n-import com.taobao.weex.utils.WXJsonUtils;\n import com.taobao.weex.utils.WXLogUtils;\n \n import java.io.File;\n@@ -516,8 +512,8 @@ protected void onStop() {\n   private void registerBroadcastReceiver() {\n     mReceiver = new RefreshBroadcastReceiver();\n     IntentFilter filter = new IntentFilter();\n-    filter.addAction(IWXDebugProxy.ACTION_DEBUG_INSTANCE_REFRESH);\n-    filter.addAction(IWXDebugProxy.ACTION_INSTANCE_RELOAD);\n+    filter.addAction(WXSDKInstance.ACTION_DEBUG_INSTANCE_REFRESH);\n+    filter.addAction(WXSDKInstance.ACTION_INSTANCE_RELOAD);\n \n     registerReceiver(mReceiver, filter);\n   }\n@@ -587,8 +583,8 @@ public boolean setNavBarTitle(String param) {\n   public class RefreshBroadcastReceiver extends BroadcastReceiver {\n     @Override\n     public void onReceive(Context context, Intent intent) {\n-      if (IWXDebugProxy.ACTION_INSTANCE_RELOAD.equals(intent.getAction()) ||\n-              IWXDebugProxy.ACTION_DEBUG_INSTANCE_REFRESH.equals(intent.getAction())) {\n+      if (WXSDKInstance.ACTION_INSTANCE_RELOAD.equals(intent.getAction()) ||\n+              WXSDKInstance.ACTION_DEBUG_INSTANCE_REFRESH.equals(intent.getAction())) {\n         // String myUrl = intent.getStringExtra(\"url\");\n         // Log.e(\"WXPageActivity\", \"RefreshBroadcastReceiver reload onReceive ACTION_DEBUG_INSTANCE_REFRESH mBundleUrl:\" + myUrl + \" mUri:\" + mUri);\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-weex-playground/commit/0f7447bc5a4a2b08d2a6b2f2432d4a13e7d2233a",
        "repo": "incubator-weex-playground",
        "parent": "https://github.com/apache/incubator-weex-playground/commit/8a901210f2fce61a62ac7d7245b7c34f38fdf629",
        "message": "[WEEX-659][core][eagle] support more feature in parser (#1749)\n\n* [iOS] remove render_document.cpp from sdk\r\n\r\n* [core] bugfix ' ' url_encode =>  '%20'\r\n\r\n* [core] bugfix supporting function varying parameter\r\n\r\n* [core] bugfix add utf8 decode for string tokenizer parsing\r\n\r\n* [core] data_render output error log\r\n\r\n* [core] fix event invalid in opcode\r\n\r\n* [core] opcode supprot big endian\r\n\r\n* [core] modify int to int32_t and unsigned to u_int32_t\r\n\r\n* [core] add argc in opcode\r\n\r\n* Print performance log in perf mode\r\n\r\n* Catch Throwable to avoid huawei 500 boradcast crash\r\n\r\n* Fix json class not  found crash\r\n\r\n* fix npe\r\n\r\n* [core]  __registerModules deprecated in sversion 5.8 + __requireModule supporting in sversion 5.8 +\r\n\r\n* fix image strategy memory leak\r\n\r\n* add function args for children function closure var implementation\r\n\r\n* bugfix c function return nil or undefined\r\n\r\n* bugfix argc param error\r\n\r\n* [core]  add exec state binary implement\r\n\r\n* [data_render] add support for regex\r\n\r\n* [core] develop exec state section decoding and encoding implementation\r\n\r\n* [core] bugfix dom diff for adding node to root render object\r\n\r\n* [core] bugfix exec state decoding error\r\n\r\n* [core] exec state encoding and decoding finally complete\r\n\r\n* [core] fixed build error\r\n\r\n* [core] bugfix encoding and decoding value ref error, and running closure OK\r\n\r\n* [core] decrease constants value encoding file size\r\n\r\n* [core] add bit reader and writer, adaptation for linux builder\r\n\r\n* [core] adp linux builder\r\n\r\n* [data-render] \u4fee\u590dAndroid\u7f16\u8bd1\u73af\u5883\r\n\r\n* [core] fix linux builder\r\n\r\n* [core] add encoder compatible version\r\n\r\n* [core] sdk version modify for defines\r\n\r\n* [core] fix build on linux\r\n\r\n* [core] encoding and decoding bits stream OK\r\n\r\n* [core] remove debug code\r\n\r\n* [core] fix linux header build\r\n\r\n* [core] remove debug code\r\n\r\n* [core] add compile error for line and col\r\n\r\n* [core] supporting jsx element ...spread property\r\n\r\n* [core] compile supporting arrow function with no args\r\n\r\n* * [Android] Change NestedInstance in WXEmbed to protected for sub-class to override.\r\n\r\n* [core] add typeof defines\r\n\r\n* reboot jsc engine if there is no view add to container after 5s\r\n\r\n* Change default timeout to public\r\n\r\n* [core] bugfix a && b && c or a || b || c,   json parsing failed return  undefined, add op typeof\r\n\r\n* Set reboot jsengine switch on\r\n\r\n* [data-render] \u589e\u52a0\u5bf9switch\u8bed\u53e5\u7684\u652f\u6301\r\n\r\n* [core] modify new expression, add args for new expression\r\n\r\n* [core] add new expression constractor\r\n\r\n* If context is not wxactivity, throw a exception to this instance\r\n\r\n* [core] add OP_CONSTRUCTOR after OP_NEW\r\n\r\n* [core] add console class function\r\n\r\n* [data-render] console support in android\r\n\r\n* [core] restore code\r\n\r\n* [core] add class static member supporting, WeexSDK supporting *.wlasm for weex lite\r\n\r\n* [core] modify WL_RENDER render  option for weex lite\r\n\r\n* [core] modify WLASM_RENDER for weex lite render option\r\n\r\n* [core] modify args length as Andriod\r\n\r\n* [data_render] window.open support\r\n\r\n* [core] modify WeexSDK building file\r\n\r\n* [data-render] try catch parse, codegen only support try block and finally block\r\n\r\n* [core] modify header file\r\n\r\n* [core] add event supporting for function instance\r\n\r\n* [core] bugfix crash by delete class twice\r\n\r\n* [data-render] renderByUrl support wlasm\r\n\r\n* [data_render] update so\r\n\r\n* [data_render] fix arrow function parse error\r\n\r\n* [core] supporting jsx props parse Token::SUB\r\n\r\n* [core] supporting  return add '(' ')'\r\n\r\n* [core] supporting array.map\r\n\r\n* [data_render] math support\r\n\r\n* [core] bugfix console.log string can't show\r\n\r\n* [core] bugfix vue json binary encoding error,  add section data to store the array and table",
        "bug_id": "incubator-weex-playground_4",
        "file": [
            {
                "sha": "1463c8d1d0a2c5b5361437692dc8571a901a5598",
                "filename": "src/main/assets/lite_template/case.js",
                "status": "modified",
                "additions": 84,
                "deletions": 21,
                "changes": 105,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/0f7447bc5a4a2b08d2a6b2f2432d4a13e7d2233a/src/main/assets/lite_template/case.js",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/0f7447bc5a4a2b08d2a6b2f2432d4a13e7d2233a/src/main/assets/lite_template/case.js",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/assets/lite_template/case.js?ref=0f7447bc5a4a2b08d2a6b2f2432d4a13e7d2233a",
                "patch": "@@ -1,10 +1,72 @@\n /* eslint-disable react/react-in-jsx-scope */\n /* global __weex_data__, print, createElement */\n+\n+try{\n+    console.log(\"abc in try\");\n+} catch(err) {\n+    console.log(\"err\");\n+} finally{\n+    console.log(\"finally\");\n+}\n+\n+var a= /(a.)/g;\n+var b = a.exec('abc,aac, ssa2, dda');\n+console.log(b);\n+\n+console.log('aabccbddBc'.match(/(bss.)/g));\n+\n+console.log(\"ceil\");\n+console.log(Math.ceil(0.95),\" == 1\");\n+console.log(Math.ceil(4),\" == 4\");\n+console.log(Math.ceil(7.004),\" == 8\");\n+console.log(Math.ceil(-0.95),\" == -0\");\n+console.log(Math.ceil(-4),\" == -4\");\n+console.log(Math.ceil(-7.004),\" == -7\");\n+\n+console.log(\"floor\");\n+console.log(Math.floor( 45.95),\" ==  45\");\n+console.log(Math.floor( 45.05),\" ==  45\");\n+console.log(Math.floor( 4 ),\" ==  4\");\n+console.log(Math.floor(-45.05),\" ==  -46\");\n+console.log(Math.floor(-45.95),\" ==  -46\");\n+\n+console.log(\"random\");\n+console.log(Math.random());\n+console.log(Math.random());\n+console.log(Math.random());\n+console.log(Math.random());\n+\n+console.log(\"max\");\n+console.log(Math.max(1,2,3),\" == 3\");\n+console.log(Math.max(1,2.2, 4.2), \"== 4.2\");\n+console.log(Math.max(1,\"a\"),\"== null\");\n+console.log(Math.max(),\"== INT_MIN\");\n+\n+console.log(\"min\");\n+console.log(Math.min(1,2,3),\" == 1\");\n+console.log(Math.min(0.5,2.2, 4), \"== 0.5\");\n+console.log(Math.min(1,\"a\"),\"== null\");\n+console.log(Math.min(),\"== INT_MAX\");\n+\n+var a = 3;\n+\n+console.log('start');\n+switch(a){\n+    case 1:\n+        console.log('switch 1');\n+        break;\n+    case 2:\n+        console.log('switch 2');\n+        break;\n+    default:\n+        console.log('default branch');\n+}\n+console.log('end');\n class Component {\n     constructor(props) {\n         this.props = props;\n     }\n-    \n+\n     setState(newData) {\n         this.state = { ...this.state,\n             ...newData\n@@ -20,7 +82,7 @@ var nativeModules = {};\n const registerModule = moduleName => {\n     var sourceKeys = Object.keys(moduleName);\n     var key;\n-    \n+\n     for (var i = 0; i < sourceKeys.length; i++) {\n         key = sourceKeys[i];\n         nativeModules[key] = moduleName[key];\n@@ -46,12 +108,12 @@ const require = name => {\n                 loop(methods[i]);\n             }\n         }\n-        log(\"register\",methods);\n+        console.log(\"register\",methods);\n         return target;\n     };\n-    \n+\n     const MODULE_NAME_PREFIX = '@weex-module/';\n-    \n+\n     if (name.split(MODULE_NAME_PREFIX).length > 1) {\n         const weexModuleName = name.split(MODULE_NAME_PREFIX)[1];\n         return requireModule(weexModuleName);\n@@ -150,12 +212,12 @@ class TipTag extends Component {\n         super(props);\n     }\n     _onClick = e => {\n-        log(\"click go\");\n+        console.log(\"click go\");\n         let searchParams = {};\n         if (this.props.data.q) {\n             searchParams.q = this.props.data.q;\n         }\n-        \n+\n         if (this.props.data.params && this.props.data.params.length > 0) {\n             this.props.data.params.forEach(item => {\n                                            if (item.key) {\n@@ -165,22 +227,22 @@ class TipTag extends Component {\n         }\n         if (this.props.tiptype && this.props.tiptype == 'voice_smarttips') {\n             searchParams['voiceFrom'] = '1';\n-            log(\"se go\");\n+            console.log(\"se go\");\n             searchEvent.searchOption(\"searchOption\", {\n                                      params: searchParams\n                                      });\n         } else {\n-            log(\"se go2\");\n+            console.log(\"se go2\");\n             searchEvent.search(\"search\", {\n                                params: searchParams\n                                });\n         }\n     };\n-    \n+\n     render() {\n         let data = this.props.data;\n         let tagStyle = styles.tag;\n-        \n+\n         if (!this.props.isListMode) {\n             tagStyle = { ...styles.tag,\n             marginLeft: 5.5,\n@@ -193,7 +255,7 @@ class TipTag extends Component {\n         <Text style={styles.tagText}>{data.show}</Text>\n         </View>;\n     }\n-    \n+\n }\n \n const _tiptag_export = {\n@@ -205,23 +267,23 @@ const TipTag_import_default_from__WidgetInWFStyle__tiptag = _tiptag_export.defau\n const WidgetInWFStyle = props => {\n     let tips = props.tips,\n     tiptype = props.tiptype;\n-    \n+\n     if (!tips || tips.length === 0) {\n         return null;\n     }\n-    \n+\n     if (tips.length > 8) {\n         tips = tips.slice(0, 8);\n     }\n-    \n+\n     let wfTitle = <View style={waterfallStyles.wfTitle}>\n     <View style={waterfallStyles.wfDivideLine} />\n     <Text style={waterfallStyles.titleText}>{props.topic || '\u76f8\u5173\u641c\u7d22'}</Text>\n     <View style={waterfallStyles.wfDivideLine} />\n     </View>;\n     let wfLines = [];\n     let tipLength = tips.length;\n-    \n+\n     function createWfLine(leftTip, rightTip) {\n         let tag1 = <TipTag_import_default_from__WidgetInWFStyle__tiptag data={leftTip} isListMode={false} tiptype={tiptype} />;\n         let tag2 = rightTip ? <TipTag_import_default_from__WidgetInWFStyle__tiptag data={rightTip} isListMode={false} tiptype={tiptype} /> : null;\n@@ -309,11 +371,11 @@ const WidgetInListStyle = props => {\n     if (!tips || tips.length === 0) {\n         return null;\n     }\n-    \n+\n     if (tips.length > 8) {\n         tips = tips.slice(0, 8);\n     }\n-    \n+\n     const listTitle = <View style={listStyles.listTitle}>\n     <View style={listStyles.divideLine} />\n     <Text style={listStyles.titleText}>{props.topic || '\u76f8\u5173\u641c\u7d22'}</Text>\n@@ -327,7 +389,7 @@ const WidgetInListStyle = props => {\n                  firstLineTips.push(tipTag);\n                  } else {\n                  const firstLineCount = parseInt(tips.length / 2, 10) + tips.length % 2;\n-                 \n+\n                  if (index < firstLineCount) {\n                  firstLineTips.push(tipTag);\n                  } else if (index < 8) {\n@@ -371,7 +433,7 @@ class Widget extends Component {\n         return <View style={{ ...defaultStyle__lib.container\n         }}>{content}</View>;\n     }\n-    \n+\n }\n \n const _lib_export = {\n@@ -400,7 +462,8 @@ class Segment extends Component {\n         <Widget_import_default_from___lib {...data} />\n         </View>;\n     }\n-    \n+\n }\n \n render(<Segment />);\n+"
            },
            {
                "sha": "8a5408daf813d8ab030a2cba060fb4fa7f8970cf",
                "filename": "src/main/java/com/alibaba/weex/WXPageActivity.java",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/0f7447bc5a4a2b08d2a6b2f2432d4a13e7d2233a/src/main/java/com/alibaba/weex/WXPageActivity.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/0f7447bc5a4a2b08d2a6b2f2432d4a13e7d2233a/src/main/java/com/alibaba/weex/WXPageActivity.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/WXPageActivity.java?ref=0f7447bc5a4a2b08d2a6b2f2432d4a13e7d2233a",
                "patch": "@@ -242,8 +242,13 @@ private void loadWXfromService(final String url) {\n       public void onSuccess(WXHttpTask task) {\n         Log.i(TAG, \"into--[http:onSuccess] url:\" + url);\n         try {\n+          Uri uri = Uri.parse(url);\n           mConfigMap.put(\"bundleUrl\", url);\n-          mInstance.render(TAG, new String(task.response.data, \"utf-8\"), mConfigMap, null, WXRenderStrategy.APPEND_ASYNC);\n+          if (uri.getPath().endsWith(\".wlasm\")){\n+            mInstance.render(TAG, task.response.data, mConfigMap, null);\n+          } else {\n+            mInstance.render(TAG, new String(task.response.data, \"utf-8\"), mConfigMap, null, WXRenderStrategy.APPEND_ASYNC);\n+          }\n         } catch (UnsupportedEncodingException e) {\n           e.printStackTrace();\n         }"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-weex-playground/commit/3e1e6a3d182f87b2f0e1fefc685ac73f478dd856",
        "repo": "incubator-weex-playground",
        "parent": "https://github.com/apache/incubator-weex-playground/commit/5387927f51cb76098c6d7b5bf87a2f8dca0f2ae3",
        "message": "[WEEX-551][core][Android] Add new new data render mode. (#1409)\n\n* [core] init vnode & ast interface\r\n\r\n* [core] add basic code generator\r\n\r\n* [core] Add vnode for data-render\r\n\r\n* [core] Add basic VM and ExecState\r\n\r\n* add ast source code\r\n\r\n* [core] Add StringTable and support string value\r\n\r\n* fix compile issue\r\n\r\n* [core] opcode implement\r\n\r\n* [core] code generator implement\r\n\r\n* [core] int to int64 & opcode implement\r\n\r\n* [core]VM init in VNodeRenderManager\r\n\r\n* [core]support createElement and appendChild\r\n\r\n* [core] remove android log\r\n\r\n* [core]fix vnode_manager compile error\r\n\r\n* [core]prototype test\r\n\r\n* [core] support childblockstatement visit\r\n\r\n* [core]Add setAttr support, fix chunk ast parse\r\n\r\n* [core]fix create element args error\r\n\r\n* rename ast constant,add assignment\r\n\r\n* code optimize  and parsing using stacks\r\n\r\n* [core] LT LE JMP opcode implement\r\n\r\n* [core] opcode implement\r\n\r\n* [core] LT LE JMP opcode implement\r\n\r\n* pasing if for statement\r\n\r\n* [core] Support global variables getter\r\n\r\n* [core] Add time log for data_render, add setClassList support, fix parser error.\r\n\r\n* [core]fix setClassList issue\r\n\r\n* [core] add op_code OP_GOTO\r\n\r\n* [core] OP_GOTO opcode implement\r\n\r\n* [core] for and if statement implement\r\n\r\n* [core] assign expression implement\r\n\r\n* [core] op_code increment & decrement implement\r\n\r\n* [core] Add bool and double AST\r\n\r\n* [core] op_code increment & decrement implement\r\n\r\n* [core] prefix expression implement & fix value copy construction\r\n\r\n* [core] Add VNodeRenderContext, move context code from exec_state.\r\n\r\n* [core] [data_render] support c_ptr value\r\n\r\n* [core] Fixed crash and paser name error\r\n\r\n* [core] add test workspace\r\n\r\n* Revert \"[core] add test workspace\"\r\n\r\nThis reverts commit e235e990dfd34fefe9a4978e7e22d3a08f97c380.\r\n\r\n* [core] boolean constant & double constant code generator\r\n\r\n* [core]fix compile\r\n\r\n* [core]using expression parser for match and binding in parser.cc\r\n\r\n* [core] declaration list code generator\r\n\r\n* [core] op_code table implement\r\n\r\n* [core] op_code table implement\r\n\r\n* [core] modify cmakelist file\r\n\r\n* [core][data_render] fix compile error & format code\r\n\r\n* [core] op_code table_factory && bug fix\r\n\r\n* [core]remove statistic and parse_context, fix code style\r\n\r\n* [core]Add \"data\" parse to global var.\r\n\r\n* [core] using sizeof while parsing for,'match' got higher priority , improve parser code style.\r\n\r\n* [core][Android] optimize renderobject to component link.\r\n\r\nA continuous optimization process.\r\n\r\n1. Use creator for list and cell component to avoid reflection\r\n2. Add useScroller field to avoid using set to store used types\r\n in a instance\r\n3. Use WXSDKInstance instead of instanceId to avoid map search\r\n4. Use JNIEnv::NewStringUTF instead of using cache\r\n\r\n* [core]Add refresh and close test for data_render. Add a test activity in playground\r\n\r\n* [core] member access & array constant & object constant code generator\r\n\r\n* [core] gettable op_code bugfix\r\n\r\n* [core] add local c function (sizeof, log)\r\n\r\n* [core][Android] remove MeasureMode_jni, optimize text layout\r\n\r\n* [core] add local function gettablesize\r\n\r\n* [core] Table lifecycle management & avoid [new] operate\r\n\r\n* [core]  json array size bugfix & set table value bugfix\r\n\r\n* [core] add constructor for VNodeRenderContext\r\n\r\n* [core] String add operation\r\n\r\n* [core]Fix for statement and if statement parse, remove extra json\r\n\r\n* [core] use VNode* value instead of id and tag\r\n\r\n* [core] remove useless code & format\r\n\r\n* [core] function prototype implement\r\n\r\n* [core]Add support for component. Add merge function. Add CommaExpression. Fix AssignExpression opcode. Fix ForStatement alias update problem. Fix GETTABLE opcode bug. Add ReturnStatement opcode generation and vm support. Add OP_INVALID VM support, TBD.\r\n\r\n* [core] Making function in chunk global, Fix component call, Fix ObjectConstant\r\n\r\n* [core]Using this to emulate class-field behavior\r\n\r\n* [core] string factory release\r\n\r\n* [core] use unique_ptr to manage pointer\r\n\r\n* [core] fix opcode ABC overflow problem add ABx and Ax\r\n\r\nIn addition:\r\n1.Parser result should return copy one.\r\n2.RenderSuccess is called by UI thread, do not need to post action.\r\n3.Others\r\n\r\n* [core] Add Render Strategy DATA_RENDER\r\n\r\n1. fix crash when exit page.\r\n2. fix refresh init_data not working bug\r\n\r\n* [core] move json11 to third_party\r\n\r\n* [core] rm non-use file\r\n\r\n* [core]Add appendUrlParam func\r\n\r\n* [core] add tostring cfunc\r\n\r\n* [core] update so\r\n\r\n* [core]fix type convert of ValueLT...; fix refresh process.\r\n\r\n* [core] fix WeexProxy NPE\r\n\r\n* [core] update weexcore.so\r\n\r\n* [core] fix sequential problem\r\n\r\n* [core] fix weexproxy npe\r\n\r\n* [core] Add so initialize protection, fix jni_onload error",
        "bug_id": "incubator-weex-playground_5",
        "file": [
            {
                "sha": "40f21053300d1c0a7e599013dd8c4bc5bade3117",
                "filename": "src/main/AndroidManifest.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/3e1e6a3d182f87b2f0e1fefc685ac73f478dd856/src/main/AndroidManifest.xml",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/3e1e6a3d182f87b2f0e1fefc685ac73f478dd856/src/main/AndroidManifest.xml",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/AndroidManifest.xml?ref=3e1e6a3d182f87b2f0e1fefc685ac73f478dd856",
                "patch": "@@ -132,6 +132,7 @@ under the License.\n                 android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                 android:resource=\"@xml/filepaths\" />\n         </provider>\n+\n     </application>\n \n </manifest>\n\\ No newline at end of file"
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-weex-playground/commit/c6c47017e3e4a1075255db88c0b43af926726176",
        "repo": "incubator-weex-playground",
        "parent": "https://github.com/apache/incubator-weex-playground/commit/de839694a3d723648d5fed0aff891b2bda9b9cd8",
        "message": "Weex render and other thin but critical issues should be classify to\nrender container by call render of exception callback  close #920\n\n* [android] add WXExceptionsUtil to support commitCriticalExceptionRT eg . crash platform\n\n* [android] fix action is null NPE\n\n* [android] commit exception js excute and init exceptions\n\n* [test] add WXExceptionUtils unit test\n\n* [android] add commit detail log\n\n* [android] sdk init process critical issues committed RT\n\n* [android] add invoke register module,componet or jsservice exception commit RT\n\n* [android] network and inspector bug fixed\n\n* [android] register modules bug\n\n* [android] remove debug inspecter init\n\n* [anroid] prepare grey test issues add over\n\n* [android] creatFinish Action now posed track\n\n* [android] add first dom action seq track\n\n* [android]add degrade code and case\n\n* [android] remove log and revert jsfm version to 0.22.7\n\n* [android] add content type check case\n\n* [android] add degrade url and opt flow\n\n* [android] add more data when addevent action dom is null case\n\n* [android] data opt track\n\n* [android]bundle url commit\n\n* [android] _documentElement for rax when add event action is ignored\n\n* [android]createFinish Action is track\n\n* [android] add template info track\n\n* [android] opt errorcode\n\n* [android] total ultimate code\n\n* [android] add NPE protect\n\n* [android] add unite test for commit\n\n* [test] fix unit case",
        "bug_id": "incubator-weex-playground_6",
        "file": [
            {
                "sha": "5566c2fdd99b6253608010615ef25e1e9bd2fb7c",
                "filename": "src/main/java/com/alibaba/weex/IndexActivity.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/c6c47017e3e4a1075255db88c0b43af926726176/src/main/java/com/alibaba/weex/IndexActivity.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/c6c47017e3e4a1075255db88c0b43af926726176/src/main/java/com/alibaba/weex/IndexActivity.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/IndexActivity.java?ref=c6c47017e3e4a1075255db88c0b43af926726176",
                "patch": "@@ -166,10 +166,10 @@ public void onException(WXSDKInstance wxsdkInstance, String s, String s1) {\n     super.onException(wxsdkInstance,s,s1);\n     mProgressBar.setVisibility(View.GONE);\n     mTipView.setVisibility(View.VISIBLE);\n-    if (TextUtils.equals(s, WXRenderErrorCode.WX_NETWORK_ERROR)) {\n+    if (TextUtils.equals(s, WXRenderErrorCode.DegradPassivityCode.WX_DEGRAD_ERR_NETWORK_BUNDLE_DOWNLOAD_FAILED.getDegradErrorCode())) {\n       mTipView.setText(R.string.index_tip);\n     } else {\n-      mTipView.setText(\"render error:\" + s1);\n+      mTipView.setText(\"network render error:\" + s1);\n     }\n   }\n "
            }
        ]
    },
    {
        "commit": "https://github.com/apache/incubator-weex-playground/commit/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
        "repo": "incubator-weex-playground",
        "parent": "https://github.com/apache/incubator-weex-playground/commit/ed7dbd08bc5dff45c0c423ae101812618bf15bab",
        "message": "Merge branch 'android-feature-20160607' into android-debug\n\n* android-feature-20160607: (63 commits)\n  * [android] update icon\n  * [android] update rename package\n  * [android] fix unit test\n  * [android] update ListComponent.java\n  * [Android] Fix text crash when there is multiple WXInstance\n  * [android] update WXSDKInstance.java\n  *[android] optimize list  recycle\n  * [android] update WXListComponent.java\n  * [Android] Fix NPE problem of WXText\n  * [android] update WXListComponent.java recycle position\n  * [Android] Slider.binImp() may cause the incorrect bind relationship between view and component. This commit fix this.\n  * [android] remove okhttp-ws dependency\n  Revert \"* [android] update build.grade remove okhttp-ws\"\n  * [android] update build.grade remove okhttp-ws\n  * [android] update libweexcore.so\n  * [android] update libweexcore.so add nativeLog\n  * [android] update WXLogUtils.java add TAG\n  * [android] update splashActivity.java modify duration time\n  * [android] update code rename WXMainActivity delete code of AndroidMainifest.xml\n  * [android] update WXSDKInstance.java destroy 3d layer view\n  ...\n\n# Conflicts:\n#\tandroid/playground/app/src/main/java/com/alibaba/weex/WXApplication.java\n#\tandroid/playground/app/src/main/java/com/alibaba/weex/extend/component/WTRichText.java\n#\tandroid/playground/app/src/main/java/com/alibaba/weex/extend/module/RenderModule.java\n#\tandroid/playground/app/src/main/java/com/alibaba/weex/extend/module/WXEventModule.java\n#\tandroid/sdk/src/main/java/com/taobao/weex/WXSDKInstance.java",
        "bug_id": "incubator-weex-playground_7",
        "file": [
            {
                "sha": "fdc4f23d1d6acd381388584dc123f9d0f1f48c83",
                "filename": "build.gradle",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/build.gradle",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/build.gradle",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/build.gradle?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -82,7 +82,7 @@ dependencies {\n     compile 'com.squareup.okhttp:okhttp:2.3.0'\n     compile 'com.squareup.okhttp:okhttp-ws:2.3.0'\n     compile 'com.squareup.okio:okio:1.0.1'\n-    compile 'com.alibaba:fastjson:1.1.45'\n+    compile 'com.alibaba:fastjson:1.1.46.android'\n     compile 'com.android.support:support-v4:23.1.1'\n     compile 'com.android.support:appcompat-v7:23.1.1'\n     compile 'com.android.support:design:23.1.1'"
            },
            {
                "sha": "e719247873861e772fdf79acad691fd2e173c16b",
                "filename": "proguard-rules.pro",
                "status": "modified",
                "additions": 16,
                "deletions": 0,
                "changes": 16,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/proguard-rules.pro",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/proguard-rules.pro",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/proguard-rules.pro?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -15,3 +15,19 @@\n #-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n #   public *;\n #}\n+##weex\n+-keep class com.taobao.weex.bridge.**{*;}\n+-keep class com.taobao.weex.dom.**{*;}\n+-keep class com.taobao.weex.adapter.**{*;}\n+-keep class com.taobao.weex.common.**{*;}\n+-keep class * implements com.taobao.weex.IWXObject{*;}\n+-keep class com.taobao.weex.ui.**{*;}\n+-keep class com.taobao.weex.ui.component.**{*;}\n+-keep class com.taobao.weex.utils.**{\n+    public <fields>;\n+    public <methods>;\n+    }\n+-keep class com.taobao.weex.view.**{*;}\n+-keep class com.taobao.weex.module.**{*;}\n+-keep public class * extends com.taobao.weex.common.WXModule{*;}\n+-keep public class com.taobao.weex.WXDebugTool{*;}\n\\ No newline at end of file"
            },
            {
                "sha": "8bdbe5d608f10d933ffeeaf293abf1164eccc524",
                "filename": "src/main/assets/index.js",
                "status": "modified",
                "additions": 87,
                "deletions": 61,
                "changes": 148,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/assets/index.js",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/assets/index.js",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/assets/index.js?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -44,10 +44,10 @@\n /* 0 */\n /***/ function(module, exports, __webpack_require__) {\n \n-\t;__weex_define__(\"@weex-component/e186bc461decd02d9edfd73b2750de6a\", [], function(__weex_require__, __weex_exports__, __weex_module__){\n+\t;__weex_define__(\"@weex-component/5967f205d011fc83a8277f74388ee8ff\", [], function(__weex_require__, __weex_exports__, __weex_module__){\n \n \t;\n-\t  __webpack_require__(18);\n+\t  __webpack_require__(16);\n \t  __weex_module__.exports = {\n \t    data: function () {return {\n \t      items: [\n@@ -78,20 +78,22 @@\n \t        // showcase\n \t        {name: 'showcase/new-fashion/index', title: 'Activity'},\n \t        {name: 'showcase/calculator', title: 'Calculator'},\n+\t        {name: 'showcase/minesweeper', title: 'Minesweeper'},\n \t        {name: 'showcase/ui', title: 'UI Gallery'}\n \t      ]\n \t    }}\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"example-list\",\n \t  \"attr\": {\n \t    \"items\": function () {return this.items},\n \t    \"dir\": \"examples\"\n \t  }\n-\t}\n \t})\n-\t;__weex_bootstrap__(\"@weex-component/e186bc461decd02d9edfd73b2750de6a\", {\n+\t})\n+\t;__weex_bootstrap__(\"@weex-component/5967f205d011fc83a8277f74388ee8ff\", {\n \t  \"transformerVersion\": \"0.3.1\"\n \t},undefined)\n \n@@ -133,7 +135,8 @@\n \t    }\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": function () {return ['btn', 'btn-' + (this.type), 'btn-sz-' + (this.size)]},\n \t  \"children\": [\n@@ -145,8 +148,9 @@\n \t      }\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"btn\": {\n \t    \"marginBottom\": 0,\n \t    \"alignItems\": \"center\",\n@@ -239,7 +243,7 @@\n \t  \"btn-txt-sz-small\": {\n \t    \"fontSize\": 30\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -257,7 +261,8 @@\n \t    methods: {}\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": function () {return ['h' + (this.level)]},\n \t  \"style\": {\n@@ -272,8 +277,9 @@\n \t      }\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"h1\": {\n \t    \"height\": 110,\n \t    \"paddingTop\": 20,\n@@ -298,7 +304,7 @@\n \t  \"txt-h3\": {\n \t    \"fontSize\": 42\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -325,7 +331,8 @@\n \t    }\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": [\n \t    \"item\"\n@@ -342,8 +349,9 @@\n \t      \"type\": \"content\"\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"item\": {\n \t    \"paddingTop\": 25,\n \t    \"paddingBottom\": 25,\n@@ -354,7 +362,7 @@\n \t    \"borderBottomWidth\": 1,\n \t    \"borderColor\": \"#dddddd\"\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -377,7 +385,8 @@\n \t    }\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": function () {return ['panel', 'panel-' + (this.type)]},\n \t  \"style\": {\n@@ -413,8 +422,9 @@\n \t      ]\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"panel\": {\n \t    \"marginBottom\": 20,\n \t    \"backgroundColor\": \"#ffffff\",\n@@ -462,7 +472,7 @@\n \t    \"color\": \"#ffffff\"\n \t  },\n \t  \"panel-body\": {}\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -479,7 +489,8 @@\n \t    }}\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": function () {return ['tip', 'tip-' + (this.type)]},\n \t  \"children\": [\n@@ -491,8 +502,9 @@\n \t      }\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"tip\": {\n \t    \"paddingLeft\": 36,\n \t    \"paddingRight\": 36,\n@@ -531,7 +543,7 @@\n \t  \"tip-txt-danger\": {\n \t    \"color\": \"#a94442\"\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -626,7 +638,8 @@\n \t    }\n \t}\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"style\": {\n \t    \"overflow\": \"hidden\",\n@@ -641,12 +654,13 @@\n \t      \"type\": \"content\"\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"wrap\": {\n \t    \"overflow\": \"hidden\"\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -711,7 +725,8 @@\n \t    }\n \t}\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": [\n \t    \"wrap\"\n@@ -734,8 +749,9 @@\n \t      ]\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"wrap\": {\n \t    \"overflow\": \"hidden\",\n \t    \"position\": \"relative\"\n@@ -745,7 +761,7 @@\n \t    \"position\": \"absolute\",\n \t    \"transform\": \"translateY(0) translateZ(0)\"\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -799,7 +815,8 @@\n \t        }\n \t    }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": [\n \t    \"container\"\n@@ -888,8 +905,9 @@\n \t      }\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"container\": {\n \t    \"flexDirection\": \"row\",\n \t    \"position\": \"fixed\",\n@@ -937,7 +955,7 @@\n \t    \"width\": 50,\n \t    \"height\": 50\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -947,7 +965,8 @@\n \t;__weex_define__(\"@weex-component/wxc-navpage\", [], function(__weex_require__, __weex_exports__, __weex_module__){\n \t__webpack_require__(9);\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": [\n \t    \"wrapper\"\n@@ -984,8 +1003,9 @@\n \t      ]\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"wrapper\": {\n \t    \"position\": \"absolute\",\n \t    \"top\": 0,\n@@ -994,7 +1014,7 @@\n \t    \"bottom\": 0,\n \t    \"width\": 750\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -1045,7 +1065,8 @@\n \t        }\n \t    }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": [\n \t    \"wrapper\"\n@@ -1085,8 +1106,9 @@\n \t      ]\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"wrapper\": {\n \t    \"width\": 750,\n \t    \"position\": \"absolute\",\n@@ -1112,7 +1134,7 @@\n \t    \"right\": 0,\n \t    \"height\": 88\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n@@ -1141,7 +1163,8 @@\n \t        }\n \t    }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"div\",\n \t  \"classList\": [\n \t    \"container\"\n@@ -1184,8 +1207,9 @@\n \t      }\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"container\": {\n \t    \"flex\": 1,\n \t    \"flexDirection\": \"column\",\n@@ -1210,15 +1234,13 @@\n \t    \"textAlign\": \"center\",\n \t    \"fontSize\": 20\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n /* 13 */,\n /* 14 */,\n-/* 15 */,\n-/* 16 */,\n-/* 17 */\n+/* 15 */\n /***/ function(module, exports, __webpack_require__) {\n \n \t;__weex_define__(\"@weex-component/example-list-item\", [], function(__weex_require__, __weex_exports__, __weex_module__){\n@@ -1237,7 +1259,8 @@\n \t    }\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"wxc-list-item\",\n \t  \"events\": {\n \t    \"click\": \"redirect\"\n@@ -1253,21 +1276,22 @@\n \t      }\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n \t  \"item-txt\": {\n \t    \"fontSize\": 48,\n \t    \"color\": \"#555555\"\n \t  }\n-\t}\n+\t})\n \t})\n \n /***/ },\n-/* 18 */\n+/* 16 */\n /***/ function(module, exports, __webpack_require__) {\n \n \t;__weex_define__(\"@weex-component/example-list\", [], function(__weex_require__, __weex_exports__, __weex_module__){\n-\t__webpack_require__(17);\n+\t__webpack_require__(15);\n \n \t;\n \t  __webpack_require__(1);\n@@ -1319,7 +1343,8 @@\n \t    }\n \t  }\n \n-\t;__weex_module__.exports.template={\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n \t  \"type\": \"list\",\n \t  \"children\": [\n \t    {\n@@ -1337,8 +1362,9 @@\n \t      ]\n \t    }\n \t  ]\n-\t}\n-\t;__weex_module__.exports.style={}\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {})\n \t})\n \n /***/ }"
            },
            {
                "sha": "9ae81b55447da2417479447d4397f5b2e270004d",
                "filename": "src/main/assets/showcase/minesweeper.js",
                "status": "added",
                "additions": 313,
                "deletions": 0,
                "changes": 313,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/assets/showcase/minesweeper.js",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/assets/showcase/minesweeper.js",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/assets/showcase/minesweeper.js?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -0,0 +1,313 @@\n+/******/ (function(modules) { // webpackBootstrap\n+/******/ \t// The module cache\n+/******/ \tvar installedModules = {};\n+\n+/******/ \t// The require function\n+/******/ \tfunction __webpack_require__(moduleId) {\n+\n+/******/ \t\t// Check if module is in cache\n+/******/ \t\tif(installedModules[moduleId])\n+/******/ \t\t\treturn installedModules[moduleId].exports;\n+\n+/******/ \t\t// Create a new module (and put it into the cache)\n+/******/ \t\tvar module = installedModules[moduleId] = {\n+/******/ \t\t\texports: {},\n+/******/ \t\t\tid: moduleId,\n+/******/ \t\t\tloaded: false\n+/******/ \t\t};\n+\n+/******/ \t\t// Execute the module function\n+/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n+\n+/******/ \t\t// Flag the module as loaded\n+/******/ \t\tmodule.loaded = true;\n+\n+/******/ \t\t// Return the exports of the module\n+/******/ \t\treturn module.exports;\n+/******/ \t}\n+\n+\n+/******/ \t// expose the modules object (__webpack_modules__)\n+/******/ \t__webpack_require__.m = modules;\n+\n+/******/ \t// expose the module cache\n+/******/ \t__webpack_require__.c = installedModules;\n+\n+/******/ \t// __webpack_public_path__\n+/******/ \t__webpack_require__.p = \"\";\n+\n+/******/ \t// Load entry module and return exports\n+/******/ \treturn __webpack_require__(0);\n+/******/ })\n+/************************************************************************/\n+/******/ ([\n+/* 0 */\n+/***/ function(module, exports) {\n+\n+\t;__weex_define__(\"@weex-component/12a7eb18ddb56294ee0721456b8a5cd6\", [], function(__weex_require__, __weex_exports__, __weex_module__){\n+\n+\t;\n+\t  __weex_module__.exports = {\n+\t    data: function () {return {\n+\t      size: 9,\n+\t      max: 10,\n+\t      board: 0,\n+\t      row: [],\n+\t      vector: [[-1, 0], [-1, -1], [0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1]],\n+\t      strings: {\n+\t        mine: \"\ud83d\udca3\",\n+\t        flag: \"\ud83d\udea9\",\n+\t        win: \"YOU WIN!\",\n+\t        lose: \"YOU LOSE~\"\n+\t      },\n+\t      finished: false\n+\t    }},\n+\t    methods: {\n+\t      map: function(x, y, callback) { // visit tiles around (x, y)\n+\t        for (var i = 0; i < 8; ++i) {\n+\t          var mx = x + this.vector[i][0];\n+\t          var my = y + this.vector[i][1];\n+\t          if (mx >= 0 && my >= 0 && mx < this.size && my < this.size) {\n+\t            callback(this.row[mx].col[my]);\n+\t          }\n+\t        }\n+\t      },\n+\t      dfs: function(tile) { // dfs a tile\n+\t        var pos = this.position(tile.tid);\n+\t        var context = this;\n+\t        tile.state = \"open\";\n+\t        this.map(pos[\"x\"], pos[\"y\"], function(node) {\n+\t          if (node.around == 0 && node.state == \"normal\") { // dfs\n+\t            context.dfs(node); // dfs recursively\n+\t          } else {\n+\t            context.display(node); // display tile\n+\t          }\n+\t        });\n+\t      },\n+\t      random: function(min, max) { // generate random number between [min, max)\n+\t        return parseInt(Math.random() * (max - min) + min);\n+\t      },\n+\t      plant: function() { // arrange mines\n+\t        var count = 0;\n+\t        while (count < this.max) {\n+\t          var x = this.random(0, this.size);\n+\t          var y = this.random(0, this.size);\n+\t          var tile = this.row[x].col[y];\n+\t          if (tile.value == 0) {\n+\t            ++count;\n+\t            tile.value = 1;\n+\t          }\n+\t        }\n+\t      },\n+\t      calculate: function() { // calculate values around tiles\n+\t        for (var i = 0; i < this.size; ++i) {\n+\t          for (var j = 0; j < this.size; ++j) {\n+\t            var around = 0;\n+\t            this.map(i, j, function(tile) {\n+\t              around += tile.value;\n+\t            });\n+\t            this.row[i].col[j].around = around;\n+\t          }\n+\t        }\n+\t      },\n+\t      restart: function(e) { // restart game\n+\t        var row = [];\n+\t        var count = 0;\n+\t        this.board = this.max; // display remain mines\n+\t        this.finished = false;\n+\t        for (var i = 0; i < this.size; ++i) { // init data-binding\n+\t          var col = { \"col\": [] };\n+\t          for (var j = 0; j < this.size; ++j) {\n+\t            var tid = i * this.size + j;\n+\t            col[\"col\"][j] = {\n+\t              tid: \"\" + tid,\n+\t              state: \"normal\",\n+\t              value: 0,\n+\t              text: \"\",\n+\t              around: 0\n+\t            };\n+\t          }\n+\t          row[i] = col;\n+\t        }\n+\t        this.row = row; // will cause view tree rendering\n+\t        this.plant(); // arrange mines\n+\t        this.calculate(); // calculate around values\n+\t      },\n+\t      unfinished: function() { // check game status\n+\t        var finished = this.finished;\n+\t        if (this.finished) { // restart if finished\n+\t          this.restart();\n+\t        }\n+\t        return !finished;\n+\t      },\n+\t      position: function(tid) { // return (x, y) with tile id\n+\t        var row = parseInt(tid / this.size);\n+\t        var col = tid % this.size;\n+\t        return { x: row, y: col };\n+\t      },\n+\t      display: function(tile) {\n+\t        tile.state = \"open\";\n+\t        tile.text = (tile.around == 0) ? \"\" : tile.around;\n+\t      },\n+\t      tile: function(event) { // return tile object with click event\n+\t        var tid = event.target.attr[\"tid\"];\n+\t        var pos = this.position(tid);\n+\t        return this.row[pos[\"x\"]].col[pos[\"y\"]];\n+\t      },\n+\t      onclick: function(event) { // onclick tile\n+\t        if (this.unfinished()) {\n+\t          var tile = this.tile(event);\n+\t          if (tile.state == \"normal\") {\n+\t            if (tile.value == 1) { // lose game\n+\t              this.onfail();\n+\t            } else { // open it\n+\t              this.display(tile);\n+\t              if (tile.around == 0) {\n+\t                this.dfs(tile); // start dfs a tile\n+\t              }\n+\t              this.judge(); // game judgement\n+\t            }\n+\t          }\n+\t        }\n+\t      },\n+\t      onlongpress: function(event) { // onlongpress tile\n+\t        if (this.unfinished()) {\n+\t          var tile = this.tile(event);\n+\t          tile.state = tile.state == \"flag\" ? \"normal\" : \"flag\";\n+\t          if (tile.state == \"flag\") {\n+\t            --this.board;\n+\t            tile.text = this.strings.flag; // flag\n+\t          } else {\n+\t            ++this.board;\n+\t            tile.text = \"\";\n+\t          }\n+\t          this.judge();\n+\t        }\n+\t      },\n+\t      foreach: function(callback) { // enumerate all tiles\n+\t        for (var i = 0; i < this.size; ++i) {\n+\t          for (var j = 0; j < this.size; ++j) {\n+\t            callback(this.row[i].col[j]);\n+\t          }\n+\t        }\n+\t      },\n+\t      judge: function() {\n+\t        var count = 0;\n+\t        this.foreach(function(tile) {\n+\t          if (tile.state == \"open\" || tile.state == \"flag\") {\n+\t            ++count;\n+\t          }\n+\t        });\n+\t        if (count == this.size * this.size) { // win\n+\t          this.finished = true;\n+\t          this.board = this.strings.win;\n+\t        }\n+\t      },\n+\t      onfail: function() { // fail\n+\t        this.board = this.strings.lose;\n+\t        this.finished = true;\n+\t        var mine = this.strings.mine;\n+\t        this.foreach(function(tile) {\n+\t          if (tile.value == 1) {\n+\t            tile.text = mine;\n+\t          }\n+\t        });\n+\t      }\n+\t    }\n+\t  }\n+\n+\t;__weex_module__.exports.template = __weex_module__.exports.template || {}\n+\t;Object.assign(__weex_module__.exports.template, {\n+\t  \"type\": \"container\",\n+\t  \"children\": [\n+\t    {\n+\t      \"type\": \"text\",\n+\t      \"classList\": [\n+\t        \"btn\"\n+\t      ],\n+\t      \"attr\": {\n+\t        \"value\": function () {return this.board}\n+\t      }\n+\t    },\n+\t    {\n+\t      \"type\": \"container\",\n+\t      \"repeat\": function () {return this.row},\n+\t      \"style\": {\n+\t        \"flexDirection\": \"row\",\n+\t        \"flex\": 1\n+\t      },\n+\t      \"children\": [\n+\t        {\n+\t          \"type\": \"container\",\n+\t          \"repeat\": function () {return this.col},\n+\t          \"style\": {\n+\t            \"flex\": 1\n+\t          },\n+\t          \"children\": [\n+\t            {\n+\t              \"type\": \"text\",\n+\t              \"attr\": {\n+\t                \"tid\": function () {return this.tid},\n+\t                \"around\": function () {return this.around},\n+\t                \"value\": function () {return this.text}\n+\t              },\n+\t              \"events\": {\n+\t                \"click\": \"onclick\",\n+\t                \"longpress\": \"onlongpress\"\n+\t              },\n+\t              \"classList\": function () {return [this.state, 'tile']}\n+\t            }\n+\t          ]\n+\t        }\n+\t      ]\n+\t    },\n+\t    {\n+\t      \"type\": \"text\",\n+\t      \"events\": {\n+\t        \"click\": \"restart\"\n+\t      },\n+\t      \"classList\": [\n+\t        \"btn\"\n+\t      ],\n+\t      \"attr\": {\n+\t        \"value\": \"START\"\n+\t      }\n+\t    }\n+\t  ]\n+\t})\n+\t;__weex_module__.exports.style = __weex_module__.exports.style || {}\n+\t;Object.assign(__weex_module__.exports.style, {\n+\t  \"btn\": {\n+\t    \"margin\": 2,\n+\t    \"backgroundColor\": \"#e74c3c\",\n+\t    \"color\": \"#ffffff\",\n+\t    \"textAlign\": \"center\",\n+\t    \"flex\": 1,\n+\t    \"fontSize\": 66,\n+\t    \"height\": 80\n+\t  },\n+\t  \"normal\": {\n+\t    \"backgroundColor\": \"#95a5a6\"\n+\t  },\n+\t  \"open\": {\n+\t    \"backgroundColor\": \"#34495e\",\n+\t    \"color\": \"#ffffff\"\n+\t  },\n+\t  \"flag\": {\n+\t    \"backgroundColor\": \"#95a5a6\"\n+\t  },\n+\t  \"tile\": {\n+\t    \"margin\": 2,\n+\t    \"fontSize\": 66,\n+\t    \"height\": 80,\n+\t    \"paddingTop\": 0,\n+\t    \"textAlign\": \"center\"\n+\t  }\n+\t})\n+\t})\n+\t;__weex_bootstrap__(\"@weex-component/12a7eb18ddb56294ee0721456b8a5cd6\", {\n+\t  \"transformerVersion\": \"0.3.1\"\n+\t},undefined)\n+\n+/***/ }\n+/******/ ]);\n\\ No newline at end of file"
            },
            {
                "sha": "54c2abc076ef78d41d8ea9e883b5e1bb96768377",
                "filename": "src/main/java/com/alibaba/weex/WXApplication.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/WXApplication.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/WXApplication.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/WXApplication.java?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -2,10 +2,10 @@\n \n import android.app.Application;\n \n-import com.alibaba.weex.extend.components.WTRichText;\n import com.alibaba.weex.extend.adapter.ImageAdapter;\n-import com.alibaba.weex.extend.modules.RenderModule;\n-import com.alibaba.weex.extend.modules.WXEventModule;\n+import com.alibaba.weex.extend.component.WTRichText;\n+import com.alibaba.weex.extend.module.RenderModule;\n+import com.alibaba.weex.extend.module.WXEventModule;\n import com.taobao.weex.WXSDKEngine;\n import com.taobao.weex.common.WXException;\n "
            },
            {
                "sha": "7390b9a4dc48b0c4b44659a38bb8c0143ad0e778",
                "filename": "src/main/java/com/alibaba/weex/extend/adapter/ImageAdapter.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/adapter/ImageAdapter.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/adapter/ImageAdapter.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/extend/adapter/ImageAdapter.java?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -84,6 +84,9 @@ public void setImage(final String url, final ImageView view,\n \n       @Override\n       public void run() {\n+        if(view==null||view.getLayoutParams()==null){\n+          return;\n+        }\n         if (TextUtils.isEmpty(url)) {\n           view.setImageBitmap(null);\n           return;"
            },
            {
                "sha": "34cbf954a205d79f482ad1dfff930f4114e682dc",
                "filename": "src/main/java/com/alibaba/weex/extend/component/WTRichText.java",
                "status": "renamed",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/component/WTRichText.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/component/WTRichText.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/extend/component/WTRichText.java?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -4,7 +4,7 @@\n  * Confidential Information and shall use it only in accordance with the terms of the license\n  * agreement you entered into with Alibaba.com.\n  */\n-package com.alibaba.weex.extend.components;\n+package com.alibaba.weex.extend.component;\n \n import android.os.Parcel;\n import android.text.Spannable;",
                "previous_filename": "src/main/java/com/alibaba/weex/extend/Components/WTRichText.java"
            },
            {
                "sha": "901fef7da722d961ad16eec3cfcbc7e8b4655a1f",
                "filename": "src/main/java/com/alibaba/weex/extend/module/RenderModule.java",
                "status": "renamed",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/module/RenderModule.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/module/RenderModule.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/extend/module/RenderModule.java?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -1,4 +1,4 @@\n-package com.alibaba.weex.extend.modules;\n+package com.alibaba.weex.extend.module;\n \n import android.util.Log;\n ",
                "previous_filename": "src/main/java/com/alibaba/weex/extend/Modules/RenderModule.java"
            },
            {
                "sha": "ad6ec7320ccdd5fd6c7aa11593e9b67f943ac1f7",
                "filename": "src/main/java/com/alibaba/weex/extend/module/WXEventModule.java",
                "status": "renamed",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/apache/incubator-weex-playground/blob/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/module/WXEventModule.java",
                "raw_url": "https://github.com/apache/incubator-weex-playground/raw/eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef/src/main/java/com/alibaba/weex/extend/module/WXEventModule.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-weex-playground/contents/src/main/java/com/alibaba/weex/extend/module/WXEventModule.java?ref=eb2f7153c7fa976dc7aa9e6a42b850c4e1e82eef",
                "patch": "@@ -1,4 +1,4 @@\n-package com.alibaba.weex.extend.modules;\n+package com.alibaba.weex.extend.module;\n \n import android.content.Intent;\n import android.net.Uri;",
                "previous_filename": "src/main/java/com/alibaba/weex/extend/Modules/WXEventModule.java"
            }
        ]
    }
]
