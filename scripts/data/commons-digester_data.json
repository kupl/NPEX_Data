[
    {
        "commit": "https://github.com/apache/commons-digester/commit/f568436033fac9fe4dc9b38342a029f20c79dc96",
        "file": [
            {
                "patch": "@@ -268,19 +268,10 @@ protected void configure()\n \n         }).newDigester();\n \n-        // Parse our test input\n-        NamedBean root1 = null;\n-        try\n-        {\n-            // an exception will be thrown if the method can't be found\n-            root1 = digester.parse( getInputStream( \"Test8.xml\" ) );\n+       // Parse our test input\n+       // an exception will be thrown if the method can't be found\n+        NamedBean root1 = digester.parse( getInputStream( \"Test8.xml\" ) );\n \n-        }\n-        catch ( Throwable t )\n-        {\n-            // this means that the method can't be found and so the test fails\n-            fail( \"Digester threw Exception:  \" + t );\n-        }\n \n         // if the CallMethodRule were to incorrectly invoke the method call\n         // on the second-created NamedBean instance, then the root one would",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-digester/raw/f568436033fac9fe4dc9b38342a029f20c79dc96/src/test/java/org/apache/commons/digester3/CallMethodRuleTestCase.java",
                "status": "modified",
                "changes": 15,
                "deletions": 12,
                "sha": "014c076e6513b213129975d1e906295d0ad2325f",
                "blob_url": "https://github.com/apache/commons-digester/blob/f568436033fac9fe4dc9b38342a029f20c79dc96/src/test/java/org/apache/commons/digester3/CallMethodRuleTestCase.java",
                "filename": "src/test/java/org/apache/commons/digester3/CallMethodRuleTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/test/java/org/apache/commons/digester3/CallMethodRuleTestCase.java?ref=f568436033fac9fe4dc9b38342a029f20c79dc96"
            }
        ],
        "bug_id": "commons-digester_1",
        "parent": "https://github.com/apache/commons-digester/commit/a61f3728d4e2c6454dd0069148397745b6b3a5bf",
        "message": "Simplify; avoid potential NPE warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@1212522 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/a61f3728d4e2c6454dd0069148397745b6b3a5bf",
        "file": [
            {
                "patch": "@@ -54,14 +54,7 @@ public void testDefaultPlugins1()\n         Container root = new Container();\n         digester.push( root );\n \n-        try\n-        {\n-            digester.parse( Utils.getInputStream( this, \"test2.xml\" ) );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw e;\n-        }\n+        digester.parse( Utils.getInputStream( this, \"test2.xml\" ) );\n \n         Object child;\n         List<Widget> children = root.getChildren();\n@@ -103,25 +96,22 @@ public void testDefaultPlugins2()\n         Container root = new Container();\n         digester.push( root );\n \n-        Exception exception = null;\n         Log oldLog = digester.getLogger();\n         try\n         {\n             digester.setLogger( new NoOpLog() );\n             digester.parse( Utils.getInputStream( this, \"test2.xml\" ) );\n+            fail(\"Expected SAXParseException\");\n         }\n-        catch ( Exception e )\n+        catch ( SAXParseException e )\n         {\n-            exception = e;\n+            assertEquals( PluginInvalidInputException.class, e.getException().getClass() );\n         }\n         finally\n         {\n             digester.setLogger( oldLog );\n         }\n \n-        assertNotNull( exception );\n-        assertEquals( SAXParseException.class, exception.getClass() );\n-        assertEquals( PluginInvalidInputException.class, ( (SAXParseException) exception ).getException().getClass() );\n     }\n \n     public void testDefaultPlugins3()\n@@ -140,24 +130,20 @@ public void testDefaultPlugins3()\n         Container root = new Container();\n         digester.push( root );\n \n-        Exception exception = null;\n         Log oldLog = digester.getLogger();\n         try\n         {\n             digester.setLogger( new NoOpLog() );\n             digester.parse( Utils.getInputStream( this, \"test2.xml\" ) );\n+            fail(\"Expected SAXParseException\");\n         }\n-        catch ( Exception e )\n+        catch ( SAXParseException e )\n         {\n-            exception = e;\n+            assertEquals( PluginConfigurationException.class, e.getException().getClass() );\n         }\n         finally\n         {\n             digester.setLogger( oldLog );\n         }\n-\n-        assertNotNull( exception );\n-        assertEquals( SAXParseException.class, exception.getClass() );\n-        assertEquals( PluginConfigurationException.class, ( (SAXParseException) exception ).getException().getClass() );\n     }\n }",
                "additions": 7,
                "raw_url": "https://github.com/apache/commons-digester/raw/a61f3728d4e2c6454dd0069148397745b6b3a5bf/src/test/java/org/apache/commons/digester3/plugins/TestDefaultPlugin.java",
                "status": "modified",
                "changes": 28,
                "deletions": 21,
                "sha": "fd87f2dd1657e95184695693c2b358c991f5308f",
                "blob_url": "https://github.com/apache/commons-digester/blob/a61f3728d4e2c6454dd0069148397745b6b3a5bf/src/test/java/org/apache/commons/digester3/plugins/TestDefaultPlugin.java",
                "filename": "src/test/java/org/apache/commons/digester3/plugins/TestDefaultPlugin.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/test/java/org/apache/commons/digester3/plugins/TestDefaultPlugin.java?ref=a61f3728d4e2c6454dd0069148397745b6b3a5bf"
            }
        ],
        "bug_id": "commons-digester_2",
        "parent": "https://github.com/apache/commons-digester/commit/8ff705130a6c360e7d2009cb9f1a4d0a307985f5",
        "message": "Simplify; avoid potential NPE warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@1212519 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/8fff7c6827bce19a5ec8e1dd56910a556274e40e",
        "file": [
            {
                "patch": "@@ -223,6 +223,11 @@ protected final void useRootPath( String rootPath )\n      */\n     public final String getSystemId()\n     {\n+        if ( inputSource == null )\n+        {\n+            return null;\n+        }\n+\n         return inputSource.getSystemId();\n     }\n ",
                "additions": 5,
                "raw_url": "https://github.com/apache/commons-digester/raw/8fff7c6827bce19a5ec8e1dd56910a556274e40e/src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java",
                "status": "modified",
                "changes": 5,
                "deletions": 0,
                "sha": "fa3734856d5343f7fc55d20895905041e1c67dde",
                "blob_url": "https://github.com/apache/commons-digester/blob/8fff7c6827bce19a5ec8e1dd56910a556274e40e/src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java",
                "filename": "src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java?ref=8fff7c6827bce19a5ec8e1dd56910a556274e40e"
            }
        ],
        "bug_id": "commons-digester_3",
        "parent": "https://github.com/apache/commons-digester/commit/c8b85d90cf36a70ddf6671e3b3ee0cc8ca53499f",
        "message": "avoid NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/digester3/trunk@1127241 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42",
        "file": [
            {
                "patch": "@@ -40,7 +40,17 @@\n     @Override\n     protected SetNextRule createRule()\n     {\n-        SetNextRule rule = new SetNextRule( getMethodName(), getParamType().getName() );\n+        SetNextRule rule;\n+\n+        if ( getParamType() != null )\n+        {\n+            rule = new SetNextRule( getMethodName(), getParamType().getName() );\n+        }\n+        else\n+        {\n+            rule = new SetNextRule( getMethodName() );\n+        }\n+\n         rule.setExactMatch( isUseExactMatch() );\n         return rule;\n     }",
                "additions": 11,
                "raw_url": "https://github.com/apache/commons-digester/raw/89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42/src/main/java/org/apache/commons/digester3/binder/SetNextBuilder.java",
                "status": "modified",
                "changes": 12,
                "deletions": 1,
                "sha": "efba17a6349698c25182d94a81cf26c18432da31",
                "blob_url": "https://github.com/apache/commons-digester/blob/89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42/src/main/java/org/apache/commons/digester3/binder/SetNextBuilder.java",
                "filename": "src/main/java/org/apache/commons/digester3/binder/SetNextBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/binder/SetNextBuilder.java?ref=89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42"
            },
            {
                "patch": "@@ -40,7 +40,17 @@\n     @Override\n     protected SetRootRule createRule()\n     {\n-        SetRootRule rule = new SetRootRule( getMethodName(), getParamType().getName() );\n+        SetRootRule rule;\n+\n+        if ( getParamType() != null )\n+        {\n+            rule = new SetRootRule( getMethodName(), getParamType().getName() );\n+        }\n+        else\n+        {\n+            rule = new SetRootRule( getMethodName() );\n+        }\n+\n         rule.setExactMatch( isUseExactMatch() );\n         return rule;\n     }",
                "additions": 11,
                "raw_url": "https://github.com/apache/commons-digester/raw/89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42/src/main/java/org/apache/commons/digester3/binder/SetRootBuilder.java",
                "status": "modified",
                "changes": 12,
                "deletions": 1,
                "sha": "20fbec62a0aaccd3f33a5279ea0805f519d68a3e",
                "blob_url": "https://github.com/apache/commons-digester/blob/89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42/src/main/java/org/apache/commons/digester3/binder/SetRootBuilder.java",
                "filename": "src/main/java/org/apache/commons/digester3/binder/SetRootBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/binder/SetRootBuilder.java?ref=89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42"
            },
            {
                "patch": "@@ -40,7 +40,17 @@\n     @Override\n     protected SetTopRule createRule()\n     {\n-        SetTopRule rule = new SetTopRule( getMethodName(), getParamType().getName() );\n+        SetTopRule rule;\n+\n+        if ( getParamType() != null )\n+        {\n+            rule = new SetTopRule( getMethodName(), getParamType().getName() );\n+        }\n+        else\n+        {\n+            rule = new SetTopRule( getMethodName() );\n+        }\n+\n         rule.setExactMatch( isUseExactMatch() );\n         return rule;\n     }",
                "additions": 11,
                "raw_url": "https://github.com/apache/commons-digester/raw/89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42/src/main/java/org/apache/commons/digester3/binder/SetTopBuilder.java",
                "status": "modified",
                "changes": 12,
                "deletions": 1,
                "sha": "2de98de5bd3ee729b574d92ec9d6a3cfcafe1add",
                "blob_url": "https://github.com/apache/commons-digester/blob/89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42/src/main/java/org/apache/commons/digester3/binder/SetTopBuilder.java",
                "filename": "src/main/java/org/apache/commons/digester3/binder/SetTopBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/binder/SetTopBuilder.java?ref=89fd4f0cd36ff7b644cf326eb6e76b5b18f0aa42"
            }
        ],
        "bug_id": "commons-digester_4",
        "parent": "https://github.com/apache/commons-digester/commit/734a3e8c070f64ab7787ebec411d17d42599e972",
        "message": "if paramType is null, Rule creation causes NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/digester3/trunk@1125346 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/493e9de0917564812d2a6ec2674a014ca3ed9e96",
        "file": [
            {
                "patch": "@@ -624,7 +624,7 @@ public CallMethodBuilder withParamCount(int paramCount) {\n                         }\n \n                         this.paramCount = paramCount;\n-                        return null;\n+                        return this;\n                     }\n \n                     public CallMethodBuilder withParamTypes(/* @Nullable */Class<?>... paramTypes) {",
                "additions": 1,
                "raw_url": "https://github.com/apache/commons-digester/raw/493e9de0917564812d2a6ec2674a014ca3ed9e96/src/main/java/org/apache/commons/digester3/RulesBinderImpl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "25444e1c58d37a04b4852ee409e77169b5e5a39b",
                "blob_url": "https://github.com/apache/commons-digester/blob/493e9de0917564812d2a6ec2674a014ca3ed9e96/src/main/java/org/apache/commons/digester3/RulesBinderImpl.java",
                "filename": "src/main/java/org/apache/commons/digester3/RulesBinderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/RulesBinderImpl.java?ref=493e9de0917564812d2a6ec2674a014ca3ed9e96"
            }
        ],
        "bug_id": "commons-digester_5",
        "parent": "https://github.com/apache/commons-digester/commit/14119433f7dd9ab5bb65eba1a8fd0418cc4b81cb",
        "message": "fixed NPE when calling callParam().withParamCount()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/digester3/trunk@1067112 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/e3031b1b716e859d678ef67c30f65de44d0a2cdf",
        "file": [
            {
                "patch": "@@ -189,7 +189,7 @@ public SetPropertiesRule get() {\n                     }\n \n                     public LinkedRuleBuilder then() {\n-                        return null;\n+                        return mainBuilder;\n                     }\n \n                     public SetPropertiesBuilder ignoreMissingProperty(boolean ignoreMissingProperty) {",
                "additions": 1,
                "raw_url": "https://github.com/apache/commons-digester/raw/e3031b1b716e859d678ef67c30f65de44d0a2cdf/src/main/java/org/apache/commons/digester3/RulesBinderImpl.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "8981a24ad77f19d78e60a60b09f3c6d5cfd64a13",
                "blob_url": "https://github.com/apache/commons-digester/blob/e3031b1b716e859d678ef67c30f65de44d0a2cdf/src/main/java/org/apache/commons/digester3/RulesBinderImpl.java",
                "filename": "src/main/java/org/apache/commons/digester3/RulesBinderImpl.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/RulesBinderImpl.java?ref=e3031b1b716e859d678ef67c30f65de44d0a2cdf"
            }
        ],
        "bug_id": "commons-digester_6",
        "parent": "https://github.com/apache/commons-digester/commit/7cd00780ceacc667f12c225599e9d6360be746dc",
        "message": "fixed NPE on setProperties()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/digester3/trunk@1065740 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/79a1439a7dc339f8a3a0221e3bd6d1a3eb1b4108",
        "file": [
            {
                "patch": "@@ -264,7 +264,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-changes-plugin</artifactId>\n-        <version>2.0</version>\n+        <version>2.3</version>\n         <configuration>\n           <issueLinkTemplate>%URL%/../%ISSUE%</issueLinkTemplate>\n         </configuration>",
                "additions": 1,
                "raw_url": "https://github.com/apache/commons-digester/raw/79a1439a7dc339f8a3a0221e3bd6d1a3eb1b4108/pom.xml",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "3f8eb7d3cb2b388b9fba819d1134ace9c1f9ffc2",
                "blob_url": "https://github.com/apache/commons-digester/blob/79a1439a7dc339f8a3a0221e3bd6d1a3eb1b4108/pom.xml",
                "filename": "pom.xml",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/pom.xml?ref=79a1439a7dc339f8a3a0221e3bd6d1a3eb1b4108"
            }
        ],
        "bug_id": "commons-digester_7",
        "parent": "https://github.com/apache/commons-digester/commit/d8cd071cb1f6b3e26586c9a85d6b60c5e0b46268",
        "message": "Use latest changes plugin (2.0 causes NPE).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@992789 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/6d65751686b50fe723c689b3b1ea36aa019a5de2",
        "file": [
            {
                "patch": "@@ -53,6 +53,9 @@ IMPROVEMENTS FROM PREVIOUS RELEASE\n  * [DIGESTER-111] Null arguments to all Digester#parse() methods now an\n                   IllegalArgumentException.\n \n+ * [DIGESTER-122] Potential NullPointerException if debug is enabled in\n+                  Digester#resolveEntity()\n+\n DEPRECATIONS\n ============\n None",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-digester/raw/6d65751686b50fe723c689b3b1ea36aa019a5de2/RELEASE-NOTES.txt",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "fe3f1ff19083d404cefd4479db28a24a07a1a8d9",
                "blob_url": "https://github.com/apache/commons-digester/blob/6d65751686b50fe723c689b3b1ea36aa019a5de2/RELEASE-NOTES.txt",
                "filename": "RELEASE-NOTES.txt",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/RELEASE-NOTES.txt?ref=6d65751686b50fe723c689b3b1ea36aa019a5de2"
            },
            {
                "patch": "@@ -1599,7 +1599,7 @@ public InputSource resolveEntity(String publicId, String systemId)\n             if (systemId == null) {\n                 // cannot resolve\n                 if (log.isDebugEnabled()) {\n-                    log.debug(\" Cannot resolve entity: '\" + entityURL + \"'\");\n+                    log.debug(\" Cannot resolve null entity, returning null InputSource\");\n                 }\n                 return (null);\n                 ",
                "additions": 1,
                "raw_url": "https://github.com/apache/commons-digester/raw/6d65751686b50fe723c689b3b1ea36aa019a5de2/src/java/org/apache/commons/digester/Digester.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "7944b4c365829815d30791f74001205af1797692",
                "blob_url": "https://github.com/apache/commons-digester/blob/6d65751686b50fe723c689b3b1ea36aa019a5de2/src/java/org/apache/commons/digester/Digester.java",
                "filename": "src/java/org/apache/commons/digester/Digester.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/java/org/apache/commons/digester/Digester.java?ref=6d65751686b50fe723c689b3b1ea36aa019a5de2"
            }
        ],
        "bug_id": "commons-digester_8",
        "parent": "https://github.com/apache/commons-digester/commit/58d1afdf1ca216b4028750697e0e64c173f628d3",
        "message": "Potential NPE when debug is enabled\nDIGESTER-122\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@728881 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/6d06bc7aaa22143054102a55882c3ab183ed001d",
        "file": [
            {
                "patch": "@@ -51,7 +51,7 @@\n \n     private static final String DIGESTER_DTD_PATH = \"digester-rules.dtd\";\n \n-    private final URL xmlRulesDtdUrl = this.getClass().getResource(DIGESTER_DTD_PATH);\n+    private final URL xmlRulesDtdUrl = FromXmlRulesModule.class.getResource(DIGESTER_DTD_PATH);\n \n     private final List<InputSource> inputSource = new ArrayList<InputSource>();\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/commons-digester/raw/6d06bc7aaa22143054102a55882c3ab183ed001d/src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "810fd48df646dbc8b82be2ee63de3903a86ccda0",
                "blob_url": "https://github.com/apache/commons-digester/blob/6d06bc7aaa22143054102a55882c3ab183ed001d/src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java",
                "filename": "src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/xmlrules/FromXmlRulesModule.java?ref=6d06bc7aaa22143054102a55882c3ab183ed001d"
            }
        ],
        "bug_id": "commons-digester_9",
        "parent": "https://github.com/apache/commons-digester/commit/9e47e01afcd977baafa4fc2de6d7dd909d926349",
        "message": "subclassing the module, the package reference will be lost, used the exact class to avoid NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/digester3/trunk@1127969 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/1c6b4761a56cb5a2006064d93d4196e47c432bab",
        "file": [
            {
                "patch": "@@ -56,6 +56,9 @@ IMPROVEMENTS FROM PREVIOUS RELEASE\n  * [DIGESTER-122] Potential NullPointerException if debug is enabled in\n                   Digester#resolveEntity()\n \n+ * [DIGESTER-126] Potential NullPointerException if debug is enabled in\n+                  FactoryCreateRule#begin()\n+\n DEPRECATIONS\n ============\n None",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-digester/raw/1c6b4761a56cb5a2006064d93d4196e47c432bab/RELEASE-NOTES.txt",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "7e109c5892045b2102d5aea39971d1dea75fc305",
                "blob_url": "https://github.com/apache/commons-digester/blob/1c6b4761a56cb5a2006064d93d4196e47c432bab/RELEASE-NOTES.txt",
                "filename": "RELEASE-NOTES.txt",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/RELEASE-NOTES.txt?ref=1c6b4761a56cb5a2006064d93d4196e47c432bab"
            },
            {
                "patch": "@@ -369,7 +369,8 @@ public void begin(String namespace, String name, Attributes attributes) throws E\n                 \n                 if (digester.log.isDebugEnabled()) {\n                     digester.log.debug(\"[FactoryCreateRule]{\" + digester.match +\n-                            \"} New \" + instance.getClass().getName());\n+                            \"} New \" + (instance == null ? \"null object\" :\n+                            instance.getClass().getName()));\n                 }\n                 digester.push(instance);\n                 exceptionIgnoredStack.push(Boolean.FALSE);\n@@ -391,7 +392,8 @@ public void begin(String namespace, String name, Attributes attributes) throws E\n             \n             if (digester.log.isDebugEnabled()) {\n                 digester.log.debug(\"[FactoryCreateRule]{\" + digester.match +\n-                        \"} New \" + instance.getClass().getName());\n+                        \"} New \" + (instance == null ? \"null object\" :\n+                        instance.getClass().getName()));\n             }\n             digester.push(instance);\n         }",
                "additions": 4,
                "raw_url": "https://github.com/apache/commons-digester/raw/1c6b4761a56cb5a2006064d93d4196e47c432bab/src/java/org/apache/commons/digester/FactoryCreateRule.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "bd20a75aeaa9ca51ba362059933cfe00d6bdd7a1",
                "blob_url": "https://github.com/apache/commons-digester/blob/1c6b4761a56cb5a2006064d93d4196e47c432bab/src/java/org/apache/commons/digester/FactoryCreateRule.java",
                "filename": "src/java/org/apache/commons/digester/FactoryCreateRule.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/java/org/apache/commons/digester/FactoryCreateRule.java?ref=1c6b4761a56cb5a2006064d93d4196e47c432bab"
            }
        ],
        "bug_id": "commons-digester_10",
        "parent": "https://github.com/apache/commons-digester/commit/6d65751686b50fe723c689b3b1ea36aa019a5de2",
        "message": "ObjectCreationFactory#createObject() retuning null, NPE when log debug is enabled.\nDIGESTER-126\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@728882 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/b76ebdfe18bb3b0c986643d2d3458da00be278bd",
        "file": [
            {
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//digester/src/java/org/apache/commons/digester/CallMethodRule.java,v 1.9 2001/08/25 20:30:16 craigmcc Exp $\n- * $Revision: 1.9 $\n- * $Date: 2001/08/25 20:30:16 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//digester/src/java/org/apache/commons/digester/CallMethodRule.java,v 1.10 2001/11/14 18:57:01 craigmcc Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2001/11/14 18:57:01 $\n  *\n  * ====================================================================\n  *\n@@ -77,7 +77,7 @@\n  *\n  * @author Craig McClanahan\n  * @author Scott Sanders\n- * @version $Revision: 1.9 $ $Date: 2001/08/25 20:30:16 $\n+ * @version $Revision: 1.10 $ $Date: 2001/11/14 18:57:01 $\n  */\n \n public class CallMethodRule extends Rule {\n@@ -284,7 +284,10 @@ public void end() throws Exception {\n \tObject top = digester.peek();\n \tif (digester.getDebug() >= 1) {\n \t    StringBuffer sb = new StringBuffer(\"Call \");\n-\t    sb.append(top.getClass().getName());\n+            if (top == null)\n+                sb.append(\"[NULL TOP]\");\n+            else\n+                sb.append(top.getClass().getName());\n \t    sb.append(\".\");\n \t    sb.append(methodName);\n \t    sb.append(\"(\");",
                "additions": 8,
                "raw_url": "https://github.com/apache/commons-digester/raw/b76ebdfe18bb3b0c986643d2d3458da00be278bd/src/java/org/apache/commons/digester/CallMethodRule.java",
                "status": "modified",
                "changes": 13,
                "deletions": 5,
                "sha": "cb0cddd8648c11136275677190ac632e1cc802b9",
                "blob_url": "https://github.com/apache/commons-digester/blob/b76ebdfe18bb3b0c986643d2d3458da00be278bd/src/java/org/apache/commons/digester/CallMethodRule.java",
                "filename": "src/java/org/apache/commons/digester/CallMethodRule.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/java/org/apache/commons/digester/CallMethodRule.java?ref=b76ebdfe18bb3b0c986643d2d3458da00be278bd"
            }
        ],
        "bug_id": "commons-digester_11",
        "parent": "https://github.com/apache/commons-digester/commit/11c5a3e29ebb788ede26227c9e5c9e6082900df6",
        "message": "Avoid an NPE in debugging messages in CallMethodRule as well.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/digester/trunk@132295 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/c10873f7649a4741e2f1e0735117cc483427bbb7",
        "file": [
            {
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//digester/src/java/org/apache/commons/digester/Digester.java,v 1.43 2002/01/27 01:40:42 craigmcc Exp $\n- * $Revision: 1.43 $\n- * $Date: 2002/01/27 01:40:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//digester/src/java/org/apache/commons/digester/Digester.java,v 1.44 2002/01/27 01:53:03 craigmcc Exp $\n+ * $Revision: 1.44 $\n+ * $Date: 2002/01/27 01:53:03 $\n  *\n  * ====================================================================\n  *\n@@ -112,7 +112,7 @@\n  *\n  * @author Craig McClanahan\n  * @author Scott Sanders\n- * @version $Revision: 1.43 $ $Date: 2002/01/27 01:40:42 $\n+ * @version $Revision: 1.44 $ $Date: 2002/01/27 01:53:03 $\n  */\n \n public class Digester extends DefaultHandler {\n@@ -575,17 +575,33 @@ public SAXParser getParser() {\n \n \n     /**\n-     * By setting the reader in the constructor, you can bypass JAXP and be able\n-     * to use digester in Weblogic 6.0.\n+     * By setting the reader in the constructor, you can bypass JAXP and\n+     * be able to use digester in Weblogic 6.0.\n+     *\n+     * @deprecated Use getXMLReader() instead, which can throw a\n+     *  SAXException if the reader cannot be instantiated\n+     */\n+    public XMLReader getReader() {\n+\n+        try {\n+            return (getXMLReader());\n+        } catch (SAXException e) {\n+            log.error(\"Cannot get XMLReader\", e);\n+            return (null);\n+        }\n+\n+    }\n+\n+\n+    /**\n+     * Return the XMLReader to be used for parsing the input document.\n+     *\n+     * @exception SAXException if no XMLReader can be instantiated\n      */\n-    public synchronized XMLReader getReader() {\n+    public synchronized XMLReader getXMLReader() throws SAXException {\n \n         if (reader == null) {\n-            try {\n-                reader = getParser().getXMLReader();\n-            } catch (SAXException se) {\n-                return null;\n-            }\n+            reader = getParser().getXMLReader();\n         }\n \n         //set up the parse\n@@ -1244,7 +1260,7 @@ public void log(String message, Throwable exception) {\n     public Object parse(File file) throws IOException, SAXException {\n \n         configure();\n-        getReader().parse(new InputSource(new FileReader(file)));\n+        getXMLReader().parse(new InputSource(new FileReader(file)));\n         return (root);\n \n     }\n@@ -1262,7 +1278,7 @@ public Object parse(File file) throws IOException, SAXException {\n     public Object parse(InputSource input) throws IOException, SAXException {\n \n         configure();\n-        getReader().parse(input);\n+        getXMLReader().parse(input);\n         return (root);\n \n     }\n@@ -1280,7 +1296,7 @@ public Object parse(InputSource input) throws IOException, SAXException {\n     public Object parse(InputStream input) throws IOException, SAXException {\n \n         configure();\n-        getReader().parse(new InputSource(input));\n+        getXMLReader().parse(new InputSource(input));\n         return (root);\n \n     }\n@@ -1298,7 +1314,7 @@ public Object parse(InputStream input) throws IOException, SAXException {\n     public Object parse(Reader reader) throws IOException, SAXException {\n \n         configure();\n-        getReader().parse(new InputSource(reader));\n+        getXMLReader().parse(new InputSource(reader));\n         return (root);\n \n     }\n@@ -1316,7 +1332,7 @@ public Object parse(Reader reader) throws IOException, SAXException {\n     public Object parse(String uri) throws IOException, SAXException {\n \n         configure();\n-        getReader().parse(uri);\n+        getXMLReader().parse(uri);\n         return (root);\n \n     }",
                "additions": 33,
                "raw_url": "https://github.com/apache/commons-digester/raw/c10873f7649a4741e2f1e0735117cc483427bbb7/src/java/org/apache/commons/digester/Digester.java",
                "status": "modified",
                "changes": 50,
                "deletions": 17,
                "sha": "9dcb9ace8ffc7869a01b3e1741587773ace417de",
                "blob_url": "https://github.com/apache/commons-digester/blob/c10873f7649a4741e2f1e0735117cc483427bbb7/src/java/org/apache/commons/digester/Digester.java",
                "filename": "src/java/org/apache/commons/digester/Digester.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/java/org/apache/commons/digester/Digester.java?ref=c10873f7649a4741e2f1e0735117cc483427bbb7"
            }
        ],
        "bug_id": "commons-digester_12",
        "parent": "https://github.com/apache/commons-digester/commit/c85d4f2ac173de3b5fd508b6e7f02fd9eccede03",
        "message": "Change all of the parse() methods to call the new getXMLReader() method,\ninstead of getReader().  This has the effect of causing a SAXException\nto be thrown, rather than a bogus NullPointerException, if an XMLReader\ncannot be constructed successfully.\n\nPR: Bugzilla #4519\nSubmitted by:\tDavid H. Martin <dmartin@altoweb.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/digester/trunk@132335 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/06e772d3cbcb18d4a7ed2f1dcaa8c83b6001fa80",
        "file": [
            {
                "patch": "@@ -342,10 +342,11 @@ public void setDigester( Digester digester )\n                 }\n                 catch ( ClassNotFoundException e )\n                 {\n+                    String errorMessage = format( \"[CallMethodRule] Cannot load class %s at position %s\",\n+                                                  this.paramClassNames[i], i );\n                     // use the digester log\n-                    digester.getLogger().error( format( \"[CallMethodRule] Cannot load class %s\",\n-                                                        this.paramClassNames[i] ), e );\n-                    this.paramTypes[i] = null; // Will cause NPE later\n+                    digester.getLogger().error( errorMessage, e );\n+                    throw new RuntimeException( errorMessage, e );\n                 }\n             }\n         }",
                "additions": 4,
                "raw_url": "https://github.com/apache/commons-digester/raw/06e772d3cbcb18d4a7ed2f1dcaa8c83b6001fa80/src/main/java/org/apache/commons/digester3/CallMethodRule.java",
                "status": "modified",
                "changes": 7,
                "deletions": 3,
                "sha": "a4808258c1b2f8287c2cf53cd6cb281050e99122",
                "blob_url": "https://github.com/apache/commons-digester/blob/06e772d3cbcb18d4a7ed2f1dcaa8c83b6001fa80/src/main/java/org/apache/commons/digester3/CallMethodRule.java",
                "filename": "src/main/java/org/apache/commons/digester3/CallMethodRule.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/main/java/org/apache/commons/digester3/CallMethodRule.java?ref=06e772d3cbcb18d4a7ed2f1dcaa8c83b6001fa80"
            }
        ],
        "bug_id": "commons-digester_13",
        "parent": "https://github.com/apache/commons-digester/commit/2f35921900d56288b2ac2825e57e7403efee2d2c",
        "message": "no reason to throw an hard to interpret NPE late, better raising an exception as soon as classes cannot be load, much easier to debug - rule init and rule invocation could happen in different times\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@1142095 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    },
    {
        "commit": "https://github.com/apache/commons-digester/commit/3f590ff7bc3d82ce6f428c71e18504b854fb7e4c",
        "file": [
            {
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//digester/src/java/org/apache/commons/digester/SetPropertiesRule.java,v 1.11 2003/04/16 11:23:50 jstrachan Exp $\n- * $Revision: 1.11 $\n- * $Date: 2003/04/16 11:23:50 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//digester/src/java/org/apache/commons/digester/SetPropertiesRule.java,v 1.12 2003/08/16 18:02:56 craigmcc Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2003/08/16 18:02:56 $\n  *\n  * ====================================================================\n  *\n@@ -80,7 +80,7 @@\n  * Certain attributes can also be marked to be ignored.</p>\n  *\n  * @author Craig McClanahan\n- * @version $Revision: 1.11 $ $Date: 2003/04/16 11:23:50 $\n+ * @version $Revision: 1.12 $ $Date: 2003/08/16 18:02:56 $\n  */\n \n public class SetPropertiesRule extends Rule {\n@@ -253,8 +253,14 @@ public void begin(Attributes attributes) throws Exception {\n         // Populate the corresponding properties of the top object\n         Object top = digester.peek();\n         if (digester.log.isDebugEnabled()) {\n-            digester.log.debug(\"[SetPropertiesRule]{\" + digester.match +\n-                    \"} Set \" + top.getClass().getName() + \" properties\");\n+            if (top != null) {\n+                digester.log.debug(\"[SetPropertiesRule]{\" + digester.match +\n+                                   \"} Set \" + top.getClass().getName() +\n+                                   \" properties\");\n+            } else {\n+                digester.log.debug(\"[SetPropertiesRule]{\" + digester.match +\n+                                   \"} Set NULL properties\");\n+            }\n         }\n         BeanUtils.populate(top, values);\n ",
                "additions": 12,
                "raw_url": "https://github.com/apache/commons-digester/raw/3f590ff7bc3d82ce6f428c71e18504b854fb7e4c/src/java/org/apache/commons/digester/SetPropertiesRule.java",
                "status": "modified",
                "changes": 18,
                "deletions": 6,
                "sha": "3fdb1912255c3b5495f3bd35e38d208299773e09",
                "blob_url": "https://github.com/apache/commons-digester/blob/3f590ff7bc3d82ce6f428c71e18504b854fb7e4c/src/java/org/apache/commons/digester/SetPropertiesRule.java",
                "filename": "src/java/org/apache/commons/digester/SetPropertiesRule.java",
                "contents_url": "https://api.github.com/repos/apache/commons-digester/contents/src/java/org/apache/commons/digester/SetPropertiesRule.java?ref=3f590ff7bc3d82ce6f428c71e18504b854fb7e4c"
            }
        ],
        "bug_id": "commons-digester_14",
        "parent": "https://github.com/apache/commons-digester/commit/bc2ec262a46ab0e41a64244fa4ce29f8c5ed6e8e",
        "message": "Avoid an NPE when debugging is enabled and there is no \"top\" object\non the Digester stack.\n\nPR:  Bugzilla #22131\nReported By:  r1akhil at ibm.com\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/digester/trunk@132481 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "commons-digester"
    }
]