[
    {
        "commit": "https://github.com/apache/hcatalog/commit/26af0e41c2ef3668d96e8cd7493bdb080291e688",
        "file": [
            {
                "patch": "@@ -32,6 +32,8 @@ Trunk (unreleased changes)\n \n   BUG FIXES\n \n+  HCAT-163 NPE when illustrating a relation (daijy)\n+\n   HCAT-628 Committer deletes the original partition when a duplicate partition fails registration (thiruvel via daijy)\n \n   HCAT-554 Loading data using HCatLoader() from a table on non default namenode fails. (amalakar via avandana)",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/26af0e41c2ef3668d96e8cd7493bdb080291e688/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "080d22d7846d2826df36dd1b64e0d7e691be506a",
                "blob_url": "https://github.com/apache/hcatalog/blob/26af0e41c2ef3668d96e8cd7493bdb080291e688/CHANGES.txt",
                "filename": "CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/CHANGES.txt?ref=26af0e41c2ef3668d96e8cd7493bdb080291e688"
            },
            {
                "patch": "@@ -81,7 +81,8 @@\n     private final static int DEFAULT_HIVE_CACHE_EXPIRY_TIME_SECONDS = 2 * 60;\n \n     public static boolean checkJobContextIfRunningFromBackend(JobContext j) {\n-        if (j.getConfiguration().get(\"mapred.task.id\", \"\").equals(\"\")) {\n+        if (j.getConfiguration().get(\"mapred.task.id\", \"\").equals(\"\") &&\n+                !(\"true\".equals(j.getConfiguration().get(\"pig.illustrating\")))) {\n             return false;\n         }\n         return true;",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/26af0e41c2ef3668d96e8cd7493bdb080291e688/core/src/main/java/org/apache/hcatalog/common/HCatUtil.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "6447b2201838eb173237a91e38ae923c3c560570",
                "blob_url": "https://github.com/apache/hcatalog/blob/26af0e41c2ef3668d96e8cd7493bdb080291e688/core/src/main/java/org/apache/hcatalog/common/HCatUtil.java",
                "filename": "core/src/main/java/org/apache/hcatalog/common/HCatUtil.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/core/src/main/java/org/apache/hcatalog/common/HCatUtil.java?ref=26af0e41c2ef3668d96e8cd7493bdb080291e688"
            }
        ],
        "bug_id": "hcatalog_1",
        "parent": "https://github.com/apache/hcatalog/commit/cbe036f528b87a00b2f3a946d0b0a311bff9fc50",
        "message": "HCAT-163 NPE when illustrating a relation\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/hcatalog/trunk@1460850 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "hcatalog"
    },
    {
        "commit": "https://github.com/apache/hcatalog/commit/bfe59688b9af7ccabc23668da147f77b59fbc153",
        "file": [
            {
                "patch": "@@ -44,6 +44,8 @@ Trunk (unreleased changes)\n   HCAT-427 Document storage-based authorization (lefty via gates)\n \n   IMPROVEMENTS\n+  HCAT-530 HCatBaseLoader.getSizeInBytes NPE when partition path is missing (traviscrawford)\n+\n   HCAT-518 Refactor hcatalog-core as subproject (traviscrawford and toffer)\n \n   HCAT-548 Move topic creation in NotificationListener to a separate method (amalakar via avandana)",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/bfe59688b9af7ccabc23668da147f77b59fbc153/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "446bcb14be50c2b82abdc3d739a94ce59f058127",
                "blob_url": "https://github.com/apache/hcatalog/blob/bfe59688b9af7ccabc23668da147f77b59fbc153/CHANGES.txt",
                "filename": "CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/CHANGES.txt?ref=bfe59688b9af7ccabc23668da147f77b59fbc153"
            },
            {
                "patch": "@@ -135,8 +135,11 @@ protected static long getSizeInBytes(InputJobInfo inputJobInfo) throws IOExcepti\n                 if (p.getFileSystem(conf).isFile(p)) {\n                     sizeInBytes += p.getFileSystem(conf).getFileStatus(p).getLen();\n                 } else {\n-                    for (FileStatus child : p.getFileSystem(conf).listStatus(p)) {\n-                        sizeInBytes += child.getLen();\n+                    FileStatus[] fileStatuses = p.getFileSystem(conf).listStatus(p);\n+                    if (fileStatuses != null) {\n+                        for (FileStatus child : fileStatuses) {\n+                            sizeInBytes += child.getLen();\n+                        }\n                     }\n                 }\n             } catch (IOException e) {",
                "additions": 5,
                "raw_url": "https://github.com/apache/hcatalog/raw/bfe59688b9af7ccabc23668da147f77b59fbc153/hcatalog-pig-adapter/src/main/java/org/apache/hcatalog/pig/HCatBaseLoader.java",
                "status": "modified",
                "changes": 7,
                "deletions": 2,
                "sha": "853346abeb9c5988910772c34c1c8a68af085179",
                "blob_url": "https://github.com/apache/hcatalog/blob/bfe59688b9af7ccabc23668da147f77b59fbc153/hcatalog-pig-adapter/src/main/java/org/apache/hcatalog/pig/HCatBaseLoader.java",
                "filename": "hcatalog-pig-adapter/src/main/java/org/apache/hcatalog/pig/HCatBaseLoader.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/hcatalog-pig-adapter/src/main/java/org/apache/hcatalog/pig/HCatBaseLoader.java?ref=bfe59688b9af7ccabc23668da147f77b59fbc153"
            }
        ],
        "bug_id": "hcatalog_2",
        "parent": "https://github.com/apache/hcatalog/commit/c0bd60eca7b2ab3248fc21d0d1aa8ed21ac5e48c",
        "message": "HCATALOG-530 HCatBaseLoader.getSizeInBytes NPE when partition path is missing\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/hcatalog/trunk@1411936 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "hcatalog"
    },
    {
        "commit": "https://github.com/apache/hcatalog/commit/df53d7c4b3000a23547ec34865a435153d310a62",
        "file": [
            {
                "patch": "@@ -76,6 +76,8 @@ Release 0.4.0 - Unreleased\n   OPTIMIZATIONS\n \n   BUG FIXES\n+  HCAT-286 NPE in HdfsAuthorizationProvider (enis via gates)\n+\n   HCAT-290 Changes in HBase maven objects breaks hcat build (gates)\n \n   HCAT-280 part file name prefix with attempxxxx (daijy via gates)",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/df53d7c4b3000a23547ec34865a435153d310a62/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "2eaf5bfa9b46e5d5dcb77af099cd923400b982ae",
                "blob_url": "https://github.com/apache/hcatalog/blob/df53d7c4b3000a23547ec34865a435153d310a62/CHANGES.txt",
                "filename": "CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/CHANGES.txt?ref=df53d7c4b3000a23547ec34865a435153d310a62"
            },
            {
                "patch": "@@ -143,7 +143,10 @@ public void authorize(Privilege[] readRequiredPriv, Privilege[] writeRequiredPri\n   @Override\n   public void authorize(Database db, Privilege[] readRequiredPriv, Privilege[] writeRequiredPriv)\n       throws HiveException, AuthorizationException {\n-   \n+    if (db == null) {\n+      return;\n+    }\n+\n     Path path = getDbLocation(db);\n     \n     authorize(path, readRequiredPriv, writeRequiredPriv);\n@@ -152,6 +155,9 @@ public void authorize(Database db, Privilege[] readRequiredPriv, Privilege[] wri\n   @Override\n   public void authorize(Table table, Privilege[] readRequiredPriv, Privilege[] writeRequiredPriv)\n       throws HiveException, AuthorizationException {\n+    if (table == null) {\n+      return;\n+    }\n     \n     //unlike Hive's model, this can be called at CREATE TABLE as well, since we should authorize \n     //against the table's declared location\n@@ -170,23 +176,32 @@ public void authorize(Table table, Privilege[] readRequiredPriv, Privilege[] wri\n     authorize(path, readRequiredPriv, writeRequiredPriv);\n   }\n \n-  @Override\n-  public void authorize(Partition part, Privilege[] readRequiredPriv, Privilege[] writeRequiredPriv)\n+  //TODO: HiveAuthorizationProvider should expose this interface instead of #authorize(Partition, Privilege[], Privilege[])\n+  public void authorize(Table table, Partition part, Privilege[] readRequiredPriv, Privilege[] writeRequiredPriv)\n       throws HiveException, AuthorizationException {\n     \n-    if (part.getLocation() == null) { \n-      authorize(part.getTable(), readRequiredPriv, writeRequiredPriv);\n+    if (part == null || part.getLocation() == null) {\n+      authorize(table, readRequiredPriv, writeRequiredPriv);\n     } else {\n       authorize(part.getPartitionPath(), readRequiredPriv, writeRequiredPriv);\n     }\n   }\n \n+  @Override\n+  public void authorize(Partition part, Privilege[] readRequiredPriv, Privilege[] writeRequiredPriv)\n+      throws HiveException, AuthorizationException {\n+    if (part == null) {\n+      return;\n+    }\n+    authorize(part.getTable(), part, readRequiredPriv, writeRequiredPriv);\n+  }\n+\n   @Override\n   public void authorize(Table table, Partition part, List<String> columns,\n       Privilege[] readRequiredPriv, Privilege[] writeRequiredPriv) throws HiveException,\n       AuthorizationException {\n     //columns cannot live in different files, just check for partition level permissions\n-    authorize(table, part, columns, readRequiredPriv, writeRequiredPriv);\n+    authorize(table, part, readRequiredPriv, writeRequiredPriv);\n   }\n   \n   /** ",
                "additions": 21,
                "raw_url": "https://github.com/apache/hcatalog/raw/df53d7c4b3000a23547ec34865a435153d310a62/src/java/org/apache/hcatalog/security/HdfsAuthorizationProvider.java",
                "status": "modified",
                "changes": 27,
                "deletions": 6,
                "sha": "86165f127070225ee55d66cb9b28f1452702ad4a",
                "blob_url": "https://github.com/apache/hcatalog/blob/df53d7c4b3000a23547ec34865a435153d310a62/src/java/org/apache/hcatalog/security/HdfsAuthorizationProvider.java",
                "filename": "src/java/org/apache/hcatalog/security/HdfsAuthorizationProvider.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/src/java/org/apache/hcatalog/security/HdfsAuthorizationProvider.java?ref=df53d7c4b3000a23547ec34865a435153d310a62"
            },
            {
                "patch": "@@ -129,6 +129,6 @@ public void authorize(Partition part, Privilege[] readRequiredPriv,\n   public void authorize(Table table, Partition part, List<String> columns,\n       Privilege[] readRequiredPriv, Privilege[] writeRequiredPriv) throws HiveException,\n       AuthorizationException {\n-    getDelegate(table).authorize(part, readRequiredPriv, writeRequiredPriv);\n+    getDelegate(table).authorize(table, part, columns, readRequiredPriv, writeRequiredPriv);\n   }\n }",
                "additions": 1,
                "raw_url": "https://github.com/apache/hcatalog/raw/df53d7c4b3000a23547ec34865a435153d310a62/src/java/org/apache/hcatalog/security/StorageDelegationAuthorizationProvider.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "796beffe8174c66994883b4f52ef6a298641fc84",
                "blob_url": "https://github.com/apache/hcatalog/blob/df53d7c4b3000a23547ec34865a435153d310a62/src/java/org/apache/hcatalog/security/StorageDelegationAuthorizationProvider.java",
                "filename": "src/java/org/apache/hcatalog/security/StorageDelegationAuthorizationProvider.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/src/java/org/apache/hcatalog/security/StorageDelegationAuthorizationProvider.java?ref=df53d7c4b3000a23547ec34865a435153d310a62"
            },
            {
                "patch": "@@ -174,16 +174,15 @@ drop database hcat_database_1;\\\n                                  'num' => 1\n                                 ,'hcat' => q\"\n drop table if exists hcat_view_1;\n-drop table if exists hcat_view_1_1;\n-drop table if exists hcat_view_1_2;\n+drop view if exists hcat_view_1_1;\n+drop view if exists hcat_view_1_2;\n create external table hcat_view_1 (name string, age int, gpa double) row format delimited fields terminated by '\\t' stored as TEXTFILE location '/user/hcat/tests/data/studenttab10k';\n create view hcat_view_1_1 as select name, gpa, age from studenttab10k;\n create view hcat_view_1_2 partitioned on (age) as select name, gpa, age from studenttab10k;\n alter view hcat_view_1_1 set tblproperties('key'='value');\n show tables;\n describe hcat_view_1_1;\n describe hcat_view_1_2;\n-alter view hcat_view_1_2 rename to hcat_view_1_3;\n drop view hcat_view_1_1;\n drop view hcat_view_1_3;\"\n                                 ,'rc'   => 0",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/df53d7c4b3000a23547ec34865a435153d310a62/src/test/e2e/hcatalog/tests/hcat.conf",
                "status": "modified",
                "changes": 5,
                "deletions": 3,
                "sha": "ee80c1fe33de4e7e1790db164bce78b7d90d946f",
                "blob_url": "https://github.com/apache/hcatalog/blob/df53d7c4b3000a23547ec34865a435153d310a62/src/test/e2e/hcatalog/tests/hcat.conf",
                "filename": "src/test/e2e/hcatalog/tests/hcat.conf",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/src/test/e2e/hcatalog/tests/hcat.conf?ref=df53d7c4b3000a23547ec34865a435153d310a62"
            }
        ],
        "bug_id": "hcatalog_3",
        "parent": "https://github.com/apache/hcatalog/commit/38eceed08a687f28d271a2af5daeb1b299d20c8c",
        "message": "HCATALOG-286 NPE in HdfsAuthorizationProvider\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/hcatalog/trunk@1297246 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "hcatalog"
    },
    {
        "commit": "https://github.com/apache/hcatalog/commit/1c26cfdbe2762c0c8729ffffc6dda01e5d025eee",
        "file": [
            {
                "patch": "@@ -307,7 +307,7 @@ public static Object extractPigObject(Object o, HCatFieldSchema hfs) throws Exce\n     Type itemType = hfs.getType();\n     switch (itemType){\n     case BINARY:\n-      result = new DataByteArray(((ByteArrayRef)o).getData());\n+      result = (o == null) ? null : new DataByteArray(((ByteArrayRef)o).getData());\n       break;\n     case STRUCT:\n       result = transformToTuple((List<Object>)o,hfs);",
                "additions": 1,
                "raw_url": "https://github.com/apache/hcatalog/raw/1c26cfdbe2762c0c8729ffffc6dda01e5d025eee/src/java/org/apache/hcatalog/pig/PigHCatUtil.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "3ef576324b8b2dd06155d3e84aa8b890e04e0cdd",
                "blob_url": "https://github.com/apache/hcatalog/blob/1c26cfdbe2762c0c8729ffffc6dda01e5d025eee/src/java/org/apache/hcatalog/pig/PigHCatUtil.java",
                "filename": "src/java/org/apache/hcatalog/pig/PigHCatUtil.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/src/java/org/apache/hcatalog/pig/PigHCatUtil.java?ref=1c26cfdbe2762c0c8729ffffc6dda01e5d025eee"
            },
            {
                "patch": "@@ -424,8 +424,8 @@ public void testBagNStruct() throws IOException, CommandNeedRetryException{\n   String[] inputData = new String[]{\"zookeeper\\t(2)\\t{(pig)}\\t{(pnuts,hdfs)}\\t{(hadoop),(hcat)}\",\n       \"chubby\\t(2)\\t{(sawzall)}\\t{(bigtable,gfs)}\\t{(mapreduce),(hcat)}\"};\n \n-    HcatTestUtils.createTestDataFile(INPUT_FILE_NAME, inputData);\n-    \n+  HcatTestUtils.createTestDataFile(INPUT_FILE_NAME, inputData);\n+\n   PigServer server = new PigServer(ExecType.LOCAL);\n   server.setBatchOn();\n   server.registerQuery(\"A = load '\"+INPUT_FILE_NAME+\"' as (b:chararray, a:tuple(a1:int), arr_of_struct:bag{mytup:tuple(s1:chararray)}, arr_of_struct2:bag{mytup:tuple(s1:chararray,s2:chararray)}, arr_of_struct3:bag{t3:tuple(s3:chararray)});\");\n@@ -447,22 +447,23 @@ public void testBagNStruct() throws IOException, CommandNeedRetryException{\n   public void testStoreFuncAllSimpleTypes() throws IOException, CommandNeedRetryException{\n \n     driver.run(\"drop table junit_unparted\");\n-    String createTable = \"create table junit_unparted(a int, b float, c double, d bigint, e string, f binary) stored as RCFILE\";\n+    String createTable = \"create table junit_unparted(a int, b float, c double, d bigint, e string, f binary, g binary) stored as RCFILE\";\n     int retCode = driver.run(createTable).getResponseCode();\n     if(retCode != 0) {\n       throw new IOException(\"Failed to create table.\");\n     }\n \n-    int LOOP_SIZE = 3;\n-    String[] input = new String[LOOP_SIZE*LOOP_SIZE];\n-    for(int i = 0; i < LOOP_SIZE*LOOP_SIZE; i++) {\n-      input[i] = i + \"\\t\" + i * 2.1f +\"\\t\"+ i*1.1d + \"\\t\" + i * 2L +\"\\t\"+\"lets hcat\"+\"\\tbinary-data\";\n-    }\n+    int i =0;\n+    String[] input = new String[3];\n+    input[i++]= \"0\\t\\t\\t\\t\\t\\t\"; //Empty values except first column\n+    input[i++]= \"\\t\" + i * 2.1f +\"\\t\"+ i*1.1d + \"\\t\" + i * 2L +\"\\t\"+\"lets hcat\"+\"\\tbinary-data\"; //First column empty\n+    input[i++]= i + \"\\t\" + i * 2.1f +\"\\t\"+ i*1.1d + \"\\t\" + i * 2L +\"\\t\"+\"lets hcat\"+\"\\tbinary-data\";\n \n     HcatTestUtils.createTestDataFile(INPUT_FILE_NAME, input);\n     PigServer server = new PigServer(ExecType.LOCAL);\n     server.setBatchOn();\n     server.registerQuery(\"A = load '\"+INPUT_FILE_NAME+\"' as (a:int, b:float, c:double, d:long, e:chararray, f:bytearray);\");\n+    //null gets stored into column g which is a binary field.\n     server.registerQuery(\"store A into 'default.junit_unparted' using \"+HCatStorer.class.getName()+\"('','a:int, b:float, c:double, d:long, e:chararray,f:bytearray');\");\n     server.executeBatch();\n \n@@ -472,23 +473,24 @@ public void testStoreFuncAllSimpleTypes() throws IOException, CommandNeedRetryEx\n     driver.getResults(res);\n \n     Iterator<String> itr = res.iterator();\n-    for(int i = 0; i < LOOP_SIZE*LOOP_SIZE; i++) {\n-      assertEquals( input[i] ,itr.next());\n-    }\n-\n+    assertEquals( \"0\\tNULL\\tNULL\\tNULL\\tNULL\\t\\tnull\" ,itr.next());\n+    assertEquals( \"NULL\\t4.2\\t2.2\\t4\\tlets hcat\\tbinary-data\\tnull\" ,itr.next());\n+    assertEquals( \"3\\t6.2999997\\t3.3000000000000003\\t6\\tlets hcat\\tbinary-data\\tnull\",itr.next());\n     assertFalse(itr.hasNext());\n+\n     server.registerQuery(\"B = load 'junit_unparted' using \"+HCatLoader.class.getName()+\";\");\n-    Iterator<Tuple> i = server.openIterator(\"B\");\n+    Iterator<Tuple> iter = server.openIterator(\"B\");\n     int count = 0;\n-    while(i.hasNext()){\n-    \tObject o = i.next().get(5);\n-    \tassertTrue(o instanceof DataByteArray);\n-    \tcount++;\n+    while(iter.hasNext()){\n+        Tuple t = iter.next();\n+        assertTrue(t.get(5) instanceof DataByteArray);\n+        assertNull(t.get(6));\n+        count++;\n     }\n-    assertEquals(LOOP_SIZE  * LOOP_SIZE, count);\n+    assertEquals(3, count);\n     driver.run(\"drop table junit_unparted\");\n   }\n-  \n+\n   @Override\n   protected void tearDown() throws Exception {\n     super.tearDown();\n@@ -536,7 +538,7 @@ public void testStoreFuncSimple() throws IOException, CommandNeedRetryException{\n    assertFalse(itr.hasNext());\n \n   }\n-  \n+\n \n   public void testDynamicPartitioningMultiPartColsInDataPartialSpec() throws IOException, CommandNeedRetryException{\n ",
                "additions": 22,
                "raw_url": "https://github.com/apache/hcatalog/raw/1c26cfdbe2762c0c8729ffffc6dda01e5d025eee/src/test/org/apache/hcatalog/pig/TestHCatStorer.java",
                "status": "modified",
                "changes": 42,
                "deletions": 20,
                "sha": "5ecfc9ff8b27396a9488e4bfd87d224ada5fc6cc",
                "blob_url": "https://github.com/apache/hcatalog/blob/1c26cfdbe2762c0c8729ffffc6dda01e5d025eee/src/test/org/apache/hcatalog/pig/TestHCatStorer.java",
                "filename": "src/test/org/apache/hcatalog/pig/TestHCatStorer.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/src/test/org/apache/hcatalog/pig/TestHCatStorer.java?ref=1c26cfdbe2762c0c8729ffffc6dda01e5d025eee"
            }
        ],
        "bug_id": "hcatalog_4",
        "parent": "https://github.com/apache/hcatalog/commit/235397a62dbf9a8519312ffd3e893f4a763faee7",
        "message": "HCAT-382:NPE in pig when a binary field is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/hcatalog/trunk@1331178 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "hcatalog"
    },
    {
        "commit": "https://github.com/apache/hcatalog/commit/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81",
        "file": [
            {
                "patch": "@@ -111,6 +111,8 @@ Trunk (unreleased changes)\n   OPTIMIZATIONS\n \n   BUG FIXES\n+  HCAT-227. NPE on HBaseInputStorageDriver when table contains a CF that's never been successfully written to (toffer via hashutosh)\n+\n   HCAT-224. hcatalog e2e tests have the hive version hard coded we should read that from the hive build.properties (Arpit Gupta via hashutosh)\n \n   HCAT-225. Fix trunk compile issue, method signature change in thrift client. (hashutosh via toffer)",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "8eb8f09c732a61779e667155368b31633de240ea",
                "blob_url": "https://github.com/apache/hcatalog/blob/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/CHANGES.txt",
                "filename": "CHANGES.txt",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/CHANGES.txt?ref=32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81"
            },
            {
                "patch": "@@ -221,7 +221,7 @@ static HCatTableSnapshot convertSnapshot(TableSnapshot hbaseSnapshot,\n         }\n \n         HCatTableSnapshot hcatSnapshot = new HCatTableSnapshot(\n-                 hcatTableInfo.getDatabaseName(), hcatTableInfo.getTableName(),revisionMap);\n+                 hcatTableInfo.getDatabaseName(), hcatTableInfo.getTableName(),revisionMap,hbaseSnapshot.getLatestRevision());\n         return hcatSnapshot;\n     }\n \n@@ -241,7 +241,7 @@ static TableSnapshot convertSnapshot(HCatTableSnapshot hcatSnapshot,\n \n         String fullyQualifiedName = hcatSnapshot.getDatabaseName() + \".\"\n                 + hcatSnapshot.getTableName();\n-        return new TableSnapshot(fullyQualifiedName, revisionMap);\n+        return new TableSnapshot(fullyQualifiedName, revisionMap,hcatSnapshot.getLatestRevision());\n \n     }\n ",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HBaseInputStorageDriver.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "bd991e086e8e60bcd21caccc12aabe1747a830aa",
                "blob_url": "https://github.com/apache/hcatalog/blob/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HBaseInputStorageDriver.java",
                "filename": "storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HBaseInputStorageDriver.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HBaseInputStorageDriver.java?ref=32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81"
            },
            {
                "patch": "@@ -33,11 +33,13 @@\n     private String tableName;\n     private String databaseName;\n     private Map<String, Long> columnMap;\n+    private long latestRevision;\n \n-    HCatTableSnapshot(String databaseName, String tableName, Map<String, Long> columnMap) {\n+    HCatTableSnapshot(String databaseName, String tableName, Map<String, Long> columnMap, long latestRevision) {\n         this.tableName = tableName;\n         this.databaseName = databaseName;\n         this.columnMap = columnMap;\n+        this.latestRevision = latestRevision;\n     }\n \n     /**\n@@ -58,7 +60,9 @@ public String getDatabaseName(){\n      * @return The revision number of a column in a snapshot.\n      */\n     long getRevision(String column){\n-        return this.columnMap.get(column);\n+        if(columnMap.containsKey(column))\n+            return this.columnMap.get(column);\n+        return latestRevision;\n     }\n \n     /**\n@@ -71,10 +75,17 @@ boolean containsColumn(String column){\n         return this.columnMap.containsKey(column);\n     }\n \n+    /**\n+     * @return latest committed revision when snapshot was taken\n+     */\n+    long getLatestRevision() {\n+        return latestRevision;\n+    }\n+\n     @Override\n     public String toString() {\n         String snapshot = \" Database Name: \" + this.databaseName +\" Table Name : \" + tableName +\n-                 \" Column revision : \" + columnMap.toString();\n+                 \"Latest Revision: \"+latestRevision+\" Column revision : \" + columnMap.toString();\n         return snapshot;\n     }\n }",
                "additions": 14,
                "raw_url": "https://github.com/apache/hcatalog/raw/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HCatTableSnapshot.java",
                "status": "modified",
                "changes": 17,
                "deletions": 3,
                "sha": "b34dd7d838d9f0f798ad4d058cfa87d642f8bdca",
                "blob_url": "https://github.com/apache/hcatalog/blob/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HCatTableSnapshot.java",
                "filename": "storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HCatTableSnapshot.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/HCatTableSnapshot.java?ref=32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81"
            },
            {
                "patch": "@@ -30,10 +30,13 @@\n \n     private Map<String, Long> cfRevisionMap;\n \n+    private long latestRevision;\n \n-    public TableSnapshot(String name, Map<String, Long> cfRevMap) {\n+\n+    public TableSnapshot(String name, Map<String, Long> cfRevMap, long latestRevision) {\n         this.name = name;\n         this.cfRevisionMap = cfRevMap;\n+        this.latestRevision = latestRevision;\n     }\n \n     /**\n@@ -61,12 +64,21 @@ public String getTableName() {\n      * @return the revision\n      */\n     public long getRevision(String familyName){\n-        return this.cfRevisionMap.get(familyName);\n+        if(cfRevisionMap.containsKey(familyName))\n+            return cfRevisionMap.get(familyName);\n+        return latestRevision;\n+    }\n+\n+    /**\n+     * @return the latest committed revision when this snapshot was taken\n+     */\n+    public long getLatestRevision() {\n+        return latestRevision;\n     }\n \n     @Override\n     public String toString() {\n-        String snapshot = \"Table Name : \" + name\n+        String snapshot = \"Table Name : \" + name +\" Latest Revision: \" + latestRevision\n                 + \" Column Familiy revision : \" + cfRevisionMap.toString();\n         return snapshot;\n     }",
                "additions": 15,
                "raw_url": "https://github.com/apache/hcatalog/raw/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/TableSnapshot.java",
                "status": "modified",
                "changes": 18,
                "deletions": 3,
                "sha": "6048f2d14c8d67ed2d4a1f1e763a7961081f9326",
                "blob_url": "https://github.com/apache/hcatalog/blob/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/TableSnapshot.java",
                "filename": "storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/TableSnapshot.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/TableSnapshot.java?ref=32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81"
            },
            {
                "patch": "@@ -320,7 +320,9 @@ public TableSnapshot createSnapshot(String tableName) throws IOException{\n             cfMap.put(cfName, version);\n         }\n \n-        return new TableSnapshot(tableName, cfMap);\n+        TableSnapshot snapshot = new TableSnapshot(tableName, cfMap,latestID);\n+        LOG.debug(\"Created snapshot For table: \"+tableName+\" snapshot: \"+snapshot);\n+        return snapshot;\n     }\n \n     /* This method allows the user to create snapshot of a\n@@ -346,7 +348,7 @@ public TableSnapshot createSnapshot(String tableName, long revision) throws IOEx\n             cfMap.put(cf, revision);\n         }\n \n-        return new TableSnapshot(tableName, cfMap);\n+        return new TableSnapshot(tableName, cfMap, revision);\n     }\n \n     /**",
                "additions": 4,
                "raw_url": "https://github.com/apache/hcatalog/raw/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/ZKBasedRevisionManager.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "c54eab1d0a6f056069c560e8e0e7a2154cb3719c",
                "blob_url": "https://github.com/apache/hcatalog/blob/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/ZKBasedRevisionManager.java",
                "filename": "storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/ZKBasedRevisionManager.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/storage-drivers/hbase/src/java/org/apache/hcatalog/hbase/snapshot/ZKBasedRevisionManager.java?ref=32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81"
            },
            {
                "patch": "@@ -81,7 +81,7 @@ public void TestSnapshotConversion() throws Exception{\n         Map<String, Long> revMap = new HashMap<String, Long>();\n         revMap.put(\"cf1\", 3L);\n         revMap.put(\"cf2\", 5L);\n-        TableSnapshot hbaseSnapshot = new TableSnapshot(fullyQualTableName, revMap);\n+        TableSnapshot hbaseSnapshot = new TableSnapshot(fullyQualTableName, revMap,-1);\n         HCatTableSnapshot hcatSnapshot = HBaseInputStorageDriver.convertSnapshot(hbaseSnapshot, inputInfo.getTableInfo());\n \n         assertEquals(hcatSnapshot.getRevision(\"value1\"), 3);\n@@ -101,7 +101,7 @@ public void TestSnapshotConversion() throws Exception{\n         assertEquals(0, cmdResponse.getResponseCode());\n         revMap.clear();\n         revMap.put(\"cf1\", 3L);\n-        hbaseSnapshot = new TableSnapshot(fullyQualTableName, revMap);\n+        hbaseSnapshot = new TableSnapshot(fullyQualTableName, revMap, -1);\n         inputInfo = InputJobInfo.create(databaseName, tableName, null, null, null);\n         InitializeInput.setInput(job, inputInfo);\n         modifiedInputInfo = job.getConfiguration().get(HCatConstants.HCAT_KEY_JOB_INFO);",
                "additions": 2,
                "raw_url": "https://github.com/apache/hcatalog/raw/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/test/org/apache/hcatalog/hbase/TestSnapshots.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "f5876fd3d37dad691243674bfbd8db39b95885db",
                "blob_url": "https://github.com/apache/hcatalog/blob/32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81/storage-drivers/hbase/src/test/org/apache/hcatalog/hbase/TestSnapshots.java",
                "filename": "storage-drivers/hbase/src/test/org/apache/hcatalog/hbase/TestSnapshots.java",
                "contents_url": "https://api.github.com/repos/apache/hcatalog/contents/storage-drivers/hbase/src/test/org/apache/hcatalog/hbase/TestSnapshots.java?ref=32ddfcfd9cb7d2be520f9e121e7236ca3f9e8b81"
            }
        ],
        "bug_id": "hcatalog_5",
        "parent": "https://github.com/apache/hcatalog/commit/e4760fdc8210296737c27d705329acf8ac010fe9",
        "message": "HCATALOG-227 : NPE on HBaseInputStorageDriver when table contains a CF that's never been successfully written to (toffer via hashutosh)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/hcatalog/trunk@1235129 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "hcatalog"
    }
]