{
    "sling-org-apache-sling-commons-threads_830c606": {
        "bug_id": "sling-org-apache-sling-commons-threads_830c606",
        "commit": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/830c606b753def2b78f2ac9f9f334e3182068455",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java?ref=830c606b753def2b78f2ac9f9f334e3182068455",
                "deletions": 1,
                "filename": "src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java",
                "patch": "@@ -169,7 +169,8 @@ public DefaultThreadPool(final String name,\n     private static class LoggingThreadLocalChangeListener implements ThreadLocalChangeListener {\n         @Override\n         public void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object value) {\n-            LOGGER.debug(\"Thread '{}' {} ThreadLocal {} with value {}\", thread, mode, threadLocal.getClass(), value);\n+            LOGGER.debug(\"Thread '{}' {} ThreadLocal {} with value {}\", thread, mode, \n+                    threadLocal != null ? threadLocal.getClass() : \"<null>\", value);\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java",
                "sha": "604092addd856c8da1cad2ea8490de9cb70d5d98",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java?ref=830c606b753def2b78f2ac9f9f334e3182068455",
                "deletions": 0,
                "filename": "src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java",
                "patch": "@@ -28,6 +28,16 @@\n \n     Logger LOGGER = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n \n+    /**\n+     * Invoked when the cleaner detects that a thread-local value was added of removed \n+     * after an execution has completed\n+     * \n+     * @param the mode\n+     * @param the thread\n+     * @param the thread local, possibly null\n+     * @param the value, possibly null\n+     */\n+    \n     void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object value);\n \n     enum Mode {",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/830c606b753def2b78f2ac9f9f334e3182068455/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java",
                "sha": "27954f2087cbd44bb60aeadf002c16bcfdf61ad2",
                "status": "modified"
            }
        ],
        "message": "SLING-7526 - NPE in DefaultThreadPool$LoggingThreadLocalChangeListener.changed\n\nEnsure that we tolerate null values in the\nLoggingThreadLocalChangeListener",
        "parent": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/0198f335bbeab2e88df3219760a430f6427c22a4",
        "patched_files": [
            "DefaultThreadPool.java"
        ],
        "repo": "sling-org-apache-sling-commons-threads",
        "unit_tests": [
            "DefaultThreadPoolTest.java"
        ]
    },
    "sling-org-apache-sling-commons-threads_90e02d0": {
        "bug_id": "sling-org-apache-sling-commons-threads_90e02d0",
        "commit": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/90e02d020644ef1a2b5852171a59c6cbe84f5857",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857",
                "deletions": 0,
                "filename": "src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java",
                "patch": "@@ -172,6 +172,11 @@ public void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object\n             LOGGER.debug(\"Thread '{}' {} ThreadLocal {} with value {}\", thread, mode, \n                     threadLocal != null ? threadLocal.getClass() : \"<null>\", value);\n         }\n+        \n+        @Override\n+        public boolean isEnabled() {\n+            return LOGGER.isDebugEnabled();\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/DefaultThreadPool.java",
                "sha": "e60cf9706506998888217cb6237c4c941812e856",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857",
                "deletions": 0,
                "filename": "src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java",
                "patch": "@@ -39,6 +39,8 @@\n      */\n     \n     void changed(Mode mode, Thread thread, ThreadLocal<?> threadLocal, Object value);\n+    \n+    boolean isEnabled();\n \n     enum Mode {\n         ADDED, REMOVED",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalChangeListener.java",
                "sha": "72237dadbf4c7fc3c4f8f97ccc1e2e0e06b06fc3",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857",
                "deletions": 2,
                "filename": "src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java",
                "patch": "@@ -145,8 +145,10 @@ public ThreadLocalCleaner(ThreadLocalChangeListener listener) {\n \n     public void cleanup() {\n         // the first two diff calls are only to notify the listener, the actual cleanup is done by restoreOldThreadLocals\n-        diff(threadLocalsField, threadLocalsCopy.references);\n-        diff(inheritableThreadLocalsField, inheritableThreadLocalsCopy.references);\n+        if ( listener.isEnabled() ) {\n+            diff(threadLocalsField, threadLocalsCopy.references);\n+            diff(inheritableThreadLocalsField, inheritableThreadLocalsCopy.references);\n+        }\n         restoreOldThreadLocals();\n     }\n ",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/main/java/org/apache/sling/commons/threads/impl/ThreadLocalCleaner.java",
                "sha": "5db69eca1f7f764d1b2859547273205b25df9422",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/blob/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/sling-org-apache-sling-commons-threads/contents/src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java?ref=90e02d020644ef1a2b5852171a59c6cbe84f5857",
                "deletions": 0,
                "filename": "src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java",
                "patch": "@@ -54,6 +54,7 @@ public void setUp() {\n         pool = new ThreadPoolExecutorCleaningThreadLocals(\n                     1, 1, 100, TimeUnit.MILLISECONDS,\n                     queue, Executors.defaultThreadFactory(), rejectionHandler, listener);\n+        Mockito.when(listener.isEnabled()).thenReturn(true);\n     }\n     \n     @Test(timeout = 10000)",
                "raw_url": "https://github.com/apache/sling-org-apache-sling-commons-threads/raw/90e02d020644ef1a2b5852171a59c6cbe84f5857/src/test/java/org/apache/sling/commons/threads/impl/ThreadPoolExecutorCleaningThreadLocalsTest.java",
                "sha": "8ceff1f0a1525d569fe4964dba9c360e35c24233",
                "status": "modified"
            }
        ],
        "message": "SLING-7526 - NPE in DefaultThreadPool$LoggingThreadLocalChangeListener.changed\n\nOnly generate the (relatively expensive) ThreadLocal diff events if the\nlistener is actually enabled.",
        "parent": "https://github.com/apache/sling-org-apache-sling-commons-threads/commit/830c606b753def2b78f2ac9f9f334e3182068455",
        "patched_files": [
            "ThreadLocalChangeListener.java",
            "ThreadLocalCleaner.java",
            "DefaultThreadPool.java",
            "ThreadPoolExecutorCleaningThreadLocals.java"
        ],
        "repo": "sling-org-apache-sling-commons-threads",
        "unit_tests": [
            "DefaultThreadPoolTest.java",
            "ThreadPoolExecutorCleaningThreadLocalsTest.java"
        ]
    }
}