{
    "directory-studio_465f4c0": {
        "bug_id": "directory-studio_465f4c0",
        "commit": "https://github.com/apache/directory-studio/commit/465f4c01b4b7f29f7346e49c9dee3acbd1a98369",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/465f4c01b4b7f29f7346e49c9dee3acbd1a98369/ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryDnWizardPage.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryDnWizardPage.java?ref=465f4c01b4b7f29f7346e49c9dee3acbd1a98369",
                "deletions": 1,
                "filename": "ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryDnWizardPage.java",
                "patch": "@@ -184,7 +184,7 @@ private void loadState()\n             String[] attributeNames = subschema.getAllAttributeNames();\n \n             LdapDN parentDn = null;\n-            if ( newEntry.getDn().equals( wizard.getSelectedEntry().getDn() )\n+            if ( wizard.getSelectedEntry() != null && newEntry.getDn().equals( wizard.getSelectedEntry().getDn() )\n                 && DnUtils.getParent( newEntry.getDn() ) != null )\n             {\n                 parentDn = DnUtils.getParent( newEntry.getDn() );",
                "raw_url": "https://github.com/apache/directory-studio/raw/465f4c01b4b7f29f7346e49c9dee3acbd1a98369/ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryDnWizardPage.java",
                "sha": "b0955bdb5a3922fad30a1901f038f25fd46c099a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/465f4c01b4b7f29f7346e49c9dee3acbd1a98369/ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryWizard.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryWizard.java?ref=465f4c01b4b7f29f7346e49c9dee3acbd1a98369",
                "deletions": 1,
                "filename": "ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryWizard.java",
                "patch": "@@ -352,7 +352,7 @@ public boolean performFinish()\n     /**\n      * Gets the selected entry.\n      * \n-     * @return the selected entry\n+     * @return the selected entry, may be null\n      */\n     public IEntry getSelectedEntry()\n     {",
                "raw_url": "https://github.com/apache/directory-studio/raw/465f4c01b4b7f29f7346e49c9dee3acbd1a98369/ldapbrowser-common/src/main/java/org/apache/directory/studio/ldapbrowser/common/wizards/NewEntryWizard.java",
                "sha": "41c348ecdf33d0319bb308e0c18622a264708ee9",
                "status": "modified"
            }
        ],
        "message": "Fixed a NullPointerException when no entry was selected\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/trunk@753020 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/1479e900950d3598c0cd96571ae23d36005e5956",
        "patched_files": [
            "NewEntryWizard.java"
        ],
        "repo": "directory-studio",
        "unit_tests": [
            "NewEntryWizardTest.java"
        ]
    },
    "directory-studio_4d553dd": {
        "bug_id": "directory-studio_4d553dd",
        "commit": "https://github.com/apache/directory-studio/commit/4d553dd301f36cfe7a0fb15bb76e342bf12f171f",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-studio/blob/4d553dd301f36cfe7a0fb15bb76e342bf12f171f/plugins/connection.core/src/main/java/org/apache/directory/studio/connection/core/io/api/DirectoryApiConnectionWrapper.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/connection.core/src/main/java/org/apache/directory/studio/connection/core/io/api/DirectoryApiConnectionWrapper.java?ref=4d553dd301f36cfe7a0fb15bb76e342bf12f171f",
                "deletions": 2,
                "filename": "plugins/connection.core/src/main/java/org/apache/directory/studio/connection/core/io/api/DirectoryApiConnectionWrapper.java",
                "patch": "@@ -448,7 +448,10 @@ public void run()\n                     request.setBase( new Dn( searchBase ) );\n                     request.setFilter( filter );\n                     request.setScope( convertSearchScope( searchControls ) );\n-                    request.addAttributes( searchControls.getReturningAttributes() );\n+                    if ( searchControls.getReturningAttributes() != null )\n+                    {\n+                        request.addAttributes( searchControls.getReturningAttributes() );\n+                    }\n                     request.addAllControls( convertControls( controls ) );\n                     request.setSizeLimit( searchControls.getCountLimit() );\n                     request.setTimeLimit( searchControls.getTimeLimit() );\n@@ -700,7 +703,7 @@ public void run()\n             for ( ModificationItem modificationItem : modificationItems )\n             {\n                 Modification modification = new DefaultModification();\n-                \n+\n                 try\n                 {\n                     modification.setAttribute( AttributeUtils.toClientAttribute( modificationItem.getAttribute() ) );",
                "raw_url": "https://github.com/apache/directory-studio/raw/4d553dd301f36cfe7a0fb15bb76e342bf12f171f/plugins/connection.core/src/main/java/org/apache/directory/studio/connection/core/io/api/DirectoryApiConnectionWrapper.java",
                "sha": "d78d03d35a98f27a22b3300121b16c5756b778c6",
                "status": "modified"
            }
        ],
        "message": "Fixed an NPE in case where the returning attributes is a 'null' object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/trunk@1087325 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/24926532444abfcf6bf54e57d5d754c43e19ec4b",
        "patched_files": [
            "DirectoryApiConnectionWrapper.java"
        ],
        "repo": "directory-studio",
        "unit_tests": [
            "DirectoryApiConnectionWrapperTest.java"
        ]
    },
    "directory-studio_58920d4": {
        "bug_id": "directory-studio_58920d4",
        "commit": "https://github.com/apache/directory-studio/commit/58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/AttributeDescription.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/AttributeDescription.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 2,
                "filename": "plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/AttributeDescription.java",
                "patch": "@@ -267,15 +267,15 @@ public boolean isSubtypeOf( AttributeDescription other, Schema schema )\n         if ( myAtd != otherAtd )\n         {\n             AttributeType superiorAtd = null;\n-            String superiorName = myAtd.getSuperiorName();\n+            String superiorName = myAtd.getSuperiorOid();\n             while ( superiorName != null )\n             {\n                 superiorAtd = schema.getAttributeTypeDescription( superiorName );\n                 if ( superiorAtd == otherAtd )\n                 {\n                     break;\n                 }\n-                superiorName = superiorAtd.getSuperiorName();\n+                superiorName = superiorAtd.getSuperiorOid();\n             }\n             if ( superiorAtd != otherAtd )\n             {",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/AttributeDescription.java",
                "sha": "a867d4eda2459f737e3e979ecd570cf3d8ddafec",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/Schema.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/Schema.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 8,
                "filename": "plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/Schema.java",
                "patch": "@@ -320,9 +320,9 @@ else if ( attributeName.equalsIgnoreCase( SchemaConstants.MODIFY_TIMESTAMP_AT )\n             }\n \n             // assume all received matching rules in attributes are valid -> create pseudo matching rules if missing\n-            String emr = atd.getEqualityName();\n-            String omr = atd.getOrderingName();\n-            String smr = atd.getSubstringName();\n+            String emr = atd.getEqualityOid();\n+            String omr = atd.getOrderingOid();\n+            String smr = atd.getSubstringOid();\n             checkMatchingRules( emr, omr, smr );\n         }\n \n@@ -484,7 +484,12 @@ private void addObjectClass( ObjectClass ocd )\n      */\n     public boolean hasObjectClassDescription( String nameOrOid )\n     {\n-        return ocdMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        if ( nameOrOid != null )\n+        {\n+            return ocdMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        }\n+\n+        return false;\n     }\n \n \n@@ -565,7 +570,12 @@ private void addAttributeType( AttributeType atd )\n      */\n     public boolean hasAttributeTypeDescription( String nameOrOid )\n     {\n-        return atdMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        if ( nameOrOid != null )\n+        {\n+            return atdMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        }\n+\n+        return false;\n     }\n \n \n@@ -643,7 +653,12 @@ private void addLdapSyntax( LdapSyntax lsd )\n      */\n     public boolean hasLdapSyntaxDescription( String numericOid )\n     {\n-        return lsdMapByNumericOid.containsKey( numericOid.toLowerCase() );\n+        if ( numericOid != null )\n+        {\n+            return lsdMapByNumericOid.containsKey( numericOid.toLowerCase() );\n+        }\n+\n+        return false;\n     }\n \n \n@@ -724,7 +739,12 @@ private void addMatchingRule( MatchingRule mrd )\n      */\n     public boolean hasMatchingRuleDescription( String nameOrOid )\n     {\n-        return mrdMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        if ( nameOrOid != null )\n+        {\n+            return mrdMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        }\n+\n+        return false;\n     }\n \n \n@@ -803,7 +823,12 @@ private void addMatchingRuleUse( MatchingRuleUse mrud )\n      */\n     public boolean hasMatchingRuleUseDescription( String nameOrOid )\n     {\n-        return mrudMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        if ( nameOrOid != null )\n+        {\n+            return mrudMapByNameOrNumericOid.containsKey( nameOrOid.toLowerCase() );\n+        }\n+\n+        return false;\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/Schema.java",
                "sha": "4029e27adb85c69c35e06a87723598ea3d2e9a6e",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/SchemaUtils.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/SchemaUtils.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 17,
                "filename": "plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/SchemaUtils.java",
                "patch": "@@ -576,14 +576,14 @@ public static boolean isBinary( AttributeType atd, Schema schema )\n      */\n     public static String getEqualityMatchingRuleNameOrNumericOidTransitive( AttributeType atd, Schema schema )\n     {\n-        if ( atd.getEqualityName() != null )\n+        if ( atd.getEqualityOid() != null )\n         {\n-            return atd.getEqualityName();\n+            return atd.getEqualityOid();\n         }\n \n-        if ( atd.getSuperiorName() != null && schema.hasAttributeTypeDescription( atd.getSuperiorName() ) )\n+        if ( atd.getSuperiorOid() != null && schema.hasAttributeTypeDescription( atd.getSuperiorOid() ) )\n         {\n-            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorName() );\n+            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorOid() );\n             return getEqualityMatchingRuleNameOrNumericOidTransitive( superior, schema );\n         }\n \n@@ -603,14 +603,14 @@ public static String getEqualityMatchingRuleNameOrNumericOidTransitive( Attribut\n      */\n     public static String getSubstringMatchingRuleNameOrNumericOidTransitive( AttributeType atd, Schema schema )\n     {\n-        if ( atd.getSubstringName() != null )\n+        if ( atd.getSubstringOid() != null )\n         {\n-            return atd.getSubstringName();\n+            return atd.getSubstringOid();\n         }\n \n-        if ( atd.getSuperiorName() != null && schema.hasAttributeTypeDescription( atd.getSubstringName() ) )\n+        if ( atd.getSuperiorOid() != null && schema.hasAttributeTypeDescription( atd.getSubstringOid() ) )\n         {\n-            AttributeType superior = schema.getAttributeTypeDescription( atd.getSubstringName() );\n+            AttributeType superior = schema.getAttributeTypeDescription( atd.getSubstringOid() );\n             return getSubstringMatchingRuleNameOrNumericOidTransitive( superior, schema );\n         }\n \n@@ -630,14 +630,14 @@ public static String getSubstringMatchingRuleNameOrNumericOidTransitive( Attribu\n      */\n     public static String getOrderingMatchingRuleNameOrNumericOidTransitive( AttributeType atd, Schema schema )\n     {\n-        if ( atd.getOrderingName() != null )\n+        if ( atd.getOrderingOid() != null )\n         {\n-            return atd.getOrderingName();\n+            return atd.getOrderingOid();\n         }\n \n-        if ( atd.getSuperiorName() != null && schema.hasAttributeTypeDescription( atd.getSuperiorName() ) )\n+        if ( atd.getSuperiorOid() != null && schema.hasAttributeTypeDescription( atd.getSuperiorOid() ) )\n         {\n-            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorName() );\n+            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorOid() );\n             return getOrderingMatchingRuleNameOrNumericOidTransitive( superior, schema );\n         }\n \n@@ -662,9 +662,9 @@ public static String getSyntaxNumericOidTransitive( AttributeType atd, Schema sc\n             return atd.getSyntaxName();\n         }\n \n-        if ( atd.getSuperiorName() != null && schema.hasAttributeTypeDescription( atd.getSuperiorName() ) )\n+        if ( atd.getSuperiorOid() != null && schema.hasAttributeTypeDescription( atd.getSuperiorOid() ) )\n         {\n-            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorName() );\n+            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorOid() );\n             return getSyntaxNumericOidTransitive( superior, schema );\n         }\n \n@@ -689,9 +689,9 @@ public static long getSyntaxLengthTransitive( AttributeType atd, Schema schema )\n             return atd.getSyntaxLength();\n         }\n \n-        if ( atd.getSuperiorName() != null && schema.hasAttributeTypeDescription( atd.getSuperiorName() ) )\n+        if ( atd.getSuperiorOid() != null && schema.hasAttributeTypeDescription( atd.getSuperiorOid() ) )\n         {\n-            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorName() );\n+            AttributeType superior = schema.getAttributeTypeDescription( atd.getSuperiorOid() );\n             return getSyntaxLengthTransitive( superior, schema );\n         }\n \n@@ -742,7 +742,7 @@ public static long getSyntaxLengthTransitive( AttributeType atd, Schema schema )\n         Set<AttributeType> derivedAtds = new TreeSet<AttributeType>( schemaElementNameComparator );\n         for ( AttributeType derivedAtd : schema.getAttributeTypeDescriptions() )\n         {\n-            String superType = derivedAtd.getSuperiorName();\n+            String superType = derivedAtd.getSuperiorOid();\n             if ( superType != null && getLowerCaseIdentifiers( atd ).contains( superType.toLowerCase() ) )\n             {\n                 derivedAtds.add( derivedAtd );",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.core/src/main/java/org/apache/directory/studio/ldapbrowser/core/model/schema/SchemaUtils.java",
                "sha": "f1fa1522576bbdbaa75908aa0a07fcfdcfbd3e6a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.ui/src/main/java/org/apache/directory/studio/ldapbrowser/ui/editors/schemabrowser/AttributeTypeDescriptionDetailsPage.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/ldapbrowser.ui/src/main/java/org/apache/directory/studio/ldapbrowser/ui/editors/schemabrowser/AttributeTypeDescriptionDetailsPage.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/ldapbrowser.ui/src/main/java/org/apache/directory/studio/ldapbrowser/ui/editors/schemabrowser/AttributeTypeDescriptionDetailsPage.java",
                "patch": "@@ -592,7 +592,7 @@ private void createSupertypeContent( AttributeType atd )\n         // or a dash if no supertype exists.\n         if ( atd != null )\n         {\n-            String superType = atd.getSuperiorName();\n+            String superType = atd.getSuperiorOid();\n             if ( superType != null )\n             {\n                 supertypeSection.setText( NLS.bind( Messages",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/ldapbrowser.ui/src/main/java/org/apache/directory/studio/ldapbrowser/ui/editors/schemabrowser/AttributeTypeDescriptionDetailsPage.java",
                "sha": "6999875ce1b8805943fa5466fb0dbf00f9f95ee4",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/AttributeTypeImpl.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/AttributeTypeImpl.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 16,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/AttributeTypeImpl.java",
                "patch": "@@ -121,17 +121,17 @@ else if ( ( getDescription() != null ) && ( at.getDescription() != null ) )\n             }\n \n             // Superior\n-            if ( ( getSuperiorName() == null ) && ( at.getSuperiorName() != null ) )\n+            if ( ( getSuperiorOid() == null ) && ( at.getSuperiorOid() != null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getSuperiorName() != null ) && ( at.getSuperiorName() == null ) )\n+            else if ( ( getSuperiorOid() != null ) && ( at.getSuperiorOid() == null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getSuperiorName() != null ) && ( at.getSuperiorName() != null ) )\n+            else if ( ( getSuperiorOid() != null ) && ( at.getSuperiorOid() != null ) )\n             {\n-                if ( !getSuperiorName().equals( at.getSuperiorName() ) )\n+                if ( !getSuperiorOid().equals( at.getSuperiorOid() ) )\n                 {\n                     return false;\n                 }\n@@ -202,51 +202,51 @@ else if ( ( getSyntaxOid() != null ) && ( at.getSyntaxOid() != null ) )\n             }\n \n             // Equality matching rule\n-            if ( ( getEqualityName() == null ) && ( at.getEqualityName() != null ) )\n+            if ( ( getEqualityOid() == null ) && ( at.getEqualityOid() != null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getEqualityName() != null ) && ( at.getEqualityName() == null ) )\n+            else if ( ( getEqualityOid() != null ) && ( at.getEqualityOid() == null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getEqualityName() != null ) && ( at.getEqualityName() != null ) )\n+            else if ( ( getEqualityOid() != null ) && ( at.getEqualityOid() != null ) )\n             {\n-                if ( !getEqualityName().equals( at.getEqualityName() ) )\n+                if ( !getEqualityOid().equals( at.getEqualityOid() ) )\n                 {\n                     return false;\n                 }\n             }\n \n             // Ordering matching rule\n-            if ( ( getOrderingName() == null ) && ( at.getOrderingName() != null ) )\n+            if ( ( getOrderingOid() == null ) && ( at.getOrderingOid() != null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getOrderingName() != null ) && ( at.getOrderingName() == null ) )\n+            else if ( ( getOrderingOid() != null ) && ( at.getOrderingOid() == null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getOrderingName() != null ) && ( at.getOrderingName() != null ) )\n+            else if ( ( getOrderingOid() != null ) && ( at.getOrderingOid() != null ) )\n             {\n-                if ( !getOrderingName().equals( at.getOrderingName() ) )\n+                if ( !getOrderingOid().equals( at.getOrderingOid() ) )\n                 {\n                     return false;\n                 }\n             }\n \n             // Substring matching rule\n-            if ( ( getSubstringName() == null ) && ( at.getSubstringName() != null ) )\n+            if ( ( getSubstringOid() == null ) && ( at.getSubstringOid() != null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getSubstringName() != null ) && ( at.getSubstringName() == null ) )\n+            else if ( ( getSubstringOid() != null ) && ( at.getSubstringOid() == null ) )\n             {\n                 return false;\n             }\n-            else if ( ( getSubstringName() != null ) && ( at.getSubstringName() != null ) )\n+            else if ( ( getSubstringOid() != null ) && ( at.getSubstringOid() != null ) )\n             {\n-                if ( !getSubstringName().equals( at.getSubstringName() ) )\n+                if ( !getSubstringOid().equals( at.getSubstringOid() ) )\n                 {\n                     return false;\n                 }",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/AttributeTypeImpl.java",
                "sha": "d9a5603b39893d56e4089c54d1ade3055e86b743",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/DependenciesComputer.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/DependenciesComputer.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 4,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/DependenciesComputer.java",
                "patch": "@@ -122,7 +122,7 @@ private void computeDependencies( Schema schema, AttributeTypeImpl attributeType\n         throws DependencyComputerException\n     {\n         // Superior\n-        String superior = attributeType.getSuperiorName();\n+        String superior = attributeType.getSuperiorOid();\n         if ( superior != null )\n         {\n             AttributeTypeImpl superiorAT = schemaHandler.getAttributeType( superior );\n@@ -162,7 +162,7 @@ private void computeDependencies( Schema schema, AttributeTypeImpl attributeType\n         }\n \n         // Equality Matching Rule\n-        String equalityName = attributeType.getEqualityName();\n+        String equalityName = attributeType.getEqualityOid();\n         if ( equalityName != null )\n         {\n             MatchingRuleImpl equalityMatchingRule = schemaHandler.getMatchingRule( equalityName );\n@@ -182,7 +182,7 @@ private void computeDependencies( Schema schema, AttributeTypeImpl attributeType\n         }\n \n         // Ordering Matching Rule\n-        String orderingName = attributeType.getEqualityName();\n+        String orderingName = attributeType.getOrderingOid();\n         if ( orderingName != null )\n         {\n             MatchingRuleImpl orderingMatchingRule = schemaHandler.getMatchingRule( orderingName );\n@@ -202,7 +202,7 @@ private void computeDependencies( Schema schema, AttributeTypeImpl attributeType\n         }\n \n         // Substring Matching Rule\n-        String substringName = attributeType.getEqualityName();\n+        String substringName = attributeType.getSubstringOid();\n         if ( substringName != null )\n         {\n             MatchingRuleImpl substringMatchingRule = schemaHandler.getMatchingRule( substringName );",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/DependenciesComputer.java",
                "sha": "c477de0d65238ea2bf30b30f857ee1c3e7a21e19",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/difference/DifferenceEngine.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/difference/DifferenceEngine.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 2,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/difference/DifferenceEngine.java",
                "patch": "@@ -690,8 +690,8 @@ private static PropertyDifference getUsageDifference( AttributeTypeImpl at1, Att\n      */\n     private static PropertyDifference getSuperiorDifference( AttributeTypeImpl at1, AttributeTypeImpl at2 )\n     {\n-        String at1Superior = at1.getSuperiorName();\n-        String at2Superior = at2.getSuperiorName();\n+        String at1Superior = at1.getSuperiorOid();\n+        String at2Superior = at2.getSuperiorOid();\n \n         if ( ( at1Superior == null ) && ( at2Superior != null ) )\n         {",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/difference/DifferenceEngine.java",
                "sha": "01889937f113310e56e76716fcc43603cf6651af",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/hierarchy/HierarchyManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/hierarchy/HierarchyManager.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 3,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/hierarchy/HierarchyManager.java",
                "patch": "@@ -79,7 +79,7 @@ private void addAttributeType( AttributeTypeImpl at )\n         // Checking Aliases and OID\n         checkAliasesAndOID( at );\n \n-        String superiorName = at.getSuperiorName();\n+        String superiorName = at.getSuperiorOid();\n         if ( superiorName != null )\n         // The attribute type has a superior\n         {\n@@ -407,7 +407,7 @@ public void objectClassRemoved( ObjectClassImpl oc )\n     private void removeAttributeType( AttributeTypeImpl at )\n     {\n         // Removing the attribute type as child of its superior\n-        String superiorName = at.getSuperiorName();\n+        String superiorName = at.getSuperiorOid();\n         if ( ( superiorName != null ) && ( !\"\".equals( superiorName ) ) ) //$NON-NLS-1$\n         {\n             AttributeTypeImpl superiorAT = schemaHandler.getAttributeType( superiorName );\n@@ -437,7 +437,7 @@ private void removeAttributeType( AttributeTypeImpl at )\n \n                 parentsMap.put( child, root );\n                 childrenMap.put( root, child );\n-                String childSuperiorName = childAT.getSuperiorName();\n+                String childSuperiorName = childAT.getSuperiorOid();\n                 if ( ( childSuperiorName != null ) && ( !\"\".equals( childSuperiorName ) ) ) //$NON-NLS-1$\n                 {\n                     parentsMap.put( child, childSuperiorName.toLowerCase() );",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/hierarchy/HierarchyManager.java",
                "sha": "2a3614ccd761688cbfda35a3378a63263345f41b",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/OpenLdapSchemaFileExporter.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/OpenLdapSchemaFileExporter.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 6,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/OpenLdapSchemaFileExporter.java",
                "patch": "@@ -114,21 +114,21 @@ public static String toSourceCode( AttributeTypeImpl at )\n         }\n \n         // SUP\n-        if ( ( at.getSuperiorName() != null ) && ( !at.getSuperiorName().equals( \"\" ) ) ) //$NON-NLS-1$\n+        if ( ( at.getSuperiorOid() != null ) && ( !at.getSuperiorOid().equals( \"\" ) ) ) //$NON-NLS-1$\n         {\n-            sb.append( \"\\tSUP \" + at.getSuperiorName() + \" \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n+            sb.append( \"\\tSUP \" + at.getSuperiorOid() + \" \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n         }\n \n         // EQUALITY\n-        if ( ( at.getEqualityName() != null ) && ( !at.getEqualityName().equals( \"\" ) ) ) //$NON-NLS-1$\n+        if ( ( at.getEqualityOid() != null ) && ( !at.getEqualityOid().equals( \"\" ) ) ) //$NON-NLS-1$\n         {\n-            sb.append( \"\\tEQUALITY \" + at.getEqualityName() + \" \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n+            sb.append( \"\\tEQUALITY \" + at.getEqualityOid() + \" \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n         }\n \n         // ORDERING\n-        if ( ( at.getOrderingName() != null ) && ( !at.getOrderingName().equals( \"\" ) ) ) //$NON-NLS-1$\n+        if ( ( at.getOrderingOid() != null ) && ( !at.getOrderingOid().equals( \"\" ) ) ) //$NON-NLS-1$\n         {\n-            sb.append( \"\\tORDERING \" + at.getOrderingName() + \" \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n+            sb.append( \"\\tORDERING \" + at.getOrderingOid() + \" \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n         }\n \n         // SUBSTR",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/OpenLdapSchemaFileExporter.java",
                "sha": "54ad89a0e45d00d6bf10e246698dbeedb0916522",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/XMLSchemaFileExporter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/XMLSchemaFileExporter.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/XMLSchemaFileExporter.java",
                "patch": "@@ -277,7 +277,7 @@ private static void toXml( AttributeTypeImpl at, Element root )\n         }\n \n         // Superior\n-        String superior = at.getSuperiorName();\n+        String superior = at.getSuperiorOid();\n         if ( ( superior != null ) && ( !superior.equals( \"\" ) ) ) //$NON-NLS-1$\n         {\n             atNode.addElement( SUPERIOR_TAG ).setText( superior );",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/io/XMLSchemaFileExporter.java",
                "sha": "7196bf102809991a6eafeafee47302288441915c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/schemachecker/SchemaChecker.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/schemachecker/SchemaChecker.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/schemachecker/SchemaChecker.java",
                "patch": "@@ -470,7 +470,7 @@ else if ( ( aliases != null ) && ( aliases.size() >= 1 ) )\n         }\n \n         // Checking superior\n-        String superior = at.getSuperiorName();\n+        String superior = at.getSuperiorOid();\n         if ( ( superior != null ) && ( !\"\".equals( superior ) ) )\n         {\n             AttributeTypeImpl superiorAT = Activator.getDefault().getSchemaHandler().getAttributeType( superior );",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/model/schemachecker/SchemaChecker.java",
                "sha": "34eb1374e0e9528d4a2f86fbf30026974181e15b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/ATESuperiorComboContentProvider.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/ATESuperiorComboContentProvider.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/ATESuperiorComboContentProvider.java",
                "patch": "@@ -126,7 +126,7 @@ private boolean isSubType( AttributeTypeImpl at1, AttributeTypeImpl at2 )\n         }\n         else\n         {\n-            String sup = at1.getSuperiorName();\n+            String sup = at1.getSuperiorOid();\n \n             if ( sup == null )\n             {",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/ATESuperiorComboContentProvider.java",
                "sha": "5dbc5ab2177dcd74429f98754d021af3c24b08f7",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/AttributeTypeEditorOverviewPage.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/AttributeTypeEditorOverviewPage.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/AttributeTypeEditorOverviewPage.java",
                "patch": "@@ -983,7 +983,7 @@ private void fillSupCombo()\n     {\n         supComboViewer.setInput( new ATESuperiorComboInput( originalAttributeType ) );\n \n-        String supAtName = modifiedAttributeType.getSuperiorName();\n+        String supAtName = modifiedAttributeType.getSuperiorOid();\n         if ( supAtName == null )\n         {\n             supComboViewer.setSelection( new StructuredSelection( new NonExistingAttributeType(",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/attributetype/AttributeTypeEditorOverviewPage.java",
                "sha": "a79c22889ae15deef338a2c986a2ed72b4e3124f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/views/SearchView.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/views/SearchView.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/views/SearchView.java",
                "patch": "@@ -734,7 +734,7 @@ public void setSearchInput( String searchString, SearchInEnum[] searchIn, int sc\n                         // Superior\n                         if ( searchScope.contains( SearchInEnum.SUPERIOR ) )\n                         {\n-                            if ( checkString( pattern, at.getSuperiorName() ) )\n+                            if ( checkString( pattern, at.getSuperiorOid() ) )\n                             {\n                                 searchResults.add( at );\n                                 continue;",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/views/SearchView.java",
                "sha": "2d3dd41a0fddb7e39e5b65f46a326b735aa7cb3a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/ExportSchemasForADSWizard.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/ExportSchemasForADSWizard.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/ExportSchemasForADSWizard.java",
                "patch": "@@ -469,7 +469,7 @@ private void toLdif( Schema schema, StringBuffer sb ) throws NamingException, Ld\n         for ( AttributeTypeImpl at : schema.getAttributeTypes() )\n         {\n             // Superior\n-            String supName = at.getSuperiorName();\n+            String supName = at.getSuperiorOid();\n             if ( supName != null )\n             {\n                 AttributeTypeImpl sup = schemaHandler.getAttributeType( supName );",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/ExportSchemasForADSWizard.java",
                "sha": "6022666cfc7111b946e9434904fd00bd56a38992",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-studio/blob/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/MergeSchemasWizard.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/MergeSchemasWizard.java?ref=58920d4b8cdf018d05e41000c2c35ebad49fc7a8",
                "deletions": 1,
                "filename": "plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/MergeSchemasWizard.java",
                "patch": "@@ -335,7 +335,7 @@ private void mergeAttributeType( AttributeTypeImpl sourceAttributeType, Project\n                 // merge dependencies: super attribute type\n                 if ( mergeDependencies )\n                 {\n-                    String superiorName = clonedAttributeType.getSuperiorName();\n+                    String superiorName = clonedAttributeType.getSuperiorOid();\n                     if ( superiorName != null )\n                     {\n                         AttributeTypeImpl superiorAttributeType = sourceAttributeType.getSchemaObject().getProject()",
                "raw_url": "https://github.com/apache/directory-studio/raw/58920d4b8cdf018d05e41000c2c35ebad49fc7a8/plugins/schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/MergeSchemasWizard.java",
                "sha": "9a1193fc678ff345b4a8168af0dae9a9dbc9083e",
                "status": "modified"
            }
        ],
        "message": "Moved the methods used to the new Schema API.\nFixed a few NPEs in the Schema Browser of the LDAP Browser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/branches/shared-trunk-merge@1005807 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/b22bc771ca0249031cdf4a7ab17b1e63bef4efbf",
        "patched_files": [
            "OpenLdapSchemaFileExporter.java",
            "DifferenceEngine.java",
            "Schema.java"
        ],
        "repo": "directory-studio",
        "unit_tests": [
            "DifferenceEngineTest.java",
            "OpenLdapSchemaFileExporterTest.java",
            "SchemaTest.java"
        ]
    },
    "directory-studio_712d4b9": {
        "bug_id": "directory-studio_712d4b9",
        "commit": "https://github.com/apache/directory-studio/commit/712d4b9fb318adde8e228612fea249a70d6f5fd3",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-studio/blob/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditor.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditor.java?ref=712d4b9fb318adde8e228612fea249a70d6f5fd3",
                "deletions": 2,
                "filename": "studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditor.java",
                "patch": "@@ -83,9 +83,9 @@ public void init( IEditorSite site, IEditorInput input ) throws PartInitExceptio\n         setInput( input );\n         setPartName( input.getName() );\n \n-        Activator.getDefault().getSchemaHandler().addListener( schemaHandlerListener );\n-\n         schema = ( ( SchemaEditorInput ) getEditorInput() ).getSchema();\n+\n+        Activator.getDefault().getSchemaHandler().addListener( schemaHandlerListener );\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-studio/raw/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditor.java",
                "sha": "fd8b6e2fcda1ea3d73a8388e8552d881a0e6efad",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/directory-studio/blob/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorOverviewPage.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorOverviewPage.java?ref=712d4b9fb318adde8e228612fea249a70d6f5fd3",
                "deletions": 2,
                "filename": "studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorOverviewPage.java",
                "patch": "@@ -210,7 +210,6 @@ protected void createFormContent( IManagedForm managedForm )\n     {\n         // Getting the associated schema\n         schema = ( ( SchemaEditor ) getEditor() ).getSchema();\n-        schemaHandler.addListener( schema, schemaListener );\n \n         // Creating the base UI\n         ScrolledForm form = managedForm.getForm();\n@@ -305,11 +304,34 @@ private void fillInUiFields()\n \n \n     /**\n-     * Initializes and adds the listners.\n+     * Initializes and adds the listeners.\n      */\n     private void addListeners()\n     {\n+        schemaHandler.addListener( schema, schemaListener );\n         attributeTypesTableViewer.addDoubleClickListener( attributeTypesTableViewerListener );\n         objectClassesTableViewer.addDoubleClickListener( objectClassesTableViewerListener );\n     }\n+\n+\n+    /**\n+     * Removes the listeners.\n+     */\n+    private void removeListeners()\n+    {\n+        schemaHandler.removeListener( schema, schemaListener );\n+        attributeTypesTableViewer.removeDoubleClickListener( attributeTypesTableViewerListener );\n+        objectClassesTableViewer.removeDoubleClickListener( objectClassesTableViewerListener );\n+    }\n+\n+\n+    /* (non-Javadoc)\n+     * @see org.eclipse.ui.forms.editor.FormPage#dispose()\n+     */\n+    public void dispose()\n+    {\n+        removeListeners();\n+\n+        super.dispose();\n+    }\n }",
                "raw_url": "https://github.com/apache/directory-studio/raw/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorOverviewPage.java",
                "sha": "fad63cff89409f608b735925bc769f5fbc32e043",
                "status": "modified"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/directory-studio/blob/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorSourceCodePage.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorSourceCodePage.java?ref=712d4b9fb318adde8e228612fea249a70d6f5fd3",
                "deletions": 1,
                "filename": "studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorSourceCodePage.java",
                "patch": "@@ -194,7 +194,6 @@ public SchemaEditorSourceCodePage( FormEditor editor )\n     protected void createFormContent( IManagedForm managedForm )\n     {\n         schema = ( ( SchemaEditor ) getEditor() ).getSchema();\n-        Activator.getDefault().getSchemaHandler().addListener( schema, schemaListener );\n \n         ScrolledForm form = managedForm.getForm();\n         FormToolkit toolkit = managedForm.getToolkit();\n@@ -219,6 +218,8 @@ protected void createFormContent( IManagedForm managedForm )\n \n         // Initializes the UI from the schema\n         fillInUiFields();\n+\n+        addListeners();\n     }\n \n \n@@ -229,4 +230,33 @@ private void fillInUiFields()\n     {\n         schemaSourceViewer.getDocument().set( OpenLdapSchemaFileExporter.toSourceCode( schema ) );\n     }\n+\n+\n+    /**\n+     * Adds the listeners.\n+     */\n+    private void addListeners()\n+    {\n+        Activator.getDefault().getSchemaHandler().addListener( schema, schemaListener );\n+    }\n+\n+\n+    /**\n+     * Removes the listeners.\n+     */\n+    private void removeListeners()\n+    {\n+        Activator.getDefault().getSchemaHandler().removeListener( schema, schemaListener );\n+    }\n+\n+\n+    /* (non-Javadoc)\n+     * @see org.eclipse.ui.forms.editor.FormPage#dispose()\n+     */\n+    public void dispose()\n+    {\n+        removeListeners();\n+\n+        super.dispose();\n+    }\n }",
                "raw_url": "https://github.com/apache/directory-studio/raw/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/editors/schema/SchemaEditorSourceCodePage.java",
                "sha": "4d80f04e9958b22bbd310544e02a3d397e2edf6e",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/directory-studio/blob/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeContentWizardPage.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeContentWizardPage.java?ref=712d4b9fb318adde8e228612fea249a70d6f5fd3",
                "deletions": 23,
                "filename": "studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeContentWizardPage.java",
                "patch": "@@ -236,38 +236,52 @@ public String getText( Object element )\n     /**\n      * Initializes the UI fields.\n      */\n+    @SuppressWarnings(\"unchecked\")\n     private void initFields()\n     {\n         if ( schemaHandler != null )\n         {\n             // Getting the syntaxes\n-            List<SyntaxImpl> syntaxes = new ArrayList<SyntaxImpl>( schemaHandler.getSyntaxes() );\n+            List<Object> syntaxes = new ArrayList( schemaHandler.getSyntaxes() );\n+            // Adding the (None) Syntax\n+            String none = \"(None)\";\n+            syntaxes.add( none );\n \n             // Sorting the syntaxes\n-            Collections.sort( syntaxes, new Comparator<SyntaxImpl>()\n+            Collections.sort( syntaxes, new Comparator<Object>()\n             {\n-\n-                public int compare( SyntaxImpl o1, SyntaxImpl o2 )\n+                public int compare( Object o1, Object o2 )\n                 {\n-                    String[] o1Names = o1.getNames();\n-                    String[] o2Names = o2.getNames();\n-\n-                    // Comparing the First Name\n-                    if ( ( o1Names != null ) && ( o2Names != null ) )\n+                    if ( ( o1 instanceof SyntaxImpl ) && ( o2 instanceof SyntaxImpl ) )\n                     {\n-                        if ( ( o1Names.length > 0 ) && ( o2Names.length > 0 ) )\n-                        {\n-                            return o1Names[0].compareToIgnoreCase( o2Names[0] );\n-                        }\n-                        else if ( ( o1Names.length == 0 ) && ( o2Names.length > 0 ) )\n-                        {\n-                            return \"\".compareToIgnoreCase( o2Names[0] );\n-                        }\n-                        else if ( ( o1Names.length > 0 ) && ( o2Names.length == 0 ) )\n+                        String[] o1Names = ( ( SyntaxImpl ) o1 ).getNames();\n+                        String[] o2Names = ( ( SyntaxImpl ) o2 ).getNames();\n+\n+                        // Comparing the First Name\n+                        if ( ( o1Names != null ) && ( o2Names != null ) )\n                         {\n-                            return o1Names[0].compareToIgnoreCase( \"\" );\n+                            if ( ( o1Names.length > 0 ) && ( o2Names.length > 0 ) )\n+                            {\n+                                return o1Names[0].compareToIgnoreCase( o2Names[0] );\n+                            }\n+                            else if ( ( o1Names.length == 0 ) && ( o2Names.length > 0 ) )\n+                            {\n+                                return \"\".compareToIgnoreCase( o2Names[0] );\n+                            }\n+                            else if ( ( o1Names.length > 0 ) && ( o2Names.length == 0 ) )\n+                            {\n+                                return o1Names[0].compareToIgnoreCase( \"\" );\n+                            }\n                         }\n                     }\n+                    else if ( ( o1 instanceof String ) && ( o2 instanceof SyntaxImpl ) )\n+                    {\n+                        return Integer.MIN_VALUE;\n+                    }\n+                    else if ( ( o1 instanceof SyntaxImpl ) && ( o2 instanceof String ) )\n+                    {\n+                        return Integer.MAX_VALUE;\n+                    }\n \n                     // Default\n                     return o1.toString().compareToIgnoreCase( o2.toString() );\n@@ -276,6 +290,7 @@ else if ( ( o1Names.length > 0 ) && ( o2Names.length == 0 ) )\n \n             // Setting the input\n             syntaxComboViewer.setInput( syntaxes );\n+            syntaxComboViewer.setSelection( new StructuredSelection( none ) );\n         }\n     }\n \n@@ -381,11 +396,11 @@ else if ( selectedUsage.equals( USER_APPLICATIONS ) )\n      */\n     public String getSyntax()\n     {\n-        SyntaxImpl syntax = ( SyntaxImpl ) ( ( StructuredSelection ) syntaxComboViewer.getSelection() )\n-            .getFirstElement();\n-        if ( syntax != null )\n+        Object selection = ( ( StructuredSelection ) syntaxComboViewer.getSelection() ).getFirstElement();\n+\n+        if ( selection instanceof SyntaxImpl )\n         {\n-            return syntax.getOid();\n+            return ( ( SyntaxImpl ) selection ).getOid();\n         }\n \n         return null;",
                "raw_url": "https://github.com/apache/directory-studio/raw/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeContentWizardPage.java",
                "sha": "70bcb664913985c8766b0c5f71170738a0ebee70",
                "status": "modified"
            },
            {
                "additions": 49,
                "blob_url": "https://github.com/apache/directory-studio/blob/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeMatchingRulesWizardPage.java",
                "changes": 72,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeMatchingRulesWizardPage.java?ref=712d4b9fb318adde8e228612fea249a70d6f5fd3",
                "deletions": 23,
                "filename": "studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeMatchingRulesWizardPage.java",
                "patch": "@@ -157,36 +157,51 @@ public void createControl( Composite parent )\n     /**\n      * Initializes the UI fields.\n      */\n+    @SuppressWarnings(\"unchecked\")\n     private void initFields()\n     {\n         if ( schemaHandler != null )\n         {\n             // Getting the matching rules\n-            List<MatchingRuleImpl> matchingRules = new ArrayList<MatchingRuleImpl>( schemaHandler.getMatchingRules() );\n+            List<Object> matchingRules = new ArrayList( schemaHandler.getMatchingRules() );\n+            // Adding the (None) matching rule\n+            String none = \"(None)\";\n+            matchingRules.add( none );\n \n             // Sorting the matching rules\n-            Collections.sort( matchingRules, new Comparator<MatchingRuleImpl>()\n+            Collections.sort( matchingRules, new Comparator<Object>()\n             {\n \n-                public int compare( MatchingRuleImpl o1, MatchingRuleImpl o2 )\n+                public int compare( Object o1, Object o2 )\n                 {\n-                    String[] o1Names = o1.getNames();\n-                    String[] o2Names = o2.getNames();\n-\n-                    // Comparing the First Name\n-                    if ( ( o1Names != null ) && ( o2Names != null ) )\n+                    if ( ( o1 instanceof MatchingRuleImpl ) && ( o2 instanceof MatchingRuleImpl ) )\n                     {\n-                        if ( ( o1Names.length > 0 ) && ( o2Names.length > 0 ) )\n+                        String[] o1Names = ( ( MatchingRuleImpl ) o1 ).getNames();\n+                        String[] o2Names = ( ( MatchingRuleImpl ) o2 ).getNames();\n+\n+                        // Comparing the First Name\n+                        if ( ( o1Names != null ) && ( o2Names != null ) )\n                         {\n-                            return o1Names[0].compareToIgnoreCase( o2Names[0] );\n+                            if ( ( o1Names.length > 0 ) && ( o2Names.length > 0 ) )\n+                            {\n+                                return o1Names[0].compareToIgnoreCase( o2Names[0] );\n+                            }\n+                            else if ( ( o1Names.length == 0 ) && ( o2Names.length > 0 ) )\n+                            {\n+                                return \"\".compareToIgnoreCase( o2Names[0] );\n+                            }\n+                            else if ( ( o1Names.length > 0 ) && ( o2Names.length == 0 ) )\n+                            {\n+                                return o1Names[0].compareToIgnoreCase( \"\" );\n+                            }\n                         }\n-                        else if ( ( o1Names.length == 0 ) && ( o2Names.length > 0 ) )\n+                        else if ( ( o1 instanceof String ) && ( o2 instanceof MatchingRuleImpl ) )\n                         {\n-                            return \"\".compareToIgnoreCase( o2Names[0] );\n+                            return Integer.MIN_VALUE;\n                         }\n-                        else if ( ( o1Names.length > 0 ) && ( o2Names.length == 0 ) )\n+                        else if ( ( o1 instanceof MatchingRuleImpl ) && ( o2 instanceof String ) )\n                         {\n-                            return o1Names[0].compareToIgnoreCase( \"\" );\n+                            return Integer.MAX_VALUE;\n                         }\n                     }\n \n@@ -199,6 +214,11 @@ else if ( ( o1Names.length > 0 ) && ( o2Names.length == 0 ) )\n             equalityComboViewer.setInput( matchingRules );\n             orderingComboViewer.setInput( matchingRules );\n             substringComboViewer.setInput( matchingRules );\n+\n+            // Selecting the None matching rules\n+            equalityComboViewer.setSelection( new StructuredSelection( none ) );\n+            orderingComboViewer.setSelection( new StructuredSelection( none ) );\n+            substringComboViewer.setSelection( new StructuredSelection( none ) );\n         }\n     }\n \n@@ -211,10 +231,12 @@ else if ( ( o1Names.length > 0 ) && ( o2Names.length == 0 ) )\n      */\n     public String getEqualityMatchingRuleValue()\n     {\n-        MatchingRuleImpl mr = ( MatchingRuleImpl ) ( ( StructuredSelection ) equalityComboViewer.getSelection() )\n-            .getFirstElement();\n-        if ( mr != null )\n+        Object selection = ( ( StructuredSelection ) equalityComboViewer.getSelection() ).getFirstElement();\n+\n+        if ( selection instanceof MatchingRuleImpl )\n         {\n+            MatchingRuleImpl mr = ( ( MatchingRuleImpl ) selection );\n+\n             String[] names = mr.getNames();\n             if ( ( names != null ) && ( names.length > 0 ) )\n             {\n@@ -238,10 +260,12 @@ public String getEqualityMatchingRuleValue()\n      */\n     public String getOrderingMatchingRuleValue()\n     {\n-        MatchingRuleImpl mr = ( MatchingRuleImpl ) ( ( StructuredSelection ) orderingComboViewer.getSelection() )\n-            .getFirstElement();\n-        if ( mr != null )\n+        Object selection = ( ( StructuredSelection ) orderingComboViewer.getSelection() ).getFirstElement();\n+\n+        if ( selection instanceof MatchingRuleImpl )\n         {\n+            MatchingRuleImpl mr = ( ( MatchingRuleImpl ) selection );\n+\n             String[] names = mr.getNames();\n             if ( ( names != null ) && ( names.length > 0 ) )\n             {\n@@ -265,10 +289,12 @@ public String getOrderingMatchingRuleValue()\n      */\n     public String getSubstringMatchingRuleValue()\n     {\n-        MatchingRuleImpl mr = ( MatchingRuleImpl ) ( ( StructuredSelection ) substringComboViewer.getSelection() )\n-            .getFirstElement();\n-        if ( mr != null )\n+        Object selection = ( ( StructuredSelection ) substringComboViewer.getSelection() ).getFirstElement();\n+\n+        if ( selection instanceof MatchingRuleImpl )\n         {\n+            MatchingRuleImpl mr = ( ( MatchingRuleImpl ) selection );\n+\n             String[] names = mr.getNames();\n             if ( ( names != null ) && ( names.length > 0 ) )\n             {",
                "raw_url": "https://github.com/apache/directory-studio/raw/712d4b9fb318adde8e228612fea249a70d6f5fd3/studio-schemaeditor/src/main/java/org/apache/directory/studio/schemaeditor/view/wizards/NewAttributeTypeMatchingRulesWizardPage.java",
                "sha": "0edb8f4e8e8754d265a780a416696d156cd886e2",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE in the Schema Editor.\nAdded \"(None)\" syntax and matching rules to the NewAttributeTypeWizard.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/trunk@571492 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/85462cb6a8c14555914cb1bcd1ec0fefc8d2a9e3",
        "patched_files": [
            "SchemaEditor.java"
        ],
        "repo": "directory-studio",
        "unit_tests": [
            "SchemaEditorTest.java"
        ]
    },
    "directory-studio_d224659": {
        "bug_id": "directory-studio_d224659",
        "commit": "https://github.com/apache/directory-studio/commit/d224659972c1002339e2b0627a17d795013fe440",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-studio/blob/d224659972c1002339e2b0627a17d795013fe440/connection-core/src/main/java/org/apache/directory/studio/connection/core/Utils.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/connection-core/src/main/java/org/apache/directory/studio/connection/core/Utils.java?ref=d224659972c1002339e2b0627a17d795013fe440",
                "deletions": 1,
                "filename": "connection-core/src/main/java/org/apache/directory/studio/connection/core/Utils.java",
                "patch": "@@ -155,7 +155,10 @@ public static LdapURL getLdapURL( Connection connection, String searchBase, int\n         catch ( InvalidNameException e )\n         {\n         }\n-        url.setAttributes( Arrays.asList( attributes ) );\n+        if ( attributes != null )\n+        {\n+            url.setAttributes( Arrays.asList( attributes ) );\n+        }\n         url.setScope( scope );\n         url.setFilter( filter );\n         return url;",
                "raw_url": "https://github.com/apache/directory-studio/raw/d224659972c1002339e2b0627a17d795013fe440/connection-core/src/main/java/org/apache/directory/studio/connection/core/Utils.java",
                "sha": "6186506d54a0b865e26b7d1869648920ead00281",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/directory-studio/blob/d224659972c1002339e2b0627a17d795013fe440/connection-core/src/main/java/org/apache/directory/studio/connection/core/io/jndi/JNDIConnectionWrapper.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/connection-core/src/main/java/org/apache/directory/studio/connection/core/io/jndi/JNDIConnectionWrapper.java?ref=d224659972c1002339e2b0627a17d795013fe440",
                "deletions": 9,
                "filename": "connection-core/src/main/java/org/apache/directory/studio/connection/core/io/jndi/JNDIConnectionWrapper.java",
                "patch": "@@ -39,7 +39,6 @@\n import javax.naming.ldap.Control;\n import javax.naming.ldap.InitialLdapContext;\n import javax.naming.ldap.LdapContext;\n-import javax.naming.ldap.LdapName;\n import javax.naming.ldap.ManageReferralControl;\n import javax.naming.ldap.StartTlsRequest;\n import javax.naming.ldap.StartTlsResponse;\n@@ -302,7 +301,7 @@ public void run()\n                     searchCtx.addToEnvironment( Context.REFERRAL, REFERRAL_THROW );\n \n                     // perform the search\n-                    NamingEnumeration<SearchResult> ne = searchCtx.search( new LdapName( searchBase ), filter,\n+                    NamingEnumeration<SearchResult> ne = searchCtx.search( new LdapDN( searchBase ), filter,\n                         searchControls );\n                     namingEnumeration = new StudioNamingEnumeration( connection, ne, searchBase, filter,\n                         searchControls, aliasesDereferencingMethod, referralsHandlingMethod, controls, requestNum,\n@@ -454,7 +453,7 @@ public void run()\n                     modCtx.addToEnvironment( Context.REFERRAL, REFERRAL_THROW );\n \n                     // perform modification\n-                    modCtx.modifyAttributes( new LdapName( dn ), modificationItems );\n+                    modCtx.modifyAttributes( new LdapDN( dn ), modificationItems );\n                 }\n                 catch ( ReferralException re )\n                 {\n@@ -555,7 +554,7 @@ public void run()\n                     }\n \n                     // rename entry\n-                    modCtx.rename( new LdapName( oldDn ), new LdapName( newDn ) );\n+                    modCtx.rename( new LdapDN( oldDn ), new LdapDN( newDn ) );\n                 }\n                 catch ( ReferralException re )\n                 {\n@@ -645,7 +644,7 @@ public void run()\n                     modCtx.addToEnvironment( Context.REFERRAL, REFERRAL_THROW );\n \n                     // create entry\n-                    modCtx.createSubcontext( new LdapName( dn ), attributes );\n+                    modCtx.createSubcontext( new LdapDN( dn ), attributes );\n                 }\n                 catch ( ReferralException re )\n                 {\n@@ -733,7 +732,7 @@ public void run()\n                     modCtx.addToEnvironment( Context.REFERRAL, REFERRAL_THROW );\n \n                     // delete entry\n-                    modCtx.destroySubcontext( new LdapName( dn ) );\n+                    modCtx.destroySubcontext( new LdapDN( dn ) );\n                 }\n                 catch ( ReferralException re )\n                 {\n@@ -915,14 +914,23 @@ else if ( connection.getConnectionParameter().getAuthMethod() == ConnectionParam\n             IAuthHandler authHandler = ConnectionCorePlugin.getDefault().getAuthHandler();\n             if ( authHandler == null )\n             {\n-                monitor.reportError( Messages.model__no_auth_handler, new Exception() );\n+                NamingException namingException = new NamingException(  Messages.model__no_auth_handler );\n+                monitor.reportError( Messages.model__no_auth_handler, namingException );\n+                throw namingException;\n             }\n             ICredentials credentials = authHandler.getCredentials( connection.getConnectionParameter() );\n             if ( credentials == null )\n             {\n+                CancelException cancelException = new CancelException();\n                 monitor.setCanceled( true );\n-                monitor.reportError( Messages.model__no_credentials, new CancelException() );\n-                throw new CancelException();\n+                monitor.reportError( Messages.model__no_credentials, cancelException );\n+                throw cancelException;\n+            }\n+            if ( credentials.getBindPrincipal() == null || credentials.getBindPassword() == null )\n+            {\n+                NamingException namingException = new NamingException(  Messages.model__no_credentials );\n+                monitor.reportError( Messages.model__no_credentials, namingException );\n+                throw namingException;\n             }\n             bindPrincipal = credentials.getBindPrincipal();\n             bindCredentials = credentials.getBindPassword();",
                "raw_url": "https://github.com/apache/directory-studio/raw/d224659972c1002339e2b0627a17d795013fe440/connection-core/src/main/java/org/apache/directory/studio/connection/core/io/jndi/JNDIConnectionWrapper.java",
                "sha": "fd46de259d130f0b96eb3d2a5f8a0dd5afcca7c6",
                "status": "modified"
            },
            {
                "additions": 137,
                "blob_url": "https://github.com/apache/directory-studio/blob/d224659972c1002339e2b0627a17d795013fe440/test-integration-core/src/main/java/org/apache/directory/studio/test/integration/core/JNDIConnectionWrapperTest.java",
                "changes": 149,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/test-integration-core/src/main/java/org/apache/directory/studio/test/integration/core/JNDIConnectionWrapperTest.java?ref=d224659972c1002339e2b0627a17d795013fe440",
                "deletions": 12,
                "filename": "test-integration-core/src/main/java/org/apache/directory/studio/test/integration/core/JNDIConnectionWrapperTest.java",
                "patch": "@@ -21,6 +21,16 @@\n package org.apache.directory.studio.test.integration.core;\n \n \n+import java.net.ConnectException;\n+import java.net.UnknownHostException;\n+\n+import javax.naming.AuthenticationException;\n+import javax.naming.CommunicationException;\n+import javax.naming.NamingEnumeration;\n+import javax.naming.NamingException;\n+import javax.naming.directory.SearchControls;\n+import javax.naming.directory.SearchResult;\n+\n import org.apache.directory.server.unit.AbstractServerTest;\n import org.apache.directory.studio.connection.core.Connection;\n import org.apache.directory.studio.connection.core.ConnectionCorePlugin;\n@@ -29,15 +39,16 @@\n import org.apache.directory.studio.connection.core.IAuthHandler;\n import org.apache.directory.studio.connection.core.ICredentials;\n import org.apache.directory.studio.connection.core.StudioProgressMonitor;\n+import org.apache.directory.studio.connection.core.Connection.AliasDereferencingMethod;\n+import org.apache.directory.studio.connection.core.Connection.ReferralHandlingMethod;\n import org.apache.directory.studio.connection.core.ConnectionParameter.AuthenticationMethod;\n import org.apache.directory.studio.connection.core.ConnectionParameter.EncryptionMethod;\n import org.apache.directory.studio.connection.core.io.jndi.JNDIConnectionWrapper;\n import org.eclipse.core.runtime.NullProgressMonitor;\n \n \n /**\n- * \n- * TODO JNDIConnectionWrapperTest.\n+ * Tests the {@link JNDIConnectionWrapper}.\n  *\n  * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n  * @version $Rev$, $Date$\n@@ -54,7 +65,7 @@ public void setUp() throws Exception\n \n \n     /**\n-     * Connects to the server.\n+     * Tests connecting to the server.\n      */\n     public void testConnect()\n     {\n@@ -72,11 +83,53 @@ public void testConnect()\n \n         connectionWrapper.disconnect();\n         assertFalse( connectionWrapper.isConnected() );\n+\n+        // TODO: SSL, StartTLS\n+    }\n+\n+\n+    /**\n+     * Test failed connections to the server.\n+     */\n+    public void testConnectFailures()\n+    {\n+        StudioProgressMonitor monitor = null;\n+        ConnectionParameter connectionParameter = null;\n+        Connection connection = null;\n+        JNDIConnectionWrapper connectionWrapper = null;\n+\n+        // invalid port\n+        monitor = getProgressMonitor();\n+        connectionParameter = new ConnectionParameter( null, \"localhost\", ldapServer.getIpPort() + 1,\n+            EncryptionMethod.NONE, AuthenticationMethod.NONE, null, null, null, true, null );\n+        connection = new Connection( connectionParameter );\n+        connectionWrapper = connection.getJNDIConnectionWrapper();\n+        connectionWrapper.connect( monitor );\n+        assertFalse( connectionWrapper.isConnected() );\n+        assertNotNull( monitor.getException() );\n+        assertTrue( monitor.getException() instanceof CommunicationException );\n+        assertNotNull( monitor.getException().getCause() );\n+        assertTrue( monitor.getException().getCause() instanceof ConnectException );\n+\n+        // unknown host\n+        monitor = getProgressMonitor();\n+        connectionParameter = new ConnectionParameter( null, \"555.555.555.555\", ldapServer.getIpPort(),\n+            EncryptionMethod.NONE, AuthenticationMethod.NONE, null, null, null, true, null );\n+        connection = new Connection( connectionParameter );\n+        connectionWrapper = connection.getJNDIConnectionWrapper();\n+        connectionWrapper.connect( monitor );\n+        assertFalse( connectionWrapper.isConnected() );\n+        assertNotNull( monitor.getException() );\n+        assertTrue( monitor.getException() instanceof CommunicationException );\n+        assertNotNull( monitor.getException().getCause() );\n+        assertTrue( monitor.getException().getCause() instanceof UnknownHostException );\n+\n+        // TODO: SSL, StartTLS\n     }\n \n \n     /**\n-     * Binds to the server.\n+     * Test binding to the server.\n      */\n     public void testBind()\n     {\n@@ -85,14 +138,7 @@ public void testBind()\n             EncryptionMethod.NONE, AuthenticationMethod.SIMPLE, \"uid=admin,ou=system\", \"secret\", null, true, null );\n         Connection connection = new Connection( connectionParameter );\n         JNDIConnectionWrapper connectionWrapper = connection.getJNDIConnectionWrapper();\n-        IAuthHandler authHandler = new IAuthHandler()\n-        {\n-            public ICredentials getCredentials( ConnectionParameter connectionParameter )\n-            {\n-                return new Credentials( connectionParameter.getBindPrincipal(), connectionParameter.getBindPassword(),\n-                    connectionParameter );\n-            }\n-        };\n+        IAuthHandler authHandler = getAuthHandler();\n         ConnectionCorePlugin.getDefault().setAuthHandler( authHandler );\n \n         assertFalse( connectionWrapper.isConnected() );\n@@ -105,6 +151,71 @@ public ICredentials getCredentials( ConnectionParameter connectionParameter )\n         connectionWrapper.unbind();\n         connectionWrapper.disconnect();\n         assertFalse( connectionWrapper.isConnected() );\n+\n+    }\n+\n+\n+    /**\n+     * Test failed binds to the server.\n+     */\n+    public void testBindFailures()\n+    {\n+        StudioProgressMonitor monitor = null;\n+        ConnectionParameter connectionParameter = null;\n+        Connection connection = null;\n+        JNDIConnectionWrapper connectionWrapper = null;\n+\n+        // simple auth without principal and credential\n+        monitor = getProgressMonitor();\n+        connectionParameter = new ConnectionParameter( null, \"localhost\", ldapServer.getIpPort(),\n+            EncryptionMethod.NONE, AuthenticationMethod.SIMPLE, null, null, null, true, null );\n+        connection = new Connection( connectionParameter );\n+        connectionWrapper = connection.getJNDIConnectionWrapper();\n+        connectionWrapper.connect( monitor );\n+        connectionWrapper.bind( monitor );\n+        assertFalse( connectionWrapper.isConnected() );\n+        assertNotNull( monitor.getException() );\n+        assertTrue( monitor.getException() instanceof NamingException );\n+\n+        // simple auth with invalid principal and credential\n+        monitor = getProgressMonitor();\n+        connectionParameter = new ConnectionParameter( null, \"localhost\", ldapServer.getIpPort(),\n+            EncryptionMethod.NONE, AuthenticationMethod.SIMPLE, \"uid=admin,ou=system\", \"bar\", null, true, null );\n+        connection = new Connection( connectionParameter );\n+        connectionWrapper = connection.getJNDIConnectionWrapper();\n+        connectionWrapper.connect( monitor );\n+        connectionWrapper.bind( monitor );\n+        assertFalse( connectionWrapper.isConnected() );\n+        assertNotNull( monitor.getException() );\n+        assertTrue( monitor.getException() instanceof AuthenticationException );\n+    }\n+\n+\n+    /**\n+     * Test searching.\n+     */\n+    public void testSearch()\n+    {\n+        StudioProgressMonitor monitor = null;\n+        ConnectionParameter connectionParameter = null;\n+        Connection connection = null;\n+        JNDIConnectionWrapper connectionWrapper = null;\n+\n+        // simple auth without principal and credential\n+        monitor = getProgressMonitor();\n+        connectionParameter = new ConnectionParameter( null, \"localhost\", ldapServer.getIpPort(),\n+            EncryptionMethod.NONE, AuthenticationMethod.SIMPLE, \"uid=admin,ou=system\", \"secret\", null, true, null );\n+        connection = new Connection( connectionParameter );\n+        connectionWrapper = connection.getJNDIConnectionWrapper();\n+        connectionWrapper.connect( monitor );\n+        connectionWrapper.bind( monitor );\n+        assertTrue( connectionWrapper.isConnected() );\n+        assertNull( monitor.getException() );\n+\n+        SearchControls searchControls = new SearchControls();\n+        NamingEnumeration<SearchResult> result = connectionWrapper.search( \"ou=system\", \"objectClass=*\",\n+            searchControls, AliasDereferencingMethod.NEVER, ReferralHandlingMethod.IGNORE, null, monitor, null );\n+        assertNotNull( result );\n     }\n \n \n@@ -123,4 +234,18 @@ private StudioProgressMonitor getProgressMonitor()\n         return monitor;\n     }\n \n+\n+    private IAuthHandler getAuthHandler()\n+    {\n+        IAuthHandler authHandler = new IAuthHandler()\n+        {\n+            public ICredentials getCredentials( ConnectionParameter connectionParameter )\n+            {\n+                return new Credentials( connectionParameter.getBindPrincipal(), connectionParameter.getBindPassword(),\n+                    connectionParameter );\n+            }\n+        };\n+        return authHandler;\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/directory-studio/raw/d224659972c1002339e2b0627a17d795013fe440/test-integration-core/src/main/java/org/apache/directory/studio/test/integration/core/JNDIConnectionWrapperTest.java",
                "sha": "e6a499ede7a029509d6304bd46bfbfd9691877c3",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE, added some tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/trunk@666331 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/1e6537c176eb3b82c6d4a021bcb9de3f676cbf58",
        "patched_files": [
            "Utils.java",
            "JNDIConnectionWrapper.java"
        ],
        "repo": "directory-studio",
        "unit_tests": [
            "JNDIConnectionWrapperTest.java"
        ]
    },
    "directory-studio_d57b580": {
        "bug_id": "directory-studio_d57b580",
        "commit": "https://github.com/apache/directory-studio/commit/d57b580ede505eb6a8c50940567d62b592f4c2a8",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-studio/blob/d57b580ede505eb6a8c50940567d62b592f4c2a8/studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/difference/DifferenceEngine.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/difference/DifferenceEngine.java?ref=d57b580ede505eb6a8c50940567d62b592f4c2a8",
                "deletions": 2,
                "filename": "studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/difference/DifferenceEngine.java",
                "patch": "@@ -78,14 +78,14 @@\n                 differences.add( schemaDifference );\n \n                 // Adding attribute types\n-                for ( AttributeTypeImpl at : schemaFromL2.getAttributeTypes() )\n+                for ( AttributeTypeImpl at : schemaFromL1.getAttributeTypes() )\n                 {\n                     schemaDifference.addAttributeTypeDifference( new AttributeTypeDifference( null, at,\n                         DifferenceType.REMOVED ) );\n                 }\n \n                 // Adding object classes\n-                for ( ObjectClassImpl oc : schemaFromL2.getObjectClasses() )\n+                for ( ObjectClassImpl oc : schemaFromL1.getObjectClasses() )\n                 {\n                     schemaDifference.addObjectClassDifference( new ObjectClassDifference( null, oc,\n                         DifferenceType.REMOVED ) );",
                "raw_url": "https://github.com/apache/directory-studio/raw/d57b580ede505eb6a8c50940567d62b592f4c2a8/studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/difference/DifferenceEngine.java",
                "sha": "b75c3cef2f937ddaca5a3b8a17284425d10f1fe5",
                "status": "modified"
            }
        ],
        "message": "Fixed a bug in the DifferenceEngine. The wrong schema (which was null) was used, causing an NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/trunk@558631 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/dc1040c792c68af8ee7dbfc590123bd524365488",
        "patched_files": [
            "DifferenceEngine.java"
        ],
        "repo": "directory-studio",
        "unit_tests": [
            "DifferenceEngineTest.java"
        ]
    },
    "directory-studio_e47ffa2": {
        "bug_id": "directory-studio_e47ffa2",
        "commit": "https://github.com/apache/directory-studio/commit/e47ffa2c028d10732def0830f19d23e092f4f649",
        "file": [
            {
                "additions": 57,
                "blob_url": "https://github.com/apache/directory-studio/blob/e47ffa2c028d10732def0830f19d23e092f4f649/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/PreferencesTest.java",
                "changes": 57,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/PreferencesTest.java?ref=e47ffa2c028d10732def0830f19d23e092f4f649",
                "deletions": 0,
                "filename": "tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/PreferencesTest.java",
                "patch": "@@ -21,17 +21,22 @@\n package org.apache.directory.studio.test.integration.ui;\n \n \n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n \n import java.io.File;\n import java.net.URL;\n import java.nio.charset.StandardCharsets;\n+import java.security.cert.X509Certificate;\n+import java.util.Date;\n import java.util.List;\n \n import org.apache.directory.api.util.FileUtils;\n import org.apache.directory.server.core.integ.AbstractLdapTestUnit;\n+import org.apache.directory.studio.connection.core.ConnectionCorePlugin;\n import org.apache.directory.studio.test.integration.ui.bots.CertificateValidationPreferencePageBot;\n+import org.apache.directory.studio.test.integration.ui.bots.CertificateViewerDialogBot;\n import org.apache.directory.studio.test.integration.ui.bots.PreferencesBot;\n import org.apache.directory.studio.test.integration.ui.bots.StudioBot;\n import org.apache.directory.studio.test.integration.ui.bots.utils.FrameworkRunnerWithScreenshotCaptureListener;\n@@ -114,4 +119,56 @@ public void testCertificatValidationSettingsSaved() throws Exception\n         assertFalse( file.exists() );\n     }\n \n+\n+    /**\n+     * Test for DIRSTUDIO-1095\n+     * (NullPointerException on certificates preference page).\n+     */\n+    @Test\n+    public void testCertificatValidationPage() throws Exception\n+    {\n+        // verify there is no certificate yet.\n+        PreferencesBot preferencesBot = studioBot.openPreferences();\n+        CertificateValidationPreferencePageBot pageBot = preferencesBot.openCertificatValidationPage();\n+        pageBot.activatePermanentTab();\n+        assertEquals( 0, pageBot.getCertificateCount() );\n+        pageBot.activateTemporaryTab();\n+        assertEquals( 0, pageBot.getCertificateCount() );\n+        preferencesBot.clickCancelButton();\n+\n+        // add a certificate (not possible via native file dialog)\n+        Date startDate = new Date( System.currentTimeMillis() - 1000 );\n+        Date endDate = new Date( System.currentTimeMillis() + 1000 );\n+        X509Certificate certificate = CertificateUtils.createCertificate( \"cn=localhost\", \"cn=localhost\", startDate,\n+            endDate, CertificateUtils.createKeyPair() );\n+        ConnectionCorePlugin.getDefault().getPermanentTrustStoreManager().addCertificate( certificate );\n+\n+        // verify there is one certificate now\n+        preferencesBot = studioBot.openPreferences();\n+        pageBot = preferencesBot.openCertificatValidationPage();\n+        pageBot.activatePermanentTab();\n+        assertEquals( 1, pageBot.getCertificateCount() );\n+        pageBot.activateTemporaryTab();\n+        assertEquals( 0, pageBot.getCertificateCount() );\n+\n+        // view the certificate\n+        pageBot.activatePermanentTab();\n+        pageBot.selectCertificate( 0 );\n+        CertificateViewerDialogBot certificateViewerDialogBot = pageBot.clickViewButton();\n+        assertTrue( certificateViewerDialogBot.isVisible() );\n+        certificateViewerDialogBot.clickCloseButton();\n+\n+        // delete the certificate\n+        pageBot.clickRemoveButton();\n+\n+        // verify there is no certificate left\n+        pageBot.activatePermanentTab();\n+        assertEquals( 0, pageBot.getCertificateCount() );\n+        pageBot.activateTemporaryTab();\n+        assertEquals( 0, pageBot.getCertificateCount() );\n+        assertEquals( 0, ConnectionCorePlugin.getDefault().getPermanentTrustStoreManager().getCertificates().length );\n+        assertEquals( 0, ConnectionCorePlugin.getDefault().getSessionTrustStoreManager().getCertificates().length );\n+        preferencesBot.clickCancelButton();\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/directory-studio/raw/e47ffa2c028d10732def0830f19d23e092f4f649/tests/test.integration.ui/src/main/java/org/apache/directory/studio/test/integration/ui/PreferencesTest.java",
                "sha": "4817d192502dd2e181537857dbe4ecbac166c779",
                "status": "modified"
            }
        ],
        "message": "Add test for DIRSTUDIO-1095 (NullPointerException on certificates preference page)\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/trunk@1746950 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/88dfd56f71a8a9c9dbb17308127b0f82338240c7",
        "patched_files": [],
        "repo": "directory-studio",
        "unit_tests": [
            "PreferencesTest.java"
        ]
    },
    "directory-studio_f1bfa59": {
        "bug_id": "directory-studio_f1bfa59",
        "commit": "https://github.com/apache/directory-studio/commit/f1bfa5952311985e71853353100360f9ceb88581",
        "file": [
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/directory-studio/blob/f1bfa5952311985e71853353100360f9ceb88581/studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/io/OpenLdapSchemaFileExporter.java",
                "changes": 46,
                "contents_url": "https://api.github.com/repos/apache/directory-studio/contents/studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/io/OpenLdapSchemaFileExporter.java?ref=f1bfa5952311985e71853353100360f9ceb88581",
                "deletions": 20,
                "filename": "studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/io/OpenLdapSchemaFileExporter.java",
                "patch": "@@ -82,19 +82,22 @@ public static String toSourceCode( AttributeTypeImpl at )\n \n         // NAME(S)\n         String[] names = at.getNames();\n-        sb.append( \"\\tNAME \" ); //$NON-NLS-1$\n-        if ( names.length > 1 )\n+        if ( ( names != null ) && ( names.length > 0 ) )\n         {\n-            sb.append( \"( \" ); //$NON-NLS-1$\n-            for ( String name : names )\n+            sb.append( \"\\tNAME \" ); //$NON-NLS-1$\n+            if ( names.length > 1 )\n             {\n-                sb.append( \"'\" + name + \"' \" ); //$NON-NLS-1$ //$NON-NLS-2$\n+                sb.append( \"( \" ); //$NON-NLS-1$\n+                for ( String name : names )\n+                {\n+                    sb.append( \"'\" + name + \"' \" ); //$NON-NLS-1$ //$NON-NLS-2$\n+                }\n+                sb.append( \") \\n\" ); //$NON-NLS-1$\n+            }\n+            else\n+            {\n+                sb.append( \"'\" + names[0] + \"' \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n             }\n-            sb.append( \") \\n\" ); //$NON-NLS-1$\n-        }\n-        else\n-        {\n-            sb.append( \"'\" + names[0] + \"' \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n         }\n \n         // DESC\n@@ -209,19 +212,22 @@ public static String toSourceCode( ObjectClassImpl oc )\n \n         // NAME(S)\n         String[] names = oc.getNames();\n-        sb.append( \"\\tNAME \" ); //$NON-NLS-1$\n-        if ( names.length > 1 )\n+        if ( ( names != null ) && ( names.length > 0 ) )\n         {\n-            sb.append( \"( \" ); //$NON-NLS-1$\n-            for ( String name : names )\n+            sb.append( \"\\tNAME \" ); //$NON-NLS-1$\n+            if ( names.length > 1 )\n             {\n-                sb.append( \"'\" + name + \"' \" ); //$NON-NLS-1$ //$NON-NLS-2$\n+                sb.append( \"( \" ); //$NON-NLS-1$\n+                for ( String name : names )\n+                {\n+                    sb.append( \"'\" + name + \"' \" ); //$NON-NLS-1$ //$NON-NLS-2$\n+                }\n+                sb.append( \") \\n\" ); //$NON-NLS-1$\n+            }\n+            else\n+            {\n+                sb.append( \"'\" + names[0] + \"' \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n             }\n-            sb.append( \") \\n\" ); //$NON-NLS-1$\n-        }\n-        else\n-        {\n-            sb.append( \"'\" + names[0] + \"' \\n\" ); //$NON-NLS-1$ //$NON-NLS-2$\n         }\n \n         // DESC",
                "raw_url": "https://github.com/apache/directory-studio/raw/f1bfa5952311985e71853353100360f9ceb88581/studio-apacheds-schemaeditor/src/main/java/org/apache/directory/studio/apacheds/schemaeditor/model/io/OpenLdapSchemaFileExporter.java",
                "sha": "24bc4dc0b3518f602d97042347912b0c866a8bca",
                "status": "modified"
            }
        ],
        "message": "Fix a bug which caused a NPE when an OC or AT does not have any alias.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/studio/trunk@559074 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-studio/commit/98d2032aa11d93c2300397428fba4b449207bcbe",
        "patched_files": [
            "OpenLdapSchemaFileExporter.java"
        ],
        "repo": "directory-studio",
        "unit_tests": [
            "OpenLdapSchemaFileExporterTest.java"
        ]
    }
}