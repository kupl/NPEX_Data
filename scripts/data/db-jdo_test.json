{
    "db-jdo_54fe46d": {
        "bug_id": "db-jdo_54fe46d",
        "commit": "https://github.com/apache/db-jdo/commit/54fe46d56c05e9175e52791113536043bd62d895",
        "file": [
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/db-jdo/blob/54fe46d56c05e9175e52791113536043bd62d895/api2-legacy/src/java/javax/jdo/spi/JDOImplHelper.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/db-jdo/contents/api2-legacy/src/java/javax/jdo/spi/JDOImplHelper.java?ref=54fe46d56c05e9175e52791113536043bd62d895",
                "deletions": 1,
                "filename": "api2-legacy/src/java/javax/jdo/spi/JDOImplHelper.java",
                "patch": "@@ -26,6 +26,9 @@\n \n import java.lang.reflect.Constructor;\n \n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+\n import java.text.DateFormat;\n import java.text.ParsePosition;\n import java.text.SimpleDateFormat;\n@@ -120,7 +123,7 @@\n     /** Register the default DateFormat instance.\n      */\n     static {\n-        jdoImplHelper.registerDateFormat(DateFormat.getDateTimeInstance());\n+        jdoImplHelper.registerDateFormat(getDateTimeInstance());\n     }\n     \n     /** Creates new JDOImplHelper */\n@@ -793,11 +796,40 @@ public static Object construct(String className, String keyString) {\n         }\n     }\n \n+    /**\n+     * Get the DateFormat instance for the default locale from the VM.\n+     * This requires the following privileges for JDOImplHelper in the\n+     * security permissions file:\n+     * permission java.util.PropertyPermission \"user.country\", \"read\";\n+     * permission java.util.PropertyPermission \"user.timezone\", \"read,write\";\n+     * permission java.util.PropertyPermission \"java.home\", \"read\";\n+     * If these permissions are not present, or there is some other\n+     * problem getting the default date format, a simple formatter is returned.\n+     * @since 2.1\n+     * @return the default date-time formatter\n+     */\n+    static DateFormat getDateTimeInstance() {\n+        DateFormat result = null;\n+        try {\n+        result = (DateFormat) AccessController.doPrivileged (\n+            new PrivilegedAction () {\n+                public Object run () {\n+                    return DateFormat.getDateTimeInstance();\n+                }\n+            }\n+            );\n+        } catch (Exception ex) {\n+            result = DateFormat.getInstance();\n+        }\n+        return result;\n+    }\n+\n     /**\n      * Register a DateFormat instance for use with constructing Date \n      * instances. The default is the default DateFormat instance.\n      * If the new instance implements SimpleDateFormat, get its pattern\n      * for error messages.\n+     * @since 2.0\n      * @param df the DateFormat instance to use\n      */\n     public synchronized void registerDateFormat(DateFormat df) {",
                "raw_url": "https://github.com/apache/db-jdo/raw/54fe46d56c05e9175e52791113536043bd62d895/api2-legacy/src/java/javax/jdo/spi/JDOImplHelper.java",
                "sha": "986bae78d0470b4ea7d05e57b87909edd1099d4e",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/db-jdo/blob/54fe46d56c05e9175e52791113536043bd62d895/api2-legacy/test/java/javax/jdo/identity/ObjectIdentityTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/db-jdo/contents/api2-legacy/test/java/javax/jdo/identity/ObjectIdentityTest.java?ref=54fe46d56c05e9175e52791113536043bd62d895",
                "deletions": 0,
                "filename": "api2-legacy/test/java/javax/jdo/identity/ObjectIdentityTest.java",
                "patch": "@@ -237,6 +237,14 @@ public void testStringDefaultDateConstructor() {\n             \"java.util.Date:\" + rightNow);\n     }\n \n+    public void testStringNullDateConstructor() {\n+        // this test uses the standard date-time format\n+        // \"M/d/yy h:mm a\"\n+        helper.registerDateFormat(DateFormat.getInstance());\n+        Object c1 = new ObjectIdentity(Object.class, \n+            \"java.util.Date:\" + \"10/9/2007 4:26 PM\");\n+    }\n+\n     public void testBadStringDateConstructor() {\n         try {\n             ObjectIdentity c1 = new ObjectIdentity(Object.class, ",
                "raw_url": "https://github.com/apache/db-jdo/raw/54fe46d56c05e9175e52791113536043bd62d895/api2-legacy/test/java/javax/jdo/identity/ObjectIdentityTest.java",
                "sha": "4e3e649877aa1f1b3bc4a70ac1c7356695120140",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/db-jdo/blob/54fe46d56c05e9175e52791113536043bd62d895/api2/src/java/javax/jdo/spi/JDOImplHelper.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/db-jdo/contents/api2/src/java/javax/jdo/spi/JDOImplHelper.java?ref=54fe46d56c05e9175e52791113536043bd62d895",
                "deletions": 1,
                "filename": "api2/src/java/javax/jdo/spi/JDOImplHelper.java",
                "patch": "@@ -26,6 +26,9 @@\n \n import java.lang.reflect.Constructor;\n \n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+\n import java.text.DateFormat;\n import java.text.ParsePosition;\n import java.text.SimpleDateFormat;\n@@ -120,7 +123,7 @@\n     /** Register the default DateFormat instance.\n      */\n     static {\n-        jdoImplHelper.registerDateFormat(DateFormat.getDateTimeInstance());\n+        jdoImplHelper.registerDateFormat(getDateTimeInstance());\n     }\n     \n     /** Creates new JDOImplHelper */\n@@ -793,11 +796,40 @@ public static Object construct(String className, String keyString) {\n         }\n     }\n \n+    /**\n+     * Get the DateFormat instance for the default locale from the VM.\n+     * This requires the following privileges for JDOImplHelper in the\n+     * security permissions file:\n+     * permission java.util.PropertyPermission \"user.country\", \"read\";\n+     * permission java.util.PropertyPermission \"user.timezone\", \"read,write\";\n+     * permission java.util.PropertyPermission \"java.home\", \"read\";\n+     * If these permissions are not present, or there is some other\n+     * problem getting the default date format, a simple formatter is returned.\n+     * @since 2.1\n+     * @return the default date-time formatter\n+     */\n+    static DateFormat getDateTimeInstance() {\n+        DateFormat result = null;\n+        try {\n+        result = (DateFormat) AccessController.doPrivileged (\n+            new PrivilegedAction () {\n+                public Object run () {\n+                    return DateFormat.getDateTimeInstance();\n+                }\n+            }\n+            );\n+        } catch (Exception ex) {\n+            result = DateFormat.getInstance();\n+        }\n+        return result;\n+    }\n+\n     /**\n      * Register a DateFormat instance for use with constructing Date \n      * instances. The default is the default DateFormat instance.\n      * If the new instance implements SimpleDateFormat, get its pattern\n      * for error messages.\n+     * @since 2.0\n      * @param df the DateFormat instance to use\n      */\n     public synchronized void registerDateFormat(DateFormat df) {",
                "raw_url": "https://github.com/apache/db-jdo/raw/54fe46d56c05e9175e52791113536043bd62d895/api2/src/java/javax/jdo/spi/JDOImplHelper.java",
                "sha": "986bae78d0470b4ea7d05e57b87909edd1099d4e",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/db-jdo/blob/54fe46d56c05e9175e52791113536043bd62d895/api2/test/java/javax/jdo/identity/ObjectIdentityTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/db-jdo/contents/api2/test/java/javax/jdo/identity/ObjectIdentityTest.java?ref=54fe46d56c05e9175e52791113536043bd62d895",
                "deletions": 0,
                "filename": "api2/test/java/javax/jdo/identity/ObjectIdentityTest.java",
                "patch": "@@ -237,6 +237,14 @@ public void testStringDefaultDateConstructor() {\n             \"java.util.Date:\" + rightNow);\n     }\n \n+    public void testStringNullDateConstructor() {\n+        // this test uses the standard date-time format\n+        // \"M/d/yy h:mm a\"\n+        helper.registerDateFormat(DateFormat.getInstance());\n+        Object c1 = new ObjectIdentity(Object.class, \n+            \"java.util.Date:\" + \"10/9/2007 4:26 PM\");\n+    }\n+\n     public void testBadStringDateConstructor() {\n         try {\n             ObjectIdentity c1 = new ObjectIdentity(Object.class, ",
                "raw_url": "https://github.com/apache/db-jdo/raw/54fe46d56c05e9175e52791113536043bd62d895/api2/test/java/javax/jdo/identity/ObjectIdentityTest.java",
                "sha": "4e3e649877aa1f1b3bc4a70ac1c7356695120140",
                "status": "modified"
            }
        ],
        "message": "JDO-544 NullPointerException running with SecurityManager",
        "parent": "https://github.com/apache/db-jdo/commit/3b09169bd73b758d22c5043e120f6b2b99af1b30",
        "patched_files": [
            "JDOImplHelper.java",
            "ObjectIdentity.java"
        ],
        "repo": "db-jdo",
        "unit_tests": [
            "ObjectIdentityTest.java",
            "JDOImplHelperTest.java"
        ]
    },
    "db-jdo_66510c1": {
        "bug_id": "db-jdo_66510c1",
        "commit": "https://github.com/apache/db-jdo/commit/66510c1fa2d714847054a0b26073693a3b74b42d",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/db-jdo/blob/66510c1fa2d714847054a0b26073693a3b74b42d/api2-legacy/src/java/javax/jdo/JDOHelper.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/db-jdo/contents/api2-legacy/src/java/javax/jdo/JDOHelper.java?ref=66510c1fa2d714847054a0b26073693a3b74b42d",
                "deletions": 1,
                "filename": "api2-legacy/src/java/javax/jdo/JDOHelper.java",
                "patch": "@@ -946,7 +946,7 @@ public static PersistenceManagerFactory getPersistenceManagerFactory(\n                     // the PMF was configured by the given resource name\n                     // and not via named PMF for proper deserialization\n                     props.put(PROPERTY_SPI_RESOURCE_NAME, name);\n-                    props.put(PROPERTY_NAME, null);\n+//                  props.put(PROPERTY_NAME, null);\n                 }\n             }\n             catch (IOException ioe) {",
                "raw_url": "https://github.com/apache/db-jdo/raw/66510c1fa2d714847054a0b26073693a3b74b42d/api2-legacy/src/java/javax/jdo/JDOHelper.java",
                "sha": "4a166d67b733d8ab845b2b01da7ad7440e4deeae",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/db-jdo/blob/66510c1fa2d714847054a0b26073693a3b74b42d/api2/src/java/javax/jdo/JDOHelper.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/db-jdo/contents/api2/src/java/javax/jdo/JDOHelper.java?ref=66510c1fa2d714847054a0b26073693a3b74b42d",
                "deletions": 1,
                "filename": "api2/src/java/javax/jdo/JDOHelper.java",
                "patch": "@@ -1021,7 +1021,7 @@ public static PersistenceManagerFactory getPersistenceManagerFactory(\n                     // the PMF was configured by the given resource name\n                     // and not via named PMF for proper deserialization\n                     props.put(PROPERTY_SPI_RESOURCE_NAME, name);\n-                    props.put(PROPERTY_NAME, null);\n+//                  props.put(PROPERTY_NAME, null);\n                 }\n             }\n             catch (IOException ioe) {",
                "raw_url": "https://github.com/apache/db-jdo/raw/66510c1fa2d714847054a0b26073693a3b74b42d/api2/src/java/javax/jdo/JDOHelper.java",
                "sha": "02c9f74508b3342118743de1bb8f9848c7e6b634",
                "status": "modified"
            }
        ],
        "message": "JDO-545 Comment out line that causes NPE putting a null value into a Hashtable.",
        "parent": "https://github.com/apache/db-jdo/commit/061a84e7700a3e2e8e257545c3ae140ffa690b9a",
        "patched_files": [
            "JDOHelper.java"
        ],
        "repo": "db-jdo",
        "unit_tests": [
            "JDOHelperTest.java"
        ]
    }
}