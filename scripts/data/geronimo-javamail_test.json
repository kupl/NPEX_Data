{
    "geronimo-javamail_a38b346": {
        "bug_id": "geronimo-javamail_a38b346",
        "commit": "https://github.com/apache/geronimo-javamail/commit/a38b346cb034421b77089ec6b079d85ae87c9290",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/geronimo-javamail/blob/a38b346cb034421b77089ec6b079d85ae87c9290/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/geronimo-javamail/contents/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java?ref=a38b346cb034421b77089ec6b079d85ae87c9290",
                "deletions": 1,
                "filename": "geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java",
                "patch": "@@ -234,12 +234,21 @@ protected void closeOpenFolders() {\n     public boolean isConnected() {\n         try {\n             POP3Connection connection = getConnection(); \n+            // a null connection likely means we had a failure establishing a \n+            // new connection to the POP3 server.  \n+            if (connection == null) {\n+                return false; \n+            }\n             try {\n+                // make sure the server is really there \n                 connection.pingServer(); \n                 return true; \n             }\n             finally {\n-                releaseConnection(connection); \n+                // return the connection to the pool when finished \n+                if (connection != null) {\n+                    releaseConnection(connection); \n+                }\n             }\n         } catch (MessagingException e) {\n         }",
                "raw_url": "https://github.com/apache/geronimo-javamail/raw/a38b346cb034421b77089ec6b079d85ae87c9290/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java",
                "sha": "0778430b7dbbcb11f369b2b833c026cab2b688ea",
                "status": "modified"
            }
        ],
        "message": "GERONIMO-4241 NPE when calling folder.getDeletedMessageCount() for POP3 store\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/javamail/trunk@686218 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/geronimo-javamail/commit/ae656ad16f7f73976074763a51a4342a0018e90f",
        "patched_files": [
            "POP3Store.java"
        ],
        "repo": "geronimo-javamail",
        "unit_tests": [
            "POP3StoreTest.java"
        ]
    },
    "geronimo-javamail_e1c0df5": {
        "bug_id": "geronimo-javamail_e1c0df5",
        "commit": "https://github.com/apache/geronimo-javamail/commit/e1c0df5d8a3d8ebd5e20633c21c6d4c82e0841a7",
        "file": [
            {
                "additions": 48,
                "blob_url": "https://github.com/apache/geronimo-javamail/blob/e1c0df5d8a3d8ebd5e20633c21c6d4c82e0841a7/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Folder.java",
                "changes": 87,
                "contents_url": "https://api.github.com/repos/apache/geronimo-javamail/contents/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Folder.java?ref=e1c0df5d8a3d8ebd5e20633c21c6d4c82e0841a7",
                "deletions": 39,
                "filename": "geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Folder.java",
                "patch": "@@ -53,8 +53,6 @@\n \n     protected int mode;\n \n-    protected POP3Connection currentConnection; \n-\n     protected int msgCount;\n \n     private POP3Message[] messageCache; \n@@ -199,15 +197,11 @@ public void open(int mode) throws MessagingException {\n         // Can only be performed on a closed folder\n         checkClosed();\n \n+        // get a connection object \n+        POP3Connection connection = getConnection(); \n+        \n         try {\n-            \n-            // ask the store to kindly hook us up with a connection.\n-            // We're going to hang on to this until we're closed, so store it in \n-            // the Folder field.  We need to make sure our mailbox is selected while \n-            // we're working things. \n-            currentConnection = ((POP3Store)store).getFolderConnection(this); \n-\n-            POP3StatusResponse res = currentConnection.retrieveMailboxStatus();\n+            POP3StatusResponse res = connection.retrieveMailboxStatus();\n             this.mode = mode;\n             this.isFolderOpen = true;\n             this.msgCount = res.getNumMessages();\n@@ -221,6 +215,10 @@ public void open(int mode) throws MessagingException {\n         } catch (Exception e) {\n             throw new MessagingException(\"Unable to execute STAT command\", e);\n         }\n+        finally {\n+            // return the connection when finished \n+            releaseConnection(connection); \n+        }\n \n         notifyConnectionListeners(ConnectionEvent.OPENED);\n     }\n@@ -235,14 +233,19 @@ public void open(int mode) throws MessagingException {\n     public void close(boolean expunge) throws MessagingException {\n         // Can only be performed on an open folder\n         checkOpen();\n+\n+        // get a connection object \n+        POP3Connection connection = getConnection(); \n         try {\n             // we might need to reset the connection before we \n             // process deleted messages and send the QUIT.  The \n             // connection knows if we need to do this. \n-            currentConnection.reset(); \n+            connection.reset(); \n             // clean up any messages marked for deletion \n-            expungeDeletedMessages(); \n+            expungeDeletedMessages(connection); \n         } finally {\n+            // return the connection when finished \n+            releaseConnection(connection); \n             // cleanup the the state even if exceptions occur when deleting the \n             // messages. \n             cleanupFolder(false); \n@@ -251,11 +254,11 @@ public void close(boolean expunge) throws MessagingException {\n     \n     /**\n      * Mark any messages we've flagged as deleted from the \n-     * IMAP server before closing. \n+     * POP3 server before closing. \n      * \n      * @exception MessagingException\n      */\n-    protected void expungeDeletedMessages() throws MessagingException {\n+    protected void expungeDeletedMessages(POP3Connection connection) throws MessagingException {\n         if (mode == READ_WRITE) {\n             for (int i = 0; i < messageCache.length; i++) {\n                 POP3Message msg = messageCache[i]; \n@@ -265,7 +268,7 @@ protected void expungeDeletedMessages() throws MessagingException {\n                     // origin 1 value \n                     if (msg.isSet(Flags.Flag.DELETED)) {\n                         try {\n-                            currentConnection.deleteMessage(i + 1); \n+                            connection.deleteMessage(i + 1); \n                         } catch (MessagingException e) {\n                             throw new MessagingException(\"Exception deleting message number \" + (i + 1), e); \n                         }\n@@ -292,20 +295,6 @@ protected void expungeDeletedMessages() throws MessagingException {\n     protected void cleanupFolder(boolean disconnected) throws MessagingException {\n         messageCache = null;\n         isFolderOpen = false;\n-        // if we have a connection active at the moment\n-        if (currentConnection != null) {\n-            // was this a forced disconnect by the server?\n-            if (disconnected) {\n-                currentConnection.setClosed(); \n-            }\n-            else {\n-                // have this close the selected mailbox \n-                currentConnection.logout();           \n-            }\n-            // we need to release the connection to the Store once we're closed \n-            ((POP3Store)store).releaseFolderConnection(this, currentConnection); \n-            currentConnection = null; \n-        }\n \t\tnotifyConnectionListeners(ConnectionEvent.CLOSED);\n     }\n     \n@@ -319,15 +308,9 @@ protected void cleanupFolder(boolean disconnected) throws MessagingException {\n      * @exception MessagingException\n      */\n     synchronized POP3Connection getMessageConnection() throws MessagingException {\n-        // if we're not open, the messages can't communicate either\n-        if (currentConnection == null) {\n-            throw new FolderClosedException(this, \"No Folder connections available\"); \n-        }\n-        // return the current Folder connection.  At this point, we'll be sharing the \n-        // connection between the Folder and the Message (and potentially, other messages).  The \n-        // command operations on the connection are synchronized so only a single command can be \n-        // issued at one time. \n-        return currentConnection; \n+        // we always get one from the store.  If we're fully single threaded, then \n+        // we can get away with just a single one. \n+        return getConnection(); \n     }\n     \n     \n@@ -339,7 +322,8 @@ synchronized POP3Connection getMessageConnection() throws MessagingException {\n      * @exception MessagingException\n      */\n     void releaseMessageConnection(POP3Connection connection) throws MessagingException {\n-        // This is a NOP for this folder type. \n+        // give this back to the store \n+        releaseConnection(connection); \n     }\n \n     public boolean isOpen() {\n@@ -503,4 +487,29 @@ public void notifyMessageChangedListeners(int type, Message m) {\n         super.notifyMessageChangedListeners(type, m);\n     }\n \n+    \n+    /**\n+     * Retrieve the connection attached to this folder.  Throws an\n+     * exception if we don't have an active connection.\n+     *\n+     * @return The current connection object.\n+     * @exception MessagingException\n+     */\n+    protected synchronized POP3Connection getConnection() throws MessagingException {\n+        // request a connection from the central store. \n+        return ((POP3Store)store).getFolderConnection(this); \n+    }\n+    \n+    \n+    /**\n+     * Release our connection back to the Store.\n+     * \n+     * @param connection The connection to release.\n+     * \n+     * @exception MessagingException\n+     */\n+    protected void releaseConnection(POP3Connection connection) throws MessagingException {\n+        // we need to release the connection to the Store once we're finished with it \n+        ((POP3Store)store).releaseFolderConnection(this, connection); \n+    }\n }",
                "raw_url": "https://github.com/apache/geronimo-javamail/raw/e1c0df5d8a3d8ebd5e20633c21c6d4c82e0841a7/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Folder.java",
                "sha": "8fcfb4a495ce023c79372c3c2f16f971aadc0bda",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/geronimo-javamail/blob/e1c0df5d8a3d8ebd5e20633c21c6d4c82e0841a7/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/geronimo-javamail/contents/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java?ref=e1c0df5d8a3d8ebd5e20633c21c6d4c82e0841a7",
                "deletions": 3,
                "filename": "geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java",
                "patch": "@@ -171,25 +171,55 @@ protected synchronized boolean protocolConnect(String host, int port, String use\n     }\n     \n     \n+    /**\n+     * Get a connection for the store. \n+     * \n+     * @return The request connection object. \n+     * @exception MessagingException\n+     */\n     protected POP3Connection getConnection() throws MessagingException {\n         return connectionPool.getConnection(); \n     }\n     \n+    /**\n+     * Return a connection back to the connection pool after \n+     * it has been used for a request. \n+     * \n+     * @param connection The return connection.\n+     * \n+     * @exception MessagingException\n+     */\n     protected void releaseConnection(POP3Connection connection) throws MessagingException {\n         connectionPool.releaseConnection(connection); \n     }\n     \n+    /**\n+     * Get a connection object for a folder to use. \n+     * \n+     * @param folder The requesting folder (always the inbox for POP3).\n+     * \n+     * @return An active POP3Connection. \n+     * @exception MessagingException\n+     */\n     synchronized POP3Connection getFolderConnection(POP3Folder folder) throws MessagingException {\n         POP3Connection connection = connectionPool.getConnection(); \n         openFolders.add(folder);\n         return connection; \n     }\n     \n+    /**\n+     * Release a connection object after a folder is \n+     * finished with a request. \n+     * \n+     * @param folder     The requesting folder.\n+     * @param connection\n+     * \n+     * @exception MessagingException\n+     */\n     synchronized void releaseFolderConnection(POP3Folder folder, POP3Connection connection) throws MessagingException {\n         openFolders.remove(folder); \n-        // a connection returned from a folder is no longer usable. Just close it and \n-        // let it drift off. \n-        connection.close(); \n+        // return this back to the pool \n+        connectionPool.releaseConnection(connection); \n     }\n     \n     /**",
                "raw_url": "https://github.com/apache/geronimo-javamail/raw/e1c0df5d8a3d8ebd5e20633c21c6d4c82e0841a7/geronimo-javamail_1.4/geronimo-javamail_1.4_provider/src/main/java/org/apache/geronimo/javamail/store/pop3/POP3Store.java",
                "sha": "1c9d69eb1480827f7cbd658b107c2cfc701c2567",
                "status": "modified"
            }
        ],
        "message": "GERONIMO-4241 NPE when calling folder.getDeletedMessageCount() for POP3 store\n\nOptimize thread pool usage to only use a single connection for single-threaded operation. \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/javamail/trunk@689140 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/geronimo-javamail/commit/614209ebaaca3eb8f26a1df6b5eea36a867aaebe",
        "patched_files": [
            "POP3Store.java"
        ],
        "repo": "geronimo-javamail",
        "unit_tests": [
            "POP3StoreTest.java"
        ]
    }
}