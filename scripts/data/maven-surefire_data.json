[
    {
        "parent": "https://github.com/apache/maven-surefire/commit/f63d6ec83d85daa538d75803a749d08b08eed8ff",
        "bug_id": "maven-surefire_1",
        "file": [
            {
                "additions": 103,
                "sha": "bbbd9c4ed93104666595f97b0db810ef70653b3e",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a5300171935196e87dda7a03ec8f346628af7062/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/ConsoleOutputFileReporter.java",
                "deletions": 36,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/ConsoleOutputFileReporter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/ConsoleOutputFileReporter.java?ref=a5300171935196e87dda7a03ec8f346628af7062",
                "patch": "@@ -22,31 +22,39 @@\n import java.io.BufferedOutputStream;\n import java.io.File;\n import java.io.FileOutputStream;\n+import java.io.FilterOutputStream;\n import java.io.IOException;\n-import java.io.OutputStream;\n+import java.util.concurrent.atomic.AtomicStampedReference;\n+import java.util.concurrent.locks.ReentrantLock;\n \n+import org.apache.maven.surefire.booter.DumpErrorSingleton;\n import org.apache.maven.surefire.report.ReportEntry;\n \n import static org.apache.maven.plugin.surefire.report.FileReporter.getReportFile;\n \n /**\n  * Surefire output consumer proxy that writes test output to a {@link java.io.File} for each test suite.\n- * <br>\n- * This class is not threadsafe, but can be serially handed off from thread to thread.\n  *\n  * @author Kristian Rosenvold\n  * @author Carlos Sanchez\n  */\n public class ConsoleOutputFileReporter\n     implements TestcycleConsoleOutputReceiver\n {\n-    private final File reportsDirectory;\n+    private static final int STREAM_BUFFER_SIZE = 16 * 1024;\n+    private static final int OPEN = 0;\n+    private static final int CLOSED_TO_REOPEN = 1;\n+    private static final int CLOSED = 2;\n \n+    private final File reportsDirectory;\n     private final String reportNameSuffix;\n \n-    private String reportEntryName;\n+    private final AtomicStampedReference<FilterOutputStream> fileOutputStream =\n+            new AtomicStampedReference<FilterOutputStream>( null, OPEN );\n \n-    private OutputStream fileOutputStream;\n+    private final ReentrantLock lock = new ReentrantLock();\n+\n+    private volatile String reportEntryName;\n \n     public ConsoleOutputFileReporter( File reportsDirectory, String reportNameSuffix )\n     {\n@@ -57,8 +65,15 @@ public ConsoleOutputFileReporter( File reportsDirectory, String reportNameSuffix\n     @Override\n     public void testSetStarting( ReportEntry reportEntry )\n     {\n-        close();\n-        reportEntryName = reportEntry.getName();\n+        lock.lock();\n+        try\n+        {\n+            closeNullReportFile( reportEntry );\n+        }\n+        finally\n+        {\n+            lock.unlock();\n+        }\n     }\n \n     @Override\n@@ -67,53 +82,105 @@ public void testSetCompleted( ReportEntry report )\n     }\n \n     @Override\n-    @SuppressWarnings( \"checkstyle:emptyblock\" )\n     public void close()\n     {\n-        if ( fileOutputStream != null )\n+        // The close() method is called in main Thread T2.\n+        lock.lock();\n+        try\n         {\n-            //noinspection EmptyCatchBlock\n-            try\n-            {\n-                fileOutputStream.flush();\n-            }\n-            catch ( IOException e )\n-            {\n-            }\n-            finally\n-            {\n-                try\n-                {\n-                    fileOutputStream.close();\n-                }\n-                catch ( IOException ignored )\n-                {\n-                }\n-            }\n-            fileOutputStream = null;\n+            closeReportFile();\n+        }\n+        finally\n+        {\n+            lock.unlock();\n         }\n     }\n \n     @Override\n     public void writeTestOutput( byte[] buf, int off, int len, boolean stdout )\n     {\n+        lock.lock();\n         try\n         {\n-            if ( fileOutputStream == null )\n+            // This method is called in single thread T1 per fork JVM (see ThreadedStreamConsumer).\n+            // The close() method is called in main Thread T2.\n+            int[] status = new int[1];\n+            FilterOutputStream os = fileOutputStream.get( status );\n+            if ( status[0] != CLOSED )\n             {\n-                if ( !reportsDirectory.exists() )\n+                if ( os == null )\n                 {\n-                    //noinspection ResultOfMethodCallIgnored\n-                    reportsDirectory.mkdirs();\n+                    if ( !reportsDirectory.exists() )\n+                    {\n+                        //noinspection ResultOfMethodCallIgnored\n+                        reportsDirectory.mkdirs();\n+                    }\n+                    File file = getReportFile( reportsDirectory, reportEntryName, reportNameSuffix, \"-output.txt\" );\n+                    os = new BufferedOutputStream( new FileOutputStream( file ), STREAM_BUFFER_SIZE );\n+                    fileOutputStream.set( os, OPEN );\n                 }\n-                File file = getReportFile( reportsDirectory, reportEntryName, reportNameSuffix, \"-output.txt\" );\n-                fileOutputStream = new BufferedOutputStream( new FileOutputStream( file ), 16 * 1024 );\n+                os.write( buf, off, len );\n             }\n-            fileOutputStream.write( buf, off, len );\n         }\n         catch ( IOException e )\n         {\n+            DumpErrorSingleton.getSingleton()\n+                    .dumpException( e );\n+\n             throw new RuntimeException( e );\n         }\n+        finally\n+        {\n+            lock.unlock();\n+        }\n+    }\n+\n+    @SuppressWarnings( \"checkstyle:emptyblock\" )\n+    private void closeNullReportFile( ReportEntry reportEntry )\n+    {\n+        try\n+        {\n+            // close null-output.txt report file\n+            close( true );\n+        }\n+        catch ( IOException ignored )\n+        {\n+            DumpErrorSingleton.getSingleton()\n+                    .dumpException( ignored );\n+        }\n+        finally\n+        {\n+            // prepare <class>-output.txt report file\n+            reportEntryName = reportEntry.getName();\n+        }\n+    }\n+\n+    @SuppressWarnings( \"checkstyle:emptyblock\" )\n+    private void closeReportFile()\n+    {\n+        try\n+        {\n+            close( false );\n+        }\n+        catch ( IOException ignored )\n+        {\n+            DumpErrorSingleton.getSingleton()\n+                    .dumpException( ignored );\n+        }\n+    }\n+\n+    private void close( boolean closeReattempt )\n+            throws IOException\n+    {\n+        int[] status = new int[1];\n+        FilterOutputStream os = fileOutputStream.get( status );\n+        if ( status[0] != CLOSED )\n+        {\n+            fileOutputStream.set( null, closeReattempt ? CLOSED_TO_REOPEN : CLOSED );\n+            if ( os != null && status[0] == OPEN )\n+            {\n+                os.close();\n+            }\n+        }\n     }\n }",
                "changes": 139,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a5300171935196e87dda7a03ec8f346628af7062/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/ConsoleOutputFileReporter.java"
            },
            {
                "additions": 89,
                "sha": "df011d94c37ea9be6a472aded6418be23d04d2ae",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a5300171935196e87dda7a03ec8f346628af7062/maven-surefire-common/src/test/java/org/apache/maven/surefire/report/ConsoleOutputFileReporterTest.java",
                "deletions": 17,
                "filename": "maven-surefire-common/src/test/java/org/apache/maven/surefire/report/ConsoleOutputFileReporterTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/test/java/org/apache/maven/surefire/report/ConsoleOutputFileReporterTest.java?ref=a5300171935196e87dda7a03ec8f346628af7062",
                "patch": "@@ -21,6 +21,10 @@\n \n import java.io.File;\n import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n \n import org.apache.maven.plugin.surefire.report.ConsoleOutputFileReporter;\n \n@@ -33,32 +37,29 @@\n public class ConsoleOutputFileReporterTest\n     extends TestCase\n {\n-\n-    private ConsoleOutputFileReporter reporter;\n-\n-    private ReportEntry reportEntry;\n-\n-    private static final String testName = ConsoleOutputFileReporterTest.class.getName();\n-\n     /*\n      * Test method for 'org.codehaus.surefire.report.ConsoleOutputFileReporter.testSetCompleted(ReportEntry report)'\n      */\n     public void testFileNameWithoutSuffix() throws IOException\n     {\n-        File reportDir = new File( new File( System.getProperty( \"user.dir\" ), \"target\" ), \"tmp\" );\n+        File reportDir = new File( new File( System.getProperty( \"user.dir\" ), \"target\" ), \"tmp1\" );\n         //noinspection ResultOfMethodCallIgnored\n         reportDir.mkdirs();\n-        reportEntry = new SimpleReportEntry( getClass().getName(), testName );\n-        reporter = new ConsoleOutputFileReporter( reportDir, null );\n+        ReportEntry reportEntry = new SimpleReportEntry( getClass().getName(), getClass().getName() );\n+        ConsoleOutputFileReporter reporter = new ConsoleOutputFileReporter( reportDir, null );\n         reporter.testSetStarting( reportEntry );\n         reporter.writeTestOutput( \"some text\".getBytes( US_ASCII ), 0, 5, true );\n         reporter.testSetCompleted( reportEntry );\n         reporter.close();\n \n-        File expectedReportFile = new File( reportDir, testName + \"-output.txt\" );\n+        File expectedReportFile = new File( reportDir, getClass().getName() + \"-output.txt\" );\n+\n         assertTrue( \"Report file (\" + expectedReportFile.getAbsolutePath() + \") doesn't exist\",\n                     expectedReportFile.exists() );\n-        assertThat( FileUtils.fileRead( expectedReportFile, US_ASCII.name() ) ).contains( \"some \" );\n+\n+        assertThat( FileUtils.fileRead( expectedReportFile, US_ASCII.name() ) )\n+                .contains( \"some \" );\n+\n         //noinspection ResultOfMethodCallIgnored\n         expectedReportFile.delete();\n     }\n@@ -68,23 +69,94 @@ public void testFileNameWithoutSuffix() throws IOException\n      */\n     public void testFileNameWithSuffix() throws IOException\n     {\n-        File reportDir = new File( new File( System.getProperty( \"user.dir\" ), \"target\" ), \"tmp\" );\n+        File reportDir = new File( new File( System.getProperty( \"user.dir\" ), \"target\" ), \"tmp2\" );\n         //noinspection ResultOfMethodCallIgnored\n         reportDir.mkdirs();\n         String suffixText = \"sampleSuffixText\";\n-        reportEntry = new SimpleReportEntry( getClass().getName(), testName );\n-        reporter = new ConsoleOutputFileReporter( reportDir, suffixText );\n+        ReportEntry reportEntry = new SimpleReportEntry( getClass().getName(), getClass().getName() );\n+        ConsoleOutputFileReporter reporter = new ConsoleOutputFileReporter( reportDir, suffixText );\n         reporter.testSetStarting( reportEntry );\n         reporter.writeTestOutput( \"some text\".getBytes( US_ASCII ), 0, 5, true );\n         reporter.testSetCompleted( reportEntry );\n         reporter.close();\n \n-        File expectedReportFile = new File( reportDir, testName + \"-\" + suffixText + \"-output.txt\" );\n+        File expectedReportFile = new File( reportDir, getClass().getName() + \"-\" + suffixText + \"-output.txt\" );\n+\n         assertTrue( \"Report file (\" + expectedReportFile.getAbsolutePath() + \") doesn't exist\",\n                     expectedReportFile.exists() );\n-        assertThat( FileUtils.fileRead( expectedReportFile, US_ASCII.name() ) ).contains( \"some \" );\n+\n+        assertThat( FileUtils.fileRead( expectedReportFile, US_ASCII.name() ) )\n+                .contains( \"some \" );\n+\n+        //noinspection ResultOfMethodCallIgnored\n+        expectedReportFile.delete();\n+    }\n+\n+    public void testNullReportFile() throws IOException\n+    {\n+        File reportDir = new File( new File( System.getProperty( \"user.dir\" ), \"target\" ), \"tmp3\" );\n+        //noinspection ResultOfMethodCallIgnored\n+        reportDir.mkdirs();\n+        ConsoleOutputFileReporter reporter = new ConsoleOutputFileReporter( reportDir, null );\n+        reporter.writeTestOutput( \"some text\".getBytes( US_ASCII ), 0, 5, true );\n+        reporter.testSetCompleted( new SimpleReportEntry( getClass().getName(), getClass().getName() ) );\n+        reporter.close();\n+\n+        File expectedReportFile = new File( reportDir, \"null-output.txt\" );\n+\n+        assertTrue( \"Report file (\" + expectedReportFile.getAbsolutePath() + \") doesn't exist\",\n+                expectedReportFile.exists() );\n+\n+        assertThat( FileUtils.fileRead( expectedReportFile, US_ASCII.name() ) )\n+                .contains( \"some \" );\n+\n         //noinspection ResultOfMethodCallIgnored\n         expectedReportFile.delete();\n     }\n \n+    public void testConcurrentAccessReportFile() throws Exception\n+    {\n+        File reportDir = new File( new File( System.getProperty( \"user.dir\" ), \"target\" ), \"tmp4\" );\n+        //noinspection ResultOfMethodCallIgnored\n+        reportDir.mkdirs();\n+        final ConsoleOutputFileReporter reporter = new ConsoleOutputFileReporter( reportDir, null );\n+        reporter.testSetStarting( new SimpleReportEntry( getClass().getName(), getClass().getName() ) );\n+        ExecutorService scheduler = Executors.newFixedThreadPool( 10 );\n+        final ArrayList<Callable<Void>> jobs = new ArrayList<Callable<Void>>();\n+        for ( int i = 0; i < 10; i++ )\n+        {\n+            jobs.add( new Callable<Void>() {\n+                @Override\n+                public Void call()\n+                {\n+                    byte[] stream = \"some text\\n\".getBytes( US_ASCII );\n+                    reporter.writeTestOutput( stream, 0, stream.length, true );\n+                    return null;\n+                }\n+            } );\n+        }\n+        scheduler.invokeAll( jobs );\n+        scheduler.shutdown();\n+        reporter.close();\n+\n+        File expectedReportFile = new File( reportDir, getClass().getName() + \"-output.txt\" );\n+\n+        assertTrue( \"Report file (\" + expectedReportFile.getAbsolutePath() + \") doesn't exist\",\n+                expectedReportFile.exists() );\n+\n+        assertThat( FileUtils.fileRead( expectedReportFile, US_ASCII.name() ) )\n+                .contains( \"some text\" );\n+\n+        StringBuilder expectedText = new StringBuilder();\n+        for ( int i = 0; i < 10; i++ )\n+        {\n+            expectedText.append( \"some text\\n\" );\n+        }\n+\n+        assertThat( FileUtils.fileRead( expectedReportFile, US_ASCII.name() ) )\n+                .isEqualTo( expectedText.toString() );\n+\n+        //noinspection ResultOfMethodCallIgnored\n+        expectedReportFile.delete();\n+    }\n }",
                "changes": 106,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a5300171935196e87dda7a03ec8f346628af7062/maven-surefire-common/src/test/java/org/apache/maven/surefire/report/ConsoleOutputFileReporterTest.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1506] Sporadic NullPointerException in ConsoleOutputFileReporter#close()",
        "commit": "https://github.com/apache/maven-surefire/commit/a5300171935196e87dda7a03ec8f346628af7062"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/47af38f54e20beeac1c98202521157c5e1d4d8df",
        "bug_id": "maven-surefire_2",
        "file": [
            {
                "additions": 9,
                "sha": "dca5c564adaa173dd323144ac8dcc6bc394c6782",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "deletions": 8,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -96,6 +96,7 @@\n import java.io.IOException;\n import java.lang.reflect.Array;\n import java.lang.reflect.Method;\n+import java.math.BigDecimal;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Enumeration;\n@@ -115,18 +116,17 @@\n import static java.util.Arrays.asList;\n import static java.util.Collections.addAll;\n import static java.util.Collections.singletonMap;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_RECENT;\n import static org.apache.commons.lang3.StringUtils.substringBeforeLast;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS;\n-import static org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast;\n import static org.apache.maven.shared.utils.StringUtils.capitalizeFirstLetter;\n import static org.apache.maven.shared.utils.StringUtils.isEmpty;\n import static org.apache.maven.shared.utils.StringUtils.isNotBlank;\n import static org.apache.maven.shared.utils.StringUtils.isNotEmpty;\n import static org.apache.maven.shared.utils.StringUtils.split;\n+import static org.apache.maven.surefire.booter.SystemUtils.JAVA_SPECIFICATION_VERSION;\n import static org.apache.maven.surefire.booter.SystemUtils.endsWithJavaPath;\n+import static org.apache.maven.surefire.booter.SystemUtils.isBuiltInJava7AtLeast;\n+import static org.apache.maven.surefire.booter.SystemUtils.isBuiltInJava9AtLeast;\n import static org.apache.maven.surefire.booter.SystemUtils.isJava9AtLeast;\n import static org.apache.maven.surefire.booter.SystemUtils.toJdkHomeFromJvmExec;\n import static org.apache.maven.surefire.booter.SystemUtils.toJdkVersionFromReleaseFile;\n@@ -2208,7 +2208,7 @@ private JdkAttributes getEffectiveJvm() throws MojoFailureException\n             }\n \n             File jdkHome = toJdkHomeFromJvmExec( pathToJava.getPath() );\n-            Double version = jdkHome == null ? null : toJdkVersionFromReleaseFile( jdkHome );\n+            BigDecimal version = jdkHome == null ? null : toJdkVersionFromReleaseFile( jdkHome );\n             boolean javaVersion9 = version == null ? isJava9AtLeast( pathToJava.getPath() ) : isJava9AtLeast( version );\n             return new JdkAttributes( pathToJava.getPath(), javaVersion9 );\n         }\n@@ -2238,9 +2238,10 @@ private JdkAttributes getEffectiveJvm() throws MojoFailureException\n \n         // use the same JVM as the one used to run Maven (the \"java.home\" one)\n         String jvmToUse = System.getProperty( \"java.home\" ) + File.separator + \"bin\" + File.separator + \"java\";\n-        getConsoleLogger().debug( \"Using JVM: \" + jvmToUse + \" with Java version \" + JAVA_RECENT.toString() );\n+        getConsoleLogger().debug( \"Using JVM: \" + jvmToUse + \" with Java version \"\n+                + JAVA_SPECIFICATION_VERSION.toPlainString() );\n \n-        return new JdkAttributes( jvmToUse, isJavaVersionAtLeast( JAVA_9 ) );\n+        return new JdkAttributes( jvmToUse, isBuiltInJava9AtLeast() );\n     }\n \n     private Artifact getSurefireBooterArtifact()\n@@ -3043,7 +3044,7 @@ File createSurefireBootDirectoryInBuild()\n     // todo use Java7 java.nio.file.Files.createTempDirectory()\n     File createSurefireBootDirectoryInTemp()\n     {\n-        if ( isJavaVersionAtLeast( JAVA_1_7 ) )\n+        if ( isBuiltInJava7AtLeast() )\n         {\n             try\n             {",
                "changes": 17,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java"
            },
            {
                "additions": 3,
                "sha": "0fbe91ba1afd7dea8ba84abb8470cc4a617b533e",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java",
                "deletions": 4,
                "filename": "maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -57,9 +57,8 @@\n import static java.io.File.separatorChar;\n import static java.util.Arrays.asList;\n import static java.util.Collections.singleton;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS;\n-import static org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast;\n+import static org.apache.maven.surefire.booter.SystemUtils.isBuiltInJava7AtLeast;\n import static org.fest.assertions.Assertions.assertThat;\n import static org.junit.Assume.assumeTrue;\n import static org.mockito.ArgumentMatchers.anyString;\n@@ -326,7 +325,7 @@ public void shouldHaveStartupConfigForModularClasspath()\n     @Test\n     public void shouldHaveTmpDirectory() throws IOException\n     {\n-        assumeTrue( isJavaVersionAtLeast( JAVA_1_7 ) );\n+        assumeTrue( isBuiltInJava7AtLeast() );\n \n         Path path = ( Path ) AbstractSurefireMojo.createTmpDirectoryWithJava7( \"surefire\" );\n \n@@ -348,7 +347,7 @@ public void shouldHaveTmpDirectory() throws IOException\n     @Test\n     public void shouldHaveTmpDirectoryName() throws IOException\n     {\n-        assumeTrue( isJavaVersionAtLeast( JAVA_1_7 ) );\n+        assumeTrue( isBuiltInJava7AtLeast() );\n \n         String dir = AbstractSurefireMojo.createTmpDirectoryNameWithJava7( \"surefire\" );\n ",
                "changes": 7,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java"
            },
            {
                "additions": 63,
                "sha": "0a68a80bc92109d12c1a78a1e25d5c05c0ddc9ef",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java",
                "deletions": 14,
                "filename": "surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -29,19 +29,18 @@\n import java.io.InputStream;\n import java.lang.management.ManagementFactory;\n import java.lang.reflect.Method;\n+import java.math.BigDecimal;\n import java.util.Properties;\n import java.util.StringTokenizer;\n \n+import static java.lang.Character.isDigit;\n import static java.lang.Thread.currentThread;\n import static org.apache.commons.io.IOUtils.closeQuietly;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_RECENT;\n import static org.apache.commons.lang3.StringUtils.isNumeric;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_FREE_BSD;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_LINUX;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_NET_BSD;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_OPEN_BSD;\n-import static org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast;\n import static org.apache.maven.surefire.util.ReflectionUtils.invokeMethodChain;\n import static org.apache.maven.surefire.util.ReflectionUtils.tryLoadClass;\n import static org.apache.maven.surefire.util.internal.ObjectUtils.requireNonNull;\n@@ -54,7 +53,11 @@\n  */\n public final class SystemUtils\n {\n-    private static final double JIGSAW_JAVA_VERSION = 9.0d;\n+    public static final BigDecimal JAVA_SPECIFICATION_VERSION = getJavaSpecificationVersion();\n+\n+    private static final BigDecimal JAVA_VERSION_7 = new BigDecimal( \"1.7\" );\n+\n+    private static final BigDecimal JIGSAW_JAVA_VERSION = new BigDecimal( 9 );\n \n     private static final int PROC_STATUS_PID_FIRST_CHARS = 20;\n \n@@ -127,7 +130,7 @@ static File toJdkHomeFromJre( String jreHome )\n         return \"jre\".equals( pathToJreOrJdk.getName() ) ? pathToJreOrJdk.getParentFile() : pathToJreOrJdk;\n     }\n \n-    public static Double toJdkVersionFromReleaseFile( File jdkHome )\n+    public static BigDecimal toJdkVersionFromReleaseFile( File jdkHome )\n     {\n         File release = new File( requireNonNull( jdkHome ).getAbsoluteFile(), \"release\" );\n         if ( !release.isFile() )\n@@ -158,7 +161,7 @@ else if ( versions.countTokens() >= 2 )\n                 return null;\n             }\n \n-            return Double.valueOf( javaVersion );\n+            return new BigDecimal( javaVersion );\n         }\n         catch ( IOException e )\n         {\n@@ -170,6 +173,43 @@ else if ( versions.countTokens() >= 2 )\n         }\n     }\n \n+    /**\n+     * Safely extracts major and minor version as fractional number from\n+     * <pre>\n+     *     $MAJOR.$MINOR.$SECURITY\n+     * </pre>.\n+     * <br>\n+     *     The security version is usually not needed to know.\n+     *     It can be applied to not certified JRE.\n+     *\n+     * @return major.minor version derived from java specification version of <em>this</em> JVM, e.g. 1.8, 9, etc.\n+     */\n+    private static BigDecimal getJavaSpecificationVersion()\n+    {\n+        StringBuilder fractionalVersion = new StringBuilder( \"0\" );\n+        for ( char c : org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VERSION.toCharArray() )\n+        {\n+            if ( isDigit( c ) )\n+            {\n+                fractionalVersion.append( c );\n+            }\n+            else if ( c == '.' )\n+            {\n+                if ( fractionalVersion.indexOf( \".\" ) == -1 )\n+                {\n+                    fractionalVersion.append( '.' );\n+                }\n+                else\n+                {\n+                    break;\n+                }\n+            }\n+        }\n+        String majorMinorVersion = fractionalVersion.toString();\n+        return new BigDecimal( majorMinorVersion.endsWith( \".\" ) ? majorMinorVersion + \"0\" : majorMinorVersion )\n+                .stripTrailingZeros();\n+    }\n+\n     public static boolean isJava9AtLeast( String jvmExecutablePath )\n     {\n         File externalJavaHome = toJdkHomeFromJvmExec( jvmExecutablePath );\n@@ -178,23 +218,32 @@ public static boolean isJava9AtLeast( String jvmExecutablePath )\n         {\n             return isBuiltInJava9AtLeast();\n         }\n-        Double releaseFileVersion = externalJavaHome == null ? null : toJdkVersionFromReleaseFile( externalJavaHome );\n-        return SystemUtils.isJava9AtLeast( releaseFileVersion );\n+        else\n+        {\n+            BigDecimal releaseFileVersion =\n+                    externalJavaHome == null ? null : toJdkVersionFromReleaseFile( externalJavaHome );\n+            return isJava9AtLeast( releaseFileVersion );\n+        }\n+    }\n+\n+    public static boolean isBuiltInJava9AtLeast()\n+    {\n+        return JAVA_SPECIFICATION_VERSION.compareTo( JIGSAW_JAVA_VERSION ) >= 0;\n     }\n \n-    static boolean isBuiltInJava9AtLeast()\n+    public static boolean isBuiltInJava7AtLeast()\n     {\n-        return isJavaVersionAtLeast( JAVA_9 );\n+        return JAVA_SPECIFICATION_VERSION.compareTo( JAVA_VERSION_7 ) >= 0;\n     }\n \n-    public static boolean isJava9AtLeast( Double version )\n+    public static boolean isJava9AtLeast( BigDecimal version )\n     {\n-        return version != null && version >= JIGSAW_JAVA_VERSION;\n+        return version != null && version.compareTo( JIGSAW_JAVA_VERSION ) >= 0;\n     }\n \n     public static ClassLoader platformClassLoader()\n     {\n-        if ( JAVA_RECENT.atLeast( JAVA_9 ) )\n+        if ( isBuiltInJava9AtLeast() )\n         {\n             return reflectClassLoader( ClassLoader.class, \"getPlatformClassLoader\" );\n         }\n@@ -203,7 +252,7 @@ public static ClassLoader platformClassLoader()\n \n     public static Long pid()\n     {\n-        if ( JAVA_RECENT.atLeast( JAVA_9 ) )\n+        if ( isBuiltInJava9AtLeast() )\n         {\n             Long pid = pidOnJava9();\n             if ( pid != null )",
                "changes": 77,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java"
            },
            {
                "additions": 15,
                "sha": "d1ba04fd04f61dae9ceee2792d475f76fc3db073",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java",
                "deletions": 6,
                "filename": "surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -22,13 +22,13 @@\n import org.junit.Test;\n import org.junit.experimental.runners.Enclosed;\n import org.junit.runner.RunWith;\n-import org.mockito.Mockito;\n import org.powermock.core.classloader.annotations.PrepareForTest;\n import org.powermock.modules.junit4.PowerMockRunner;\n \n import java.io.File;\n import java.io.IOException;\n import java.lang.management.ManagementFactory;\n+import java.math.BigDecimal;\n \n import static java.io.File.separator;\n import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n@@ -40,12 +40,12 @@\n import static org.fest.assertions.Assertions.assertThat;\n import static org.junit.Assume.assumeTrue;\n import static org.mockito.Matchers.any;\n-import static org.mockito.Matchers.anyDouble;\n import static org.mockito.Matchers.anyString;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.when;\n import static org.powermock.api.mockito.PowerMockito.mockStatic;\n import static org.powermock.api.mockito.PowerMockito.verifyStatic;\n+import static org.powermock.reflect.Whitebox.invokeMethod;\n \n /**\n  * Test of {@link SystemUtils}.\n@@ -59,6 +59,15 @@\n     public static class PlainUnitTests\n     {\n \n+        @Test\n+        public void shouldMatchJavaSpecVersion() throws Exception\n+        {\n+            BigDecimal actual = invokeMethod( SystemUtils.class, \"getJavaSpecificationVersion\" );\n+            BigDecimal expected = new BigDecimal( System.getProperty( \"java.specification.version\" ) );\n+            assertThat( actual ).isEqualTo( expected );\n+            assertThat( SystemUtils.JAVA_SPECIFICATION_VERSION ).isEqualTo( expected );\n+        }\n+\n         @Test\n         public void shouldParseProprietaryReleaseFile() throws IOException\n         {\n@@ -169,9 +178,9 @@ public void shouldExtractJdkHomeFromRealPath()\n         @Test\n         public void shouldBeJavaVersion()\n         {\n-            assertThat( SystemUtils.isJava9AtLeast( (Double) null ) ).isFalse();\n-            assertThat( SystemUtils.isJava9AtLeast( 1.8d ) ).isFalse();\n-            assertThat( SystemUtils.isJava9AtLeast( 9.0d ) ).isTrue();\n+            assertThat( SystemUtils.isJava9AtLeast( (BigDecimal ) null ) ).isFalse();\n+            assertThat( SystemUtils.isJava9AtLeast( new BigDecimal( \"1.8\" ) ) ).isFalse();\n+            assertThat( SystemUtils.isJava9AtLeast( new BigDecimal( 9 ) ) ).isTrue();\n         }\n \n         @Test\n@@ -328,7 +337,7 @@ private static void testIsJava9AtLeast( File pathInJdk ) throws IOException\n             when( SystemUtils.toJdkVersionFromReleaseFile( any( File.class ) ) )\n                     .thenCallRealMethod();\n \n-            when( SystemUtils.isJava9AtLeast( anyDouble() ) )\n+            when( SystemUtils.isJava9AtLeast( any( BigDecimal.class ) ) )\n                     .thenCallRealMethod();\n \n             if ( JAVA_RECENT.atLeast( JAVA_9 ) )",
                "changes": 21,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java"
            },
            {
                "additions": 8,
                "sha": "5063a2d7aef8c85468ff99526a1b7aac9013bfee",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java",
                "deletions": 5,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -29,8 +29,6 @@\n import java.util.Properties;\n import java.util.StringTokenizer;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_RECENT;\n import static org.junit.Assert.fail;\n import static org.junit.Assume.assumeTrue;\n \n@@ -52,7 +50,7 @@\n     protected SurefireLauncher assumeJigsaw() throws IOException\n     {\n         assumeTrue( \"There's no JDK 9 provided.\",\n-                          JAVA_RECENT.atLeast( JAVA_9 ) || JDK_HOME != null && isExtJava9AtLeast() );\n+                          isJavaVersion9AtLeast() || JDK_HOME != null && isExtJavaVerion9AtLeast() );\n         // fail( JDK_HOME_KEY + \" was provided with value \" + JDK_HOME + \" but it is not Jigsaw Java 9.\" );\n \n         SurefireLauncher launcher = unpack();\n@@ -67,7 +65,7 @@ protected SurefireLauncher assumeJigsaw() throws IOException\n \n     protected SurefireLauncher assumeJava9Property() throws IOException\n     {\n-        assumeTrue( \"There's no JDK 9 provided.\", JDK_HOME != null && isExtJava9AtLeast() );\n+        assumeTrue( \"There's no JDK 9 provided.\", JDK_HOME != null && isExtJavaVerion9AtLeast() );\n         return unpack();\n     }\n \n@@ -76,7 +74,12 @@ private SurefireLauncher unpack()\n         return unpack( getProjectDirectoryName() );\n     }\n \n-    private static boolean isExtJava9AtLeast() throws IOException\n+    private static boolean isJavaVersion9AtLeast()\n+    {\n+        return Double.valueOf( System.getProperty( \"java.specification.version\" ) ) >= JIGSAW_JAVA_VERSION;\n+    }\n+\n+    private static boolean isExtJavaVerion9AtLeast() throws IOException\n     {\n         File release = new File( JDK_HOME, \"release\" );\n ",
                "changes": 13,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java"
            },
            {
                "additions": 9,
                "sha": "2c618d08368787f9af90b12615420b65255702b5",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java",
                "deletions": 12,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -19,7 +19,6 @@\n  * under the License.\n  */\n \n-import org.apache.commons.lang3.JavaVersion;\n import org.apache.maven.surefire.its.fixture.SurefireJUnit4IntegrationTestCase;\n import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n import org.junit.Test;\n@@ -29,8 +28,6 @@\n import java.util.Arrays;\n import java.util.Collection;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_5;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n import static org.junit.runners.Parameterized.Parameter;\n import static org.junit.runners.Parameterized.Parameters;\n@@ -49,10 +46,10 @@\n     public static Collection<Object[]> data()\n     {\n         return Arrays.asList(new Object[][] {\n-            { \"5.6\", \"jdk15\", JAVA_1_5 }, // First TestNG version with reporter support\n-            { \"5.7\", \"jdk15\", JAVA_1_5 }, // default version from pom of the test case\n-            { \"5.10\", \"jdk15\", JAVA_1_5 },\n-            { \"5.13\", null, JAVA_1_5 }, // \"reporterslist\" param becomes String instead of List<ReporterConfig>\n+            { \"5.6\", \"jdk15\", 1.5d }, // First TestNG version with reporter support\n+            { \"5.7\", \"jdk15\", 1.5d }, // default version from pom of the test case\n+            { \"5.10\", \"jdk15\", 1.5d },\n+            { \"5.13\", null, 1.5d }, // \"reporterslist\" param becomes String instead of List<ReporterConfig>\n                         // \"listener\" param becomes String instead of List<Class>\n \n                 // configure(Map) in 5.14.1 and 5.14.2 is transforming List<Class> into a String with a space as separator.\n@@ -71,10 +68,10 @@\n             //{ \"5.14.4\", null, \"1.5\" }, { \"5.14.5\", null, \"1.5\" }, // Fails: not able to test due to system dependency org.testng:guice missed the path and use to break CI\n                                         // ClassNotFoundException: com.beust.jcommander.ParameterException\n \n-            { \"5.14.6\", null, JAVA_1_5 }, // Usage of org.testng:guice removed\n-            { \"5.14.9\", null, JAVA_1_5 }, // Latest 5.14.x TestNG version\n-            { \"6.0\", null, JAVA_1_5 },\n-            { \"6.9.9\", null, JAVA_1_7 } // Currently latest TestNG version\n+            { \"5.14.6\", null, 1.5d }, // Usage of org.testng:guice removed\n+            { \"5.14.9\", null, 1.5d }, // Latest 5.14.x TestNG version\n+            { \"6.0\", null, 1.5d },\n+            { \"6.9.9\", null, 1.7d } // Currently latest TestNG version\n         });\n     }\n \n@@ -85,7 +82,7 @@\n     public String classifier;\n \n     @Parameter(2)\n-    public JavaVersion javaVersion;\n+    public double javaVersion;\n \n     @Test\n     public void testNgListenerReporter()",
                "changes": 21,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java"
            },
            {
                "additions": 1,
                "sha": "38c2eae8324c6f9180b226c23dbcfad04a24fa93",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java",
                "deletions": 2,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -23,7 +23,6 @@\n import org.junit.Before;\n import org.junit.Test;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_6;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n \n /**\n@@ -41,7 +40,7 @@\n     @Before\n     public void assumeJdk16()\n     {\n-        assumeJavaVersion( JAVA_1_6 );\n+        assumeJavaVersion( 1.6d );\n     }\n \n     @Test",
                "changes": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java"
            },
            {
                "additions": 4,
                "sha": "ed0d40cf55cce0816943392059d62afe79308f32",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java",
                "deletions": 6,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -18,8 +18,6 @@\n  * under the License.\n  */\n \n-import org.apache.commons.lang3.JavaVersion;\n-import org.apache.commons.lang3.SystemUtils;\n import org.apache.maven.plugin.surefire.log.api.ConsoleLogger;\n import org.apache.maven.plugin.surefire.log.api.PrintStreamLogger;\n import org.apache.maven.plugins.surefire.report.ReportTestSuite;\n@@ -32,7 +30,6 @@\n \n import static junit.framework.Assert.assertEquals;\n import static junit.framework.Assert.assertTrue;\n-import static org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VERSION;\n import static org.junit.Assume.assumeTrue;\n \n @SuppressWarnings( { \"JavaDoc\" } )\n@@ -168,9 +165,10 @@ public static IntegrationTestSuiteResults parseReportList( List<ReportTestSuite>\n         }\n     }\n \n-    public static void assumeJavaVersion( JavaVersion version )\n+    public static void assumeJavaVersion( double expectedVersion )\n     {\n-        assumeTrue( \"java.specification.version: \" + JAVA_SPECIFICATION_VERSION,\n-                SystemUtils.isJavaVersionAtLeast( version ) );\n+        String thisVersion = System.getProperty( \"java.specification.version\" );\n+        assumeTrue( \"java.specification.version: \" + thisVersion,\n+                Double.valueOf( thisVersion ) >= expectedVersion );\n     }\n }",
                "changes": 10,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java"
            },
            {
                "additions": 1,
                "sha": "8c2c21363efed4f6fe212812e389b2d04ef7bb02",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java",
                "deletions": 2,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -24,7 +24,6 @@\n import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n import org.junit.Test;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.is;\n@@ -43,7 +42,7 @@\n     public void shouldRunTwoSuitesInParallel()\n         throws VerificationException\n     {\n-        assumeJavaVersion( JAVA_1_7 );\n+        assumeJavaVersion( 1.7d );\n \n         unpack().executeTest()\n             .verifyErrorFree( 2 )",
                "changes": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java"
            },
            {
                "additions": 2,
                "sha": "53cd764673b6834e59f7c20ae238bca867ef825d",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java",
                "deletions": 3,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "patch": "@@ -23,7 +23,6 @@\n import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n import org.junit.Test;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n \n /**\n@@ -38,7 +37,7 @@\n     @Test\n     public void withJUnit()\n     {\n-        assumeJavaVersion( JAVA_1_7 );\n+        assumeJavaVersion( 1.7d );\n \n         unpack().threadCount( 1 )\n                 .executeTest()\n@@ -48,7 +47,7 @@ public void withJUnit()\n     @Test\n     public void withoutJUnit()\n     {\n-        assumeJavaVersion( JAVA_1_7 );\n+        assumeJavaVersion( 1.7d );\n \n         unpack().threadCount( 1 )\n                 .sysProp( \"junit\", \"false\" )",
                "changes": 5,
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1439] NullPointerException on JDK10",
        "commit": "https://github.com/apache/maven-surefire/commit/cb5173d0846edb4b83ebf20fe8618bf881ddba0c"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/3c41c554ea0940da4c174c27f2a071f440f355e4",
        "bug_id": "maven-surefire_3",
        "file": [
            {
                "additions": 1,
                "sha": "3592b31fd6db5b3a88e3779edaf478bf6e830f18",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/5e732c6b2a87026ac56032cc8b2b7e8e92e6aa7e/pom.xml",
                "deletions": 1,
                "filename": "pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/pom.xml?ref=5e732c6b2a87026ac56032cc8b2b7e8e92e6aa7e",
                "patch": "@@ -89,7 +89,7 @@\n     <mavenVersion>2.2.1</mavenVersion>\n     <!-- <shadedVersion>2.12.4</shadedVersion> commented out due to https://issues.apache.org/jira/browse/MRELEASE-799 -->\n     <mavenPluginPluginVersion>3.5</mavenPluginPluginVersion>\n-    <commonsLang3Version>3.7</commonsLang3Version>\n+    <commonsLang3Version>3.5</commonsLang3Version>\n     <commonsIoVersion>2.5</commonsIoVersion>\n     <mavenSharedUtilsVersion>0.9</mavenSharedUtilsVersion>\n     <powermockVersion>2.0.0-beta.5</powermockVersion>",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/5e732c6b2a87026ac56032cc8b2b7e8e92e6aa7e/pom.xml"
            }
        ],
        "repo": "maven-surefire",
        "message": "Revert \"[SUREFIRE-1473] upgrade commons-lang3 to avoid NPE on jdk10\"\n\nThis reverts commit 8bcf1f14a8697ef3359d7598fbd8062a687f2d5a.",
        "commit": "https://github.com/apache/maven-surefire/commit/5e732c6b2a87026ac56032cc8b2b7e8e92e6aa7e"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/27a5e6aeba83b8a00924a2457652651a298ee0a1",
        "bug_id": "maven-surefire_4",
        "file": [
            {
                "additions": 1,
                "sha": "2bcb0d78d34b15c507ccb32a1e31b8ab7f25ebaa",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/8bcf1f14a8697ef3359d7598fbd8062a687f2d5a/pom.xml",
                "deletions": 1,
                "filename": "pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/pom.xml?ref=8bcf1f14a8697ef3359d7598fbd8062a687f2d5a",
                "patch": "@@ -89,7 +89,7 @@\n     <mavenVersion>2.2.1</mavenVersion>\n     <!-- <shadedVersion>2.12.4</shadedVersion> commented out due to https://issues.apache.org/jira/browse/MRELEASE-799 -->\n     <mavenPluginPluginVersion>3.5</mavenPluginPluginVersion>\n-    <commonsLang3Version>3.5</commonsLang3Version>\n+    <commonsLang3Version>3.7</commonsLang3Version>\n     <commonsIoVersion>2.5</commonsIoVersion>\n     <mavenSharedUtilsVersion>0.9</mavenSharedUtilsVersion>\n     <powermockVersion>2.0.0-beta.5</powermockVersion>",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/8bcf1f14a8697ef3359d7598fbd8062a687f2d5a/pom.xml"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1473] upgrade commons-lang3 to avoid NPE on jdk10\n\nSigned-off-by: olivier lamy <olamy@apache.org>",
        "commit": "https://github.com/apache/maven-surefire/commit/8bcf1f14a8697ef3359d7598fbd8062a687f2d5a"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/604147c54bbe90444f5188e6f084c943b00e39ca",
        "bug_id": "maven-surefire_5",
        "file": [
            {
                "additions": 2,
                "sha": "c0f1128e2a9fe9af24acfd0a4f73a0232c8a0ed2",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/391bab043eb5d807fe586455137554c4b89c988a/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/SmartStackTraceParser.java",
                "deletions": 1,
                "filename": "surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/SmartStackTraceParser.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/SmartStackTraceParser.java?ref=391bab043eb5d807fe586455137554c4b89c988a",
                "patch": "@@ -66,7 +66,8 @@ private static Class getClass( String name )\n     {\n         try\n         {\n-            return Thread.currentThread().getContextClassLoader().loadClass( name );\n+            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+            return classLoader != null ? classLoader.loadClass( name ) : null;\n         }\n         catch ( ClassNotFoundException e )\n         {",
                "changes": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/391bab043eb5d807fe586455137554c4b89c988a/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/SmartStackTraceParser.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1090] Fixed NullPointerException on SmartStackTraceParser init occurring when Thread.contextClassLoader is null",
        "commit": "https://github.com/apache/maven-surefire/commit/391bab043eb5d807fe586455137554c4b89c988a"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/65e062cb858a9f2b162e6acc00e980cb584819f4",
        "bug_id": "maven-surefire_6",
        "file": [
            {
                "additions": 12,
                "sha": "acd8da9dfc324724e45b6bc6f049a8be3f40c084",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java",
                "deletions": 10,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java?ref=319b3ec6e2c44536bde521563654c5f7f4251255",
                "patch": "@@ -23,6 +23,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Properties;\n@@ -36,6 +37,7 @@\n import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.ThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n import org.apache.maven.plugin.logging.Log;\n import org.apache.maven.plugin.surefire.AbstractSurefireMojo;\n@@ -88,29 +90,29 @@\n     /**\n      * Closes an InputStream\n      */\n-    private final class InputStreamCloser\n+    private static class InputStreamCloser\n         implements Runnable\n     {\n-        private InputStream testProvidingInputStream;\n+        private final AtomicReference<InputStream> testProvidingInputStream;\n \n         public InputStreamCloser( InputStream testProvidingInputStream )\n         {\n-            this.testProvidingInputStream = testProvidingInputStream;\n+            this.testProvidingInputStream = new AtomicReference<InputStream>( testProvidingInputStream );\n         }\n \n-        public synchronized void run()\n+        public void run()\n         {\n-            if ( testProvidingInputStream != null )\n+            InputStream stream = testProvidingInputStream.getAndSet( null );\n+            if ( stream != null )\n             {\n                 try\n                 {\n-                    testProvidingInputStream.close();\n+                    stream.close();\n                 }\n                 catch ( IOException e )\n                 {\n                     // ignore\n                 }\n-                testProvidingInputStream = null;\n             }\n         }\n     }\n@@ -125,11 +127,11 @@ public synchronized void run()\n \n     private final StartupReportConfiguration startupReportConfiguration;\n \n-    private Log log;\n+    private final Log log;\n \n     private final DefaultReporterFactory defaultReporterFactory;\n \n-    private final List<DefaultReporterFactory> defaultReporterFactoryList;\n+    private final Collection<DefaultReporterFactory> defaultReporterFactoryList;\n \n     private static volatile int systemPropertiesFileCounter = 0;\n \n@@ -145,7 +147,7 @@ public ForkStarter( ProviderConfiguration providerConfiguration, StartupConfigur\n         this.log = log;\n         defaultReporterFactory = new DefaultReporterFactory( startupReportConfiguration );\n         defaultReporterFactory.runStarting();\n-        defaultReporterFactoryList = new ArrayList<DefaultReporterFactory>();\n+        defaultReporterFactoryList = new ConcurrentLinkedQueue<DefaultReporterFactory>();\n     }\n \n     public RunResult run( SurefireProperties effectiveSystemProperties, DefaultScanResult scanResult )",
                "changes": 22,
                "blob_url": "https://github.com/apache/maven-surefire/blob/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java"
            },
            {
                "additions": 2,
                "sha": "aeb3c2259c1ed0230e32d70c5406a69df212ef43",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "deletions": 1,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java?ref=319b3ec6e2c44536bde521563654c5f7f4251255",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.maven.surefire.suite.RunResult;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -75,7 +76,7 @@ public RunListener createReporter()\n         return createTestSetRunListener();\n     }\n \n-    public void mergeFromOtherFactories( List<DefaultReporterFactory> factories )\n+    public void mergeFromOtherFactories( Collection<DefaultReporterFactory> factories )\n     {\n         for ( DefaultReporterFactory factory : factories )\n         {",
                "changes": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1121] NPE DefaultReporterFactory.mergeFromOtherFactories(DefaultReporterFactory.java:82)",
        "commit": "https://github.com/apache/maven-surefire/commit/319b3ec6e2c44536bde521563654c5f7f4251255"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/254e7390a833222d006314c54cbb2be0a929d18d",
        "bug_id": "maven-surefire_7",
        "file": [
            {
                "additions": 1,
                "sha": "ca5d2beb5fd0aaa9d584298e4bd809c5d0e31490",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java",
                "deletions": 1,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -20,7 +20,7 @@\n  */\n \n /**\n- * Exception indicating that surefire hard problems with reflection. This may be due\n+ * Exception indicating that surefire had problems with reflection. This may be due\n  * to programming errors, incorrect configuration or incorrect dependencies, but is\n  * generally not recoverable and not relevant to handle.\n  *",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java"
            },
            {
                "additions": 93,
                "sha": "71a6cedddd5a6c5ec8349ad32491c66ee3164c39",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -0,0 +1,93 @@\n+package org.apache.maven.surefire.its.jiras;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.surefire.its.fixture.SurefireJUnit4IntegrationTestCase;\n+import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n+import org.junit.Test;\n+\n+/**\n+ *\n+ * In the surefire plugin, it is possible to specify one or more RunListener when running tests with JUnit.\n+ * However, it does not look like the listener is properly called by the plugin. In particular, there is a problem\n+ * with the method:\n+ * <pre>\n+ * public void testRunStarted(Description description)\n+ * </pre>\n+ * it's javadoc at\n+ * <a href=\"http://junit.sourceforge.net/javadoc/org/junit/runner/notification/RunListener.html#testRunStarted%28org.junit.runner.Description%29\"/>\n+ * states:\n+ * \"Parameters:\n+ * description - describes the tests to be run \"\n+ * however, in all maven projects I tried (\"mvn test\"), the surefire plugin seems like passing a null reference instead\n+ * of a Description instance that \"describes the tests to be run \"\n+ * Note: other methods in the RunListener I tested seems fine (i.e., they get a valid Description object as input)\n+ *\n+ * @author <a href=\"mailto:tibor.digana@gmail.com\">Tibor Digana (tibor17)</a>\n+ * @see {@linkplain https://jira.codehaus.org/browse/SUREFIRE-1095}\n+ * @since 2.18\n+ */\n+public final class Surefire1095NpeInRunListener\n+    extends SurefireJUnit4IntegrationTestCase\n+{\n+\n+    /**\n+     * Method Request.classes( String, Class[] ); exists in JUnit 4.0 - 4.4\n+     * @see JUnit4Reflector\n+     */\n+    @Test\n+    public void testRunStartedWithJUnit40()\n+    {\n+        unpack().setJUnitVersion( \"4.0\" )\n+            .executeTest()\n+            .verifyErrorFree( 1 )\n+            .verifyTextInLog( \"Running JUnit 4.0\" )\n+            .verifyTextInLog( \"testRunStarted [jiras.surefire1095.SomeTest]\" );\n+    }\n+\n+    /**\n+     * Method Request.classes( Class[] ); Since of JUnit 4.5\n+     * @see JUnit4Reflector\n+     */\n+    @Test\n+    public void testRunStartedWithJUnit45()\n+    {\n+        unpack().setJUnitVersion( \"4.5\" )\n+            .executeTest()\n+            .verifyErrorFree( 1 )\n+            .verifyTextInLog( \"Running JUnit 4.5\" )\n+            .verifyTextInLog( \"testRunStarted [jiras.surefire1095.SomeTest]\" );\n+    }\n+\n+    @Test\n+    public void testRunStartedWithJUnit47()\n+    {\n+        unpack().setJUnitVersion( \"4.7\" )\n+            .executeTest()\n+            .verifyErrorFree( 1 )\n+            .verifyTextInLog( \"Running JUnit 4.7\" )\n+            .verifyTextInLog( \"testRunStarted [jiras.surefire1095.SomeTest]\" );\n+    }\n+\n+    private SurefireLauncher unpack()\n+    {\n+        return unpack( \"surefire-1095-npe-in-runlistener\" );\n+    }\n+}",
                "changes": 93,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java"
            },
            {
                "additions": 74,
                "sha": "4bcd00075ba520f05f139d34dace750d8a8863e3",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.apache.maven.surefire</groupId>\n+    <artifactId>it-parent</artifactId>\n+    <version>1.0</version>\n+    <relativePath>../pom.xml</relativePath>\n+  </parent>\n+  <groupId>org.apache.maven.plugins.surefire</groupId>\n+  <artifactId>jiras-surefire-1095</artifactId>\n+  <version>1.0</version>\n+  <url>http://maven.apache.org</url>\n+  <contributors>\n+    <contributor>\n+      <name>Tibor Digana (tibor17)</name>\n+      <email>tibor.digana@gmail.com</email>\n+      <timezone>+1</timezone>\n+    </contributor>\n+  </contributors>\n+  <dependencies>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>${junit.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>2.5.1</version>\n+        <configuration>\n+          <source>1.5</source>\n+          <target>1.5</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/SomeTest.java</include>\n+          </includes>\n+          <properties>\n+            <property>\n+              <name>listener</name>\n+              <value>jiras.surefire1095.Listener</value>\n+            </property>\n+          </properties>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>",
                "changes": 74,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml"
            },
            {
                "additions": 38,
                "sha": "f16c04af183239cf0563becc0a3c01fd50a1ebb5",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -0,0 +1,38 @@\n+package jiras.surefire1095;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.junit.runner.Description;\n+import org.junit.runner.notification.RunListener;\n+\n+public class Listener\n+    extends RunListener\n+{\n+    @Override\n+    public void testRunStarted( Description description )\n+        throws Exception\n+    {\n+        String described = description.getDisplayName();\n+        System.out.println( \"testRunStarted \" +\n+                                ( described == null || described.equals( \"null\" )\n+                                    ? description.getChildren()\n+                                    : description ) );\n+    }\n+}",
                "changes": 38,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java"
            },
            {
                "additions": 31,
                "sha": "923917a0b4f1f6cb225bc033ce7369ead49d25c3",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -0,0 +1,31 @@\n+package jiras.surefire1095;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.runner.Version;\n+import org.junit.Test;\n+\n+public class SomeTest {\n+    @Test\n+    public void test()\n+    {\n+        System.out.println( \"Running JUnit \" + Version.id() );\n+    }\n+}",
                "changes": 31,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java"
            },
            {
                "additions": 10,
                "sha": "1e3852a70809ba251f68d3fba39ed192fb73cc72",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java",
                "deletions": 1,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -22,13 +22,14 @@\n import org.apache.maven.surefire.util.TestsToRun;\n import org.apache.maven.surefire.util.internal.StringUtils;\n \n-import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n \n+import org.junit.runner.Description;\n import org.junit.runner.notification.Failure;\n \n import static org.apache.maven.surefire.common.junit4.JUnit4RunListener.isFailureInsideJUnitItself;\n@@ -106,4 +107,12 @@\n         return failingMethods;\n     }\n \n+    public static Description createSuiteDescription( Collection<Class<?>> classes )\n+    {\n+        JUnit4Reflector reflector = new JUnit4Reflector();\n+        return reflector.createRequest( classes.toArray( new Class[classes.size()] ) )\n+                .getRunner()\n+                .getDescription();\n+    }\n+\n }",
                "changes": 11,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java"
            },
            {
                "additions": 23,
                "sha": "0a69703eaf88807a269782f969e0a464bb7e7207",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java",
                "deletions": 0,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -19,11 +19,14 @@\n  * under the License.\n  */\n \n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import org.apache.maven.surefire.util.ReflectionUtils;\n \n+import org.apache.maven.surefire.util.SurefireReflectionException;\n import org.junit.Ignore;\n import org.junit.runner.Description;\n+import org.junit.runner.Request;\n \n public final class JUnit4Reflector\n {\n@@ -49,4 +52,24 @@ public String getAnnotatedIgnoreValue( Description description )\n         return ignore != null ? ignore.value() : null;\n     }\n \n+    public Request createRequest( Class<?>... classes )\n+    {\n+        try {\n+            return (Request) Request.class.getDeclaredMethod( \"classes\", Class[].class )// Since of JUnit 4.5\n+                .invoke( null, new Object[]{ classes } );\n+        }\n+        catch ( NoSuchMethodException e )\n+        {\n+            return Request.classes( null, classes );// Since of JUnit 4.0\n+        }\n+        catch ( InvocationTargetException e )\n+        {\n+            throw new SurefireReflectionException( e.getCause() );\n+        }\n+        catch ( IllegalAccessException e )\n+        {\n+            // probably JUnit 5.x\n+            throw new SurefireReflectionException( e );\n+        }\n+    }\n }",
                "changes": 23,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java"
            },
            {
                "additions": 51,
                "sha": "a9b2799e9ccc5d447ae87501628c3b0a9e99e10f",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java",
                "deletions": 71,
                "filename": "surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -41,17 +41,16 @@\n import org.apache.maven.surefire.util.ScanResult;\n import org.apache.maven.surefire.util.TestsToRun;\n import org.apache.maven.surefire.util.internal.StringUtils;\n+import org.junit.runner.Description;\n import org.junit.runner.Request;\n import org.junit.runner.Result;\n-import org.junit.runner.Runner;\n-import org.junit.runner.notification.Failure;\n import org.junit.runner.notification.RunNotifier;\n \n import java.lang.reflect.Method;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n import java.util.Set;\n \n /**\n@@ -68,8 +67,6 @@\n \n     private final String requestedTestMethod;\n \n-    private TestsToRun testsToRun;\n-\n     private final ProviderParameters providerParameters;\n \n     private final RunOrderCalculator runOrderCalculator;\n@@ -78,13 +75,14 @@\n \n     private final int rerunFailingTestsCount;\n \n+    private TestsToRun testsToRun;\n \n     public JUnit4Provider( ProviderParameters booterParameters )\n     {\n-        this.providerParameters = booterParameters;\n-        this.testClassLoader = booterParameters.getTestClassLoader();\n-        this.scanResult = booterParameters.getScanResult();\n-        this.runOrderCalculator = booterParameters.getRunOrderCalculator();\n+        providerParameters = booterParameters;\n+        testClassLoader = booterParameters.getTestClassLoader();\n+        scanResult = booterParameters.getScanResult();\n+        runOrderCalculator = booterParameters.getRunOrderCalculator();\n         customRunListeners = JUnit4RunListenerFactory.\n             createCustomListeners( booterParameters.getProviderProperties().getProperty( \"listener\" ) );\n         jUnit4TestChecker = new JUnit4TestChecker( testClassLoader );\n@@ -122,50 +120,40 @@ else if ( forkTestSet instanceof Class )\n         JUnit4RunListener jUnit4TestSetReporter = new JUnit4RunListener( reporter );\n \n         Result result = new Result();\n-        RunNotifier runNotifer = getRunNotifer( jUnit4TestSetReporter, result, customRunListeners );\n+        RunNotifier runNotifier = getRunNotifier( jUnit4TestSetReporter, result, customRunListeners );\n \n-        runNotifer.fireTestRunStarted( null );\n+        runNotifier.fireTestRunStarted( createTestsDescription() );\n \n         for ( Class aTestsToRun : testsToRun )\n         {\n-            executeTestSet( aTestsToRun, reporter, runNotifer, null );\n+            executeTestSet( aTestsToRun, reporter, runNotifier );\n         }\n \n-        runNotifer.fireTestRunFinished( result );\n+        runNotifier.fireTestRunFinished( result );\n \n         JUnit4RunListener.rethrowAnyTestMechanismFailures( result );\n \n-        closeRunNotifer( jUnit4TestSetReporter, customRunListeners );\n+        closeRunNotifier( jUnit4TestSetReporter, customRunListeners );\n         return reporterFactory.close();\n     }\n \n-    private void executeTestSet( Class<?> clazz, RunListener reporter, RunNotifier listeners,\n-                                 String[] failingTestMethods )\n-        throws ReporterException, TestSetFailedException\n+    private void executeTestSet( Class<?> clazz, RunListener reporter, RunNotifier listeners )\n     {\n-        final ReportEntry report = new SimpleReportEntry( this.getClass().getName(), clazz.getName() );\n-\n+        final ReportEntry report = new SimpleReportEntry( getClass().getName(), clazz.getName() );\n         reporter.testSetStarting( report );\n-\n-\n-\n         try\n         {\n-            if ( !StringUtils.isBlank( this.requestedTestMethod ) )\n+            if ( !StringUtils.isBlank( requestedTestMethod ) )\n             {\n-                String actualTestMethod = getMethod( clazz, this.requestedTestMethod );//add by rainLee\n+                String actualTestMethod = getMethod( clazz, requestedTestMethod );//add by rainLee\n                 String[] testMethods = StringUtils.split( actualTestMethod, \"+\" );\n                 executeWithRerun( clazz, listeners, testMethods );\n             }\n             else\n             {//the original way\n-                executeWithRerun( clazz, listeners, failingTestMethods );\n+                executeWithRerun( clazz, listeners, null );\n             }\n         }\n-        catch ( TestSetFailedException e )\n-        {\n-            throw e;\n-        }\n         catch ( Throwable e )\n         {\n             reporter.testError( SimpleReportEntry.withException( report.getSourceName(), report.getName(),\n@@ -179,35 +167,27 @@ private void executeTestSet( Class<?> clazz, RunListener reporter, RunNotifier l\n     }\n \n     private void executeWithRerun( Class<?> clazz, RunNotifier listeners, String[] testMethods )\n-        throws TestSetFailedException\n     {\n         JUnitTestFailureListener failureListener = new JUnitTestFailureListener();\n         listeners.addListener( failureListener );\n \n         execute( clazz, listeners, testMethods );\n \n         // Rerun failing tests if rerunFailingTestsCount is larger than 0\n-        int rerunCount = this.rerunFailingTestsCount;\n-        if ( rerunCount > 0 )\n+        if ( rerunFailingTestsCount > 0 )\n         {\n-            for ( int i = 0; i < rerunCount; i++ )\n+            for ( int i = 0; i < rerunFailingTestsCount && !failureListener.getAllFailures().isEmpty(); i++ )\n             {\n-                List<Failure> failures = failureListener.getAllFailures();\n-                if ( failures.size() == 0 )\n-                {\n-                    break;\n-                }\n-\n                 Set<String> methodsSet = JUnit4ProviderUtil.generateFailingTests( failureListener.getAllFailures() );\n-                String[] methods = methodsSet.toArray(new String[methodsSet.size()]);\n+                String[] methods = methodsSet.toArray( new String[ methodsSet.size() ] );\n                 failureListener.reset();\n                 execute( clazz, listeners, methods );\n             }\n         }\n     }\n \n-    private RunNotifier getRunNotifer( org.junit.runner.notification.RunListener main, Result result,\n-                                       List<org.junit.runner.notification.RunListener> others )\n+    private RunNotifier getRunNotifier( org.junit.runner.notification.RunListener main, Result result,\n+                                        List<org.junit.runner.notification.RunListener> others )\n     {\n         RunNotifier fNotifier = new RunNotifier();\n         fNotifier.addListener( main );\n@@ -219,10 +199,10 @@ private RunNotifier getRunNotifer( org.junit.runner.notification.RunListener mai\n         return fNotifier;\n     }\n \n-    // I am not entierly sure as to why we do this explicit freeing, it's one of those\n+    // I am not entirely sure as to why we do this explicit freeing, it's one of those\n     // pieces of code that just seem to linger on in here ;)\n-    private void closeRunNotifer( org.junit.runner.notification.RunListener main,\n-                                  List<org.junit.runner.notification.RunListener> others )\n+    private void closeRunNotifier( org.junit.runner.notification.RunListener main,\n+                                   List<org.junit.runner.notification.RunListener> others )\n     {\n         RunNotifier fNotifier = new RunNotifier();\n         fNotifier.removeListener( main );\n@@ -248,7 +228,7 @@ private TestsToRun scanClassPath()\n     private void upgradeCheck()\n         throws TestSetFailedException\n     {\n-        if ( isJunit4UpgradeCheck() )\n+        if ( isJUnit4UpgradeCheck() )\n         {\n             List<Class> classesSkippedByValidation =\n                 scanResult.getClassesSkippedByValidation( jUnit4TestChecker, testClassLoader );\n@@ -268,37 +248,41 @@ private void upgradeCheck()\n         }\n     }\n \n-    private boolean isJunit4UpgradeCheck()\n+    private Description createTestsDescription()\n     {\n-        final String property = System.getProperty( \"surefire.junit4.upgradecheck\" );\n-        return property != null;\n+        Collection<Class<?>> classes = new ArrayList<Class<?>>();\n+        for ( Class<?> clazz : testsToRun )\n+        {\n+            classes.add( clazz );\n+        }\n+        return JUnit4ProviderUtil.createSuiteDescription( classes );\n     }\n \n+    private static boolean isJUnit4UpgradeCheck()\n+    {\n+        return System.getProperty( \"surefire.junit4.upgradecheck\" ) != null;\n+    }\n \n     private static void execute( Class<?> testClass, RunNotifier fNotifier, String[] testMethods )\n-        throws TestSetFailedException\n     {\n-        if ( null != testMethods )\n+        if ( testMethods != null )\n         {\n-            Method[] methods = testClass.getMethods();\n-            for ( Method method : methods )\n+            for ( final Method method : testClass.getMethods() )\n             {\n-                for ( String testMethod : testMethods )\n+                for ( final String testMethod : testMethods )\n                 {\n                     if ( SelectorUtils.match( testMethod, method.getName() ) )\n                     {\n-                        Runner junitTestRunner = Request.method( testClass, method.getName() ).getRunner();\n-                        junitTestRunner.run( fNotifier );\n+                        Request.method( testClass, method.getName() ).getRunner().run( fNotifier );\n                     }\n \n                 }\n             }\n-            return;\n         }\n-\n-        Runner junitTestRunner = Request.aClass( testClass ).getRunner();\n-\n-        junitTestRunner.run( fNotifier );\n+        else\n+        {\n+            Request.aClass( testClass ).getRunner().run( fNotifier );\n+        }\n     }\n \n     /**\n@@ -312,23 +296,19 @@ private static void execute( Class<?> testClass, RunNotifier fNotifier, String[]\n      */\n     private static String getMethod( Class testClass, String testMethodStr )\n     {\n-        String className = testClass.getName();\n+        final String className = testClass.getName();\n \n         if ( !testMethodStr.contains( \"#\" ) && !testMethodStr.contains( \",\" ) )\n         {//the original way\n             return testMethodStr;\n         }\n         testMethodStr += \",\";//for the bellow  split code\n-        int beginIndex = testMethodStr.indexOf( className );\n-        int endIndex = testMethodStr.indexOf( \",\", beginIndex );\n-        String classMethodStr =\n+        final int beginIndex = testMethodStr.indexOf( className );\n+        final int endIndex = testMethodStr.indexOf( \",\", beginIndex );\n+        final String classMethodStr =\n             testMethodStr.substring( beginIndex, endIndex );//String like \"StopWatchTest#testLang315\"\n \n-        int index = classMethodStr.indexOf( '#' );\n-        if ( index >= 0 )\n-        {\n-            return classMethodStr.substring( index + 1, classMethodStr.length() );\n-        }\n-        return null;\n+        final int index = classMethodStr.indexOf( '#' );\n+        return index >= 0 ? classMethodStr.substring( index + 1, classMethodStr.length() ) : null;\n     }\n }",
                "changes": 122,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java"
            },
            {
                "additions": 15,
                "sha": "a145b441d0c9cdea1c8b7dcb1fdc6264f0b9a609",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java",
                "deletions": 28,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -19,8 +19,6 @@\n  * under the License.\n  */\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n@@ -48,11 +46,7 @@\n import org.apache.maven.surefire.util.ScannerFilter;\n import org.apache.maven.surefire.util.TestsToRun;\n import org.apache.maven.surefire.util.internal.StringUtils;\n-import org.junit.internal.runners.statements.Fail;\n import org.junit.runner.manipulation.Filter;\n-import org.junit.runner.notification.Failure;\n-\n-import static org.apache.maven.surefire.common.junit4.JUnit4RunListener.isFailureInsideJUnitItself;\n \n /**\n  * @author Kristian Rosenvold\n@@ -71,6 +65,10 @@\n \n     private final ProviderParameters providerParameters;\n \n+    private final ScanResult scanResult;\n+\n+    private final int rerunFailingTestsCount;\n+\n     private TestsToRun testsToRun;\n \n     private JUnit48Reflector jUnit48Reflector;\n@@ -79,20 +77,16 @@\n \n     private String requestedTestMethod;\n \n-    private final ScanResult scanResult;\n-\n-    private final int rerunFailingTestsCount;\n-\n     public JUnitCoreProvider( ProviderParameters providerParameters )\n     {\n         this.providerParameters = providerParameters;\n-        this.testClassLoader = providerParameters.getTestClassLoader();\n-        this.scanResult = providerParameters.getScanResult();\n-        this.runOrderCalculator = providerParameters.getRunOrderCalculator();\n-        this.jUnitCoreParameters = new JUnitCoreParameters( providerParameters.getProviderProperties() );\n-        this.scannerFilter = new JUnit48TestChecker( testClassLoader );\n-        this.requestedTestMethod = providerParameters.getTestRequest().getRequestedTestMethod();\n-        this.rerunFailingTestsCount = providerParameters.getTestRequest().getRerunFailingTestsCount();\n+        testClassLoader = providerParameters.getTestClassLoader();\n+        scanResult = providerParameters.getScanResult();\n+        runOrderCalculator = providerParameters.getRunOrderCalculator();\n+        jUnitCoreParameters = new JUnitCoreParameters( providerParameters.getProviderProperties() );\n+        scannerFilter = new JUnit48TestChecker( testClassLoader );\n+        requestedTestMethod = providerParameters.getTestRequest().getRequestedTestMethod();\n+        rerunFailingTestsCount = providerParameters.getTestRequest().getRerunFailingTestsCount();\n \n         customRunListeners =\n             JUnit4RunListenerFactory.createCustomListeners( providerParameters.getProviderProperties().getProperty( \"listener\" ) );\n@@ -141,8 +135,7 @@ else if ( forkTestSet instanceof Class )\n             }\n         }\n \n-        org.junit.runner.notification.RunListener jUnit4RunListener = getRunListener( reporterFactory, consoleLogger );\n-        customRunListeners.add( 0, jUnit4RunListener );\n+        customRunListeners.add( 0, getRunListener( reporterFactory, consoleLogger ) );\n \n         // Add test failure listener\n         JUnitTestFailureListener testFailureListener = new JUnitTestFailureListener();\n@@ -151,18 +144,12 @@ else if ( forkTestSet instanceof Class )\n         JUnitCoreWrapper.execute( testsToRun, jUnitCoreParameters, customRunListeners, filter );\n \n         // Rerun failing tests if rerunFailingTestsCount is larger than 0\n-        int rerunCount = this.rerunFailingTestsCount;\n-        if ( rerunCount > 0 )\n+        if ( rerunFailingTestsCount > 0 )\n         {\n-            for ( int i = 0; i < rerunCount; i++ )\n+            for ( int i = 0; i < rerunFailingTestsCount && !testFailureListener.getAllFailures().isEmpty(); i++ )\n             {\n-                List<Failure> failures = testFailureListener.getAllFailures();\n-                if ( failures.size() == 0 )\n-                {\n-                    break;\n-                }\n                 Map<Class<?>, Set<String>> failingTests =\n-                    JUnit4ProviderUtil.generateFailingTests( failures, testsToRun );\n+                    JUnit4ProviderUtil.generateFailingTests( testFailureListener.getAllFailures(), testsToRun );\n                 testFailureListener.reset();\n                 final FilterFactory filterFactory = new FilterFactory( testClassLoader );\n                 Filter failingMethodsFilter = filterFactory.createFailingMethodFilter( failingTests );",
                "changes": 43,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java"
            },
            {
                "additions": 2,
                "sha": "458b484aabd3cec9a3fad0805aafece71afa323d",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "deletions": 10,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "patch": "@@ -56,20 +56,12 @@ public synchronized void writeTestOutput( byte[] buf, int off, int len, boolean\n \n     protected SimpleReportEntry createReportEntry( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getDisplayName()/*\n-                                                                                               * , (int) (\n-                                                                                               * System.currentTimeMillis\n-                                                                                               * () - startTime )\n-                                                                                               */);\n+        return new SimpleReportEntry( description.getClassName(), description.getDisplayName() );\n     }\n \n     protected SimpleReportEntry createReportEntryForTestSet( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getClassName() /*\n-                                                                                              * , (int) (\n-                                                                                              * System.currentTimeMillis\n-                                                                                              * () - startTime )\n-                                                                                              */);\n+        return new SimpleReportEntry( description.getClassName(), description.getClassName() );\n     }\n \n     @Override",
                "changes": 12,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1095] NPE in JUnit 4.x RunListener + Refactoring",
        "commit": "https://github.com/apache/maven-surefire/commit/4df65165717126c88569e1fa62b0ea30559cbfa3"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/065da9ca635cf23747da25164da872c3f1ef1a3c",
        "bug_id": "maven-surefire_8",
        "file": [
            {
                "additions": 1,
                "sha": "52d925e11684889589f6ad4788c0d317b637ca83",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/90edbd4abd3697c92692a2d12f15aaf02e66af40/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "deletions": 4,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java?ref=90edbd4abd3697c92692a2d12f15aaf02e66af40",
                "patch": "@@ -43,8 +43,6 @@\n \r\n     private final RunStatistics globalStats = new RunStatistics();\r\n \r\n-    private final ConsoleReporter multicastingReporter;\r\n-\r\n     private final StartupReportConfiguration reportConfiguration;\r\n \r\n     private final StatisticsReporter statisticsReporter;\r\n@@ -55,7 +53,6 @@\n     public DefaultReporterFactory( StartupReportConfiguration reportConfiguration )\r\n     {\r\n         this.reportConfiguration = reportConfiguration;\r\n-        multicastingReporter = reportConfiguration.instantiateConsoleReporter();\r\n         this.statisticsReporter = reportConfiguration.instantiateStatisticsReporter();\r\n         runStarting();\r\n     }\r\n@@ -106,7 +103,7 @@ private void runCompleted()\n         logger.info( \"\" );\r\n         if ( globalStats.hadFailures() )\r\n         {\r\n-            multicastingReporter.writeMessage( \"Failed tests: \" );\r\n+            logger.info( \"Failed tests: \" );\r\n             for ( Object o : this.globalStats.getFailureSources() )\r\n             {\r\n                 logger.info( \"  \" + o );\r",
                "changes": 5,
                "blob_url": "https://github.com/apache/maven-surefire/blob/90edbd4abd3697c92692a2d12f15aaf02e66af40/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "o Removed NPE on odd configuration",
        "commit": "https://github.com/apache/maven-surefire/commit/90edbd4abd3697c92692a2d12f15aaf02e66af40"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/becadaf1fec1f0aadbece3406d0ba03638671ec2",
        "bug_id": "maven-surefire_9",
        "file": [
            {
                "additions": 18,
                "sha": "2ff2c58cfafb9e6e0b8d8dfc4f7db4b6646f0308",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/8cb7ab468538b7aad41ad713b6890048e854c794/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "deletions": 4,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=8cb7ab468538b7aad41ad713b6890048e854c794",
                "patch": "@@ -1230,10 +1230,10 @@ private void maybeAppendList( final List<String> base, final List<String> list )\n             // Have to wrap in an ArrayList as surefire expects an ArrayList instead of a List for some reason\n             if ( excludes == null || excludes.size() == 0 )\n             {\n-                excludes = new ArrayList<String>( Arrays.asList( new String[]{ \"**/*$*\" } ) );\n+                excludes = Arrays.asList( new String[]{ \"**/*$*\" } );\n             }\n         }\n-        return excludes;\n+        return filterNulls( excludes );\n     }\n \n     private List<String> getIncludeList()\n@@ -1265,10 +1265,24 @@ private void maybeAppendList( final List<String> base, final List<String> list )\n         // Have to wrap in an ArrayList as surefire expects an ArrayList instead of a List for some reason\n         if ( includes == null || includes.size() == 0 )\n         {\n-            includes = new ArrayList<String>( Arrays.asList( getDefaultIncludes() ) );\n+            includes = Arrays.asList( getDefaultIncludes() );\n+        }\n+\n+        return filterNulls( includes );\n+    }\n+\n+    private List<String> filterNulls( List<String> toFilter )\n+    {\n+        List<String> result = new ArrayList<String>( toFilter.size() );\n+        for ( String item : toFilter )\n+        {\n+            if ( item != null )\n+            {\n+                result.add( item );\n+            }\n         }\n \n-        return includes;\n+        return result;\n     }\n \n     private boolean isMultipleExecutionBlocksDetected()",
                "changes": 22,
                "blob_url": "https://github.com/apache/maven-surefire/blob/8cb7ab468538b7aad41ad713b6890048e854c794/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java"
            },
            {
                "additions": 2,
                "sha": "504171e97a272cfd09408d343dbcfff646c1f581",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/8cb7ab468538b7aad41ad713b6890048e854c794/surefire-integration-tests/src/test/resources/includes-excludes/pom.xml",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/includes-excludes/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/includes-excludes/pom.xml?ref=8cb7ab468538b7aad41ad713b6890048e854c794",
                "patch": "@@ -64,6 +64,8 @@ under the License.\n             <configuration>\n               <excludes>\n                 <exclude>**/DontRunTest.*</exclude>\n+                <exclude></exclude>\n+                <exclude />\n               </excludes>\n               <includes>\n                 <include>**/NotIncludedByDefault.java</include>",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/8cb7ab468538b7aad41ad713b6890048e854c794/surefire-integration-tests/src/test/resources/includes-excludes/pom.xml"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-980] avoid NPE on empty include/exclude tags",
        "commit": "https://github.com/apache/maven-surefire/commit/8cb7ab468538b7aad41ad713b6890048e854c794"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/8ce08a7f552cba06ceec6383b7636b4e77d1e0b9",
        "bug_id": "maven-surefire_10",
        "file": [
            {
                "additions": 6,
                "sha": "95e92d4f91dea709cd818b2bea3f94d67be7da8e",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/dcc84fe8a65bf4380e72f765e92a824f7e74f10d/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java",
                "deletions": 3,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java?ref=dcc84fe8a65bf4380e72f765e92a824f7e74f10d",
                "patch": "@@ -21,14 +21,19 @@\n \n import java.text.NumberFormat;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n \n /**\n  * Maintains per-thread test result state. Not thread safe.\n  */\n public class TestSetStats\n {\n+    private final Queue<WrappedReportEntry> reportEntries = new ConcurrentLinkedQueue<WrappedReportEntry>();\n+\n     private final boolean trimStackTrace;\n \n     private final boolean plainFormat;\n@@ -49,8 +54,6 @@\n \n     private long elapsedForTestSet;\n \n-    private final List<WrappedReportEntry> reportEntries = new ArrayList<WrappedReportEntry>();\n-\n     public TestSetStats( boolean trimStackTrace, boolean plainFormat )\n     {\n         this.trimStackTrace = trimStackTrace;\n@@ -242,7 +245,7 @@ else if ( plainFormat && testResult.isSucceeded() )\n         return result;\n     }\n \n-    public List<WrappedReportEntry> getReportEntries()\n+    public Collection<WrappedReportEntry> getReportEntries()\n     {\n         return reportEntries;\n     }",
                "changes": 9,
                "blob_url": "https://github.com/apache/maven-surefire/blob/dcc84fe8a65bf4380e72f765e92a824f7e74f10d/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1114] NPE in TestSetStats. Concurrency issue with parallel methods on TestNG.",
        "commit": "https://github.com/apache/maven-surefire/commit/dcc84fe8a65bf4380e72f765e92a824f7e74f10d"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/86d78ad1ba72ed030ef582f6b22693f799ed1097",
        "bug_id": "maven-surefire_11",
        "file": [
            {
                "additions": 37,
                "sha": "cc1bb74f9d2d119cd5648b4240c25e3136a2bcb4",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "patch": "@@ -0,0 +1,37 @@\n+package org.apache.maven.surefire.its;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.surefire.its.fixture.SurefireJUnit4IntegrationTestCase;\n+import org.junit.Test;\n+\n+/**\n+ * Test annotation-based TestNG listener\n+ */\n+public class CheckTestNgListenersIT\n+    extends SurefireJUnit4IntegrationTestCase\n+{\n+    @Test\n+    public void TestNgListenerReporter()\n+    {\n+        unpack( \"testng-listeners\" ).mavenTestFailureIgnore( true ).executeTest().assertTestSuiteResults( 1, 0, 1, 0 );\n+    }\n+\n+}",
                "changes": 37,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java"
            },
            {
                "additions": 43,
                "sha": "e2482a210447605e40d38ff5c657919c0dda5a67",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/pom.xml",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/testng-listeners/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/testng-listeners/pom.xml?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "patch": "@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+  \n+    <parent>\n+      <groupId>org.apache.maven.surefire</groupId>\n+      <artifactId>it-parent</artifactId>\n+      <version>1.0</version>\n+      <relativePath>../pom.xml</relativePath>\n+    </parent>\n+  \n+    <artifactId>testng-listeners</artifactId>\n+\t<version>1.0-SNAPSHOT</version>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.testng</groupId>\n+\t\t\t<artifactId>testng</artifactId>\n+\t\t\t<version>6.8.8</version>\n+\t\t</dependency>\n+  \t</dependencies>\n+</project>\n\\ No newline at end of file",
                "changes": 43,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/pom.xml"
            },
            {
                "additions": 83,
                "sha": "a10460462cd01c93ce2cdb789b931530473bf31a",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "patch": "@@ -0,0 +1,83 @@\n+package listeners;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n+import org.testng.IInvokedMethod;\n+import org.testng.IInvokedMethodListener;\n+import org.testng.ITestContext;\n+import org.testng.ITestListener;\n+import org.testng.ITestResult;\n+\n+/**\n+ * Created by etigwuu on 2014-04-26.\n+ */\n+public class MarkAsFailureListener implements ITestListener, IInvokedMethodListener {\n+\n+    @Override\n+    public void onTestStart(ITestResult result) {\n+\n+    }\n+\n+    @Override\n+    public void onTestSuccess(ITestResult result) {\n+\n+    }\n+\n+    public static int counter = 0;\n+    /**\n+     * I will be called twice in some condition!!!\n+     * @param result\n+     */\n+    @Override\n+    public void onTestFailure(ITestResult result) {\n+        System.out.println(++counter);\n+    }\n+\n+    @Override\n+    public void onTestSkipped(ITestResult result) {\n+\n+    }\n+\n+    @Override\n+    public void onTestFailedButWithinSuccessPercentage(ITestResult result) {\n+\n+    }\n+\n+    @Override\n+    public void onStart(ITestContext context) {\n+\n+    }\n+\n+    @Override\n+    public void onFinish(ITestContext context) {\n+\n+    }\n+\n+    @Override\n+    public void beforeInvocation(IInvokedMethod method, ITestResult testResult) {\n+\n+    }\n+\n+    @Override\n+    public void afterInvocation(IInvokedMethod method, ITestResult testResult) {\n+        testResult.setStatus(ITestResult.FAILURE);\n+    }\n+}",
                "changes": 83,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java"
            },
            {
                "additions": 35,
                "sha": "f4204a1240a607be1975fbb68991555c8a26cc2d",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "patch": "@@ -0,0 +1,35 @@\n+package listeners;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.testng.annotations.Listeners;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Created by etigwuu on 2014-04-26.\n+ */\n+@Listeners(MarkAsFailureListener.class)\n+public class SimpleTest {\n+\n+    @Test\n+    public void test1(){\n+        System.out.println(\"Hello world\");\n+    }\n+}",
                "changes": 35,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java"
            },
            {
                "additions": 14,
                "sha": "9c70e6a2ea24b184b13120f28065db66140f1d4c",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "deletions": 0,
                "filename": "surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "patch": "@@ -57,17 +57,31 @@ public String writeTraceToString()\n \n     public String smartTrimmedStackTrace()\n     {\n+        if ( t == null )\n+        {\n+            return \"\";\n+        }\n+\n         SmartStackTraceParser parser = new SmartStackTraceParser( testClass, t, testMethod );\n         return parser.getString();\n     }\n \n     public String writeTrimmedTraceToString()\n     {\n+        if ( t == null )\n+        {\n+            return \"\";\n+        }\n+\n         return SmartStackTraceParser.innerMostWithFocusOnClass( t, testClass );\n     }\n \n     public SafeThrowable getThrowable()\n     {\n+        if ( t == null ) {\n+            return null;\n+        }\n+\n         return new SafeThrowable( t );\n     }\n }",
                "changes": 14,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "SUREFIRE-1077 avoid NPE in stacktrace parsing if a test fails without a Throwable as cause",
        "commit": "https://github.com/apache/maven-surefire/commit/d78376b82a18cec354cab32182e7c18af363f6f7"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/bf46d9cff7af2edcbd2b44feb21d2447ce67350a",
        "bug_id": "maven-surefire_12",
        "file": [
            {
                "additions": 2,
                "sha": "b024d4f0b121c5fa479350c12c6593860b7cb6c1",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "deletions": 3,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e",
                "patch": "@@ -742,7 +742,7 @@ private void executeProvider( ProviderInfo provider, DefaultScanResult scanResul\n                     ForkStarter forkStarter =\n                         createForkStarter( provider, forkConfiguration, classLoaderConfiguration, runOrderParameters,\n                                            effectiveProperties );\n-                    result = forkStarter.run( scanResult, getEffectiveForkMode() );\n+                    result = forkStarter.run( effectiveProperties, scanResult, getEffectiveForkMode() );\n                 }\n                 finally\n                 {\n@@ -1224,8 +1224,7 @@ protected ForkStarter createForkStarter( ProviderInfo provider, ForkConfiguratio\n         StartupReportConfiguration startupReportConfiguration = getStartupReportConfiguration( configChecksum );\n         ProviderConfiguration providerConfiguration = createProviderConfiguration( runOrderParameters );\n         return new ForkStarter( providerConfiguration, startupConfiguration, forkConfiguration,\n-                                getForkedProcessTimeoutInSeconds(), startupReportConfiguration,\n-                                effectiveSystemProperties );\n+                                getForkedProcessTimeoutInSeconds(), startupReportConfiguration );\n     }\n \n     protected InPluginVMSurefireStarter createInprocessStarter( ProviderInfo provider,",
                "changes": 5,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java"
            },
            {
                "additions": 10,
                "sha": "22c06168cbdafe19889ea337a7ebc4f07380cfc8",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/BooterSerializer.java",
                "deletions": 6,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/BooterSerializer.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/BooterSerializer.java?ref=b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e",
                "patch": "@@ -55,20 +55,24 @@\n {\n     private final ForkConfiguration forkConfiguration;\n \n-    private final PropertiesWrapper properties;\n-\n-    public BooterSerializer( ForkConfiguration forkConfiguration, Properties properties )\n+    public BooterSerializer( ForkConfiguration forkConfiguration )\n     {\n         this.forkConfiguration = forkConfiguration;\n-        this.properties = new PropertiesWrapper( properties );\n     }\n \n \n-    public File serialize(ProviderConfiguration booterConfiguration, StartupConfiguration providerConfiguration,\n+    /*\n+    DOes not modify sourceProperties\n+     */\n+    public File serialize(Properties sourceProperties, ProviderConfiguration booterConfiguration, StartupConfiguration providerConfiguration,\n                           Object testSet)\n         throws IOException\n     {\n-        providerConfiguration.getClasspathConfiguration().setForkProperties( properties );\n+\n+        PropertiesWrapper properties = new PropertiesWrapper(new Properties(  ) );\n+        properties.getProperties().putAll( sourceProperties );\n+\n+        providerConfiguration.getClasspathConfiguration().addForkProperties( properties );\n \n         TestArtifactInfo testNg = booterConfiguration.getTestArtifact();\n         if ( testNg != null )",
                "changes": 16,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/BooterSerializer.java"
            },
            {
                "additions": 15,
                "sha": "bd19c7785384f3007b01025e2caa0c0d1a503c02",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java",
                "deletions": 16,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java?ref=b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e",
                "patch": "@@ -82,28 +82,24 @@\n \n     private final StartupReportConfiguration startupReportConfiguration;\n \n-    private final SurefireProperties effectiveSystemProperties;\n-\n     private final DefaultReporterFactory fileReporterFactory;\n \n     private static volatile int systemPropertiesFileCounter = 0;\n \n \n     public ForkStarter( ProviderConfiguration providerConfiguration, StartupConfiguration startupConfiguration,\n                         ForkConfiguration forkConfiguration, int forkedProcessTimeoutInSeconds,\n-                        StartupReportConfiguration startupReportConfiguration,\n-                        SurefireProperties effectiveSystemProperties )\n+                        StartupReportConfiguration startupReportConfiguration )\n     {\n         this.forkConfiguration = forkConfiguration;\n         this.providerConfiguration = providerConfiguration;\n         this.forkedProcessTimeoutInSeconds = forkedProcessTimeoutInSeconds;\n         this.startupConfiguration = startupConfiguration;\n         this.startupReportConfiguration = startupReportConfiguration;\n-        this.effectiveSystemProperties = effectiveSystemProperties;\n         fileReporterFactory = new DefaultReporterFactory( startupReportConfiguration );\n     }\n \n-    public RunResult run( DefaultScanResult scanResult, String requestedForkMode )\n+    public RunResult run( SurefireProperties effectiveSystemProperties, DefaultScanResult scanResult, String requestedForkMode )\n         throws SurefireBooterForkException, SurefireExecutionException\n     {\n         final RunResult result;\n@@ -115,15 +111,16 @@ public RunResult run( DefaultScanResult scanResult, String requestedForkMode )\n             {\n                 final ForkClient forkClient =\n                     new ForkClient( fileReporterFactory, startupReportConfiguration.getTestVmSystemProperties() );\n-                result = fork( null, providerProperties, forkClient, fileReporterFactory.getGlobalRunStatistics() );\n+                result = fork( null, providerProperties, forkClient, fileReporterFactory.getGlobalRunStatistics(),\n+                               effectiveSystemProperties );\n             }\n             else if ( ForkConfiguration.FORK_ALWAYS.equals( requestedForkMode ) )\n             {\n-                result = runSuitesForkPerTestSet( providerProperties, 1 );\n+                result = runSuitesForkPerTestSet( providerProperties, effectiveSystemProperties, 1 );\n             }\n             else if ( ForkConfiguration.FORK_PERTHREAD.equals( requestedForkMode ) )\n             {\n-                result = runSuitesForkPerTestSet( providerProperties, forkConfiguration.getForkCount() );\n+                result = runSuitesForkPerTestSet( providerProperties, effectiveSystemProperties, forkConfiguration.getForkCount() );\n             }\n             else\n             {\n@@ -137,7 +134,8 @@ else if ( ForkConfiguration.FORK_PERTHREAD.equals( requestedForkMode ) )\n         return result;\n     }\n \n-    private RunResult runSuitesForkPerTestSet( final Properties properties, int forkCount )\n+    private RunResult runSuitesForkPerTestSet( final Properties properties,\n+                                               final SurefireProperties effectiveSystemProperties, int forkCount )\n         throws SurefireBooterForkException\n     {\n \n@@ -160,8 +158,9 @@ private RunResult runSuitesForkPerTestSet( final Properties properties, int fork\n                     public RunResult call()\n                         throws Exception\n                     {\n-                        return fork( testSet, (Properties) properties.clone(), forkClient,\n-                                     fileReporterFactory.getGlobalRunStatistics() );\n+                        return fork( testSet, properties, forkClient,\n+                                     fileReporterFactory.getGlobalRunStatistics(),\n+                                     effectiveSystemProperties );\n                     }\n                 };\n                 results.add( executorService.submit( pf ) );\n@@ -217,17 +216,17 @@ private void closeExecutor( ExecutorService executorService )\n     }\n \n \n-    private RunResult fork( Object testSet, Properties properties, ForkClient forkClient,\n-                            RunStatistics globalRunStatistics )\n+    private RunResult fork( Object testSet, Properties providerProperties, ForkClient forkClient,\n+                            RunStatistics globalRunStatistics, SurefireProperties effectiveSystemProperties )\n         throws SurefireBooterForkException\n     {\n         File surefireProperties;\n         File systPropsFile = null;\n         try\n         {\n-            BooterSerializer booterSerializer = new BooterSerializer( forkConfiguration, properties );\n+            BooterSerializer booterSerializer = new BooterSerializer( forkConfiguration );\n \n-            surefireProperties = booterSerializer.serialize( providerConfiguration, startupConfiguration, testSet );\n+            surefireProperties = booterSerializer.serialize( providerProperties, providerConfiguration, startupConfiguration, testSet );\n \n             if ( effectiveSystemProperties != null )\n             {",
                "changes": 31,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java"
            },
            {
                "additions": 2,
                "sha": "278451e292c6702475e3be845fab957088ceb5a0",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerProviderConfigurationTest.java",
                "deletions": 4,
                "filename": "maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerProviderConfigurationTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerProviderConfigurationTest.java?ref=b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e",
                "patch": "@@ -172,11 +172,9 @@ private ProviderConfiguration saveAndReload( ProviderConfiguration booterConfigu\n     {\n         final ForkConfiguration forkConfiguration = ForkConfigurationTest.getForkConfiguration( null, null );\n         Properties props = new Properties();\n-        BooterSerializer booterSerializer = new BooterSerializer( forkConfiguration, props );\n+        BooterSerializer booterSerializer = new BooterSerializer( forkConfiguration );\n         String aTest = \"aTest\";\n-        booterSerializer.serialize( booterConfiguration, testProviderConfiguration, aTest);\n-        final File propsTest =\n-            SystemPropertyManager.writePropertiesFile( props, forkConfiguration.getTempDirectory(), \"propsTest\", true );\n+        final File propsTest = booterSerializer.serialize( props, booterConfiguration, testProviderConfiguration, aTest);\n         BooterDeserializer booterDeserializer = new BooterDeserializer( new FileInputStream( propsTest ) );\n         return booterDeserializer.deserialize();\n     }",
                "changes": 6,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerProviderConfigurationTest.java"
            },
            {
                "additions": 3,
                "sha": "df2723f5f85dafbdf40187fc6d61109d7a9306a1",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerStartupConfigurationTest.java",
                "deletions": 5,
                "filename": "maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerStartupConfigurationTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerStartupConfigurationTest.java?ref=b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e",
                "patch": "@@ -79,7 +79,7 @@ private void assertEquals( ClasspathConfiguration expectedConfiguration,\n     private Properties getPropertiesForClasspathConfiguration( ClasspathConfiguration configuration )\n     {\n         Properties properties = new Properties();\n-        configuration.setForkProperties( new PropertiesWrapper( properties ) );\n+        configuration.addForkProperties( new PropertiesWrapper( properties ) );\n         return properties;\n     }\n \n@@ -128,11 +128,9 @@ private StartupConfiguration saveAndReload( StartupConfiguration startupConfigur\n     {\n         final ForkConfiguration forkConfiguration = ForkConfigurationTest.getForkConfiguration( null, null );\n         Properties props = new Properties();\n-        BooterSerializer booterSerializer = new BooterSerializer( forkConfiguration, props );\n+        BooterSerializer booterSerializer = new BooterSerializer( forkConfiguration );\n         String aTest = \"aTest\";\n-        booterSerializer.serialize( getProviderConfiguration(), startupConfiguration, aTest);\n-        final File propsTest =\n-            SystemPropertyManager.writePropertiesFile( props, forkConfiguration.getTempDirectory(), \"propsTest\", true );\n+        final File propsTest  = booterSerializer.serialize( props, getProviderConfiguration(), startupConfiguration, aTest);\n         BooterDeserializer booterDeserializer = new BooterDeserializer( new FileInputStream( propsTest ) );\n         return booterDeserializer.getProviderConfiguration();\n     }",
                "changes": 8,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/booterclient/BooterDeserializerStartupConfigurationTest.java"
            },
            {
                "additions": 1,
                "sha": "fc903bc43ac230f32f9219331d8368bdf134dc71",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/surefire-booter/src/main/java/org/apache/maven/surefire/booter/ClasspathConfiguration.java",
                "deletions": 1,
                "filename": "surefire-booter/src/main/java/org/apache/maven/surefire/booter/ClasspathConfiguration.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/main/java/org/apache/maven/surefire/booter/ClasspathConfiguration.java?ref=b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e",
                "patch": "@@ -77,7 +77,7 @@ public ClasspathConfiguration( Classpath testClasspath, Classpath surefireClassP\n         this.surefireClasspathUrls = surefireClassPathUrls;\n     }\n \n-    public void setForkProperties( PropertiesWrapper properties )\n+    public void addForkProperties( PropertiesWrapper properties )\n     {\n         properties.setClasspath( CLASSPATH, classpathUrls );\n         properties.setClasspath( SUREFIRE_CLASSPATH, surefireClasspathUrls );",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e/surefire-booter/src/main/java/org/apache/maven/surefire/booter/ClasspathConfiguration.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-906] Sometimes get NullPointerException in forked process\n\nSolution identified by Christopher Mosher\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1374456 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/b84cefb440e6f4e9e6bdc73b5ae713bb19f8a80e"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/8315562ededdbf80f059f843fa34e793b6b25ac7",
        "bug_id": "maven-surefire_13",
        "file": [
            {
                "additions": 1,
                "sha": "2386c8da3bb97e098e2a2a9d94b9a690b48c5b4e",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ff463e0758ee69eae8a9f78ed0feb8410256f803/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "deletions": 1,
                "filename": "surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java?ref=ff463e0758ee69eae8a9f78ed0feb8410256f803",
                "patch": "@@ -170,7 +170,7 @@ public GroupMatcherCategoryFilter( GroupMatcher included, GroupMatcher excluded\n         public boolean shouldRun( Description description )\n         {\n             return shouldRun( description,\n-                              ( description.getMethodName() == null ? null\n+                              ( ( description.getMethodName() == null || description.getTestClass() == null ) ? null\n                                               : Description.createSuiteDescription( description.getTestClass() ) ) );\n         }\n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ff463e0758ee69eae8a9f78ed0feb8410256f803/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-990] prevent NPE in case the testClass in a Description is null",
        "commit": "https://github.com/apache/maven-surefire/commit/ff463e0758ee69eae8a9f78ed0feb8410256f803"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/a1d86c7d63b90e397c39db0efc008ad47cef0239",
        "bug_id": "maven-surefire_14",
        "file": [
            {
                "additions": 2,
                "sha": "222981506d2605fe15ab90babe0a4e86d8c2b51f",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ec46bafca72b1b8b243a48d47023d1e750da08f5/surefire-api/src/main/java/org/apache/maven/surefire/report/SimpleReportEntry.java",
                "deletions": 2,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/report/SimpleReportEntry.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/report/SimpleReportEntry.java?ref=ec46bafca72b1b8b243a48d47023d1e750da08f5",
                "patch": "@@ -55,11 +55,11 @@ protected SimpleReportEntry( String source, String name, StackTraceWriter stackT\n     {\n         if ( source == null )\n         {\n-            throw new NullPointerException( \"source is null\" );\n+            source = \"null\";\n         }\n         if ( name == null )\n         {\n-            throw new NullPointerException( \"name is null\" );\n+            name = \"null\";\n         }\n \n         this.source = source;",
                "changes": 4,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ec46bafca72b1b8b243a48d47023d1e750da08f5/surefire-api/src/main/java/org/apache/maven/surefire/report/SimpleReportEntry.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-1041] Do not crash with NPE in case a JUnit runner fails\nSubmitted by: Dan Fabulich\n\no Applied without changes",
        "commit": "https://github.com/apache/maven-surefire/commit/ec46bafca72b1b8b243a48d47023d1e750da08f5"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
        "bug_id": "maven-surefire_15",
        "file": [
            {
                "additions": 6,
                "sha": "72543649eaffea8104774f1df2cff07c12091bc0",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java",
                "deletions": 3,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java?ref=6f51572efbb6f3b0132d3225e9077c11bb6e70b9",
                "patch": "@@ -135,9 +135,12 @@ public void testStarting( ReportEntry description )\n     public void testSucceeded( ReportEntry report )\n     {\n         TestMethod testMethod = getTestMethod();\n-        testMethod.testFinished();\n-        testMethod.getTestSet().incrementFinishedTests( getRunListener(), reportImmediately );\n-        testMethod.detachFromCurrentThread();\n+        if ( null != testMethod )\n+        {\n+            testMethod.testFinished();\n+            testMethod.getTestSet().incrementFinishedTests( getRunListener(), reportImmediately );\n+            testMethod.detachFromCurrentThread();\n+        }\n     }\n \n     private TestMethod getOrCreateThreadAttachedTestMethod( ReportEntry description )",
                "changes": 9,
                "blob_url": "https://github.com/apache/maven-surefire/blob/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java"
            },
            {
                "additions": 1,
                "sha": "dc1ae279347522cd493b534f70c4dae250d629b1",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java",
                "deletions": 1,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java?ref=6f51572efbb6f3b0132d3225e9077c11bb6e70b9",
                "patch": "@@ -89,7 +89,7 @@ private void setEndTime()\n \n     public int getElapsed()\n     {\n-        return (int) ( endTime - startTime );\n+        return endTime > 0 ? (int) ( endTime - startTime ) : 0;\n     }\n \n ",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-991] fixed NPE in ConcurrentRunListener for the case that a testSucceeds is called more often that testStarting (issue with the cucumber test runner)",
        "commit": "https://github.com/apache/maven-surefire/commit/6f51572efbb6f3b0132d3225e9077c11bb6e70b9"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/2feedb6b16494ca4a573a6f796a3e1ef85f5724e",
        "bug_id": "maven-surefire_16",
        "file": [
            {
                "additions": 9,
                "sha": "f2e8e28455b97178ad2ef033f8f3d4207521b63e",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java",
                "deletions": 5,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "patch": "@@ -27,9 +27,11 @@\n import org.apache.maven.surefire.report.ReportEntry;\n import org.apache.maven.surefire.report.ReporterException;\n \n+import static org.apache.maven.plugin.surefire.report.FileReporterUtils.stripIllegalFilenameChars;\n+\n /**\n  * Base class for file reporters.\n- *\n+ * \n  * @author <a href=\"mailto:brett@apache.org\">Brett Porter</a>\n  * @author Kristian Rosenvold\n  */\n@@ -55,12 +57,12 @@ private PrintWriter testSetStarting( ReportEntry report )\n \n         File reportDir = reportFile.getParentFile();\n \n-        //noinspection ResultOfMethodCallIgnored\n+        // noinspection ResultOfMethodCallIgnored\n         reportDir.mkdirs();\n \n         if ( deleteOnStarting && reportFile.exists() )\n         {\n-            //noinspection ResultOfMethodCallIgnored\n+            // noinspection ResultOfMethodCallIgnored\n             reportFile.delete();\n         }\n \n@@ -89,11 +91,13 @@ public static File getReportFile( File reportsDirectory, String reportEntryName,\n \n         if ( reportNameSuffix != null && reportNameSuffix.length() > 0 )\n         {\n-            reportFile = new File( reportsDirectory, reportEntryName + \"-\" + reportNameSuffix + fileExtension );\n+            reportFile =\n+                new File( reportsDirectory, stripIllegalFilenameChars( reportEntryName + \"-\" + reportNameSuffix\n+                    + fileExtension ) );\n         }\n         else\n         {\n-            reportFile = new File( reportsDirectory, reportEntryName + fileExtension );\n+            reportFile = new File( reportsDirectory, stripIllegalFilenameChars( reportEntryName + fileExtension ) );\n         }\n         return reportFile;\n     }",
                "changes": 14,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java"
            },
            {
                "additions": 50,
                "sha": "5009da9fa9f79a98956106beb5699bd19ab932dd",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java",
                "deletions": 0,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "patch": "@@ -0,0 +1,50 @@\n+package org.apache.maven.plugin.surefire.report;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * Utils class for file-based reporters\n+ * \n+ * @author Andreas Gudian\n+ */\n+public class FileReporterUtils\n+{\n+    public static String stripIllegalFilenameChars( String original )\n+    {\n+        String result = original;\n+        String illegalChars = getOSSpecificIllegalChars();\n+        for ( int i = 0; i < illegalChars.length(); i++ )\n+            result = result.replace( illegalChars.charAt( i ), '_' );\n+\n+        return result;\n+    }\n+\n+    private static String getOSSpecificIllegalChars()\n+    {\n+        if ( System.getProperty( \"os.name\" ).toLowerCase().startsWith( \"win\" ) )\n+        {\n+            return \"\\\\/:*?\\\"<>|\\0\";\n+        }\n+        else\n+        {\n+            return \"/\\0\";\n+        }\n+    }\n+}",
                "changes": 50,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java"
            },
            {
                "additions": 7,
                "sha": "cb3314fe845bd1259863d68b59a5db940383c506",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java",
                "deletions": 3,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "patch": "@@ -32,6 +32,8 @@\n import org.apache.maven.surefire.report.ReporterException;\n import org.apache.maven.surefire.report.SafeThrowable;\n \n+import static org.apache.maven.plugin.surefire.report.FileReporterUtils.stripIllegalFilenameChars;\n+\n /**\n  * XML format reporter writing to <code>TEST-<i>reportName</i>[-<i>suffix</i>].xml</code> file like written and read\n  * by Ant's <a href=\"http://ant.apache.org/manual/Tasks/junit.html\"><code>&lt;junit&gt;</code></a> and\n@@ -148,16 +150,18 @@ private File getReportFile( ReportEntry report, File reportsDirectory, String re\n \n         if ( reportNameSuffix != null && reportNameSuffix.length() > 0 )\n         {\n-            reportFile = new File( reportsDirectory, \"TEST-\" + report.getName() + \"-\" + reportNameSuffix + \".xml\" );\n+            reportFile =\n+                new File( reportsDirectory, stripIllegalFilenameChars( \"TEST-\" + report.getName() + \"-\"\n+                    + reportNameSuffix + \".xml\" ) );\n         }\n         else\n         {\n-            reportFile = new File( reportsDirectory, \"TEST-\" + report.getName() + \".xml\" );\n+            reportFile = new File( reportsDirectory, stripIllegalFilenameChars( \"TEST-\" + report.getName() + \".xml\" ) );\n         }\n \n         return reportFile;\n     }\n-\n+    \n     private static void startTestElement( XMLWriter ppw, WrappedReportEntry report, String reportNameSuffix )\n     {\n         ppw.startElement( \"testcase\" );",
                "changes": 10,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java"
            },
            {
                "additions": 32,
                "sha": "dcf861512e3f555fd1e85c56b06ac7d05dcba926",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "deletions": 8,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "patch": "@@ -24,7 +24,6 @@\n import org.apache.maven.surefire.report.RunListener;\n import org.apache.maven.surefire.report.SimpleReportEntry;\n import org.apache.maven.surefire.testset.TestSetFailedException;\n-\n import org.junit.runner.Description;\n import org.junit.runner.Result;\n import org.junit.runner.notification.Failure;\n@@ -39,7 +38,7 @@\n     implements ConsoleOutputReceiver\n {\n \n-    private java.lang.Class<?> currentTestClass;\n+    private Description currentTestSetDescription;\n \n     private Description lastFinishedDescription;\n \n@@ -57,14 +56,20 @@ public synchronized void writeTestOutput( byte[] buf, int off, int len, boolean\n \n     protected SimpleReportEntry createReportEntry( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getDisplayName()/*,\n-                                       (int) ( System.currentTimeMillis() - startTime ) */);\n+        return new SimpleReportEntry( description.getClassName(), description.getDisplayName()/*\n+                                                                                               * , (int) (\n+                                                                                               * System.currentTimeMillis\n+                                                                                               * () - startTime )\n+                                                                                               */);\n     }\n \n     protected SimpleReportEntry createReportEntryForTestSet( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getClassName() /*,\n-                                       (int) ( System.currentTimeMillis() - startTime ) */);\n+        return new SimpleReportEntry( description.getClassName(), description.getClassName() /*\n+                                                                                              * , (int) (\n+                                                                                              * System.currentTimeMillis\n+                                                                                              * () - startTime )\n+                                                                                              */);\n     }\n \n     @Override\n@@ -77,9 +82,9 @@ public void testStarted( Description description )\n \n     private void finishLastTestSetIfNeccessary( Description description )\n     {\n-        if ( !description.getTestClass().equals( currentTestClass ) )\n+        if ( describesNewTestSet( description ) )\n         {\n-            currentTestClass = description.getTestClass();\n+            currentTestSetDescription = description;\n             if ( lastFinishedDescription != null )\n             {\n                 reporter.testSetCompleted( createReportEntryForTestSet( lastFinishedDescription ) );\n@@ -89,6 +94,25 @@ private void finishLastTestSetIfNeccessary( Description description )\n         }\n     }\n \n+    private boolean describesNewTestSet( Description description )\n+    {\n+        if ( currentTestSetDescription != null )\n+        {\n+            if ( null != description.getTestClass() )\n+            {\n+                return !description.getTestClass().equals( currentTestSetDescription.getTestClass() );\n+            }\n+            else if ( description.isSuite() )\n+            {\n+                return description.getChildren().equals( currentTestSetDescription.getChildren() );\n+            }\n+            \n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n     @Override\n     public void testFinished( Description description )\n         throws Exception",
                "changes": 40,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-991] fixed yet another NPE with null testClass in Description, fixed file reporting for the case that illegal characters were part of the file name",
        "commit": "https://github.com/apache/maven-surefire/commit/3d903eb72c04231c2ad75cfd8dd385b5e478e19f"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/cd03018073f85ae6379acf554bfbdd471bbdd6fc",
        "bug_id": "maven-surefire_17",
        "file": [
            {
                "additions": 10,
                "sha": "a15e6ff92f7ba41ab62bbfbb1700cc1b138e1e5b",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/9c6abc2acf75e93f01596683a60c426810c7e7ee/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java",
                "deletions": 2,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java?ref=9c6abc2acf75e93f01596683a60c426810c7e7ee",
                "patch": "@@ -75,7 +75,11 @@ public void testSetCompleted( ReportEntry result )\n \n     public void testFailed( ReportEntry failure )\n     {\n-        getOrCreateTestMethod( failure ).testFailure( failure );\n+    \tfinal TestMethod testMethod = getOrCreateTestMethod( failure );\n+        if (testMethod != null)\n+        {\n+        \ttestMethod.testFailure( failure );\n+        }\n     }\n \n     public void testError( ReportEntry failure )\n@@ -97,7 +101,11 @@ public void testSkipped( ReportEntry description )\n \n     public void testAssumptionFailure( ReportEntry failure )\n     {\n-        getOrCreateTestMethod( failure ).testIgnored( failure );\n+    \tfinal TestMethod testMethod = getOrCreateTestMethod( failure );\n+    \tif (testMethod != null)\n+        {\n+    \t\ttestMethod.testIgnored( failure );\n+        }\n     }\n \n     public void testStarting( ReportEntry description )",
                "changes": 12,
                "blob_url": "https://github.com/apache/maven-surefire/blob/9c6abc2acf75e93f01596683a60c426810c7e7ee/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-912] NPE in ConcurrentReporterManager\n\nPatch by Cristian Vazzolla, applied unmodified. Unfortunately we have no testcase for this, although we\nhave multiple bug reports of the same issue",
        "commit": "https://github.com/apache/maven-surefire/commit/9c6abc2acf75e93f01596683a60c426810c7e7ee"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/241611ad43cdb3ddfb65f37ddbf274cd0c3f774a",
        "bug_id": "maven-surefire_18",
        "file": [
            {
                "additions": 9,
                "sha": "1a177e0eff6ed889466541f01b48765321c6cd74",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/08233b880bf4eed13d04cd91e189db93a8c5bf70/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "deletions": 2,
                "filename": "surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java?ref=08233b880bf4eed13d04cd91e189db93a8c5bf70",
                "patch": "@@ -59,8 +59,15 @@ public Filter createGroupFilter( Properties providerProperties )\n         GroupMatcher included = commaSeparatedListToFilters( groups );\n         GroupMatcher excluded = commaSeparatedListToFilters( excludedGroups );\n \n-        included.loadGroupClasses( testClassLoader );\n-        excluded.loadGroupClasses( testClassLoader );\n+        if ( included != null && testClassLoader != null )\n+        {\n+            included.loadGroupClasses( testClassLoader );\n+        }\n+\n+        if ( excluded != null && testClassLoader != null )\n+        {\n+            excluded.loadGroupClasses( testClassLoader );\n+        }\n \n         return new GroupMatcherCategoryFilter( included, excluded );\n     }",
                "changes": 11,
                "blob_url": "https://github.com/apache/maven-surefire/blob/08233b880bf4eed13d04cd91e189db93a8c5bf70/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-809] fixing NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1235414 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/08233b880bf4eed13d04cd91e189db93a8c5bf70"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/cb3e4e39d5ead7d26e3ff013c1a09566a30c3d27",
        "bug_id": "maven-surefire_19",
        "file": [
            {
                "additions": 40,
                "sha": "df525f98081b0c500f09eb516fe34c193a500a98",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/bb7c2de8ca5b01e568c7f97235822303fda4ed4b/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "deletions": 30,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=bb7c2de8ca5b01e568c7f97235822303fda4ed4b",
                "patch": "@@ -19,6 +19,17 @@\n  * under the License.\n  */\n \n+import java.io.File;\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.Set;\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.DependencyResolutionRequiredException;\n import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n@@ -58,18 +69,6 @@\n import org.apache.maven.toolchain.Toolchain;\n import org.codehaus.plexus.util.StringUtils;\n \n-import java.io.File;\n-import java.lang.reflect.Method;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.Set;\n-\n /**\n  * Abstract base class for running tests using Surefire.\n  *\n@@ -293,7 +292,8 @@ protected ProviderConfiguration createProviderConfiguration( ForkConfiguration f\n         TestArtifactInfo testNg =\n             isTestNg ? new TestArtifactInfo( testNgArtifact.getVersion(), testNgArtifact.getClassifier() ) : null;\n         List testXml = getSuiteXmlFiles() != null ? Arrays.asList( getSuiteXmlFiles() ) : null;\n-        TestRequest testSuiteDefinition = new TestRequest( testXml, getTestSourceDirectory(), getTest(), getTestMethod() );\n+        TestRequest testSuiteDefinition =\n+            new TestRequest( testXml, getTestSourceDirectory(), getTest(), getTestMethod() );\n         final boolean failIfNoTests;\n \n         if ( isValidSuiteXmlFileConfig() && getTest() == null )\n@@ -365,10 +365,11 @@ protected StartupConfiguration createStartupConfiguration( ForkConfiguration for\n             final Classpath providerClasspath = provider.getProviderClasspath();\n             final Classpath testClasspath = generateTestClasspath();\n \n-            logClasspath(  testClasspath, \"test classpath\" );\n-            logClasspath(  testClasspath, \"provider classpath\" );\n-             final ClasspathConfiguration classpathConfiguration =new ClasspathConfiguration( testClasspath, providerClasspath,\n-                                        isEnableAssertions(), isChildDelegation() );\n+            logClasspath( testClasspath, \"test classpath\" );\n+            logClasspath( testClasspath, \"provider classpath\" );\n+            final ClasspathConfiguration classpathConfiguration =\n+                new ClasspathConfiguration( testClasspath, providerClasspath, isEnableAssertions(),\n+                                            isChildDelegation() );\n \n             return new StartupConfiguration( providerName, classpathConfiguration, classLoaderConfiguration,\n                                              forkConfiguration.isForking(), false, isRedirectTestOutputToFile() );\n@@ -624,9 +625,10 @@ private void verifyLegalSystemProperties()\n         {\n             String key = (String) iter.next();\n \n-            if (\"java.library.path\".equals( key ))\n+            if ( \"java.library.path\".equals( key ) )\n             {\n-               getLog().warn( \"java.library.path cannot be set as system property, use <argLine>-Djava.library.path=...<argLine> instead\");\n+                getLog().warn(\n+                    \"java.library.path cannot be set as system property, use <argLine>-Djava.library.path=...<argLine> instead\" );\n             }\n         }\n     }\n@@ -729,12 +731,13 @@ protected ClassLoaderConfiguration getClassLoaderConfiguration( ForkConfiguratio\n      *\n      * @return List containing the classpath elements\n      * @throws org.apache.maven.artifact.DependencyResolutionRequiredException\n-     *          when dependency resolution fails\n+     *                                     when dependency resolution fails\n      * @throws org.apache.maven.plugin.MojoExecutionException\n-     *          upon other problems\n-     * @throws InvalidVersionSpecificationException when it happens\n-     * @throws MojoFailureException when it happens\n-     * @throws ArtifactNotFoundException when it happens\n+     *                                     upon other problems\n+     * @throws InvalidVersionSpecificationException\n+     *                                     when it happens\n+     * @throws MojoFailureException        when it happens\n+     * @throws ArtifactNotFoundException   when it happens\n      * @throws ArtifactResolutionException when it happens\n      */\n     public Classpath generateTestClasspath()\n@@ -780,12 +783,13 @@ public Classpath generateTestClasspath()\n             for ( Iterator iter = getAdditionalClasspathElements().iterator(); iter.hasNext(); )\n             {\n                 String classpathElement = (String) iter.next();\n-                if (classpathElement != null){\n+                if ( classpathElement != null )\n+                {\n                     classpath.add( classpathElement );\n                 }\n             }\n         }\n-        \n+\n         // adding TestNG MethodSelector to the classpath\n         // Todo: move\n         if ( getTestNgArtifact() != null )\n@@ -796,13 +800,14 @@ public Classpath generateTestClasspath()\n \n         }\n \n-        return new Classpath(classpath);\n+        return new Classpath( classpath );\n     }\n-    \n+\n     protected Artifact getTestNgUtilsArtifact()\n         throws ArtifactResolutionException, ArtifactNotFoundException\n     {\n-        Artifact surefireArtifact = (Artifact) getPluginArtifactMap().get( \"org.apache.maven.surefire:surefire-booter\" );\n+        Artifact surefireArtifact =\n+            (Artifact) getPluginArtifactMap().get( \"org.apache.maven.surefire:surefire-booter\" );\n         String surefireVersion = surefireArtifact.getBaseVersion();\n         Artifact testNgUtils =\n             getArtifactFactory().createArtifact( \"org.apache.maven.surefire\", \"surefire-testng-utils\", surefireVersion,\n@@ -811,7 +816,7 @@ protected Artifact getTestNgUtilsArtifact()\n         getArtifactResolver().resolve( testNgUtils, getRemoteRepositories(), getLocalRepository() );\n         return testNgUtils;\n     }\n-    \n+\n     /**\n      * Return a new set containing only the artifacts accepted by the given filter.\n      *\n@@ -1051,6 +1056,11 @@ else if ( PLAIN_REPORT_FORMAT.equals( getReportFormat() ) )\n     protected void ensureWorkingDirectoryExists()\n         throws MojoFailureException\n     {\n+        if ( getWorkingDirectory() == null )\n+        {\n+            throw new MojoFailureException( \"workingDirectory cannot be null\" );\n+        }\n+\n         if ( !getWorkingDirectory().exists() )\n         {\n             if ( !getWorkingDirectory().mkdirs() )",
                "changes": 70,
                "blob_url": "https://github.com/apache/maven-surefire/blob/bb7c2de8ca5b01e568c7f97235822303fda4ed4b/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-715] Fixed NPE when workingDirectory is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1091058 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/bb7c2de8ca5b01e568c7f97235822303fda4ed4b"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/21f6d58c3bbb48bb6e3b02d48020ef34d1f67223",
        "bug_id": "maven-surefire_20",
        "file": [
            {
                "additions": 6,
                "sha": "6cd0fb32df961be64bfba4b1b8d5b1bb875f37f2",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/36a68c35753954a4d86273bea42b23aaaa6e9b24/surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "deletions": 3,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java?ref=36a68c35753954a4d86273bea42b23aaaa6e9b24",
                "patch": "@@ -48,8 +48,11 @@ public PojoStackTraceWriter( String testClass, String testMethod, Throwable t )\n     public String writeTraceToString()\n     {\n         StringWriter w = new StringWriter();\n-        t.printStackTrace( new PrintWriter( w ) );\n-        w.flush();\n+        if ( t != null )\n+        {\n+            t.printStackTrace( new PrintWriter( w ) );\n+            w.flush();\n+        }\n         return w.toString();\n     }\n \n@@ -69,7 +72,7 @@ public String writeTrimmedTraceToString()\n             if ( line.startsWith( marker ) )\n             {\n                 lastLine = i;\n-            } else if ( line.startsWith( \"Caused by\" ) ) \n+            } else if ( line.startsWith( \"Caused by\" ) )\n             {\n                 causedByLine = i;\n                 break;",
                "changes": 9,
                "blob_url": "https://github.com/apache/maven-surefire/blob/36a68c35753954a4d86273bea42b23aaaa6e9b24/surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "SUREFIRE-444 NPE in PojoStackTraceWriter.writeTraceToString\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@615569 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/36a68c35753954a4d86273bea42b23aaaa6e9b24"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/0061fe7019406d18eecce64645afd6ae8af784ca",
        "bug_id": "maven-surefire_21",
        "file": [
            {
                "additions": 6,
                "sha": "d121d3c7d93753f7cf98dff64d3308b4718eb6a5",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java",
                "deletions": 3,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java?ref=9e4b67caa4e4a006ca7a54b278b16af722196040",
                "patch": "@@ -59,10 +59,13 @@ private boolean isValidJUnit4Test( Class testClass )\n             return false;\n         }\n \n-        Annotation runWithAnnotation = testClass.getAnnotation( runWith );\n-        if ( runWithAnnotation != null )\n+        if ( runWith != null )\n         {\n-            return true;\n+            Annotation runWithAnnotation = testClass.getAnnotation( runWith );\n+            if ( runWithAnnotation != null )\n+            {\n+                return true;\n+            }\n         }\n \n         Class classToCheck = testClass;",
                "changes": 9,
                "blob_url": "https://github.com/apache/maven-surefire/blob/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java"
            },
            {
                "additions": 26,
                "sha": "c65bc20046d2437b7a031b28072f4b71db1793ab",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java",
                "deletions": 0,
                "filename": "surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java?ref=9e4b67caa4e4a006ca7a54b278b16af722196040",
                "patch": "@@ -18,6 +18,8 @@\n  * under the License.\n  */\n \n+import java.util.Collections;\n+import java.util.Set;\n import org.apache.maven.surefire.common.junit4.JUnit4TestChecker;\n import org.apache.maven.surefire.testset.TestSetFailedException;\n \n@@ -115,6 +117,22 @@ public void innerClassNotAutomaticallyTc()\n         assertFalse( jUnit4TestChecker.accept( NestedTC.Inner.class ) );\n     }\n \n+    @Test\n+    public void testCannotLoadRunWithAnnotation()\n+        throws Exception\n+    {\n+        Class testClass = SimpleJUnit4TestClass.class;\n+        ClassLoader testClassLoader = testClass.getClassLoader();\n+        // Emulate an OSGi classloader which filters on package level.\n+        // Use a classloader which can only load classes in package org.junit,\n+        // e.g. org.junit.Test, but no classes from other packages,\n+        // in particular org.junit.runner.RunWith can't be loaded\n+        Set<String> visiblePackages = Collections.singleton( \"org.junit\" );\n+        PackageFilteringClassLoader filteringTestClassloader =\n+            new PackageFilteringClassLoader( testClassLoader, visiblePackages );\n+        JUnit4TestChecker checker = new JUnit4TestChecker( filteringTestClassloader );\n+        assertTrue( checker.accept( testClass ) );\n+    }\n \n     public static class AlsoValid\n         extends TestCase\n@@ -218,6 +236,14 @@ public void testSomething()\n \n         }\n     }\n+    \n+    public static class SimpleJUnit4TestClass\n+    {\n+        @Test\n+        public void testMethod()\n+        {\n+        }\n+    }\n \n     class MySuite\n         extends Suite",
                "changes": 26,
                "blob_url": "https://github.com/apache/maven-surefire/blob/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java"
            },
            {
                "additions": 61,
                "sha": "68c4434bb8c0a9d550c35d4b83a77582d04de531",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java",
                "deletions": 0,
                "filename": "surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java?ref=9e4b67caa4e4a006ca7a54b278b16af722196040",
                "patch": "@@ -0,0 +1,61 @@\n+package org.apache.maven.surefire.junit4;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.Set;\n+\n+/**\n+ * Emulate an OSGi classloader which only loads packages that have been imported via Import-Package MANIFEST header.\n+ */\n+public class PackageFilteringClassLoader\n+    extends ClassLoader\n+{\n+\n+    private ClassLoader wrapped;\n+\n+    private Set<String> visiblePackages;\n+\n+    public PackageFilteringClassLoader( ClassLoader wrapped, Set<String> visiblePackages )\n+    {\n+        this.wrapped = wrapped;\n+        this.visiblePackages = visiblePackages;\n+    }\n+\n+    @Override\n+    public Class<?> loadClass( String className )\n+        throws ClassNotFoundException\n+    {\n+        String packageName = \"\";\n+        int lastDot = className.lastIndexOf( '.' );\n+        if ( lastDot != -1 )\n+        {\n+            packageName = className.substring( 0, lastDot );\n+        }\n+        if ( visiblePackages.contains( packageName ) )\n+        {\n+            return wrapped.loadClass( className );\n+        }\n+        else\n+        {\n+            throw new ClassNotFoundException( className );\n+        }\n+    }\n+\n+}",
                "changes": 61,
                "blob_url": "https://github.com/apache/maven-surefire/blob/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-825] NPE when RunWith cant be loaded\n\nPatch and testcase by Jan Sievers, accepted unmodified.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1245650 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/9e4b67caa4e4a006ca7a54b278b16af722196040"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/7ea8a0a82f5c5ccc43c21aeac8d3ac8d2a473a66",
        "bug_id": "maven-surefire_22",
        "file": [
            {
                "additions": 14,
                "sha": "9bec8c5374b8342184b1d645f398d9201cb0c132",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java",
                "deletions": 2,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -291,7 +291,7 @@ private String encode( String source )\n \n     private ForkingRunListener nullableEncoding( StringBuffer stringBuffer, String source )\n     {\n-        if ( source == null || source.length() == 0)\n+        if ( source == null || source.length() == 0 )\n         {\n             stringBuffer.append( \"null\" );\n         }\n@@ -311,7 +311,7 @@ private void encode( StringBuffer stringBuffer, StackTraceWriter stackTraceWrite\n             final Throwable throwable = stackTraceWriter.getThrowable();\n             if ( throwable != null )\n             {\n-                String message = throwable.getLocalizedMessage();\n+                String message = safeGetLocalizedMessage( throwable );\n                 nullableEncoding( stringBuffer, message );\n             }\n             comma( stringBuffer );\n@@ -321,4 +321,16 @@ private void encode( StringBuffer stringBuffer, StackTraceWriter stackTraceWrite\n                 : stackTraceWriter.writeTraceToString() );\n         }\n     }\n+\n+    private String safeGetLocalizedMessage( Throwable throwable )\n+    {\n+        try\n+        {\n+            return throwable.getLocalizedMessage();\n+        }\n+        catch ( Throwable t )\n+        {\n+            return t.getLocalizedMessage();\n+        }\n+    }\n }",
                "changes": 16,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java"
            },
            {
                "additions": 36,
                "sha": "410657f4e1bd179880a30f5f6a137a1057fa5f7e",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -0,0 +1,36 @@\n+package org.apache.maven.surefire.its.jiras;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.surefire.its.fixture.SurefireIntegrationTestCase;\n+\n+/**\n+ * SUREFIRE-818\n+ *\n+ * @author Kristian Rosenvold\n+ */\n+public class Surefire818NpeIgnoresTestsIT\n+    extends SurefireIntegrationTestCase\n+{\n+    public void testBuildFailingWhenErrors()\n+    {\n+        unpack(\"surefire-818-ignored-tests-on-npe\").executeTestWithFailure().assertTestSuiteResults(  2 ,0 , 1, 0 );\n+    }\n+}\n\\ No newline at end of file",
                "changes": 36,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java"
            },
            {
                "additions": 32,
                "sha": "8e5c3392957d2ac6adbaef593e6f48742d5b55db",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -0,0 +1,32 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n+    <modelVersion>4.0.0</modelVersion>\r\n+    <groupId>test</groupId>\r\n+    <artifactId>cyril</artifactId>\r\n+    <version>0.0.1-SNAPSHOT</version>\r\n+    <name>cyril</name>\r\n+\r\n+    <dependencies>\r\n+        <dependency>\r\n+            <groupId>junit</groupId>\r\n+            <artifactId>junit</artifactId>\r\n+            <version>4.4</version>\r\n+            <scope>test</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>jmock</groupId>\r\n+            <artifactId>jmock</artifactId>\r\n+            <version>1.1.0</version>\r\n+            <scope>test</scope>\r\n+        </dependency>\r\n+    </dependencies>\r\n+\r\n+    <build>\r\n+        <plugins>\r\n+            <plugin>\r\n+                <artifactId>maven-surefire-plugin</artifactId>\r\n+                <version>${surefire.version}</version>\r\n+            </plugin>\r\n+        </plugins>\r\n+    </build>\r\n+</project>\r",
                "changes": 32,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml"
            },
            {
                "additions": 36,
                "sha": "12d305c9193d226002453966105d8c9a45d14f68",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -0,0 +1,36 @@\n+package cyril.test;\r\n+\r\n+\r\n+import org.jmock.Mock;\r\n+import org.jmock.MockObjectTestCase;\r\n+import org.junit.Test;\r\n+\r\n+\r\n+public class FirstTest\r\n+    extends MockObjectTestCase\r\n+{\r\n+\r\n+    private Mock myServiceMock;\r\n+\r\n+    @Override\r\n+    protected void setUp()\r\n+        throws Exception\r\n+    {\r\n+        myServiceMock = mock( MyService.class );\r\n+    }\r\n+\r\n+\r\n+    @Test\r\n+    public void test()\r\n+    {\r\n+\r\n+        Message myMessage = new Message( \"MyMessage\" );\r\n+        // Expectations\r\n+        myServiceMock.expects( once() ).method( \"writeMessage\" ).with( eq( myMessage ) ).will(\r\n+            returnValue( myMessage ) );\r\n+\r\n+        ( (MyService) myServiceMock.proxy() ).writeMessage( null );\r\n+\r\n+    }\r\n+\r\n+}\r",
                "changes": 36,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java"
            },
            {
                "additions": 16,
                "sha": "80ff3120a2563f2578fbd49acac7d23e195320df",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -0,0 +1,16 @@\n+package cyril.test;\r\n+\r\n+import org.junit.Test;\r\n+\r\n+\r\n+public class IgnoredTest\r\n+{\r\n+\r\n+\r\n+    @Test\r\n+    public void test()\r\n+    {\r\n+        System.out.println( \"My test is running fine\" );\r\n+    }\r\n+\r\n+}\r",
                "changes": 16,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java"
            },
            {
                "additions": 18,
                "sha": "c3e4249ae1388750aa0ebd8aa59b7f85668d356f",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -0,0 +1,18 @@\n+package cyril.test;\r\n+\r\n+public class Message\r\n+{\r\n+\r\n+    private String content;\r\n+\r\n+    public Message( String content )\r\n+    {\r\n+        this.content = content;\r\n+    }\r\n+\r\n+    public int hashCode()\r\n+    {\r\n+        throw new NullPointerException();\r\n+    }\r\n+\r\n+}\r",
                "changes": 18,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java"
            },
            {
                "additions": 8,
                "sha": "892351f8d820da297b5eb2e5e9443d79f2f9b391",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -0,0 +1,8 @@\n+package cyril.test;\r\n+\r\n+public interface MyService\r\n+{\r\n+\r\n+    public Message writeMessage( Message aMessage );\r\n+\r\n+}\r",
                "changes": 8,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java"
            },
            {
                "additions": 12,
                "sha": "fc7f2b9ef1ca3c1b1b0cd1d7d015d5b9390dbcc7",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -0,0 +1,12 @@\n+package cyril.test;\r\n+\r\n+public class MyServiceImpl\r\n+    implements MyService\r\n+{\r\n+\r\n+    public Message writeMessage( Message aMessage )\r\n+    {\r\n+        return aMessage;\r\n+    }\r\n+\r\n+}\r",
                "changes": 12,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java"
            },
            {
                "additions": 10,
                "sha": "628f1baba2b955aadca345570da35246a866dd7a",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java",
                "deletions": 1,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "patch": "@@ -19,7 +19,9 @@\n  * under the License.\n  */\n \n+import org.apache.maven.surefire.report.PojoStackTraceWriter;\n import org.apache.maven.surefire.report.StackTraceWriter;\n+\n import org.junit.runner.notification.Failure;\n \n /**\n@@ -61,7 +63,14 @@ public String writeTraceToString()\n      */\n     public String writeTrimmedTraceToString()\n     {\n-        return junitFailure.getTrace();\n+        try\n+        {\n+            return junitFailure.getTrace();\n+        }\n+        catch ( Throwable t )\n+        {\n+            return new PojoStackTraceWriter( \"\", \"\", t ).writeTrimmedTraceToString();\n+        }\n     }\n \n     /**",
                "changes": 11,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-818] NPE in reporting causes ignoring of subsequent tests\n\nTest-project submitted by Cyril Vidal, fixed with integration test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1231490 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/28b1c314ff213cff0cd08f671a314bbecc02e18d"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/737bf3676d9cb4f16db20481df842fa17428cb71",
        "bug_id": "maven-surefire_23",
        "file": [
            {
                "additions": 4,
                "sha": "42fb5b79867789d116f0111c16f6535306e22420",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a8cb16d60903e7683823cd11b130cd0c417e95ce/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterFactory.java",
                "deletions": 0,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterFactory.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterFactory.java?ref=a8cb16d60903e7683823cd11b130cd0c417e95ce",
                "patch": "@@ -155,4 +155,8 @@ public RunStatistics getGlobalRunStatistics()\n     {\n         return globalStats;\n     }\n+\n+    public static FileReporterFactory defaultNoXml(){\n+        return new FileReporterFactory( StartupReportConfiguration.defaultNoXml() );\n+    }\n }",
                "changes": 4,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a8cb16d60903e7683823cd11b130cd0c417e95ce/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterFactory.java"
            },
            {
                "additions": 15,
                "sha": "49d7c07034dd3baddf1121f2a01b4e288fd8ad63",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java",
                "deletions": 2,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java?ref=a8cb16d60903e7683823cd11b130cd0c417e95ce",
                "patch": "@@ -74,7 +74,11 @@ public void testFailed( ReportEntry failure )\n \n     public void testError( ReportEntry failure )\n     {\n-        getOrCreateTestMethod( failure ).testError( failure );\n+        final TestMethod testMethod = getOrCreateTestMethod( failure );\n+        if ( testMethod != null )\n+        {\n+            testMethod.testError( failure );\n+        }\n     }\n \n     public void testSkipped( ReportEntry description )\n@@ -115,7 +119,16 @@ private TestMethod getOrCreateTestMethod( ReportEntry description )\n             return threadTestMethod;\n         }\n         TestSet testSet = getTestSet( description );\n-        return testSet.createTestMethod( description );\n+        if ( testSet == null )\n+        {\n+            consoleLogger.info( description.getName() );\n+            consoleLogger.info( description.getStackTraceWriter().writeTraceToString() );\n+            return null;\n+        }\n+        else\n+        {\n+            return testSet.createTestMethod( description );\n+        }\n     }\n \n     protected abstract void checkIfTestSetCanBeReported( TestSet testSetForTest );",
                "changes": 17,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManager.java"
            },
            {
                "additions": 1,
                "sha": "15bfd49c58868c9993b65a0f9330e5e0ccb46736",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManagerTest.java",
                "deletions": 1,
                "filename": "surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManagerTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManagerTest.java?ref=a8cb16d60903e7683823cd11b130cd0c417e95ce",
                "patch": "@@ -398,7 +398,7 @@ public void testMe2()\n \n     private ReporterFactory createReporterFactory()\n     {\n-        return new FileReporterFactory( StartupReportConfiguration.defaultNoXml() );\n+        return FileReporterFactory.defaultNoXml();\n     }\n \n     public static ReporterConfiguration getTestReporterConfiguration()",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/ConcurrentReporterManagerTest.java"
            },
            {
                "additions": 1,
                "sha": "91cc60953c3046f7611cb560c66173d1f4ea1ca9",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTest.java",
                "deletions": 2,
                "filename": "surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTest.java?ref=a8cb16d60903e7683823cd11b130cd0c417e95ce",
                "patch": "@@ -19,7 +19,6 @@\n import java.io.File;\n import java.util.HashMap;\n import org.apache.maven.plugin.surefire.report.FileReporterFactory;\n-import org.apache.maven.surefire.booter.StartupReportConfiguration;\n import org.apache.maven.surefire.report.DefaultConsoleReporter;\n import org.apache.maven.surefire.report.ReporterConfiguration;\n import org.apache.maven.surefire.report.ReporterFactory;\n@@ -118,7 +117,7 @@\n     public void testSurefireShouldBeAbleToReportRunStatusEvenWithFailingTests()\n         throws Exception\n     {\n-        ReporterFactory reporterManagerFactory = new FileReporterFactory( StartupReportConfiguration.defaultNoXml() );\n+        ReporterFactory reporterManagerFactory = FileReporterFactory.defaultNoXml( );\n \n         final HashMap<String, TestSet> classMethodCounts = new HashMap<String, TestSet>();\n         RunListener reporter =",
                "changes": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTest.java"
            },
            {
                "additions": 1,
                "sha": "bdb48f5844449f4427526db5ca1136b92b4d0ebf",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit48RunnerTest.java",
                "deletions": 2,
                "filename": "surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit48RunnerTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit48RunnerTest.java?ref=a8cb16d60903e7683823cd11b130cd0c417e95ce",
                "patch": "@@ -19,7 +19,6 @@\n import java.io.File;\n import java.util.HashMap;\n import org.apache.maven.plugin.surefire.report.FileReporterFactory;\n-import org.apache.maven.surefire.booter.StartupReportConfiguration;\n import org.apache.maven.surefire.report.DefaultConsoleReporter;\n import org.apache.maven.surefire.report.ReporterConfiguration;\n import org.apache.maven.surefire.report.ReporterFactory;\n@@ -118,7 +117,7 @@\n     public void testSurefireShouldBeAbleToReportRunStatusEvenWithFailingTests()\n         throws Exception\n     {\n-        ReporterFactory reporterManagerFactory = new FileReporterFactory( StartupReportConfiguration.defaultNoXml() );\n+        ReporterFactory reporterManagerFactory = FileReporterFactory.defaultNoXml( );\n \n         final HashMap<String, TestSet> classMethodCounts = new HashMap<String, TestSet>();\n         RunListener reporter =",
                "changes": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit48RunnerTest.java"
            },
            {
                "additions": 134,
                "sha": "cbcfdf3cb038b99a6405a609bba06cbac3722a97",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/Surefire746Test.java",
                "deletions": 0,
                "filename": "surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/Surefire746Test.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/Surefire746Test.java?ref=a8cb16d60903e7683823cd11b130cd0c417e95ce",
                "patch": "@@ -0,0 +1,134 @@\n+/*\n+ * JBoss, Home of Professional Open Source\n+ * Copyright 2009, Red Hat Middleware LLC, and individual contributors\n+ * by the @authors tag. See the copyright.txt in the distribution for a\n+ * full listing of individual contributors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.maven.surefire.junitcore;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.concurrent.ConcurrentHashMap;\n+import org.apache.maven.plugin.surefire.report.FileReporterFactory;\n+import org.apache.maven.surefire.booter.BaseProviderFactory;\n+import org.apache.maven.surefire.report.ConsoleLogger;\n+import org.apache.maven.surefire.report.DefaultConsoleReporter;\n+import org.apache.maven.surefire.report.ReporterConfiguration;\n+import org.apache.maven.surefire.report.ReporterFactory;\n+import org.apache.maven.surefire.report.RunListener;\n+import org.apache.maven.surefire.suite.RunResult;\n+import org.apache.maven.surefire.util.TestsToRun;\n+\n+import junit.framework.Assert;\n+import org.junit.Test;\n+import org.junit.runner.Description;\n+import org.junit.runner.RunWith;\n+import org.junit.runner.notification.RunNotifier;\n+import org.junit.runners.BlockJUnit4ClassRunner;\n+import org.junit.runners.model.InitializationError;\n+\n+/**\n+ * <dependency>\n+ * <groupId>junit</groupId>\n+ * <artifactId>junit</artifactId>\n+ * <version>4.8.1</version>\n+ * <scope>test</scope>\n+ * </dependency>\n+ * <p/>\n+ * <dependency>\n+ * <groupId>org.apache.maven.surefire</groupId>\n+ * <artifactId>surefire-booter</artifactId>\n+ * <version>2.8.1</version>\n+ * <scope>test</scope>\n+ * </dependency>\n+ * <dependency>\n+ * <groupId>org.apache.maven.plugins</groupId>\n+ * <artifactId>maven-surefire-plugin</artifactId>\n+ * <version>2.8.1</version>\n+ * <scope>test</scope>\n+ * </dependency>\n+ * <dependency>\n+ * <groupId>org.apache.maven.surefire</groupId>\n+ * <artifactId>surefire-junit47</artifactId>\n+ * <version>2.8.1</version>\n+ * <scope>test</scope>\n+ * </dependency>\n+ *\n+ * @author <a href=\"mailto:aslak@redhat.com\">Aslak Knutsen</a>\n+ * @version $Revision: $\n+ */\n+public class Surefire746Test {\n+\n+    @Test\n+    public void surefireIsConfused_ByMultipleIgnore_OnClassLevel() throws Exception {\n+        ReporterFactory reporterFactory = FileReporterFactory.defaultNoXml( );\n+        BaseProviderFactory providerParameters = new BaseProviderFactory(reporterFactory, true);\n+        ConsoleLogger consoleLogger = new DefaultConsoleReporter( System.out );\n+\n+        providerParameters.setReporterConfiguration(new ReporterConfiguration(new File(\"\"), false));\n+        Properties junitProps = new Properties();\n+        junitProps.put(\"parallel\", \"none\");\n+\n+        JUnitCoreParameters jUnitCoreParameters = new JUnitCoreParameters(junitProps);\n+\n+        final Map<String, TestSet> testSetMap = new ConcurrentHashMap<String, TestSet>();\n+\n+        RunListener listener = ConcurrentReporterManager.createInstance(testSetMap, reporterFactory, false, false, consoleLogger);\n+\n+        TestsToRun testsToRun = new TestsToRun(Arrays.asList(new Class[]{TestClassTest.class}));\n+\n+        org.junit.runner.notification.RunListener jUnit4RunListener = new JUnitCoreRunListener(listener, testSetMap);\n+\n+        List<org.junit.runner.notification.RunListener> customRunListeners = new ArrayList<org.junit.runner.notification.RunListener>();\n+        customRunListeners.add(0, jUnit4RunListener);\n+\n+        JUnitCoreWrapper.execute(testsToRun, jUnitCoreParameters, customRunListeners, null);\n+\n+        RunResult result = reporterFactory.close();\n+\n+        Assert.assertEquals(\"JUnit should report correctly number of test ran(Finished)\", 1, result.getCompletedCount());\n+\n+    }\n+\n+    @RunWith(TestCaseRunner.class)\n+    public static class TestClassTest {\n+        @Test\n+        public void shouldNeverBeCalled() throws Exception {\n+            Assert.assertTrue(true);\n+        }\n+    }\n+\n+    public static class TestCaseRunner extends BlockJUnit4ClassRunner {\n+        public TestCaseRunner(Class<?> klass) throws InitializationError {\n+            super(klass);\n+        }\n+\n+        @Override\n+        public void run(RunNotifier notifier) {\n+            notifier.addListener(new TestRunListener());\n+            super.run(notifier);\n+        }\n+\n+    }\n+\n+    private static class TestRunListener extends org.junit.runner.notification.RunListener {\n+        @Override\n+        public void testFinished(Description description) throws Exception {\n+            throw new RuntimeException(\"This Exception will cause Surefire to receive a internal JUnit Description and fail\");\n+        }\n+    }\n+}\n\\ No newline at end of file",
                "changes": 134,
                "blob_url": "https://github.com/apache/maven-surefire/blob/a8cb16d60903e7683823cd11b130cd0c417e95ce/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/Surefire746Test.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-746] NPE with failing runlisteners.\n\nTestcase submitted by Aslak Knutsen, issues fixed by me. Testcase applied with modifications\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1205595 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/a8cb16d60903e7683823cd11b130cd0c417e95ce"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/bcef96efb159d88f4d3896da60eaf94687a6e0f9",
        "bug_id": "maven-surefire_24",
        "file": [
            {
                "additions": 16,
                "sha": "24895b1c4927bb8353715047bcf81b6416b3e97b",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "deletions": 8,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "patch": "@@ -375,21 +375,29 @@ protected StartupConfiguration createStartupConfiguration( ForkConfiguration for\n             throw new MojoExecutionException( \"Unable to generate test classpath: \" + e, e );\n         }\n \n-        getLog().debug( \"Test Classpath :\" );\n+        addClasspathElementsToClasspathConfiguration(classpathElements, classpathConfiguration);\n+        return new StartupConfiguration( providerName, classpathConfiguration, classLoaderConfiguration,\n+                                         forkConfiguration.isForking(), false, isRedirectTestOutputToFile() );\n+    }\n \n+    private void addClasspathElementsToClasspathConfiguration(List classpathElements, ClasspathConfiguration classpathConfiguration)\n+    {\n+        getLog().debug( \"Test classpath:\" );\n         for ( Iterator i = classpathElements.iterator(); i.hasNext(); )\n         {\n             String classpathElement = (String) i.next();\n-\n-            getLog().debug( \"  \" + classpathElement );\n-\n-            classpathConfiguration.addClasspathUrl( classpathElement );\n+            if ( classpathElement == null )\n+            {\n+                getLog().warn(\"The test classpath contains a null element.\");\n+            }\n+            else\n+            {\n+                getLog().debug( \"  \" + classpathElement );\n+                classpathConfiguration.addClasspathUrl( classpathElement );\n+            }\n         }\n-        return new StartupConfiguration( providerName, classpathConfiguration, classLoaderConfiguration,\n-                                         forkConfiguration.isForking(), false, isRedirectTestOutputToFile() );\n     }\n \n-\n     private boolean isSpecificTestSpecified()\n     {\n         return getTest() != null;",
                "changes": 24,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java"
            },
            {
                "additions": 2,
                "sha": "5ff5dd03999ddc632bcc9793adffa91de1e2b2f8",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java",
                "deletions": 2,
                "filename": "surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "patch": "@@ -19,6 +19,8 @@\n  * under the License.\n  */\n \n+import org.apache.maven.surefire.util.UrlUtils;\n+\n import java.io.File;\n import java.net.MalformedURLException;\n import java.util.ArrayList;\n@@ -27,8 +29,6 @@\n import java.util.List;\n import java.util.Properties;\n \n-import org.apache.maven.surefire.util.UrlUtils;\n-\n /**\n  * An ordered set of classpath elements\n  *",
                "changes": 4,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java"
            },
            {
                "additions": 28,
                "sha": "7b02ba305e17a2cea208bd15eb819365212e7bcf",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java",
                "deletions": 26,
                "filename": "surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "patch": "@@ -82,33 +82,7 @@ public void testSetForkProperties()\n         assertEquals( DUMMY_URL_2, properties.get( \"test1\" ) );\n     }\n \n-    public void testShouldThrowIllegalArgumentExceptionWhenNullIsAddedAsClassPathElementUrl()\n-        throws Exception\n-    {\n-        Classpath classpath = new Classpath();\n-        try\n-        {\n-            classpath.addClassPathElementUrl( null );\n-            fail( \"IllegalArgumentException not thrown.\" );\n-        }\n-        catch ( IllegalArgumentException expected )\n-        {\n-        }\n-    }\n \n-    public void testShouldNotAddNullAsClassPathElementUrl()\n-        throws Exception\n-    {\n-        Classpath classpath = new Classpath();\n-        try\n-        {\n-            classpath.addClassPathElementUrl( null );\n-        }\n-        catch ( IllegalArgumentException ignored )\n-        {\n-        }\n-        assertEmptyClasspath( classpath );\n-    }\n \n     public void testShouldJoinTwoNullClasspaths()\n     {\n@@ -183,4 +157,32 @@ private Classpath createClasspathWithTwoElements()\n         classpath.addClassPathElementUrl( DUMMY_URL_2 );\n         return classpath;\n     }\n+\n+    public void testShouldThrowIllegalArgumentExceptionWhenNullIsAddedAsClassPathElementUrl()\n+        throws Exception\n+    {\n+        Classpath classpath = new Classpath();\n+        try\n+        {\n+            classpath.addClassPathElementUrl( null );\n+            fail(\"IllegalArgumentException not thrown.\");\n+        }\n+        catch (IllegalArgumentException expected)\n+        {\n+        }\n+    }\n+\n+    public void testShouldNotAddNullAsClassPathElementUrl()\n+        throws Exception\n+    {\n+        Classpath classpath = new Classpath();\n+        try\n+        {\n+            classpath.addClassPathElementUrl( null );\n+        }\n+        catch (IllegalArgumentException ignored)\n+        {\n+        }\n+        assertEmptyClasspath( classpath );\n+    }\n }",
                "changes": 54,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java"
            },
            {
                "additions": 2,
                "sha": "6356b9be823ce8a8f558c748786ab971b0cf788c",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-integration-tests/src/test/resources/additional-classpath/pom.xml",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/additional-classpath/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/additional-classpath/pom.xml?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "patch": "@@ -36,6 +36,8 @@\n         <configuration>\n           <additionalClasspathElements>\n             <additionalClasspathElement>${basedir}/extraResource</additionalClasspathElement>\n+            <additionalClasspathElement>${abc}</additionalClasspathElement><!-- SUREFIRE-694 -->\n+            <additionalClasspathElement></additionalClasspathElement><!-- SUREFIRE-694 -->\n           </additionalClasspathElements>\n         </configuration>\n       </plugin>",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-integration-tests/src/test/resources/additional-classpath/pom.xml"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-694] NPE On empty additionalClassPath element\n\nPatch by Stefan Birkner, applied with merge\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1069066 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/fcc885b6eaffc9609d0e8e02011c2f560d131311"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/b18c5483907fe95cef99743e5b4135bacaaacf32",
        "bug_id": "maven-surefire_25",
        "file": [
            {
                "additions": 13,
                "sha": "75ab3ecab06768ef005fa05fcea3160b8ebb6a2d",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/375ed1a32170b464184dae855d920d99dbd7b052/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReportingRunListener.java",
                "deletions": 2,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReportingRunListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReportingRunListener.java?ref=375ed1a32170b464184dae855d920d99dbd7b052",
                "patch": "@@ -102,7 +102,17 @@ protected TestSet getTestSet( Description description )\n     public void testFailure( Failure failure )\n         throws Exception\n     {\n-        TestMethod.getThreadTestMethod().testFailure( failure );\n+        getOrCreateTestMethod(failure.getDescription()).testFailure( failure );\n+    }\n+\n+    private TestMethod getOrCreateTestMethod( Description description )\n+    {\n+        TestMethod threadTestMethod = TestMethod.getThreadTestMethod();\n+        if (threadTestMethod != null){\n+            return threadTestMethod;\n+        }\n+        TestSet testSet = getTestSet( description );\n+        return testSet.createTestMethod( description );\n     }\n \n     @Override\n@@ -116,7 +126,8 @@ public void testIgnored( Description description )\n         throws Exception\n     {\n         TestSet testSet = getTestSet( description );\n-        testSet.createTestMethod( description ).testIgnored( description );\n+        TestMethod testMethod = getTestSet( description ).createTestMethod( description );\n+        testMethod.testIgnored( description );\n         testSet.incrementFinishedTests( reporterManager, reportImmediately );\n     }\n ",
                "changes": 15,
                "blob_url": "https://github.com/apache/maven-surefire/blob/375ed1a32170b464184dae855d920d99dbd7b052/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentReportingRunListener.java"
            },
            {
                "additions": 177,
                "sha": "9b75bbbee10daeafb04df6171b618fb998d92708",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/375ed1a32170b464184dae855d920d99dbd7b052/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTestCase.java",
                "deletions": 0,
                "filename": "surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTestCase.java?ref=375ed1a32170b464184dae855d920d99dbd7b052",
                "patch": "@@ -0,0 +1,177 @@\n+/*\n+ * JBoss, Home of Professional Open Source\n+ * Copyright 2009, Red Hat Middleware LLC, and individual contributors\n+ * by the @authors tag. See the copyright.txt in the distribution for a\n+ * full listing of individual contributors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.maven.surefire.junitcore;\n+\n+import junit.framework.Assert;\n+import org.apache.maven.surefire.report.ConsoleReporter;\n+import org.apache.maven.surefire.report.ReporterManagerFactory;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.Computer;\n+import org.junit.runner.JUnitCore;\n+import org.junit.runner.Result;\n+import org.junit.runner.notification.Failure;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * TestCase that expose \"No tests were executed!\" on Test failure using Maven Surefire 2.6-SNAPSHOT\n+ * and the JUnit 4.7 Runner.\n+ *\n+ * -------------------------------------------------------\n+ *  T E S T S\n+ *  -------------------------------------------------------\n+ *\n+ *  Results :\n+ *\n+ *  Tests run: 0, Failures: 0, Errors: 0, Skipped: 0\n+ *\n+ *  [INFO] ------------------------------------------------------------------------\n+ *  [INFO] BUILD FAILURE\n+ *  [INFO] ------------------------------------------------------------------------\n+ *  [INFO] Total time: 11.011s\n+ *  [INFO] Finished at: Thu Jul 15 13:59:14 CEST 2010\n+ *  [INFO] Final Memory: 24M/355M\n+ *  [INFO] ------------------------------------------------------------------------\n+ *  [ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.5:test\n+ *  (default-test) on project xxxxxx: No tests were executed!  (Set -DfailIfNoTests=false to\n+ *  ignore this error.) -> [Help 1]\n+ *\n+ *\n+ *  <dependency>\n+ *      <groupId>junit</groupId>\n+ *      <artifactId>junit</artifactId>\n+ *      <version>4.8.1</version>\n+ *      <scope>test</scope>\n+ *  </dependency>\n+ *\n+ *  <dependency>\n+ *      <groupId>org.apache.maven.surefire</groupId>\n+ *      <artifactId>surefire-booter</artifactId>\n+ *      <version>2.6-SNAPSHOT</version>\n+ *      <scope>test</scope>\n+ *      </dependency>\n+ *  <dependency>\n+ *      <groupId>org.apache.maven.plugins</groupId>\n+ *      <artifactId>maven-surefire-plugin</artifactId>\n+ *      <version>2.6-SNAPSHOT</version>\n+ *      <scope>test</scope>\n+ *  </dependency>\n+ *  <dependency>\n+ *      <groupId>org.apache.maven.surefire</groupId>\n+ *      <artifactId>surefire-junit47</artifactId>\n+ *      <version>2.6-SNAPSHOT</version>\n+ *      <scope>test</scope>\n+ *  </dependency>\n+ *\n+ * @author <a href=\"mailto:aslak@redhat.com\">Aslak Knutsen</a>\n+ * @version $Revision: $\n+ */\n+public class MavenSurefireJUnit47RunnerTestCase\n+{\n+\n+   /*\n+    * Assumption:\n+    * The ConcurrentReportingRunListener assumes a Test will be Started before it Fails or Finishes.\n+    *\n+    * Reality:\n+    * JUnits ParentRunner is responsible for adding the BeforeClass/AfterClass statements to the\n+    * statement execution chain. After BeforeClass is executed, a Statement that delegates to the\n+    * abstract method: runChild(T child, RunNotifier notifier) is called. As the JavaDoc explains:\n+    * \"Subclasses are responsible for making sure that relevant test events are reported through {@code notifier}\".\n+    * When a @BeforeClass fail, the child that should handle the relevant test events(Started, Failed, Finished)\n+    * is never executed.\n+    *\n+    * Result:\n+    * When Test Failed event is received in ConcurrentReportingRunListener without a Started event received first,\n+    * it causes a NullPointException because there is no ClassReporter setup for that class yet. When this Exception\n+    * is thrown from the ConcurrentReportingRunListener, JUnit catches the exception and reports is as a Failed test.\n+    * But to avoid a wild loop, it removes the failing Listener before calling Failed test again. Since the\n+    * ConcurrentReportingRunListener now is removed from the chain it will never receive the RunFinished event\n+    * and the recorded state will never be replayed on the ReportManager.\n+    *\n+    * The End result: ReporterManager falsely believe no Test were run.\n+    *                                                                                                                                            t \n+    */\n+   @SuppressWarnings( { \"unchecked\", \"ThrowableResultOfMethodCallIgnored\" } )\n+   @Test\n+   public void surefireShouldBeAbleToReportRunStatusEvenWithFailingTests() throws Exception\n+   {\n+      Object[] reportDefinition = new Object[2];\n+      reportDefinition[0] = ConsoleReporter.class.getName();\n+      reportDefinition[1] = new Object[] {true};\n+\n+      List reportDefinitions = new ArrayList();\n+      reportDefinitions.add(reportDefinition);\n+\n+      ReporterManagerFactory reporterManagerFactory = new ReporterManagerFactory(reportDefinitions, this.getClass().getClassLoader());\n+\n+      ConcurrentReportingRunListener concurrentReportingRunListener = ConcurrentReportingRunListener.createInstance(\n+            reporterManagerFactory, false, false);\n+\n+      Computer computer = new Computer();\n+\n+      JUnitCore junitCore = new JUnitCore();\n+\n+      junitCore.addListener(concurrentReportingRunListener);\n+\n+      Result result = junitCore.run(computer, FailingTestClassTest.class);\n+\n+      junitCore.removeListener(concurrentReportingRunListener);\n+\n+      Assert.assertEquals(\n+            \"JUnit should report correctly number of test ran(Finished)\",\n+            0,\n+            result.getRunCount());\n+\n+      // Sys.out swallowed in ConsoleReporter..\n+      for(Failure failure : result.getFailures())\n+      {\n+         System.out.println(failure.getException().getMessage());\n+      }\n+\n+      Assert.assertEquals(\n+            \"There should only be one Exception reported, the one from the failing TestCase\",\n+            1,\n+            result.getFailureCount());\n+\n+      Assert.assertEquals(\n+            \"The exception thrown by the failing TestCase\",\n+            RuntimeException.class,\n+            result.getFailures().get(0).getException().getClass());\n+   }\n+\n+   /**\n+    * Simple TestCase to force a Exception in @BeforeClass.\n+    *\n+    */\n+   public static class FailingTestClassTest\n+   {\n+      @BeforeClass\n+      public static void failingBeforeClass() throws Exception\n+      {\n+         throw new RuntimeException(\"Opps, we failed in @BeforeClass\");\n+      }\n+\n+      @Test\n+      public void shouldNeverBeCalled() throws Exception\n+      {\n+         Assert.assertTrue(true);\n+      }\n+   }\n+}\n\\ No newline at end of file",
                "changes": 177,
                "blob_url": "https://github.com/apache/maven-surefire/blob/375ed1a32170b464184dae855d920d99dbd7b052/surefire-providers/surefire-junit47/src/test/java/org/apache/maven/surefire/junitcore/MavenSurefireJUnit47RunnerTestCase.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-629] NPE when beforeClass fails\n\nTestcase submitted by Aslak Knutsen\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@966015 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/375ed1a32170b464184dae855d920d99dbd7b052"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/07da6d3ca101897b4a56acb507505546073b56e6",
        "bug_id": "maven-surefire_26",
        "file": [
            {
                "additions": 4,
                "sha": "ac65f4ae923213bca7d15d6e87bd3e13a53f6e87",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "deletions": 0,
                "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "patch": "@@ -722,6 +722,10 @@ private boolean isJunit40to46(Artifact artifact)  throws MojoExecutionException\n     }\n \n     private boolean isWithinVersionSpec(Artifact artifact, String versionSpec) throws MojoExecutionException {\n+        if ( artifact == null )\n+        {\n+            return false;\n+        }\n         try {\n             VersionRange  range = VersionRange.createFromVersionSpec( versionSpec);\n             return range.containsVersion( artifact.getSelectedVersion());",
                "changes": 4,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java"
            },
            {
                "additions": 30,
                "sha": "1a76ad85277deabf0f08453ea44d4d27fe417e15",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "patch": "@@ -0,0 +1,30 @@\n+package org.apache.maven.surefire.its;\n+\n+\n+import org.apache.maven.it.Verifier;\n+import org.apache.maven.it.util.ResourceExtractor;\n+\n+import java.io.File;\n+\n+/**\n+ * Test support for POJO tests.\n+ * \n+ * @author Benjamin Bentmann\n+ */\n+public class PojoSimpleTest\n+    extends AbstractSurefireIT\n+{\n+\n+    public void testit()\n+        throws Exception\n+    {\n+        File testDir = ResourceExtractor.simpleExtractResources( getClass(), \"/pojo-simple\" );\n+\n+        Verifier verifier = new Verifier( testDir.getAbsolutePath() );\n+        executeGoal( verifier, \"test\" );\n+        verifier.resetStreams();\n+        \n+        HelperAssertions.assertTestSuiteResults( 2, 0, 1, 0, testDir );        \n+    }\n+\n+}",
                "changes": 30,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java"
            },
            {
                "additions": 53,
                "sha": "a97b872eabcbb58cbc48b87ebe2568c2bab54a46",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/pom.xml",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/pojo-simple/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/pojo-simple/pom.xml?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "patch": "@@ -0,0 +1,53 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.apache.maven.plugins.surefire</groupId>\n+  <artifactId>pojo-simple</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <name>Pojo simple test</name>\n+\n+  <!-- NOTE: This has no dependencies on JUnit or TestNG, just nothing -->\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.4</source>\n+          <target>1.4</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>${surefire.version}</version>\n+        <configuration>\n+          <testFailureIgnore>true</testFailureIgnore>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>",
                "changes": 53,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/pom.xml"
            },
            {
                "additions": 33,
                "sha": "8e13ecbec092c0fcdc0a95e62dd7e69ab8078248",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+public class PojoTest\n+{\n+\n+    public void testSuccess()\n+    {\n+        assert true;\n+    }\n+\n+    public void testFailure()\n+    {\n+        assert false;\n+    }\n+\n+}",
                "changes": 33,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "o Fixed NPE in case neither JUnit nor TestNG are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@896667 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/538f225de6379a864b2461c2197e844d9e696bb9",
        "bug_id": "maven-surefire_27",
        "file": [
            {
                "additions": 2,
                "sha": "9ea7eeb694b4010d8ebbc1b04bf1ec6564df7423",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b26d1c484a6c5465e98af9e231d5f2b99f89ce7a/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "deletions": 1,
                "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java?ref=b26d1c484a6c5465e98af9e231d5f2b99f89ce7a",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.maven.artifact.resolver.ArtifactResolver;\n import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.ExcludesArtifactFilter;\n+import org.apache.maven.artifact.versioning.DefaultArtifactVersion;\n import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;\n import org.apache.maven.artifact.versioning.VersionRange;\n import org.apache.maven.plugin.AbstractMojo;\n@@ -531,7 +532,7 @@ private SurefireBooter constructSurefireBooter()\n             if ( testNgArtifact != null )\n             {\n                 VersionRange range = VersionRange.createFromVersionSpec( \"[4.7,)\" );\n-                if ( !range.containsVersion( testNgArtifact.getSelectedVersion() ) )\n+                if ( !range.containsVersion( new DefaultArtifactVersion(testNgArtifact.getVersion()) ) )\n                 {\n                     throw new MojoFailureException(\n                                                     \"TestNG support requires version 4.7 or above. You have declared version \" +",
                "changes": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b26d1c484a6c5465e98af9e231d5f2b99f89ce7a/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-360] maven-surefire-plugin fails with an NPE when test ng is configured transitively\nSubmitted by: Tibor Varga\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@594593 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/b26d1c484a6c5465e98af9e231d5f2b99f89ce7a"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/b5bcccf7024be1bc3ae03033092b43768a08f629",
        "bug_id": "maven-surefire_28",
        "file": [
            {
                "additions": 1,
                "sha": "09de78cfa198872adcfde9721ca7e82d3c198030",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/6a3b96acec7fc229db3d7289e02ca0eb422da29f/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "deletions": 1,
                "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java?ref=6a3b96acec7fc229db3d7289e02ca0eb422da29f",
                "patch": "@@ -591,7 +591,7 @@ else if ( junitArtifact != null && junitArtifact.getBaseVersion().startsWith( \"4\n             else\n             {\n                 String junitDirectoryTestSuite;\n-                if ( junitArtifact.getBaseVersion().startsWith( \"4\" ) )\n+                if ( junitArtifact != null && junitArtifact.getBaseVersion().startsWith( \"4\" ) )\n                 {\n                     junitDirectoryTestSuite = \"org.apache.maven.surefire.junit4.JUnit4DirectoryTestSuite\";\n                 }",
                "changes": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/6a3b96acec7fc229db3d7289e02ca0eb422da29f/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "SUREFIRE-300 Fixing the NPE for cases where projects have no test cases.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@513588 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/6a3b96acec7fc229db3d7289e02ca0eb422da29f"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/c98d44e8b1f22aa783d9fa290ede5097b6874f71",
        "bug_id": "maven-surefire_29",
        "file": [
            {
                "additions": 15,
                "sha": "8d9b57fdd77cc874bcb4caecbdb7709a708663a7",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/f415e626a7d8714bfb19aceff4fd27b7030455ab/surefire-api/src/main/java/org/apache/maven/surefire/report/ReporterManager.java",
                "deletions": 6,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/report/ReporterManager.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/report/ReporterManager.java?ref=f415e626a7d8714bfb19aceff4fd27b7030455ab",
                "patch": "@@ -17,6 +17,7 @@\n  */\n \n import org.apache.maven.surefire.util.TeeStream;\n+import org.codehaus.plexus.util.IOUtil;\n \n import java.io.ByteArrayOutputStream;\n import java.io.PrintStream;\n@@ -282,9 +283,10 @@ public void testFailed( ReportEntry reportEntry )\n \n     private void testFailed( ReportEntry reportEntry, String typeError )\n     {\n-        String stdOutLog = stdOut.toString();\n+        // Note that the fields can be null if the test hasn't even started yet (an early error)\n+        String stdOutLog = stdOut != null ? stdOut.toString() : \"\";\n \n-        String stdErrLog = stdErr.toString();\n+        String stdErrLog = stdErr != null ? stdErr.toString() : \"\";\n \n         resetStreams();\n \n@@ -305,11 +307,18 @@ private void testFailed( ReportEntry reportEntry, String typeError )\n \n     private void resetStreams()\n     {\n-        System.setOut( oldOut );\n-        System.setErr( oldErr );\n+        // Note that the fields can be null if the test hasn't even started yet (an early error)\n+        if ( oldOut != null )\n+        {\n+            System.setOut( oldOut );\n+        }\n+        if ( oldErr != null )\n+        {\n+            System.setErr( oldErr );\n+        }\n \n-        newOut.close();\n-        newErr.close();\n+        IOUtil.close( newOut );\n+        IOUtil.close( newErr );\n     }\n \n     public void reset()",
                "changes": 21,
                "blob_url": "https://github.com/apache/maven-surefire/blob/f415e626a7d8714bfb19aceff4fd27b7030455ab/surefire-api/src/main/java/org/apache/maven/surefire/report/ReporterManager.java"
            },
            {
                "additions": 6,
                "sha": "0b3ca582190ad4aa5ec6cf4b7073fda73c6448db",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/f415e626a7d8714bfb19aceff4fd27b7030455ab/surefire-api/src/main/java/org/apache/maven/surefire/report/XMLReporter.java",
                "deletions": 0,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/report/XMLReporter.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/report/XMLReporter.java?ref=f415e626a7d8714bfb19aceff4fd27b7030455ab",
                "patch": "@@ -183,6 +183,12 @@ public void testFailed( ReportEntry report, String stdOut, String stdErr )\n \n     private void writeTestProblems( ReportEntry report, String stdOut, String stdErr, String name )\n     {\n+        if ( testCase == null )\n+        {\n+            // This can occur if the error happens before the test starts\n+            testStarting( report );\n+        }\n+\n         Xpp3Dom element = createElement( testCase, name );\n \n         String stackTrace = getStackTrace( report );",
                "changes": 6,
                "blob_url": "https://github.com/apache/maven-surefire/blob/f415e626a7d8714bfb19aceff4fd27b7030455ab/surefire-api/src/main/java/org/apache/maven/surefire/report/XMLReporter.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-38] fix NPE in reporters if a test errors before it starts\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/branches/surefire-testng@398521 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/f415e626a7d8714bfb19aceff4fd27b7030455ab"
    },
    {
        "parent": "https://github.com/apache/maven-surefire/commit/36be234bf14aa1c44d1f25dd9eff613845d5763d",
        "bug_id": "maven-surefire_30",
        "file": [
            {
                "additions": 14,
                "sha": "52a256901c310bf6d30f028b341ef9c1a9cf1532",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java",
                "deletions": 2,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "patch": "@@ -29,14 +29,26 @@\n {\n     public Junit4IgnoreIT()\n     {\n-        super( \"/junit44-ignore\");\n+        super( \"/junit-ignore\");\n     }\n \n     public void testJunit4Ignore()\n         throws Exception\n     {\n         executeTest();\n         verifyErrorFreeLog();\n-        assertTestSuiteResults( 1, 0, 0, 1 );\n+        assertTestSuiteResults( 3, 0, 0, 3 );\n     }\n+\n+    public void testJunit47ParallelIgnore()\n+        throws Exception\n+    {\n+\n+        addGoal( \"-Djunit.version=4.8.1\" );\n+        addGoal( \"-Dsurefire.parallel=classes\" );\n+        executeTest();\n+        verifyErrorFreeLog();\n+        assertTestSuiteResults( 3, 0, 0, 3 );\n+    }\n+\n }",
                "changes": 16,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java"
            },
            {
                "additions": 11,
                "sha": "c62fabdec16644795b72cd913bbcbd171df8286e",
                "status": "renamed",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/pom.xml",
                "previous_filename": "surefire-integration-tests/src/test/resources/junit44-ignore/pom.xml",
                "deletions": 4,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/pom.xml?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "patch": "@@ -24,15 +24,20 @@\n   <modelVersion>4.0.0</modelVersion>\n \n   <groupId>org.apache.maven.plugins.surefire</groupId>\n-  <artifactId>junit44-ignore</artifactId>\n+  <artifactId>junit-ignore</artifactId>\n   <version>1.0-SNAPSHOT</version>\n   <name>Test of @Ignore annotation</name>\n \n+  <properties>\n+    <junit.version>4.4</junit.version>\n+    <surefire.parallel></surefire.parallel>\n+  </properties>\n+\n   <dependencies>\n     <dependency>\n       <groupId>junit</groupId>\n       <artifactId>junit</artifactId>\n-      <version>4.4</version>\n+      <version>${junit.version}</version>\n       <scope>test</scope>\n     </dependency>\n   </dependencies>\n@@ -50,9 +55,11 @@\n       <plugin>\n         <artifactId>maven-surefire-plugin</artifactId>\n         <version>${surefire.version}</version>\n+        <configuration>\n+          <parallel>${surefire.parallel}</parallel>\n+          <threadCount>3</threadCount>\n+        </configuration>\n       </plugin>\n-      \n     </plugins>\n   </build>\n-\n </project>",
                "changes": 15,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/pom.xml"
            },
            {
                "additions": 3,
                "sha": "f894164cf8404c5c9e0e482ed1a4e60720ce0e64",
                "status": "renamed",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java",
                "previous_filename": "surefire-integration-tests/src/test/resources/junit44-ignore/src/test/java/junit44/ignore/BasicTest.java",
                "deletions": 4,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "patch": "@@ -1,11 +1,10 @@\n-package junit44.ignore;\n-import static org.hamcrest.core.Is.*;\n-import static org.hamcrest.core.IsNull.*;\n+package junit.ignore;\n import org.junit.Assert;\n-import org.junit.Test;\n import org.junit.Ignore;\n+import org.junit.Test;\n \n \n+@Ignore(\"ignore this test\")\n public class BasicTest\n {\n ",
                "changes": 7,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java"
            },
            {
                "additions": 18,
                "sha": "fc908b069c2be4682885abce54684fb1408f025c",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "patch": "@@ -0,0 +1,18 @@\n+package junit.ignore;\n+\n+import org.junit.Assert;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+\n+@Ignore(\"ignore this test\")\n+public class ClassLevelIgnore1Test\n+{\n+\n+    @Test\n+    public void testIgnorable()\n+    {\n+        Assert.fail(\"you should have ignored me!\");\n+    }\n+\n+}",
                "changes": 18,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java"
            },
            {
                "additions": 18,
                "sha": "783b94b504392f3013c9b850c84de7fe7061bb41",
                "status": "added",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "patch": "@@ -0,0 +1,18 @@\n+package junit.ignore;\n+\n+import org.junit.Assert;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+\n+@Ignore(\"ignore this test\")\n+public class ClassLevelIgnore2Test\n+{\n+\n+    @Test\n+    public void testIgnorable()\n+    {\n+        Assert.fail(\"you should have ignored me!\");\n+    }\n+\n+}",
                "changes": 18,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java"
            },
            {
                "additions": 7,
                "sha": "87ab5f58133d6a1d1b7064e16fdf50eb12462193",
                "status": "modified",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java",
                "deletions": 4,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "patch": "@@ -19,11 +19,10 @@\n  * under the License.\n  */\n \n-import org.apache.maven.surefire.common.junit4.JUnit4RunListener;\n-import org.apache.maven.surefire.report.RunListener;\n-\n import java.util.ArrayList;\n import java.util.Map;\n+import org.apache.maven.surefire.common.junit4.JUnit4RunListener;\n+import org.apache.maven.surefire.report.RunListener;\n \n import org.junit.runner.Description;\n import org.junit.runner.Result;\n@@ -70,7 +69,7 @@ private void fillTestCountMap( Description description )\n         Class<?> itemTestClass = null;\n         for ( Description item : children )\n         {\n-            if ( item.isTest() )\n+            if ( item.isTest() && item.getMethodName() != null )\n             {\n                 testSet.incrementTestMethodCount();\n                 if ( itemTestClass == null )\n@@ -82,6 +81,10 @@ else if ( item.getChildren().size() > 0 )\n             {\n                 fillTestCountMap( item );\n             }\n+            else\n+            {\n+                classMethodCounts.put( item.getClassName(), testSet );\n+            }\n         }\n         if ( itemTestClass != null )\n         {",
                "changes": 11,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java"
            }
        ],
        "repo": "maven-surefire",
        "message": "[SUREFIRE-744] NPE with multiple class-level ignores for parallel runner.\n\nMain patch by Aslak Knutsen, applied unmodified. Prefered to extend existing integration test over\nthe unit test included in the issue patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1132734 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/maven-surefire/commit/ef260bc4155c7dceb808d6faf8e482de41ae0128"
    }
]