{
    "airavata_07009cb": {
        "bug_id": "airavata_07009cb",
        "commit": "https://github.com/apache/airavata/commit/07009cba4296d915c767114e50e778282dd25e08",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/airavata/blob/07009cba4296d915c767114e50e778282dd25e08/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java?ref=07009cba4296d915c767114e50e778282dd25e08",
                "deletions": 0,
                "filename": "modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "patch": "@@ -79,6 +79,8 @@ public void setUp() throws Exception {\n         ApplicationDescription ec2Desc = new ApplicationDescription(Ec2ApplicationDeploymentType.type);\n         Ec2ApplicationDeploymentType ec2App = (Ec2ApplicationDeploymentType)ec2Desc.getType();\n \n+        String serviceName = \"Gnome_distance_calculation_workflow\";\n+        ec2Desc.getType().addNewApplicationName().setStringValue(serviceName);\n         ec2App.setJobType(JobTypeType.EC_2);\n         ec2App.setExecutable(\"/home/ec2-user/run.sh\");\n         ec2App.setExecutableType(\"sh\");",
                "raw_url": "https://github.com/apache/airavata/raw/07009cba4296d915c767114e50e778282dd25e08/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/EC2ProviderTest.java",
                "sha": "7152bda241cc6d1ea171852c0617f3d28779a903",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/airavata/trunk@1454626 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/8c8f667be61896fed1fb7a5aa2da104fd9a5a4c1",
        "patched_files": [],
        "repo": "airavata",
        "unit_tests": [
            "EC2ProviderTest.java"
        ]
    },
    "airavata_ab54c7d": {
        "bug_id": "airavata_ab54c7d",
        "commit": "https://github.com/apache/airavata/commit/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 0,
                "filename": "modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "patch": "@@ -22,6 +22,7 @@\n \n import org.apache.airavata.commons.gfac.type.HostDescription;\n import org.apache.airavata.gsi.ssh.api.authentication.AuthenticationInfo;\n+import org.apache.airavata.gsi.ssh.impl.authentication.MyProxyAuthenticationInfo;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -72,6 +73,12 @@ public MonitorID(HostDescription host, String jobID,String taskID,String experim\n         this.jobStartedTime = new Timestamp((new Date()).getTime());\n         this.authenticationInfo = authenticationInfo;\n         this.userName = userName;\n+        // if we give myproxyauthenticationInfo, so we try to use myproxy user as the user\n+        if(this.authenticationInfo != null){\n+            if(this.authenticationInfo instanceof MyProxyAuthenticationInfo){\n+                this.userName = ((MyProxyAuthenticationInfo)this.authenticationInfo).getUserName();\n+            }\n+        }\n         this.jobID = jobID;\n         this.taskID = taskID;\n         this.experimentID = experimentID;",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/airavata-job-monitor/src/main/java/org/apache/airavata/job/monitor/MonitorID.java",
                "sha": "06d04ac2c51dc19399b0406fdf68b4edf04394f3",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 0,
                "filename": "modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "patch": "@@ -171,6 +171,10 @@ public boolean launchExperiment(String experimentId) throws TException {\n                 //iterate through all the generated tasks and performs the job submisssion+monitoring\n \n                 Experiment experiment = (Experiment) registry.get(DataType.EXPERIMENT, experimentId);\n+                if(experiment == null){\n+                    log.error(\"Error retrieving the Experiment by the given experimentID: \" + experimentId);\n+                    return false;\n+                }\n                 String userName = experiment.getUserName();\n \n                 HostDescription hostDescription = OrchestratorUtils.getHostDescription(orchestrator, taskID);",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/main/java/org/apache/airavata/orchestrator/server/OrchestratorServerHandler.java",
                "sha": "9610a56a9da98b5d3f18986606069bcbcbc5a78a",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 2,
                "filename": "modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "patch": "@@ -47,12 +47,12 @@\n \n public class OrchestratorClientFactoryTest {\n     private DocumentCreator documentCreator;\n-//    private OrchestratorService.Client orchestratorClient;\n+    private OrchestratorService.Client orchestratorClient;\n     private Registry registry;\n \n     @Before\n     public void setUp(){\n-//        orchestratorClient = OrchestratorClientFactory.createOrchestratorClient(\"localhost\", 8940);\n+        orchestratorClient = OrchestratorClientFactory.createOrchestratorClient(\"localhost\", 8940);\n         registry = RegistryFactory.getDefaultRegistry();\n         AiravataUtils.setExecutionAsServer();\n         documentCreator = new DocumentCreator(getAiravataAPI());\n@@ -95,6 +95,8 @@ public void storeExperimentDetail(){\n             String expId = (String)registry.add(ParentDataType.EXPERIMENT, simpleExperiment);\n             CompositeIdentifier compositeIdentifier = new CompositeIdentifier(expId, null);\n             registry.add(ChildDataType.COMPUTATIONAL_RESOURCE_SCHEDULING, scheduling, compositeIdentifier);\n+\n+            orchestratorClient.launchExperiment(expId);\n         } catch (Exception e) {\n             e.printStackTrace();\n         }",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/orchestrator/airavata-orchestrator-service/src/test/java/org/apache/airavata/orchestrator/client/OrchestratorClientFactoryTest.java",
                "sha": "0b6e8b2f049d364fc1919b73df72b807fe20dbc3",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 5,
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "patch": "@@ -566,12 +566,14 @@ private static Resource createExperiment(Experiment o) {\n         ExperimentResource experimentResource = new ExperimentResource();\n         GatewayResource gatewayResource = (GatewayResource)createGateway(o.getGateway());\n         experimentResource.setGateway(gatewayResource);\n-        Gateway_Worker gateway_worker = new Gateway_Worker();\n-        gateway_worker.setGateway(o.getGateway());\n-        gateway_worker.setUser_name(o.getExecutionUser());\n+//        Gateway_Worker gateway_worker = new Gateway_Worker();\n+//        gateway_worker.setGateway(o.getGateway());\n+//        gateway_worker.setUser_name(o.getExecutionUser());\n         experimentResource.setExecutionUser(o.getExecutionUser());\n-        ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n-        experimentResource.setProject(projectResource);\n+        if (o.getProject() != null){\n+            ProjectResource projectResource = (ProjectResource)createProject(o.getProject());\n+            experimentResource.setProject(projectResource);\n+        }\n         experimentResource.setExpID(o.getExpId());\n         experimentResource.setCreationTime(o.getCreationTime());\n         experimentResource.setDescription(o.getExpDesc());",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/resources/Utils.java",
                "sha": "e7bb86589a786fe98afebd029c05fec7f41ad315",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/airavata/blob/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java?ref=ab54c7d5f2c33ca24a96a73bff9400ead8165ab0",
                "deletions": 5,
                "filename": "modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "patch": "@@ -34,7 +34,10 @@\n \n     public static Experiment getExperiment(ExperimentResource experimentResource){\n         Experiment experiment = new Experiment();\n-        experiment.setProjectID(experimentResource.getProject().getName());\n+        if (experimentResource.getProject()!= null){\n+            experiment.setProjectID(experimentResource.getProject().getName());\n+        }\n+\n         experiment.setCreationTime(experimentResource.getCreationTime().getTime());\n         experiment.setUserName(experimentResource.getExecutionUser());\n         experiment.setName(experimentResource.getExpName());\n@@ -49,13 +52,22 @@ public static Experiment getExperiment(ExperimentResource experimentResource){\n         List<ExperimentOutputResource> experimentOutputs = experimentResource.getExperimentOutputs();\n         experiment.setExperimentOutputs(getExpOutputs(experimentOutputs));\n         StatusResource experimentStatus = experimentResource.getExperimentStatus();\n-        experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n+        if (experimentStatus != null){\n+            experiment.setExperimentStatus(getExperimentStatus(experimentStatus));\n+        }\n         List<StatusResource> changeList = experimentResource.getWorkflowNodeStatuses();\n-        experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n+        if (changeList != null){\n+               experiment.setStateChangeList(getWorkflowNodeStatusList(changeList));\n+        }\n+\n         List<WorkflowNodeDetailResource> workflowNodeDetails = experimentResource.getWorkflowNodeDetails();\n-        experiment.setWorkflowNodeDetailsList(getWfNodeList(workflowNodeDetails));\n+        if (workflowNodeDetails != null){\n+                experiment.setWorkflowNodeDetailsList(getWfNodeList(workflowNodeDetails));\n+        }\n         List<ErrorDetailResource> errorDetails = experimentResource.getErrorDetails();\n-        experiment.setErrors(getErrorDetailList(errorDetails));\n+        if (errorDetails!= null){\n+            experiment.setErrors(getErrorDetailList(errorDetails));\n+        }\n         return experiment;\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/ab54c7d5f2c33ca24a96a73bff9400ead8165ab0/modules/registry/airavata-jpa-registry/src/main/java/org/apache/airavata/persistance/registry/jpa/utils/ThriftDataModelConversion.java",
                "sha": "3f9ff66328e84601333aac85f5eb98a10df02a7d",
                "status": "modified"
            }
        ],
        "message": "Adding NPE fixes - AIRAVATA-1028",
        "parent": "https://github.com/apache/airavata/commit/d29a148f610b0d92bfa9d1005f6cb712cf6ec182",
        "patched_files": [
            "ThriftDataModelConversion.java",
            "Utils.java",
            "OrchestratorServerHandler.java",
            "OrchestratorClientFactory.java",
            "MonitorID.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "OrchestratorClientFactoryTest.java"
        ]
    },
    "airavata_c37054b": {
        "bug_id": "airavata_c37054b",
        "commit": "https://github.com/apache/airavata/commit/c37054be449b70b62b7fd19aa1acc04aa2fbef55",
        "file": [
            {
                "additions": 219,
                "blob_url": "https://github.com/apache/airavata/blob/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "changes": 368,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java?ref=c37054be449b70b62b7fd19aa1acc04aa2fbef55",
                "deletions": 149,
                "filename": "modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "patch": "@@ -408,321 +408,391 @@ public static Resource getResource(AppCatalogResourceType type, Object o) {\n \t\n \tprivate static Resource createLocalDataMovement(LocalDataMovement o) {\n \t\tLocalDataMovementResource localDataMovementResource = new LocalDataMovementResource();\n-\t\tlocalDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+        if (o != null){\n+            localDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+        }\n \t\treturn localDataMovementResource;\n \t}\n \t\n     private static Resource createLocalSubmission(LocalSubmission o) {\n \t\tLocalSubmissionResource localSubmissionResource = new LocalSubmissionResource();\n-\t\tlocalSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tlocalSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tlocalSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+        if (o != null){\n+            localSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            localSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n+            localSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+        }\n \t\treturn localSubmissionResource;\n \t}\n     \n     private static Resource createJobManagerCommand(JobManagerCommand o) {\n \t\tJobManagerCommandResource jobManagerCommandResource = new JobManagerCommandResource();\n-\t\tjobManagerCommandResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tjobManagerCommandResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tjobManagerCommandResource.setCommandType(o.getCommandType());\n-\t\tjobManagerCommandResource.setCommand(o.getCommand());\n+        if (o != null){\n+            jobManagerCommandResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            jobManagerCommandResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n+            jobManagerCommandResource.setCommandType(o.getCommandType());\n+            jobManagerCommandResource.setCommand(o.getCommand());\n+        }\n \t\treturn jobManagerCommandResource;\n \t}\n     \n     private static Resource createResourceJobManager(ResourceJobManager o) {\n \t\tResourceJobManagerResource resourceJobManagerResource = new ResourceJobManagerResource();\n-\t\tresourceJobManagerResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tresourceJobManagerResource.setPushMonitoringEndpoint(o.getPushMonitoringEndpoint());\n-\t\tresourceJobManagerResource.setJobManagerBinPath(o.getJobManagerBinPath());\n-\t\tresourceJobManagerResource.setResourceJobManagerType(o.getResourceJobManagerType());\n+        if (o != null) {\n+            resourceJobManagerResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            resourceJobManagerResource.setPushMonitoringEndpoint(o.getPushMonitoringEndpoint());\n+            resourceJobManagerResource.setJobManagerBinPath(o.getJobManagerBinPath());\n+            resourceJobManagerResource.setResourceJobManagerType(o.getResourceJobManagerType());\n+        }\n \t\treturn resourceJobManagerResource;\n \t}\n     \n     private static Resource createDataMovementInterface(DataMovementInterface o) {\n \t\tDataMovementInterfaceResource dataMovementInterfaceResource = new DataMovementInterfaceResource();\n-\t\tdataMovementInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tdataMovementInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tdataMovementInterfaceResource.setDataMovementProtocol(o.getDataMovementProtocol());\n-\t\tdataMovementInterfaceResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tdataMovementInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        if (o != null) {\n+            dataMovementInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n+            dataMovementInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            dataMovementInterfaceResource.setDataMovementProtocol(o.getDataMovementProtocol());\n+            dataMovementInterfaceResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            dataMovementInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        }\n \t\treturn dataMovementInterfaceResource;\n \t}\n     \n     private static Resource createJobSubmissionInterface(JobSubmissionInterface o) {\n \t\tJobSubmissionInterfaceResource jobSubmissionInterfaceResource = new JobSubmissionInterfaceResource();\n-\t\tjobSubmissionInterfaceResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n-\t\tjobSubmissionInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tjobSubmissionInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tjobSubmissionInterfaceResource.setJobSubmissionProtocol(o.getJobSubmissionProtocol());\n-\t\tjobSubmissionInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        if (o != null) {\n+            jobSubmissionInterfaceResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+            jobSubmissionInterfaceResource.setComputeResourceId(o.getComputeResourceId());\n+            jobSubmissionInterfaceResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            jobSubmissionInterfaceResource.setJobSubmissionProtocol(o.getJobSubmissionProtocol());\n+            jobSubmissionInterfaceResource.setPriorityOrder(o.getPriorityOrder());\n+        }\n \t\treturn jobSubmissionInterfaceResource;\n \t}\n     \n     private static Resource createComputeResourceFileSystem(ComputeResourceFileSystem o) {\n \t\tComputeResourceFileSystemResource computeResourceFileSystemResource = new ComputeResourceFileSystemResource();\n-\t\tcomputeResourceFileSystemResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tcomputeResourceFileSystemResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tcomputeResourceFileSystemResource.setPath(o.getPath());\n-\t\tcomputeResourceFileSystemResource.setFileSystem(o.getFileSystem());\n+        if (o != null){\n+            computeResourceFileSystemResource.setComputeResourceId(o.getComputeResourceId());\n+            computeResourceFileSystemResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            computeResourceFileSystemResource.setPath(o.getPath());\n+            computeResourceFileSystemResource.setFileSystem(o.getFileSystem());\n+        }\n \t\treturn computeResourceFileSystemResource;\n \t}\n     \n     private static Resource createBatchQueue(BatchQueue o) {\n \t\tBatchQueueResource batchQueueResource = new BatchQueueResource();\n-\t\tbatchQueueResource.setComputeResourceId(o.getComputeResourceId());\n-\t\tbatchQueueResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n-\t\tbatchQueueResource.setMaxRuntime(o.getMaxRuntime());\n-\t\tbatchQueueResource.setMaxJobInQueue(o.getMaxJobInQueue());\n-\t\tbatchQueueResource.setQueueDescription(o.getQueueDescription());\n-\t\tbatchQueueResource.setQueueName(o.getQueueName());\n-\t\tbatchQueueResource.setMaxProcessors(o.getMaxProcessors());\n-\t\tbatchQueueResource.setMaxNodes(o.getMaxNodes());\n+        if (o != null){\n+            batchQueueResource.setComputeResourceId(o.getComputeResourceId());\n+            batchQueueResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+            batchQueueResource.setMaxRuntime(o.getMaxRuntime());\n+            batchQueueResource.setMaxJobInQueue(o.getMaxJobInQueue());\n+            batchQueueResource.setQueueDescription(o.getQueueDescription());\n+            batchQueueResource.setQueueName(o.getQueueName());\n+            batchQueueResource.setMaxProcessors(o.getMaxProcessors());\n+            batchQueueResource.setMaxNodes(o.getMaxNodes());\n+        }\n \t\treturn batchQueueResource;\n \t}\n     private static Resource createComputeResource(ComputeResource o) {\n \t\tComputeResourceResource computeResourceResource = new ComputeResourceResource();\n-\t\tcomputeResourceResource.setResourceDescription(o.getResourceDescription());\n-\t\tcomputeResourceResource.setResourceId(o.getResourceId());\n-\t\tcomputeResourceResource.setHostName(o.getHostName());\n+        if (o != null) {\n+            computeResourceResource.setResourceDescription(o.getResourceDescription());\n+            computeResourceResource.setResourceId(o.getResourceId());\n+            computeResourceResource.setHostName(o.getHostName());\n+        }\n \t\treturn computeResourceResource;\n \t}\n \n     private static Resource createHostAlias(HostAlias o) {\n         HostAliasResource aliasResource = new HostAliasResource();\n-        aliasResource.setResourceID(o.getResourceID());\n-        aliasResource.setAlias(o.getAlias());\n-        aliasResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            aliasResource.setResourceID(o.getResourceID());\n+            aliasResource.setAlias(o.getAlias());\n+            aliasResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return aliasResource;\n     }\n \n     private static Resource createHostIPAddress(HostIPAddress o) {\n         HostIPAddressResource ipAddressResource = new HostIPAddressResource();\n-        ipAddressResource.setResourceID(o.getResourceID());\n-        ipAddressResource.setIpaddress(o.getIpaddress());\n-        ipAddressResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            ipAddressResource.setResourceID(o.getResourceID());\n+            ipAddressResource.setIpaddress(o.getIpaddress());\n+            ipAddressResource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return ipAddressResource;\n     }\n \n     private static Resource createGSSISSHSubmission(GSISSHSubmission o) {\n         GSISSHSubmissionResource submissionResource = new GSISSHSubmissionResource();\n-        submissionResource.setSubmissionID(o.getSubmissionID());\n-        submissionResource.setResourceJobManager(o.getResourceJobManager());\n-        submissionResource.setSshPort(o.getSshPort());\n-        submissionResource.setInstalledPath(o.getInstalledPath());\n-        submissionResource.setMonitorMode(o.getMonitorMode());\n+        if (o != null) {\n+            submissionResource.setSubmissionID(o.getSubmissionID());\n+            submissionResource.setResourceJobManager(o.getResourceJobManager());\n+            submissionResource.setSshPort(o.getSshPort());\n+            submissionResource.setInstalledPath(o.getInstalledPath());\n+            submissionResource.setMonitorMode(o.getMonitorMode());\n+        }\n         return submissionResource;\n     }\n \n     private static Resource createGSISSHExport(GSISSHExport o){\n         GSISSHExportResource resource = new GSISSHExportResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setExport(o.getExport());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshJobSubmission()));\n+        if (o != null) {\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setExport(o.getExport());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshJobSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGSISSHPreJObCommand(GSISSHPreJobCommand o){\n         GSISSHPreJobCommandResource resource = new GSISSHPreJobCommandResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setCommand(o.getCommand());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        if (o != null) {\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setCommand(o.getCommand());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGSISSHPostJObCommand(GSISSHPostJobCommand o){\n         GSISSHPostJobCommandResource resource = new GSISSHPostJobCommandResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setCommand(o.getCommand());\n-        resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setCommand(o.getCommand());\n+            resource.setGsisshSubmissionResource((GSISSHSubmissionResource)createGSSISSHSubmission(o.getGsisshSubmission()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGlobusJobSubmission(GlobusJobSubmission o) {\n         GlobusJobSubmissionResource resource = new GlobusJobSubmissionResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setResourceJobManager(o.getResourceJobManager());\n-        resource.setSecurityProtocol(o.getSecurityProtocol());\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setResourceJobManager(o.getResourceJobManager());\n+            resource.setSecurityProtocol(o.getSecurityProtocol());\n+        }\n         return resource;\n     }\n \n     private static Resource createGlobusEndpoint(GlobusGKEndpoint o) {\n         GlobusGKEndpointResource resource = new GlobusGKEndpointResource();\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setEndpoint(o.getEndpoint());\n-        resource.setGlobusJobSubmissionResource((GlobusJobSubmissionResource)createGlobusJobSubmission(o.getGlobusSubmission()));\n+        if (o != null){\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setEndpoint(o.getEndpoint());\n+            resource.setGlobusJobSubmissionResource((GlobusJobSubmissionResource)createGlobusJobSubmission(o.getGlobusSubmission()));\n+        }\n         return resource;\n     }\n \t\n \tprivate static Resource createSshJobSubmission(SshJobSubmission o) {\n-\t\tSshJobSubmissionResource sshJobSubmissionResource = new SshJobSubmissionResource();\n-\t\tsshJobSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n-\t\tsshJobSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource)createResourceJobManager(o.getResourceJobManager()));\n-\t\tsshJobSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n-\t\tsshJobSubmissionResource.setAlternativeSshHostname(o.getAlternativeSshHostname());\n-\t\tsshJobSubmissionResource.setSecurityProtocol(o.getSecurityProtocol());\n-\t\tsshJobSubmissionResource.setSshPort(o.getSshPort());\n-\t\treturn sshJobSubmissionResource;\n-\t}\n+        SshJobSubmissionResource sshJobSubmissionResource = new SshJobSubmissionResource();\n+        if (o != null) {\n+            sshJobSubmissionResource.setResourceJobManagerId(o.getResourceJobManagerId());\n+            sshJobSubmissionResource.setResourceJobManagerResource((ResourceJobManagerResource) createResourceJobManager(o.getResourceJobManager()));\n+            sshJobSubmissionResource.setJobSubmissionInterfaceId(o.getJobSubmissionInterfaceId());\n+            sshJobSubmissionResource.setAlternativeSshHostname(o.getAlternativeSshHostname());\n+            sshJobSubmissionResource.setSecurityProtocol(o.getSecurityProtocol());\n+            sshJobSubmissionResource.setSshPort(o.getSshPort());\n+        }\n+        return sshJobSubmissionResource;\n+    }\n \n     private static Resource createScpDataMovement(ScpDataMovement o) {\n \t\tScpDataMovementResource scpDataMovementResource = new ScpDataMovementResource();\n-\t\tscpDataMovementResource.setQueueDescription(o.getQueueDescription());\n-\t\tscpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tscpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n-\t\tscpDataMovementResource.setAlternativeScpHostname(o.getAlternativeScpHostname());\n-\t\tscpDataMovementResource.setSshPort(o.getSshPort());\n+        if (o != null){\n+            scpDataMovementResource.setQueueDescription(o.getQueueDescription());\n+            scpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            scpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+            scpDataMovementResource.setAlternativeScpHostname(o.getAlternativeScpHostname());\n+            scpDataMovementResource.setSshPort(o.getSshPort());\n+        }\n \t\treturn scpDataMovementResource;\n \t}\n \n     private static Resource createGridftpDataMovement(GridftpDataMovement o) {\n \t\tGridftpDataMovementResource gridftpDataMovementResource = new GridftpDataMovementResource();\n-\t\tgridftpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tgridftpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+        if (o != null){\n+            gridftpDataMovementResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            gridftpDataMovementResource.setSecurityProtocol(o.getSecurityProtocol());\n+        }\n \t\treturn gridftpDataMovementResource;\n \t}\n \n     private static Resource createGridftpEndpoint(GridftpEndpoint o) {\n \t\tGridftpEndpointResource gridftpEndpointResource = new GridftpEndpointResource();\n-\t\tgridftpEndpointResource.setEndpoint(o.getEndpoint());\n-\t\tgridftpEndpointResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n-\t\tgridftpEndpointResource.setGridftpDataMovementResource((GridftpDataMovementResource)createGridftpDataMovement(o.getGridftpDataMovement()));\n+        if (o != null){\n+            gridftpEndpointResource.setEndpoint(o.getEndpoint());\n+            gridftpEndpointResource.setDataMovementInterfaceId(o.getDataMovementInterfaceId());\n+            gridftpEndpointResource.setGridftpDataMovementResource((GridftpDataMovementResource)createGridftpDataMovement(o.getGridftpDataMovement()));\n+        }\n \t\treturn gridftpEndpointResource;\n \t}\n \n     private static Resource createJobSubmissionProtocol(JobSubmissionProtocol o) {\n         JobSubmissionProtocolResource resource = new JobSubmissionProtocolResource();\n-        resource.setResourceID(o.getResourceID());\n-        resource.setSubmissionID(o.getSubmissionID());\n-        resource.setJobType(o.getJobType());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            resource.setResourceID(o.getResourceID());\n+            resource.setSubmissionID(o.getSubmissionID());\n+            resource.setJobType(o.getJobType());\n+            resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createDataMovementProtocol(DataMovementProtocol o) {\n         DataMovementProtocolResource resource = new DataMovementProtocolResource();\n-        resource.setResourceID(o.getResourceID());\n-        resource.setDataMoveID(o.getDataMoveID());\n-        resource.setDataMoveType(o.getDataMoveType());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        if (o != null) {\n+            resource.setResourceID(o.getResourceID());\n+            resource.setDataMoveID(o.getDataMoveID());\n+            resource.setDataMoveType(o.getDataMoveType());\n+            resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationModule(ApplicationModule o) {\n         AppModuleResource moduleResource = new AppModuleResource();\n-        moduleResource.setModuleId(o.getModuleID());\n-        moduleResource.setModuleDesc(o.getModuleDesc());\n-        moduleResource.setModuleName(o.getModuleName());\n-        moduleResource.setModuleVersion(o.getModuleVersion());\n+        if (o != null){\n+            moduleResource.setModuleId(o.getModuleID());\n+            moduleResource.setModuleDesc(o.getModuleDesc());\n+            moduleResource.setModuleName(o.getModuleName());\n+            moduleResource.setModuleVersion(o.getModuleVersion());\n+        }\n         return moduleResource;\n     }\n \n     private static Resource createApplicationDeployment(ApplicationDeployment o) {\n         AppDeploymentResource resource = new AppDeploymentResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setAppDes(o.getApplicationDesc());\n-        resource.setAppModuleId(o.getAppModuleID());\n-        resource.setHostId(o.getHostID());\n-        resource.setExecutablePath(o.getExecutablePath());\n-        resource.setParallelism(o.getParallelism());\n-        resource.setModuleResource((AppModuleResource) createApplicationModule(o.getApplicationModule()));\n-        resource.setHostResource((ComputeResourceResource) createComputeResource(o.getComputeResource()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setAppDes(o.getApplicationDesc());\n+            resource.setAppModuleId(o.getAppModuleID());\n+            resource.setHostId(o.getHostID());\n+            resource.setExecutablePath(o.getExecutablePath());\n+            resource.setParallelism(o.getParallelism());\n+            resource.setModuleResource((AppModuleResource) createApplicationModule(o.getApplicationModule()));\n+            resource.setHostResource((ComputeResourceResource) createComputeResource(o.getComputeResource()));\n+        }\n         return resource;\n     }\n \n     private static Resource createLibraryPrepPathResource(LibraryPrepandPath o) {\n         LibraryPrepandPathResource resource = new LibraryPrepandPathResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource) createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource) createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createLibraryApendPathResource(LibraryApendPath o) {\n         LibraryApendPathResource resource = new LibraryApendPathResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createAppEnvironmentResource(AppEnvironment o) {\n         AppEnvironmentResource resource = new AppEnvironmentResource();\n-        resource.setDeploymentId(o.getDeploymentID());\n-        resource.setName(o.getName());\n-        resource.setValue(o.getValue());\n-        resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            resource.setDeploymentId(o.getDeploymentID());\n+            resource.setName(o.getName());\n+            resource.setValue(o.getValue());\n+            resource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return resource;\n     }\n \n     private static Resource createAppInterfaceResource(ApplicationInterface o) {\n         AppInterfaceResource resource = new AppInterfaceResource();\n-        resource.setInterfaceId(o.getInterfaceID());\n-        resource.setAppName(o.getAppName());\n-        resource.setAppDescription(o.getAppDescription());\n+        if (o != null){\n+            resource.setInterfaceId(o.getInterfaceID());\n+            resource.setAppName(o.getAppName());\n+            resource.setAppDescription(o.getAppDescription());\n+        }\n         return resource;\n     }\n \n     private static Resource createAppModMappingResource(AppModuleMapping o) {\n         AppModuleMappingResource resource = new AppModuleMappingResource();\n-        resource.setInterfaceId(o.getInterfaceID());\n-        resource.setModuleId(o.getModuleID());\n+        if (o != null){\n+            resource.setInterfaceId(o.getInterfaceID());\n+            resource.setModuleId(o.getModuleID());\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationInput(ApplicationInput o) {\n         ApplicationInputResource resource = new ApplicationInputResource();\n-        resource.setInterfaceID(o.getInterfaceID());\n-        resource.setInputKey(o.getInputKey());\n-        resource.setInputVal(o.getInputVal());\n-        resource.setDataType(o.getDataType());\n-        resource.setMetadata(o.getMetadata());\n-        resource.setAppArgument(o.getAppArgument());\n-        resource.setUserFriendlyDesc(o.getUserFriendlyDesc());\n-        resource.setStandareInput(o.isStandardInput());\n-        resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        if (o != null){\n+            resource.setInterfaceID(o.getInterfaceID());\n+            resource.setInputKey(o.getInputKey());\n+            resource.setInputVal(o.getInputVal());\n+            resource.setDataType(o.getDataType());\n+            resource.setMetadata(o.getMetadata());\n+            resource.setAppArgument(o.getAppArgument());\n+            resource.setUserFriendlyDesc(o.getUserFriendlyDesc());\n+            resource.setStandareInput(o.isStandardInput());\n+            resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        }\n         return resource;\n     }\n \n     private static Resource createApplicationOutput(ApplicationOutput o) {\n         ApplicationOutputResource resource = new ApplicationOutputResource();\n-        resource.setInterfaceID(o.getInterfaceID());\n-        resource.setOutputKey(o.getOutputKey());\n-        resource.setOutputVal(o.getOutputVal());\n-        resource.setDataType(o.getDataType());\n-        resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        if (o != null){\n+            resource.setInterfaceID(o.getInterfaceID());\n+            resource.setOutputKey(o.getOutputKey());\n+            resource.setOutputVal(o.getOutputVal());\n+            resource.setDataType(o.getDataType());\n+            resource.setAppInterfaceResource((AppInterfaceResource)createAppInterfaceResource(o.getApplicationInterface()));\n+        }\n         return resource;\n     }\n \n     private static Resource createGatewayProfile(GatewayProfile o) {\n         GatewayProfileResource resource = new GatewayProfileResource();\n-        resource.setGatewayID(o.getGatewayID());\n-        resource.setGatewayName(o.getGatewayName());\n-        resource.setGatewayDesc(o.getGatewayDesc());\n+        if (o != null) {\n+            resource.setGatewayID(o.getGatewayID());\n+            resource.setGatewayName(o.getGatewayName());\n+            resource.setGatewayDesc(o.getGatewayDesc());\n+        }\n         return resource;\n     }\n \n     private static Resource createComputeResourcePref(ComputeResourcePreference o) {\n         ComputeHostPreferenceResource resource = new ComputeHostPreferenceResource();\n-        resource.setGatewayId(o.getGatewayId());\n-        resource.setResourceId(o.getResourceId());\n-        resource.setOverrideByAiravata(o.isOverrideByAiravata());\n-        resource.setPreferredJobProtocol(o.getPreferedJobSubmissionProtocol());\n-        resource.setPreferedDMProtocol(o.getPreferedDataMoveProtocol());\n-        resource.setBatchQueue(o.getBatchQueue());\n-        resource.setScratchLocation(o.getScratchLocation());\n-        resource.setProjectNumber(o.getProjectNumber());\n-        resource.setComputeHostResource((ComputeResourceResource)createComputeResource(o.getComputeHostResource()));\n-        resource.setGatewayProfile((GatewayProfileResource)createGatewayProfile(o.getGatewayProfile()));\n+        if (o != null) {\n+            resource.setGatewayId(o.getGatewayId());\n+            resource.setResourceId(o.getResourceId());\n+            resource.setOverrideByAiravata(o.isOverrideByAiravata());\n+            resource.setPreferredJobProtocol(o.getPreferedJobSubmissionProtocol());\n+            resource.setPreferedDMProtocol(o.getPreferedDataMoveProtocol());\n+            resource.setBatchQueue(o.getBatchQueue());\n+            resource.setScratchLocation(o.getScratchLocation());\n+            resource.setProjectNumber(o.getProjectNumber());\n+            resource.setComputeHostResource((ComputeResourceResource) createComputeResource(o.getComputeHostResource()));\n+            resource.setGatewayProfile((GatewayProfileResource) createGatewayProfile(o.getGatewayProfile()));\n+        }\n         return resource;\n     }\n \n     private static Resource createModuleLoadCmd(ModuleLoadCmd o) {\n         ModuleLoadCmdResource moduleLoadCmdResource = new ModuleLoadCmdResource();\n-        moduleLoadCmdResource.setCmd(o.getCmd());\n-        moduleLoadCmdResource.setAppDeploymentId(o.getAppDeploymentId());\n-        moduleLoadCmdResource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        if (o != null){\n+            moduleLoadCmdResource.setCmd(o.getCmd());\n+            moduleLoadCmdResource.setAppDeploymentId(o.getAppDeploymentId());\n+            moduleLoadCmdResource.setAppDeploymentResource((AppDeploymentResource)createApplicationDeployment(o.getApplicationDeployment()));\n+        }\n         return moduleLoadCmdResource;\n     }\n }",
                "raw_url": "https://github.com/apache/airavata/raw/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/app-catalog/app-catalog-data/src/main/java/org/apache/aiaravata/application/catalog/data/util/AppCatalogJPAUtils.java",
                "sha": "ddcc527ed2555380d331021e7a09f312fac76380",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/airavata/blob/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java?ref=c37054be449b70b62b7fd19aa1acc04aa2fbef55",
                "deletions": 4,
                "filename": "modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "patch": "@@ -42,11 +42,11 @@\n     public void setUp() throws Exception {\n         initialize = new Initialize(\"registry-derby.sql\");\n         initialize.initializeDB();\n-        gatewayResource = (GatewayResource) ResourceUtils.getGateway(\"default\");\n-        workerResource = (WorkerResource) ResourceUtils.getWorker(gatewayResource.getGatewayName(), \"admin\");\n+        gatewayResource = (GatewayResource) ResourceUtils.getGateway(ServerSettings.getSystemUserGateway());\n+        workerResource = (WorkerResource) ResourceUtils.getWorker(gatewayResource.getGatewayName(), ServerSettings.getDefaultUser());\n         userResource = new UserResource();\n-        userResource.setUserName(\"admin\");\n-        userResource.setPassword(\"admin\");\n+        userResource.setUserName(ServerSettings.getDefaultUser());\n+        userResource.setPassword(ServerSettings.getDefaultUser());\n \n         documentCreator = new DocumentCreator(getAiravataAPI());\n         documentCreator.createLocalHostDocs();",
                "raw_url": "https://github.com/apache/airavata/raw/c37054be449b70b62b7fd19aa1acc04aa2fbef55/modules/orchestrator/orchestrator-core/src/test/java/org/apache/airavata/orchestrator/core/BaseOrchestratorTest.java",
                "sha": "e281851b250161771cda28b0e0e8e14a50594b76",
                "status": "modified"
            }
        ],
        "message": "fixing tests in orchestrator and fixing NPE for AIRAVATA-1342",
        "parent": "https://github.com/apache/airavata/commit/3e151ce37690a1664b2a18747153ef12466e82ec",
        "patched_files": [
            "AppCatalogJPAUtils.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "BaseOrchestratorTest.java"
        ]
    },
    "airavata_e2f83e8": {
        "bug_id": "airavata_e2f83e8",
        "commit": "https://github.com/apache/airavata/commit/e2f83e8c466558def7a833b7529030426877a2ca",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/airavata/blob/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java?ref=e2f83e8c466558def7a833b7529030426877a2ca",
                "deletions": 0,
                "filename": "modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "patch": "@@ -252,6 +252,7 @@ public void preProcess(InvocationContext context) throws ServiceException {\n \n     @Override\n     public void postProcess(InvocationContext context) throws ServiceException {\n+        if(this.registryService != null)\n         ((JCRRegistry)this.registryService).closeConnection();\n     }\n ",
                "raw_url": "https://github.com/apache/airavata/raw/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/main/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImpl.java",
                "sha": "e5ad7e9086e0fd83843155679e0ea66e48d1f6f8",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/airavata/blob/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/airavata/contents/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java?ref=e2f83e8c466558def7a833b7529030426877a2ca",
                "deletions": 0,
                "filename": "modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "patch": "@@ -125,7 +125,13 @@ public void testExecute() {\n \t\t\tDefaultExecutionContext ec = new DefaultExecutionContext();\n \t\t\tec.addNotifiable(new LoggingNotification());\n \t\t\tct.setExecutionContext(ec);\n+             Map<String,String> config = new HashMap<String,String>();\n+            config.put(\"org.apache.jackrabbit.repository.home\",\"target\");\n+\t\t    AiravataJCRRegistry jcrRegistry = new AiravataJCRRegistry(null,\n+\t\t\t\t\"org.apache.jackrabbit.core.RepositoryFactoryImpl\", \"admin\",\n+\t\t\t\t\"admin\", config);\n \n+            ec.setRegistryService(jcrRegistry);\n \t\t\tct.setServiceName(\"SimpleEcho\");\n \n \t\t\t/*",
                "raw_url": "https://github.com/apache/airavata/raw/e2f83e8c466558def7a833b7529030426877a2ca/modules/gfac-core/src/test/java/org/apache/airavata/core/gfac/services/impl/PropertiesBasedServiceImplTest.java",
                "sha": "d05ba070c1dbedf8b0988c73494b1831038ca765",
                "status": "modified"
            }
        ],
        "message": "fixing test failure and NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/airavata/trunk@1245073 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/airavata/commit/bf41c0bf90f7edf22805fb736b5f4ec141402989",
        "patched_files": [
            "PropertiesBasedServiceImpl.java"
        ],
        "repo": "airavata",
        "unit_tests": [
            "PropertiesBasedServiceImplTest.java"
        ]
    }
}