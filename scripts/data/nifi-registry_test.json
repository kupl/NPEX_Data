{
    "nifi-registry_79e453f": {
        "bug_id": "nifi-registry_79e453f",
        "commit": "https://github.com/apache/nifi-registry/commit/79e453fd2b3a13f244718084912fb884edf73afe",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/nifi-registry/blob/79e453fd2b3a13f244718084912fb884edf73afe/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/nifi-registry/contents/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java?ref=79e453fd2b3a13f244718084912fb884edf73afe",
                "deletions": 23,
                "filename": "nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java",
                "patch": "@@ -150,7 +150,6 @@ public Bucket getBucket(final String bucketIdentifier) {\n             final BucketEntity bucket = metadataService.getBucketById(bucketIdentifier);\n             if (bucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n@@ -199,7 +198,6 @@ public Bucket updateBucket(final Bucket bucket) {\n             final BucketEntity existingBucketById = metadataService.getBucketById(bucket.getIdentifier());\n             if (existingBucketById == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucket.getIdentifier());\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n@@ -244,7 +242,6 @@ public Bucket deleteBucket(final String bucketIdentifier) {\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n@@ -274,7 +271,6 @@ public Bucket deleteBucket(final String bucketIdentifier) {\n             final BucketEntity bucket = metadataService.getBucketById(bucketIdentifier);\n             if (bucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n@@ -345,7 +341,6 @@ public VersionedFlow createFlow(final String bucketIdentifier, final VersionedFl\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n@@ -382,14 +377,12 @@ public VersionedFlow getFlow(final String bucketIdentifier, final String flowIde\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             final FlowEntity existingFlow = metadataService.getFlowByIdWithSnapshotCounts(flowIdentifier);\n             if (existingFlow == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", flowIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n \n@@ -413,7 +406,6 @@ public VersionedFlow getFlow(final String bucketIdentifier, final String flowIde\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketId);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketId);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n@@ -448,14 +440,12 @@ public VersionedFlow updateFlow(final VersionedFlow versionedFlow) {\n             final BucketEntity existingBucket = metadataService.getBucketById(versionedFlow.getBucketIdentifier());\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", versionedFlow.getBucketIdentifier());\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             final FlowEntity existingFlow = metadataService.getFlowByIdWithSnapshotCounts(versionedFlow.getIdentifier());\n             if (existingFlow == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", versionedFlow.getIdentifier());\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n \n@@ -507,15 +497,13 @@ public VersionedFlow deleteFlow(final String bucketIdentifier, final String flow\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             // ensure the flow exists\n             final FlowEntity existingFlow = metadataService.getFlowById(flowIdentifier);\n             if (existingFlow == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", flowIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n \n@@ -561,15 +549,13 @@ public VersionedFlowSnapshot createFlowSnapshot(final VersionedFlowSnapshot flow\n             final BucketEntity existingBucket = metadataService.getBucketById(snapshotMetadata.getBucketIdentifier());\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", snapshotMetadata.getBucketIdentifier());\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             // ensure the flow exists\n             final FlowEntity existingFlow = metadataService.getFlowById(snapshotMetadata.getFlowIdentifier());\n             if (existingFlow == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", snapshotMetadata.getFlowIdentifier());\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n \n@@ -650,15 +636,13 @@ public VersionedFlowSnapshot getFlowSnapshot(final String bucketIdentifier, fina\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             // we need to populate the version count here so we have to do this retrieval instead of snapshotEntity.getFlow()\n             final FlowEntity flowEntityWithCount = metadataService.getFlowByIdWithSnapshotCounts(flowIdentifier);\n             if (flowEntityWithCount == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", flowIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n \n@@ -670,7 +654,6 @@ public VersionedFlowSnapshot getFlowSnapshot(final String bucketIdentifier, fina\n             final FlowSnapshotEntity snapshotEntity = metadataService.getFlowSnapshot(flowIdentifier, version);\n             if (snapshotEntity == null) {\n                 LOGGER.warn(\"The specified flow snapshot id [{}] does not exist for version [{}].\", flowIdentifier, version);\n-\n                 throw new ResourceNotFoundException(\"The specified versioned flow snapshot does not exist for this flow.\");\n             }\n \n@@ -725,15 +708,13 @@ public VersionedFlowSnapshot getFlowSnapshot(final String bucketIdentifier, fina\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             // ensure the flow exists\n             final FlowEntity existingFlow = metadataService.getFlowById(flowIdentifier);\n             if (existingFlow == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", flowIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n \n@@ -770,15 +751,13 @@ public VersionedFlowSnapshotMetadata getLatestFlowSnapshotMetadata(final String\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             // ensure the flow exists\n             final FlowEntity existingFlow = metadataService.getFlowById(flowIdentifier);\n             if (existingFlow == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", flowIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n \n@@ -788,6 +767,10 @@ public VersionedFlowSnapshotMetadata getLatestFlowSnapshotMetadata(final String\n \n             // get latest snapshot for the flow\n             final FlowSnapshotEntity latestSnapshot = metadataService.getLatestSnapshot(existingFlow.getId());\n+            if (latestSnapshot == null) {\n+                throw new ResourceNotFoundException(\"The specified flow ID has no versions\");\n+            }\n+\n             return DataModelMapper.map(existingBucket, latestSnapshot);\n         } finally {\n             readLock.unlock();\n@@ -813,15 +796,13 @@ public VersionedFlowSnapshotMetadata deleteFlowSnapshot(final String bucketIdent\n             final BucketEntity existingBucket = metadataService.getBucketById(bucketIdentifier);\n             if (existingBucket == null) {\n                 LOGGER.warn(\"The specified bucket id [{}] does not exist.\", bucketIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified bucket ID does not exist in this registry.\");\n             }\n \n             // ensure the flow exists\n             final FlowEntity existingFlow = metadataService.getFlowById(flowIdentifier);\n             if (existingFlow == null) {\n                 LOGGER.warn(\"The specified flow id [{}] does not exist.\", flowIdentifier);\n-\n                 throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n             }\n ",
                "raw_url": "https://github.com/apache/nifi-registry/raw/79e453fd2b3a13f244718084912fb884edf73afe/nifi-registry-framework/src/main/java/org/apache/nifi/registry/service/RegistryService.java",
                "sha": "b03116251d91a4a5a8be602a6b3ccf32ea0c447f",
                "status": "modified"
            },
            {
                "additions": 74,
                "blob_url": "https://github.com/apache/nifi-registry/blob/79e453fd2b3a13f244718084912fb884edf73afe/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java",
                "changes": 74,
                "contents_url": "https://api.github.com/repos/apache/nifi-registry/contents/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java?ref=79e453fd2b3a13f244718084912fb884edf73afe",
                "deletions": 0,
                "filename": "nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java",
                "patch": "@@ -32,6 +32,7 @@\n import org.apache.nifi.registry.flow.VersionedProcessor;\n import org.apache.nifi.registry.serialization.Serializer;\n import org.apache.nifi.registry.serialization.VersionedProcessGroupSerializer;\n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n import org.mockito.invocation.InvocationOnMock;\n@@ -862,6 +863,79 @@ public void testGetFlowSnapshotsWhenNoSnapshots() {\n         assertEquals(0, retrievedSnapshots.size());\n     }\n \n+    @Test\n+    public void testGetLatestSnapshotMetadataWhenVersionsExist() {\n+        final BucketEntity existingBucket = new BucketEntity();\n+        existingBucket.setId(\"b1\");\n+        existingBucket.setName(\"My Bucket\");\n+        existingBucket.setDescription(\"This is my bucket\");\n+        existingBucket.setCreated(new Date());\n+\n+        when(metadataService.getBucketById(existingBucket.getId())).thenReturn(existingBucket);\n+\n+        // return a flow with the existing snapshot when getFlowById is called\n+        final FlowEntity existingFlow = new FlowEntity();\n+        existingFlow.setId(\"flow1\");\n+        existingFlow.setName(\"My Flow\");\n+        existingFlow.setDescription(\"This is my flow.\");\n+        existingFlow.setCreated(new Date());\n+        existingFlow.setModified(new Date());\n+        existingFlow.setBucketId(existingBucket.getId());\n+\n+        when(metadataService.getFlowById(existingFlow.getId())).thenReturn(existingFlow);\n+\n+        final FlowSnapshotEntity existingSnapshot1 = new FlowSnapshotEntity();\n+        existingSnapshot1.setVersion(1);\n+        existingSnapshot1.setFlowId(existingFlow.getId());\n+        existingSnapshot1.setCreatedBy(\"user1\");\n+        existingSnapshot1.setCreated(new Date());\n+        existingSnapshot1.setComments(\"This is snapshot 1\");\n+\n+        when(metadataService.getLatestSnapshot(existingFlow.getId())).thenReturn(existingSnapshot1);\n+\n+        VersionedFlowSnapshotMetadata latestMetadata = registryService.getLatestFlowSnapshotMetadata(existingBucket.getId(), existingFlow.getId());\n+        assertNotNull(latestMetadata);\n+        assertEquals(1, latestMetadata.getVersion());\n+    }\n+\n+    @Test\n+    public void testGetLatestSnapshotMetadataWhenNoVersionsExist() {\n+        final BucketEntity existingBucket = new BucketEntity();\n+        existingBucket.setId(\"b1\");\n+        existingBucket.setName(\"My Bucket\");\n+        existingBucket.setDescription(\"This is my bucket\");\n+        existingBucket.setCreated(new Date());\n+\n+        when(metadataService.getBucketById(existingBucket.getId())).thenReturn(existingBucket);\n+\n+        // return a flow with the existing snapshot when getFlowById is called\n+        final FlowEntity existingFlow = new FlowEntity();\n+        existingFlow.setId(\"flow1\");\n+        existingFlow.setName(\"My Flow\");\n+        existingFlow.setDescription(\"This is my flow.\");\n+        existingFlow.setCreated(new Date());\n+        existingFlow.setModified(new Date());\n+        existingFlow.setBucketId(existingBucket.getId());\n+\n+        when(metadataService.getFlowById(existingFlow.getId())).thenReturn(existingFlow);\n+\n+        final FlowSnapshotEntity existingSnapshot1 = new FlowSnapshotEntity();\n+        existingSnapshot1.setVersion(1);\n+        existingSnapshot1.setFlowId(existingFlow.getId());\n+        existingSnapshot1.setCreatedBy(\"user1\");\n+        existingSnapshot1.setCreated(new Date());\n+        existingSnapshot1.setComments(\"This is snapshot 1\");\n+\n+        when(metadataService.getLatestSnapshot(existingFlow.getId())).thenReturn(null);\n+\n+        try {\n+            registryService.getLatestFlowSnapshotMetadata(existingBucket.getId(), existingFlow.getId());\n+            Assert.fail(\"Should have thrown exception\");\n+        } catch (ResourceNotFoundException e) {\n+            assertEquals(\"The specified flow ID has no versions\", e.getMessage());\n+        }\n+    }\n+\n     @Test(expected = ResourceNotFoundException.class)\n     public void testGetSnapshotDoesNotExistInMetadataProvider() {\n         final String bucketId = \"b1\";",
                "raw_url": "https://github.com/apache/nifi-registry/raw/79e453fd2b3a13f244718084912fb884edf73afe/nifi-registry-framework/src/test/java/org/apache/nifi/registry/service/TestRegistryService.java",
                "sha": "c35cda79a5aacd5fb045dcb7fde76cb0037c5e6c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/nifi-registry/blob/79e453fd2b3a13f244718084912fb884edf73afe/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/nifi-registry/contents/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java?ref=79e453fd2b3a13f244718084912fb884edf73afe",
                "deletions": 15,
                "filename": "nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java",
                "patch": "@@ -27,7 +27,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.nifi.registry.bucket.BucketItem;\n import org.apache.nifi.registry.diff.VersionedFlowDifference;\n-import org.apache.nifi.registry.exception.ResourceNotFoundException;\n import org.apache.nifi.registry.flow.VersionedFlow;\n import org.apache.nifi.registry.flow.VersionedFlowSnapshot;\n import org.apache.nifi.registry.flow.VersionedFlowSnapshotMetadata;\n@@ -376,14 +375,8 @@ public Response getLatestFlowVersion(\n \n         authorizeBucketAccess(RequestAction.READ, bucketId);\n \n-        final VersionedFlowSnapshotMetadata latest = registryService.getLatestFlowSnapshotMetadata(bucketId, flowId);\n-        if (latest == null) {\n-            logger.warn(\"The specified flow id [{}] does not exist.\", flowId);\n-\n-            throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n-        }\n-\n-        final VersionedFlowSnapshot lastSnapshot = registryService.getFlowSnapshot(bucketId, flowId, latest.getVersion());\n+        final VersionedFlowSnapshotMetadata latestMetadata = registryService.getLatestFlowSnapshotMetadata(bucketId, flowId);\n+        final VersionedFlowSnapshot lastSnapshot = registryService.getFlowSnapshot(bucketId, flowId, latestMetadata.getVersion());\n         populateLinksAndPermissions(lastSnapshot);\n \n         return Response.status(Response.Status.OK).entity(lastSnapshot).build();\n@@ -418,12 +411,6 @@ public Response getLatestFlowVersionMetadata(\n         authorizeBucketAccess(RequestAction.READ, bucketId);\n \n         final VersionedFlowSnapshotMetadata latest = registryService.getLatestFlowSnapshotMetadata(bucketId, flowId);\n-        if (latest == null) {\n-            logger.warn(\"The specified flow id [{}] does not exist.\", flowId);\n-\n-            throw new ResourceNotFoundException(\"The specified flow ID does not exist in this bucket.\");\n-        }\n-\n         linkService.populateSnapshotLinks(latest);\n \n         return Response.status(Response.Status.OK).entity(latest).build();",
                "raw_url": "https://github.com/apache/nifi-registry/raw/79e453fd2b3a13f244718084912fb884edf73afe/nifi-registry-web-api/src/main/java/org/apache/nifi/registry/web/api/BucketFlowResource.java",
                "sha": "64f18306285ffede0409e0a00c856eeca0ef505a",
                "status": "modified"
            }
        ],
        "message": "NIFIREG-144 Fixing NPE when retrieving latest snapshot when no versions exist\n\nThis closes #105.\n\nSigned-off-by: Kevin Doran <kdoran@apache.org>",
        "parent": "https://github.com/apache/nifi-registry/commit/88584ec33c1bedca955398188f4a511393b58ead",
        "patched_files": [
            "RegistryService.java",
            "BucketFlowResource.java"
        ],
        "repo": "nifi-registry",
        "unit_tests": [
            "TestRegistryService.java"
        ]
    }
}