[
    {
        "commit": "https://github.com/apache/opennlp/commit/cb6ee2cbdeadad5d277a6e7293d88bb915090c4f",
        "file": [
            {
                "patch": "@@ -114,7 +114,7 @@ private String lemmatize(final String word, final String postag) {\n     final List<String> keys = this.getDictKeys(word, postag);\n     // lookup lemma as value of the map\n     final List<String> keyValues = this.dictMap.get(keys);\n-    if (!keyValues.isEmpty()) {\n+    if ( keyValues != null && !keyValues.isEmpty()) {\n       lemma = keyValues.get(0);\n     } else {\n       lemma = \"O\";",
                "additions": 1,
                "raw_url": "https://github.com/apache/opennlp/raw/cb6ee2cbdeadad5d277a6e7293d88bb915090c4f/opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DictionaryLemmatizer.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "37d488c594a2536f288279336316b28c7a748fdd",
                "blob_url": "https://github.com/apache/opennlp/blob/cb6ee2cbdeadad5d277a6e7293d88bb915090c4f/opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DictionaryLemmatizer.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DictionaryLemmatizer.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DictionaryLemmatizer.java?ref=cb6ee2cbdeadad5d277a6e7293d88bb915090c4f"
            },
            {
                "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package opennlp.tools.lemmatizer;\n+\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class DictionaryLemmatizerTest {\n+\n+  private static DictionaryLemmatizer dictionaryLemmatizer;\n+\n+  @BeforeClass\n+  public static void loadDictionary() throws Exception {\n+    dictionaryLemmatizer = new DictionaryLemmatizer(\n+        DictionaryLemmatizerTest.class.getResourceAsStream(\"/opennlp/tools/lemmatizer/smalldictionary.dict\") \n+    );\n+  }\n+  \n+  @Test\n+  public void testForNullPointerException() {\n+    String[] sentence = new String[]{\"The\",\"dogs\",\"were\",\"running\",\"and\",\"barking\",\"down\",\"the\",\"street\"};\n+    String[] sentencePOS = new String[]{\"DT\",\"NNS\",\"VBD\",\"VBG\",\"CC\",\"VBG\",\"RP\",\"DT\",\"NN\"};\n+    String[] expectedLemma = new String[]{\"the\",\"dog\",\"is\",\"run\",\"and\",\"bark\",\"down\",\"the\",\"street\"};\n+    \n+    String[] actualLemma = dictionaryLemmatizer.lemmatize(sentence, sentencePOS);\n+    \n+    for (int i = 0;i < sentence.length;i++) {\n+      // don't compare cases where the word is not in the dictionary...\n+      if (!actualLemma[i].equals(\"O\")) Assert.assertEquals(expectedLemma[i], actualLemma[i]);\n+    }\n+  }\n+\n+}",
                "additions": 49,
                "raw_url": "https://github.com/apache/opennlp/raw/cb6ee2cbdeadad5d277a6e7293d88bb915090c4f/opennlp-tools/src/test/java/opennlp/tools/lemmatizer/DictionaryLemmatizerTest.java",
                "status": "added",
                "changes": 49,
                "deletions": 0,
                "sha": "6cf72cffa520d8d86e8daba4872222e45febddfe",
                "blob_url": "https://github.com/apache/opennlp/blob/cb6ee2cbdeadad5d277a6e7293d88bb915090c4f/opennlp-tools/src/test/java/opennlp/tools/lemmatizer/DictionaryLemmatizerTest.java",
                "filename": "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/DictionaryLemmatizerTest.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/test/java/opennlp/tools/lemmatizer/DictionaryLemmatizerTest.java?ref=cb6ee2cbdeadad5d277a6e7293d88bb915090c4f"
            },
            {
                "patch": "@@ -0,0 +1,5 @@\n+barking\tVBG\tbark\n+dogs\tNNS\tdog\n+running\tVBG\trun\n+down\tRP\tdown\n+street\tNN\tstreet\n\\ No newline at end of file",
                "additions": 5,
                "raw_url": "https://github.com/apache/opennlp/raw/cb6ee2cbdeadad5d277a6e7293d88bb915090c4f/opennlp-tools/src/test/resources/opennlp/tools/lemmatizer/smalldictionary.dict",
                "status": "added",
                "changes": 5,
                "deletions": 0,
                "sha": "edeb7a002953568bbc8e5a3875aa624a3ad940fc",
                "blob_url": "https://github.com/apache/opennlp/blob/cb6ee2cbdeadad5d277a6e7293d88bb915090c4f/opennlp-tools/src/test/resources/opennlp/tools/lemmatizer/smalldictionary.dict",
                "filename": "opennlp-tools/src/test/resources/opennlp/tools/lemmatizer/smalldictionary.dict",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/test/resources/opennlp/tools/lemmatizer/smalldictionary.dict?ref=cb6ee2cbdeadad5d277a6e7293d88bb915090c4f"
            }
        ],
        "bug_id": "opennlp_1",
        "parent": "https://github.com/apache/opennlp/commit/60792b8f369b73316fce6310330c28a7a0d45246",
        "message": "OPENNLP-1056: Fix NullPointerException in DictionaryLemmatizer",
        "repo": "opennlp"
    },
    {
        "commit": "https://github.com/apache/opennlp/commit/f418eed3089d74caa11affaf947a40b774e9c8cb",
        "file": [
            {
                "patch": "@@ -242,6 +242,10 @@ public static IrishSentenceBankDocument parse(InputStream is) throws IOException\n           IrishSentenceBankFlex[] flexa = new IrishSentenceBankFlex[flexes];\n           for (Integer flexidx : toks.keySet()) {\n             String left = toks.get(flexidx);\n+            if (flx.get(flexidx) == null) {\n+              flexa = null;\n+              break;\n+            }\n             int rsize = flx.get(flexidx).size();\n             String[] right = new String[rsize];\n             right = flx.get(flexidx).toArray(right);",
                "additions": 4,
                "raw_url": "https://github.com/apache/opennlp/raw/f418eed3089d74caa11affaf947a40b774e9c8cb/opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java",
                "status": "modified",
                "changes": 4,
                "deletions": 0,
                "sha": "2fe9231e772469ebff2fcc7be40008152b050de8",
                "blob_url": "https://github.com/apache/opennlp/blob/f418eed3089d74caa11affaf947a40b774e9c8cb/opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/formats/irishsentencebank/IrishSentenceBankDocument.java?ref=f418eed3089d74caa11affaf947a40b774e9c8cb"
            }
        ],
        "bug_id": "opennlp_2",
        "parent": "https://github.com/apache/opennlp/commit/e972869486f85c3424875a443eb04bda2eeb6bd3",
        "message": "OPENNLP-1078: Fix NPE in irishsentencebank reader\n\ncloses apache/opennlp#219",
        "repo": "opennlp"
    },
    {
        "commit": "https://github.com/apache/opennlp/commit/f9602f568f623fa916f9841a20398676d1130692",
        "file": [
            {
                "patch": "@@ -499,6 +499,10 @@ protected int mapParseIndex(int index, Parse[] nonPunctParses, Parse[] parses) {\n   }\n   \n   private static boolean lastChild(Parse child, Parse parent, Set<String> punctSet) {\n+    if (parent == null) {\n+      return false;\n+    }\n+    \n     Parse[] kids = collapsePunctuation(parent.getChildren(), punctSet);\n     return (kids[kids.length - 1] == child);\n   }\n@@ -548,7 +552,11 @@ public static Dictionary buildDictionary(ObjectStream<Parse> data, HeadRules rul\n       //emulate reductions to produce additional n-grams\n       int ci = 0;\n       while (ci < chunks.length) {\n-        //System.err.println(\"chunks[\"+ci+\"]=\"+chunks[ci].getHead().getCoveredText()+\" chunks.length=\"+chunks.length);\n+        //System.err.println(\"chunks[\"+ci+\"]=\"+chunks[ci].getHead().getCoveredText()+\" chunks.length=\"+chunks.length + \"  \" + chunks[ci].getParent());\n+        \n+        if (chunks[ci].getParent() == null) {\n+          chunks[ci].show();\n+        }\n         if (lastChild(chunks[ci], chunks[ci].getParent(),rules.getPunctuationTags())) {\n           //perform reduce\n           int reduceStart = ci;",
                "additions": 9,
                "raw_url": "https://github.com/apache/opennlp/raw/f9602f568f623fa916f9841a20398676d1130692/opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java",
                "status": "modified",
                "changes": 10,
                "deletions": 1,
                "sha": "09f409483877639b40448823bc4d50a98ba29c53",
                "blob_url": "https://github.com/apache/opennlp/blob/f9602f568f623fa916f9841a20398676d1130692/opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java?ref=f9602f568f623fa916f9841a20398676d1130692"
            }
        ],
        "bug_id": "opennlp_3",
        "parent": "https://github.com/apache/opennlp/commit/6332d419da5a43bb5cdbf8b9d5e93944f94ab951",
        "message": "OPENNLP-623 Fixed a NullPointerException during dictionary building when training on the OntoNotes corpus.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1572468 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "opennlp"
    },
    {
        "commit": "https://github.com/apache/opennlp/commit/3226bd3b2e6898c297bb22a5226bcffb28f55b72",
        "file": [
            {
                "patch": "@@ -111,6 +111,6 @@ public static String toUpperCase(CharSequence string) {\n     * @since 1.5.1\n     */\n   public static boolean isEmpty(CharSequence theString) {\n-\treturn theString == null || theString.length() == 0;\n+\treturn theString.length() == 0;\n   }\n }",
                "additions": 1,
                "raw_url": "https://github.com/apache/opennlp/raw/3226bd3b2e6898c297bb22a5226bcffb28f55b72/opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "01274d1c77c9b364f1ab6a3e432cf145457b787e",
                "blob_url": "https://github.com/apache/opennlp/blob/3226bd3b2e6898c297bb22a5226bcffb28f55b72/opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java?ref=3226bd3b2e6898c297bb22a5226bcffb28f55b72"
            },
            {
                "patch": "@@ -52,9 +52,14 @@ public void testToUpperCase() {\n   \n   @Test\n   public void testIsEmpty() {\n-    assertTrue(StringUtil.isEmpty(null));\n     assertTrue(StringUtil.isEmpty(\"\"));\n     assertTrue(!StringUtil.isEmpty(\"a\"));\n   }\n+  \n+  @Test(expected=NullPointerException.class)\n+  public void testIsEmptyWithNullString() {\n+\t// should raise a NPE  \n+    StringUtil.isEmpty(null);\n+  }\n \n }",
                "additions": 6,
                "raw_url": "https://github.com/apache/opennlp/raw/3226bd3b2e6898c297bb22a5226bcffb28f55b72/opennlp-tools/src/test/java/opennlp/tools/util/StringUtilTest.java",
                "status": "modified",
                "changes": 7,
                "deletions": 1,
                "sha": "df33d46a7140564976e95423fcf609950b160d52",
                "blob_url": "https://github.com/apache/opennlp/blob/3226bd3b2e6898c297bb22a5226bcffb28f55b72/opennlp-tools/src/test/java/opennlp/tools/util/StringUtilTest.java",
                "filename": "opennlp-tools/src/test/java/opennlp/tools/util/StringUtilTest.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/test/java/opennlp/tools/util/StringUtilTest.java?ref=3226bd3b2e6898c297bb22a5226bcffb28f55b72"
            }
        ],
        "bug_id": "opennlp_4",
        "parent": "https://github.com/apache/opennlp/commit/dadd4a00ced234bd3cf81531b6451844e4bc8147",
        "message": "OPENNLP-40 removed null validation from isEmpty. It will throw a NullPointerException if a null string is passed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1049662 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "opennlp"
    },
    {
        "commit": "https://github.com/apache/opennlp/commit/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca",
        "file": [
            {
                "patch": "@@ -139,20 +139,22 @@ public void persist() throws IOException {\n   }\n \n   protected List<List<ComparablePredicate>> compressOutcomes(ComparablePredicate[] sorted) {\n-    ComparablePredicate cp = sorted[0];\n     List<List<ComparablePredicate>> outcomePatterns = new ArrayList<List<ComparablePredicate>>();\n-    List<ComparablePredicate> newGroup = new ArrayList<ComparablePredicate>();\n-    for (int i = 0; i < sorted.length; i++) {\n-      if (cp.compareTo(sorted[i]) == 0) {\n-        newGroup.add(sorted[i]);\n-      } else {\n-        cp = sorted[i];\n+    if(sorted.length > 0) {\n+        ComparablePredicate cp = sorted[0];    \n+        List<ComparablePredicate> newGroup = new ArrayList<ComparablePredicate>();\n+        for (int i = 0; i < sorted.length; i++) {\n+          if (cp.compareTo(sorted[i]) == 0) {\n+            newGroup.add(sorted[i]);\n+          } else {\n+            cp = sorted[i];\n+            outcomePatterns.add(newGroup);\n+            newGroup = new ArrayList<ComparablePredicate>();\n+            newGroup.add(sorted[i]);\n+          }\n+        }\n         outcomePatterns.add(newGroup);\n-        newGroup = new ArrayList<ComparablePredicate>();\n-        newGroup.add(sorted[i]);\n-      }\n     }\n-    outcomePatterns.add(newGroup);\n     return outcomePatterns;\n   }\n }",
                "additions": 13,
                "raw_url": "https://github.com/apache/opennlp/raw/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java",
                "status": "modified",
                "changes": 24,
                "deletions": 11,
                "sha": "71c2f77e32f2fb24cdb803f91d7b184b819317d3",
                "blob_url": "https://github.com/apache/opennlp/blob/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java?ref=172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca"
            },
            {
                "patch": "@@ -83,7 +83,8 @@\n   protected int sortAndMerge(List<ComparableEvent> eventsToCompare, boolean sort) {\n     int numUniqueEvents = 1;\n     numEvents = eventsToCompare.size();\n-    if (sort) {\n+    if (sort && eventsToCompare.size() > 0) {\n+\n       Collections.sort(eventsToCompare);\n \n       ComparableEvent ce = eventsToCompare.get(0);",
                "additions": 2,
                "raw_url": "https://github.com/apache/opennlp/raw/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "c1726f6ff7867584e1d17356adca5f99cab54eb5",
                "blob_url": "https://github.com/apache/opennlp/blob/172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca/opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java?ref=172ca9842f2ee60a4d5f73ab7ba42bd20f19e6ca"
            }
        ],
        "bug_id": "opennlp_5",
        "parent": "https://github.com/apache/opennlp/commit/931f6d55df58236c4a530d7ead3ecc1bebfa70c4",
        "message": "OPENNLP-488 - applied patch from Jeff Zemerick to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1734199 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "opennlp"
    },
    {
        "commit": "https://github.com/apache/opennlp/commit/7197b5c68d36f1bdd2d926dadf2f774656d64f58",
        "file": [
            {
                "patch": "@@ -66,15 +66,17 @@ public static boolean isSupportEvent(Map<String, String> trainParams) {\n     String trainerType = trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM);\n     \n     if (trainerType == null) {\n-      trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      String alogrithmValue = trainParams.get(AbstractTrainer.ALGORITHM_PARAM);\n+      if (alogrithmValue != null) {\n+        trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      }\n     }\n     \n     if (trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM) != null) {\n       return EventTrainer.EVENT_VALUE.equals(trainParams\n           .get(AbstractTrainer.TRAINER_TYPE_PARAM));\n     } \n     \n-    // default\n     return true;\n   }\n \n@@ -83,7 +85,10 @@ public static boolean isSupportSequence(Map<String, String> trainParams) {\n     String trainerType = trainParams.get(AbstractTrainer.TRAINER_TYPE_PARAM);\n     \n     if (trainerType == null) {\n-      trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      String alogrithmValue = trainParams.get(AbstractTrainer.ALGORITHM_PARAM);\n+      if (alogrithmValue != null) {\n+        trainerType = getPluggableTrainerType(trainParams.get(AbstractTrainer.ALGORITHM_PARAM));\n+      }\n     }\n     \n     if (SequenceTrainer.SEQUENCE_VALUE.equals(trainerType)) {",
                "additions": 8,
                "raw_url": "https://github.com/apache/opennlp/raw/7197b5c68d36f1bdd2d926dadf2f774656d64f58/opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java",
                "status": "modified",
                "changes": 11,
                "deletions": 3,
                "sha": "4cf1df0f4636239daeb994e6a8972f0b92190081",
                "blob_url": "https://github.com/apache/opennlp/blob/7197b5c68d36f1bdd2d926dadf2f774656d64f58/opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java?ref=7197b5c68d36f1bdd2d926dadf2f774656d64f58"
            }
        ],
        "bug_id": "opennlp_6",
        "parent": "https://github.com/apache/opennlp/commit/cf3d1823589c6200bc43dae7b34ce45ffd9caef8",
        "message": "No jira, fixed a null check to avoid a NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1560972 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "opennlp"
    },
    {
        "commit": "https://github.com/apache/opennlp/commit/77611e5e80319a48e957f75f22050b40f27eab0a",
        "file": [
            {
                "patch": "@@ -108,7 +108,7 @@ public void initialize() throws ResourceInitializationException {\n     language = CasConsumerUtil.getRequiredStringParameter(mContext,\r\n         UimaUtil.LANGUAGE_PARAMETER);\r\n     \r\n-    Boolean isSkipAlphaNumerics = \r\n+    isSkipAlphaNumerics = \r\n         CasConsumerUtil.getOptionalBooleanParameter(\r\n         mContext, IS_ALPHA_NUMERIC_OPTIMIZATION);\r\n     \r",
                "additions": 1,
                "raw_url": "https://github.com/apache/opennlp/raw/77611e5e80319a48e957f75f22050b40f27eab0a/opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "adc6c2ca176185251910872551457185c18c03b3",
                "blob_url": "https://github.com/apache/opennlp/blob/77611e5e80319a48e957f75f22050b40f27eab0a/opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java",
                "filename": "opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java?ref=77611e5e80319a48e957f75f22050b40f27eab0a"
            }
        ],
        "bug_id": "opennlp_7",
        "parent": "https://github.com/apache/opennlp/commit/cea19fed19f0968f2458bac329b2506d4a0e8452",
        "message": "OPENNLP-151 Fixed NPE through incorrectly declared local variable\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1089145 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "opennlp"
    },
    {
        "commit": "https://github.com/apache/opennlp/commit/f41befa9121be253ad6e169f406255f540ac2991",
        "file": [
            {
                "patch": "@@ -54,8 +54,8 @@\n    * of the resources.\n    */\n   public TokenNameFinderFactory() {\n+    this.seqCodec = new BioCodec();\n   }\n-\n   \n   public TokenNameFinderFactory(byte[] featureGeneratorBytes, final Map<String, Object> resources,\n       SequenceCodec<String> seqCodec) {",
                "additions": 1,
                "raw_url": "https://github.com/apache/opennlp/raw/f41befa9121be253ad6e169f406255f540ac2991/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "fbedca2f54de9ced163151b05f78723aeb013b86",
                "blob_url": "https://github.com/apache/opennlp/blob/f41befa9121be253ad6e169f406255f540ac2991/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java",
                "filename": "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java",
                "contents_url": "https://api.github.com/repos/apache/opennlp/contents/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java?ref=f41befa9121be253ad6e169f406255f540ac2991"
            }
        ],
        "bug_id": "opennlp_8",
        "parent": "https://github.com/apache/opennlp/commit/fa987ce6519e2947e619876f8a8e9bcf82d93eae",
        "message": "OPENNLP-670 seqCodec is not initialized in the default constructor which causes a NPE if trained with default seq codec. Thanks  to Vinh Khuc for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1584277 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "opennlp"
    }
]