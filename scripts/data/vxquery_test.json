{
    "vxquery_47815f8": {
        "bug_id": "vxquery_47815f8",
        "commit": "https://github.com/apache/vxquery/commit/47815f899547f5e23a2d12a7da3ab038649d307f",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/vxquery/blob/47815f899547f5e23a2d12a7da3ab038649d307f/.gitignore",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/vxquery/contents/.gitignore?ref=47815f899547f5e23a2d12a7da3ab038649d307f",
                "deletions": 0,
                "filename": ".gitignore",
                "patch": "@@ -1,5 +1,6 @@\n .project\n .settings\n .classpath\n+.idea\n target\n /ClusterControllerService/",
                "raw_url": "https://github.com/apache/vxquery/raw/47815f899547f5e23a2d12a7da3ab038649d307f/.gitignore",
                "sha": "65263b39e55b3bb60e7840d69c0526af51941ac2",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/vxquery/blob/47815f899547f5e23a2d12a7da3ab038649d307f/vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/vxquery/contents/vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java?ref=47815f899547f5e23a2d12a7da3ab038649d307f",
                "deletions": 15,
                "filename": "vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java",
                "patch": "@@ -81,8 +81,7 @@\n     /**\n      * Constructor to use command line options passed.\n      *\n-     * @param opts\n-     *            Command line options object\n+     * @param opts Command line options object\n      */\n     public VXQuery(CmdLineOptions opts) {\n         this.opts = opts;\n@@ -240,23 +239,24 @@ private void runQueries() throws IOException, SystemException, Exception {\n      * @throws Exception\n      */\n     private String[] getNodeList() throws Exception {\n-        Map<String, NodeControllerInfo> nodeControllerInfos = hcc.getNodeControllerInfos();\n-        String[] nodeList = new String[nodeControllerInfos.size()];\n-        int index = 0;\n-        for (String node : nodeControllerInfos.keySet()) {\n-            nodeList[index++] = node;\n+        if (hcc != null) {\n+            Map<String, NodeControllerInfo> nodeControllerInfos = hcc.getNodeControllerInfos();\n+            String[] nodeList = new String[nodeControllerInfos.size()];\n+            int index = 0;\n+            for (String node : nodeControllerInfos.keySet()) {\n+                nodeList[index++] = node;\n+            }\n+            return nodeList;\n         }\n-        return nodeList;\n+        return new String[0];\n     }\n \n     /**\n      * Creates a Hyracks dataset, if not already existing with the job frame size, and 1 reader. Allocates a new buffer of size specified in the frame of Hyracks\n      * node. Creates new dataset reader with the current job ID and result set ID. Outputs the string in buffer for each frame.\n      *\n-     * @param spec\n-     *            JobSpecification object, containing frame size. Current specified job.\n-     * @param writer\n-     *            Writer for output of job.\n+     * @param spec   JobSpecification object, containing frame size. Current specified job.\n+     * @param writer Writer for output of job.\n      * @throws Exception\n      */\n     private void runJob(JobSpecification spec, PrintWriter writer) throws Exception {\n@@ -339,8 +339,7 @@ public void stopLocalHyracks() throws Exception {\n     /**\n      * Reads the contents of file given in query into a String. The file is always closed. For XML files UTF-8 encoding is used.\n      *\n-     * @param query\n-     *            The query with filename to be processed\n+     * @param query The query with filename to be processed\n      * @return UTF-8 formatted query string\n      * @throws IOException\n      */\n@@ -362,7 +361,8 @@ private static void timingMessage(String message) {\n      * Helper class with fields and methods to handle all command line options\n      */\n     private static class CmdLineOptions {\n-        @Option(name = \"-available-processors\", usage = \"Number of available processors. (default: java's available processors)\")\n+        @Option(name = \"-available-processors\",\n+                usage = \"Number of available processors. (default: java's available processors)\")\n         private int availableProcessors = -1;\n \n         @Option(name = \"-client-net-ip-address\", usage = \"IP Address of the ClusterController.\")",
                "raw_url": "https://github.com/apache/vxquery/raw/47815f899547f5e23a2d12a7da3ab038649d307f/vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java",
                "sha": "a02c65dea01dcf619ccb62319462657275c23b7d",
                "status": "modified"
            }
        ],
        "message": "VXQUERY-139: Fixed the NPE for the compile only flag.\n\nPreviously executing queries with compileonly flag gave NPE, which was due to null value of IHyracksClientConnection.\nSubmitted by: ankitladhania (on github)",
        "parent": "https://github.com/apache/vxquery/commit/bb39a04fc6051c49036e4875d8cec72e2c87a270",
        "patched_files": [
            "VXQuery.java"
        ],
        "repo": "vxquery",
        "unit_tests": [
            "VXQueryTest.java"
        ]
    },
    "vxquery_6a1cd78": {
        "bug_id": "vxquery_6a1cd78",
        "commit": "https://github.com/apache/vxquery/commit/6a1cd7801fc1a2c627786e6af10ede36a2091638",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/vxquery/blob/6a1cd7801fc1a2c627786e6af10ede36a2091638/tests/xtest/org/apache/vxquery/xtest/TestRunnerFactory.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/vxquery/contents/tests/xtest/org/apache/vxquery/xtest/TestRunnerFactory.java?ref=6a1cd7801fc1a2c627786e6af10ede36a2091638",
                "deletions": 1,
                "filename": "tests/xtest/org/apache/vxquery/xtest/TestRunnerFactory.java",
                "patch": "@@ -18,6 +18,7 @@\n \n import java.io.BufferedWriter;\n import java.io.ByteArrayOutputStream;\n+import java.io.File;\n import java.io.FileReader;\n import java.io.OutputStreamWriter;\n import java.io.PrintWriter;\n@@ -67,7 +68,10 @@ public void run() {\n                     for (PrologVariable pVar : module.getPrologVariables()) {\n                         GlobalVariable var = pVar.getVariable();\n                         QName varName = var.getName();\n-                        iapi.bindExternalVariable(var, testCase.getExternalVariableBinding(varName));\n+                        File binding = testCase.getExternalVariableBinding(varName);\n+                        if (binding != null) {\n+                            iapi.bindExternalVariable(var, testCase.getExternalVariableBinding(varName));\n+                        }\n                     }\n                     OpenableCloseableIterator ri = iapi.execute(module);\n                     ri.open();",
                "raw_url": "https://github.com/apache/vxquery/raw/6a1cd7801fc1a2c627786e6af10ede36a2091638/tests/xtest/org/apache/vxquery/xtest/TestRunnerFactory.java",
                "sha": "83417a01effa9ea75d88fad457e4a92e037548f7",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE when variable binding is not specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/vxquery/trunk/vxquery@818519 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/vxquery/commit/743fca6fb7d2ceb5936ebd07779b833fd97fed30",
        "patched_files": [],
        "repo": "vxquery",
        "unit_tests": [
            "TestRunnerFactory.java"
        ]
    }
}