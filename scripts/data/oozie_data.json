[
    {
        "commit": "https://github.com/apache/oozie/commit/d17760471f42d6a49e98df1e97bd2f1810465030",
        "file": [
            {
                "patch": "@@ -147,7 +147,7 @@ public boolean removeMissingDependency(HCatURI hcatURI, String actionID) {\n                 if (partKeys != null) {\n                     partKeys.remove(partKey);\n                 }\n-                if (partKeys.size() == 0) {\n+                if (partKeys != null && partKeys.size() == 0) {\n                     partitionMap.remove(tableKey);\n                 }\n                 if (partitionMap.size() == 0) {",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/d17760471f42d6a49e98df1e97bd2f1810465030/core/src/main/java/org/apache/oozie/dependency/hcat/SimpleHCatDependencyCache.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "2bfe0cfc4effa11690b82c16a304a4b206373e54",
                "blob_url": "https://github.com/apache/oozie/blob/d17760471f42d6a49e98df1e97bd2f1810465030/core/src/main/java/org/apache/oozie/dependency/hcat/SimpleHCatDependencyCache.java",
                "filename": "core/src/main/java/org/apache/oozie/dependency/hcat/SimpleHCatDependencyCache.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/dependency/hcat/SimpleHCatDependencyCache.java?ref=d17760471f42d6a49e98df1e97bd2f1810465030"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 5.2.0 release (trunk - unreleased)\n \n+OOZIE-2693 SimpleHCatDependencyCache.removeMissingDependency can throw NPE (puru via asalamon74)\n OOZIE-3442 Check and eliminate builds/runHudsonCIBuild.sh (nobigo via asalamon74)\n OOZIE-1702 [build] Fix Javadoc warnings (dionusos via kmarton)\n OOZIE-3395 amend [build] Migration from FindBugs to SpotBugs (kmarton via asalamon74)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/d17760471f42d6a49e98df1e97bd2f1810465030/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "cc8bffc931210caf988703662b4ae8edd9ad8819",
                "blob_url": "https://github.com/apache/oozie/blob/d17760471f42d6a49e98df1e97bd2f1810465030/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=d17760471f42d6a49e98df1e97bd2f1810465030"
            }
        ],
        "bug_id": "oozie_1",
        "parent": "https://github.com/apache/oozie/commit/99adb8ce3b6979ac469c766319d1edc1ee85a0f5",
        "message": "OOZIE-2693 SimpleHCatDependencyCache.removeMissingDependency can throw NPE (puru via asalamon74)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/6b9ed571e599ca7edb3827f9e002660f9b769b3c",
        "file": [
            {
                "patch": "@@ -107,19 +107,20 @@ protected void verifyPrecondition() throws CommandException, PreconditionExcepti\n     @Override\n     protected List<Pair<CoordinatorActionBean, Map<String, ActionDependency>>> execute() throws CommandException {\n \n-        List<Pair<CoordinatorActionBean, Map<String, ActionDependency>>> inputDependenciesListPair =\n+        final List<Pair<CoordinatorActionBean, Map<String, ActionDependency>>> inputDependenciesListPair =\n                 new ArrayList<Pair<CoordinatorActionBean, Map<String, ActionDependency>>>();\n         try {\n \n-            for (CoordinatorActionBean coordAction : coordActions) {\n-                CoordInputDependency coordPullInputDependency = coordAction.getPullInputDependencies();\n-                CoordInputDependency coordPushInputDependency = coordAction.getPushInputDependencies();\n-                Map<String, ActionDependency> dependencyMap = new HashMap<String, ActionDependency>();\n+            for (final CoordinatorActionBean coordAction : coordActions) {\n+                final CoordInputDependency coordPullInputDependency = coordAction.getPullInputDependencies();\n+                final CoordInputDependency coordPushInputDependency = coordAction.getPushInputDependencies();\n+                final Map<String, ActionDependency> dependencyMap = new HashMap<>();\n                 dependencyMap.putAll(coordPullInputDependency.getMissingDependencies(coordAction));\n                 dependencyMap.putAll(coordPushInputDependency.getMissingDependencies(coordAction));\n \n-                inputDependenciesListPair.add(\n-                        new Pair<CoordinatorActionBean, Map<String, ActionDependency>>(coordAction, dependencyMap));\n+                if (!dependencyMap.isEmpty()) {\n+                    inputDependenciesListPair.add(new Pair<>(coordAction, dependencyMap));\n+                }\n             }\n         }\n         catch (Exception e) {",
                "additions": 8,
                "raw_url": "https://github.com/apache/oozie/raw/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/main/java/org/apache/oozie/command/coord/CoordActionMissingDependenciesXCommand.java",
                "status": "modified",
                "changes": 15,
                "deletions": 7,
                "sha": "f5d87824d0fd4502cace932d409c39a7b03d5046",
                "blob_url": "https://github.com/apache/oozie/blob/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/main/java/org/apache/oozie/command/coord/CoordActionMissingDependenciesXCommand.java",
                "filename": "core/src/main/java/org/apache/oozie/command/coord/CoordActionMissingDependenciesXCommand.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/command/coord/CoordActionMissingDependenciesXCommand.java?ref=6b9ed571e599ca7edb3827f9e002660f9b769b3c"
            },
            {
                "patch": "@@ -370,6 +370,11 @@ public boolean checkUnresolved(CoordinatorActionBean coordAction, Element eActio\n \n         Element eAction = XmlUtils.parseXml(coordAction.getActionXml());\n         Element inputList = eAction.getChild(\"input-events\", eAction.getNamespace());\n+\n+        if (inputList == null || inputList.getChildren().isEmpty()) {\n+            return dependenciesMap;\n+        }\n+\n         List<Element> eDataEvents = inputList.getChildren(\"data-in\", eAction.getNamespace());\n         for (Element event : eDataEvents) {\n             Element uri = event.getChild(\"uris\", event.getNamespace());",
                "additions": 5,
                "raw_url": "https://github.com/apache/oozie/raw/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java",
                "status": "modified",
                "changes": 5,
                "deletions": 0,
                "sha": "af298b99d34cbcb7d03939fdb9c2e4e73c96ea43",
                "blob_url": "https://github.com/apache/oozie/blob/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java",
                "filename": "core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java?ref=6b9ed571e599ca7edb3827f9e002660f9b769b3c"
            },
            {
                "patch": "@@ -0,0 +1,154 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.oozie.coord.input.dependency;\n+\n+import org.apache.oozie.CoordinatorActionBean;\n+import org.apache.oozie.client.CoordinatorAction;\n+import org.apache.oozie.command.CommandException;\n+import org.apache.oozie.service.Services;\n+import org.apache.oozie.test.XHCatTestCase;\n+import org.jdom.JDOMException;\n+\n+import java.io.IOException;\n+\n+public class TestCoordOldInputDependency extends XHCatTestCase {\n+    private Services services;\n+\n+    @Override\n+    protected void setUp() throws Exception {\n+        super.setUp();\n+        services = super.setupServicesForHCatalog();\n+        services.init();\n+    }\n+\n+    @Override\n+    protected void tearDown() throws Exception {\n+        services.destroy();\n+        super.tearDown();\n+    }\n+\n+    public void testNoMissingInputDependencies() throws JDOMException, IOException, CommandException {\n+        final CoordinatorActionBean actionWithoutInputDependencies = createActionWithoutInputDependencies();\n+\n+        assertEquals(\"there should be no missing dependencies\",\n+                0,\n+                actionWithoutInputDependencies\n+                        .getPullInputDependencies()\n+                        .getMissingDependencies(actionWithoutInputDependencies).size());\n+    }\n+\n+    public void testOneMissingInputDependency() throws JDOMException, IOException, CommandException {\n+        final CoordinatorActionBean actionWithInputDependencies = createActionWithInputDependencies();\n+\n+        assertEquals(\"there should be one missing dependency\",\n+                1,\n+                actionWithInputDependencies\n+                        .getPullInputDependencies()\n+                        .getMissingDependencies(actionWithInputDependencies).size());\n+    }\n+\n+    private CoordinatorActionBean createActionWithoutInputDependencies() {\n+        final CoordinatorActionBean coordinatorAction = createAction();\n+\n+        coordinatorAction.setActionXml(\"<coordinator-app xmlns=\\\"uri:oozie:coordinator:0.2\\\" name=\\\"cron-coord\\\"\" +\n+                \" frequency=\\\"0/10 * * * *\\\" timezone=\\\"UTC\\\" freq_timeunit=\\\"CRON\\\" end_of_duration=\\\"NONE\\\"\" +\n+                \" instance-number=\\\"1\\\" action-nominal-time=\\\"2010-01-01T00:00Z\\\" action-actual-time=\\\"2018-11-29T12:55Z\\\">\\n\" +\n+                \"  <action>\\n\" +\n+                \"    <workflow>\\n\" +\n+                \"      <app-path>hdfs://localhost:9000/user/forsage/examples/apps/cron-schedule</app-path>\\n\" +\n+                \"      <configuration>\\n\" +\n+                \"        <property>\\n\" +\n+                \"          <name>resourceManager</name>\\n\" +\n+                \"          <value>localhost:8032</value>\\n\" +\n+                \"        </property>\\n\" +\n+                \"        <property>\\n\" +\n+                \"          <name>nameNode</name>\\n\" +\n+                \"          <value>hdfs://localhost:9000</value>\\n\" +\n+                \"        </property>\\n\" +\n+                \"        <property>\\n\" +\n+                \"          <name>queueName</name>\\n\" +\n+                \"          <value>default</value>\\n\" +\n+                \"        </property>\\n\" +\n+                \"      </configuration>\\n\" +\n+                \"    </workflow>\\n\" +\n+                \"  </action>\\n\" +\n+                \"</coordinator-app>\");\n+\n+        return coordinatorAction;\n+    }\n+\n+    private CoordinatorActionBean createAction() {\n+        final CoordinatorActionBean coordinatorAction = new CoordinatorActionBean();\n+\n+        coordinatorAction.setId(\"0000001-181129135145907-oozie-fors-C@1\");\n+        coordinatorAction.setJobId(\"0000001-181129135145907-oozie-fors-C\");\n+        coordinatorAction.setStatus(CoordinatorAction.Status.SUCCEEDED);\n+        coordinatorAction.setExternalId(\"0000002-181129135145907-oozie-fors-W\");\n+\n+        return coordinatorAction;\n+    }\n+\n+    private CoordinatorActionBean createActionWithInputDependencies() throws IOException {\n+        final CoordinatorActionBean action = createAction();\n+\n+        action.setActionXml(\"<coordinator-app xmlns=\\\"uri:oozie:coordinator:0.2\\\" name=\\\"cron-coord\\\"\" +\n+                \" frequency=\\\"0/10 * * * *\\\" timezone=\\\"UTC\\\" freq_timeunit=\\\"CRON\\\" end_of_duration=\\\"NONE\\\"\" +\n+                \" instance-number=\\\"1\\\" action-nominal-time=\\\"2010-01-01T00:00Z\\\" action-actual-time=\\\"2018-11-29T12:55Z\\\">\\n\" +\n+                \"    <datasets>\\n\" +\n+                \"        <dataset name=\\\"data-1\\\" frequency=\\\"${coord:minutes(20)}\\\" initial-instance=\\\"2010-01-01T00:00Z\\\">\\n\" +\n+                \"            <uri-template>${nameNode}/${YEAR}/${MONTH}/${DAY}/${HOUR}/${MINUTE}</uri-template>\\n\" +\n+                \"        </dataset>\\n\" +\n+                \"    </datasets>\\n\" +\n+                \"    <input-events>\\n\" +\n+                \"        <data-in name=\\\"input-1\\\" dataset=\\\"data-1\\\">\\n\" +\n+                \"            <start-instance>${coord:current(-2)}</start-instance>\\n\" +\n+                \"            <end-instance>${coord:current(0)}</end-instance>\\n\" +\n+                \"        </data-in>\\n\" +\n+                \"    </input-events>\\n\" +\n+                \"  <action>\\n\" +\n+                \"    <workflow>\\n\" +\n+                \"      <app-path>hdfs://localhost:9000/user/forsage/examples/apps/cron-schedule</app-path>\\n\" +\n+                \"      <configuration>\\n\" +\n+                \"        <property>\\n\" +\n+                \"          <name>resourceManager</name>\\n\" +\n+                \"          <value>localhost:8032</value>\\n\" +\n+                \"        </property>\\n\" +\n+                \"        <property>\\n\" +\n+                \"          <name>nameNode</name>\\n\" +\n+                \"          <value>hdfs://localhost:9000</value>\\n\" +\n+                \"        </property>\\n\" +\n+                \"        <property>\\n\" +\n+                \"          <name>queueName</name>\\n\" +\n+                \"          <value>default</value>\\n\" +\n+                \"        </property>\\n\" +\n+                \"      </configuration>\\n\" +\n+                \"    </workflow>\\n\" +\n+                \"  </action>\\n\" +\n+                \"</coordinator-app>\");\n+\n+        final CoordInputDependency coordPullInputDependency = CoordInputDependencyFactory\n+                .createPullInputDependencies(true);\n+        coordPullInputDependency.addUnResolvedList(\"data-1\", \"data-1\");\n+\n+        action.setMissingDependencies(coordPullInputDependency.serialize());\n+        action.setPullInputDependencies(coordPullInputDependency);\n+\n+        return action;\n+    }\n+}\n\\ No newline at end of file",
                "additions": 154,
                "raw_url": "https://github.com/apache/oozie/raw/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/test/java/org/apache/oozie/coord/input/dependency/TestCoordOldInputDependency.java",
                "status": "added",
                "changes": 154,
                "deletions": 0,
                "sha": "c6bd3c07e9f3579056321712deb4e5b086a58cd6",
                "blob_url": "https://github.com/apache/oozie/blob/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/test/java/org/apache/oozie/coord/input/dependency/TestCoordOldInputDependency.java",
                "filename": "core/src/test/java/org/apache/oozie/coord/input/dependency/TestCoordOldInputDependency.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/coord/input/dependency/TestCoordOldInputDependency.java?ref=6b9ed571e599ca7edb3827f9e002660f9b769b3c"
            },
            {
                "patch": "@@ -19,7 +19,6 @@\n package org.apache.oozie.servlet;\n \n import org.apache.oozie.client.CoordinatorWfAction;\n-import org.apache.oozie.client.OozieClient;\n import org.apache.oozie.client.rest.RestConstants;\n import org.apache.oozie.client.rest.JsonTags;\n import org.apache.oozie.service.ConfigurationService;\n@@ -117,13 +116,20 @@ public Void call() throws Exception {\n                 url = createURL(MockCoordinatorEngineService.JOB_ID + (MockCoordinatorEngineService.coordJobs.size() + 1), params);\n                 conn = (HttpURLConnection) url.openConnection();\n                 conn.setRequestMethod(\"GET\");\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n                 assertEquals(RestConstants.JOB_SHOW_INFO, MockCoordinatorEngineService.did);\n                 return null;\n             }\n         });\n     }\n \n+    private void assertBadRequestOrInternalServerError(final int responseCode) {\n+        assertTrue(String.format(\"HTTP response code [%d] is unexpected, should be one of [%d, %d]\",\n+                            responseCode, HttpServletResponse.SC_BAD_REQUEST, HttpServletResponse.SC_INTERNAL_SERVER_ERROR),\n+                HttpServletResponse.SC_BAD_REQUEST == responseCode\n+                || HttpServletResponse.SC_INTERNAL_SERVER_ERROR == responseCode);\n+    }\n+\n     public void testGetCoordActionReruns() throws Exception {\n         runTest(\"/v2/job/*\", V1JobServlet.class, IS_SECURITY_ENABLED, new Callable<Void>() {\n             @Override\n@@ -180,7 +186,7 @@ public Void call() throws Exception {\n                 conn.setRequestMethod(\"PUT\");\n                 conn.setRequestProperty(\"content-type\", RestConstants.XML_CONTENT_TYPE);\n                 conn.setDoOutput(true);\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n                 assertEquals(RestConstants.JOB_ACTION_CHANGE, MockCoordinatorEngineService.did);\n \n                 return null;\n@@ -219,7 +225,7 @@ public Void call() throws Exception {\n                 conn.setRequestMethod(\"PUT\");\n                 conn.setRequestProperty(\"content-type\", RestConstants.XML_CONTENT_TYPE);\n                 conn.setDoOutput(true);\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n                 assertEquals(RestConstants.JOB_ACTION_IGNORE, MockCoordinatorEngineService.did);\n \n                 return null;\n@@ -313,7 +319,7 @@ public Void call() throws Exception {\n                 URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);\n                 HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                 conn.setRequestMethod(\"GET\");\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n \n                 return null;\n             }\n@@ -334,7 +340,7 @@ public Void call() throws Exception {\n                 URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);\n                 HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                 conn.setRequestMethod(\"GET\");\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n \n                 return null;\n             }\n@@ -355,7 +361,7 @@ public Void call() throws Exception {\n                 URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);\n                 HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                 conn.setRequestMethod(\"GET\");\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n \n                 return null;\n             }\n@@ -419,7 +425,7 @@ public Void call() throws Exception {\n                 URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);\n                 HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                 conn.setRequestMethod(\"GET\");\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n \n                 return null;\n             }\n@@ -440,7 +446,8 @@ public Void call() throws Exception {\n                 URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);\n                 HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                 conn.setRequestMethod(\"GET\");\n-                assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());\n+                assertBadRequestOrInternalServerError(conn.getResponseCode());\n+\n                 return null;\n             }\n         });",
                "additions": 16,
                "raw_url": "https://github.com/apache/oozie/raw/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/test/java/org/apache/oozie/servlet/TestV2JobServlet.java",
                "status": "modified",
                "changes": 25,
                "deletions": 9,
                "sha": "b42421d5656588131b8f4914bddd2af9a5f1ebd1",
                "blob_url": "https://github.com/apache/oozie/blob/6b9ed571e599ca7edb3827f9e002660f9b769b3c/core/src/test/java/org/apache/oozie/servlet/TestV2JobServlet.java",
                "filename": "core/src/test/java/org/apache/oozie/servlet/TestV2JobServlet.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/servlet/TestV2JobServlet.java?ref=6b9ed571e599ca7edb3827f9e002660f9b769b3c"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 5.2.0 release (trunk - unreleased)\n \n+OOZIE-3389 Getting input dependency list on the UI throws NPE (andras.piros via asalamon74, kmarton)\n OOZIE-3382 [SSH action] [SSH action] Optimize process streams draining (asalamon74 via andras.piros)\n OOZIE-3384 [tests] TestWorkflowActionRetryInfoXCommand#testRetryConsoleUrlForked() is flaky (asalamon74 via kmarton)\n OOZIE-3386 Misleading error message when workflow application does not exist (kmarton)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/6b9ed571e599ca7edb3827f9e002660f9b769b3c/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "56900177a581907da6783c02d8503bb633a532c3",
                "blob_url": "https://github.com/apache/oozie/blob/6b9ed571e599ca7edb3827f9e002660f9b769b3c/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=6b9ed571e599ca7edb3827f9e002660f9b769b3c"
            }
        ],
        "bug_id": "oozie_2",
        "parent": "https://github.com/apache/oozie/commit/8013a945f16b5a10ad1fdd898ea10fcdb838117e",
        "message": "OOZIE-3389 Getting input dependency list on the UI throws NPE (andras.piros via asalamon74, kmarton)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/800ea758ea821ab16e16d94178dadd3fb71b6b53",
        "file": [
            {
                "patch": "@@ -599,7 +599,7 @@ public StringBlob getExternalChildIDsBlob() {\n     public void setEndData(Status status, String signalValue) {\n         if (status == null || (status != Status.OK && status != Status.ERROR && status != Status.KILLED)) {\n             throw new IllegalArgumentException(\"Action status must be OK, ERROR or KILLED. Received [\"\n-                    + status.toString() + \"]\");\n+                    + (status == null ? \"null\" : status.toString()) + \"]\");\n         }\n         if (status == Status.OK) {\n             setErrorInfo(null, null);",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/800ea758ea821ab16e16d94178dadd3fb71b6b53/core/src/main/java/org/apache/oozie/WorkflowActionBean.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "14f36ed67a893cd94a7dbf7340caecf6af165e78",
                "blob_url": "https://github.com/apache/oozie/blob/800ea758ea821ab16e16d94178dadd3fb71b6b53/core/src/main/java/org/apache/oozie/WorkflowActionBean.java",
                "filename": "core/src/main/java/org/apache/oozie/WorkflowActionBean.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/WorkflowActionBean.java?ref=800ea758ea821ab16e16d94178dadd3fb71b6b53"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 5.0.0 release (trunk - unreleased)\n \n+OOZIE-2940 Possible NullPointerException in WorkflowActionBean (dionusos via gezapeti)\n OOZIE-3036 Spark 2.2.0 support: tell Spark not to get any delegation tokens (andras.piros via gezapeti)\n OOZIE-3028 Oozie Pig Action fails with no python dependencies (dbist13 via rohini)\n OOZIE-2670 Upgrade Hbase to 1.2 (gezapeti via asasvari)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/800ea758ea821ab16e16d94178dadd3fb71b6b53/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "1db287492559ce7d484636e4810d584fad692948",
                "blob_url": "https://github.com/apache/oozie/blob/800ea758ea821ab16e16d94178dadd3fb71b6b53/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=800ea758ea821ab16e16d94178dadd3fb71b6b53"
            }
        ],
        "bug_id": "oozie_3",
        "parent": "https://github.com/apache/oozie/commit/04a6d0541e83ab457db7c79e86986bb69a8eb432",
        "message": "OOZIE-2940 Possible NullPointerException in WorkflowActionBean (dionusos via gezapeti)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/be293c046d7d83765c65140921c3de5ca3d7b55a",
        "file": [
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 5.0.0 release (trunk - unreleased)\n \n+OOZIE-3078 PasswordMasker throws NPE with null arguments (asasvari)\n OOZIE-3075 Follow-up on OOZIE-3054: create the lib directory if it doesn't exist (pbacsko)\n OOZIE-3072 oozie.service.HadoopAccessorService.action.configurations   should overwrite default values set in Hadoop's configuration files (gezapeti)\n OOZIE-2963 Use net.hydromatic instead of org.pentaho aggdesigner-algorithmin pomfilesi (dbist13 via gezapeti)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/be293c046d7d83765c65140921c3de5ca3d7b55a/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "13d3a974915e292d36b8876023d4ea6ac9659133",
                "blob_url": "https://github.com/apache/oozie/blob/be293c046d7d83765c65140921c3de5ca3d7b55a/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=be293c046d7d83765c65140921c3de5ca3d7b55a"
            },
            {
                "patch": "@@ -25,8 +25,6 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-\n /**\n  * A generic password masker that masks {@code Map<String, String>} values given that its keys are considered password keys.\n  * <p/>\n@@ -116,8 +114,9 @@ public String mask(Map.Entry<String, String> unmasked) {\n      * @return The value of the entry changed based on the replace algorithm described above\n      */\n     private String mask(String key, String value) {\n-        checkNotNull(key, \"key has to be set\");\n-        checkNotNull(value, \"value has to be set\");\n+        if (key == null || value == null || value.isEmpty()) {\n+            return value;\n+        }\n \n         if (isPasswordKey(key)) {\n             return PASSWORD_MASK;\n@@ -147,6 +146,9 @@ private boolean isPasswordKey(String key) {\n     }\n \n     private boolean containsPasswordFragment(String maybePasswordFragments) {\n+        if (maybePasswordFragments == null || maybePasswordFragments.length() == 0) {\n+            return false;\n+        }\n         return PASSWORD_CONTAINING_PATTERN\n                 .matcher(maybePasswordFragments)\n                 .matches();",
                "additions": 6,
                "raw_url": "https://github.com/apache/oozie/raw/be293c046d7d83765c65140921c3de5ca3d7b55a/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/PasswordMasker.java",
                "status": "modified",
                "changes": 10,
                "deletions": 4,
                "sha": "b5f7a860db3d3003f2f9cc67adb03dbe61af5a01",
                "blob_url": "https://github.com/apache/oozie/blob/be293c046d7d83765c65140921c3de5ca3d7b55a/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/PasswordMasker.java",
                "filename": "sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/PasswordMasker.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/PasswordMasker.java?ref=be293c046d7d83765c65140921c3de5ca3d7b55a"
            },
            {
                "patch": "@@ -102,6 +102,16 @@ public void testMaskRandomMatchingStuff() {\n                 passwordMasker.maskPasswordsIfNecessary(\"aa -Djava.sysprop.password=1234 bb DUMMY_PASSWORD=dummy cc\"));\n     }\n \n+    @Test\n+    public void testMaskNullArgument() {\n+        assertEquals(null, passwordMasker.maskPasswordsIfNecessary(null));\n+    }\n+\n+    @Test\n+    public void testMaskEmptyArgument() {\n+        assertEquals(\"\", passwordMasker.maskPasswordsIfNecessary(\"\"));\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     private Map<String, String> jsonToMap(String jsonPath) throws IOException {\n         return new ObjectMapper().readValue(getClass().getResourceAsStream(jsonPath), HashMap.class);",
                "additions": 10,
                "raw_url": "https://github.com/apache/oozie/raw/be293c046d7d83765c65140921c3de5ca3d7b55a/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestPasswordMasker.java",
                "status": "modified",
                "changes": 10,
                "deletions": 0,
                "sha": "e362759ee833fe1d611ed83ebecafadaa6945196",
                "blob_url": "https://github.com/apache/oozie/blob/be293c046d7d83765c65140921c3de5ca3d7b55a/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestPasswordMasker.java",
                "filename": "sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestPasswordMasker.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestPasswordMasker.java?ref=be293c046d7d83765c65140921c3de5ca3d7b55a"
            }
        ],
        "bug_id": "oozie_4",
        "parent": "https://github.com/apache/oozie/commit/7bda357849e1006f2cc6df58320f8905da2bd3b8",
        "message": "OOZIE-3078 PasswordMasker throws NPE with null arguments (asasvari)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/91df71edca0d7590da7dafc30936a397d2e1463d",
        "file": [
            {
                "patch": "@@ -159,10 +159,16 @@ public void destroy() {\n     }\n \n     private void sendSLAEmail(SLAEvent event) throws Exception {\n-        Message message = new MimeMessage(session);\n-        setMessageHeader(message, event);\n-        setMessageBody(message, event);\n-        sendEmail(message);\n+        // If no address is provided, the user did not want to send an email so simply log it and do nothing\n+        if (event.getAlertContact() == null || event.getAlertContact().trim().length() == 0) {\n+            LOG.info(\"No destination address provided; an SLA alert email will not be sent\");\n+        } else {\n+            // Create and send an email\n+            Message message = new MimeMessage(session);\n+            setMessageHeader(message, event);\n+            setMessageBody(message, event);\n+            sendEmail(message);\n+        }\n     }\n \n     @Override",
                "additions": 10,
                "raw_url": "https://github.com/apache/oozie/raw/91df71edca0d7590da7dafc30936a397d2e1463d/core/src/main/java/org/apache/oozie/sla/listener/SLAEmailEventListener.java",
                "status": "modified",
                "changes": 14,
                "deletions": 4,
                "sha": "fbf701b0c943a64f9aa18361fdc78cdc2e091650",
                "blob_url": "https://github.com/apache/oozie/blob/91df71edca0d7590da7dafc30936a397d2e1463d/core/src/main/java/org/apache/oozie/sla/listener/SLAEmailEventListener.java",
                "filename": "core/src/main/java/org/apache/oozie/sla/listener/SLAEmailEventListener.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/sla/listener/SLAEmailEventListener.java?ref=91df71edca0d7590da7dafc30936a397d2e1463d"
            },
            {
                "patch": "@@ -340,6 +340,28 @@ public void testInvalidDestAddress() throws Exception {\n         assertEquals(msgs.length, 0);\n     }\n \n+    public void testNoDestAddress() throws Exception {\n+        SLACalcStatus event = new SLACalcStatus(new SLARegistrationBean());\n+        SLARegistrationBean eventBean = event.getSLARegistrationBean();\n+        Date startDate = DateUtils.parseDateUTC(\"2013-01-01T00:00Z\");\n+        // set empty address as alert contact\n+        eventBean.setAlertContact(\"\");\n+        event.setEventStatus(EventStatus.START_MISS);\n+        event.setId(\"0000000-000000000000001-oozie-wrkf-C@1\");\n+        eventBean.setAppType(AppType.COORDINATOR_ACTION);\n+        eventBean.setAppName(\"Test-SLA-Start-Miss\");\n+        eventBean.setUser(\"dummyuser\");\n+        eventBean.setExpectedStart(startDate);\n+        eventBean.setNotificationMsg(\"notification of start miss\");\n+        eventBean.setAppType(AppType.COORDINATOR_ACTION);\n+        event.setActualStart(DateUtils.parseDateUTC(\"2013-01-01T01:00Z\"));\n+\n+        slaEmailListener.onStartMiss(event);\n+\n+        MimeMessage[] msgs = greenMail.getReceivedMessages();\n+        assertEquals(msgs.length, 0);\n+    }\n+\n     public void testMultipleDestAddress() throws Exception {\n         SLACalcStatus event = new SLACalcStatus(new SLARegistrationBean());\n         SLARegistrationBean eventBean = event.getSLARegistrationBean();",
                "additions": 22,
                "raw_url": "https://github.com/apache/oozie/raw/91df71edca0d7590da7dafc30936a397d2e1463d/core/src/test/java/org/apache/oozie/sla/TestSLAEmailEventListener.java",
                "status": "modified",
                "changes": 22,
                "deletions": 0,
                "sha": "f2f5a211a686392d6f4966b2feedfbeaa0f8a7cb",
                "blob_url": "https://github.com/apache/oozie/blob/91df71edca0d7590da7dafc30936a397d2e1463d/core/src/test/java/org/apache/oozie/sla/TestSLAEmailEventListener.java",
                "filename": "core/src/test/java/org/apache/oozie/sla/TestSLAEmailEventListener.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/sla/TestSLAEmailEventListener.java?ref=91df71edca0d7590da7dafc30936a397d2e1463d"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 4.1.0 release (trunk - unreleased)\n \n+OOZIE-1835 NullPointerException from SLAEmailEventListener (rkanter)\n OOZIE-1809 offset and len options are ignored in oozie job -info for workflow (ryota)\n OOZIE-1826 Add thread which detects JVM pauses (rkanter)\n OOZIE-1791 add IGNORED status to Coordinator Job and Action (ryota)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/91df71edca0d7590da7dafc30936a397d2e1463d/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "86642f119a79096a580c9a60fec96e60849b1981",
                "blob_url": "https://github.com/apache/oozie/blob/91df71edca0d7590da7dafc30936a397d2e1463d/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=91df71edca0d7590da7dafc30936a397d2e1463d"
            }
        ],
        "bug_id": "oozie_5",
        "parent": "https://github.com/apache/oozie/commit/2dfaa4a74f9336cf27769483783760950bca0b94",
        "message": "OOZIE-1835 NullPointerException from SLAEmailEventListener (rkanter)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/c7fa12bb1abac643c60c7282626c39b690ae378b",
        "file": [
            {
                "patch": "@@ -2941,4 +2941,30 @@ public void testSetRootLoggerLevel() throws Exception {\n         assertEquals(\"DEBUG\", conf.get(oozieActionHiveRootLogger));\n     }\n \n+    public void testEmptyArgs() throws Exception {\n+        String actionXml = \"<java>\" +\n+                \"<job-tracker>\" + getJobTrackerUri() + \"</job-tracker>\" +\n+                \"<name-node>\" + getNameNodeUri() + \"</name-node>\" +\n+                \"<main-class>\" + LauncherMainTester.class.getName() + \"</main-class>\" +\n+                \"<arg></arg>\" +\n+                \"</java>\";\n+\n+        Context context = createContext(actionXml, null);\n+        final RunningJob runningJob = submitAction(context);\n+        waitFor(60 * 1000, new Predicate() {\n+            @Override\n+            public boolean evaluate() throws Exception {\n+                return runningJob.isComplete();\n+            }\n+        });\n+        assertTrue(runningJob.isSuccessful());\n+        ActionExecutor ae = new JavaActionExecutor();\n+        ae.check(context, context.getAction());\n+        assertTrue(ae.isCompleted(context.getAction().getExternalStatus()));\n+        assertEquals(\"SUCCEEDED\", context.getAction().getExternalStatus());\n+        assertNull(context.getAction().getData());\n+\n+        ae.end(context, context.getAction());\n+        assertEquals(WorkflowAction.Status.OK, context.getAction().getStatus());\n+    }\n }",
                "additions": 26,
                "raw_url": "https://github.com/apache/oozie/raw/c7fa12bb1abac643c60c7282626c39b690ae378b/core/src/test/java/org/apache/oozie/action/hadoop/TestJavaActionExecutor.java",
                "status": "modified",
                "changes": 26,
                "deletions": 0,
                "sha": "1c4b4296682865f96857c1038e0b26c4877b6dc8",
                "blob_url": "https://github.com/apache/oozie/blob/c7fa12bb1abac643c60c7282626c39b690ae378b/core/src/test/java/org/apache/oozie/action/hadoop/TestJavaActionExecutor.java",
                "filename": "core/src/test/java/org/apache/oozie/action/hadoop/TestJavaActionExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/action/hadoop/TestJavaActionExecutor.java?ref=c7fa12bb1abac643c60c7282626c39b690ae378b"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 4.4.0 release (trunk - unreleased)\n \n+OOZIE-2748 NPE in LauncherMapper.printArgs() (pbacsko via rkanter)\n OOZIE-2754 Document Ssh action failure if output is written to stdout/stderr upon login (asasvari via rkanter)\n OOZIE-2654 Zookeeper dependent services should not depend on Connectionstate to be valid before cleaning up (venkatnrangan via abhishekbafna)\n OOZIE-2519 Oozie HA with SSL info is slightly incorrect (andras.piros via rkanter)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/c7fa12bb1abac643c60c7282626c39b690ae378b/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "e0c5be5ba46226ea494c91c1472c33eb665f9b83",
                "blob_url": "https://github.com/apache/oozie/blob/c7fa12bb1abac643c60c7282626c39b690ae378b/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=c7fa12bb1abac643c60c7282626c39b690ae378b"
            },
            {
                "patch": "@@ -61,6 +61,12 @@\n             <scope>test</scope>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.apache.oozie</groupId>\n             <artifactId>oozie-hadoop-utils</artifactId>",
                "additions": 6,
                "raw_url": "https://github.com/apache/oozie/raw/c7fa12bb1abac643c60c7282626c39b690ae378b/sharelib/oozie/pom.xml",
                "status": "modified",
                "changes": 6,
                "deletions": 0,
                "sha": "f3ea0716a6719c44916bb50255f5f31a873fb514",
                "blob_url": "https://github.com/apache/oozie/blob/c7fa12bb1abac643c60c7282626c39b690ae378b/sharelib/oozie/pom.xml",
                "filename": "sharelib/oozie/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/sharelib/oozie/pom.xml?ref=c7fa12bb1abac643c60c7282626c39b690ae378b"
            },
            {
                "patch": "@@ -50,6 +50,8 @@\n import org.apache.hadoop.mapred.OutputCollector;\n import org.apache.hadoop.mapred.Reporter;\n \n+import com.google.common.base.Strings;\n+\n public class LauncherMapper<K1, V1, K2, V2> implements Mapper<K1, V1, K2, V2>, Runnable {\n \n     static final String CONF_OOZIE_ACTION_MAIN_CLASS = \"oozie.launcher.action.main.class\";\n@@ -494,10 +496,21 @@ private void executePrepare() throws IOException, LauncherException {\n \n     public static String[] getMainArguments(Configuration conf) {\n         String[] args = new String[conf.getInt(CONF_OOZIE_ACTION_MAIN_ARG_COUNT, 0)];\n+\n+        int pos = 0;\n         for (int i = 0; i < args.length; i++) {\n-            args[i] = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);\n+            String arg = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);\n+            if (!Strings.isNullOrEmpty(arg)) {\n+                args[pos++] = conf.get(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i);\n+            }\n         }\n-        return args;\n+\n+        // this is to skip null args, that is <arg></arg> in the workflow XML -- in this case,\n+        // args[] might look like {\"arg1\", \"arg2\", null, null} at this point\n+        String[] retArray = new String[pos];\n+        System.arraycopy(args, 0, retArray, 0, pos);\n+\n+        return retArray;\n     }\n \n     private void setupHeartBeater(Reporter reporter) {",
                "additions": 15,
                "raw_url": "https://github.com/apache/oozie/raw/c7fa12bb1abac643c60c7282626c39b690ae378b/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java",
                "status": "modified",
                "changes": 17,
                "deletions": 2,
                "sha": "8edebac1147d6e918c7bec921ef9ee94fb16e8e4",
                "blob_url": "https://github.com/apache/oozie/blob/c7fa12bb1abac643c60c7282626c39b690ae378b/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java",
                "filename": "sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMapper.java?ref=c7fa12bb1abac643c60c7282626c39b690ae378b"
            },
            {
                "patch": "@@ -0,0 +1,88 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.oozie.action.hadoop;\n+\n+import static org.apache.oozie.action.hadoop.LauncherMapper.CONF_OOZIE_ACTION_MAIN_ARG_COUNT;\n+import static org.apache.oozie.action.hadoop.LauncherMapper.CONF_OOZIE_ACTION_MAIN_ARG_PREFIX;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.BDDMockito.given;\n+import static org.mockito.Matchers.eq;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import com.google.common.collect.Lists;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TestLauncherMapper {\n+    @Mock\n+    private Configuration conf;  // we have to use mock, because conf.set(null) throws exception\n+\n+    @Test\n+    public void testLauncherMapperArgsHandlingWithoutNulls() {\n+       setupConf(Lists.newArrayList(\"a\", \"b\", \"c\"));\n+\n+       String args[] = LauncherMapper.getMainArguments(conf);\n+\n+       assertTrue(Arrays.equals(new String[] { \"a\", \"b\", \"c\"}, args));\n+    }\n+\n+    @Test\n+    public void testLauncherMapperArgsHandlingWhenArgsContainNulls() {\n+        setupConf(Lists.newArrayList(\"a\", null, \"b\", null, \"c\"));\n+\n+        String args[] = LauncherMapper.getMainArguments(conf);\n+\n+        assertTrue(Arrays.equals(new String[] { \"a\", \"b\", \"c\"}, args));\n+    }\n+\n+    @Test\n+    public void testLauncherMapperArgsHandlingWhenArgsContainsNullsOnly() {\n+        setupConf(Lists.<String>newArrayList(null, null, null));\n+\n+        String args[] = LauncherMapper.getMainArguments(conf);\n+\n+        assertTrue(Arrays.equals(new String[] {}, args));\n+    }\n+\n+    @Test\n+    public void testLauncherMapperArgsHandlingWhenArgsContainsOneNull() {\n+        setupConf(Lists.<String>newArrayList((String) null));\n+\n+        String args[] = LauncherMapper.getMainArguments(conf);\n+\n+        assertTrue(Arrays.equals(new String[] {}, args));\n+    }\n+\n+    private void setupConf(List<String> argList) {\n+        int argCount = argList.size();\n+\n+        given(conf.getInt(eq(CONF_OOZIE_ACTION_MAIN_ARG_COUNT), eq(0))).willReturn(argCount);\n+\n+        for (int i = 0; i < argCount; i++) {\n+            given(conf.get(eq(CONF_OOZIE_ACTION_MAIN_ARG_PREFIX + i))).willReturn(argList.get(i));\n+        }\n+    }\n+}",
                "additions": 88,
                "raw_url": "https://github.com/apache/oozie/raw/c7fa12bb1abac643c60c7282626c39b690ae378b/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java",
                "status": "added",
                "changes": 88,
                "deletions": 0,
                "sha": "1dd800277529ed68a680f3ff85b9a6c87d6732d5",
                "blob_url": "https://github.com/apache/oozie/blob/c7fa12bb1abac643c60c7282626c39b690ae378b/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java",
                "filename": "sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/sharelib/oozie/src/test/java/org/apache/oozie/action/hadoop/TestLauncherMapper.java?ref=c7fa12bb1abac643c60c7282626c39b690ae378b"
            }
        ],
        "bug_id": "oozie_6",
        "parent": "https://github.com/apache/oozie/commit/d9616de9afdcea8d3e3d91b4d41e691cc0a1b85a",
        "message": "OOZIE-2748 NPE in LauncherMapper.printArgs() (pbacsko via rkanter)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/5759397a939375d235fa75165ff26bd6fcca8f75",
        "file": [
            {
                "patch": "@@ -45,7 +45,7 @@ public void init(Services services) throws ServiceException {\n         int interval = ConfigurationService.getInt(CONF_INTERVAL);\n         if (dbType.equals(\"derby\") || dbType.equals(\"hsqldb\") || dbType.equals(\"sqlserver\") || interval <= 0) {\n             LOG.debug(\"SchemaCheckerService is disabled: not supported for {0}\", dbType);\n-            status = \"DISABLED (\" + dbType + \" no supported)\";\n+            status = \"DISABLED (\" + dbType + \" not supported)\";\n         } else {\n             String driver = ConfigurationService.get(JPAService.CONF_DRIVER);\n             String user = ConfigurationService.get(JPAService.CONF_USERNAME);\n@@ -96,7 +96,7 @@ public void updateInstrumentation(boolean problem, Date time) {\n         lastCheck = time.toString();\n     }\n \n-    static class SchemaCheckerRunnable implements Runnable {\n+    private class SchemaCheckerRunnable implements Runnable {\n         private String dbType;\n         private String url;\n         private String user;\n@@ -117,8 +117,8 @@ public void run() {// Only queue the schema check command if this is the leader\n                 Services.get().get(CallableQueueService.class).queue(\n                         new SchemaCheckXCommand(dbType, url, user, pass, ignoreExtras));\n             } else {\n-                Services.get().get(SchemaCheckerService.class).status = \"DISABLED (not leader in HA)\";\n-                Services.get().get(SchemaCheckerService.class).lastCheck = \"N/A\";\n+                status = \"DISABLED (not leader in HA)\";\n+                lastCheck = \"N/A\";\n             }\n         }\n     }",
                "additions": 4,
                "raw_url": "https://github.com/apache/oozie/raw/5759397a939375d235fa75165ff26bd6fcca8f75/core/src/main/java/org/apache/oozie/service/SchemaCheckerService.java",
                "status": "modified",
                "changes": 8,
                "deletions": 4,
                "sha": "1101f993c4c0a607753431081ff0e9a8bf3d2119",
                "blob_url": "https://github.com/apache/oozie/blob/5759397a939375d235fa75165ff26bd6fcca8f75/core/src/main/java/org/apache/oozie/service/SchemaCheckerService.java",
                "filename": "core/src/main/java/org/apache/oozie/service/SchemaCheckerService.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/service/SchemaCheckerService.java?ref=5759397a939375d235fa75165ff26bd6fcca8f75"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 4.3.0 release (trunk - unreleased)\n \n+OOZIE-2525 SchemaChecker fails with NPE (rkanter)\n OOZIE-2672 SLA periodic update does not remove job from map if job is removed from database (satishsaley via puru)\n OOZIE-2498 Oozie CallerId configuration for downstream components (abhishekbafna via rohini)\n OOZIE-2491 oozie acl cannot specify group,it does`t work (abhishekbafna via rohini)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/5759397a939375d235fa75165ff26bd6fcca8f75/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "5f939e8cc0c22bd4a44f85840de1bdd4e49af788",
                "blob_url": "https://github.com/apache/oozie/blob/5759397a939375d235fa75165ff26bd6fcca8f75/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=5759397a939375d235fa75165ff26bd6fcca8f75"
            }
        ],
        "bug_id": "oozie_7",
        "parent": "https://github.com/apache/oozie/commit/bcd23e18e5cf5757a8d99995e365ef95f4a80bda",
        "message": "OOZIE-2525 SchemaChecker fails with NPE (rkanter)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/05337002fc50d78750979dc15ecea5ad80c14931",
        "file": [
            {
                "patch": "@@ -1410,7 +1410,11 @@ protected JobClient createJobClient(Context context, JobConf jobConf) throws Had\n     }\n \n     protected RunningJob getRunningJob(Context context, WorkflowAction action, JobClient jobClient) throws Exception{\n-        RunningJob runningJob = jobClient.getJob(JobID.forName(action.getExternalId()));\n+        String externalId = action.getExternalId();\n+        RunningJob runningJob = null;\n+        if (externalId != null) {\n+            runningJob = jobClient.getJob(JobID.forName(externalId));\n+        }\n         return runningJob;\n     }\n ",
                "additions": 5,
                "raw_url": "https://github.com/apache/oozie/raw/05337002fc50d78750979dc15ecea5ad80c14931/core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java",
                "status": "modified",
                "changes": 6,
                "deletions": 1,
                "sha": "f315af77b9fc44be4810489a0dea0ff2c47d32f9",
                "blob_url": "https://github.com/apache/oozie/blob/05337002fc50d78750979dc15ecea5ad80c14931/core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java",
                "filename": "core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java?ref=05337002fc50d78750979dc15ecea5ad80c14931"
            },
            {
                "patch": "@@ -335,12 +335,11 @@ public static void setStreaming(Configuration conf, String mapper, String reduce\n \n     @Override\n     protected RunningJob getRunningJob(Context context, WorkflowAction action, JobClient jobClient) throws Exception{\n-\n-        RunningJob runningJob;\n+        RunningJob runningJob = null;\n         String jobId = getActualExternalId(action);\n-\n-        runningJob = jobClient.getJob(JobID.forName(jobId));\n-\n+        if (jobId != null) {\n+            runningJob = jobClient.getJob(JobID.forName(jobId));\n+        }\n         return runningJob;\n     }\n ",
                "additions": 4,
                "raw_url": "https://github.com/apache/oozie/raw/05337002fc50d78750979dc15ecea5ad80c14931/core/src/main/java/org/apache/oozie/action/hadoop/MapReduceActionExecutor.java",
                "status": "modified",
                "changes": 9,
                "deletions": 5,
                "sha": "55c937249ac35e14bd63dd0c1fa962ea636afa3a",
                "blob_url": "https://github.com/apache/oozie/blob/05337002fc50d78750979dc15ecea5ad80c14931/core/src/main/java/org/apache/oozie/action/hadoop/MapReduceActionExecutor.java",
                "filename": "core/src/main/java/org/apache/oozie/action/hadoop/MapReduceActionExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/action/hadoop/MapReduceActionExecutor.java?ref=05337002fc50d78750979dc15ecea5ad80c14931"
            }
        ],
        "bug_id": "oozie_8",
        "parent": "https://github.com/apache/oozie/commit/1d54e476f7abe0317cffa526d9b42e21e2497fed",
        "message": "OOZIE-2690 OOZIE NPE while executing kill() (abhishekbafna via jaydeepvishwakarma)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/aebf775a35e618c491b20bc5690e93f82ac401bf",
        "file": [
            {
                "patch": "@@ -472,8 +472,8 @@ private LiteWorkflowApp parse(String strDef, Element root, Configuration configD\n                     } else if (SLA_INFO.equals(elem.getName()) || CREDENTIALS.equals(elem.getName())) {\n                         continue;\n                     } else {\n-                        if (!serializedGlobalConf  && elem.getName().equals(SubWorkflowActionExecutor.ACTION_TYPE) &&\n-                                elem.getChild((\"propagate-configuration\"), ns) != null) {\n+                        if (!serializedGlobalConf && elem.getName().equals(SubWorkflowActionExecutor.ACTION_TYPE) &&\n+                                elem.getChild((\"propagate-configuration\"), ns) != null && gData != null) {\n                             serializedGlobalConf = true;\n                             jobConf.set(OOZIE_GLOBAL, getGlobalString(gData));\n                         }",
                "additions": 2,
                "raw_url": "https://github.com/apache/oozie/raw/aebf775a35e618c491b20bc5690e93f82ac401bf/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "a1b9cdba33cc07b4c972ed408530c794cd82c47a",
                "blob_url": "https://github.com/apache/oozie/blob/aebf775a35e618c491b20bc5690e93f82ac401bf/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java",
                "filename": "core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java?ref=aebf775a35e618c491b20bc5690e93f82ac401bf"
            },
            {
                "patch": "@@ -510,6 +510,27 @@ public void testParserDefaultJobTrackerFail() throws Exception {\n         }\n     }\n \n+    public void testParserSubWorkflowPropagateNoGlobal() throws Exception {\n+        LiteWorkflowAppParser parser = new LiteWorkflowAppParser(null,\n+                LiteWorkflowStoreService.LiteControlNodeHandler.class,\n+                LiteWorkflowStoreService.LiteDecisionHandler.class,\n+                LiteWorkflowStoreService.LiteActionHandler.class);\n+\n+        LiteWorkflowApp app = parser.validateAndParse(\n+                IOUtils.getResourceAsReader(\"wf-schema-subworkflow-propagate-no-global.xml\", -1),\n+                new Configuration());\n+\n+        String a = app.getNode(\"a\").getConf();\n+        String expectedA =\n+                \"<sub-workflowxmlns=\\\"uri:oozie:workflow:0.4\\\">\\r\\n\" +\n+                        \"<app-path>/tmp/foo/</app-path>\\r\\n\" +\n+                        \"<propagate-configuration/>\\r\\n\" +\n+                        \"<configuration/>\\r\\n\" +\n+                        \"</sub-workflow>\";\n+        a = cleanupXml(a);\n+        assertEquals(expectedA.replaceAll(\" \", \"\"), a.replaceAll(\" \", \"\"));\n+    }\n+\n     public void testParserFsGlobalNN() throws Exception {\n         LiteWorkflowAppParser parser = new LiteWorkflowAppParser(null,\n                 LiteWorkflowStoreService.LiteControlNodeHandler.class,",
                "additions": 21,
                "raw_url": "https://github.com/apache/oozie/raw/aebf775a35e618c491b20bc5690e93f82ac401bf/core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowAppParser.java",
                "status": "modified",
                "changes": 21,
                "deletions": 0,
                "sha": "9002b6c5be6f4581c59b138d96c88c26a3290f6a",
                "blob_url": "https://github.com/apache/oozie/blob/aebf775a35e618c491b20bc5690e93f82ac401bf/core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowAppParser.java",
                "filename": "core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowAppParser.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowAppParser.java?ref=aebf775a35e618c491b20bc5690e93f82ac401bf"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 4.3.0 release (trunk - unreleased)\n \n+OOZIE-2441 SubWorkflow action with propagate-configuration but no global section throws NPE on submit (rkanter)\n OOZIE-2370 Docs for Coordinator Action Status Notification has wrong property name (eeeva via rkanter)\n OOZIE-2419 HBase credentials are not correctly proxied (qwertymaniac via rkanter)\n OOZIE-2439 FS Action no longer uses name-node from global section or default NN (rkanter)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/aebf775a35e618c491b20bc5690e93f82ac401bf/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "391834b9bc23e9d452f0c218e816c418f10207b1",
                "blob_url": "https://github.com/apache/oozie/blob/aebf775a35e618c491b20bc5690e93f82ac401bf/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=aebf775a35e618c491b20bc5690e93f82ac401bf"
            }
        ],
        "bug_id": "oozie_9",
        "parent": "https://github.com/apache/oozie/commit/aa09df5b7f74b7de1f9eddd0c332bbad16e321b7",
        "message": "OOZIE-2441 SubWorkflow action with propagate-configuration but no global section throws NPE on submit (rkanter)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/c270a20c3819a04cfa368f2dc34e0a98484f2c9c",
        "file": [
            {
                "patch": "@@ -727,8 +727,8 @@ public ActionEndTimesComparator(Map<String, Date> actionEndTimes) {\n \n         @Override\n         public int compare(String node1, String node2) {\n-            Date date1 = FAR_INTO_THE_FUTURE;\n-            Date date2 = FAR_INTO_THE_FUTURE;\n+            Date date1 = null;\n+            Date date2 = null;\n             NodeInstance node1Instance = executionPaths.get(node1);\n             if (node1Instance != null) {\n                 date1 = this.actionEndTimes.get(node1Instance.nodeName);\n@@ -737,6 +737,8 @@ public int compare(String node1, String node2) {\n             if (node2Instance != null) {\n                 date2 = this.actionEndTimes.get(node2Instance.nodeName);\n             }\n+            date1 = (date1 == null) ? FAR_INTO_THE_FUTURE : date1;\n+            date2 = (date2 == null) ? FAR_INTO_THE_FUTURE : date2;\n             return date1.compareTo(date2);\n         }\n ",
                "additions": 4,
                "raw_url": "https://github.com/apache/oozie/raw/c270a20c3819a04cfa368f2dc34e0a98484f2c9c/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowInstance.java",
                "status": "modified",
                "changes": 6,
                "deletions": 2,
                "sha": "919c95a008cf87661bd534d2af24da43ab52eb10",
                "blob_url": "https://github.com/apache/oozie/blob/c270a20c3819a04cfa368f2dc34e0a98484f2c9c/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowInstance.java",
                "filename": "core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowInstance.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowInstance.java?ref=c270a20c3819a04cfa368f2dc34e0a98484f2c9c"
            },
            {
                "patch": "@@ -15,6 +15,7 @@ OOZIE-1943 Bump up trunk to 4.2.0-SNAPSHOT (bzhang)\n \n -- Oozie 4.1.0 release (4.1 - unreleased)\n \n+OOZIE-1989 NPE during a rerun with forks (rkanter)\n OOZIE-1945 NPE in JaveActionExecutor#check() (sree2k via rkanter)\n OOZIE-1984 SLACalculator in HA mode performs duplicate operations on records with completed jobs (mona)\n OOZIE-1958 address duplication of env variables in oozie.launcher.yarn.app.mapreduce.am.env when running with uber mode (ryota)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/c270a20c3819a04cfa368f2dc34e0a98484f2c9c/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "bace76f2848128808d0ab7eb6add9dd09c43c8cd",
                "blob_url": "https://github.com/apache/oozie/blob/c270a20c3819a04cfa368f2dc34e0a98484f2c9c/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=c270a20c3819a04cfa368f2dc34e0a98484f2c9c"
            }
        ],
        "bug_id": "oozie_10",
        "parent": "https://github.com/apache/oozie/commit/60212d4d2022c11cd09eaa26b5cc57bb334c694e",
        "message": "OOZIE-1989 NPE during a rerun with forks (rkanter)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/a94011bcb0717c73cd3aff2f1a2c017f416e345a",
        "file": [
            {
                "patch": "@@ -1252,10 +1252,10 @@ public void check(Context context, WorkflowAction action) throws ActionExecutorE\n                             Properties props = PropertiesUtils.stringToProperties(actionData\n                                     .get(LauncherMapper.ACTION_DATA_ERROR_PROPS));\n                             String errorCode = props.getProperty(\"error.code\");\n-                            if (errorCode.equals(\"0\")) {\n+                            if (\"0\".equals(errorCode)) {\n                                 errorCode = \"JA018\";\n                             }\n-                            if (errorCode.equals(\"-1\")) {\n+                            if (\"-1\".equals(errorCode)) {\n                                 errorCode = \"JA019\";\n                             }\n                             errorReason = props.getProperty(\"error.reason\");",
                "additions": 2,
                "raw_url": "https://github.com/apache/oozie/raw/a94011bcb0717c73cd3aff2f1a2c017f416e345a/core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "8cc1a8976cac2d7d4acca7df8190a4cdc66a1cae",
                "blob_url": "https://github.com/apache/oozie/blob/a94011bcb0717c73cd3aff2f1a2c017f416e345a/core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java",
                "filename": "core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/action/hadoop/JavaActionExecutor.java?ref=a94011bcb0717c73cd3aff2f1a2c017f416e345a"
            },
            {
                "patch": "@@ -9,6 +9,7 @@ OOZIE-1943 Bump up trunk to 4.2.0-SNAPSHOT (bzhang)\n \n -- Oozie 4.1.0 release (4.1 - unreleased)\n \n+OOZIE-1945 NPE in JaveActionExecutor#check() (sree2k via rkanter)\n OOZIE-1984 SLACalculator in HA mode performs duplicate operations on records with completed jobs (mona)\n OOZIE-1958 address duplication of env variables in oozie.launcher.yarn.app.mapreduce.am.env when running with uber mode (ryota)\n OOZIE-1920 Capture Output for SSH Action doesn't work (Richard Williams via rkanter)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/a94011bcb0717c73cd3aff2f1a2c017f416e345a/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "6b082e6fc0e5e6a94eb553d46c587641e2f886f8",
                "blob_url": "https://github.com/apache/oozie/blob/a94011bcb0717c73cd3aff2f1a2c017f416e345a/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=a94011bcb0717c73cd3aff2f1a2c017f416e345a"
            }
        ],
        "bug_id": "oozie_11",
        "parent": "https://github.com/apache/oozie/commit/1ea1717bb83492a36749b8e7db1952afb223bcb9",
        "message": "OOZIE-1945 NPE in JaveActionExecutor#check() (sree2k via rkanter)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/b1f5cf02758a8ec634302025bcc93fbbe88b5fcb",
        "file": [
            {
                "patch": "@@ -359,6 +359,9 @@ private void validateCoordinatorJob() throws Exception {\n             start = cal.getTime();\n \n             Date nextTime = CoordCommandUtils.getNextValidActionTimeForCronFrequency(start, coordJob);\n+            if (nextTime == null) {\n+                throw new IllegalArgumentException(\"Invalid coordinator cron frequency: \" + coordJob.getFrequency());\n+            }\n             if (!nextTime.before(coordJob.getEndTime())) {\n                 throw new IllegalArgumentException(\"Coordinator job with frequency '\" +\n                         coordJob.getFrequency() + \"' materializes no actions between start and end time.\");",
                "additions": 3,
                "raw_url": "https://github.com/apache/oozie/raw/b1f5cf02758a8ec634302025bcc93fbbe88b5fcb/core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.java",
                "status": "modified",
                "changes": 3,
                "deletions": 0,
                "sha": "ffb65d7311f8f2df4f013c1016788522bcf51ada",
                "blob_url": "https://github.com/apache/oozie/blob/b1f5cf02758a8ec634302025bcc93fbbe88b5fcb/core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.java",
                "filename": "core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.java?ref=b1f5cf02758a8ec634302025bcc93fbbe88b5fcb"
            },
            {
                "patch": "@@ -182,23 +182,45 @@ public void testBasicSubmitWithStartTimeAfterEndTime() throws Exception {\n     }\n \n     public void testBasicSubmitWithCronFrequency() throws Exception {\n-        Configuration conf = new XConfiguration();\n-        File appPathFile = new File(getTestCaseDir(), \"coordinator.xml\");\n         String appXml = \"<coordinator-app name=\\\"NAME\\\" frequency=\\\"0 10 * * *\\\" start=\\\"2009-02-01T01:00Z\\\" \"\n                 + \"end=\\\"2009-02-03T23:59Z\\\" timezone=\\\"UTC\\\" \"\n                 + \"xmlns=\\\"uri:oozie:coordinator:0.2\\\"> <controls> \"\n                 + \"<execution>LIFO</execution> </controls>  <action> \"\n                 + \"<workflow> <app-path>hdfs:///tmp/workflows/</app-path> \"\n                 + \"</workflow> </action> </coordinator-app>\";\n+        testBasicSubmitWithCronFrequency(appXml, true);\n+        appXml = \"<coordinator-app name=\\\"NAME\\\" frequency=\\\"* * 30 FEB *\\\" start=\\\"2009-02-01T01:00Z\\\" \"\n+                + \"end=\\\"2009-02-03T23:59Z\\\" timezone=\\\"UTC\\\" \"\n+                + \"xmlns=\\\"uri:oozie:coordinator:0.2\\\"> <controls> \"\n+                + \"<execution>LIFO</execution> </controls>  <action> \"\n+                + \"<workflow> <app-path>hdfs:///tmp/workflows/</app-path> \"\n+                + \"</workflow> </action> </coordinator-app>\";\n+        testBasicSubmitWithCronFrequency(appXml, false);\n+    }\n+\n+    private void testBasicSubmitWithCronFrequency(String appXml, Boolean isValidFrequency) throws Exception {\n+        Configuration conf = new XConfiguration();\n+        File appPathFile = new File(getTestCaseDir(), \"coordinator.xml\");\n         writeToFile(appXml, appPathFile);\n         conf.set(OozieClient.COORDINATOR_APP_PATH, appPathFile.toURI().toString());\n         conf.set(OozieClient.USER_NAME, getTestUser());\n         CoordSubmitXCommand sc = new CoordSubmitXCommand(conf);\n \n-        String jobId = sc.call();\n-        assertEquals(jobId.substring(jobId.length() - 2), \"-C\");\n-        CoordinatorJobBean job = (CoordinatorJobBean) sc.getJob();\n-        assertEquals(job.getTimeUnitStr(), \"CRON\");\n+        if (isValidFrequency) {\n+            String jobId = sc.call();\n+            assertEquals(jobId.substring(jobId.length() - 2), \"-C\");\n+            CoordinatorJobBean job = (CoordinatorJobBean) sc.getJob();\n+            assertEquals(job.getTimeUnitStr(), \"CRON\");\n+        }\n+        else {\n+            try {\n+                String jobId = sc.call();\n+            }\n+            catch (Exception ex) {\n+                assertTrue(ex.getMessage().contains(\"Invalid coordinator cron frequency\"));\n+            }\n+        }\n+\n     }\n \n     public void testBasicSubmitWithIdenticalStartAndEndTime() throws Exception {",
                "additions": 28,
                "raw_url": "https://github.com/apache/oozie/raw/b1f5cf02758a8ec634302025bcc93fbbe88b5fcb/core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java",
                "status": "modified",
                "changes": 34,
                "deletions": 6,
                "sha": "e17d1b5226e1ae02b2541468657b0dbe9ee25c37",
                "blob_url": "https://github.com/apache/oozie/blob/b1f5cf02758a8ec634302025bcc93fbbe88b5fcb/core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java",
                "filename": "core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java?ref=b1f5cf02758a8ec634302025bcc93fbbe88b5fcb"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 4.2.0 release (trunk - unreleased)\n \n+OOZIE-2012 coordinator with an invalid cron frequency throws NPE after validation (bzhang)\n OOZIE-2129 Duplicate child jobs per instance (jaydeepvishwakarma via shwethags)\n OOZIE-2214 fix test case TestCoordRerunXCommand.testCoordRerunDateNeg (ryota)\n OOZIE-2213 oozie-setup.ps1 should use \"start-process\" rather than \"cmd /c\" to invoke OozieSharelibCLI or OozieDBCLI commands (bzhang)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/b1f5cf02758a8ec634302025bcc93fbbe88b5fcb/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "37452838240d02ab49d85d8fe04117285be909ff",
                "blob_url": "https://github.com/apache/oozie/blob/b1f5cf02758a8ec634302025bcc93fbbe88b5fcb/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=b1f5cf02758a8ec634302025bcc93fbbe88b5fcb"
            }
        ],
        "bug_id": "oozie_12",
        "parent": "https://github.com/apache/oozie/commit/e86b96d45cc7af706a0e0f5bd1bf36d760266c8e",
        "message": "OOZIE-2012 coordinator with an invalid cron frequency throws NPE after validation (bzhang)",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/8d08aef5ceee021f4e0b3bc48a3826d112f0f2a7",
        "file": [
            {
                "patch": "@@ -884,7 +884,7 @@ private void printCoordJob(CoordinatorJob coordJob, boolean localtime, boolean v\n \n             for (CoordinatorAction action : actions) {\n                 String missingDep = action.getMissingDependencies();\n-                if(!missingDep.isEmpty()) {\n+                if(missingDep != null && !missingDep.isEmpty()) {\n                     missingDep = missingDep.split(INSTANCE_SEPARATOR)[0];\n                 }\n                 System.out.println(maskIfNull(action.getId()) + VERBOSE_DELIMITER + action.getActionNumber()\n@@ -959,7 +959,7 @@ private void printCoordAction(CoordinatorAction coordAction, boolean contains) {\n         System.out.println(\"Status               : \" + coordAction.getStatus());\n         System.out.println(\"Last Modified        : \" + maskDate(coordAction.getLastModifiedTime(), contains));\n         String missingDep = coordAction.getMissingDependencies();\n-        if(!missingDep.isEmpty()) {\n+        if(missingDep != null && !missingDep.isEmpty()) {\n             missingDep = missingDep.split(INSTANCE_SEPARATOR)[0];\n         }\n         System.out.println(\"First Missing Dependency : \" + maskIfNull(missingDep));",
                "additions": 2,
                "raw_url": "https://github.com/apache/oozie/raw/8d08aef5ceee021f4e0b3bc48a3826d112f0f2a7/client/src/main/java/org/apache/oozie/cli/OozieCLI.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "6951b7dda9fe31eb5936e1372cf27dedc9766f2f",
                "blob_url": "https://github.com/apache/oozie/blob/8d08aef5ceee021f4e0b3bc48a3826d112f0f2a7/client/src/main/java/org/apache/oozie/cli/OozieCLI.java",
                "filename": "client/src/main/java/org/apache/oozie/cli/OozieCLI.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/client/src/main/java/org/apache/oozie/cli/OozieCLI.java?ref=8d08aef5ceee021f4e0b3bc48a3826d112f0f2a7"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 3.3.0 release (trunk - unreleased)\n \n+OOZIE-899 NullPointerException on string check - Missing input dependency (mona via virag)\n OOZIE-898 Oozie help [subcommand] should only print help for that subcommand (rkanter via tucu)\n OOZIE-895 Oozie Hive-action should use Hive var replacement (rkanter via tucu)\n OOZIE-888 Change default logging levels for oozieops and hadoop.security.authentication.server to INFO from DEBUG (rkanter via tucu)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/8d08aef5ceee021f4e0b3bc48a3826d112f0f2a7/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "455280331f32fd40494fc18b60a381404ed82e4d",
                "blob_url": "https://github.com/apache/oozie/blob/8d08aef5ceee021f4e0b3bc48a3826d112f0f2a7/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=8d08aef5ceee021f4e0b3bc48a3826d112f0f2a7"
            }
        ],
        "bug_id": "oozie_13",
        "parent": "https://github.com/apache/oozie/commit/0c88b62bea2a9633ecc26e013c9fb2ab8fd8540e",
        "message": "OOZIE-899 NullPointerException on string check - Missing input dependency (mona via virag)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/oozie/trunk@1356482 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10",
        "file": [
            {
                "patch": "@@ -62,7 +62,7 @@\n     private Status status = CoordinatorJob.Status.PREP;\n \n     @Transient\n-    private Execution executionOrder = CoordinatorJob.Execution.LIFO;\n+    private Execution executionOrder = CoordinatorJob.Execution.FIFO;\n \n     @Transient\n     private Date startTime;",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/client/src/main/java/org/apache/oozie/client/rest/JsonCoordinatorJob.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "d3454ceb20940ff3ef5ee13702b1b4f840ec7f1a",
                "blob_url": "https://github.com/apache/oozie/blob/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/client/src/main/java/org/apache/oozie/client/rest/JsonCoordinatorJob.java",
                "filename": "client/src/main/java/org/apache/oozie/client/rest/JsonCoordinatorJob.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/client/src/main/java/org/apache/oozie/client/rest/JsonCoordinatorJob.java?ref=3e3dd8b5e15e496ce4674ca411f8f08c4150bf10"
            },
            {
                "patch": "@@ -49,7 +49,7 @@\n     @NamedQuery(name = \"UPDATE_COORD_ACTION\", query = \"update CoordinatorActionBean w set w.actionNumber = :actionNumber, w.actionXml = :actionXml, w.consoleUrl = :consoleUrl, w.createdConf = :createdConf, w.errorCode = :errorCode, w.errorMessage = :errorMessage, w.externalStatus = :externalStatus, w.missingDependencies = :missingDependencies, w.runConf = :runConf, w.timeOut = :timeOut, w.trackerUri = :trackerUri, w.type = :type, w.createdTimestamp = :createdTime, w.externalId = :externalId, w.jobId = :jobId, w.lastModifiedTimestamp = :lastModifiedTime, w.nominalTimestamp = :nominalTime, w.slaXml = :slaXml, w.status = :status where w.id = :id\"),\r\n \r\n     @NamedQuery(name = \"UPDATE_COORD_ACTION_MIN\", query = \"update CoordinatorActionBean w set w.actionXml = :actionXml, w.missingDependencies = :missingDependencies, w.lastModifiedTimestamp = :lastModifiedTime, w.status = :status where w.id = :id\"),\r\n-    \r\n+\r\n     @NamedQuery(name = \"DELETE_COMPLETED_ACTIONS_FOR_COORDINATOR\", query = \"delete from CoordinatorActionBean a where a.jobId = :jobId and (a.status = 'SUCCEEDED' OR a.status = 'FAILED' OR a.status= 'KILLED')\"),\r\n \r\n     @NamedQuery(name = \"GET_COORD_ACTIONS\", query = \"select OBJECT(w) from CoordinatorActionBean w\"),\r\n@@ -71,7 +71,7 @@\n     @NamedQuery(name = \"GET_COORD_ACTIVE_ACTIONS_COUNT_BY_JOBID\", query = \"select count(a) from CoordinatorActionBean a where a.jobId = :jobId AND a.status = 'WAITING'\"),\r\n \r\n     @NamedQuery(name = \"GET_ACTIONS_FOR_COORD_JOB\", query = \"select OBJECT(a) from CoordinatorActionBean a where a.jobId = :jobId\"),\r\n-    \r\n+\r\n     @NamedQuery(name = \"GET_COORD_ACTION_FOR_COORD_JOB_BY_ACTION_NUMBER\", query = \"select OBJECT(a) from CoordinatorActionBean a where a.jobId = :jobId AND a.actionNumber = :actionNumber\"),\r\n \r\n     @NamedQuery(name = \"GET_RUNNING_ACTIONS_FOR_COORD_JOB\", query = \"select OBJECT(a) from CoordinatorActionBean a where a.jobId = :jobId AND a.status = 'RUNNING'\"),\r\n@@ -149,8 +149,11 @@ public void write(DataOutput dataOutput) throws IOException {\n         WritableUtils.writeStr(dataOutput, getRunConf());\r\n         WritableUtils.writeStr(dataOutput, getExternalStatus());\r\n         WritableUtils.writeStr(dataOutput, getTrackerUri());\r\n+        WritableUtils.writeStr(dataOutput, getConsoleUrl());\r\n         WritableUtils.writeStr(dataOutput, getErrorCode());\r\n         WritableUtils.writeStr(dataOutput, getErrorMessage());\r\n+        dataOutput.writeLong((getCreatedTime() != null) ? getCreatedTime().getTime() : -1);\r\n+        dataOutput.writeLong((getLastModifiedTime() != null) ? getLastModifiedTime().getTime() : -1);\r\n     }\r\n \r\n     /**\r\n@@ -164,12 +167,14 @@ public void readFields(DataInput dataInput) throws IOException {\n         setType(WritableUtils.readStr(dataInput));\r\n         setId(WritableUtils.readStr(dataInput));\r\n         setCreatedConf(WritableUtils.readStr(dataInput));\r\n-        setStatus(CoordinatorAction.Status.valueOf(WritableUtils\r\n-                .readStr(dataInput)));\r\n+        setStatus(CoordinatorAction.Status.valueOf(WritableUtils.readStr(dataInput)));\r\n+        setActionNumber(dataInput.readInt());\r\n         setRunConf(WritableUtils.readStr(dataInput));\r\n         setExternalStatus(WritableUtils.readStr(dataInput));\r\n         setTrackerUri(WritableUtils.readStr(dataInput));\r\n         setConsoleUrl(WritableUtils.readStr(dataInput));\r\n+        setErrorCode(WritableUtils.readStr(dataInput));\r\n+        setErrorMessage(WritableUtils.readStr(dataInput));\r\n         long d = dataInput.readLong();\r\n         if (d != -1) {\r\n             setCreatedTime(new Date(d));\r\n@@ -178,8 +183,6 @@ public void readFields(DataInput dataInput) throws IOException {\n         if (d != -1) {\r\n             setLastModifiedTime(new Date(d));\r\n         }\r\n-        d = dataInput.readLong();\r\n-        d = dataInput.readLong();\r\n     }\r\n \r\n     @Override\r",
                "additions": 9,
                "raw_url": "https://github.com/apache/oozie/raw/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/CoordinatorActionBean.java",
                "status": "modified",
                "changes": 15,
                "deletions": 6,
                "sha": "726b1452b9b029996dc3ec4e5418de7594c482d7",
                "blob_url": "https://github.com/apache/oozie/blob/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/CoordinatorActionBean.java",
                "filename": "core/src/main/java/org/apache/oozie/CoordinatorActionBean.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/CoordinatorActionBean.java?ref=3e3dd8b5e15e496ce4674ca411f8f08c4150bf10"
            },
            {
                "patch": "@@ -92,7 +92,7 @@\n \r\n     @Basic\r\n     @Column(name = \"execution\")\r\n-    private String execution = null;\r\n+    private String execution = CoordinatorJob.Execution.FIFO.toString();\r\n \r\n     @Basic\r\n     @Column(name = \"last_action\")\r\n@@ -198,10 +198,6 @@ public void setTimeUnit(Timeunit timeUnit) {\n         this.timeUnitStr = timeUnit.toString();\r\n     }\r\n \r\n-    public void setExecution(String execution) {\r\n-        this.execution = execution;\r\n-    }\r\n-\r\n     public void setLastActionTimestamp(java.sql.Timestamp lastActionTimestamp) {\r\n         super.setLastActionTime(DateUtils.toDate(lastActionTimestamp));\r\n         this.lastActionTimestamp = lastActionTimestamp;\r\n@@ -230,8 +226,8 @@ public void write(DataOutput dataOutput) throws IOException {\n         WritableUtils.writeStr(dataOutput, getTimeZone());\r\n         dataOutput.writeInt(getConcurrency());\r\n         WritableUtils.writeStr(dataOutput, getExecutionOrder().toString());\r\n-        dataOutput.writeLong((getStartTime() != null) ? getLastActionTime().getTime() : -1);\r\n-        dataOutput.writeLong((getStartTime() != null) ? getNextMaterializedTime().getTime() : -1);\r\n+        dataOutput.writeLong((getLastActionTime() != null) ? getLastActionTime().getTime() : -1);\r\n+        dataOutput.writeLong((getNextMaterializedTime() != null) ? getNextMaterializedTime().getTime() : -1);\r\n         dataOutput.writeLong((getStartTime() != null) ? getStartTime().getTime() : -1);\r\n         dataOutput.writeLong((getEndTime() != null) ? getEndTime().getTime() : -1);\r\n         WritableUtils.writeStr(dataOutput, getUser());\r\n@@ -242,7 +238,7 @@ public void write(DataOutput dataOutput) throws IOException {\n \r\n     /**\r\n      * Deserialize a coordinator bean from a data input.\r\n-     * \r\n+     *\r\n      * @param dataInput data input.\r\n      * @throws IOException thrown if the workflow bean could not be deserialized.\r\n      */\r",
                "additions": 4,
                "raw_url": "https://github.com/apache/oozie/raw/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/CoordinatorJobBean.java",
                "status": "modified",
                "changes": 12,
                "deletions": 8,
                "sha": "6d1e08cbb14f09b6a6dfc5a788ea4a7df6567d1a",
                "blob_url": "https://github.com/apache/oozie/blob/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/CoordinatorJobBean.java",
                "filename": "core/src/main/java/org/apache/oozie/CoordinatorJobBean.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/CoordinatorJobBean.java?ref=3e3dd8b5e15e496ce4674ca411f8f08c4150bf10"
            },
            {
                "patch": "@@ -28,7 +28,6 @@\n import org.apache.oozie.client.CoordinatorJob.Timeunit;\n import org.apache.oozie.store.StoreStatusFilter;\n import org.apache.oozie.util.ParamChecker;\n-import org.apache.oozie.util.XLog;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.OpenJPAQuery;\n import org.apache.openjpa.persistence.jdbc.FetchDirection;\n@@ -81,7 +80,6 @@ public CoordinatorJobInfo execute(EntityManager em) throws JPAExecutorException\n         else {\n             StringBuilder sbTotal = new StringBuilder(sb);\n             sb.append(\" order by w.createdTimestamp desc \");\n-            XLog.getLog(getClass()).debug(\"Created String is **** \" + sb.toString());\n             q = em.createQuery(sb.toString());\n             q.setFirstResult(start - 1);\n             q.setMaxResults(len);",
                "additions": 0,
                "raw_url": "https://github.com/apache/oozie/raw/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/executor/jpa/CoordJobInfoGetJPAExecutor.java",
                "status": "modified",
                "changes": 2,
                "deletions": 2,
                "sha": "a8ad70bac4cebb459d2c2db627bd3f5ec81805ee",
                "blob_url": "https://github.com/apache/oozie/blob/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/executor/jpa/CoordJobInfoGetJPAExecutor.java",
                "filename": "core/src/main/java/org/apache/oozie/executor/jpa/CoordJobInfoGetJPAExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/executor/jpa/CoordJobInfoGetJPAExecutor.java?ref=3e3dd8b5e15e496ce4674ca411f8f08c4150bf10"
            },
            {
                "patch": "@@ -26,7 +26,6 @@\n import org.apache.oozie.WorkflowsInfo;\n import org.apache.oozie.client.OozieClient;\n import org.apache.oozie.client.WorkflowJob.Status;\n-import org.apache.oozie.util.XLog;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.OpenJPAQuery;\n import org.apache.openjpa.persistence.jdbc.FetchDirection;\n@@ -46,7 +45,7 @@\n \n     /**\n      * This JPA Executor gets the workflows info for the range.\n-     * \n+     *\n      * @param filter\n      * @param start\n      * @param len\n@@ -222,7 +221,6 @@ public WorkflowsInfo execute(EntityManager em) throws JPAExecutorException {\n             if (orArray.size() > 0) {\n                 StringBuilder sbTotal = new StringBuilder(sb);\n                 sb.append(\" order by w.startTimestamp desc \");\n-                XLog.getLog(getClass()).debug(\"Created String is **** \" + sb.toString());\n                 q = em.createQuery(sb.toString());\n                 q.setFirstResult(start - 1);\n                 q.setMaxResults(len);",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java",
                "status": "modified",
                "changes": 4,
                "deletions": 3,
                "sha": "54e214511d46ea7cdfcba4fa90fd528b928f2228",
                "blob_url": "https://github.com/apache/oozie/blob/3e3dd8b5e15e496ce4674ca411f8f08c4150bf10/core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java",
                "filename": "core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java?ref=3e3dd8b5e15e496ce4674ca411f8f08c4150bf10"
            }
        ],
        "bug_id": "oozie_14",
        "parent": "https://github.com/apache/oozie/commit/0b24fbf843f214131c086e64d014fc63ec70d401",
        "message": "Closes GH-503 Fix coordinator web console NullPointerException\n\nFrom: Angelo Kaichen Huang <angelokh@ymail.com>\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/oozie/trunk@1168722 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/0f24e67bf7733f9f4ad50312f0600aa0d23706dc",
        "file": [
            {
                "patch": "@@ -123,6 +123,8 @@ private void validateHttpSubmitConf(Properties conf) {\n         if (NN == null) {\n             if(NN_2 == null) {\n                 throw new RuntimeException(\"namenode is not specified in conf\");\n+            } else {\n+                NN = NN_2;\n             }\n         }\n ",
                "additions": 2,
                "raw_url": "https://github.com/apache/oozie/raw/0f24e67bf7733f9f4ad50312f0600aa0d23706dc/client/src/main/java/org/apache/oozie/client/XOozieClient.java",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "9aafc569823937b75cc71e57406397433d071fc1",
                "blob_url": "https://github.com/apache/oozie/blob/0f24e67bf7733f9f4ad50312f0600aa0d23706dc/client/src/main/java/org/apache/oozie/client/XOozieClient.java",
                "filename": "client/src/main/java/org/apache/oozie/client/XOozieClient.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/client/src/main/java/org/apache/oozie/client/XOozieClient.java?ref=0f24e67bf7733f9f4ad50312f0600aa0d23706dc"
            },
            {
                "patch": "@@ -118,6 +118,10 @@ public Void call() throws Exception {\n                 Path libPath = new Path(getFsTestCaseDir(), \"lib\");\n                 getFileSystem().mkdirs(libPath);\n \n+                String localPath = libPath.toUri().getPath();\n+                int startPosition = libPath.toString().indexOf(localPath);\n+                String nn = libPath.toString().substring(0, startPosition);\n+\n                 // try to submit without JT and NN\n                 try {\n                     wc.submitMapReduce(conf);\n@@ -129,36 +133,41 @@ public Void call() throws Exception {\n                 conf.setProperty(XOozieClient.JT, \"localhost:9001\");\n                 try {\n                     wc.submitMapReduce(conf);\n-                    fail(\"submit client without NN should throuhg exception\");\n+                    fail(\"submit client without NN should throw exception\");\n                 }\n                 catch (RuntimeException exception) {\n                     assertEquals(\"java.lang.RuntimeException: namenode is not specified in conf\", exception.toString());\n                 }\n-                conf.setProperty(XOozieClient.NN, \"hdfs://localhost:9000\");\n+                // set fs.default.name\n+                conf.setProperty(XOozieClient.NN, nn);\n                 try {\n                     wc.submitMapReduce(conf);\n-                    fail(\"submit client without LIBPATH should throuhg exception\");\n+                    fail(\"submit client without LIBPATH should throw exception\");\n+                }\n+                catch (RuntimeException exception) {\n+                    assertEquals(\"java.lang.RuntimeException: libpath is not specified in conf\", exception.toString());\n+                }\n+                // set fs.defaultFS instead\n+                conf.remove(XOozieClient.NN);\n+                conf.setProperty(XOozieClient.NN_2, nn);\n+                try {\n+                    wc.submitMapReduce(conf);\n+                    fail(\"submit client without LIBPATH should throw exception\");\n                 }\n                 catch (RuntimeException exception) {\n                     assertEquals(\"java.lang.RuntimeException: libpath is not specified in conf\", exception.toString());\n                 }\n-\n-                File tmp = new File(\"target\");\n-                int startPosition = libPath.toString().indexOf(tmp.getAbsolutePath());\n-                String localPath = libPath.toString().substring(startPosition);\n-\n-                wc.setLib(conf, libPath.toString());\n \n                 conf.setProperty(OozieClient.LIBPATH, localPath.substring(1));\n-\n                 try {\n                     wc.submitMapReduce(conf);\n                     fail(\"lib path can not be relative\");\n                 }\n                 catch (RuntimeException e) {\n                     assertEquals(\"java.lang.RuntimeException: libpath should be absolute\", e.toString());\n                 }\n-                wc.setLib(conf, libPath.toString());\n+\n+                conf.setProperty(OozieClient.LIBPATH, localPath);\n \n                 assertEquals(MockDagEngineService.JOB_ID + wfCount + MockDagEngineService.JOB_ID_END,\n                         wc.submitMapReduce(conf));",
                "additions": 20,
                "raw_url": "https://github.com/apache/oozie/raw/0f24e67bf7733f9f4ad50312f0600aa0d23706dc/core/src/test/java/org/apache/oozie/client/TestWorkflowXClient.java",
                "status": "modified",
                "changes": 31,
                "deletions": 11,
                "sha": "8d05554f524749ba105c5dae877be3dedf33968d",
                "blob_url": "https://github.com/apache/oozie/blob/0f24e67bf7733f9f4ad50312f0600aa0d23706dc/core/src/test/java/org/apache/oozie/client/TestWorkflowXClient.java",
                "filename": "core/src/test/java/org/apache/oozie/client/TestWorkflowXClient.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/client/TestWorkflowXClient.java?ref=0f24e67bf7733f9f4ad50312f0600aa0d23706dc"
            },
            {
                "patch": "@@ -1,5 +1,6 @@\n -- Oozie 4.1.0 release (trunk - unreleased)\n \n+OOZIE-1386 NPE in XOozieClient if fs.default.name is not defined but fs.defaultFS is (wypoon via rkanter)\n OOZIE-1387 Proxysubmission from the Oozie client doesn't allow the mapreduce API (rkanter)\n OOZIE-1244 SLA Support in Oozie (mona)\n OOZIE-1371 oozie.coord.action.notification.url has no documentation (rkanter)",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/0f24e67bf7733f9f4ad50312f0600aa0d23706dc/release-log.txt",
                "status": "modified",
                "changes": 1,
                "deletions": 0,
                "sha": "10b643052c81f768570bbde0a33991846b5964f8",
                "blob_url": "https://github.com/apache/oozie/blob/0f24e67bf7733f9f4ad50312f0600aa0d23706dc/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=0f24e67bf7733f9f4ad50312f0600aa0d23706dc"
            }
        ],
        "bug_id": "oozie_15",
        "parent": "https://github.com/apache/oozie/commit/465b7bdd3bb38f384ddfcad0f175ee2c7b8bc00a",
        "message": "OOZIE-1386 NPE in XOozieClient if fs.default.name is not defined but fs.defaultFS is (wypoon via rkanter)\n\ngit-svn-id: https://svn.apache.org/repos/asf/oozie/trunk@1485330 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/48da5f2e552e26192d1630b98a806d3c5753668e",
        "file": [
            {
                "patch": "@@ -269,7 +269,8 @@ protected Options createJobsOptions() {\n         Option jobtype = new Option(JOBTYPE_OPTION, true,\n                 \"job type ('Supported in Oozie-2.0 or later versions ONLY - 'coordinator' or 'bundle' or 'wf'(default))\");\n         Option len = new Option(LEN_OPTION, true, \"number of jobs (default '100')\");\n-        Option filter = new Option(FILTER_OPTION, true, \"user=<U>;name=<N>;group=<G>;status=<S>;...\");\n+        Option filter = new Option(FILTER_OPTION, true, \"user=<U>;name=<N>;group=<G>;status=<S>;frequency=<F>;unit=<M> \" +\n+                        \"(Valid unit values are 'months', 'days', 'hours' or 'minutes'.)\");\n         Option localtime = new Option(LOCAL_TIME_OPTION, false, \"use local time (default GMT)\");\n         Option verbose = new Option(VERBOSE_OPTION, false, \"verbose mode\");\n         Option doAs = new Option(DO_AS_OPTION, true, \"doAs user, impersonates as the specified user\");",
                "additions": 2,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/client/src/main/java/org/apache/oozie/cli/OozieCLI.java",
                "status": "modified",
                "changes": 3,
                "deletions": 1,
                "sha": "77fcdc1374de48d7cd97e1c78c6cca898d564359",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/client/src/main/java/org/apache/oozie/cli/OozieCLI.java",
                "filename": "client/src/main/java/org/apache/oozie/cli/OozieCLI.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/client/src/main/java/org/apache/oozie/cli/OozieCLI.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -30,6 +30,9 @@\n import org.apache.oozie.client.WorkflowJob;\n import org.apache.oozie.client.rest.JsonCoordinatorAction;\n import org.apache.oozie.client.rest.JsonCoordinatorJob;\n+import org.apache.oozie.client.rest.RestConstants;\n+import org.apache.oozie.command.CommandException;\n+import org.apache.oozie.command.coord.CoordRerunXCommand;\n import org.apache.oozie.util.XConfiguration;\n \n /**\n@@ -252,15 +255,28 @@ public void reRun(String jobId, Properties conf) throws OozieClientException {\n     public List<CoordinatorAction> reRunCoord(String jobId, String rerunType, String scope, boolean refresh,\n             boolean noCleanup) throws OozieClientException {\n         try {\n+            if (!(rerunType.equals(RestConstants.JOB_COORD_RERUN_DATE) || rerunType\n+                    .equals(RestConstants.JOB_COORD_RERUN_ACTION))) {\n+                throw new CommandException(ErrorCode.E1018, \"date or action expected.\");\n+            }\n             CoordinatorActionInfo coordInfo = coordEngine.reRun(jobId, rerunType, scope, Boolean.valueOf(refresh),\n                     Boolean.valueOf(noCleanup));\n-            List<CoordinatorActionBean> actionBeans = coordInfo.getCoordActions();\n+            List<CoordinatorActionBean> actionBeans;\n+            if (coordInfo != null) {\n+                actionBeans = coordInfo.getCoordActions();\n+            }\n+            else {\n+                actionBeans = CoordRerunXCommand.getCoordActions(rerunType, jobId, scope);\n+            }\n             List<CoordinatorAction> actions = new ArrayList<CoordinatorAction>();\n             for (CoordinatorActionBean actionBean : actionBeans) {\n                 actions.add(actionBean);\n             }\n             return actions;\n         }\n+        catch(CommandException ce){\n+            throw new OozieClientException(ce.getErrorCode().toString(), ce);\n+        }\n         catch (BaseEngineException ex) {\n             throw new OozieClientException(ex.getErrorCode().toString(), ex);\n         }\n@@ -354,7 +370,7 @@ public CoordinatorJob getCoordJobInfo(String jobId) throws OozieClientException\n \n     /**\n      * Get the info of a coordinator action.\n-     * \n+     *\n      * @param actionId Id.\n      * @return the coordinator action info.\n      * @throws OozieClientException thrown if the job info could not be",
                "additions": 20,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/LocalOozieClientCoord.java",
                "status": "modified",
                "changes": 24,
                "deletions": 4,
                "sha": "6a3dc1d94e1f5d11b7498fa4b197cc1ca66aea8c",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/LocalOozieClientCoord.java",
                "filename": "core/src/main/java/org/apache/oozie/LocalOozieClientCoord.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/LocalOozieClientCoord.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -44,6 +44,7 @@\n import org.apache.oozie.command.RerunTransitionXCommand;\n import org.apache.oozie.command.bundle.BundleStatusUpdateXCommand;\n import org.apache.oozie.coord.CoordELFunctions;\n+import org.apache.oozie.coord.CoordUtils;\n import org.apache.oozie.executor.jpa.CoordActionGetJPAExecutor;\n import org.apache.oozie.executor.jpa.CoordJobGetActionForNominalTimeJPAExecutor;\n import org.apache.oozie.executor.jpa.CoordJobGetActionsForDatesJPAExecutor;\n@@ -102,159 +103,14 @@ public CoordRerunXCommand(String jobId, String rerunType, String scope, boolean\n         this.noCleanup = noCleanup;\n     }\n \n-    /**\n-     * Get the list of actions for given id ranges\n-     *\n-     * @param jobId coordinator job id\n-     * @param scope the id range to rerun separated by \",\"\n-     * @return the list of all actions to rerun\n-     * @throws CommandException thrown if failed to get coordinator actions by given id range\n-     */\n-    private List<CoordinatorActionBean> getCoordActionsFromIds(String jobId, String scope) throws CommandException {\n-        ParamChecker.notEmpty(jobId, \"jobId\");\n-        ParamChecker.notEmpty(scope, \"scope\");\n-\n-        Set<String> actions = new HashSet<String>();\n-        String[] list = scope.split(\",\");\n-        for (String s : list) {\n-            s = s.trim();\n-            if (s.contains(\"-\")) {\n-                String[] range = s.split(\"-\");\n-                if (range.length != 2) {\n-                    throw new CommandException(ErrorCode.E0302, \"format is wrong for action's range '\" + s + \"'\");\n-                }\n-                int start;\n-                int end;\n-                try {\n-                    start = Integer.parseInt(range[0].trim());\n-                    end = Integer.parseInt(range[1].trim());\n-                    if (start > end) {\n-                        throw new CommandException(ErrorCode.E0302, \"format is wrong for action's range '\" + s + \"'\");\n-                    }\n-                }\n-                catch (NumberFormatException ne) {\n-                    throw new CommandException(ErrorCode.E0302, ne);\n-                }\n-                for (int i = start; i <= end; i++) {\n-                    actions.add(jobId + \"@\" + i);\n-                }\n-            }\n-            else {\n-                try {\n-                    Integer.parseInt(s);\n-                }\n-                catch (NumberFormatException ne) {\n-                    throw new CommandException(ErrorCode.E0302, \"format is wrong for action id'\" + s\n-                            + \"'. Integer only.\");\n-                }\n-                actions.add(jobId + \"@\" + s);\n-            }\n-        }\n-\n-        List<CoordinatorActionBean> coordActions = new ArrayList<CoordinatorActionBean>();\n-        for (String id : actions) {\n-            CoordinatorActionBean coordAction;\n-            try {\n-                coordAction = jpaService.execute(new CoordActionGetJPAExecutor(id));\n-            }\n-            catch (JPAExecutorException je) {\n-                throw new CommandException(je);\n-            }\n-            coordActions.add(coordAction);\n-            LOG.debug(\"Rerun coordinator for actionId='\" + id + \"'\");\n-        }\n-        return coordActions;\n-    }\n-\n-    /**\n-     * Get the list of actions for given date ranges\n-     *\n-     * @param jobId coordinator job id\n-     * @param scope the date range to rerun separated by \",\"\n-     * @return the list of dates to rerun\n-     * @throws CommandException thrown if failed to get coordinator actions by given date range\n-     */\n-    private List<CoordinatorActionBean> getCoordActionsFromDates(String jobId, String scope) throws CommandException {\n-        ParamChecker.notEmpty(jobId, \"jobId\");\n-        ParamChecker.notEmpty(scope, \"scope\");\n-\n-        Set<CoordinatorActionBean> actionSet = new HashSet<CoordinatorActionBean>();\n-        String[] list = scope.split(\",\");\n-        for (String s : list) {\n-            s = s.trim();\n-            if (s.contains(\"::\")) {\n-                String[] dateRange = s.split(\"::\");\n-                if (dateRange.length != 2) {\n-                    throw new CommandException(ErrorCode.E0302, \"format is wrong for date's range '\" + s + \"'\");\n-                }\n-                Date start;\n-                Date end;\n-                try {\n-                    start = DateUtils.parseDateUTC(dateRange[0].trim());\n-                    end = DateUtils.parseDateUTC(dateRange[1].trim());\n-                    if (start.after(end)) {\n-                        throw new CommandException(ErrorCode.E0302, \"start date is older than end date: '\" + s + \"'\");\n-                    }\n-                }\n-                catch (Exception e) {\n-                    throw new CommandException(ErrorCode.E0302, e);\n-                }\n-\n-                List<CoordinatorActionBean> listOfActions = getActionIdsFromDateRange(jobId, start, end);\n-                actionSet.addAll(listOfActions);\n-            }\n-            else {\n-                try {\n-                    Date date = DateUtils.parseDateUTC(s.trim());\n-                    CoordinatorActionBean coordAction = jpaService\n-                            .execute(new CoordJobGetActionForNominalTimeJPAExecutor(jobId, date));\n-                    actionSet.add(coordAction);\n-                }\n-                catch (JPAExecutorException e) {\n-                    throw new CommandException(e);\n-                }\n-                catch (Exception e) {\n-                    throw new CommandException(ErrorCode.E0302, e);\n-                }\n-            }\n-        }\n-\n-        List<CoordinatorActionBean> coordActions = new ArrayList<CoordinatorActionBean>();\n-        for (CoordinatorActionBean coordAction : actionSet) {\n-            coordActions.add(coordAction);\n-            LOG.debug(\"Rerun coordinator for actionId='\" + coordAction.getId() + \"'\");\n-        }\n-        return coordActions;\n-    }\n-\n-    /**\n-     * Get coordinator action ids between given start and end time\n-     *\n-     * @param jobId coordinator job id\n-     * @param start start time\n-     * @param end end time\n-     * @return a list of coordinator actions belong to the range of start and end time\n-     * @throws CommandException thrown if failed to get coordinator actions\n-     */\n-    private List<CoordinatorActionBean> getActionIdsFromDateRange(String jobId, Date start, Date end)\n-            throws CommandException {\n-        List<CoordinatorActionBean> list;\n-        try {\n-            list = jpaService.execute(new CoordJobGetActionsForDatesJPAExecutor(jobId, start, end));\n-        }\n-        catch (JPAExecutorException je) {\n-            throw new CommandException(je);\n-        }\n-        return list;\n-    }\n-\n     /**\n      * Check if all given actions are eligible to rerun.\n      *\n      * @param actions list of CoordinatorActionBean\n      * @return true if all actions are eligible to rerun\n      */\n-    private boolean checkAllActionsRunnable(List<CoordinatorActionBean> coordActions) {\n+    private static boolean checkAllActionsRunnable(List<CoordinatorActionBean> coordActions) {\n+        ParamChecker.notNull(coordActions, \"Coord actions to be rerun\");\n         boolean ret = false;\n         for (CoordinatorActionBean coordAction : coordActions) {\n             ret = true;\n@@ -266,6 +122,25 @@ private boolean checkAllActionsRunnable(List<CoordinatorActionBean> coordActions\n         return ret;\n     }\n \n+    /**\n+     * Get the list of actions for a given coordinator job\n+     * @param rerunType the rerun type (date, action)\n+     * @param jobId the coordinator job id\n+     * @param scope the date scope or action id scope\n+     * @return the list of Coordinator actions\n+     * @throws CommandException\n+     */\n+    public static List<CoordinatorActionBean> getCoordActions(String rerunType, String jobId, String scope) throws CommandException{\n+        List<CoordinatorActionBean> coordActions = null;\n+        if (rerunType.equals(RestConstants.JOB_COORD_RERUN_DATE)) {\n+            coordActions = CoordUtils.getCoordActionsFromDates(jobId, scope);\n+        }\n+        else if (rerunType.equals(RestConstants.JOB_COORD_RERUN_ACTION)) {\n+            coordActions = CoordUtils.getCoordActionsFromIds(jobId, scope);\n+        }\n+        return coordActions;\n+    }\n+\n     /**\n      * Cleanup output-events directories\n      *\n@@ -436,17 +311,7 @@ public void rerunChildren() throws CommandException {\n         try {\n             CoordinatorActionInfo coordInfo = null;\n             InstrumentUtils.incrJobCounter(getName(), 1, getInstrumentation());\n-            List<CoordinatorActionBean> coordActions;\n-            if (rerunType.equals(RestConstants.JOB_COORD_RERUN_DATE)) {\n-                coordActions = getCoordActionsFromDates(jobId, scope);\n-            }\n-            else if (rerunType.equals(RestConstants.JOB_COORD_RERUN_ACTION)) {\n-                coordActions = getCoordActionsFromIds(jobId, scope);\n-            }\n-            else {\n-                isError = true;\n-                throw new CommandException(ErrorCode.E1018, \"date or action expected.\");\n-            }\n+            List<CoordinatorActionBean> coordActions = getCoordActions(rerunType, jobId, scope);\n             if (checkAllActionsRunnable(coordActions)) {\n                 for (CoordinatorActionBean coordAction : coordActions) {\n                     String actionXml = coordAction.getActionXml();",
                "additions": 25,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/command/coord/CoordRerunXCommand.java",
                "status": "modified",
                "changes": 185,
                "deletions": 160,
                "sha": "09f247353ba850c20c422ba69ac30c1bc376890f",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/command/coord/CoordRerunXCommand.java",
                "filename": "core/src/main/java/org/apache/oozie/command/coord/CoordRerunXCommand.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/command/coord/CoordRerunXCommand.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -17,8 +17,26 @@\n  */\n package org.apache.oozie.coord;\n \n+import java.text.ParseException;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n import org.apache.hadoop.conf.Configuration;\n+import org.apache.oozie.CoordinatorActionBean;\n+import org.apache.oozie.ErrorCode;\n+import org.apache.oozie.XException;\n import org.apache.oozie.client.OozieClient;\n+import org.apache.oozie.command.CommandException;\n+import org.apache.oozie.executor.jpa.CoordActionGetJPAExecutor;\n+import org.apache.oozie.executor.jpa.CoordJobGetActionForNominalTimeJPAExecutor;\n+import org.apache.oozie.executor.jpa.JPAExecutorException;\n+import org.apache.oozie.service.JPAService;\n+import org.apache.oozie.service.Services;\n+import org.apache.oozie.util.CoordActionsInDateRange;\n+import org.apache.oozie.util.DateUtils;\n import org.apache.oozie.util.ParamChecker;\n import org.jdom.Element;\n \n@@ -45,4 +63,134 @@ public static Configuration getHadoopConf(Configuration jobConf) {\n         conf.set(HADOOP_UGI, user + \",\" + group);\n         return conf;\n     }\n+\n+    /**\n+     * Get the list of actions for given date ranges\n+     *\n+     * @param jobId coordinator job id\n+     * @param scope a comma-separated list of date ranges. Each date range element is specified with two dates separated by '::'\n+     * @return the list of Coordinator actions for the date range\n+     * @throws CommandException thrown if failed to get coordinator actions by given date range\n+     */\n+    public static List<CoordinatorActionBean> getCoordActionsFromDates(String jobId, String scope) throws CommandException {\n+        JPAService jpaService = Services.get().get(JPAService.class);\n+        ParamChecker.notEmpty(jobId, \"jobId\");\n+        ParamChecker.notEmpty(scope, \"scope\");\n+\n+        Set<CoordinatorActionBean> actionSet = new HashSet<CoordinatorActionBean>();\n+        String[] list = scope.split(\",\");\n+        for (String s : list) {\n+            s = s.trim();\n+            // A date range is specified with two dates separated by '::'\n+            if (s.contains(\"::\")) {\n+            List<CoordinatorActionBean> listOfActions;\n+            try {\n+                // Get list of actions within the range of date\n+                listOfActions = CoordActionsInDateRange.getCoordActionsFromDateRange(jobId, s);\n+            }\n+            catch (XException e) {\n+                throw new CommandException(e);\n+            }\n+            actionSet.addAll(listOfActions);\n+            }\n+            else {\n+                try {\n+                    // Get action for the nominal time\n+                    Date date = DateUtils.parseDateUTC(s.trim());\n+                    CoordinatorActionBean coordAction = jpaService\n+                            .execute(new CoordJobGetActionForNominalTimeJPAExecutor(jobId, date));\n+\n+                    if (coordAction != null) {\n+                        actionSet.add(coordAction);\n+                    }\n+                    else {\n+                        throw new RuntimeException(\"This should never happen, Coordinator Action shouldn't be null\");\n+                    }\n+                }\n+                catch (ParseException e) {\n+                    throw new CommandException(ErrorCode.E0302, e);\n+                }\n+                catch (JPAExecutorException e) {\n+                    throw new CommandException(e);\n+                }\n+\n+            }\n+        }\n+\n+        List<CoordinatorActionBean> coordActions = new ArrayList<CoordinatorActionBean>();\n+        for (CoordinatorActionBean coordAction : actionSet) {\n+            coordActions.add(coordAction);\n+        }\n+        return coordActions;\n+    }\n+\n+    /**\n+     * Get the list of actions for given id ranges\n+     *\n+     * @param jobId coordinator job id\n+     * @param scope a comma-separated list of action ranges. The action range is specified with two action numbers separated by '-'\n+     * @return the list of all Coordinator actions for action range\n+     * @throws CommandException thrown if failed to get coordinator actions by given id range\n+     */\n+     public static List<CoordinatorActionBean> getCoordActionsFromIds(String jobId, String scope) throws CommandException {\n+        JPAService jpaService = Services.get().get(JPAService.class);\n+        ParamChecker.notEmpty(jobId, \"jobId\");\n+        ParamChecker.notEmpty(scope, \"scope\");\n+\n+        Set<String> actions = new HashSet<String>();\n+        String[] list = scope.split(\",\");\n+        for (String s : list) {\n+            s = s.trim();\n+            // An action range is specified with two actions separated by '-'\n+            if (s.contains(\"-\")) {\n+                String[] range = s.split(\"-\");\n+                // Check the format for action's range\n+                if (range.length != 2) {\n+                    throw new CommandException(ErrorCode.E0302, \"format is wrong for action's range '\" + s + \"', an example of correct format is 1-5\");\n+                }\n+                int start;\n+                int end;\n+                try {\n+                    //Get the starting and ending action numbers\n+                    start = Integer.parseInt(range[0].trim());\n+                    end = Integer.parseInt(range[1].trim());\n+                    if (start > end) {\n+                        throw new CommandException(ErrorCode.E0302, \"format is wrong for action's range '\" + s\n+                                + \"', starting action number of the range should be less than ending action number, an example will be 1-4\");\n+                    }\n+                }\n+                catch (NumberFormatException ne) {\n+                    throw new CommandException(ErrorCode.E0302, ne);\n+                }\n+                // Add the actionIds\n+                for (int i = start; i <= end; i++) {\n+                    actions.add(jobId + \"@\" + i);\n+                }\n+            }\n+            else {\n+                try {\n+                    Integer.parseInt(s);\n+                }\n+                catch (NumberFormatException ne) {\n+                    throw new CommandException(ErrorCode.E0302, \"format is wrong for action id'\" + s\n+                            + \"'. Integer only.\");\n+                }\n+                actions.add(jobId + \"@\" + s);\n+            }\n+        }\n+        // Retrieve the actions using the corresponding actionIds\n+        List<CoordinatorActionBean> coordActions = new ArrayList<CoordinatorActionBean>();\n+        for (String id : actions) {\n+            CoordinatorActionBean coordAction;\n+            try {\n+                coordAction = jpaService.execute(new CoordActionGetJPAExecutor(id));\n+            }\n+            catch (JPAExecutorException je) {\n+                throw new CommandException(je);\n+            }\n+            coordActions.add(coordAction);\n+        }\n+        return coordActions;\n+    }\n+\n }",
                "additions": 150,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/coord/CoordUtils.java",
                "status": "modified",
                "changes": 152,
                "deletions": 2,
                "sha": "8e5ef1ec3714eafa20c07ff2e169bbc749150975",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/coord/CoordUtils.java",
                "filename": "core/src/main/java/org/apache/oozie/coord/CoordUtils.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/coord/CoordUtils.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -37,6 +37,8 @@\n import org.apache.oozie.client.rest.JsonTags;\n import org.apache.oozie.client.rest.JsonWorkflowJob;\n import org.apache.oozie.client.rest.RestConstants;\n+import org.apache.oozie.command.CommandException;\n+import org.apache.oozie.command.coord.CoordRerunXCommand;\n import org.apache.oozie.service.AuthorizationException;\n import org.apache.oozie.service.AuthorizationService;\n import org.apache.oozie.service.CoordinatorEngineService;\n@@ -128,9 +130,19 @@ else if (action.equals(RestConstants.JOB_COORD_ACTION_RERUN)) {\n                 String scope = request.getParameter(RestConstants.JOB_COORD_RERUN_SCOPE_PARAM);\n                 String refresh = request.getParameter(RestConstants.JOB_COORD_RERUN_REFRESH_PARAM);\n                 String noCleanup = request.getParameter(RestConstants.JOB_COORD_RERUN_NOCLEANUP_PARAM);\n+                if (!(rerunType.equals(RestConstants.JOB_COORD_RERUN_DATE) || rerunType\n+                        .equals(RestConstants.JOB_COORD_RERUN_ACTION))) {\n+                    throw new CommandException(ErrorCode.E1018, \"date or action expected.\");\n+                }\n                 CoordinatorActionInfo coordInfo = coordEngine.reRun(jobId, rerunType, scope, Boolean.valueOf(refresh),\n                         Boolean.valueOf(noCleanup));\n-                List<CoordinatorActionBean> actions = coordInfo.getCoordActions();\n+                List<CoordinatorActionBean> actions;\n+                if (coordInfo != null) {\n+                    actions = coordInfo.getCoordActions();\n+                }\n+                else {\n+                    actions = CoordRerunXCommand.getCoordActions(rerunType, jobId, scope);\n+                }\n                 JSONObject json = new JSONObject();\n                 json.put(JsonTags.COORDINATOR_ACTIONS, CoordinatorActionBean.toJSONArray(actions));\n                 startCron();\n@@ -141,6 +153,9 @@ else if (action.equals(RestConstants.JOB_COORD_ACTION_RERUN)) {\n                         RestConstants.ACTION_PARAM, action);\n             }\n         }\n+        catch (CommandException ex) {\n+            throw new XServletException(HttpServletResponse.SC_BAD_REQUEST, ex);\n+        }\n         catch (DagEngineException ex) {\n             throw new XServletException(HttpServletResponse.SC_BAD_REQUEST, ex);\n         }",
                "additions": 18,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/servlet/JobServlet.java",
                "status": "modified",
                "changes": 21,
                "deletions": 3,
                "sha": "b97a7164ef471e48583cbb894606f24984cb9579",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/servlet/JobServlet.java",
                "filename": "core/src/main/java/org/apache/oozie/servlet/JobServlet.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/servlet/JobServlet.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -33,6 +33,8 @@\n import org.apache.oozie.CoordinatorEngine;\n import org.apache.oozie.CoordinatorEngineException;\n import org.apache.oozie.command.CommandException;\n+import org.apache.oozie.command.coord.CoordRerunXCommand;\n+import org.apache.oozie.coord.CoordUtils;\n import org.apache.oozie.DagEngine;\n import org.apache.oozie.DagEngineException;\n import org.apache.oozie.ErrorCode;\n@@ -614,18 +616,33 @@ private JSONObject reRunCoordinatorActions(HttpServletRequest request, HttpServl\n                         + refresh + \", noCleanup=\" + noCleanup);\n \n         try {\n+            if (!(rerunType.equals(RestConstants.JOB_COORD_RERUN_DATE) || rerunType\n+                    .equals(RestConstants.JOB_COORD_RERUN_ACTION))) {\n+                throw new CommandException(ErrorCode.E1018, \"date or action expected.\");\n+            }\n             CoordinatorActionInfo coordInfo = coordEngine.reRun(jobId, rerunType, scope, Boolean.valueOf(refresh),\n                     Boolean.valueOf(noCleanup));\n-            List<CoordinatorActionBean> actions = coordInfo.getCoordActions();\n-            json.put(JsonTags.COORDINATOR_ACTIONS, CoordinatorActionBean.toJSONArray(actions));\n+            List<CoordinatorActionBean> coordActions;\n+            if (coordInfo != null) {\n+                coordActions = coordInfo.getCoordActions();\n+            }\n+            else {\n+                coordActions = CoordRerunXCommand.getCoordActions(rerunType, jobId, scope);\n+            }\n+            json.put(JsonTags.COORDINATOR_ACTIONS, CoordinatorActionBean.toJSONArray(coordActions));\n         }\n         catch (BaseEngineException ex) {\n             throw new XServletException(HttpServletResponse.SC_BAD_REQUEST, ex);\n         }\n+        catch (CommandException ex) {\n+            throw new XServletException(HttpServletResponse.SC_BAD_REQUEST, ex);\n+        }\n \n         return json;\n     }\n \n+\n+\n     /**\n      * Get workflow job\n      *",
                "additions": 21,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/servlet/V1JobServlet.java",
                "status": "modified",
                "changes": 25,
                "deletions": 4,
                "sha": "eda84496d8fdcb807f4aa87bf9c9ec12efa0773a",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/servlet/V1JobServlet.java",
                "filename": "core/src/main/java/org/apache/oozie/servlet/V1JobServlet.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/servlet/V1JobServlet.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -18,6 +18,7 @@\n \n package org.apache.oozie.util;\n \n+import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashSet;\n@@ -59,25 +60,8 @@\n         String[] list = scope.split(\",\");\n         for (String s : list) {\n             s = s.trim();\n-            // This block checks for errors in the format of specifying date range\n             if (s.contains(\"::\")) {\n-                String[] dateRange = s.split(\"::\");\n-                if (dateRange.length != 2) {\n-                    throw new XException(ErrorCode.E0308, \"'\" + s + \"'. Date value expected on both sides of the scope resolution operator '::' to signify start and end of range\");\n-                }\n-                Date start;\n-                Date end;\n-                try {\n-                start = DateUtils.parseDateUTC(dateRange[0].trim());\n-                end = DateUtils.parseDateUTC(dateRange[1].trim());\n-                }\n-                catch (Exception dx) {\n-                    throw new XException(ErrorCode.E0308, \"Error in parsing start or end date\");\n-                }\n-                if (start.after(end)) {\n-                    throw new XException(ErrorCode.E0308, \"'\" + s + \"'. Start date '\" + start + \"' is older than end date: '\" + end + \"'\");\n-                }\n-                List<CoordinatorActionBean> listOfActions = getActionIdsFromDateRange(jobId, start, end);\n+                List<CoordinatorActionBean> listOfActions = getCoordActionsFromDateRange(jobId, s);\n                 actionSet.addAll(listOfActions);\n             }\n             else {\n@@ -91,6 +75,36 @@\n         return coordActions;\n     }\n \n+    /**\n+     * Get the coordinator actions for a given date range\n+     * @param jobId the coordinator job id\n+     * @param range the date range separated by '::'\n+     * @return the list of Coordinator actions for the date range\n+     * @throws XException\n+     */\n+    public static List<CoordinatorActionBean> getCoordActionsFromDateRange(String jobId, String range) throws XException{\n+            String[] dateRange = range.split(\"::\");\n+            // This block checks for errors in the format of specifying date range\n+            if (dateRange.length != 2) {\n+                throw new XException(ErrorCode.E0308, \"'\" + range + \"'. Date value expected on both sides of the scope resolution operator '::' to signify start and end of range\");\n+            }\n+            Date start;\n+            Date end;\n+            try {\n+            // Get the start and end dates for the range\n+                start = DateUtils.parseDateUTC(dateRange[0].trim());\n+                end = DateUtils.parseDateUTC(dateRange[1].trim());\n+            }\n+            catch (ParseException dx) {\n+                throw new XException(ErrorCode.E0308, \"Error in parsing start or end date. \" + dx);\n+            }\n+            if (start.after(end)) {\n+                throw new XException(ErrorCode.E0308, \"'\" + range + \"'. Start date '\" + start + \"' is older than end date: '\" + end + \"'\");\n+            }\n+            List<CoordinatorActionBean> listOfActions = getActionIdsFromDateRange(jobId, start, end);\n+            return listOfActions;\n+    }\n+\n     /*\n      * Get coordinator action ids between given start and end time\n      *",
                "additions": 32,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/util/CoordActionsInDateRange.java",
                "status": "modified",
                "changes": 50,
                "deletions": 18,
                "sha": "93751f8aa9608768dccdf9153d9684f576e849b5",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/util/CoordActionsInDateRange.java",
                "filename": "core/src/main/java/org/apache/oozie/util/CoordActionsInDateRange.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/util/CoordActionsInDateRange.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -19,6 +19,7 @@\n \n import java.sql.Timestamp;\n import java.text.DateFormat;\n+import java.text.ParseException;\n import java.text.ParsePosition;\n import java.text.SimpleDateFormat;\n import java.util.Calendar;\n@@ -101,7 +102,7 @@ private static DateFormat getISO8601DateFormat() {\n         dateFormat.setTimeZone(UTC);\n         return dateFormat;\n     }\n-    \n+\n     private static DateFormat getSpecificDateFormat(String format) {\n         DateFormat dateFormat = new SimpleDateFormat(format);\n         dateFormat.setTimeZone(UTC);\n@@ -119,7 +120,7 @@ public static TimeZone getTimeZone(String tzId) {\n         return tz;\n     }\n \n-    public static Date parseDateUTC(String s) throws Exception {\n+    public static Date parseDateUTC(String s) throws ParseException {\n         return getISO8601DateFormat().parse(s);\n     }\n ",
                "additions": 5,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/util/DateUtils.java",
                "status": "modified",
                "changes": 9,
                "deletions": 4,
                "sha": "a38d6ca38bf7314e5b427d0f86c470a97a1b26d1",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/main/java/org/apache/oozie/util/DateUtils.java",
                "filename": "core/src/main/java/org/apache/oozie/util/DateUtils.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/main/java/org/apache/oozie/util/DateUtils.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -554,6 +554,7 @@ public void testCoordRerunRefresh() throws Exception {\n         store2.closeTrx();\n \n         waitFor(120 * 1000, new Predicate() {\n+            @Override\n             public boolean evaluate() throws Exception {\n                 CoordinatorAction bean = coordClient.getCoordActionInfo(actionId);\n                 return (bean.getStatus() == CoordinatorAction.Status.READY || bean.getStatus() == CoordinatorAction.Status.SUBMITTED);\n@@ -623,6 +624,7 @@ public void testCoordRerunCleanup() throws Exception {\n         store2.closeTrx();\n \n         waitFor(120 * 1000, new Predicate() {\n+            @Override\n             public boolean evaluate() throws Exception {\n                 CoordinatorAction bean = coordClient.getCoordActionInfo(actionId);\n                 return (bean.getStatus() == CoordinatorAction.Status.WAITING || bean.getStatus() == CoordinatorAction.Status.READY);\n@@ -667,6 +669,7 @@ public void testCoordRerunCleanupNoOutputEvents() throws Exception {\n         store2.commitTrx();\n         store2.closeTrx();\n         waitFor(120 * 1000, new Predicate() {\n+            @Override\n             public boolean evaluate() throws Exception {\n                 CoordinatorAction bean = coordClient.getCoordActionInfo(actionId);\n                 return (bean.getStatus() == CoordinatorAction.Status.WAITING || bean.getStatus() == CoordinatorAction.Status.READY);",
                "additions": 5,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/test/java/org/apache/oozie/command/coord/TestCoordRerunXCommand.java",
                "status": "modified",
                "changes": 7,
                "deletions": 2,
                "sha": "459d4737a1ebaa5d89c8c6c1a80f379d73b4f318",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/core/src/test/java/org/apache/oozie/command/coord/TestCoordRerunXCommand.java",
                "filename": "core/src/test/java/org/apache/oozie/command/coord/TestCoordRerunXCommand.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/command/coord/TestCoordRerunXCommand.java?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -491,9 +491,11 @@ Valid filter names are:\n    * user: the user that submitted the job.\n    * group: the group for the job.\n    * status: the status of the job.\n+   * frequency: the frequency of the Coordinator job.\n+   * unit: the time unit. It can take one of the following four values: months, days, hours or minutes. Time unit should be added only when frequency is specified.\n \n The query will do an AND among all the filter names. The query will do an OR among all the filter values for the same\n-name. Multiple values must be specified as different  name value pairs.\n+name. Multiple values must be specified as different name value pairs.\n \n ---+++ Checking the Status of multiple Coordinator Jobs\n ",
                "additions": 3,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/docs/src/site/twiki/DG_CommandLineTool.twiki",
                "status": "modified",
                "changes": 4,
                "deletions": 1,
                "sha": "bcc33b784b4f2c5314d4c7c4439709a05014ddfa",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/docs/src/site/twiki/DG_CommandLineTool.twiki",
                "filename": "docs/src/site/twiki/DG_CommandLineTool.twiki",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/docs/src/site/twiki/DG_CommandLineTool.twiki?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -43,7 +43,7 @@ $oozie job -rerun <coord_Job_id> [-nocleanup] [-refresh]\n    * Rerun for job, user should use job's start date and end date in -date.\n    * If the user specifies a date range (say Jan 1 to May 1), the actions that will be re-run are the existing actions\n      within that range.  If the existing actions are action #5....#40, which map to Jan 15 to Feb 15, then only those actions will run.\n-   * When rerun succeeds, the rerun action_id and nominal_time will be return.\n+   * The rerun action_id and nominal_time of the actions which are eligible to rerun will be returned.\n \n [[index][::Go back to Oozie Documentation Index::]]\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/docs/src/site/twiki/DG_CoordinatorRerun.twiki",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "cd593d17c014e8f6da764ff4dfff459b6ef5d2ae",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/docs/src/site/twiki/DG_CoordinatorRerun.twiki",
                "filename": "docs/src/site/twiki/DG_CoordinatorRerun.twiki",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/docs/src/site/twiki/DG_CoordinatorRerun.twiki?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            },
            {
                "patch": "@@ -1,5 +1,7 @@\n -- Oozie 3.2.0 release\n \n+OOZIE-651: Coordinator rerun fails due to NPE in some cases.(Virag via Mohammad)\n+OOZIE-655: Information added to Oozie help.(Virag via Mohammad)\n OOZIE-642: Year support in dateOffset() El function.(Virag via Mohammad)\n OOZIE-652 Add proxyuser capabilities to Oozie HTTP API. (tucu)\n OOZIE-591: Oozie continues to materialize new actions after end date modification (Mohamed Battisha vis Angelo)",
                "additions": 2,
                "raw_url": "https://github.com/apache/oozie/raw/48da5f2e552e26192d1630b98a806d3c5753668e/release-log.txt",
                "status": "modified",
                "changes": 2,
                "deletions": 0,
                "sha": "55d0c4111ae8b4517d02232c127e700f1e50ce2c",
                "blob_url": "https://github.com/apache/oozie/blob/48da5f2e552e26192d1630b98a806d3c5753668e/release-log.txt",
                "filename": "release-log.txt",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/release-log.txt?ref=48da5f2e552e26192d1630b98a806d3c5753668e"
            }
        ],
        "bug_id": "oozie_16",
        "parent": "https://github.com/apache/oozie/commit/a036914e0e11a617511ce7e48e676f6b8fab7eaf",
        "message": "OOZIE-651: Coordinator rerun fails due to NPE in some cases.(Virag via Mohammad).OOZIE-655: Information added to Oozie help.(Virag via Mohammad)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/oozie/trunk@1235163 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "oozie"
    },
    {
        "commit": "https://github.com/apache/oozie/commit/54a2f6932111b7883396668201ddae220127c68c",
        "file": [
            {
                "patch": "@@ -70,7 +70,6 @@ CONNECTSTRING=\"DriverClassName=${DriverClassName},Url=${Url},Username=${USERNAME\n #create persistence.xml\n mkdir ${SCRIPT_DIR}/tmp\n cat << EOF-persistence.xml > ${SCRIPT_DIR}/tmp/persistence.xml\n-exit\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <!--\n  Licensed to the Apache Software Foundation (ASF) under one",
                "additions": 0,
                "raw_url": "https://github.com/apache/oozie/raw/54a2f6932111b7883396668201ddae220127c68c/bin/createjpaconf.sh",
                "status": "modified",
                "changes": 1,
                "deletions": 1,
                "sha": "32e51f7efa635687c2bbc5b5fce59f78a91e329e",
                "blob_url": "https://github.com/apache/oozie/blob/54a2f6932111b7883396668201ddae220127c68c/bin/createjpaconf.sh",
                "filename": "bin/createjpaconf.sh",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/bin/createjpaconf.sh?ref=54a2f6932111b7883396668201ddae220127c68c"
            },
            {
                "patch": "@@ -1,4 +1,4 @@\n-#!/bin/sh\n+#!/bin/bash\n \n # resolve links - $0 may be a softlink\n PRG=\"${0}\"",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/54a2f6932111b7883396668201ddae220127c68c/client/src/main/bin/oozie",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "a23dfbcf38d425d3e8a5dd440d604f6e02d68fe5",
                "blob_url": "https://github.com/apache/oozie/blob/54a2f6932111b7883396668201ddae220127c68c/client/src/main/bin/oozie",
                "filename": "client/src/main/bin/oozie",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/client/src/main/bin/oozie?ref=54a2f6932111b7883396668201ddae220127c68c"
            },
            {
                "patch": "@@ -21,10 +21,11 @@\n import org.apache.commons.logging.LogFactory;\n import org.apache.oozie.CoordinatorActionBean;\n import org.apache.oozie.CoordinatorJobBean;\n+import org.apache.oozie.WorkflowActionBean;\n+import org.apache.oozie.WorkflowJobBean;\n import org.apache.oozie.util.ParamChecker;\n import org.apache.oozie.util.XLog;\n import org.apache.oozie.util.db.Schema.Table;\n-import org.apache.oozie.service.ConfigurationService;\n import org.apache.oozie.service.StoreService;\n import org.apache.oozie.service.DBLiteWorkflowStoreService;\n import org.apache.oozie.service.WorkflowAppService;\n@@ -452,24 +453,41 @@ protected void cleanUpDBTables() throws StoreException {\n         CoordinatorStore store = new CoordinatorStore(false);\n         EntityManager entityManager = store.getEntityManager();\n         store.beginTrx();\n-        Query q = entityManager.createNamedQuery(\"GET_COORD_JOBS\");\n-        List<CoordinatorJobBean> coordBeans = q.getResultList();\n-        int jSize = coordBeans.size();\n-        for (CoordinatorJobBean w : coordBeans) {\n+\n+        Query q = entityManager.createNamedQuery(\"GET_WORKFLOWS\");\n+        List<WorkflowJobBean> wfjBeans = q.getResultList();\n+        int wfjSize = wfjBeans.size();\n+        for (WorkflowJobBean w : wfjBeans) {\n+            entityManager.remove(w);\n+        }\n+\n+        q = entityManager.createNamedQuery(\"GET_ACTIONS\");\n+        List<WorkflowActionBean> wfaBeans = q.getResultList();\n+        int wfaSize = wfaBeans.size();\n+        for (WorkflowActionBean w : wfaBeans) {\n+            entityManager.remove(w);\n+        }\n+\n+        q = entityManager.createNamedQuery(\"GET_COORD_JOBS\");\n+        List<CoordinatorJobBean> cojBeans = q.getResultList();\n+        int cojSize = cojBeans.size();\n+        for (CoordinatorJobBean w : cojBeans) {\n             entityManager.remove(w);\n         }\n \n         q = entityManager.createNamedQuery(\"GET_COORD_ACTIONS\");\n-        List<CoordinatorActionBean> caBeans = q.getResultList();\n-        int aSize = caBeans.size();\n-        for (CoordinatorActionBean w : caBeans) {\n+        List<CoordinatorActionBean> coaBeans = q.getResultList();\n+        int coaSize = coaBeans.size();\n+        for (CoordinatorActionBean w : coaBeans) {\n             entityManager.remove(w);\n         }\n \n         store.commitTrx();\n         store.closeTrx();\n-        log.info(jSize + \" entries in COORD_JOBS have removed from DB!\");\n-        log.info(aSize + \" entries in COORD_ACTIONS have removed from DB!\");\n+        log.info(wfjSize + \" entries in WF_JOBS have removed from DB!\");\n+        log.info(wfaSize + \" entries in WF_ACTIONS have removed from DB!\");\n+        log.info(cojSize + \" entries in COORD_JOBS have removed from DB!\");\n+        log.info(coaSize + \" entries in COORD_ACTIONS have removed from DB!\");\n     }\n \n     private static MiniDFSCluster dfsCluster = null;",
                "additions": 28,
                "raw_url": "https://github.com/apache/oozie/raw/54a2f6932111b7883396668201ddae220127c68c/core/src/test/java/org/apache/oozie/test/XTestCase.java",
                "status": "modified",
                "changes": 38,
                "deletions": 10,
                "sha": "014e581b4127220c33f277732b0b960dfffd142c",
                "blob_url": "https://github.com/apache/oozie/blob/54a2f6932111b7883396668201ddae220127c68c/core/src/test/java/org/apache/oozie/test/XTestCase.java",
                "filename": "core/src/test/java/org/apache/oozie/test/XTestCase.java",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/java/org/apache/oozie/test/XTestCase.java?ref=54a2f6932111b7883396668201ddae220127c68c"
            },
            {
                "patch": "@@ -7,19 +7,19 @@\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n- \n+\n  http://www.apache.org/licenses/LICENSE-2.0\n- \n+\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n- under the License.   \n+ under the License.\n -->\n <persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n-             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-             version=\"1.0\">\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    version=\"1.0\">\n \n     <!--\n         We need to enumerate each persistent class first in the persistence.xml\n@@ -67,37 +67,11 @@\n                 happen to be commented out here since the provided examples\n                 all specify the values via System properties.\n             -->\n-\n-            <!--property name=\"openjpa.ConnectionURL\" \n-                value=\"jdbc:mysql://localhost:3306/oozie\"/-->\n-            <!--property name=\"openjpa.ConnectionDriverName\" \n-                value=\"com.mysql.jdbc.Driver\"/-->\n-            <!--property name=\"openjpa.ConnectionUserName\" \n-                value=\"root\"/>\n-            <property name=\"openjpa.ConnectionPassword\" \n-                value=\"\"/-->\n-            <!--\n-                        <property name=\"openjpa.ConnectionURL\"\n-                            value=\"jdbc:derby:openjpa-database;create=true\"/>\n-                        <property name=\"openjpa.ConnectionDriverName\"\n-                            value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\n-                        <property name=\"openjpa.ConnectionUserName\"\n-                            value=\"user\"/>\n-                        <property name=\"openjpa.ConnectionPassword\"\n-                            value=\"secret\"/>\n-            -->\n-            <property name=\"openjpa.ConnectionURL\"\n-                      value=\"jdbc:hsqldb:mem/oozie;create=true\"/>\n-            <property name=\"openjpa.ConnectionDriverName\"\n-                      value=\"org.hsqldb.jdbcDriver\"/>\n-            <property name=\"openjpa.ConnectionUserName\"\n-                      value=\"sa\"/>\n-            <property name=\"openjpa.ConnectionPassword\"\n-                      value=\"\"/>\n-            <!--\n             <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.commons.dbcp.BasicDataSource\"/>\n-            <property name=\"openjpa.ConnectionProperties\" value=\"DriverClassName=oracle.jdbc.driver.OracleDriver,Url=jdbc:oracle:thin:@LOCALHOST:10001:BLUEDEV3,Username=oozie,Password=oozie,MaxActive=100\"/>\n-            <property name=\"openjpa.ConnectionProperties\" value=\"DriverClassName=com.mysql.jdbc.Driver,Url=jdbc:mysql://localhost:3306/oozie,Username=root,Password=,MaxActive=100\"/>            \n+            <property name=\"openjpa.ConnectionProperties\" value=\"DriverClassName=org.hsqldb.jdbcDriver,Url=jdbc:hsqldb:mem/oozie;create=true,Username=sa,Password=,MaxActive=100\"/>\n+            <!--\n+            <property name=\"openjpa.ConnectionProperties\" value=\"DriverClassName=oracle.jdbc.driver.OracleDriver,Url=jdbc:oracle:thin:@LOCALHOST:10001:BLUEDEV3,Username=oozie4,Password=oozie4,MaxActive=100\"/>\n+            <property name=\"openjpa.ConnectionProperties\" value=\"DriverClassName=com.mysql.jdbc.Driver,Url=jdbc:mysql://localhost:3306/oozie,Username=root,Password=,MaxActive=100\"/>\n             -->\n             <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\"/>\n             <property name=\"openjpa.jdbc.DBDictionary\" value=\"UseGetBytesForBlobs=true\"/>",
                "additions": 9,
                "raw_url": "https://github.com/apache/oozie/raw/54a2f6932111b7883396668201ddae220127c68c/core/src/test/resources/META-INF/persistence.xml",
                "status": "modified",
                "changes": 44,
                "deletions": 35,
                "sha": "c9b100f14bb9ee50af08e2c14a6cf7f12953411c",
                "blob_url": "https://github.com/apache/oozie/blob/54a2f6932111b7883396668201ddae220127c68c/core/src/test/resources/META-INF/persistence.xml",
                "filename": "core/src/test/resources/META-INF/persistence.xml",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/resources/META-INF/persistence.xml?ref=54a2f6932111b7883396668201ddae220127c68c"
            },
            {
                "additions": 0,
                "raw_url": "https://github.com/apache/oozie/raw/54a2f6932111b7883396668201ddae220127c68c/core/src/test/resources/wordcount-simple_Linux-i386-32_h20",
                "status": "modified",
                "changes": 0,
                "deletions": 0,
                "sha": "75217c2a62e10ce0168f1d8bcd96e0298a907e22",
                "blob_url": "https://github.com/apache/oozie/blob/54a2f6932111b7883396668201ddae220127c68c/core/src/test/resources/wordcount-simple_Linux-i386-32_h20",
                "filename": "core/src/test/resources/wordcount-simple_Linux-i386-32_h20",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/core/src/test/resources/wordcount-simple_Linux-i386-32_h20?ref=54a2f6932111b7883396668201ddae220127c68c"
            },
            {
                "patch": "@@ -46,10 +46,6 @@\n                     <groupId>commons-cli</groupId>\n                     <artifactId>commons-cli</artifactId>\n                 </exclusion>\n-                <exclusion>\n-                    <groupId>log4j</groupId>\n-                    <artifactId>log4j</artifactId>\n-                </exclusion>\n                 <exclusion>\n                     <groupId>commons-httpclient</groupId>\n                     <artifactId>commons-httpclient</artifactId>",
                "additions": 0,
                "raw_url": "https://github.com/apache/oozie/raw/54a2f6932111b7883396668201ddae220127c68c/webapp/pom.xml",
                "status": "modified",
                "changes": 4,
                "deletions": 4,
                "sha": "80a5e087da3c835fbdf08969a0626e5988620396",
                "blob_url": "https://github.com/apache/oozie/blob/54a2f6932111b7883396668201ddae220127c68c/webapp/pom.xml",
                "filename": "webapp/pom.xml",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/webapp/pom.xml?ref=54a2f6932111b7883396668201ddae220127c68c"
            },
            {
                "patch": "@@ -1,4 +1,3 @@\n-exit\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <!--\n  Licensed to the Apache Software Foundation (ASF) under one\n@@ -70,7 +69,7 @@ exit\n             -->\n             <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.oozie.util.db.InstrumentedBasicDataSource\"/>\n \n-            <property name=\"openjpa.ConnectionProperties\" value=\"DriverClassName=org.hsqldb.jdbcDriver,Url=jdbc:hsqldb:mem/local;create=true,Username=root,Password=,MaxActive=100\"/>\n+            <property name=\"openjpa.ConnectionProperties\" value=\"DriverClassName=org.hsqldb.jdbcDriver,Url=jdbc:hsqldb:mem/oozie;create=true,Username=sa,Password=,MaxActive=100\"/>\n             <property name=\"openjpa.MetaDataFactory\" value=\"jpa(Types=org.apache.oozie.WorkflowActionBean;\n                 org.apache.oozie.WorkflowJobBean;\n                 org.apache.oozie.CoordinatorJobBean;",
                "additions": 1,
                "raw_url": "https://github.com/apache/oozie/raw/54a2f6932111b7883396668201ddae220127c68c/webapp/src/main/resources/META-INF/persistence.xml",
                "status": "modified",
                "changes": 3,
                "deletions": 2,
                "sha": "87762b2be699413f79185fecfcc2e1ba7b6979e6",
                "blob_url": "https://github.com/apache/oozie/blob/54a2f6932111b7883396668201ddae220127c68c/webapp/src/main/resources/META-INF/persistence.xml",
                "filename": "webapp/src/main/resources/META-INF/persistence.xml",
                "contents_url": "https://api.github.com/repos/apache/oozie/contents/webapp/src/main/resources/META-INF/persistence.xml?ref=54a2f6932111b7883396668201ddae220127c68c"
            }
        ],
        "bug_id": "oozie_17",
        "parent": "https://github.com/apache/oozie/commit/9501311af7a50904c7eabee1fa1a9053c17234ac",
        "message": "fixing NPEs by purging DB contents in XTestCase\nrecompiled binary wordcount for pipes testcase\nadding missing log4j dependency\ncorrections in the HSQL persistence information\n\nFrom: Alejandro Abdelnur <tucu00@gmail.com>\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/oozie/trunk@1168564 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "oozie"
    }
]