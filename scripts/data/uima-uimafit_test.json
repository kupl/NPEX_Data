{
    "uima-uimafit_047549b": {
        "bug_id": "uima-uimafit_047549b",
        "commit": "https://github.com/apache/uima-uimafit/commit/047549bab9d3406b00ada1a5a8f97f19222de5c3",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/uima-uimafit/blob/047549bab9d3406b00ada1a5a8f97f19222de5c3/uimafit/src/main/java/org/apache/uima/fit/factory/CpeBuilder.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/uima-uimafit/contents/uimafit/src/main/java/org/apache/uima/fit/factory/CpeBuilder.java?ref=047549bab9d3406b00ada1a5a8f97f19222de5c3",
                "deletions": 2,
                "filename": "uimafit/src/main/java/org/apache/uima/fit/factory/CpeBuilder.java",
                "patch": "@@ -92,7 +92,7 @@ public void setAnalysisEngine(AnalysisEngineDescription aDesc) throws IOExceptio\n \n     if (aDesc.isPrimitive()) {\n       // For a primitive AE we just add it.\n-      CpeIntegratedCasProcessor proc = createProcessor(\"\", aDesc);\n+      CpeIntegratedCasProcessor proc = createProcessor(\"delegate\", aDesc);\n       cpeDesc.addCasProcessor(proc);\n     } else {\n       // For an aggregate AE we dive into the first aggregation level and add each of the\n@@ -125,7 +125,9 @@ public CollectionProcessingEngine createCpe(StatusCallbackListener aListener)\n       cpeDesc.setProcessingUnitThreadCount(maxProcessingUnitThreadCount);\n     }\n     CollectionProcessingEngine cpe = produceCollectionProcessingEngine(cpeDesc, resMgr, null);\n-    cpe.addStatusCallbackListener(aListener);\n+    if (aListener != null) {\n+      cpe.addStatusCallbackListener(aListener);\n+    }\n     return cpe;\n   }\n ",
                "raw_url": "https://github.com/apache/uima-uimafit/raw/047549bab9d3406b00ada1a5a8f97f19222de5c3/uimafit/src/main/java/org/apache/uima/fit/factory/CpeBuilder.java",
                "sha": "35e6bde97d0d7a5b2be9bf06407542c5201bcd82",
                "status": "modified"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/uima-uimafit/blob/047549bab9d3406b00ada1a5a8f97f19222de5c3/uimafit/src/test/java/org/apache/uima/fit/factory/CpeBuilderTest.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/uima-uimafit/contents/uimafit/src/test/java/org/apache/uima/fit/factory/CpeBuilderTest.java?ref=047549bab9d3406b00ada1a5a8f97f19222de5c3",
                "deletions": 0,
                "filename": "uimafit/src/test/java/org/apache/uima/fit/factory/CpeBuilderTest.java",
                "patch": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.uima.fit.factory;\n+\n+import org.apache.uima.analysis_engine.AnalysisEngineDescription;\n+import org.apache.uima.collection.CollectionProcessingEngine;\n+import org.apache.uima.collection.CollectionReaderDescription;\n+import org.apache.uima.fit.component.NoOpAnnotator;\n+import org.apache.uima.fit.factory.testCrs.SingleFileXReader;\n+import org.junit.Test;\n+import static org.apache.uima.fit.factory.CollectionReaderFactory.*;\n+import static org.apache.uima.fit.factory.AnalysisEngineFactory.*;\n+\n+public class CpeBuilderTest {\n+\n+  @Test\n+  public void testSinglePrimitiveAE() throws Exception\n+  {\n+    CollectionReaderDescription cr = createDescription(\n+            SingleFileXReader.class,\n+            SingleFileXReader.PARAM_XML_SCHEME, \"XCAS\",\n+            SingleFileXReader.PARAM_FILE_NAME, \"src/test/resources/data/docs/test.xcas\");\n+\n+    AnalysisEngineDescription ae = createPrimitiveDescription(NoOpAnnotator.class);\n+    \n+    CpeBuilder builder = new CpeBuilder();\n+    builder.setReader(cr);\n+    builder.setAnalysisEngine(ae);\n+    CollectionProcessingEngine cpe = builder.createCpe(null);\n+  }  \n+}",
                "raw_url": "https://github.com/apache/uima-uimafit/raw/047549bab9d3406b00ada1a5a8f97f19222de5c3/uimafit/src/test/java/org/apache/uima/fit/factory/CpeBuilderTest.java",
                "sha": "e9f747acf6ad3842ca79ad610ff1cf908044f0ee",
                "status": "added"
            }
        ],
        "message": "[UIMA-2798] NPE when primitive AE is added to CpeBuilder \n- Fixed by using a non-empty delegate key\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/uima/sandbox/uimafit/trunk@1464201 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/uima-uimafit/commit/ab4543eebf6cc270c8721069bcd92ddf5aa464f2",
        "patched_files": [
            "CpeBuilder.java"
        ],
        "repo": "uima-uimafit",
        "unit_tests": [
            "CpeBuilderTest.java"
        ]
    }
}