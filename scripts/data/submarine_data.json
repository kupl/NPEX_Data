[
    {
        "commit": "https://github.com/apache/submarine/commit/14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9",
        "file": [
            {
                "patch": "@@ -56,16 +56,12 @@ public Response login(String loginParams) {\n         = gson.fromJson(loginParams, new TypeToken<HashMap<String, String>>() {}.getType());\n \n     SysUser sysUser = null;\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysUserMapper sysUserMapper = sqlSession.getMapper(SysUserMapper.class);\n       sysUser = sysUserMapper.login(mapParams);\n     } catch (Exception e) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK).success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n     sysUser.setToken(\"mock_token\");\n ",
                "additions": 1,
                "raw_url": "https://github.com/apache/submarine/raw/14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/LoginRestApi.java",
                "status": "modified",
                "changes": 6,
                "deletions": 5,
                "sha": "df21f29e761588fb18c9b3983f5e5bc8707cd90f",
                "blob_url": "https://github.com/apache/submarine/blob/14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/LoginRestApi.java",
                "filename": "submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/LoginRestApi.java",
                "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/LoginRestApi.java?ref=14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9"
            },
            {
                "patch": "@@ -70,9 +70,8 @@ public Response tree(@QueryParam(\"deptCode\") String likeDeptCode,\n     LOG.info(\"SysDeptRestApi.tree()\");\n \n     List<SysDept> sysDeptList = null;\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n       Map<String, Object> where = new HashMap<>();\n       where.put(\"deptCode\", likeDeptCode);\n@@ -81,8 +80,6 @@ public Response tree(@QueryParam(\"deptCode\") String likeDeptCode,\n     } catch (Exception e) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK).success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     List<SysDeptSelect> sysDeptSelects = new ArrayList<>();\n@@ -115,9 +112,7 @@ public Response queryIdTree(@QueryParam(\"disableDeptCode\") String disableDeptCod\n     LOG.info(\"queryIdTree({})\", disableDeptCode);\n \n     List<SysDeptSelect> sysDeptSelects = new ArrayList<>();\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n       List<SysDept> sysDeptList = sysDeptMapper.selectAll(new HashMap<>());\n \n@@ -129,8 +124,6 @@ public Response queryIdTree(@QueryParam(\"disableDeptCode\") String disableDeptCod\n     } catch (Exception e) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK).success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<ListResult<List<SysDeptSelect>>>(Response.Status.OK)\n@@ -143,18 +136,14 @@ public Response queryIdTree(@QueryParam(\"disableDeptCode\") String disableDeptCod\n   public Response add(SysDept sysDept) {\n     LOG.info(\"add({})\", sysDept.toString());\n \n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n       sysDeptMapper.add(sysDept);\n       sqlSession.commit();\n     } catch (Exception e) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK).success(false)\n           .message(\"Save department failed!\").build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<SysDept>(Response.Status.OK)\n@@ -166,9 +155,7 @@ public Response add(SysDept sysDept) {\n   @SubmarineApi\n   public Response edit(SysDept sysDept) {\n     LOG.info(\"edit({})\", sysDept.toString());\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n \n       SysDept dept = sysDeptMapper.getById(sysDept.getId());\n@@ -182,8 +169,6 @@ public Response edit(SysDept sysDept) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK)\n           .message(\"Update department failed!\").success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<>(Response.Status.OK).success(true)\n@@ -195,18 +180,14 @@ public Response edit(SysDept sysDept) {\n   @SubmarineApi\n   public Response resetParentDept() {\n     LOG.info(\"resetParentDept()\");\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n       sysDeptMapper.resetDeptLevel();\n       sqlSession.commit();\n     } catch (Exception e) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK)\n           .message(\"Reset department level failed!\").success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<>(Response.Status.OK).success(true)\n@@ -223,9 +204,8 @@ public Response delete(@QueryParam(\"id\") String id, @QueryParam(\"deleted\") int d\n       msgOperation = \"Restore\";\n     }\n \n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n \n       SysDept dept = new SysDept();\n@@ -237,8 +217,6 @@ public Response delete(@QueryParam(\"id\") String id, @QueryParam(\"deleted\") int d\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK)\n           .message(msgOperation + \" department failed!\").success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<>(Response.Status.OK)\n@@ -250,18 +228,14 @@ public Response delete(@QueryParam(\"id\") String id, @QueryParam(\"deleted\") int d\n   @SubmarineApi\n   public Response deleteBatch(@QueryParam(\"ids\") String ids) {\n     LOG.info(\"deleteBatch({})\", ids.toString());\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n       sysDeptMapper.deleteBatch(Arrays.asList(ids.split(\",\")));\n       sqlSession.commit();\n     } catch (Exception e) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK)\n           .message(\"Batch delete department failed!\").success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<>(Response.Status.OK)\n@@ -273,18 +247,15 @@ public Response deleteBatch(@QueryParam(\"ids\") String ids) {\n   @SubmarineApi\n   public Response remove(String id) {\n     LOG.info(\"remove({})\", id);\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDeptMapper sysDeptMapper = sqlSession.getMapper(SysDeptMapper.class);\n       sysDeptMapper.deleteById(id);\n       sqlSession.commit();\n     } catch (Exception e) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK)\n           .message(\"Delete department failed!\").success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<>(Response.Status.OK)",
                "additions": 11,
                "raw_url": "https://github.com/apache/submarine/raw/14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDeptRestApi.java",
                "status": "modified",
                "changes": 51,
                "deletions": 40,
                "sha": "f24954b1874b8307be67b053c11f64f782dc6b53",
                "blob_url": "https://github.com/apache/submarine/blob/14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDeptRestApi.java",
                "filename": "submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDeptRestApi.java",
                "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDeptRestApi.java?ref=14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9"
            },
            {
                "patch": "@@ -122,9 +122,7 @@ public Response add(SysDict sysDict) {\n   @Path(\"/edit\")\n   @SubmarineApi\n   public Response edit(SysDict sysDict) {\n-    SqlSession sqlSession = null;\n-    try {\n-      sqlSession = MyBatisUtil.getSqlSession();\n+    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n       SysDictMapper sysDictMapper = sqlSession.getMapper(SysDictMapper.class);\n       SysDict dict = sysDictMapper.getById(sysDict.getId());\n       if (dict == null) {\n@@ -137,8 +135,6 @@ public Response edit(SysDict sysDict) {\n       LOG.error(e.getMessage(), e);\n       return new JsonResponse.Builder<>(Response.Status.OK)\n           .message(\"Update dictionary failed!\").success(false).build();\n-    } finally {\n-      sqlSession.close();\n     }\n \n     return new JsonResponse.Builder<>(Response.Status.OK)",
                "additions": 1,
                "raw_url": "https://github.com/apache/submarine/raw/14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDictRestApi.java",
                "status": "modified",
                "changes": 6,
                "deletions": 5,
                "sha": "1217ae73b3c24516313c7457b1b3d8241e33d9ba",
                "blob_url": "https://github.com/apache/submarine/blob/14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDictRestApi.java",
                "filename": "submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDictRestApi.java",
                "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-workbench/workbench-server/src/main/java/org/apache/submarine/rest/SysDictRestApi.java?ref=14a6b1da6c9e9f32a0a9a3b6fa339d39f5ecc8c9"
            }
        ],
        "bug_id": "submarine_1",
        "parent": "https://github.com/apache/submarine/commit/887cacad699884518450a14033af30eaa3d49710",
        "message": "SUBMARINE-284. Method invocation `SqlSession#close` may produce NPE\n\n### What is this PR for?\nfix bug \"Method invocation `SqlSession#close` may produce NPE\"\n\n### What type of PR is it?\n[Bug Fix]\n\n### Todos\n* [ ] - Task\n\n### What is the Jira issue?\n[SUBMARINE-284](https://issues.apache.org/jira/browse/SUBMARINE-284)\n\n### How should this be tested?\n[CI](https://travis-ci.org/lowc1012/submarine/builds/608653118)\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update? No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? No\n\nAuthor: Ryan Lo <lowc1012@gmail.com>\n\nCloses #85 from lowc1012/SUBMARINE-284 and squashes the following commits:\n\ncaac99c [Ryan Lo] SUBMARINE-284. remove extra whitespace\nb31fafa [Ryan Lo] SUBMARINE-284. Method invocation `SqlSession#close` may produce NPE in workbench REST API",
        "repo": "submarine"
    }
]