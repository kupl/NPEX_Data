{
    "maven-project-info-reports-plugin_1336217": {
        "bug_id": "maven-project-info-reports-plugin_1336217",
        "commit": "https://github.com/apache/maven-project-info-reports-plugin/commit/13362170733b12200da49fac8c4f14250eb4cdfb",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/13362170733b12200da49fac8c4f14250eb4cdfb/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java?ref=13362170733b12200da49fac8c4f14250eb4cdfb",
                "deletions": 2,
                "filename": "src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java",
                "patch": "@@ -24,6 +24,7 @@\n import java.net.Authenticator;\n import java.net.PasswordAuthentication;\n import java.net.URL;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Properties;\n \n@@ -168,8 +169,10 @@ public static String getArtifactUrl( ArtifactFactory factory, Artifact artifact,\n         }\n         try\n         {\n-            MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( copyArtifact, remoteRepositories,\n-                                                                                  localRepository );\n+            MavenProject pluginProject =\n+                mavenProjectBuilder.buildFromRepository( copyArtifact,\n+                                                         remoteRepositories == null ? Collections.EMPTY_LIST\n+                                                                         : remoteRepositories, localRepository );\n \n             if ( isArtifactUrlValid( pluginProject.getUrl() ) )\n             {",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/13362170733b12200da49fac8c4f14250eb4cdfb/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java",
                "sha": "a5f80fb609d62812a6bb14c21b7bfd2cb0b72da1",
                "status": "modified"
            }
        ],
        "message": "fix junit (prevent NPE in core)\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@817018 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-project-info-reports-plugin/commit/f6749d29b08a10b11b94544f96e6d5da012ac7d1",
        "patched_files": [
            "ProjectInfoReportUtils.java"
        ],
        "repo": "maven-project-info-reports-plugin",
        "unit_tests": [
            "ProjectInfoReportUtilsTest.java"
        ]
    },
    "maven-project-info-reports-plugin_6398e71": {
        "bug_id": "maven-project-info-reports-plugin_6398e71",
        "commit": "https://github.com/apache/maven-project-info-reports-plugin/commit/6398e71beb035c8dd5e1cae5a3616b218dfce2d2",
        "file": [
            {
                "additions": 144,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/6398e71beb035c8dd5e1cae5a3616b218dfce2d2/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "changes": 234,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=6398e71beb035c8dd5e1cae5a3616b218dfce2d2",
                "deletions": 90,
                "filename": "src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "patch": "@@ -34,6 +34,7 @@\n import org.apache.maven.artifact.repository.ArtifactRepository;\n import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;\n import org.apache.maven.artifact.resolver.ArtifactCollector;\n+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;\n import org.apache.maven.artifact.versioning.VersionRange;\n@@ -44,6 +45,7 @@\n import org.apache.maven.project.MavenProject;\n import org.apache.maven.project.MavenProjectBuilder;\n import org.apache.maven.project.ProjectBuildingException;\n+import org.apache.maven.project.artifact.InvalidDependencyVersionException;\n import org.apache.maven.report.projectinfo.ReportResolutionListener.Node;\n import org.apache.maven.reporting.AbstractMavenReportRenderer;\n import org.apache.maven.settings.Proxy;\n@@ -67,6 +69,7 @@\n import org.codehaus.plexus.context.Context;\n import org.codehaus.plexus.context.ContextException;\n import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;\n+import org.codehaus.plexus.util.StringUtils;\n \n /**\n  * Generates the Project Dependencies report.\n@@ -97,7 +100,7 @@\n      * @component\n      */\n     private ArtifactCollector collector;\n-    \n+\n     /**\n      * @component\n      */\n@@ -111,19 +114,19 @@\n      * @readonly\n      */\n     private Settings settings;\n-    \n+\n     /**\n      * @parameter expression=\"${dependency.details.enabled}\" default-value=\"true\"\n      */\n     private boolean dependencyDetailsEnabled;\n-    \n+\n     /**\n      * @parameter expression=\"${dependency.locations.enabled}\" default-value=\"false\"\n      */\n     private boolean dependencyLocationsEnabled;\n-    \n+\n     private PlexusContainer container;\n-    \n+\n     /**\n      * Will be filled with license name / list of projects.\n      */\n@@ -173,6 +176,11 @@ private ReportResolutionListener resolveProject()\n \n         try\n         {\n+            // TODO site:run Why do we need to resolve this...\n+            if ( project.getDependencyArtifacts() == null )\n+            {\n+                project.setDependencyArtifacts( project.createArtifacts( factory, null, null ) );\n+            }\n             collector.collect( project.getDependencyArtifacts(), project.getArtifact(), managedVersions,\n                                localRepository, project.getRemoteArtifactRepositories(), artifactMetadataSource, null,\n                                Collections.singletonList( listener ) );\n@@ -181,6 +189,10 @@ private ReportResolutionListener resolveProject()\n         {\n             getLog().error( \"An error occurred while resolving project dependencies.\", e );\n         }\n+        catch ( InvalidDependencyVersionException e )\n+        {\n+            getLog().error( \"An error occurred while resolving project dependencies.\", e );\n+        }\n \n         return listener;\n     }\n@@ -206,8 +218,8 @@ private Map createManagedVersionMap( String projectId, DependencyManagement depe\n                 }\n                 catch ( InvalidVersionSpecificationException e )\n                 {\n-                    throw new ProjectBuildingException( projectId, \"Unable to parse version '\" + d.getVersion() +\n-                        \"' for dependency '\" + d.getManagementKey() + \"': \" + e.getMessage(), e );\n+                    throw new ProjectBuildingException( projectId, \"Unable to parse version '\" + d.getVersion()\n+                        + \"' for dependency '\" + d.getManagementKey() + \"': \" + e.getMessage(), e );\n                 }\n             }\n         }\n@@ -240,41 +252,43 @@ public void contextualize( Context context )\n \n         public Dependencies( MavenProject project, ReportResolutionListener listener )\n         {\n-            /* Workaround to ensure proper File objects in the \n-             * Artifacts from the ReportResolutionListener\n+            /*\n+             * Workaround to ensure proper File objects in the Artifacts from the ReportResolutionListener\n              */\n             Map projectMap = new HashMap();\n             Iterator it = project.getArtifacts().iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 Artifact artifact = (Artifact) it.next();\n                 projectMap.put( ArtifactUtils.versionlessKey( artifact ), artifact );\n             }\n-            \n-            mapArtifactFiles(listener.getRootNode(), projectMap);\n-            \n+\n+            mapArtifactFiles( listener.getRootNode(), projectMap );\n+\n             this.projectDependencies = listener.getRootNode().getChildren();\n             this.resolvedDependencies = listener;\n         }\n \n         private void mapArtifactFiles( Node node, Map projectMap )\n         {\n             List childs = node.getChildren();\n-            if( (childs == null) || childs.isEmpty() ) {\n+            if ( ( childs == null ) || childs.isEmpty() )\n+            {\n                 return;\n             }\n-            \n+\n             Iterator it = childs.iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 Node anode = (ReportResolutionListener.Node) it.next();\n                 String key = ArtifactUtils.versionlessKey( anode.getArtifact() );\n                 Artifact projartifact = (Artifact) projectMap.get( key );\n-                if( projartifact != null ) {\n-                    anode.getArtifact().setFile(  projartifact.getFile() );\n+                if ( projartifact != null )\n+                {\n+                    anode.getArtifact().setFile( projartifact.getFile() );\n                 }\n-                \n-                mapArtifactFiles(anode, projectMap);\n+\n+                mapArtifactFiles( anode, projectMap );\n             }\n         }\n \n@@ -422,12 +436,12 @@ private void renderDependenciesForAllScopes( String[] tableHeader, Map dependenc\n                                         (List) dependenciesByScope.get( Artifact.SCOPE_COMPILE ), tableHeader );\n             renderDependenciesForScope( Artifact.SCOPE_RUNTIME,\n                                         (List) dependenciesByScope.get( Artifact.SCOPE_RUNTIME ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_TEST, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_TEST ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_PROVIDED, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_PROVIDED ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_SYSTEM, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_SYSTEM ), tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_TEST, (List) dependenciesByScope.get( Artifact.SCOPE_TEST ),\n+                                        tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_PROVIDED, (List) dependenciesByScope\n+                .get( Artifact.SCOPE_PROVIDED ), tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_SYSTEM, (List) dependenciesByScope.get( Artifact.SCOPE_SYSTEM ),\n+                                        tableHeader );\n         }\n \n         private void renderSectionProjectTransitiveDependencies( Dependencies dependencies )\n@@ -459,7 +473,7 @@ private void renderSectionProjectDependencyGraph()\n \n             // === Section: Dependency Tree\n             renderSectionDependencyTree();\n-            \n+\n             // === Section: Dependency Listings\n             renderSectionDependencyListing();\n \n@@ -468,7 +482,7 @@ private void renderSectionProjectDependencyGraph()\n \n         private void renderSectionDependencyTree()\n         {\n-            //for Dependencies Graph Tree\n+            // for Dependencies Graph Tree\n             startSection( getReportString( \"report.dependencies.graph.tree.title\" ) );\n             sink.paragraph();\n             sink.list();\n@@ -497,7 +511,7 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n \n             String[] tableHeader = new String[] { filename, size, entries, classes, packages, jdkrev, debug, sealed };\n             tableHeader( tableHeader );\n-            \n+\n             int totaldeps = 0;\n             long totaldepsize = 0;\n             int totalentries = 0;\n@@ -506,15 +520,37 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n             double highestjdk = 0.0;\n             int totaldebug = 0;\n             int totalsealed = 0;\n-            \n-            DecimalFormat decFormat = new DecimalFormat(\"#,##0\");\n+\n+            DecimalFormat decFormat = new DecimalFormat( \"#,##0\" );\n \n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact artifact = (Artifact) it.next();\n-                \n+\n                 if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n                 {\n+                    // TODO site:run Why do we need to resolve this...\n+                    if ( artifact.getFile() == null )\n+                    {\n+                        try\n+                        {\n+                            List remoteRepositories = new ArrayList();\n+                            remoteRepositories.addAll( project.getPluginArtifactRepositories() );\n+                            remoteRepositories.addAll( project.getRemoteArtifactRepositories() );\n+                            resolver.resolve( artifact, remoteRepositories, localRepository );\n+                        }\n+                        catch ( ArtifactResolutionException e )\n+                        {\n+                            getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\", e );\n+                            continue;\n+                        }\n+                        catch ( ArtifactNotFoundException e )\n+                        {\n+                            getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\", e );\n+                            continue;\n+                        }\n+                    }\n+\n                     if ( artifact.getFile() == null )\n                     {\n                         getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\" );\n@@ -613,7 +649,7 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n                     }\n                 }\n             }\n-            \n+\n             tableRow( new String[] {\n                 \"\" + totaldeps + \" total dependencies\",\n                 decFormat.format( totaldepsize ),\n@@ -627,47 +663,47 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n             endTable();\n             endSection();\n         }\n-        \n+\n         private void populateRepositoryMap( Map repos, List rawRepos )\n         {\n             Iterator it = rawRepos.iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 ArtifactRepository repo = (ArtifactRepository) it.next();\n                 repos.put( repo.getId(), repo );\n             }\n         }\n-        \n+\n         private void renderSectionDependencyRepositoryLocations( Dependencies dependencies )\n         {\n             startSection( getReportString( \"report.dependencies.repo.locations.title\" ) );\n-            \n+\n             // Collect Alphabetical Dependencies\n             List alldeps = dependencies.getAllDependencies();\n             Collections.sort( alldeps, getArtifactComparator() );\n-            \n+\n             // Collect Repositories\n             Map repoMap = new HashMap();\n-            \n+\n             populateRepositoryMap( repoMap, project.getRemoteArtifactRepositories() );\n-            \n+\n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact artifact = (Artifact) it.next();\n                 try\n                 {\n                     MavenProject artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n-                    \n+\n                     populateRepositoryMap( repoMap, artifactProject.getRemoteArtifactRepositories() );\n                 }\n                 catch ( ProjectBuildingException e )\n                 {\n                     getLog().warn( \"Unable to create maven project from repository.\", e );\n                 }\n             }\n-            \n+\n             // Render Repository List\n-            \n+\n             startTable();\n             String repoid = getReportString( \"report.dependencies.repo.locations.column.repoid\" );\n             String url = getReportString( \"report.dependencies.repo.locations.column.url\" );\n@@ -676,13 +712,13 @@ private void renderSectionDependencyRepositoryLocations( Dependencies dependenci\n \n             String[] tableHeader = new String[] { repoid, url, release, snapshot };\n             tableHeader( tableHeader );\n-            \n+\n             String releaseEnabled = getReportString( \"report.dependencies.repo.locations.cell.release.enabled\" );\n             String releaseDisabled = getReportString( \"report.dependencies.repo.locations.cell.release.disabled\" );\n-            \n+\n             String snapshotEnabled = getReportString( \"report.dependencies.repo.locations.cell.snapshot.enabled\" );\n             String snapshotDisabled = getReportString( \"report.dependencies.repo.locations.cell.snapshot.disabled\" );\n-            \n+\n             for ( Iterator it = repoMap.keySet().iterator(); it.hasNext(); )\n             {\n                 String key = (String) it.next();\n@@ -696,100 +732,102 @@ private void renderSectionDependencyRepositoryLocations( Dependencies dependenci\n                 sink.text( repo.getUrl() );\n                 sink.link_();\n                 sink.tableCell_();\n-                \n+\n                 ArtifactRepositoryPolicy releasePolicy = repo.getReleases();\n                 tableCell( releasePolicy.isEnabled() ? releaseEnabled : releaseDisabled );\n \n                 ArtifactRepositoryPolicy snapshotPolicy = repo.getSnapshots();\n                 tableCell( snapshotPolicy.isEnabled() ? snapshotEnabled : snapshotDisabled );\n                 sink.tableRow_();\n             }\n-            \n+\n             endTable();\n-            \n+\n             // Render Aritfact Breakdown.\n-            \n+\n             sink.paragraph();\n             sink.text( getReportString( \"report.dependencies.repo.locations.artifact.breakdown\" ) );\n             sink.paragraph_();\n-            \n+\n             List repoIdList = new ArrayList( repoMap.keySet() );\n \n             startTable();\n             String artifact = getReportString( \"report.dependencies.repo.locations.column.artifact\" );\n             tableHeader = new String[repoIdList.size() + 1];\n             tableHeader[0] = artifact;\n             int idnum = 1;\n-            \n-            for (Iterator it = repoIdList.iterator(); it.hasNext();)\n+\n+            for ( Iterator it = repoIdList.iterator(); it.hasNext(); )\n             {\n                 String id = (String) it.next();\n                 tableHeader[idnum++] = id;\n             }\n-            \n+\n             tableHeader( tableHeader );\n-            \n+\n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact dependency = (Artifact) it.next();\n-                \n+\n                 if ( !Artifact.SCOPE_SYSTEM.equals( dependency.getScope() ) )\n                 {\n                     sink.tableRow();\n-                    \n+\n                     tableCell( dependency.getId() );\n-                    \n-                    for(Iterator itrepo = repoIdList.iterator(); itrepo.hasNext();)\n+\n+                    for ( Iterator itrepo = repoIdList.iterator(); itrepo.hasNext(); )\n                     {\n                         String repokey = (String) itrepo.next();\n                         ArtifactRepository repo = (ArtifactRepository) repoMap.get( repokey );\n-                        \n+\n                         String depUrl = repo.getUrl() + \"/\" + repo.pathOf( dependency );\n-                        \n-                        if(dependencyExistsInRepo(repo, dependency))\n+\n+                        if ( dependencyExistsInRepo( repo, dependency ) )\n                         {\n                             sink.tableCell();\n                             sink.link( depUrl );\n-                            \n+\n                             sink.figure();\n                             sink.figureCaption();\n                             sink.text( \"Found at \" + repo.getUrl() );\n                             sink.figureCaption_();\n                             sink.figureGraphics( \"images/icon_success_sml.gif\" );\n                             sink.figure_();\n-                            \n+\n                             sink.link_();\n                             sink.tableCell_();\n-                        } else {\n+                        }\n+                        else\n+                        {\n                             sink.tableCell();\n-                            sink.text(\"-\");\n+                            sink.text( \"-\" );\n                             sink.tableCell_();\n                         }\n                     }\n-                    \n+\n                     sink.tableRow_();\n                 }\n             }\n-            \n+\n             endTable();\n-            \n+\n             endSection();\n         }\n-        \n+\n         private boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifact )\n         {\n             Wagon wagon;\n-            \n+\n             try\n             {\n-                wagon = wagonManager.getWagon(repo.getProtocol());\n+                wagon = wagonManager.getWagon( repo.getProtocol() );\n             }\n             catch ( UnsupportedProtocolException e )\n             {\n                 getLog().error( \"Unsupported protocol: '\" + repo.getProtocol() + \"'\", e );\n                 return false;\n             }\n-            \n+\n             try\n             {\n                 Debug debug = new Debug();\n@@ -845,7 +883,7 @@ private boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifa\n                 }\n             }\n         }\n-        \n+\n         /**\n          * Convenience method to map a <code>Proxy</code> object from the user system settings to a\n          * <code>ProxyInfo</code> object.\n@@ -869,15 +907,15 @@ public ProxyInfo getProxyInfo( Settings settings )\n             }\n \n             return proxyInfo;\n-        }        \n+        }\n \n         private void renderSectionDependencyListing()\n         {\n             startSection( getReportString( \"report.dependencies.graph.tables.title\" ) );\n             printDescriptionsAndURLs( listener.getRootNode() );\n             endSection();\n         }\n-        \n+\n         private void renderSectionDependencyLicenseListing()\n         {\n             startSection( getReportString( \"report.dependencies.graph.tables.licenses\" ) );\n@@ -937,8 +975,13 @@ else if ( !a1.isOptional() && a2.isOptional() )\n \n         private String[] getArtifactRow( Artifact artifact )\n         {\n-            return new String[]{artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(),\n-                artifact.getClassifier(), artifact.getType(), artifact.isOptional() ? \"(optional)\" : \" \"};\n+            return new String[] {\n+                artifact.getGroupId(),\n+                artifact.getArtifactId(),\n+                artifact.getVersion(),\n+                artifact.getClassifier(),\n+                artifact.getType(),\n+                artifact.isOptional() ? \"(optional)\" : \" \" };\n         }\n \n         private void printDependencyListing( ReportResolutionListener.Node node )\n@@ -972,7 +1015,7 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n         {\n             Artifact artifact = node.getArtifact();\n             String id = artifact.getDependencyConflictId();\n-            \n+\n             String unknownLicenseMessage = getReportString( \"report.dependencies.graph.tables.unknown\" );\n \n             if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n@@ -987,7 +1030,7 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n \n                     sink.paragraph();\n                     sink.anchor( id );\n-                    //                     startSection( artifactName );\n+                    // startSection( artifactName );\n                     sink.bold();\n                     sink.text( artifactName );\n                     sink.bold_();\n@@ -1036,8 +1079,12 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                             {\n                                 projectsWithSameLicense = new ArrayList();\n                                 licenseMap.put( licenseName, projectsWithSameLicense );\n+\n+                            }\n+                            if ( !projectsWithSameLicense.contains( artifactName ) )\n+                            {\n+                                projectsWithSameLicense.add( artifactName );\n                             }\n-                            projectsWithSameLicense.add( artifactName );\n \n                         }\n                     }\n@@ -1051,11 +1098,14 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                             projectsWithSameLicense = new ArrayList();\n                             licenseMap.put( unknownLicenseMessage, projectsWithSameLicense );\n                         }\n-                        projectsWithSameLicense.add( artifactName );\n+                        if ( !projectsWithSameLicense.contains( artifactName ) )\n+                        {\n+                            projectsWithSameLicense.add( artifactName );\n+                        }\n                     }\n                     sink.paragraph_();\n \n-                    //                    endSection();\n+                    // endSection();\n                     sink.horizontalRule();\n                 }\n                 catch ( ProjectBuildingException e )\n@@ -1084,15 +1134,22 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                 sink.paragraph_();\n             }\n         }\n-        \n+\n         private void printGroupedLicenses()\n         {\n             for ( Iterator iter = licenseMap.keySet().iterator(); iter.hasNext(); )\n             {\n                 String licenseName = (String) iter.next();\n                 sink.paragraph();\n                 sink.bold();\n-                sink.text( licenseName );\n+                if ( StringUtils.isEmpty( licenseName ) )\n+                {\n+                    sink.text( i18n.getString( \"project-info-report\", locale, \"report.dependencies.unamed\" ) );\n+                }\n+                else\n+                {\n+                    sink.text( licenseName );\n+                }\n                 sink.text( \": \" );\n                 sink.bold_();\n \n@@ -1115,13 +1172,12 @@ private void printGroupedLicenses()\n         }\n \n         /**\n-         * Get the <code>Maven project</code> from the repository depending\n-         * the <code>Artifact</code> given.\n+         * Get the <code>Maven project</code> from the repository depending the <code>Artifact</code> given.\n          *\n          * @param artifact an artifact\n          * @return the Maven project for the given artifact\n          * @throws org.apache.maven.project.ProjectBuildingException\n-         *          if any\n+         *             if any\n          */\n         private MavenProject getMavenProjectFromRepository( Artifact artifact, ArtifactRepository localRepository )\n             throws ProjectBuildingException\n@@ -1145,7 +1201,5 @@ private String getReportString( String key )\n         {\n             return i18n.getString( \"project-info-report\", locale, key );\n         }\n-\n     }\n-\n }",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/6398e71beb035c8dd5e1cae5a3616b218dfce2d2/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "sha": "c356c73b8184a891e3b1e45a16fa5db3414cee6e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/6398e71beb035c8dd5e1cae5a3616b218dfce2d2/src/main/resources/project-info-report.properties",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/resources/project-info-report.properties?ref=6398e71beb035c8dd5e1cae5a3616b218dfce2d2",
                "deletions": 0,
                "filename": "src/main/resources/project-info-report.properties",
                "patch": "@@ -81,6 +81,7 @@ report.dependencies.repo.locations.column.snapshot                 = Snapshot\n report.dependencies.repo.locations.column.url                      = URL\n report.dependencies.repo.locations.title                           = Dependency Repository Locations\n report.dependencies.title                                          = Project Dependencies\n+report.dependencies.unamed                                         = Unamed\n report.dependency-convergence.convergence.caption                  = Dependencies used in sub-projects\n report.dependency-convergence.description                          = This document presents the convergence of dependency versions across the entire project, and its sub modules.\n report.dependency-convergence.legend                               = Legend",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/6398e71beb035c8dd5e1cae5a3616b218dfce2d2/src/main/resources/project-info-report.properties",
                "sha": "104d9e501a17ecfa7dbad3b8a031d49224c3d887",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/6398e71beb035c8dd5e1cae5a3616b218dfce2d2/src/main/resources/project-info-report_fr.properties",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/resources/project-info-report_fr.properties?ref=6398e71beb035c8dd5e1cae5a3616b218dfce2d2",
                "deletions": 1,
                "filename": "src/main/resources/project-info-report_fr.properties",
                "patch": "@@ -47,7 +47,7 @@ report.dependencies.graph.tables.column.version                    = Version\n report.dependencies.graph.tables.licenses                          = License\n report.dependencies.graph.tables.notAttached                       = Non attach\\u00E9e\n report.dependencies.graph.tables.title                             = Liste des d\\u00E9pendances\n-report.dependencies.graph.tables.unknown                           = \n+report.dependencies.graph.tables.unknown                           = Inconnu\n report.dependencies.graph.title                                    = Graphe des d\\u00E9pendances du projet\n report.dependencies.graph.tree.title                               = Arbre des d\\u00E9pendances\n report.dependencies.graph.url.default                              = Aucun URL d\\u00E9fini\n@@ -60,6 +60,7 @@ report.dependencies.intro.test                                     = Ce qui suit\n report.dependencies.name                                           = D\\u00E9pendances\n report.dependencies.nolist                                         = Il n'y a aucune d\\u00E9pendance pour ce projet. C'est une application autonome qui ne d\\u00E9pend d'aucun autre projet.\n report.dependencies.title                                          = D\\u00E9pendances du projet\n+report.dependencies.unamed                                         = Non-sp\\u00E9cifi\\u00E9\n report.dependency-convergence.convergence.caption                  = D\\u00E9pendances utilis\\u00E9es dans les sous projets\n report.dependency-convergence.description                          = Ce document pr\\u00E9sente la convergence des versions des d\\u00E9pendances \\u00E0 travers le projet entier, et de ses sous modules.\n report.dependency-convergence.legend                               = L\\u00E9gende",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/6398e71beb035c8dd5e1cae5a3616b218dfce2d2/src/main/resources/project-info-report_fr.properties",
                "sha": "9e8bab35996824d529a3f225f25bb3b12dab1007",
                "status": "modified"
            }
        ],
        "message": "MSITE-138: site:stage does not create xref\n\no replaced all annotations for outputdirectory in Mojo Reports: ${project.build.directory}/site =>  ${project.reporting.outputDirectory}\no setReportOutputDirectory() in all Mojo reports (if required).\no handle outputdirectory for external reports in SiteRunMojo and in DoxiaFilter\no handle NPE for dependencies when site:run is called (due to MPIR-55)\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@433277 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-project-info-reports-plugin/commit/a1cb69e18a3f236b7f27e3bc9aa7ea517e19df1e",
        "patched_files": [
            "DependenciesReport.java"
        ],
        "repo": "maven-project-info-reports-plugin",
        "unit_tests": [
            "DependenciesReportTest.java"
        ]
    },
    "maven-project-info-reports-plugin_99d7439": {
        "bug_id": "maven-project-info-reports-plugin_99d7439",
        "commit": "https://github.com/apache/maven-project-info-reports-plugin/commit/99d74398f55489d30f60e42afe865cf86a7f242d",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/99d74398f55489d30f60e42afe865cf86a7f242d/pom.xml",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/pom.xml?ref=99d74398f55489d30f60e42afe865cf86a7f242d",
                "deletions": 5,
                "filename": "pom.xml",
                "patch": "@@ -32,7 +32,7 @@ under the License.\n   <version>2.1-SNAPSHOT</version>\n   <inceptionYear>2005</inceptionYear>\n   <prerequisites>\n-    <maven>2.0.4</maven>\n+    <maven>2.0.6</maven>\n   </prerequisites>\n   <issueManagement>\n     <system>JIRA</system>\n@@ -185,20 +185,37 @@ under the License.\n       <artifactId>doxia-core</artifactId>\n       <version>${doxia.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.maven.doxia</groupId>\n+      <artifactId>doxia-module-xhtml</artifactId>\n+      <version>${doxia.version}</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.maven.doxia</groupId>\n       <artifactId>doxia-sink-api</artifactId>\n       <version>${doxia.version}</version>\n     </dependency>\n+\n+    <!-- doxia-sitetools -->\n     <dependency>\n       <groupId>org.apache.maven.doxia</groupId>\n       <artifactId>doxia-decoration-model</artifactId>\n-      <version>${doxia.version}</version>\n+      <version>${doxia-sitetools.version}</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.maven.doxia</groupId>\n       <artifactId>doxia-site-renderer</artifactId>\n-      <version>${doxia.version}</version>\n+      <version>${doxia-sitetools.version}</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.codehaus.plexus</groupId>\n+          <artifactId>plexus-container-default</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.codehaus.plexus</groupId>\n+          <artifactId>plexus-component-api</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n \n     <!-- plexus -->\n@@ -221,7 +238,7 @@ under the License.\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-utils</artifactId>\n-      <version>1.1</version>\n+      <version>1.4.5</version>\n     </dependency>\n \n     <!-- test -->\n@@ -239,7 +256,8 @@ under the License.\n     </dependency>\n   </dependencies>\n   <properties>\n-    <doxia.version>1.0-alpha-8</doxia.version>\n+    <doxia.version>1.0-alpha-9</doxia.version>\n+    <doxia-sitetools.version>1.0-alpha-9</doxia-sitetools.version>\n     <wagon.version>1.0-beta-2</wagon.version>\n     <scm.version>1.0</scm.version>\n   </properties>",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/99d74398f55489d30f60e42afe865cf86a7f242d/pom.xml",
                "sha": "b8a31efbed4256b0adad95062e7bfd2e8c632e1e",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/99d74398f55489d30f60e42afe865cf86a7f242d/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java?ref=99d74398f55489d30f60e42afe865cf86a7f242d",
                "deletions": 2,
                "filename": "src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java",
                "patch": "@@ -694,12 +694,18 @@ private void printDescriptionsAndURLs( DependencyNode node )\n                 List licenses = artifactProject.getLicenses();\n \n                 sink.paragraph();\n-                sink.anchor( id );\n+                if( id != null )\n+                {\n+                    sink.anchor( id );\n+                }\n                 // startSection( artifactName );\n                 sink.bold();\n                 sink.text( artifactName );\n                 sink.bold_();\n-                sink.anchor_();\n+                if( id != null )\n+                {\n+                    sink.anchor_();\n+                }\n                 sink.paragraph_();\n \n                 if ( artifactDescription != null )",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/99d74398f55489d30f60e42afe865cf86a7f242d/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java",
                "sha": "012b6dfeddd52e45796fcac708f601e04e879ca1",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/99d74398f55489d30f60e42afe865cf86a7f242d/src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java?ref=99d74398f55489d30f60e42afe865cf86a7f242d",
                "deletions": 1,
                "filename": "src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java",
                "patch": "@@ -87,6 +87,6 @@ public void testReport()\n         assertEquals( textBlocks[6].getText(), getString( \"report.dependencies.intro.test\" ) );\r\n         assertEquals( textBlocks[7].getText(), getString( \"report.dependencies.graph.title\" ) );\r\n         assertEquals( textBlocks[8].getText(), getString( \"report.dependencies.graph.tree.title\" ) );\r\n-        assertEquals( textBlocks[10].getText(), getString( \"report.dependencies.graph.tables.title\" ) );\r\n+        assertEquals( textBlocks[12].getText(), getString( \"report.dependencies.graph.tables.title\" ) );\r\n     }\r\n }\r",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/99d74398f55489d30f60e42afe865cf86a7f242d/src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java",
                "sha": "4ed197015ef18928a7339a160b84d074ed1fafd6",
                "status": "modified"
            }
        ],
        "message": "[MPIR-72] Upgrade to doxia 1.0-alpha-9\no Upgrade to doxia 1.0-alpha-9.\no Update the plexus-utils version to match the one used by doxia.\no Bump the prerequisite for maven to 2.0.6, because we need to use a newer version of plexus-utils.\no Fix possible NPE.\no Fix test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@580617 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-project-info-reports-plugin/commit/49062a5b16d260043259a6accb4f7daf5647cc0b",
        "patched_files": [
            "DependenciesRenderer.java",
            "DependenciesReport.java",
            "pom.java"
        ],
        "repo": "maven-project-info-reports-plugin",
        "unit_tests": [
            "DependenciesReportTest.java"
        ]
    },
    "maven-project-info-reports-plugin_a5a984b": {
        "bug_id": "maven-project-info-reports-plugin_a5a984b",
        "commit": "https://github.com/apache/maven-project-info-reports-plugin/commit/a5a984b160dcb7142e446a7f08008b1f0ba8f9ed",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/a5a984b160dcb7142e446a7f08008b1f0ba8f9ed/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=a5a984b160dcb7142e446a7f08008b1f0ba8f9ed",
                "deletions": 13,
                "filename": "src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "patch": "@@ -17,6 +17,7 @@\n  */\n \n import org.apache.maven.artifact.Artifact;\n+import org.apache.maven.artifact.repository.ArtifactRepository;\n import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.model.Dependency;\n import org.apache.maven.project.MavenProject;\n@@ -84,6 +85,13 @@\n      */\n     private MavenProjectBuilder mavenProjectBuilder;\n \n+    /**\n+     * @parameter expression=\"${localRepository}\"\n+     * @required\n+     * @readonly\n+     */\n+    private ArtifactRepository localRepository;\n+\n     /**\n      * @see org.apache.maven.reporting.MavenReport#getName(java.util.Locale)\n      */\n@@ -139,7 +147,7 @@ public void executeReport( Locale locale )\n         throws MavenReportException\n     {\n         DependenciesRenderer r = new DependenciesRenderer( getSink(), getProject(), locale, mavenProjectBuilder,\n-                                                           artifactFactory );\n+                                                           artifactFactory, localRepository );\n \n         r.render();\n     }\n@@ -163,8 +171,11 @@ public String getOutputName()\n \n         private MavenProjectBuilder mavenProjectBuilder;\n \n+        private ArtifactRepository localRepository;\n+\n         public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n-                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory )\n+                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory,\n+                                    ArtifactRepository localRepository )\n         {\n             super( sink );\n \n@@ -175,6 +186,8 @@ public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n             this.mavenProjectBuilder = mavenProjectBuilder;\n \n             this.artifactFactory = artifactFactory;\n+\n+            this.localRepository = localRepository;\n         }\n \n         public String getTitle()\n@@ -187,7 +200,7 @@ public void renderBody()\n             // Dependencies report\n             List dependencies = project.getDependencies();\n \n-            if ( ( dependencies == null ) || ( dependencies.isEmpty() ) )\n+            if ( dependencies == null || dependencies.isEmpty() )\n             {\n                 startSection( getTitle() );\n \n@@ -224,7 +237,7 @@ public void renderBody()\n                 MavenProject artifactProject = null;\n                 try\n                 {\n-                    artifactProject = getMavenProjectFromRepository( artifact );\n+                    artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                 }\n                 catch ( ProjectBuildingException e )\n                 {\n@@ -269,16 +282,14 @@ public void renderBody()\n                     MavenProject artifactProject = null;\n                     try\n                     {\n-                        artifactProject = getMavenProjectFromRepository( artifact );\n+                        artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                     }\n                     catch ( ProjectBuildingException e )\n                     {\n                         throw new IllegalArgumentException(\n                                                             \"Can't find a valid Maven project in the repository for the artifact [\"\n                                                                 + artifact + \"].\" );\n                     }\n-                    System.out.println( \"nklj-----------------------------\" );\n-                    System.out.println( artifactProject.getUrl() );\n                     tableRow( new String[] {\n                         artifact.getGroupId(),\n                         artifact.getArtifactId(),\n@@ -308,7 +319,7 @@ private Set getTransitiveDependencies( MavenProject project )\n             List dependencies = project.getDependencies();\n             Set artifacts = project.getArtifacts();\n \n-            if ( ( dependencies == null ) || ( artifacts == null ) )\n+            if ( dependencies == null || artifacts == null )\n             {\n                 return transitiveDependencies;\n             }\n@@ -341,18 +352,17 @@ private Set getTransitiveDependencies( MavenProject project )\n         /**\n          * Get the <code>Maven project</code> from the repository depending\n          * the <code>Artifact</code> given.\n-         * \n+         *\n          * @param artifact\n          *            an artifact\n          * @return the Maven project for the given artifact\n-         * @throws ProjectBuildingException\n+         * @throws org.apache.maven.project.ProjectBuildingException\n          *             if any\n          */\n-        private MavenProject getMavenProjectFromRepository( Artifact artifact )\n+        private MavenProject getMavenProjectFromRepository( Artifact artifact, ArtifactRepository localRepository )\n             throws ProjectBuildingException\n         {\n-            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), artifact\n-                .getRepository() );\n+            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), localRepository );\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/a5a984b160dcb7142e446a7f08008b1f0ba8f9ed/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "sha": "bbb8d7d317b790695e9e328d267589ff5efdcd49",
                "status": "modified"
            }
        ],
        "message": "fix NPE in dependencies report\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@220050 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-project-info-reports-plugin/commit/f67629a299c786f26a992d6920f1fb3de98b92b5",
        "patched_files": [
            "DependenciesReport.java"
        ],
        "repo": "maven-project-info-reports-plugin",
        "unit_tests": [
            "DependenciesReportTest.java"
        ]
    },
    "maven-project-info-reports-plugin_a9806b0": {
        "bug_id": "maven-project-info-reports-plugin_a9806b0",
        "commit": "https://github.com/apache/maven-project-info-reports-plugin/commit/a9806b060112e67d694180ab5ed0291b3188697d",
        "file": [
            {
                "additions": 46,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/a9806b060112e67d694180ab5ed0291b3188697d/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "changes": 75,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=a9806b060112e67d694180ab5ed0291b3188697d",
                "deletions": 29,
                "filename": "src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "patch": "@@ -387,46 +387,63 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n             Artifact artifact = node.getArtifact();\n             String id = artifact.getDependencyConflictId();\n \n-            try\n+            if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n             {\n-                MavenProject artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n-                String artifactDescription = artifactProject.getDescription();\n-                String artifactUrl = artifactProject.getUrl();\n-                String artifactName = artifactProject.getName();\n-\n-                sink.paragraph();\n-                sink.anchor( id );\n-                sink.bold();\n-                sink.text( artifactName );\n-                sink.bold_();\n-                sink.anchor_();\n-                sink.paragraph_();\n-\n-                if ( artifactDescription != null )\n+                try\n                 {\n+                    MavenProject artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n+                    String artifactDescription = artifactProject.getDescription();\n+                    String artifactUrl = artifactProject.getUrl();\n+                    String artifactName = artifactProject.getName();\n+\n                     sink.paragraph();\n-                    sink.text( artifactDescription );\n+                    sink.anchor( id );\n+                    sink.bold();\n+                    sink.text( artifactName );\n+                    sink.bold_();\n+                    sink.anchor_();\n                     sink.paragraph_();\n+\n+                    if ( artifactDescription != null )\n+                    {\n+                        sink.paragraph();\n+                        sink.text( artifactDescription );\n+                        sink.paragraph_();\n+                    }\n+\n+                    if ( artifactUrl != null )\n+                    {\n+                        sink.paragraph();\n+                        sink.link( artifactUrl );\n+                        sink.text( artifactUrl );\n+                        sink.link_();\n+                        sink.paragraph_();\n+                    }\n+                }\n+                catch ( ProjectBuildingException e )\n+                {\n+                    getLog().debug( e );\n                 }\n \n-                if ( artifactUrl != null )\n+                for ( Iterator deps = node.getChildren().iterator(); deps.hasNext(); )\n                 {\n-                    sink.paragraph();\n-                    sink.link( artifactUrl );\n-                    sink.text( artifactUrl );\n-                    sink.link_();\n-                    sink.paragraph_();\n+                    ReportResolutionListener.Node dep = (ReportResolutionListener.Node) deps.next();\n+                    printDescriptionsAndURLs( dep );\n                 }\n             }\n-            catch ( ProjectBuildingException e )\n+            else\n             {\n-                getLog().debug( e );\n-            }\n+                sink.paragraph();\n+                sink.anchor( id );\n+                sink.bold();\n+                sink.text( id );\n+                sink.bold_();\n+                sink.anchor_();\n+                sink.paragraph_();\n \n-            for ( Iterator deps = node.getChildren().iterator(); deps.hasNext(); )\n-            {\n-                ReportResolutionListener.Node dep = (ReportResolutionListener.Node) deps.next();\n-                printDescriptionsAndURLs( dep );\n+                sink.paragraph();\n+                sink.text( artifact.getFile().toString() );\n+                sink.paragraph_();\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/a9806b060112e67d694180ab5ed0291b3188697d/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "sha": "8942a3eedf10a8dcf5218cc0ef2855e58d0cff11",
                "status": "modified"
            }
        ],
        "message": "[MPIR-2] Dependencies report throws NullPointerException when a transitive dependency has system scope\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@409421 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-project-info-reports-plugin/commit/bb9c9148ef2f3bade6a5b63c41a44ed31a27407c",
        "patched_files": [
            "DependenciesReport.java"
        ],
        "repo": "maven-project-info-reports-plugin",
        "unit_tests": [
            "DependenciesReportTest.java"
        ]
    },
    "maven-project-info-reports-plugin_ce7a6c0": {
        "bug_id": "maven-project-info-reports-plugin_ce7a6c0",
        "commit": "https://github.com/apache/maven-project-info-reports-plugin/commit/ce7a6c0a0614f055184b98c9a3e794244a4e9381",
        "file": [
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/ce7a6c0a0614f055184b98c9a3e794244a4e9381/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java?ref=ce7a6c0a0614f055184b98c9a3e794244a4e9381",
                "deletions": 3,
                "filename": "src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "patch": "@@ -196,6 +196,19 @@ public void renderBody()\n             anonymousConnection = scm.getConnection();\n             devConnection = scm.getDeveloperConnection();\n \n+            if ( StringUtils.isEmpty( anonymousConnection ) &&\n+                StringUtils.isEmpty( devConnection ) &&\n+                StringUtils.isEmpty( scm.getUrl() ) )\n+            {\n+                startSection( getTitle() );\n+\n+                paragraph( getBundle( locale ).getString( \"report.scm.noscm\" ) );\n+\n+                endSection();\n+\n+                return;\n+            }\n+            \n             ScmRepository anonymousRepository = getScmRepository( anonymousConnection );\n             ScmRepository devRepository = getScmRepository( devConnection );\n \n@@ -264,7 +277,7 @@ private void renderWebAccesSection( String scmUrl )\n         {\n             startSection( getBundle( locale ).getString( \"report.scm.webaccess.title\" ) );\n \n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.webaccess.nourl\" ) );\n             }\n@@ -288,7 +301,8 @@ private void renderAnonymousAccessSection( ScmRepository anonymousRepository )\n         {\n             if ( ( isScmSystem( anonymousRepository, \"clearcase\" ) )\n                 || ( isScmSystem( anonymousRepository, \"perforce\" ) )\n-                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) )\n+                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) \n+                || ( StringUtils.isEmpty( anonymousConnection ) ) )\n             {\n                 return;\n             }\n@@ -313,6 +327,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.anonymousaccess.general.intro\" ) );\n \n+                if ( anonymousConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( anonymousConnection.substring( 4 ) );\n             }\n \n@@ -326,6 +345,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n          */\n         private void renderDeveloperAccessSection( ScmRepository devRepository )\n         {\n+            if ( StringUtils.isEmpty( devConnection ) )\n+            {\n+                return;\n+            }\n+            \n             startSection( getBundle( locale ).getString( \"report.scm.devaccess.title\" ) );\n \n             if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"clearcase\" ) ) )\n@@ -365,6 +389,11 @@ else if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"svn\" ) ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.devaccess.general.intro\" ) );\n \n+                if ( devConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( devConnection.substring( 4 ) );\n             }\n \n@@ -622,7 +651,7 @@ private void developerAccessSVN( SvnScmProviderRepository svnRepo )\n          */\n         public ScmRepository getScmRepository( String scmUrl )\n         {\n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 return null;\n             }",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/ce7a6c0a0614f055184b98c9a3e794244a4e9381/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "sha": "d94905136a33afcd2ccf984ed9e28590608493c2",
                "status": "modified"
            },
            {
                "additions": 56,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/ce7a6c0a0614f055184b98c9a3e794244a4e9381/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "changes": 56,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/test/projects/project-info-reports-plugin-test11/pom.xml?ref=ce7a6c0a0614f055184b98c9a3e794244a4e9381",
                "deletions": 0,
                "filename": "src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "patch": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+\n+<!--\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+ -->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.maven.report.projectinfo.test11</groupId>\n+  <artifactId>project-info-reports-plugin-test11</artifactId>\n+  <packaging>jar</packaging>\n+  <version>1.0-SNAPSHOT</version>\n+  <inceptionYear>2005</inceptionYear>\n+  <name>Maven ProjectInfo Report Test11</name>\n+  <description>MNG-695 developerConnection is empty</description>\n+  <url>http://maven.apache.org</url>\n+  <scm>\n+    <connection>scm:cvs:pserver:anoncvs@cvs.apache.org:/home/cvspublic:maven-plugins/dist</connection>\n+    <developerConnection/>\n+    <url>http://cvs.apache.org/</url>\n+  </scm>\n+  <developers>\n+    <developer>\n+      <id>vsiveton</id>\n+      <name>Vincent Siveton</name>\n+      <email>vsiveton@apache.org</email>\n+      <organization>Apache Software Foundation</organization>\n+      <roles>\n+        <role>Java Developer</role>\n+      </roles>\n+      <timezone>-5</timezone>\n+    </developer>\n+  </developers>\n+  <reporting>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-project-info-reports-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </reporting>\n+</project>",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/ce7a6c0a0614f055184b98c9a3e794244a4e9381/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "sha": "facf24045c4ab06d58c15f407ef8a29ada47db94",
                "status": "added"
            }
        ],
        "message": "MNG-695: Added more tests on anonymousConnection, devConnection and scmUrl to prevent NPE. Added the test case num 11.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@230612 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-project-info-reports-plugin/commit/ed067a6f72e505d88af8410dc65f84bda6607d34",
        "patched_files": [
            "ScmReport.java"
        ],
        "repo": "maven-project-info-reports-plugin",
        "unit_tests": [
            "ScmReportTest.java"
        ]
    },
    "maven-project-info-reports-plugin_f31d6de": {
        "bug_id": "maven-project-info-reports-plugin_f31d6de",
        "commit": "https://github.com/apache/maven-project-info-reports-plugin/commit/f31d6de036da3f9e78f841fbcabb8358b7df1518",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-project-info-reports-plugin/blob/f31d6de036da3f9e78f841fbcabb8358b7df1518/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-project-info-reports-plugin/contents/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=f31d6de036da3f9e78f841fbcabb8358b7df1518",
                "deletions": 0,
                "filename": "src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "patch": "@@ -289,6 +289,12 @@ public void renderBody()\n                 for ( Iterator i = artifacts.iterator(); i.hasNext(); )\n                 {\n                     Artifact artifact = (Artifact) i.next();\n+                    \n+                    /* MNG-1663, ignore system dependencies */\n+                    if ( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n+                    {\n+                        continue;\n+                    }\n \n                     MavenProject artifactProject;\n                     try",
                "raw_url": "https://github.com/apache/maven-project-info-reports-plugin/raw/f31d6de036da3f9e78f841fbcabb8358b7df1518/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "sha": "f2d10e2e1fca3b93295509e2fab36a8da852ea23",
                "status": "modified"
            }
        ],
        "message": "Ignore transitive dependencies with system scope that cause NullPointerException\nPR: MNG-1663\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@348389 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-project-info-reports-plugin/commit/0e37202173cabb5854a8e241bb643fc982991808",
        "patched_files": [
            "DependenciesReport.java"
        ],
        "repo": "maven-project-info-reports-plugin",
        "unit_tests": [
            "DependenciesReportTest.java"
        ]
    }
}