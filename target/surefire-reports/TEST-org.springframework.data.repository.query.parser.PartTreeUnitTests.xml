<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.02" tests="68" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.252-b09"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/june/npex_data/benchmarks-bears/Bears-88-buggy"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/media/4tb/npex/npex_data/benchmarks-bears/Bears-88-buggy"/>
    <property name="java.runtime.version" value="1.8.0_252-8u252-b09-1~18.04-b09"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.15.0-106-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/june"/>
    <property name="user.timezone" value="Asia/Seoul"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="june"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_252"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="identifiesFindFirstKUsersExplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="identifiesExtendedDeleteByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesContainingCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="identifiesExtendedCountByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="doesNotFailOnPropertiesContainingAKeyword" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="identifiesFindTopKDistinctUsersExplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="supportToStringWithoutSortOrder" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesSimpleDeleteByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesSpecialUnicodeCharactersMixedWithRegularCharactersCorrectly_Korean" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.002"/>
  <testcase name="shouldNotSupportLimitingCountQueries" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesLikeKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="detectPropertyWithAndKeywordPart" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="rejectsNullDomainClass" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesNearCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesStartingWithKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="queryPrefixShouldBeSupportedInRepositoryQueryMethods" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesSpecialCharactersOnlyCorrectly_Korean" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesSimpleCountByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="rejectsNullSource" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesSpecialCharactersCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="parsesNestedSpecialUnicodeCharactersMixedWithRegularCharactersCorrectly_KoreanNumbersSymbols" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="rejectsMultipleOrderBy" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindTopKUsersExplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="hasSortIfOrderByIsGivenWithAllIgnoreCase" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="detectsSpecificIgnoreCase" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesCountAndDistinctByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="detectsSpecificIgnoringCase" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesTrueKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindFirstImplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="hasSortIfOrderByIsGiven" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="buildsPartTreeFromEmptyPredicateCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindFirstKDistinctUsersExplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="supportToStringWithSortOrder" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesGreaterThanEqualCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindTop1Explicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesWithinCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesBeforeKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="parsesNestedSpecialUnicodeCharactersMixedWithRegularCharactersCorrectly_Korean" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesCombinedAndAndOrPropertiesCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="returnsAllPartsOfType" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="detectsDistinctCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.003"/>
  <testcase name="identifiesExtendedRemoveByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindTopKExplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="parsesOrPropertiesCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="returnsAllParts" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="disablesFindFirstKImplicitIfNotPresent" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesLessThanEqualCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesFalseKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesSimpleRemoveByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="detectPropertyPathWithOrKeywordPart" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="parsesAfterKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="detectsIgnoreAllCase" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesContainingKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesNotLikeKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindFirst1Explicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindFirstKExplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesExistsKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="resolvesPropertyPathFromGettersOnInterfaces" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="parsesIsNotContainingCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesSimplePropertyCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesSimpleExistsByCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="buildsPartTreeForNotContainingCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="identifiesFindTopImplicit" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="shouldNotSupportLimitingExistQueries" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="detectPropertyWithOrKeywordPart" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesAndPropertiesCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
  <testcase name="parsesEndingWithKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0.001"/>
  <testcase name="parsesRegexKeywordCorrectly" classname="org.springframework.data.repository.query.parser.PartTreeUnitTests" time="0"/>
</testsuite>