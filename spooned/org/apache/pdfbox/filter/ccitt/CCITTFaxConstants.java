/* Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
package org.apache.pdfbox.filter.ccitt;
/**
 * Constants for CCITT Fax Filter.
 */
final class CCITTFaxConstants {
    /**
     * A constant for group 3 1D encoding (ITU T.4).
     */
    final int COMPRESSION_GROUP3_1D = 0;

    /**
     * A constant for group 3 2D encoding (ITU T.4).
     */
    final int COMPRESSION_GROUP3_2D = 1;

    /**
     * A constant for group 4 2D encoding (ITU T.6).
     */
    final int COMPRESSION_GROUP4_2D = 2;

    // Format: First 8 bits: length of pattern, Second 8 bits: pattern
    /**
     * The white terminating code words.
     */
    public static final short[] WHITE_TERMINATING = new short[]{ 0x835, 0x607, 0x407, 0x408, 0x40b, 0x40c, 0x40e, 0x40f, 0x513, 0x514, 0x507, 0x508, 0x608, 0x603, 0x634, 0x635, 0x62a, 0x62b, 0x727, 0x70c, 0x708, 0x717, 0x703, 0x704, 0x728, 0x72b, 0x713, 0x724, 0x718, 0x802, 0x803, 0x81a, 0x81b, 0x812, 0x813, 0x814, 0x815, 0x816, 0x817, 0x828, 0x829, 0x82a, 0x82b, 0x82c, 0x82d, 0x804, 0x805, 0x80a, 0x80b, 0x852, 0x853, 0x854, 0x855, 0x824, 0x825, 0x858, 0x859, 0x85a, 0x85b, 0x84a, 0x84b, 0x832, 0x833, 0x834 };

    /**
     * The black terminating code words.
     */
    public static final short[] BLACK_TERMINATING = new short[]{ 0xa37, 0x302, 0x203, 0x202, 0x303, 0x403, 0x402, 0x503, 0x605, 0x604, 0x704, 0x705, 0x707, 0x804, 0x807, 0x918, 0xa17, 0xa18, 0xa08, 0xb67, 0xb68, 0xb6c, 0xb37, 0xb28, 0xb17, 0xb18, 0xcca, 0xccb, 0xccc, 0xccd, 0xc68, 0xc69, 0xc6a, 0xc6b, 0xcd2, 0xcd3, 0xcd4, 0xcd5, 0xcd6, 0xcd7, 0xc6c, 0xc6d, 0xcda, 0xcdb, 0xc54, 0xc55, 0xc56, 0xc57, 0xc64, 0xc65, 0xc52, 0xc53, 0xc24, 0xc37, 0xc38, 0xc27, 0xc28, 0xc58, 0xc59, 0xc2b, 0xc2c, 0xc5a, 0xc66, 0xc67 };

    /**
     * The white make-up code words.
     */
    public static final short[] WHITE_MAKE_UP = new short[]{ 0x51b, 0x512, 0x617, 0x737, 0x836, 0x837, 0x864, 0x865, 0x868, 0x867, 0x9cc, 0x9cd, 0x9d2, 0x9d3, 0x9d4, 0x9d5, 0x9d6, 0x9d7, 0x9d8, 0x9d9, 0x9da, 0x9db, 0x998, 0x999, 0x99a, 0x618, 0x99b };

    /**
     * The black make-up code words.
     */
    public static final short[] BLACK_MAKE_UP = new short[]{ 0xa0f, 0xcc8, 0xcc9, 0xc5b, 0xc33, 0xc34, 0xc35, 0xd6c, 0xd6d, 0xd4a, 0xd4b, 0xd4c, 0xd4d, 0xd72, 0xd73, 0xd74, 0xd75, 0xd76, 0xd77, 0xd52, 0xd53, 0xd54, 0xd55, 0xd5a, 0xd5b, 0xd64, 0xd65 };

    /**
     * The long make-up code words.
     */
    public static final short[] LONG_MAKE_UP = new short[]{ 0xb08, 0xb0c, 0xb0d, 0xc12, 0xc13, 0xc14, 0xc15, 0xc16, 0xc17, 0xc1c, 0xc1d, 0xc1e, 0xc1f };

    /**
     * The EOL code word.
     */
    public static final short EOL_CODE = 0xc01;
}